<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Stop returning NULL components</title>
      <author>Daniel Silva</author>
      <pubDate>Wed, 26 May 2021 13:29:42 +0000</pubDate>
      <link>https://dev.to/ucvdesh/stop-returning-null-components-312k</link>
      <guid>https://dev.to/ucvdesh/stop-returning-null-components-312k</guid>
      <description>&lt;p&gt;Conditional rendering on React helps you build your apps avoiding unnecessary renders depending on some validations, and it can be used on tooltips, modals, drawer menus, etcetera. But, if we do it wrong, we can end up losing performance instead of improving our app.&lt;/p&gt;

&lt;p&gt;It's pretty common to see something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShow&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MyChildComponent&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyChildComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is a mistake that can potentially increase a lot the performance of your application. Why? Because this is not conditional rendering, what we are doing in this example is returning a &lt;strong&gt;NULL&lt;/strong&gt; component or, in other words, a component that renders &lt;strong&gt;NULL&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But you guys may think "Yeah, but...It's null, so it doesn't do anything". &lt;em&gt;Au Contraire&lt;/em&gt; my friend, and the reason relies on its name NULL &lt;strong&gt;&lt;em&gt;COMPONENT&lt;/em&gt;&lt;/strong&gt;, and what does a component have? Right, a lifecycle. So, when we return a Null component we still have a full lifecycle that will trigger depending on what we do on their parent component.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The true &lt;strong&gt;Conditional Rendering&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To avoid these problems the correct way to do is to do the conditionals on the parent component to avoid even call that child component. We're gonna be using the same example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShow&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;MyChildComponent&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyChildComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Moving the show validation to the parent component instead of the child will make the rendering to be truly conditional. The only lifecycle that will trigger in this example will be only the &lt;code&gt;MyComponent&lt;/code&gt; lifecycle because the &lt;code&gt;MyChildComponent&lt;/code&gt; isn't even being called.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why if we need the validation inside the component?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That can happen if we are working on legacy code and we need to fix something without changing every single one of the files where the component is being called. Then, we need to check if the validation will not change a lot in a short amount of time.&lt;/p&gt;

&lt;p&gt;If that prop will not change a lot, we can use the &lt;code&gt;memo()&lt;/code&gt; function provided by React to memoize that component and avoid unnecessary re-renders on that component and improve the performance of the app without a huge refactor. But, if this prop changes a lot, then we need to change the validation as we learn before, otherwise, the performance may drop.&lt;/p&gt;

&lt;p&gt;If you're building something like a wrapper component that will have a conditional render inside of it but will always be rendered, for example, a Tooltip component wrapper another tip can be to manage the show as a state INSIDE the tooltip component and wrap it with the &lt;code&gt;memo()&lt;/code&gt; function to avoid unnecessary re-renderings and prop passing to make the component reusable, autonomous and performant.&lt;/p&gt;




&lt;p&gt;Do you have a different opinion? Do you think just like me? Do you like to add something to the post? Do it in the comments below!&lt;/p&gt;

&lt;p&gt;I do this completely non-profit, but if you want to help me you can go &lt;a href="https://www.buymeacoffee.com/danielsilva"&gt;here and buy me a coffee&lt;/a&gt; ;)&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to mask Text and TextInput components in React Native and Expo</title>
      <author>Akinn Rosa</author>
      <pubDate>Wed, 26 May 2021 13:23:24 +0000</pubDate>
      <link>https://dev.to/akinncar/how-to-mask-text-and-textinput-components-in-react-native-and-expo-2l49</link>
      <guid>https://dev.to/akinncar/how-to-mask-text-and-textinput-components-in-react-native-and-expo-2l49</guid>
      <description>&lt;p&gt;In this post, I will show you how to work with custom masks in React Native and Expo, available for iOS, Android, and Web!&lt;/p&gt;

&lt;p&gt;We will use a library called &lt;a href="https://www.npmjs.com/package/react-native-mask-text"&gt;react-native-mask-text&lt;/a&gt;, is a full javascript library without native code, then you can use with all CLI of React Native environment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---1eOkQ7X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jrauuwx3rxh2xshw38g5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1eOkQ7X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jrauuwx3rxh2xshw38g5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can simply start a new project with &lt;code&gt;npx react-native init&lt;/code&gt; or &lt;code&gt;expo init&lt;/code&gt; on your shell.&lt;/p&gt;

&lt;p&gt;Let's assume that you already have a React Native CLI or Expo CLI created. You will need to add the mask library:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  NPM:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i react-native-mask-text
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#yarn"&gt;
  &lt;/a&gt;
  Yarn:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add react-native-mask-text
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the installation, you can import two components from this library: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;MaskedTextInput /&amp;gt;&lt;/code&gt; to add a custom mask to React Native TextInput component.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;MaskedText /&amp;gt;&lt;/code&gt; to add a custom mask to React Native Text component.&lt;/p&gt;

&lt;p&gt;We have a &lt;code&gt;mask&lt;/code&gt; prop in our components, then allow us to add a custom mask format passing string with format that we need.&lt;/p&gt;

&lt;p&gt;Pattern used in masked components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;9&lt;/code&gt; - accept digit.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;A&lt;/code&gt; - accept alpha.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;S&lt;/code&gt; - accept alphanumeric.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this example, let's see a simple implementation of a custom date mask.&lt;br&gt;
Below you will see the use of each of the two components:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maskedtextinput-with-custom-mask"&gt;
  &lt;/a&gt;
  MaskedTextInput with custom mask:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MaskedTextInput&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-native-mask-text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;maskedValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMaskedValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;unMaskedValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUnmaskedValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MaskedTextInput&lt;/span&gt;
        &lt;span class="na"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"99/99/9999"&lt;/span&gt;
        &lt;span class="na"&gt;onChangeText&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rawText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;setMaskedValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nx"&gt;setUnmaskedValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rawText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;keyboardType&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"numeric"&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  );
}

const styles = StyleSheet.create(&lt;span class="si"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ecf0f1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;borderWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="si"&gt;}&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see that the component accept same properties of TextInput from React Native, we used &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;keyboardType&lt;/code&gt;, and you can use your intellisense to discover other props.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maskedtext-with-custom-mask"&gt;
  &lt;/a&gt;
  MaskedText with custom mask:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;MaskedText&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-native-mask-text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MaskedText&lt;/span&gt; &lt;span class="na"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"99/99/9999"&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;paragraph&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        30081990
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;MaskedText&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ecf0f1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;paragraph&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;textAlign&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How you can see, we can add native props from React Native Text component to our MaskedText component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it! 🎉
&lt;/h2&gt;

&lt;p&gt;Now, you can add whatever mask you want to your Text and Input components from React Native!&lt;br&gt;
If you enjoy this content, don't forget to give a star for react-native-mask-text library on Github.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/akinncar/react-native-mask-text"&gt;https://github.com/akinncar/react-native-mask-text&lt;/a&gt;&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
      <category>ios</category>
      <category>android</category>
    </item>
    <item>
      <title>5 websites that will help you with the design and branding of your next project.</title>
      <author>Swastik Yadav</author>
      <pubDate>Wed, 26 May 2021 13:22:52 +0000</pubDate>
      <link>https://dev.to/swastikyadav/5-websites-that-will-help-you-with-the-design-and-branding-of-your-next-project-2kcn</link>
      <guid>https://dev.to/swastikyadav/5-websites-that-will-help-you-with-the-design-and-branding-of-your-next-project-2kcn</guid>
      <description>&lt;p&gt;Are you a FrontEnd developer?&lt;/p&gt;

&lt;p&gt;Here are five websites that will help you with the design and branding of your next project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-colorable"&gt;
  &lt;/a&gt;
  1 &lt;a href="https://colorable.jxnblk.com/"&gt;Colorable&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Visualize the combination of background and text colors. Maybe you are building a dark, dim, or light theme.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XKHR_F4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkjrib3sifnp78fqcln7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKHR_F4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkjrib3sifnp78fqcln7.png" alt="colorable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-coolors-color-scheme-generator"&gt;
  &lt;/a&gt;
  2 &lt;a href="https://coolors.co/generate"&gt;Coolors: Color scheme generator&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Generate different color palettes. Select primary and secondary colors for your project branding.&lt;/p&gt;

&lt;p&gt;Also shows your colors as gradients.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iTsfrLvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si3idd8s8hzm5l0xxl2r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iTsfrLvz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/si3idd8s8hzm5l0xxl2r.png" alt="coolars"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-undraw-illustrations-for-any-idea"&gt;
  &lt;/a&gt;
  3 &lt;a href="https://undraw.co/"&gt;UnDraw: illustrations for any idea&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Create better-designed websites. Browse to find the images that fit your brand.&lt;/p&gt;

&lt;p&gt;Customize the color to match your brand and use it as a normal image.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QPqUc9py--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2OGvLUVkAAK1tH%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPqUc9py--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2OGvLUVkAAK1tH%3Fformat%3Djpg%26name%3Dlarge" alt="undraw screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-archetype-typography-design-tool"&gt;
  &lt;/a&gt;
  4 &lt;a href="https://archetypeapp.com/"&gt;Archetype: Typography Design Tool&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Pick font, define size, adjust spacing and see how your text will look and feel.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--85ZPVbEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2OIY1wVgAYzVXh%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--85ZPVbEr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2OIY1wVgAYzVXh%3Fformat%3Djpg%26name%3Dlarge" alt="archetype"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-screenlane-web-and-mobile-design-inspiration"&gt;
  &lt;/a&gt;
  5 &lt;a href="https://screenlane.com/"&gt;ScreenLane: Web and mobile design inspiration&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Get amazing web and mobile version layout and design ideas for your next project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p3aabimL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2OJ-K0VoAsTD-7%3Fformat%3Djpg%26name%3Dmedium" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p3aabimL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2OJ-K0VoAsTD-7%3Fformat%3Djpg%26name%3Dmedium" alt="screenlane"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thank you for reading.&lt;/p&gt;

&lt;p&gt;If you enjoyed this read. Consider following me on &lt;a href="https://twitter.com/swastikJsDev"&gt;Twitter&lt;/a&gt;, There I keep sharing such stuff about full-stack web development and design. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>design</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Maximizing the Product Research You're Already Doing</title>
      <author>Jordan Bowman</author>
      <pubDate>Wed, 26 May 2021 13:18:12 +0000</pubDate>
      <link>https://dev.to/jrdnbwmn/maximizing-the-product-research-you-re-already-doing-3oj3</link>
      <guid>https://dev.to/jrdnbwmn/maximizing-the-product-research-you-re-already-doing-3oj3</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5N3VxJ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqmk1i31a21ki2j0w5g0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5N3VxJ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqmk1i31a21ki2j0w5g0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Insightful user research can be expensive and time consuming.&lt;/p&gt;

&lt;p&gt;There are many to cut down the cost of research, but one of the most important is to focus on extracting as much value as possible from your existing research efforts.&lt;/p&gt;

&lt;p&gt;Let's explore ways to maximize your research to make it last longer, yield more results, and ultimately drive better experiences for customers.&lt;/p&gt;

&lt;p&gt;We'll look at specific tactics for the planning, conducting, synthesizing, and documenting phases of research.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planning"&gt;
  &lt;/a&gt;
  Planning
&lt;/h2&gt;

&lt;p&gt;How can we avoid "research waste" before our research ever begins?&lt;/p&gt;

&lt;p&gt;Before starting a research project, make sure you're providing &lt;em&gt;new additional value&lt;/em&gt; and that the research hasn't been done before. This is most easily done by reaching out to other team members and departments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#find-out-what-your-team-has-already-learned-about-this-topic"&gt;
  &lt;/a&gt;
  Find out what your team has already learned about this topic
&lt;/h3&gt;

&lt;p&gt;Who could you ask that might already know the answer? What questions can you already answer? Try to avoid spending time asking questions your team may have already researched. Be sure to look outside your design or product team to other valuable teams such as data science, sales, or customer support. I've been able to skip ahead on previous projects after discovering a long-forgotten slideshow containing very useful data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#find-the-right-method-for-your-time-frame"&gt;
  &lt;/a&gt;
  Find the right method for your time frame
&lt;/h3&gt;

&lt;p&gt;How much time do you really have? Once you have a timeline, consider how many data points you really need to answer your questions, and then choose the right method (for example, surveys can gather more data points than in-person interviews).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leverage-others-to-find-participants"&gt;
  &lt;/a&gt;
  Leverage others to find participants
&lt;/h3&gt;

&lt;p&gt;In many instances, other departments know users exactly like the ones you need to talk to. Make relationships. Ask for help. You don't need to recruit every research participant from scratch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understand-what-other-teams-need"&gt;
  &lt;/a&gt;
  Understand what other teams need
&lt;/h3&gt;

&lt;p&gt;As you make relationships with other departments, try to understand how you can mutually benefit each other.&lt;/p&gt;

&lt;p&gt;After running the &lt;a href="https://uxtools.co/survey-2020"&gt;Design Tools Survey&lt;/a&gt; for a few years, I discovered  investors, professors, and design companies were using the survey data to increase their understanding of the market. To better meet their needs, I added more questions about the demographics of the survey respondents. This yielded richer data for the viewers, and came at very little cost to me.&lt;/p&gt;

&lt;p&gt;In my previous role at Neighbor, our UX team partnered with our very talented "customer activation team." This team called customers every day to help them set up our product. They added two very specific questions to their post-call survey to help us understand customer roadblocks. Implementing solutions to these problems eased the burden on the activation team while also yielding invaluable data for designers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In summary&lt;/strong&gt;: Reach out. Ask questions. Meet with other departments. Team up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A note about bad data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In some cases you may discover that research was conducted, but not well. If you're able to track down the original owners of that research, use them as a resource to avoid the same mistakes. What would they have changed?&lt;/p&gt;

&lt;p&gt;If the research is poor due to a lack of skill, consider redoing the research yourself. If it's due to data integrity issues (biased sample, inaccessible information due to privacy, etc.) try to understand if you can overcome these issues. If you can't, consider whether you need to take a different route.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conducting"&gt;
  &lt;/a&gt;
  Conducting
&lt;/h2&gt;

&lt;p&gt;How can we optimize each session to create value for more than one specific project?&lt;/p&gt;

&lt;p&gt;As you go about performing and conducting your research, do it with an ear toward the future. While you have the full attention of a participant, try to gain every valuable insights you possibly can from them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#listen-on-behalf-of-others"&gt;
  &lt;/a&gt;
  Listen on behalf of others
&lt;/h3&gt;

&lt;p&gt;As you gather responses, conduct interviews, and search for other data, be sure to listen for the questions you heard from other departments. As you hear topics they're interested in, send them a note after the call or drop them a link to your findings. Help them get excited and promote your work. The more attention you can bring to the value of your work, the more likely it is you can do more of it in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#invite-others-to-listen-in-or-participate"&gt;
  &lt;/a&gt;
  Invite others to listen in or participate
&lt;/h3&gt;

&lt;p&gt;You may already be inviting someone to take notes so you can focus on the conversation (or maybe you're using an audio transcribing service). Inviting people from other disciplines can go a long way in building relationships and empathy for your customers, and increasing respect for your research efforts. Consider inviting anyone involved in implementing this project (such as a developer) or anyone impacted by the outcome of this project (such as the marketing or sales team).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick tip&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Give each invited guest an agenda of what you'll cover during the research. Let them know how you expect them to participate. This might help avoid unwanted confusion during the session.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#let-the-conversation-loose"&gt;
  &lt;/a&gt;
  Let the conversation loose
&lt;/h3&gt;

&lt;p&gt;The best researchers know when to let the user interviews go on tangents to uncover unplanned but highly valuable insights. You may find that you have extra time during your session, or that your participant doesn't meet your expectations. Consider leveraging that time to learn about another topic (for yourself or one of your business partners). If you know what's coming next on your roadmap, you might be able to steer the conversation in that direction.&lt;/p&gt;

&lt;p&gt;While conducting usability tests and interviews at Lucidchart, I sometimes had trouble recruiting the right participants. Some participants would think they had use a technical feature when they never had. I could identify the mismatch within a few minutes, so I would use the rest of the time to ask about other topics and ideas. If I could find a strong fit, I would pass the participant's name along to another team or keep them in mind for my next project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In summary:&lt;/strong&gt; Listen for related ideas. Be a representative for other teams.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#synthesizing"&gt;
  &lt;/a&gt;
  Synthesizing
&lt;/h2&gt;

&lt;p&gt;How can we pull more actionable data from notes and transcripts?&lt;/p&gt;

&lt;p&gt;One of the best times to glean extra insights from your research is while dissecting each of your research sessions or responses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#synthesize-with-others"&gt;
  &lt;/a&gt;
  Synthesize with others
&lt;/h3&gt;

&lt;p&gt;Pull in other stakeholders and teams while you synthesize your findings (I find this is better done in partners or groups anyway). What can they learn? What can they discover and expose that you can't? For example, when I synthesize with people frequently on the phone I'll hear, "Oh, people like this call me all the time, this is a very real issue." I would miss those insights working alone.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tag-useful-insights-for-others"&gt;
  &lt;/a&gt;
  Tag useful insights for others
&lt;/h3&gt;

&lt;p&gt;What &lt;a href="https://uxtools.co/blog/fixing-user-personas/"&gt;psychographics&lt;/a&gt;, behaviors, or circumstances about this session could be useful for others to know? Consider annotating these as you review responses, notes, and transcriptions. Try to flag them where you can with tagging tools like those you'll find in &lt;a href="https://dovetailapp.com/?ref=uxtools.co"&gt;Dovetail&lt;/a&gt; or &lt;a href="https://www.userzoom.com/?ref=uxtools.co"&gt;UserZoom&lt;/a&gt;. Simple comments can work as well in other documentation tools like &lt;a href="https://www.notion.so/?ref=uxtools.co"&gt;Notion&lt;/a&gt; or &lt;a href="https://www.google.com/docs/about/?ref=uxtools.co"&gt;Google Docs&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#evangelize-the-research"&gt;
  &lt;/a&gt;
  Evangelize the research
&lt;/h3&gt;

&lt;p&gt;As much as possible, try to democratize the new insights from your research. Help your team and your company recognize the importance of being a research-led organization.&lt;/p&gt;

&lt;p&gt;In my previous role at Neighbor, I would present any research insights in our weekly "sprint demos" meeting (traditionally reserved for engineers to present what they built during the week). This forum was the perfect for showcasing research impact and insights. I could also field questions and comments about the research. I received Slack messages from co-workers during and after this meeting who were interested in consuming the research further or partnering with me in the future.&lt;/p&gt;

&lt;p&gt;Another technique I've always liked (but never been able to implement) is the "research newsletter" model. I first heard about from this idea Wade Shearer, former VP of UX at Workfront. His team regularly sent out a newsletter outlining recent research efforts and insights. While many of the ideas I've given involve partnering with one or two people, this is an exciting way to scale your research to the rest of the organization.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In summary:&lt;/strong&gt; Pull others in as you analyze research. Thoughtfully annotate it it and broadcast it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#documenting"&gt;
  &lt;/a&gt;
  Documenting
&lt;/h2&gt;

&lt;p&gt;How can we increase the lifespan of our hard-earned insights?&lt;/p&gt;

&lt;p&gt;Research that is carefully organized and stored for the future is much more likely to be discovered and utilized by others who need it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tag-and-categorize-your-projects"&gt;
  &lt;/a&gt;
  Tag and categorize your projects
&lt;/h3&gt;

&lt;p&gt;Find a tool that allows for tagging and referencing, like &lt;a href="https://dovetailapp.com/?ref=uxtools.co"&gt;Dovetail&lt;/a&gt;, &lt;a href="https://www.notion.so/?ref=uxtools.co"&gt;Notion&lt;/a&gt;, &lt;a href="https://coda.io/?ref=uxtools.co"&gt;Coda&lt;/a&gt;, or &lt;a href="https://airtable.com/?ref=uxtools.co"&gt;Airtable&lt;/a&gt;. I try to organize my projects something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ehvTXvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k4be44hh1jxtqojyaya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ehvTXvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5k4be44hh1jxtqojyaya.png" alt="Example table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This type of organization has several benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The easier someone can find it, the less likely they are to conduct a duplicate research project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I can find my past research if I can remember just a few properties about it ("I can't remember what we called it, but it was a card sort with iOS users a few years ago").&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If others have access to this documentation, they can more easily find projects relevant to them by filtering and sorting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I can quickly report on the health, status, and quality of research efforts by having this at my finger tips.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#store-research-in-an-accessible-searchable-place"&gt;
  &lt;/a&gt;
  Store research in an accessible, searchable place
&lt;/h3&gt;

&lt;p&gt;Storage options like Google Drive can be a death sentence for research. They're often difficult to search and preview the content inside a document (not to mention taking several seconds to load a document only to find out it's the wrong one). Besides the tools mentioned above, you might have better luck in your company's knowledge base (like &lt;a href="https://www.notion.so/?ref=uxtools.co"&gt;Notion&lt;/a&gt;, &lt;a href="https://slab.com/?ref=uxtools.co"&gt;Slab&lt;/a&gt;, or &lt;a href="https://www.atlassian.com/software/confluence?ref=uxtools.co"&gt;Confluence&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-culture-of-documentation-centralization"&gt;
  &lt;/a&gt;
  Create a culture of documentation centralization
&lt;/h3&gt;

&lt;p&gt;Try to encourage your team to store in the same place, and find workarounds to help teams still feel comfortable with their own system.&lt;/p&gt;

&lt;p&gt;A recent team I worked with liked to have their own area in the knowledge base where they documented their own projects, research, notes. Instead of forcing them to conform to my master "user research" area, I was able to create entries in my table (above) that linked to their original documentation. Both of us achieved the goals we wanted without sacrificing the the needs of the other team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In summary:&lt;/strong&gt; Organize your research for the future. Store it in a way that others can repeat this cycle without extra work.&lt;/p&gt;




&lt;p&gt;Admittedly, fostering your research practice in this way could take some extra effort during the process. In my experience, you can save just as much time in the long run. It also allows you to extract as much value as possible from all the research you do. Sometimes "more research" isn't the answer, "better research" is.&lt;/p&gt;

&lt;p&gt;Read the original here: &lt;a href="https://uxtools.co/blog/how-to-maximize-the-user-research-youre-already-doing/"&gt;https://uxtools.co/blog/how-to-maximize-the-user-research-youre-already-doing/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>design</category>
    </item>
    <item>
      <title>How to Create Your Own Next.js RSS Reader App</title>
      <author>Ashlee (she/her)</author>
      <pubDate>Wed, 26 May 2021 12:45:34 +0000</pubDate>
      <link>https://dev.to/ashleemboyer/how-to-create-your-own-next-js-rss-reader-app-2bco</link>
      <guid>https://dev.to/ashleemboyer/how-to-create-your-own-next-js-rss-reader-app-2bco</guid>
      <description>&lt;p&gt;I recently came across &lt;a href="https://twitter.com/SaraSoueidan/status/1390598514774847496"&gt;a tweet from Sara Soueidan&lt;/a&gt; applauding folks who provide an RSS feed on their site. Sara is someone I highly admire in frontend web development and accessibility, but I had so little knowledge of RSS feeds and so many questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What the heck are they?&lt;/li&gt;
&lt;li&gt;What are they for?&lt;/li&gt;
&lt;li&gt;I thought people didn't use them anymore?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you also have questions like this, I recommend reading &lt;a href="https://rss.com/blog/how-do-rss-feeds-work/"&gt;How Do RSS Feeds Work?&lt;/a&gt; right from RSS.com. The first few words really sum it up:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Imagine being able to log into one dashboard and getting the latest news and events from all of your favorite websites, blogs, or podcasts? With RSS feeds, it’s possible!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;RSS feeds mean I can read all of my favorite blogs in one place?? And I don't &lt;em&gt;have&lt;/em&gt; to subscribe to newsletters to know when a new post has been published?? That sounds so lovely! I knew then that I definitely needed to figure out how to provide an RSS feed for my own site.&lt;/p&gt;

&lt;p&gt;In order to better understand how to create an RSS feed for my site, I needed to better understand how they are used. This is where I got the idea to create my own RSS reader app! Once I had the app finished, it also doubled as a way for me to test my RSS feed as I developed it.&lt;/p&gt;

&lt;p&gt;I had a ton of fun with it so I decided to share my findings with y'all in case you also want to make your own RSS reader app. I hope you find the instructions below helpful and as always, let me know on Twitter if you have any questions!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-your-own-nextjs-rss-reader-app"&gt;
  &lt;/a&gt;
  How to Create Your Own Next.js RSS Reader App
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#fork-and-clone-the-repo"&gt;
  &lt;/a&gt;
  Fork and clone the repo
&lt;/h3&gt;

&lt;p&gt;First, you need to create a fork of the starter code.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://github.com/ashleemboyer/nextjs-rss-reader-starter"&gt;the GitHub repository&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Click the "Fork" button at the top right of the page&lt;/li&gt;
&lt;li&gt;Follow the steps provided by GitHub&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Second, clone the fork you've created onto your machine and install the dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone &amp;lt;your fork&amp;gt;    &lt;span class="c"&gt;# Clones the fork&lt;/span&gt;
yarn                     &lt;span class="c"&gt;# Installs the dependencies&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#set-up-firebase-authentication"&gt;
  &lt;/a&gt;
  Set up Firebase Authentication
&lt;/h3&gt;

&lt;p&gt;Third, you need to create a Firebase project since it'll handle authentication. You want this app to have authentication so that other people aren't driving up your API requests that will be made to RSS to JSON (we'll set that up next).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://console.firebase.google.com"&gt;console.firebase.google.com&lt;/a&gt; and make sure you're logged in with the Google account you want to use.&lt;/li&gt;
&lt;li&gt;Click the card that says "Add project". It should be the first one listed.&lt;/li&gt;
&lt;li&gt;Enter a project name. I'm going to use &lt;code&gt;nextjs-rss-reader&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Toggle "Enable Google Analytics for this project" to off.&lt;/li&gt;
&lt;li&gt;Click "Create project".&lt;/li&gt;
&lt;li&gt;Click "Continue" when your new project is ready.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a video showing these steps (the project name is different):&lt;/p&gt;

&lt;p&gt;Firebase makes it easy for us to set up email/password authentication in our app. It's also easy to add a user for ourselves right from the console. Make sure you use a real email address and a secure password for your user. This is how you're protecting your feed!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="//console.firebase.google.com"&gt;the Firebase console&lt;/a&gt; for your project.&lt;/li&gt;
&lt;li&gt;Go to the "Authentication" page under "Build".&lt;/li&gt;
&lt;li&gt;Click "Get Started".&lt;/li&gt;
&lt;li&gt;You should be on the "Sign-in method" tab.&lt;/li&gt;
&lt;li&gt;Click "Email/Password".&lt;/li&gt;
&lt;li&gt;Enable the first toggle.&lt;/li&gt;
&lt;li&gt;Click "Save".&lt;/li&gt;
&lt;li&gt;Switch to the "Users" tab.&lt;/li&gt;
&lt;li&gt;Click "Add user".&lt;/li&gt;
&lt;li&gt;Enter a secure email and password.&lt;/li&gt;
&lt;li&gt;Click "Add user".&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's a video showing these steps:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-an-rss-to-json-account"&gt;
  &lt;/a&gt;
  Create an RSS to JSON account
&lt;/h3&gt;

&lt;p&gt;Next, let's set up an &lt;a href="//rss2json.com"&gt;RSS to JSON&lt;/a&gt; account so we can get an API key for making API requests. I personally have a paid plan because of the number of feeds I subscribe to, but the free plan is pretty nice! At the time of this writing, the free plan updates a feed once an hour, allows 10,000 requests per day, and supports 25 feeds. The starter code is currently set up to generate your site no more than once per day, so at the very most, you'll be making 1 request per feed per day.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sign up for an RSS to JSON account at &lt;a href="https://rss2json.com/sign-up"&gt;this link&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Get your API key from &lt;a href="https://rss2json.com/me/api_key"&gt;the My Account page&lt;/a&gt; and have it ready for the next step.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#create-a-env-file"&gt;
  &lt;/a&gt;
  Create a .env file
&lt;/h3&gt;

&lt;p&gt;In the root of your forked project, create a file called &lt;code&gt;.env&lt;/code&gt;. It will have four items in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;RSS_2_JSON_API_KEY=&amp;lt;your RSS to JSON api key&amp;gt;
NEXT_PUBLIC_FIREBASE_API_KEY=&amp;lt;your Firebase project's API key&amp;gt;
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=&amp;lt;your Firebase project's auth domain&amp;gt;
NEXT_PUBLIC_FIREBASE_PROJECT_ID=&amp;lt;your Firebase project ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Put your RSS to JSON API key from the previous step with the &lt;code&gt;RSS_2_JSON_API_KEY&lt;/code&gt; item. You can get the other items from Firebase after registering your app. Here are the steps for that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="//console.firebase.google.com"&gt;the Firebase console&lt;/a&gt; for your project.&lt;/li&gt;
&lt;li&gt;Go to the project settings.&lt;/li&gt;
&lt;li&gt;Scroll to the bottom of the page where it says "Your apps."&lt;/li&gt;
&lt;li&gt;Click the "&amp;lt;/&amp;gt;" button to register your app for web.&lt;/li&gt;
&lt;li&gt;For "App nickname", enter &lt;code&gt;nextjs-rss-reader&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click the "Register app" button.&lt;/li&gt;
&lt;li&gt;Copy and paste the &lt;code&gt;apiKey&lt;/code&gt;, &lt;code&gt;authDomain&lt;/code&gt;, and &lt;code&gt;projectId&lt;/code&gt; values with the last three items in your &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#start-the-app"&gt;
  &lt;/a&gt;
  Start the app
&lt;/h3&gt;

&lt;p&gt;We're ready to go! Start the app with &lt;code&gt;yarn dev&lt;/code&gt; and go to &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; in your browser. You should be redirected to the login page where you can enter your email and password for the user you created in the second part of the &lt;a href="#set-up-firebase-authentication"&gt;Set up Firebase Authentication&lt;/a&gt; section above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YeDjmmwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/ashleemboyer-2018.appspot.com/o/images%252F2021%252F05%252Fcreate-your-own-nextjs-rss-reader-app%252Flogin-page.png%3Falt%3Dmedia%26token%3D0ec4c0d0-6939-4858-a76d-31bd7d2f5010" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YeDjmmwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/ashleemboyer-2018.appspot.com/o/images%252F2021%252F05%252Fcreate-your-own-nextjs-rss-reader-app%252Flogin-page.png%3Falt%3Dmedia%26token%3D0ec4c0d0-6939-4858-a76d-31bd7d2f5010" alt='Browser window screenshot with a background of large, dark green leaves. The window shows a white webpage showing "Log In" text at the top. There is an input for email and password and a gray "Sign In" button.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After logging in, you should see a list of articles. You can click the "Read here" links to read the article within your app, or you can click the "Read at source" link to read the original version of the article!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f3RYYWuk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/ashleemboyer-2018.appspot.com/o/images%252F2021%252F05%252Fcreate-your-own-nextjs-rss-reader-app%252Farticles-page.png%3Falt%3Dmedia%26token%3D81e422b0-addc-47fe-ae3d-539477222d39" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f3RYYWuk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://firebasestorage.googleapis.com/v0/b/ashleemboyer-2018.appspot.com/o/images%252F2021%252F05%252Fcreate-your-own-nextjs-rss-reader-app%252Farticles-page.png%3Falt%3Dmedia%26token%3D81e422b0-addc-47fe-ae3d-539477222d39" alt="Browser window screenshot with a background of large, dark green leaves. The window shows a white webpage with black text. The title is &amp;quot;My RSS Reader&amp;quot; and there is a vertical list of articles with thin black borders. Each article first shows the title in large bold text, then the name of the feed, author, and publish date on the next line, then a horizontal rule, and lastly the article's description as HTML."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customize-your-feed"&gt;
  &lt;/a&gt;
  Customize your feed
&lt;/h3&gt;

&lt;p&gt;The app knows what feeds to fetch by the &lt;code&gt;feed.txt&lt;/code&gt; file in the root of the project. If you open the file, you'll see three listed with each one on its own line in the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://www.a11yproject.com/feed/feed.xml
https://webaim.org/blog/feed/
http://www.webaxe.org/feed/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to remove a feed, just delete the line. If you want to add a feed, make sure it's on its own line. That's it! Happy reading. :)&lt;/p&gt;

</description>
      <category>rss</category>
      <category>nextjs</category>
      <category>firebase</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Marketing Your Mobile App, The Acquisition Stage</title>
      <author>Krowser Web Services </author>
      <pubDate>Wed, 26 May 2021 12:43:59 +0000</pubDate>
      <link>https://dev.to/krowser/marketing-your-mobile-app-the-acquisition-stage-5fha</link>
      <guid>https://dev.to/krowser/marketing-your-mobile-app-the-acquisition-stage-5fha</guid>
      <description>&lt;p&gt;With a user acquisition strategy, the possibilities are endless. It is important to utilize different methods, be creative, and continually refining your strategy. Aim to get as many downloads as possible in the first week after launch. The more rapidly your app gets downloads, the higher it will rank in the App Store search results. It is important as users begin to download your app you track where the downloads are originating from. This way you can focus on the most profitable channels and improve the others. Below is a list of strategies that can be used to acquire users.&lt;/p&gt;

&lt;p&gt;○ Paid Strategy&lt;br&gt;
After the app is launched, start rolling out advertising such as ads on social platforms like LinkedIn, which are extremely effective for user acquisition. Depending on your target demographic, you should also consider other platforms like Instagram and Twitter, although the reach is not as large it’s still effective, especially for millennials. LinkedIn’s ad platform is great at letting businesses target desired audiences based on their interests, location, and much more. If you’re targeting your audience via social ads, you need to remember that people have shorter attention spans, so your ads should convey the purpose of the product in a few seconds. If you’re providing a solution that your users are searching for, Google Search ads may also be a good option.&lt;/p&gt;

&lt;p&gt;○ App Store Optimization (ASO)&lt;br&gt;
App Store Optimization involves optimizing your App Store page to rank higher in search results and convert at a higher rate. Over 65% of apps are discovered from a search in the App Store directly. Once your app is ranked highly in search for a certain keyword, it will continue to rank for months after. The higher your app ranks, the more visible it is to potential users. Ultimately, the increased visibility should lead to more downloads, which will help get your app noticed by editors. Good app store optimization is dependant on an array of factors which include title and choice of keywords. A great title is a chance to hook users in and get them to click on your app to discover more. Include a keyword in the title for best results. Those keywords should be strategically placed throughout your listing so you show up when users search for those words. Always include features and benefits the user will get out of the app. For added value, include screenshots and videos. Lastly, there are tons of people who would love to use your app but will never find it because it’s not in their language. Change this by localizing your app.&lt;/p&gt;

&lt;p&gt;○  Pitch To Apple’s Editorial Team To Be Featured In The App Store&lt;br&gt;
Getting featured in the App Store is another tool for marketers to utilize within their marketing strategy. Being featured offers a greater potential for apps to increase visibility and downloads which can result in lower acquisition costs, more engaged users, and increased revenue.&lt;br&gt;
Every day, a free or paid app and game is reviewed by professional App Store curators. Apple receives thousands of pitches to feature mobile apps. This tactic can be useful if done persuasively. Craft a convincing pitch that outlines what your app does and how it’s unique.&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>google</category>
      <category>apple</category>
    </item>
    <item>
      <title>How to Build a Great Developer Portfolio (+ Examples &amp; Tools)</title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Wed, 26 May 2021 12:36:52 +0000</pubDate>
      <link>https://dev.to/actitime/how-to-build-a-great-developer-portfolio-examples-tools-bkj</link>
      <guid>https://dev.to/actitime/how-to-build-a-great-developer-portfolio-examples-tools-bkj</guid>
      <description>&lt;p&gt;As any other specialists, developers need to market themselves to get dream jobs and projects, attract more clients and reach a desirable level of income. The necessary skills and a killer portfolio website are the two things that you need. Many developers think of portfolios as an optional objective, passing the competitive advantage to those who think otherwise, and here’s why.&lt;/p&gt;

&lt;p&gt;A developer portfolio is a website that showcases your best work, personality and talents. It is your best chance to prove your skills, share your enthusiasm about the profession and give your potential employers and clients a glimpse of how awesome it would be to work with you. LinkedIn pages and résumés are also important, but they focus on work experience and don’t communicate your true value. Résumé is where you talk the talk, and portfolio is where you walk the walk.&lt;/p&gt;

&lt;p&gt;This article will dwell on the most important components of developer portfolios and illustrate them with real-life examples. You can also use this article as a checklist and save it to get back to it anytime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#before"&gt;Before You Build a Portfolio&lt;/a&gt; &lt;br&gt;
&lt;a href="#ta"&gt;1. Keep the Target Audience in Mind&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#homepage"&gt;Take Advantage of Your Homepage&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#scannable"&gt;Make Your Portfolio Scannable&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#clicks"&gt;Minimize Clicks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#uxui"&gt;2. Remember UX and UI&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mobile"&gt;Go Mobile or Go Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance"&gt;Optimize Website Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Remember Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#work"&gt;3. Showcase Your Best Work and Skills&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#code"&gt;Share Your Code and Live Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#samples"&gt;OR Provide Code Samples and GIFs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#freelance"&gt;Boast Freelance and Personal Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#selective"&gt;BUT Be Selective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#samepage"&gt;Prove that You Are on The Same Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#personality"&gt;4. Show Your Personality&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#domain"&gt;Use Custom Domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Make Use of Introductory Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#voice"&gt;Use Your Tone of Voice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;Share Your Motivation (Optional)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#brand"&gt;5. Maintain Personal Brand&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#uptodate"&gt;Keep Portfolio Up-to-Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testimonials"&gt;Include Testimonials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#communication"&gt;6. Encourage Communication&lt;/a&gt;&lt;br&gt;
&lt;a href="#great"&gt;How to Build a Great Developer Portfolio&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#before-you-build-a-portfolio"&gt;
  &lt;/a&gt;
  Before You Build a Portfolio &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;When building a portfolio, developers often forget about its purpose and create websites that don’t meet the expectations and hardly attract any clients or job offers. Let’s take a look into developer portfolios from a marketing perspective.&lt;/p&gt;

&lt;p&gt;Essential questions to ask yourself before building a portfolio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Who is your target audience?&lt;/strong&gt; Do you create a portfolio as an extension of your CV or as an independent website where you market your skills, sell your services and attract clients? These are two completely different use cases meaning different approaches to building a portfolio.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;What are they looking for?&lt;/strong&gt; For example, there’s a high chance that employers will want to have a look at your code while your clients won’t care about it – now you can deduce the website structure and content with more ease.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;How will they use your portfolio website?&lt;/strong&gt; Employers will most likely be interested to see your projects and code, while clients may take more interest in your professional services, case studies and personality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;What are their pain points?&lt;/strong&gt; For example, employers need to make sure that you are a team player who meets deadlines and delivers quality – include quotes from your recommendation letters to solve these doubts. Or use client logos and case studies to prove to your potential clients that you are trustworthy and reliable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Why you?&lt;/strong&gt; Why should they choose you and not another developer or a whole agency instead? How are you different from others? What are the benefits of working with you?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After you answer these questions, you’ll better understand what is expected of you and how to build a portfolio that will deliver the desired results. Along with that, you’ll know how to communicate your personality and which soft skills to highlight. So, keep your ideal client or employer in mind when building your developer portfolio.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-keep-the-target-audience-in-mind"&gt;
  &lt;/a&gt;
  1. Keep the Target Audience in Mind &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A portfolio website may look like a perfect opportunity to showcase your skills, but you’d better keep it simple. Just think of it: your potential employer or client opens your portfolio and fails to work their way through all the bells and whistles – you definitely don’t want that to happen. So our first advice is to &lt;strong&gt;keep your portfolio website clean and uncluttered&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The main goal of a developer portfolio is to impress its visitors with your projects, code, personality, UX and UI sensibilities. Therefore, a junior developer portfolio should contain a &lt;strong&gt;smooth and straightforward user interface&lt;/strong&gt; with simple navigation. If it’s your first portfolio, we’d recommend using HTML, CSS and vanilla JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Helpful tools:&lt;/strong&gt; &lt;a href="https://www.behance.net/"&gt;Behance&lt;/a&gt;, &lt;a href="https://dribbble.com/"&gt;Dribble&lt;/a&gt;, &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt;, &lt;a href="https://www.adobe.com/products/xd.html"&gt;Adobe XD&lt;/a&gt;, &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#take-advantage-of-your-homepage"&gt;
  &lt;/a&gt;
  Take Advantage of Your Homepage &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Your portfolio homepage is your only chance to make a positive first impression. It needs to &lt;strong&gt;make clear who you are and what you do&lt;/strong&gt;, contain your photo or image and have a hint of your personality in the intro text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6YURvR4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/seb-kay-1024x538.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6YURvR4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/seb-kay-1024x538.png" alt="Seb Kay's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://sebkay.com/"&gt;Seb Kay&lt;/a&gt; introduced himself at the portfolio homepage&lt;/em&gt;&lt;/center&gt; 
&lt;h3&gt;
  &lt;a href="#make-your-portfolio-scannable"&gt;
  &lt;/a&gt;
  Make Your Portfolio Scannable &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The spread of the Internet has changed the way we &lt;a href="https://www.nngroup.com/articles/text-scanning-patterns-eyetracking/"&gt;interact with web pages&lt;/a&gt;: we no longer read them from top-to-bottom but scan. So make sure that your layout is perfectly styled, your texts are written in &lt;a href="https://www.iabcwaterloo.com/blog/2020/1/26/the-importance-of-plain-language"&gt;plain language&lt;/a&gt; and are proofread, all links and interactable objects are up and running.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minimize-clicks"&gt;
  &lt;/a&gt;
  Minimize Clicks &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Portfolios don’t have to be complex – they should contain the most critical information for your visitors. Your projects, code samples, social media and contact form should be only a few clicks away.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-remember-ux-and-ui"&gt;
  &lt;/a&gt;
  2. Remember UX and UI &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As a developer, you should be aware of the UX and UI fundamentals. Your portfolio website should have a simple good looking UI and provide a good UX as well.&lt;/p&gt;

&lt;p&gt;If you are not good with design, you may want to gather inspiration from design platforms such as &lt;a href="https://www.behance.net/"&gt;Behance&lt;/a&gt; and &lt;a href="https://dribbble.com/"&gt;Dribble&lt;/a&gt;. After that, you can design the website, its navigation and structure using &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt; or &lt;a href="https://www.adobe.com/products/xd.html"&gt;Adobe XD&lt;/a&gt; and then code it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0K3DS0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Suresh-Murali-1024x452.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0K3DS0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Suresh-Murali-1024x452.png" alt="Suresh Murali's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://sureshmurali.github.io/"&gt;Suresh Murali&lt;/a&gt; created the design that you can feel&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Don’t forget to develop design and the positioning of the UI components, including icons, form elements, checkboxes, text and search fields, tooltips and menus. Learn best &lt;a href="https://uxplanet.org/8-typography-tips-for-designers-how-to-make-fonts-speak-84741a4053c8"&gt;typography tips&lt;/a&gt; before you finish your mockup and start coding: fonts set the mood for your design and, when applied incorrectly, can bust your mobile version website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-mobile-or-go-home"&gt;
  &lt;/a&gt;
  Go Mobile or Go Home &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Speaking of mobile, this is the mobile age and &lt;strong&gt;it’s your number one priority to develop a mobile-responsive website&lt;/strong&gt;. Responsive design aims to avoid the necessary resizing, scrolling, zooming and provide a pleasant experience. If your portfolio website isn’t mobile-friendly, that’s a huge drawback that will most likely turn off your potential employers and clients.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RiPBspJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Prashant-Sani-3-1024x789.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RiPBspJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Prashant-Sani-3-1024x789.png" alt="Prashant Sani's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://prashantsani.com/"&gt;Prashant Sani&lt;/a&gt; created a mobile-friendly portfolio&lt;/em&gt;&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#optimize-website-performance"&gt;
  &lt;/a&gt;
  Optimize Website Performance &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Website performance is another key element of a successful developer portfolio. Users are unlikely to wait for more than 3 seconds for your website to load. So, optimize the size of the images, &lt;a href="https://web.dev/lazy-loading-images/"&gt;set up lazy-loading&lt;/a&gt;, minimize the number of JavaScript and CSS files and use website caching.&lt;/p&gt;

&lt;p&gt;To learn how your website is doing in terms of performance, accessibility, SEO and other parameters try &lt;a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk"&gt;Lighthouse&lt;/a&gt; – a Google Chrome extension that gives you a full website audit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fr_qxIwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lighthouse-1-1024x905.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fr_qxIwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lighthouse-1-1024x905.png" alt="Lighthouse - Chrome Extension for developers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Helpful tools:&lt;/strong&gt; &lt;a href="https://tinyjpg.com/"&gt;tinyjpg&lt;/a&gt;, &lt;a href="https://tinypng.com/"&gt;tinypng&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remember-accessibility"&gt;
  &lt;/a&gt;
  Remember Accessibility &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Accessibility is another critical quality criterion of any website. It includes website adjustments for people with special needs, disabilities and impairments that can make it difficult for them to navigate your website.&lt;/p&gt;

&lt;p&gt;Here are a few ideas on how to &lt;a href="https://romeo.elsevier.com/accessibility_checklist/"&gt;improve website accessibility&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add alt text to all images&lt;/li&gt;
&lt;li&gt;choose accessible color choices&lt;/li&gt;
&lt;li&gt;enable resizable text&lt;/li&gt;
&lt;li&gt;create accessible forms&lt;/li&gt;
&lt;li&gt;turn off auto-play for flashing and blinking elements like ads and videos&lt;/li&gt;
&lt;li&gt;provide transcripts for audio and video elements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Thea0eJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lounge-Lizard-1024x487.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Thea0eJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lounge-Lizard-1024x487.png" alt="Lounge Lizard's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://www.loungelizard.com/"&gt;Lounge Lizard&lt;/a&gt; takes accessibility seriously&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Helpful tools:&lt;/strong&gt; &lt;a href="https://webaim.org/resources/contrastchecker/"&gt;Contrast Checker&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/accessibility-developer-t/fpkknkljclfencbdbgkenhalefipecmb?hl=en"&gt;Accessibility Developer Tools&lt;/a&gt;, &lt;a href="https://wave.webaim.org/"&gt;Web Accessibility Evaluation Tool&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-showcase-your-best-work-and-skills"&gt;
  &lt;/a&gt;
  3. Showcase Your Best Work and Skills &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#share-your-code-and-live-products"&gt;
  &lt;/a&gt;
  Share Your Code and Live Products &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Now, this is a major distinction between résumé and portfolio: while résumé lists your education and employment history, portfolio is where you showcase your work and achievements, communicate your skills and personality.&lt;/p&gt;

&lt;p&gt;When it comes to showing your work, you can either show the end-products, provide links to code or do both – which approach is best depends on your portfolio’s purpose. If your portfolio is meant to serve as an extension of your résumé, you may want to include both code and end-product links, while in the case of the client portfolio, you need to showcase your work only.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_jCO_kar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Alex-Calia-1024x673.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_jCO_kar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Alex-Calia-1024x673.png" alt="Alex Calia's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://alexcalia.com/"&gt;Alex Calia&lt;/a&gt; shows live products and links to their GitHub repos&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;As long as the project gallery is the key part of your portfolio, it would be best to put it right after the home section. Pick projects that you built yourself or, in the case of junior developers, don’t include projects from tutorials unless you customized and made them unique. Another good practice is to &lt;strong&gt;supply projects with descriptions and the tech stack used&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UM3ZUO7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Rafael-Caferati-1024x618.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UM3ZUO7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Rafael-Caferati-1024x618.png" alt="Rafael Caferati's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://caferati.me/"&gt;Rafael Caferati&lt;/a&gt; uses tags for project navigation&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;If you have a lot of projects and technologies used, consider building navigation for them. If you can boast a wide variety of projects, &lt;strong&gt;define the context for which those projects were developed&lt;/strong&gt;. For example, “a commercial website for a marketing agency” or “a language exchange platform for up to 100k users”.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#or-provide-code-samples-and-gifs"&gt;
  &lt;/a&gt;
  OR Provide Code Samples and GIFs &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you’ve been working on a private project or developed particular parts of a project, include code samples if allowed by the associated client or employee. Here are a few ideas of how to do it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Embed or add links to &lt;strong&gt;code editors with live previews&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Add links to &lt;strong&gt;GitHub repos&lt;/strong&gt; and supply them with &lt;strong&gt;animated GIFs&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Upload a &lt;strong&gt;screencast video&lt;/strong&gt; to explain your process and how you worked&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out your source code and make sure that it is properly organized: it follows &lt;a href="https://github.com/kriasoft/Folder-Structure-Conventions"&gt;folder structure&lt;/a&gt; and &lt;a href="https://datamanagement.hms.harvard.edu/collect/file-naming-conventions"&gt;naming conventions&lt;/a&gt;. This will prove that your thinking is structured and organized and will make it easier for employers and clients to follow your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boast-freelance-amp-personal-projects"&gt;
  &lt;/a&gt;
  Boast Freelance &amp;amp; Personal Projects &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Freelance projects also make a great addition to your portfolio as they demonstrate your credibility, communication and time management skills, which constitute a good freelancer and full-time employee alike. Freelance jobs also provide an opportunity to try new technology, so you may showcase these projects to highlight more skills.&lt;/p&gt;

&lt;p&gt;Sometimes, you may want to list some skills that are missing in-practice confirmation. If you struggle to find freelance projects for that, you can always &lt;strong&gt;start a project of your own that you’ll showcase in the portfolio&lt;/strong&gt;. For example, you may want to create your own version of a landing page for the company that you want to impress. This will also demonstrate your motivation, a self-starter attitude and passion for the profession.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_pqoUtW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Matt-Farley-1024x501.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_pqoUtW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Matt-Farley-1024x501.png" alt="Matt Farley's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://mattfarley.ca/"&gt;Matt Farley&lt;/a&gt; shares his startup projects&lt;/em&gt;&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#but-be-selective"&gt;
  &lt;/a&gt;
  BUT Be Selective &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;You must be proud of your work and showcase as many projects as possible. But remember that your potential employers and clients won’t be delving into details of your every project. &lt;strong&gt;Most likely, they will spend a minute or two reviewing your website&lt;/strong&gt; and will take a bit closer look at some of your projects.&lt;/p&gt;

&lt;p&gt;To learn which projects to include in the portfolio, ask yourself the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What makes you incredibly proud of this project?&lt;/li&gt;
&lt;li&gt;Does it prove your skills, knowledge and talents that are missing in other projects?&lt;/li&gt;
&lt;li&gt;Are there similar projects in your portfolio? If yes, are you willing to replace them with this project?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you know someone who is reliable, trustworthy and more experienced than you, ask for their feedback and use it to include the best work in your portfolio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prove-that-you-are-on-the-same-page"&gt;
  &lt;/a&gt;
  Prove that You Are on The Same Page &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you build a portfolio to attract clients, it’s important to show that you speak the same language. Your clients are unlikely to use &lt;a href="https://www.business.com/articles/cut-the-code-why-speaking-in-technical-jargon-is-not-making-you-look-smarter/"&gt;devspeak&lt;/a&gt;, which makes your ability to clearly articulate your code in plain terms a great soft skill. The same is true for full-time employment: you need to communicate clearly with non-programmers, including designers and other team members.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-show-your-personality"&gt;
  &lt;/a&gt;
  4. Show Your Personality &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A portfolio not only gives you a perfect opportunity to showcase your work and achievements but it is also a great means to express yourself. Your potential employers and clients want to know you better to understand if you are going to click.&lt;/p&gt;

&lt;p&gt;Don’t hesitate to use the About Me part and &lt;strong&gt;tell about your passion&lt;/strong&gt; for video games, pixel art or whatever drives you. Mention your background and education if you think they will communicate important details about you. &lt;strong&gt;Add a hint of your personality&lt;/strong&gt; in the body of your website, its design and navigation – it’s your portfolio, after all. And, of course, don’t forget to &lt;strong&gt;upload a headshot&lt;/strong&gt; or an image of yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-custom-domain"&gt;
  &lt;/a&gt;
  Use Custom Domain &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Your developer portfolio is a part of your brand as is your website address. To look professional, you need a suitable URL. Usually, a portfolio address includes the name of its owner or the work they do. Instead of hosting your website on a long-tailed subdomain, consider buying your own.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8hB8Xzbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Brittany-Chiang-1024x485.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8hB8Xzbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Brittany-Chiang-1024x485.png" alt="Brittany Chiang's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://brittanychiang.com/"&gt;Brittany Chiang&lt;/a&gt; hosts her portfolio on a personal domain containing her full name&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Many developers forget to &lt;strong&gt;buy an SSL certificate&lt;/strong&gt; for their website that moves it from HTTP to HTTPS, making it more secure and trustworthy for browsers and search engines. Imagine that you send a link to your portfolio to your client, but their browser blocks the page because your website is not secure (e.g. Google Chrome is guilty of this) – you don’t want that to happen.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-use-of-introductory-statement"&gt;
  &lt;/a&gt;
  Make Use of Introductory Statement &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;One more place to express your personality is the intro paragraph on your homepage, where you may introduce yourself. Some developers use it to list their tech stack, while others include other relevant experience and related professions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wt6isD5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Josue-Espinosa-1024x487.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wt6isD5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Josue-Espinosa-1024x487.png" alt="Josue Espinosa's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://ejosue.com/"&gt;Josue Espinosa&lt;/a&gt; makes use of his intro statement&lt;/em&gt;&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#use-your-tone-of-voice"&gt;
  &lt;/a&gt;
  Use Your Tone of Voice &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Tone of voice in written communication is your choice of words, their order and rhythm, which makes it a great means for expressing your personality. A pile of facts and statements has the same impact on the reader as a fridge manual – none at all. But if you use some expressive or colloquial words, geek-talks or puns, you’ll sound much more human and have greater chances to connect with employers and clients.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#share-your-motivation-optional"&gt;
  &lt;/a&gt;
  Share Your Motivation (Optional) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This advice will bring the most benefit to bootcamp graduates and junior developers. To increase your chances of getting a job, you can &lt;strong&gt;prove your motivation and passion for the profession&lt;/strong&gt; in your portfolio. Showcasing personal projects is one of the most solid ways to prove yourself reliable and motivated. &lt;strong&gt;A few lines describing your inner motivation&lt;/strong&gt; is also an excellent way to highlight your ready-for-hard-work mindset.&lt;/p&gt;

&lt;p&gt;Here are a few ideas of what to include in the portfolio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mention your achievements and career plans for the next few years&lt;/li&gt;
&lt;li&gt;Share your career goals (technology to learn, projects to build) and highlight your passion for studying (attended industry events and conferences)&lt;/li&gt;
&lt;li&gt;What you did, do and going to do to meet your career goals&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This information works best in résumés but can help you get a job if you don’t have an impressive portfolio yet. Include this information right after the project gallery – this way, you’ll &lt;strong&gt;handle potential objections concerning your work experience&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-maintain-personal-brand"&gt;
  &lt;/a&gt;
  5. Maintain Personal Brand &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Personal branding or personal marketing is building your online reputation and making yourself recognizable on the market. Along with your social media accounts, blogs and communities, your portfolio provides a summary of your work experience, skills, talents and personality, so that &lt;a href="https://dev.to/itsabdessalam/work-on-your-personal-branding-as-a-developer-20pm"&gt;your online presence&lt;/a&gt; communicates a clear and memorable picture of you as a professional.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Your brand is what people say about you when you’re not in the room – Jeff Bezos, the CEO of Amazon&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#keep-portfolio-uptodate"&gt;
  &lt;/a&gt;
  Keep Portfolio Up-To-Date &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you review popular developer portfolios, you’ll notice that most of them haven’t been updated for years: most of the links are broken, social media accounts are inactive, no recent projects or work experience mentioned. Now think of how many new clients these portfolios could bring: while blogs and online media share them as examples of great portfolios, these developers are missing dozens of chances to get star clients and one-in-a-lifetime opportunities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3bZKvFTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Shawn-Wang-1024x575.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3bZKvFTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Shawn-Wang-1024x575.png" alt="Shawn Wang's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://www.swyx.io/"&gt;Shawn Wang&lt;/a&gt; shares his industry achievements and updates his portfolio website regularly&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;So, our advice is to keep your portfolio as up-to-date as possible even when you have enough workload and are not looking for employment or freelance jobs. Update it whenever you finish another project, give a tech talk, start a tech podcast – whatever drives you and, at the same time, is relevant to your portfolio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#include-testimonials"&gt;
  &lt;/a&gt;
  Include Testimonials &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Let’s recap: a portfolio is a proof of your skills and achievements, an essential part of your personal brand and a marketing tool that attracts employers and customers. To make your portfolio even more convincing, you need to include testimonials.&lt;/p&gt;

&lt;p&gt;Here a few ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Include quotes from recommendation letters&lt;/li&gt;
&lt;li&gt;Ask for and add feedback from the current place of work&lt;/li&gt;
&lt;li&gt;Display feedback from your past clients&lt;/li&gt;
&lt;li&gt;If you work as a freelancer, post a few case studies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGhOyEeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Seb-Kay-2-1024x572.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGhOyEeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Seb-Kay-2-1024x572.png" alt="Seb Kay's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://sebkay.com/"&gt;Seb Kay&lt;/a&gt; – included a quote from his recommendation&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Case studies is a way to add testimonials to your developer portfolio. Case studies are stories about how your clients overcame their problems using your expertise. For each project you include, consider explaining the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Client:&lt;/strong&gt; who they are and what they were looking for&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Problem:&lt;/strong&gt; what problem they solved with you&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Project details:&lt;/strong&gt; timeline, tech stack used, etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Your work:&lt;/strong&gt; what you implemented and why&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Results:&lt;/strong&gt; how your work influenced the client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The contents of the case studies depends on the purpose of your portfolio. If you are looking to get employed, you may want to include more technical details. Or, if you want to attract more clients, keep these details to the minimum and focus on the business benefits instead.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ENoHd-Dm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Riccardo-Zanutta-1024x551.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ENoHd-Dm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Riccardo-Zanutta-1024x551.png" alt="Riccardo Zanutta's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="http://riccardozanutta.com/"&gt;Riccardo Zanutta&lt;/a&gt; takes the case studies approach&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Testimonials make a great addition to any developer portfolio. &lt;strong&gt;Encourage your employers and clients to compose a few paragraphs about how your work positively impacted their business.&lt;/strong&gt; Get their contact information if possible and include it in your résumé and portfolio to add more value to their claims and allow your portfolio visitors to get in touch with them for some follow-up questions&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-encourage-communication"&gt;
  &lt;/a&gt;
  6. Encourage Communication &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;After you’ve showed your experience, personality and projects, it’s time to ask your portfolio visitors to contact you if they are interested in cooperating with you. The “Contacts” part should be the last and the final point of your developer portfolio.&lt;/p&gt;

&lt;p&gt;A few ideas of what goes on the “Contact” page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Contact form.&lt;/strong&gt; Please note that recruiters want to contact you now and not to fill out a form and wait to see when, if ever, they get a call back.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Email address.&lt;/strong&gt; Basically, it’s the same as the contact form + more efforts to open an email tab.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Phone number.&lt;/strong&gt; Probably the best contact option for recruiters and the worst for communicating with clients.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hours of availability.&lt;/strong&gt; Especially useful if you ask your portfolio visitors to contact you via your phone number.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Social media links.&lt;/strong&gt; Include only active accounts such as LinkedIn, GitHub and StackOverflow to strengthen your credentials.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#how-to-build-a-great-developer-portfolio"&gt;
  &lt;/a&gt;
  How to Build a Great Developer Portfolio &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A well-rounded developer portfolio is your chance to advance faster in your career and build a personal brand. If you are looking to get a Junior position, a portfolio can make all the difference when you’re competing with other hopefuls for a coveted role. But don’t confuse résumé with portfolio: résumé is where you talk the talk, a portfolio is where you walk the walk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.actitime.com/?utm_source=dev.to&amp;amp;utm_medium=Syndication&amp;amp;utm_content=homepage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9jT44Og5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619702589851/tlEoizZRK.jpeg%3Fauto%3Dcompress" alt="actiTIME - time tracking software"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>csharp</category>
    </item>
    <item>
      <title>AWS CDK: Per-Environment Configuration Patterns</title>
      <author>Gerald Stewart</author>
      <pubDate>Wed, 26 May 2021 12:23:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-cdk-per-environment-configuration-patterns-48m6</link>
      <guid>https://dev.to/aws-builders/aws-cdk-per-environment-configuration-patterns-48m6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction 👋
&lt;/h1&gt;

&lt;p&gt;Often projects will have different configuration values for each deployed environment. This could be feature toggles, URLs for third-party services or any number of other variables.&lt;/p&gt;

&lt;p&gt;With the AWS CDK, this is simple to configure. I have seen a few different approaches to this problem. In this blog I'll share a few suitable for use in TypeScript.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-stack-configuration-function"&gt;
  &lt;/a&gt;
  Method 1️⃣: Stack Configuration Function
&lt;/h1&gt;

&lt;p&gt;This approach uses a mapper function to return the configuration, you can see we have a single configuration property defined in the &lt;code&gt;EnvironmentConfig&lt;/code&gt; interface.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;environmentMapper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;local&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://dev.google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://test.google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;production&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;environmentMapper&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;environmentName&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function would be called from the stack like this, &lt;code&gt;process.env.ENV_NAME&lt;/code&gt; would correspond to the environment name (replace this with your environment name variable for your chosen CI/CD pipeline) or default to local if undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ENV_NAME&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;local&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;environmentConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then access the configuration like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;apiEndpoint&lt;/code&gt; variable is now ready to be used in your stack.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-cdk-runtime-context"&gt;
  &lt;/a&gt;
  Method 2️⃣: CDK Runtime Context
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/cdk/latest/guide/context.html"&gt;CDK Context&lt;/a&gt; values are key-value pairs that can be associated with a stack or construct. There are a number of different ways these values can be configured, for more information on that see the link above to the documentation.&lt;/p&gt;

&lt;p&gt;In this example, I'm going to use &lt;code&gt;cdk.context.json&lt;/code&gt; file in the root of a CDK project to configure a stack.&lt;/p&gt;

&lt;p&gt;Here is an example &lt;code&gt;cdk.context.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"local"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"myEnvSpecificApiEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://dev.google.com/api"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"myEnvSpecificApiEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://test.google.com/api"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"production"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"myEnvSpecificApiEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://google.com/api"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interfaces can also be created to define the type of configuration data expected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These values can be accessed like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ENV_NAME&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;local&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tryGetContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#method-extending-stackprops"&gt;
  &lt;/a&gt;
  Method 3️⃣: Extending StackProps
&lt;/h1&gt;

&lt;p&gt;The AWS CDK &lt;a href="https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_core.StackProps.html"&gt;StackProps&lt;/a&gt; interface can be extended to add additional configuration properties. In this example we will extend the AWS CDK interface to add a property called &lt;code&gt;myEnvSpecificApiEndpoint&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;StackProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in the stack initialisation file (located in the &lt;code&gt;bin&lt;/code&gt; directory) we can pass this in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
    &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://dev.google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the one downfall of this is that you still need to implement something like method 1 or 2 to configure it on a per-environment basis. This would look something like this for method 1:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
    &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 🤌
&lt;/h1&gt;

&lt;p&gt;Looking at all three methods, I personally like method 2. Until recently I was blissfully unaware the CDK had already 'solved' this problem for us.&lt;/p&gt;

&lt;p&gt;I live by the saying 'code is a liability' - the less code you manage the better.&lt;/p&gt;

&lt;p&gt;Do you..&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use any of these methods already?&lt;/li&gt;
&lt;li&gt;have a better way of doing it?&lt;/li&gt;
&lt;li&gt;have a different opinion on the optimal solution?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me know in the comments!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cdk</category>
      <category>iac</category>
    </item>
    <item>
      <title>Scientific Programming School Bootcamp (Coding Videos)</title>
      <author>Scientific Programming School</author>
      <pubDate>Wed, 26 May 2021 12:22:31 +0000</pubDate>
      <link>https://dev.to/scientificschool/scientific-programming-school-bootcamp-coding-videos-1nm8</link>
      <guid>https://dev.to/scientificschool/scientific-programming-school-bootcamp-coding-videos-1nm8</guid>
      <description>&lt;p&gt;Introducing the Scientific Programming School - Bootcamp.&lt;br&gt;
&lt;a href="https://bootcamp.scientificprogramming.io/"&gt;https://bootcamp.scientificprogramming.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A 100% free, automated video-based learning platform that curates, organises and shows tutorials on advanced programming and Linux computing. It enables you to "like" videos, create your own "playlist" and provides a "watch later" option. Most of all, it gives you a complete distraction free learning experience. Not to mention, no registration or what so ever is required. &lt;/p&gt;

&lt;p&gt;Currently, the Bootcamp contains 3000+ videos and is curating thousands of videos each day,  pulling together into categories like C/C++, Bash, Perl, Java, JS, Kotlin, Parallel Programming, R, Swift, Matlab and so on. All checked for quality and easiness to digest.&lt;/p&gt;

&lt;p&gt;How good is that?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nugSqAAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9gt9iiulz8pbj7ugelw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nugSqAAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9gt9iiulz8pbj7ugelw.png" alt="Scientific Programming School Bootcamp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bootcamp.scientificprogramming.io/"&gt;bootcamp.scientificprogramming.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a minor reward, please don’t forget to Subscribe our new &lt;a href="https://www.youtube.com/channel/UCTML7fZU9u0TyMeYi_IpYBQ?sub_confirmation=1"&gt;YouTube channel&lt;/a&gt; if you want more weekly updates on Linux, Devops, HPC and Advanced coding. We create advanced code videos and present you a platform (scientificprogramming.io) to run scientific codes/ OS commands as you learn with playgrounds and Interactive shells, inside your browser! &lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>promotion</category>
    </item>
    <item>
      <title>7 Tricks I Use To Rewrite JavaScript Code From My Early Days</title>
      <author>Nevin Katz</author>
      <pubDate>Wed, 26 May 2021 12:19:54 +0000</pubDate>
      <link>https://dev.to/nevkatz/7-tricks-i-use-to-rewrite-javascript-code-from-my-early-days-1745</link>
      <guid>https://dev.to/nevkatz/7-tricks-i-use-to-rewrite-javascript-code-from-my-early-days-1745</guid>
      <description>&lt;p&gt;For the past four years, I have been working on a Cordova app that runs on JavaScript. The codebase has grown to the point where working on it often feels like wandering through streets and alleys of a large city. And looking at some of the earlier modules feels like sauntering into old buildings I originally constructed years ago.&lt;/p&gt;

&lt;p&gt;While my JS coding has evolved over this time, I often run into code in the app that feels inefficient and outdated - and it bothers me to the point where I usually feel compelled to eventually refactor it so that it is more compact, readable, and understandable.&lt;/p&gt;

&lt;p&gt;Here are &lt;a href="https://betterprogramming.pub/7-approaches-to-rewriting-javascript-from-my-early-days-c6ada526d55f?sk=943c7f6366a06aa724d18451671cb35d"&gt;7 time-tested tricks&lt;/a&gt; I use to rewrite my JavaScript code from those early days, published this month in Better Programming. I hope you find them useful. Enjoy!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>refactorit</category>
    </item>
    <item>
      <title>🚀 40 Developer tools to make your programming life a little easier
</title>
      <author>ProgrammerHumor.io</author>
      <pubDate>Wed, 26 May 2021 12:18:12 +0000</pubDate>
      <link>https://dev.to/prgrmmrhumor_io/40-developer-tools-to-make-your-programming-life-a-little-easier-2opg</link>
      <guid>https://dev.to/prgrmmrhumor_io/40-developer-tools-to-make-your-programming-life-a-little-easier-2opg</guid>
      <description>&lt;p&gt;A list of 40 awesome websites, chrome extensions, web apps, and everything in between that will help you in your programming career.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-whatruns"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.whatruns.com/"&gt;Whatruns&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A free browser extension that helps you identify technologies used on any website at the click of a button. &lt;br&gt;
&lt;a href="https://www.whatruns.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQRe--G6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/io2e36flh7lbak4jg88z.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-sizzy"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://sizzy.co/"&gt;Sizzy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The browser for developers. Stop wasting time and speed up your development workflow &lt;br&gt;
&lt;a href="https://sizzy.co/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zOOyfo2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73geqjuwi6e1uksoaocb.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-logrocket"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://logrocket.com/"&gt;LogRocket&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. &lt;br&gt;
&lt;a href="https://logrocket.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GOWF31g5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6ci3ete5gxzn3qby9fbu.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-sentry"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://sentry.io/"&gt;Sentry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Sentry's application monitoring platform helps every developer diagnose, fix, and optimize the performance of their code. &lt;br&gt;
&lt;a href="https://sentry.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W3ELnq2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o9y6dnlj5u09h4runv4p.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-can-i-use"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://caniuse.com/"&gt;Can I Use?&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;"Can I use" provides up-to-date browser support tables for support of front-end web technologies on desktop and mobile web browsers. &lt;br&gt;
&lt;a href="https://caniuse.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kxi-j9Y3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ljyqcptdyk5bgygoszxg.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-prettier"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;An opinionated code formatter, Supports many languages,Integrates with most editors,Has few options. &lt;br&gt;
&lt;a href="https://prettier.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lIuDtzm2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6u21bureeecjlpseay31.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-css-scan"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://getcssscan.com/"&gt;CSS Scan&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Goodbye to "Inspect Element" — Check the CSS of any element you hover over, instantly, and copy its entire rules with a single click. &lt;br&gt;
&lt;a href="https://getcssscan.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0SFM61t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hp19t4ynedr98dce45de.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-bundlephobia"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://bundlephobia.com/"&gt;Bundlephobia&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Find the cost of adding a npm package to your bundle &lt;br&gt;
&lt;a href="https://bundlephobia.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--unU6SIqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/skn4pre94fy3q4ezp45x.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-cypress"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser. &lt;br&gt;
&lt;a href="https://www.cypress.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Su7hqsmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zpl4pcg1tncaatywfz11.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-unminify"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://unminify.com/"&gt;Unminify&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Free tool to unminify (unpack, deobfuscate) JavaScript, CSS, HTML, XML and JSON code, making it readable and pretty. &lt;br&gt;
&lt;a href="https://unminify.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cr8sMPV4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5bsecufgz7il16lo8nlt.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-regex-101"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://regex101.com/"&gt;RegEx 101&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Free PCRE-based regular expression debugger with real time explanation, error detection and highlighting. &lt;br&gt;
&lt;a href="https://regex101.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lIoKMnjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m2sqz88plmzmzbcp3ign.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-clear-cache"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en%20"&gt;Clear Cache&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Clear your cache and browsing data with a single click of a button. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en%20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n35jp92r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jycol4iy8g8p1rx0antv.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-window-resizer"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh"&gt;Window Resizer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Resize the browser window to emulate various screen resolutions. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wntp2AL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iw1x04nxpsr5w7s5la4h.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-wappalyzer"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;Wappalyzer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Wappalyzer is a utility that uncovers the technologies used on websites. It detects content management systems, ecommerce platforms, web frameworks, server software, analytics tools and many more &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h12J-aQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vzgqwj5j6q08ms80huaj.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-mdn"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The MDN Web Docs site provides information about Open Web technologies including HTML, CSS, and APIs for both Web sites and progressive web apps. &lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZlHK0G6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zx5xyv5nwgws5qsl1o9z.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-axe"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://www.deque.com/axe/"&gt;Axe&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Standard in Accessibility Testing. Chosen by Microsoft, Google, development and testing teams everywhere, axe is the World’s leading digital accessibility toolkit. &lt;br&gt;
&lt;a href="https://www.deque.com/axe/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eq7utvWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xrclziyiu2vubfq6shup.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-git-graph"&gt;
  &lt;/a&gt;
  17. &lt;a href="https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph"&gt;Git Graph&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Git Graph extension for Visual Studio Code. View a Git Graph of your repository, and easily perform Git actions from the graph. Configurable to look the way you want! &lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xaq96uY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/w1tjaf3iec4g65mulxf7.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-kontrast-wcag-contrast-checker"&gt;
  &lt;/a&gt;
  18. &lt;a href="https://chrome.google.com/webstore/detail/kontrast-wcag-contrast-ch/haphaaenepedkjngghandlmhfillnhjk"&gt;Kontrast - WCAG Contrast Checker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Quickly check and adjust contrast in realtime in your browser to meet WCAG 2.1 requirements. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/kontrast-wcag-contrast-ch/haphaaenepedkjngghandlmhfillnhjk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XOxOtgrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8nvykg1bu2k42o49jp0g.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-octotree"&gt;
  &lt;/a&gt;
  19. &lt;a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;Octotree&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Browser extension that enhances GitHub code review and exploration. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJTSxV0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dodew8uacgc08wla3oo8.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-hoppscotch"&gt;
  &lt;/a&gt;
  20. &lt;a href="https://hoppscotch.io/"&gt;Hoppscotch&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Previously known as Postwoman, web alternative to Postman - Helps you create requests faster, saving precious time on development &lt;br&gt;
&lt;a href="https://postwoman.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eei13F3b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y3ygksxrep4vph4uvs8d.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-responsively"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://responsively.app/"&gt;Responsively&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;App Develop responsive web apps 5x faster! A must-have DevTool for all Front-End developers that will make your job easier. &lt;br&gt;
&lt;a href="https://xscode.com/manojvivek/responsively-app"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFhGC7Ua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eppixeywg241qh1nl7ky.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-fullstory"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://www.fullstory.com/"&gt;FullStory&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Deliver exceptional experiences by letting our easy-to-use, intelligent software pinpoint when, where, and how user struggle is affecting your revenue and retention &lt;br&gt;
&lt;a href="https://www.fullstory.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ju9nvYkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uge3jh88xh9n0cgovjbq.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-gitignoreio"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://www.toptal.com/developers/gitignore"&gt;gitignore.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Create useful .gitignore files for your project &lt;br&gt;
&lt;a href="https://www.toptal.com/developers/gitignore"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3blvgWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0sf6iuj0qdo53ims72ir.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-1loc"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://1loc.dev/"&gt;1Loc&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;206 Favorite JavaScript Utilities in single line of code! No more! &lt;br&gt;
&lt;a href="https://1loc.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z77otOBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v6ihza3zyjbufj14vexh.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-does-it-mutate"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://doesitmutate.xyz/"&gt;Does it mutate?&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://doesitmutate.xyz/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKiEf7DC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/axhfndtc5rz9lb24ajza.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#26-keycode"&gt;
  &lt;/a&gt;
  26. &lt;a href="https://keycode.info/"&gt;Keycode&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Press any key to get the JavaScript event keycode &lt;br&gt;
&lt;a href="https://keycode.info/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QaZZ_Hbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/voj3s893ca07lsvzftow.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#27-worth-it-modern-js-edition"&gt;
  &lt;/a&gt;
  27. &lt;a href="https://module-nomodule-calculator.glitch.me/"&gt;Worth It: Modern JS edition&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This tool analyzes a page to determine how much less JavaScript is downloaded in modern browsers as a result of it using the module/nomodule pattern. &lt;br&gt;
&lt;a href="https://module-nomodule-calculator.glitch.me/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8HQvrrJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6sit8k507pe8096ma87s.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#28-npmview"&gt;
  &lt;/a&gt;
  28. &lt;a href="https://npmview.now.sh/"&gt;npmview&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A web application to view npm package files. &lt;br&gt;
&lt;a href="https://npmview.now.sh/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ARPCMkWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9tl0sfv7vm6svl4rkmna.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#29-css-to-js"&gt;
  &lt;/a&gt;
  29. &lt;a href="https://css2js.dotenv.dev/"&gt;CSS to JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Transform between CSS, JS Objects and JSX props. &lt;br&gt;
&lt;a href="https://css2js.dotenv.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LTd_JXsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z7fvom7d0izgnctqch6b.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#30-all-characters"&gt;
  &lt;/a&gt;
  30. &lt;a href="https://aymkdn.github.io/characters/"&gt;All Characters&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A simple page that shows all the different characters and their HTML code. &lt;br&gt;
&lt;a href="https://aymkdn.github.io/characters/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_LWn3D_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oudkiwkbihedznwmncfs.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#31-shape-catcher"&gt;
  &lt;/a&gt;
  31. &lt;a href="https://shapecatcher.com/"&gt;Shape Catcher&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is a tool to help you find Unicode characters. Finding a specific character whose name you don't know is cumbersome. On shapecatcher.com, all you need to know is the shape of the character! &lt;br&gt;
&lt;a href="https://shapecatcher.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8h3jz7kQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i3k8oeti0n1e0obgo660.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#32-mocky"&gt;
  &lt;/a&gt;
  32. &lt;a href="https://designer.mocky.io/"&gt;Mocky&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Don't wait for the backend to be ready, generate custom API responses with Mocky and start working on your application straightaway &lt;br&gt;
&lt;a href="https://designer.mocky.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y26hiMXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zjhth6dynl92uqwrrfzl.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#33-explain-shell"&gt;
  &lt;/a&gt;
  33. &lt;a href="https://explainshell.com/"&gt;Explain Shell&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Write down a command-line to see the help text that matches each argument &lt;br&gt;
&lt;a href="https://explainshell.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hGnOL-X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2h7te0igiu8hbos4x4g6.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#34-open-graph"&gt;
  &lt;/a&gt;
  34. &lt;a href="https://opengraphcheck.com/"&gt;Open Graph&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Check When sharing content on Facebook and other social networks, clickattractivity is really important. An optimized preview tailored to the target group leads to significant improvements in the Click Trough Rate. Opengraphcheck.com will help you do the job best. And the most awesome thing is the Open Graph Check is for free! &lt;br&gt;
&lt;a href="https://opengraphcheck.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGYAWMCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gcj2ck3fafshu4ywfyqz.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#35-brotli-pro"&gt;
  &lt;/a&gt;
  35. &lt;a href="https://www.brotli.pro/"&gt;Brotli pro&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Brotli. Next Level. Compression. Ready? &lt;br&gt;
&lt;a href="https://www.brotli.pro/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hg7i_2J9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9zmqc7xye4dm3hlaywt7.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#36-responsive-breakpoints"&gt;
  &lt;/a&gt;
  36. &lt;a href="https://www.responsivebreakpoints.com/"&gt;Responsive Breakpoints&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Easily generate the optimal responsive image dimensions &lt;br&gt;
&lt;a href="https://www.responsivebreakpoints.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4VxIsrei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nv3oub460jvml15dez08.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#37-is-my-host-fast-yet"&gt;
  &lt;/a&gt;
  37. &lt;a href="https://ismyhostfastyet.com/"&gt;Is my host fast yet?&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Real-world server response (Time to First Byte) latencies, as experienced by real-world users navigating the web. &lt;br&gt;
&lt;a href="https://ismyhostfastyet.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVM66yMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/db5tffcwo709nhqie1ig.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#38-check-my-links"&gt;
  &lt;/a&gt;
  38. &lt;a href="https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf?hl=en-GB"&gt;Check My Links&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Check My Links is a link checker that crawls through your webpage and looks for broken links. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf?hl=en-GB"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZz5Y_Jh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oz7i5wq3ns4yk57814dc.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#39-json-web-token"&gt;
  &lt;/a&gt;
  39. &lt;a href="https://www.jsonwebtoken.io/"&gt;JSON Web Token&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Encode or Decode JWTs &lt;br&gt;
&lt;a href="https://www.jsonwebtoken.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IzNGNcy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7phdt1qka2ri0can0d6c.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#40-programmerhumorio"&gt;
  &lt;/a&gt;
  40. &lt;a href="https://programmerhumor.io/"&gt;ProgrammerHumor.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;After a long programming session when you need a break, head over to ProgrammerHumor.io for best programming memes and fun stuff.&lt;br&gt;
&lt;code&gt;Full disclosure: I built it.&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yjry7UNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gc6fwil2ho9gcu41kru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yjry7UNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gc6fwil2ho9gcu41kru.png" alt="ProgrammerHumor.io: Best programming memes for software engineers and developers"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AI algorithm families</title>
      <author>Rishal Hurbans</author>
      <pubDate>Wed, 26 May 2021 12:18:01 +0000</pubDate>
      <link>https://dev.to/rishalhurbans/ai-algorithm-families-2kf7</link>
      <guid>https://dev.to/rishalhurbans/ai-algorithm-families-2kf7</guid>
      <description>&lt;p&gt;Different families of algorithms solve different problems. We don't necessarily need to be experts in the details of each one, but having a grasp on what problems they can solve, and how they generally work, equips us with more tools when making decisions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd7y2jxi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pjlmq3j3udo52ga3a74q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd7y2jxi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pjlmq3j3udo52ga3a74q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Traditional search algorithms are useful where several actions are required to achieve a goal, like finding a path through a maze. These algorithms evaluate possible states and attempt to find an optimal path . Typically, we have too many possible solutions to brute-force.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u9msUhvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bhwnr7kvqlihgcl2ebs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u9msUhvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bhwnr7kvqlihgcl2ebs.png" alt="From Chapter 2: Search fundamentals in Grokking Artificial Intelligence Algorithms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Biology-inspired algorithms are wondrous things happening all the time. The cooperation of ants in gathering food, the flocking of birds, estimating how brains work, and the evolution of organisms to produce strong offspring. These have inspired algorithms that are useful in AI.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aEI538Ye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u8gwps3dyajacil94uy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aEI538Ye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u8gwps3dyajacil94uy.png" alt="From Chapter 4: Evolutionary algorithms in Grokking Artificial Intelligence Algorithms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Traditional machine learning algorithms leverages statistics to training models to learn from data. The umbrella of machine learning has a variety of algorithms that can be harnessed to improve understanding of relationships in data, to make predictions and decisions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eH48Xi1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp6czapkx5s42m1u6rq5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eH48Xi1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mp6czapkx5s42m1u6rq5.png" alt="From Chapter 8: Machine learning in Grokking Artificial Intelligence Algorithms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deep learning algorithms are a broader family of approaches and algorithms that are used to achieve narrow intelligence and strive toward general intelligence. It attempts to solve general problems like vision, speech, and reasoning. It often leverages artificial neural networks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Do-U0geU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pu9nzr02qopqkimbhrtm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Do-U0geU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pu9nzr02qopqkimbhrtm.png" alt="From Chapter 9: Artificial neural networks in Grokking Artificial Intelligence Algorithms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reinforcement learning algorithms are based on behavioural psychology and use feedback from actions performed to learn what sequences are more beneficial. Reinforcement learning is useful when you know what the goal is but don’t know what actions are reasonable to achieve it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f78IIv5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjwaoyd5xgxft4gcejbo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f78IIv5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjwaoyd5xgxft4gcejbo.png" alt="From Chapter 10: Reinforcement learning with Q-learning in Grokking Artificial Intelligence Algorithms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create your own mental map of AI! If you enjoyed this thread, check out my book, Grokking Artificial Intelligence Algorithms: &lt;a href="http://bit.ly/gaia-book"&gt;http://bit.ly/gaia-book&lt;/a&gt;, consider &lt;a href="https://twitter.com/RishalHurbans"&gt;following me&lt;/a&gt; for more, or join my mailing list for infrequent knowledge drops in your inbox: &lt;a href="https://rhurbans.com/subscribe"&gt;https://rhurbans.com/subscribe&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>datascience</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
