<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Tailwind CSS Standalone CLI: Use Tailwind CSS without Node.js</title>
      <author>Victor Nwanguma</author>
      <pubDate>Fri, 17 Dec 2021 19:30:26 +0000</pubDate>
      <link>https://dev.to/kachidk/tailwind-standalone-cli-use-tailwind-css-without-nodejs-2bfn</link>
      <guid>https://dev.to/kachidk/tailwind-standalone-cli-use-tailwind-css-without-nodejs-2bfn</guid>
      <description>&lt;p&gt;Tailwind just released a standalone CLI in self-contained executable, no Node.js or npm required.&lt;/p&gt;

&lt;p&gt;You get all the power of the standard npm-distributed CLI in a convenient, portable package — no dependencies required.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#get-started"&gt;
  &lt;/a&gt;
  Get started
&lt;/h2&gt;

&lt;p&gt;Download the executable for your platform from the latest &lt;a href="https://github.com/tailwindlabs/tailwindcss/releases/latest"&gt;&lt;strong&gt;release&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Copy it to the root directory of your project.&lt;/p&gt;

&lt;p&gt;Rename the executable &lt;code&gt;"tailwindcss"&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Now you can use it just like the npm-distributed CLI tool:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Create a tailwind.config.js file
./tailwindcss init

# Start a watcher
./tailwindcss -i input.css -o output.css --watch

# Compile and minify your CSS for production
./tailwindcss -i input.css -o output.css --minify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It comes bundled with the latest versions of all of tailwind's first-party plugins, so if you want to use them in your project, just require them in your tailwind.config.js file like you would in a Node-based project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
  // ...
  plugins: [
    require('@tailwindcss/forms'),
    require('@tailwindcss/typography'),
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#refrences"&gt;
  &lt;/a&gt;
  Refrences
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/blog/standalone-cli#how-does-it-work"&gt;Standalone CLI: Use Tailwind CSS without Node.js&lt;/a&gt; - &lt;a href="https://twitter.com/adamwathan"&gt;Adam Wathan&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Resume vs Curriculum Vitae (CV)</title>
      <author>Saúl Zalimben</author>
      <pubDate>Fri, 17 Dec 2021 18:25:33 +0000</pubDate>
      <link>https://dev.to/szalimben/resume-vs-curriculum-vitae-cv-4neb</link>
      <guid>https://dev.to/szalimben/resume-vs-curriculum-vitae-cv-4neb</guid>
      <description>&lt;p&gt;Con frecuencia, ambos términos se utilizan para referirse a lo mismo. Esto es debido a que son documentos muy similares con una misma finalidad, la de mostrar datos sobre nuestra experiencia profesional, estudios, capacidades, habilidades, etc. &lt;/p&gt;

&lt;p&gt;No obstante, a pesar de sus múltiples similitudes, existen diferencias entre ambos que deberías conocer para distinguirlos y usar uno u otro dependiendo de tus necesidades, siendo que son documentos necesarios para postularte a las empresas que tengas pensado presentarte.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#qu%C3%A9-es-un-curriculum-vitae-cv"&gt;
  &lt;/a&gt;
  ¿Qué es un Curriculum Vitae (CV)?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Curriculum Vitae&lt;/em&gt; es una palabra derivada del latín cuya traducción literal es &lt;em&gt;"carrera de la vida"&lt;/em&gt;. Es decir, se trata de un documento detallado en el que se refleja la vida profesional desde los inicios hasta el momento actual e incluye una alta cantidad de información.&lt;/p&gt;

&lt;p&gt;Es una descripción detallada del conjunto de estudios, méritos, cargos, premios, experiencia laboral que ha desarrollado u obtenido una persona a lo largo de su vida laboral o académica. Siendo un documento que puede ocupar varias páginas, se lo considera completo y brinda mucha información sobre una persona.&lt;/p&gt;

&lt;p&gt;Hay dos tipos de CV dependiendo de cómo se quiera organizar los datos: cronológico y funcional. En un CV &lt;strong&gt;cronológico&lt;/strong&gt; se ordena los datos según el tiempo y puede ser en orden natural o inverso. Por otra parte, en uno &lt;strong&gt;funcional&lt;/strong&gt; se agrupan los datos por temas de interés.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Normalmente se organiza cronológicamente y debería ofrecer una visión general de la carrera profesional completa. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#secciones"&gt;
  &lt;/a&gt;
  Secciones
&lt;/h3&gt;

&lt;p&gt;Dependiendo del alcance de tu experiencia, querrás incluir algunas (o todas) de las siguientes secciones en tu CV:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Datos Personales:&lt;/strong&gt; Nombres, apellidos, ciudad y país.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Información de Contacto:&lt;/strong&gt; Redes sociales y correo electrónico.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Formación Profesional/Académica:&lt;/strong&gt; Estudios cursados con su fecha, objetivo y lugar de realización.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Formación Complementaria:&lt;/strong&gt; Cursos no obligatorios o de corta duración, en los que también se indica fecha, objetivo y lugar de realización.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Experiencia Profesional:&lt;/strong&gt; Señalar las empresas para las que has trabajado, el periodo laboral, los trabajos, actividades, rol, etc.

&lt;ul&gt;
&lt;li&gt;Experiencia Docente&lt;/li&gt;
&lt;li&gt;Experiencia en Investigación&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Actividades No Académicas/Voluntariado:&lt;/strong&gt; Acciones sociales y/o responsabilidad social.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Idiomas:&lt;/strong&gt;  Destacar idiomas conocidos y el nivel de desenvolvimiento en ellos.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conocimientos y Habilidades:&lt;/strong&gt; Destacar conocimientos relevantes, e.g. informáticos, marketing, negocios, etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Publicaciones:&lt;/strong&gt; Artículos en revistas de investigación o blog personal.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Premios y Honores:&lt;/strong&gt; Reconocimientos recibidos a lo largo de su trayectoria profesional.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conferencias:&lt;/strong&gt; Señalar el nivel de participación: participante, disertante, organizador.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Referencias:&lt;/strong&gt; Personas que puedan validar los datos expuestos en el CV.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Solo es necesario incluir las secciones en las que tengas información para añadir. El CV no tiene una extensión máxima que debas respetar. Puede ser tan largo como necesites para que contenga toda la información necesaria y relevante sobre tu vida académica y profesional, también es posible agregar más secciones o bloques acorde a tus necesidades.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Es importante resaltar que no es necesario compartir información sensible, ni tampoco pueden exigirte a compartir información que no deseas hacerlo, cómo número de teléfono, dirección, estado civil, cantidad de hijos, etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#qu%C3%A9-es-un-resume"&gt;
  &lt;/a&gt;
  ¿Qué es un resume?
&lt;/h2&gt;

&lt;p&gt;El resume o resumen profesional, deriva del francés &lt;em&gt;“résumé&lt;/em&gt;, cuyo significado es: resumir. Se puede decir que es una especie de currículum simplificado. &lt;/p&gt;

&lt;p&gt;Debe incluir toda la información relevante de tu trayectoria de una forma breve y concisa.&lt;br&gt;
Un resume es una descripción breve de la formación y experiencia profesional, por lo general es solicitada para un empleo específico y no debería superar las 2 páginas de extensión.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Puede ser escrito de dos formas diferentes, “résumé” o “resume” ambas son correctas, aunque últimamente la segunda es más popular.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#secciones"&gt;
  &lt;/a&gt;
  Secciones
&lt;/h3&gt;

&lt;p&gt;Para poder realizar un resume, a parte de sintetizar la información, es recomendable utilizar palabras y frases cortas, puede incluir las siguientes secciones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Datos Personales:&lt;/strong&gt; Nombres, apellidos, ciudad y país.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Información de Contacto:&lt;/strong&gt; Redes sociales y correo electrónico.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Objetivo o Perfil Profesional:&lt;/strong&gt; Una breve introducción sobre tu perfil y áreas de especialización.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Formación Profesional/Académica:&lt;/strong&gt; Estudios cursados con su fecha, objetivo y lugar de realización. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Experiencia Profesional:&lt;/strong&gt; Señalar las empresas para las que has trabajado, el periodo laboral, actividades, rol, etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Conocimientos y Habilidades:&lt;/strong&gt; Destacar conocimientos relevantes, e.g. informáticos, marketing, negocios, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se recomienda que contenga solo la información más reciente y relevante, en muchos casos solo se considera como relevante la experiencia de los últimos 5 años, un tiempo mayor a eso, el conocimiento obtenido puede perder valor o quedar desfasado.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#diferencias-entre-cv-y-resume"&gt;
  &lt;/a&gt;
  Diferencias entre CV y resume
&lt;/h2&gt;

&lt;p&gt;Los datos y la estructura de los dos documentos son muy parecidos. Las principales diferencias son la extensión, el contenido y para qué son usados.  &lt;/p&gt;

&lt;p&gt;Un resume es más corto, en el cual se sintetizan habilidades, experiencias y educación, este está orientado a resaltar tus virtudes, puntos fuertes y a demostrar tu idoniedad para un puesto en particular.&lt;br&gt;
Mientras que un CV es estático y no cambia para diferentes posiciones o trabajo, sino que tienden a crear una narrativa de tu trayectoria profesional desde sus inicios.&lt;/p&gt;

&lt;p&gt;En el caso de un currículum profesional, suele escribirse la información de una manera más detallada y extensa, está pensado para relatar en detalle cada experiencia profesional, de un modo que quede toda la información reflejada y bien desarrollada.&lt;br&gt;
Sin embargo, en los resúmenes profesionales se busca ser más eficaz con las palabras, usando frases de la manera más clara y breve posible, normalmente guionadas, que manifiesten todo lo necesario y relevante: &lt;strong&gt;menos es más.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RE2wU_Fi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yt6xauiifwvd061ce48u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RE2wU_Fi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yt6xauiifwvd061ce48u.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Los CVs al detalle y el resume solo lo relevante&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lo ideal sería una combinación de ambos, pudiendo incluso reducir el formato de tu curriculum vitae a una o dos páginas. Es decir, por un lado la extensión de un resumen profesional sería más óptima que la de un currículum, pero tratando de poner la mayor cantidad de información relevante condensada y de una forma que no resulte cargada.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cu%C3%A1ndo-utilizar-un-cv-y-cu%C3%A1ndo-un-resume"&gt;
  &lt;/a&gt;
  ¿Cuándo utilizar un CV y cuándo un resume?
&lt;/h2&gt;

&lt;p&gt;En Norte América, el CV se utiliza principalmente para solicitar puestos académicos, becas, subvenciones, estudios y postgrados. Presenta con todo lujo de detalles formación, experiencia, logros académicos y profesionales, posee una redacción elaborada y presenta párrafos de mayor extensión. Sin límite de longitud.&lt;/p&gt;

&lt;p&gt;No obstante, si solicitas un puesto de trabajo no académico en Norte América, te pedirán que envíes un resume, este debe ser adaptado al puesto de trabajo al que lo vas a enviar, para que incluya todos los datos relevantes e importantes para ese empleo en concreto.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El curriculum vitae es el documento que se solicita en el mundo académico, no solo para solicitar estudios y becas, también para puestos de docentes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En Europa, te pedirán un CV, pero este es lo mismo que un resume en Estados Unidos, el currículum es más propio de los países europeos, pero también lo es en Asia, Oriente Medio, África y Sur América. &lt;br&gt;
Por otro lado, el resume es un formato propio de países americanos como Estados Unidos y Canadá para la búsqueda de empleos.&lt;/p&gt;

&lt;p&gt;La razón por la que se utiliza el resume es por la fama que ha conseguido en los últimos años. &lt;br&gt;
Esta popularidad nace a raíz de que Estados Unidos y otros países americanos tienen más fuerza en el mercado laboral.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;El resume o resumen profesional ha aumentado su popularidad en los últimos años, especialmente a la hora de postular a empleos relacionados con tecnologías, marketing e internet. Existe una tendencia a sacar la mejor versión de ambos formatos combinándolos.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  Conclusión
&lt;/h2&gt;

&lt;p&gt;El CV en relación al resume, es más largo porque contiene más detalles, además es relativamente estático y se emplea en el mundo académico.&lt;br&gt;
El resume es más conciso y más dinámico, ya que se personaliza para cada puesto de trabajo. Es el formato preferido para solicitar un puesto de trabajo. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;No asumas que porque solicitas empleo en un país determinado ese es el tipo de documento que esperan recibir. Revisa la oferta de empleo para asegurarte cuál de las dos versiones requieren.   En general, en la oferta de trabajo se menciona cuando tienes que enviar uno u otro modelo. No obstante, si buscas trabajo en Estados Unidos, debes usar el resume.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La estructura del CV y la del resume no son iguales, pero hay una serie de aspectos que se deben tener en cuenta en ambos casos. Por un lado, ya sea un CV o un resume, hay que ser honesto y preciso con los datos. Además, es recomendable que tanto el CV como el resume se realicen para una oferta en concreto. &lt;/p&gt;

&lt;p&gt;Una opción realmente útil a la hora de redactar este tipo de documentos son las plantillas de CV o resume disponibles para descargar. Son muy fáciles de obtener y se adaptan a tus gustos, además son una forma de reflejar una parte de tu personalidad.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#referencias"&gt;
  &lt;/a&gt;
  Referencias
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cvwizard.es/consejos/diferencias-cv-resume"&gt;Diferencias entre CV y resume - CV Wizard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.modelocurriculum.net/resume-curriculum.html"&gt;¿Resume o Currículum? - modelocurriculum.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trabajarporelmundo.org/diferencia-entre-curriculum-y-resume/"&gt;¿Cuál es la diferencia entre Currículum y Resume? - Trabajar por el Mundo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.onlinecv.es/diferencias-curriculum-vitae-y-resume/"&gt;¿Cuál es la diferencia entre un currículum vitae y un resume? - Online CV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shopcv.com/que-diferencia-hay-entre-el-cv-y-el-resume.html"&gt;¿Qué diferencia hay entre el CV y el resume? - Shop CV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://es.wikihow.com/entender-la-diferencia-entre-un-resumen-profesional-y-un-curr%C3%ADculum-v%C3%ADtae-(CV)"&gt;¿Cómo entender la diferencia entre un resumen profesional y un currículum vítae (CV)? - Wiki How &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>spanish</category>
      <category>español</category>
      <category>resume</category>
      <category>curriculum</category>
    </item>
    <item>
      <title>How to optimize your GatsbyJS Website to crush the LightHouse Google Report </title>
      <author>cesaruseche18</author>
      <pubDate>Fri, 17 Dec 2021 18:15:03 +0000</pubDate>
      <link>https://dev.to/cesareuseche/how-to-optimize-your-gatsbyjs-website-to-crush-the-lighthouse-google-report-2fom</link>
      <guid>https://dev.to/cesareuseche/how-to-optimize-your-gatsbyjs-website-to-crush-the-lighthouse-google-report-2fom</guid>
      <description>&lt;p&gt;I created a website for one of my clients as a freelance and they are a traveling agency located in South America, the website was created using GatsbyJS as the front end and Strapi as the Backend, were the content manager is going to be able to handle all the content of the Website dynamically. &lt;/p&gt;

&lt;p&gt;On this Tutorial I want to explain how to have a very high score on the Lighthouse report, this is going to help your website to rank much better and have a very high performance value, and users are going to have a great experience on your website. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-handle-images-and-lazy-loading-with-gatsby"&gt;
  &lt;/a&gt;
  How to handle images and lazy Loading with Gatsby?
&lt;/h2&gt;

&lt;p&gt;You will need to use these plugins (gatsby-plugin-sharp, gatsby-transformer-sharp, gatsby-plugin-image). &lt;/p&gt;

&lt;p&gt;This last plugin called &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-image/"&gt;gatsby-plugin-image&lt;/a&gt; it's very essential to handle lazy loading since you can specify which kind of lazy loading placeholder you want. Also images are going to render as a webp which google recommends having to improve your image performance. Here is an example how the image are going to render. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nXa0_UAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y99cmbnueusn6glol0x6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nXa0_UAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y99cmbnueusn6glol0x6.png" alt="Image description" width="880" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, I want to explain how to use the plugin. as the Gatsby documentation states "if you are using an image that will be the same each time the component is used, such as a logo or front page hero image, you can use the StaticImage component. The image can be a local file in your project or an image hosted on a remote server. Any remote images are downloaded and resized at build time." Here's an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        &amp;lt;StaticImage
          src="../images/Background-pic.jpg"
          className="hero-style"
          alt="omega homepage background picture"
          layout="fullWidth"
          placeholder="tracedSVG"
        /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But if you are using Dynamic images you will need to use GatsbyImage.&lt;/p&gt;

&lt;p&gt;First, Add the image to your page query.&lt;/p&gt;

&lt;p&gt;Then, Configure your image using childImageSharp&lt;/p&gt;

&lt;p&gt;Finally, Display the image. Here's an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const query = graphql`
  query getSingleDestino($titulo: String) {
    strapiDestinos(titulo: { eq: $titulo }) {
      descripcion
      imagen {
        localFile {
          childImageSharp {
            gatsbyImageData(placeholder: TRACED_SVG, layout: FULL_WIDTH)
          }
        }
      }
    }
  }
`;

const DestinosTemplate = ({ pageContext: { titulo }, data }) =&amp;gt; {
  return (
    &amp;lt;&amp;gt;
      &amp;lt;GatsbySeo
        title={`Destino ${titulo}`}
        description={`Destino de Viaje ${titulo} con los mejores precios`}
        canonical={`https://omega-agencia.netlify.app/destinos/${titulo}`}
      &amp;lt;section&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;div className="destinos-single-page-title"&amp;gt;
            &amp;lt;Title title={titulo} /&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;div className="destinos-single-page-align"&amp;gt;
            &amp;lt;div className="destinos-single-page-description"&amp;gt;
              &amp;lt;div
                className="destinos-description"
                dangerouslySetInnerHTML={{
                  __html: data.strapiDestinos.descripcion,
                }}
              &amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div className="destinos-single-page-image"&amp;gt;
              &amp;lt;GatsbyImage
                image={getImage(data?.strapiDestinos.imagen.localFile)}
                alt={titulo}
                className="destinos-single-page-image-description"
                formats={["AUTO", "WEBP", "AVIF"]}
                fadeIn="false"
              /&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;
          &amp;lt;CTAComponent /&amp;gt;
          &amp;lt;ContactForm /&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/section&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One last thing to mention about optimizing images is that Google request that all the images have a width and height specify for each image, if not that would hurt your lighthouse performance score. &lt;/p&gt;

&lt;p&gt;Finally, Please don't forget to always add an alternative text to each image that you have if you don't it could hurt your lighthouse score report and you SEO significantly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-minimize-bundle-size-and-page-loading-speed"&gt;
  &lt;/a&gt;
  How to minimize bundle size and page loading speed?
&lt;/h2&gt;

&lt;p&gt;Largest Contentful Paint (LCP), Cumulative Layout Shift (CLS), and Total Blocking Time (TBT) are 3 performance metrics that google takes into account when scoring a site performance, it is very important to score very well on these 3 to have a high score.&lt;/p&gt;

&lt;p&gt;Total Blocking Time (TBT) is defined as the total amount of time between First Contentful Paint (FCP) and Time to Interactive (TTI).&lt;/p&gt;

&lt;p&gt;TBT is a measurement of how long the browser's main thread is blocked by long tasks, such as parsing JavaScript (JS).&lt;/p&gt;

&lt;p&gt;To improve it there's a great solution to the JS execution time and the bundle size of your dependencies and that is called &lt;strong&gt;Preact&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Preact is a small (3kb), fast alternative to React. And thanks to gatsby-plugin-preact, switching your Gatsby-site from running on React to Preact is incredibly easy.&lt;/p&gt;

&lt;p&gt;You just need to run the following command and you will be set to go after listing the 'gatsby-plugin-preact' under you plugin list on the gatsby-config.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save gatsby-plugin-preact preact preact-render-to-string
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to check a dependency size before you install it to your project, this &lt;strong&gt;&lt;a href="https://bundlephobia.com/"&gt;site&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;(bundlephobia)&lt;/strong&gt; it's a great tool to compare dependencies, find out the size of any dependency and find similar dependencies that weigh less to the ones that you want to install. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to minimize the size Material UI, TailwindCSS, Boostrap5?&lt;/strong&gt;&lt;br&gt;
These are very big libraries and they could hurt your loading time since they are very big, the solution to minimize the size is using  PurgeCSS to remove any unused classes.&lt;/p&gt;

&lt;p&gt;Here's the website if you want to have a look, the content it's not finalize yet :) and the agency is buying a new domain at the moment of this article &lt;/p&gt;

&lt;p&gt;&lt;a href="https://omega-agencia.netlify.app/"&gt;https://omega-agencia.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you will find this tutorial helpful, if you have any questions or you need any help please comment or send me a DM through Linkedin or Github. &lt;/p&gt;

&lt;p&gt;Follow me on Github &amp;amp; Connect with me on LinkedIn&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cesareuseche"&gt;https://github.com/cesareuseche&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/cesar-useche-profile/"&gt;https://www.linkedin.com/in/cesar-useche-profile/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>gatsby</category>
      <category>performance</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Unit Testing - is it necessary</title>
      <author>zakwillis</author>
      <pubDate>Fri, 17 Dec 2021 18:12:36 +0000</pubDate>
      <link>https://dev.to/zakwillis/unit-testing-is-it-necessary-32i8</link>
      <guid>https://dev.to/zakwillis/unit-testing-is-it-necessary-32i8</guid>
      <description>&lt;p&gt;I have written a hell of a lot on unit testing, and given a lot of thought to this over the years - not necessarily on dev.to . I think I put some stuff on Quora too. I don't include any code samples in here, just thinking through unit testing and integration testing. Am referring to c# .Net/.Net Core in this article.&lt;/p&gt;

&lt;p&gt;I would advise the very old, but fantastic book - the art of unit testing.&lt;/p&gt;

&lt;p&gt;Here is one article I wrote on thinking about data external to tests rather than stubbing way back to tease out integration testing and opening up unit tests to testers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/zakwillis/novel-tips-on-unit-testing-avoiding-hard-coding-p8e"&gt;https://dev.to/zakwillis/novel-tips-on-unit-testing-avoiding-hard-coding-p8e&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unit-tests-thinking-them-through"&gt;
  &lt;/a&gt;
  Unit tests, thinking them through
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#unit-tests-are-documentation"&gt;
  &lt;/a&gt;
  unit tests are documentation
&lt;/h3&gt;

&lt;p&gt;I see unit tests as being there only as a living document on how the code works or is arranged. I barely write them despite having been through the process a lot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unit-tests-prove-that-calculations-work-good-use-case-for-unit-tests"&gt;
  &lt;/a&gt;
  unit tests prove that calculations work - good use case for unit tests
&lt;/h3&gt;

&lt;p&gt;Most unit test benefit is gained when evaluating calculations and operations - small functions/units etc. The idea of isolating external resources/dependencies seems overbaked too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unit-tests-involving-testing-data-are-probably-best-off-being-integration-tests"&gt;
  &lt;/a&gt;
  unit tests involving testing data are probably best off being integration tests
&lt;/h3&gt;

&lt;p&gt;NBI was a great .Net Data Testing framework. Seems like Cedric took his site down. Shame. It was a much better approach to use integration testing than unit test stubs for data logic testing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unit-tests-enterprises-vs-software-houses"&gt;
  &lt;/a&gt;
  unit tests enterprises vs software houses
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Enterprises - low unit tests/high integration tests&lt;/li&gt;
&lt;li&gt;Software Houses - high unit tests / low integration tests&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#is-creating-unit-tests-valuable"&gt;
  &lt;/a&gt;
  Is creating unit tests valuable?
&lt;/h3&gt;

&lt;p&gt;I really have to ask, if in most situations - unit testing is a worthy pursuit? The reason I ask this is for the following reasons;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The true number of test cases is far higher than can be manually coded.&lt;/li&gt;
&lt;li&gt;Focusing on units does not necessarily focus on workflows.&lt;/li&gt;
&lt;li&gt;Tests can go green without proving the unit works. False sense of security.&lt;/li&gt;
&lt;li&gt;Business logic within unit tests can quickly become stale as domain logic requirements changes.&lt;/li&gt;
&lt;li&gt;Black box testing. Testers hate unit tests as they are buried in code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-satisfying-part-about-unit-tests"&gt;
  &lt;/a&gt;
  The satisfying part about unit tests?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Knowing certain code is covered.&lt;/li&gt;
&lt;li&gt;Seeing a sea of green as the tests pass.&lt;/li&gt;
&lt;li&gt;Integrating error checking/reporting through a CI tool to check whether the tests pass.&lt;/li&gt;
&lt;li&gt;The team can see errors on the Continuous Integration Server and resolve them quickly.&lt;/li&gt;
&lt;li&gt;A measurable indicator.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#thinking-about-unit-tests"&gt;
  &lt;/a&gt;
  Thinking about unit tests
&lt;/h2&gt;

&lt;p&gt;I wrote this article because it is abundantly clear to me that writing thousands of unit tests just to have a sea of green, that nobody knows how they work is probably a huge waste of time. Heresy we say. Development projects can be more about test coverage than the product.&lt;/p&gt;

&lt;p&gt;The right unit tests are great at explaining the code. Furthermore, unit tests can signify breaking changes and  this is great. &lt;/p&gt;

&lt;p&gt;When developing complex logic, or using Test Driven Development, unit tests can be a good way to give other team members that the code works.&lt;/p&gt;

&lt;p&gt;There is a final thing which escapes many people. Stable, well written code/applications which accepts consistent inputs and produces consistent testable outputs may not need any unit tests at all.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;gt; Written with &lt;a href="https://stackedit.io/"&gt;StackEdit&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Programming Advent Calendar</title>
      <author>Dillon Barnes</author>
      <pubDate>Fri, 17 Dec 2021 17:53:17 +0000</pubDate>
      <link>https://dev.to/dillonb07/programming-advent-calendar-1hlm</link>
      <guid>https://dev.to/dillonb07/programming-advent-calendar-1hlm</guid>
      <description>&lt;p&gt;Hey all,&lt;br&gt;
This is a late post because I've only just created my account! Should really have been here at the start of December, but it's here now!&lt;/p&gt;

&lt;p&gt;I have created a programming advent calendar. It was made as a Python advent calendar, but you can use any programming language really.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Visit - &lt;a href="https://advent-calendar.dillonb07.is-a.dev"&gt;https://advent-calendar.dillonb07.is-a.dev&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Happy Coding,&lt;/p&gt;

&lt;p&gt;DillonB07&lt;/p&gt;

</description>
      <category>programming</category>
      <category>choosetochallenge</category>
    </item>
    <item>
      <title>Working With Web Feeds: It’s More Than RSS</title>
      <author>Farai Gandiya</author>
      <pubDate>Fri, 17 Dec 2021 17:50:43 +0000</pubDate>
      <link>https://dev.to/faraixyz/working-with-web-feeds-its-more-than-rss-1062</link>
      <guid>https://dev.to/faraixyz/working-with-web-feeds-its-more-than-rss-1062</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;a href="https://codelab.farai.xyz/elsewhere/making-great-feeds/"&gt;Working With Web Feeds: It’s More Than RSS&lt;/a&gt; was first published on &lt;a href="https://codelab.farai.xyz/"&gt;Farai's Codelab&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Between Google Chrome experimenting with “following” sites, along with a growing frustration of how social media platforms limit a creator’s reach to their fans through algorithmic feeds, there’s been renewed interest in RSS feeds and they’re primed for a comeback as we get into 2022.&lt;/p&gt;

&lt;p&gt;You may have heard whispers that “RSS in dead” around the web, but the truth is that they are still widely used as virtually every podcast uses one. Maybe you used to be an RSS fan and need to get re-acquainted with it. Or maybe you’re like Chris here at CSS-Tricks and still love RSS. Whatever the case, RSS is a web technology like any other, and there are best practices for how to create and curate a feed.&lt;/p&gt;

&lt;p&gt;That’s exactly what I’m going to walk you through in this article. Let’s talk about the different kinds of feeds, how to implement them, and what strategies you can use to get the most out of your feed content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post took far longer than I expected to write, but it’s finally finished. It only took 3 months instead of 6 this time. Thanks again to the CSS Tricks team for helping me with this!&lt;/p&gt;

&lt;p&gt;I plan on adding commentary, but that’ll be an exclusive post.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See &lt;a href="https://css-tricks.com/working-with-web-feeds-its-more-than-rss/"&gt;Working With Web Feeds: It’s More Than RSS on css-tricks.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading! If you liked this post, consider &lt;a href="https://codelab.farai.xyz/support/"&gt;supporting my work&lt;/a&gt; by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sharing my work,&lt;/li&gt;
&lt;li&gt;reffering me for a job (or hire me for freelance work),&lt;/li&gt;
&lt;li&gt;sponsoring me on &lt;a href="https://patreon.com/faraixyz"&gt;Patreon&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.buymeacoffee.com/faraixyz"&gt;buying Me A Coffee&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ko-fi.com/faraixyz"&gt;buying Me A Ko-Fi&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://paypal.me/fgandiya"&gt;sending me a tip on Paypal&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amazon.com/?tag=faraixyz00-20"&gt;buy something on Amazon with my affiliate link&lt;/a&gt; (I’ll earn a commision on this as an Amazon affiliate),&lt;/li&gt;
&lt;li&gt;or &lt;a href="https://shareasale.com/r.cfm?b=467188&amp;amp;u=2110247&amp;amp;m=46483&amp;amp;urllink=www%2Enamecheap%2Ecom%2F&amp;amp;afftrack="&gt;buy a domain on Namecheap with my affiliate link&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also &lt;a href="https://buttondown.email/faraiscodelab"&gt;subscribe to my newsletter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have feedback? Send an email to &lt;a href="//mailto:gandiyafarai+feedback@gmail.com?body%3dHey%2bI%2bread%2bthat%2bpost%2band%2bI%2bthought%2bit%2bwas%2bamazing%2521%2bAnd%2byet%252C%2bI%2breally%2bthink%2bthat%25E2%2580%2594I%2btotally%2bdidn%2527t%2buse%2bthe%2bprepopulated%2bemail.%26subject%3dFeedback%2bon%2bWorking%2bWith%2bWeb%2bFeeds%253A%2bIt%25E2%2580%2599s%2bMore%2bThan%2bRSS"&gt;gandiyafarai+feedback at gmail dot com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webfeeds</category>
    </item>
    <item>
      <title>Getting started with React SyntheticEvent</title>
      <author>Matt Angelosanto</author>
      <pubDate>Fri, 17 Dec 2021 17:20:16 +0000</pubDate>
      <link>https://dev.to/logrocket/getting-started-with-react-syntheticevent-1af6</link>
      <guid>https://dev.to/logrocket/getting-started-with-react-syntheticevent-1af6</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/oyetoketobi/"&gt;Oyetoke Tobi&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;In JavaScript, there is little unification regarding event naming conventions in different browsers, meaning developers are often forced to tailor builds to specific browsers. However, React &lt;a href="https://reactjs.org/docs/events.html"&gt;&lt;code&gt;SyntheticEvent&lt;/code&gt;&lt;/a&gt; registers an event’s name in different browsers so you don’t have to. As a unified cross-browser wrapper around the browser's native events, React &lt;code&gt;SyntheticEvent&lt;/code&gt; provides a unified API, prevents browser inconsistencies, and ensures that the event works across multiple platforms.&lt;/p&gt;

&lt;p&gt;In this tutorial, we’ll &lt;a href="https://blog.logrocket.com/creating-hover-events-synthetic-event-react-hover/"&gt;look into the inner workings of React’s &lt;code&gt;SyntheticEvent&lt;/code&gt;&lt;/a&gt;. We’ll cover the fundamentals of plain JavaScript events and React synthetic events, noting their similarities and differences. Afterward, we’ll look at a few examples of React synthetic events in different contexts. Let’s get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-events"&gt;
  &lt;/a&gt;
  JavaScript events
&lt;/h2&gt;

&lt;p&gt;JavaScript events essentially allow a user to interact with a web application and implement operations, like registering click, focus, mouseover, and keypress actions when they are fired inside the browser.&lt;/p&gt;

&lt;p&gt;Each JavaScript event has an event handler that works with an event listener. The event listener listens for the particular event that should occur, while the event handler is a function that contains code blocks that will be executed once the event is either registered or fired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#react-synthetic-events-vs-native-events"&gt;
  &lt;/a&gt;
  React synthetic events vs. native events
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#similarities"&gt;
  &lt;/a&gt;
  Similarities
&lt;/h3&gt;

&lt;p&gt;React synthetic events are very similar to native events, however, with synthetic events, the same API interface is implemented across multiple browsers.&lt;/p&gt;

&lt;p&gt;Both synthetic events and native events can implement the &lt;code&gt;preventDefault&lt;/code&gt; and &lt;code&gt;stopPropagation&lt;/code&gt; methods. However, synthetic events and native events are not exactly the same thing. For example, &lt;code&gt;SyntheticEvent&lt;/code&gt; will point to &lt;code&gt;mouseout&lt;/code&gt; for &lt;code&gt;onMouseLeave&lt;/code&gt; Event.&lt;/p&gt;

&lt;p&gt;You can always access native events with the &lt;code&gt;nativeEvent&lt;/code&gt; attribute if you need direct access. Other &lt;code&gt;SyntheticEvent&lt;/code&gt; attributes include &lt;code&gt;DOMEventTarget&lt;/code&gt;, &lt;code&gt;currentTarget&lt;/code&gt;, &lt;code&gt;boolean defaultPrevented&lt;/code&gt;, and &lt;code&gt;string type&lt;/code&gt;, to name a few.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#differences"&gt;
  &lt;/a&gt;
  Differences
&lt;/h3&gt;

&lt;p&gt;At this point, we're fully aware that handling events with React elements is very similar to handling events with the native DOM element. However, significant differences persist.&lt;/p&gt;

&lt;p&gt;For one, with React, we have to name events using the camelCase notation. For example, in plain JavaScript, the &lt;code&gt;click&lt;/code&gt; event is defined as &lt;code&gt;onclick()&lt;/code&gt;, while in React, we access the same event using &lt;code&gt;onClick()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Additionally, when using JSX with React, we have to pass the function as an event handler instead of as a string. Let’s take things a step further by demonstrating how to use &lt;code&gt;SyntheticEvent&lt;/code&gt; in different contexts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-syntheticevent-endraw-examples"&gt;
  &lt;/a&gt;
  &lt;code&gt;SyntheticEvent&lt;/code&gt; examples
&lt;/h3&gt;

&lt;p&gt;Suppose we’re building an application that includes a list of books. We want to add a search functionality that allows the user to filter the list based on the author’s name. Let’s implement this functionality with both event types.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#plain-javascript"&gt;
  &lt;/a&gt;
  Plain JavaScript
&lt;/h3&gt;

&lt;p&gt;First, define the &lt;code&gt;input&lt;/code&gt; field with JSX, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.js/&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// Some piece of codes...&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="c1"&gt;// Some piece of codes &lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this event system, a user would type in the &lt;code&gt;input&lt;/code&gt; field, temporarily filtering the list. To filter the list of books and update the state, you’ll need to get access to the value of the &lt;code&gt;input&lt;/code&gt; field.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-raw-syntheticevent-endraw-implementation"&gt;
  &lt;/a&gt;
  React &lt;code&gt;SyntheticEvent&lt;/code&gt; implementation
&lt;/h3&gt;

&lt;p&gt;With React &lt;code&gt;SyntheticEvent&lt;/code&gt;, we can access the event payload. In the &lt;code&gt;input&lt;/code&gt; field, we define an &lt;code&gt;onChange&lt;/code&gt; callback function, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.js/&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// Some piece of codes...&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; 
            &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; 
            &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSearchChange&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        // Some piece of codes...
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we’ll bind and define the method; the function is bound to the component, and it is a class method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.js/&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSearchChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSearchChange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onDismiss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onDismiss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;onSearchChange&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="c1"&gt;// Some piece of codes&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Some piece of codes...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the method argument, we now have access to the synthetic React event. The event now has the value of the &lt;code&gt;input&lt;/code&gt; field and the event payload. Essentially, &lt;code&gt;e&lt;/code&gt; is a synthetic event, giving us the ability to manipulate the state of &lt;code&gt;searchName&lt;/code&gt;, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.js/&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Some piece of codes&lt;/span&gt;

  &lt;span class="nx"&gt;onSearchChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;searchName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Some piece of codes...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to give &lt;code&gt;searchName&lt;/code&gt; an initial state in the constructor, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.js/&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;searchName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSearchChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSearchChange&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onDismiss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onDismiss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Some piece of codes...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-our-react-raw-syntheticevent-endraw-project"&gt;
  &lt;/a&gt;
  Building our React &lt;code&gt;SyntheticEvent&lt;/code&gt; project
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k_goVjpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/react-synthetic-event-template-application.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k_goVjpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/react-synthetic-event-template-application.png" alt="React Synthetic Event Template Application" width="730" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we’re familiar with the benefits of React &lt;code&gt;SyntheticEvent&lt;/code&gt;, let’s work on a project that uses synthetic events.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep in mind that interfacing with different synthetic events is very similar to working with normal JavaScript events. React’s goal is for synthetic events to remain fairly similar to normal native events, for instance, by using the same properties.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s create the React project for this demonstration using the React CLI. If you don’t have the React CLI installed, run the following command in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; create-react-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create the project and give it the name of your choice using the command below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;create-react-app &amp;lt;app-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command above creates a template to start building our application. You can see this template by changing into your new directory and starting the development server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;app-name&amp;gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your browser, head over to &lt;code&gt;http://localhost:3000&lt;/code&gt;. We’ll work in the &lt;code&gt;app.js&lt;/code&gt; file, which is automatically created when you run the &lt;code&gt;create-react-app&lt;/code&gt; command. Go ahead and delete its content so that the page is blank, then paste the following code block in your empty &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"main__left"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form__container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form"&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* typing event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__change"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Change event trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` Change event occurred, value is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__change"&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__change"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* key typed event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__keycode"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Key press event trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;onKeyPress&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`KeyPress event occurred, key code is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__keycode"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* focus event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Focus event trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;onFocus&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Focus event occurred`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Click event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__click"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click event Trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Click event occurred`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__click"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__click"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click Me Now&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"main__right"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each input field above works together with the button to track different events, some of which we established earlier. These include an &lt;code&gt;onSubmit&lt;/code&gt; event, a &lt;code&gt;keyPress&lt;/code&gt; event, a &lt;code&gt;click&lt;/code&gt; event, and lastly, a &lt;code&gt;focus&lt;/code&gt; event.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;onSubmit&lt;/code&gt; uses the general &lt;code&gt;preventDefault&lt;/code&gt; property to prevent default actions when the form is submitted. The &lt;code&gt;preventDefault&lt;/code&gt; property is the same as the one found in native events.&lt;/p&gt;

&lt;p&gt;In the code block above, we are alerting the user when different events are triggered. For instance, clicking the button above will trigger an &lt;code&gt;onClick&lt;/code&gt; event, which will display the following message to the user:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4GKSyz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/synthetic-event-click-event.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4GKSyz6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/12/synthetic-event-click-event.png" alt="Synthetic Event Click Event" width="570" height="156"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also used the &lt;code&gt;keyCode&lt;/code&gt; property for the &lt;code&gt;keyPress&lt;/code&gt; event for the stylesheet as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;color__primary&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="nx"&gt;a84e&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;color__secondary&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;187&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;184&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;184&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;fr&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="nx"&gt;vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main__right&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;color__primary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main__left&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;color__secondary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;place&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;None&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;color__primary&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;grid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main__right&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's add the &lt;code&gt;Capture&lt;/code&gt; suffix to each of our events so that we can quickly capture our event without moving it through the bubbling phase:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./style.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"main__left"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form__container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"form"&lt;/span&gt; &lt;span class="na"&gt;onSubmitCapture&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* typing event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__change"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Change event trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;onChangeCapture&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;` Change event occurred, value is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__change"&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__change"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* key typed event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__keycode"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Key press event trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;onKeyPressCapture&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`KeyPress event occurred, key code is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__keycode"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* focus event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Focus event trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;onFocusCapture&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Focus event occurred`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__focus"&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Click event */&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__click"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click event Trigger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClickCapture&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Click event occurred`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__click"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"input__click"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click Me Now&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"main__right"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, our event is captured immediately after a trigger.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;SyntheticEvent&lt;/code&gt; allows events in React to easily adapt to different browsers, solving an issue that has caused unnecessary frustration for developers.&lt;/p&gt;

&lt;p&gt;In this tutorial, we took a detailed look at React &lt;code&gt;SyntheticEvent&lt;/code&gt;, comparing it to plain JavaScript events and running through a few examples. Then, we built our own application using both synthetic events and JavaScript events. Now, you should have a better understanding of how to use synthetic events to improve your developer experience. I hope you enjoyed this tutorial!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#full-visibility-into-production-react-apps"&gt;
  &lt;/a&gt;
  Full visibility into production React apps
&lt;/h2&gt;

&lt;p&gt;Debugging React applications can be difficult, especially when users experience issues that are hard to reproduce. If you’re interested in monitoring and tracking Redux state, automatically surfacing JavaScript errors, and tracking slow network requests and component load time, &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;try LogRocket&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your React app. Instead of guessing why problems happen, you can aggregate and report on what state your application was in when an issue occurred. LogRocket also monitors your app's performance, reporting with metrics like client CPU load, client memory usage, and more.&lt;/p&gt;

&lt;p&gt;The LogRocket Redux middleware package adds an extra layer of visibility into your user sessions. LogRocket logs all actions and state from your Redux stores.&lt;/p&gt;

&lt;p&gt;Modernize how you debug your React apps — &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;start monitoring for free&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Log4j Vulnerability - Important Note to Performance Engineers</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Fri, 17 Dec 2021 16:40:02 +0000</pubDate>
      <link>https://dev.to/qainsights/log4j-vulnerability-important-note-to-performance-engineers-1e3j</link>
      <guid>https://dev.to/qainsights/log4j-vulnerability-important-note-to-performance-engineers-1e3j</guid>
      <description>&lt;p&gt;The Internet went crazy last week. If you are an avid user of Tech Twitter, you would have known about the Log4j fiasco. Within a few hours, Log4j vulnerability made headlines on popular news outlets, Twitter, LinkedIn, major organizations' internal forums, Slack channels and more. This blog post is all about Log4j vulnerability for performance engineers about how to mitigate the attack.&lt;/p&gt;

&lt;h2&gt;What is Apache Log4j Vulnerability CVE-2021-44228?&lt;/h2&gt;

&lt;p&gt;I am not a security expert. But I closely follow the security news on Twitter and feeds. CVE-2021-44228 is about remote code execution via JNDI lookup. &lt;/p&gt;

&lt;p&gt;Apache Log4j is a popular logging framework for Java applications, websites, enterprises, consumer apps and more. Developers log information about security and performance for debugging, audit, and analysis. &lt;/p&gt;

&lt;p&gt;By sending the JNDI with LDAP, it is possible to extract or operate the remote server or local machine, if the app is using Log4j 2.0-beta9 to 2.14.1. &lt;/p&gt;

&lt;p&gt;There are numerous articles, videos, repos are available to deep-dive into this CVE. &lt;/p&gt;

&lt;p&gt;This article targets performance engineers to help out with how to mitigate this vulnerability for the testing tools we are using. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/12/Log4j-Vulnerability-Important-Note-to-Performance-Engineers.jpeg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdpUqOrZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/12/Log4j-Vulnerability-Important-Note-to-Performance-Engineers-1024x1024.jpeg" alt="Log4j Vulnerability - Important Note to Performance Engineers" width="880" height="880"&gt;&lt;/a&gt;Log4j Vulnerability - Important Note to Performance Engineers&lt;/p&gt;

&lt;h2&gt;Apache JMeter&lt;/h2&gt;

&lt;p&gt;The latest version of JMeter 5.4.1 uses Log4j 2.13.3 which is affected by CVE-2021-44228.&lt;/p&gt;

&lt;p&gt;There are a couple of options available to mitigate the risk. But it is recommended to follow the Apache Log4j guidelines which are mentioned &lt;a href="https://logging.apache.org/log4j/2.x/security.html#CVE-2021-44228" rel="noreferrer noopener"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CVE-2021-44228 solves the problem partially. CVE-2021-45046 prevents attacks by mitigating attackers various patterns. &lt;/p&gt;

&lt;p&gt;Log4j 2.16.0 fixes this issue by removing support for message lookup patterns and disabling JNDI functionality &lt;strong&gt;by default&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;My recommendation is to update the Log4j jars of JMeter to 2.16.0 completely.&lt;/p&gt;

&lt;p&gt;Go to JMETER_HOME\lib, delete all the log4j* files. &lt;/p&gt;

&lt;p&gt;Download the Log4j zip file from &lt;a href="https://logging.apache.org/log4j/2.x/download.html" rel="noreferrer noopener"&gt;Log4j website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Extract it and copy the below files and paste it into JMETER_HOME\lib folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;log4j-1.2-api-2.16.0.jar
log4j-api-2.16.0.jar
log4j-core-2.16.0.jar
log4j-slf4j-impl-2.16.0.jar&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JMeter 5.4.2 will be released soon with the bumped up version of Log4j. I will update my post, once it is released.&lt;/p&gt;

&lt;p&gt;UPDATE: &lt;a href="https://qainsights.com/whats-new-in-apache-jmeter-5-4-2/" rel="noreferrer noopener"&gt;JMeter 5.4.2 has been released&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Tricentis NeoLoad&lt;/h2&gt;

&lt;p&gt;Tricentis has released NeoLoad 8.0 with Log4j 2.15.0.&lt;/p&gt;

&lt;h2&gt;Grafana k6&lt;/h2&gt;

&lt;p&gt;Grafana's k6 &lt;a href="https://k6.io/blog/k6-products-not-impacted-by-cve-2021-44228/" rel="noreferrer noopener"&gt;doesn't use Log4j&lt;/a&gt;. You are good to go. &lt;/p&gt;

&lt;h2&gt;MicroFocus LoadRunner and Silk Performer&lt;/h2&gt;

&lt;p&gt;MicroFocus LoadRunner family is impacted by Log4j vulnerability. Please &lt;a href="https://portal.microfocus.com/s/article/KM000003046?language=en_US" rel="noreferrer noopener"&gt;follow this link&lt;/a&gt; to mitigate the risk.&lt;/p&gt;

&lt;p&gt;Here is the bulletin link for &lt;a href="https://microfocus.my.salesforce.com/sfc/p/#1t000000vhDP/a/8e000000c7fR/JrOxnycbJxIXDpzlzCCfBOy6pqqRcPD_cu.ySvH5Vc8" rel="noreferrer noopener"&gt;Silk Performer&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Gatling&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gatling.io/2021/12/log4shell-why-is-gatling-unaffected/" rel="noreferrer noopener"&gt;Gatling uses&lt;/a&gt; logback logging library. If you are using Gatling, you are not affected.&lt;/p&gt;

&lt;h2&gt;RedLine 13&lt;/h2&gt;

&lt;p&gt;RedLine13 itself doesn't use Log4j framework. But once JMeter 5.4.2 is out, it will be available on the RedLine13 platform.&lt;/p&gt;

&lt;h2&gt;EggPlant Performance&lt;/h2&gt;

&lt;p&gt;If you are using &lt;a href="https://blog.eggplantsoftware.com/apache-log4j-2-security-vulnerability" rel="noreferrer noopener"&gt;EggPlant Performance&lt;/a&gt;, you are NOT affected by the Log4j vulnerability. &lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It is recommended to update the Log4j libraries with 2.16.0 ASAP. I will keep posting this blog post, if I get any new information. &lt;/p&gt;

&lt;p&gt;Log4j developers have been working tirelessly to fix the issues for the past 1 week. A big salute to them from &lt;a href="https://qainsights.com" rel="noreferrer noopener"&gt;QAInsights&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webperf</category>
      <category>tutorial</category>
      <category>testing</category>
    </item>
    <item>
      <title>TEMPLATE: Create An Online Training Course App For Free</title>
      <author>Backendless</author>
      <pubDate>Fri, 17 Dec 2021 16:36:18 +0000</pubDate>
      <link>https://dev.to/backendless/template-create-an-online-training-course-app-for-free-1ih9</link>
      <guid>https://dev.to/backendless/template-create-an-online-training-course-app-for-free-1ih9</guid>
      <description>&lt;p&gt;If you’re looking to create an online training course, this free app template can be your starting point. Use this blueprint for a highly professional and smoothly functional website can turn a curious website visitor into a loyal student.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://backendless.com/introducing-app-blueprints/"&gt;App Blueprints&lt;/a&gt; are more than just templates from which to build a specific type of application. We design all of our free App Blueprints to provide one or more key functions that a developer would want to add to their application, regardless of the app’s business use.&lt;/p&gt;

&lt;p&gt;The Online Training App showcases how to build a beautiful, functional and professional online service website. You can use the functionality highlighted in this template to customize your own website, or modify the template to fit your business needs.&lt;/p&gt;

&lt;p&gt;As with all of our App Blueprints, the entirety of this app blueprint was built without code using &lt;a href="https://backendless.com/developers/#ui-builder"&gt;Backendless’ UI Builder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Online Training App Blueprint is a mixture of form and function. The app is elegantly designed to appeal to website visitors from a wide range of backgrounds while also being feature-rich and functionally smooth. You can use the blueprint to educate yourself on Backendless functionality, or customize it to build your own online training course.&lt;/p&gt;

&lt;p&gt;In this article, we will explore the basics of this app’s functionality (click the link to jump to the appropriate section):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#create-an-online-training-course"&gt;Create an online training course&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#database-driven-content"&gt;Deliver database-driven content&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#txt-content"&gt;Display content from .txt files&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#mobile-hamburger-menu"&gt;Implement a mobile hamburger menu&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, all App Blueprints include thorough instructions to guide you through how to make your own modifications and customizations.&lt;/p&gt;

&lt;p&gt;The web app, which functions identically to a website, can be purchased for free when creating a new app in Backendless Console. It features a beautiful, responsive design that will look great on any size screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lastingcoil.backendless.app/index.html"&gt;Click here to view the live demo and follow along (opens in a new tab).&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-an-online-training-course"&gt;
  &lt;/a&gt;
  Create an online training course
&lt;/h2&gt;

&lt;p&gt;The Online Training App Blueprint can be a perfect template for creating your own elearning course. The app instructions, available in Backendless Console when you create an app from any App Blueprint, lays out how to create your own course.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4zmEqcH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendlessappcontent.com/3A09C0E4-42F3-D760-FF0D-647E3C849800/console/twmgdmusqqonhiffybpfohdksosovjtfvifo/files/view/instructions/images/structure.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4zmEqcH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendlessappcontent.com/3A09C0E4-42F3-D760-FF0D-647E3C849800/console/twmgdmusqqonhiffybpfohdksosovjtfvifo/files/view/instructions/images/structure.png" alt="structure" width="782" height="318"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The learning system of the app with training content has the following structure:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#course-page"&gt;
  &lt;/a&gt;
  Course page
&lt;/h3&gt;

&lt;p&gt;The Course page contains a general description of the course and the name of the lessons and topics of the course. By clicking on a lesson or topic, you navigate directly to that lesson or topic. You can go to the Course page by selecting the chosen course in the “Popular Courses” section of the Home page (the “See more…” button). The course also can be selected on the All Courses page. The content of the Course page is stored in the &lt;code&gt;Course&lt;/code&gt; table.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lesson-page"&gt;
  &lt;/a&gt;
  Lesson page
&lt;/h3&gt;

&lt;p&gt;The Lesson page dynamically loads the content of the lesson with the names of its topics or the topic of the lesson with its content, depending on what you chose on the Course page. Information on this page, as well as links to files with content are stored in the Lesson and Topic tables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deliver-databasedriven-content"&gt;
  &lt;/a&gt;
  Deliver database-driven content
&lt;/h2&gt;

&lt;p&gt;In all App Blueprints, a large portion of the content displayed on the page is pulled from the database. The primary reason for this approach is that it makes it very easy to update or modify your site’s content (and course structure) without having to republish the site/app.&lt;/p&gt;

&lt;p&gt;This is even more important for an ecourse website. Course content, particularly related to technology, is likely to change frequently. New topics, new examples, and new technologies will need to be added regularly. The last thing you want is to have to jump through additional hoops to get this content to your students.&lt;/p&gt;

&lt;p&gt;Sections on the home page and pages throughout the app utilize database-driven content. The tables in the blueprint’s database are named to make it easy to identify where the content is derived from.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Cncnfys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/List-of-data-tables-600x488.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Cncnfys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/List-of-data-tables-600x488.png" alt="List of data tables" width="600" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, let’s look at the popular course section of the site. Given the nature of this section, you will want to have total control over which courses are shown here, whether it’s to promote new courses, attract users to your best sellers, or give more attention to your less-viewed courses.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://backendless.com/wp-content/uploads/2021/12/Popular-courses-section-in-UI-Builder.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qeP7PSjd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Popular-courses-section-in-UI-Builder.jpg" alt="Popular courses section in UI Builder" width="880" height="526"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the above screenshot, only one course block is visible. Using Dynamic List Behaviour, this block is tied to a data source and automatically replicates itself to show all items that you want displayed. The dynamic list will populate an image, header text, description text, and even a link to each course using the “See more…” button component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#display-content-from-txt-files"&gt;
  &lt;/a&gt;
  Display content from .txt files
&lt;/h2&gt;

&lt;p&gt;In addition to populating the page content, the blueprint pulls the actual course content from a .txt file. This way, you can easily build your course content in your favorite word processor, then save the file as .txt and upload it to your app’s File Storage.&lt;/p&gt;

&lt;p&gt;Let’s look at an example. Below is the course content .txt file for the HTML Elements and Attributes topic.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://backendless.com/wp-content/uploads/2021/12/txt-file-content.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s28jREq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/txt-file-content-1200x149.jpg" alt="txt file content" width="880" height="109"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The file is found under the &lt;code&gt;topicData&lt;/code&gt; folder in File Storage in the blueprint app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--na0notTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Topic-txt-files-in-File-Storage.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--na0notTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Topic-txt-files-in-File-Storage.jpg" alt="Topic txt files in File Storage" width="582" height="732"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When a user visits the topic page, the app presents the content in a professional and easily readable form for the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WAjjBAT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Topic-txt-file-displayed-on-the-page-1200x642.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WAjjBAT0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Topic-txt-file-displayed-on-the-page-1200x642.jpg" alt="Topic txt file displayed on the page" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implement-a-mobile-hamburger-menu"&gt;
  &lt;/a&gt;
  Implement a mobile hamburger menu
&lt;/h2&gt;

&lt;p&gt;Finally, the Online Training App Blueprint utilizes a “hamburger” menu for mobile devices and tablets. You can use this blueprint to experiment with implementation of such a menu on a variety of different pages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--541J8SpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Hamburger-Menu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--541J8SpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Hamburger-Menu.gif" alt="Hamburger Menu" width="351" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best way to work with dropdown menus, modals, overlays, etc., is to explore the page elements using the page element view in UI Builder. You can click the eye icon to hide elements when you are not working with them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://backendless.com/wp-content/uploads/2021/12/Mobile-menu-UI-Builder-element-list.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZ36qi_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backendless.com/wp-content/uploads/2021/12/Mobile-menu-UI-Builder-element-list-1200x529.png" alt="Mobile menu UI Builder element list" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://backendless.com/build-a-hamburger-menu-in-ui-builder-tutorial/"&gt;For a simple step-by-step guide to implementing your own hamburger menu, check out our how to guide here.&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#closing"&gt;
  &lt;/a&gt;
  Closing
&lt;/h2&gt;

&lt;p&gt;The Online Training App showcases how to build an online course web app using UI Builder. It can be modified to produce your own online training course easily, allowing you to focus on course content instead of website design. Most importantly, it provides Backendless users with a template to follow for a variety of key Backendless functions.&lt;/p&gt;

&lt;p&gt;Using this template, you can see first-hand how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Create an online training course&lt;/li&gt;
&lt;li&gt;  Deliver database-driven content&lt;/li&gt;
&lt;li&gt;  Display content from .txt files&lt;/li&gt;
&lt;li&gt;  Implement a mobile menu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Codeless Coding!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;This article first appeared on &lt;a href="https://backendless.com/create-an-online-training-course-app-free/"&gt;backendless.com&lt;/a&gt; on December 14th, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>career</category>
      <category>writing</category>
    </item>
    <item>
      <title>CSS Attribute Selectors</title>
      <author>elinabey</author>
      <pubDate>Fri, 17 Dec 2021 16:24:36 +0000</pubDate>
      <link>https://dev.to/elinabey/css-attribute-selectors-422j</link>
      <guid>https://dev.to/elinabey/css-attribute-selectors-422j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RsMQKFO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d5fucjcs02ocx008288.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RsMQKFO2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d5fucjcs02ocx008288.jpg" alt="CSS Attribute Selectors" width="880" height="495"&gt;&lt;/a&gt;CSS Attribute Selectors. An attribute selector in CSS is utilized to pick any HTML elements with some particular attribute value or attribute. This is an excellent technique to style any HTML elements by making an attribute selector arrange them based on some single attributes and the single attribute selectors which is selecting those elements with the same attribute values or attributes. In our last article we discussed about &lt;a href="https://dev.to/elinabey/types-of-css-selectors-1007"&gt;Types of CSS Selectors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example: &lt;/strong&gt; As we know that styles the HTML tags with their tag names, ID names, class names, etc. These will apply the settings to the complete tag or complete class or complete id names within the page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-attribute-selector-work-in-css"&gt;
  &lt;/a&gt;
  How does Attribute Selector work in CSS?
&lt;/h2&gt;

&lt;p&gt;CSS attribute selector is operating based on attribute preference given to a specific selector. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-attribute-selectors"&gt;
  &lt;/a&gt;
  CSS Attribute Selectors
&lt;/h2&gt;

&lt;p&gt;1.[attribute] Selector&lt;br&gt;
2.[attribute~="value"] Selector&lt;br&gt;
3.[attribute="value"] Selector&lt;br&gt;
4.[Attribute$=” value”] selector&lt;br&gt;
5.[attribute*="value"] Selector&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#attribute-selector"&gt;
  &lt;/a&gt;
  [attribute] Selector
&lt;/h3&gt;

&lt;p&gt;This is used to pick an HTML tag with the wanted attribute only.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Services&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;target&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c"&gt;/*This will color the a tag with target attribute*/&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#attributevalue-selector"&gt;
  &lt;/a&gt;
  [attribute~="value"] Selector
&lt;/h3&gt;

&lt;p&gt;This is used to pick HTML elements with wanted attribute value holds a given word anyplace in the selector.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="nt"&gt;soft&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"soft"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Attribute ~ Selector:  This is utilized to select HTML elements with needed attribute and value.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#attributevalue-selector"&gt;
  &lt;/a&gt;
  [attribute="value"] Selector
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;psoft&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"soft"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Attribute Value Selector:  This is used to select HTML elements with needed  attribute and value.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#attribute-value-selector"&gt;
  &lt;/a&gt;
  [Attribute$=” value”] selector
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"soft"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"soft"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Attribute $ Selector: This is used to select HTML tags whose attribute value ends with particular value.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#attributevalue-selector"&gt;
  &lt;/a&gt;
  [attribute*="value"] Selector
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s1"&gt;"soft"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"soft"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Attribute * Selector:  This is used to select HTML elements whose attribute value starting with specified value anywhere in the attribute.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I shared this post from &lt;a href="https://softcodeon.com/css/css-attribute-selectors.htm"&gt;CSS Attribute Selectors&lt;/a&gt; you can read in detail from there.&lt;/p&gt;

&lt;p&gt;If you have any question please help to improve. Thank you.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Mistakes I've seen as a Technical Interviewer</title>
      <author>Farhana</author>
      <pubDate>Fri, 17 Dec 2021 15:48:50 +0000</pubDate>
      <link>https://dev.to/farhanaxmustafa/mistakes-ive-seen-as-a-technical-interviewer-1gdm</link>
      <guid>https://dev.to/farhanaxmustafa/mistakes-ive-seen-as-a-technical-interviewer-1gdm</guid>
      <description>&lt;p&gt;I've interviewed new grads looking for their first software engineering role. It seems like yesterday that I was also on the job hunt, so being on the other side of the table was a surreal experience. It's given me a new perspective on what companies are looking for. During these interviews, I've noticed some patterns that candidates fall into. In this post, I'll be discussing some that could make or break the interviewer's final decision.&lt;/p&gt;

&lt;p&gt;Here are the mistakes I've seen new grads make during their technical interviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-diving-straight-into-coding"&gt;
  &lt;/a&gt;
  Mistake: Diving straight into coding
&lt;/h2&gt;

&lt;p&gt;Interviewers expect the candidate to have questions after reading the prompt. A common mistake is immediately jumping to code a solution. Not only will this lead to confusion later, but mistakes are more likely to happen and that will cost time. This also signals that the candidate has poor communication skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;Spend a few minutes to ask clarifying questions. This may seem like a waste of the small amount of time you have to get a working solution. However, that's not the case. Asking questions can reduce potential mistakes. This can also impress your interviewers. This shows how you collaborate with others and you're able to understand business requirements. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-staying-silent"&gt;
  &lt;/a&gt;
  Mistake: Staying silent
&lt;/h2&gt;

&lt;p&gt;It's awkward for the interviewer if you sit there in silence. If you don't communicate what is going through your head, then you can't prove that you deserve the software engineering role. It's better to say every thought out loud because that's the only way the interviewer can know your thought process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;To confirm that you understand the problem, repeat it in your own words. You can list out some examples of expected inputs and outputs, but if you can't think of any then that's okay. You can ask for examples from the interviewer! Ask all your clarifying questions. Be sure to confirm any assumptions you have. You can do this by double checking with the interviewer if it's safe to assume things or not. It may feel weird at first to talk out loud while coding but it'll feel natural after some practice. &lt;br&gt;
I recommend learning and using the &lt;a href="https://guides.codepath.com/compsci/UMPIRE-Interview-Strategy"&gt;UMPIRE method by CodePath&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-not-knowing-the-programming-language-well"&gt;
  &lt;/a&gt;
  Mistake: Not knowing the programming language well
&lt;/h2&gt;

&lt;p&gt;Usually, a candidate can pick what programming language they want to code in. I've seen candidates use a language and not understand why  compiler errors would appear. This causes frustration and confusion for the candidate, which can hurt their performance. I've also seen a candidate blame the compiler instead of debugging what went wrong. This shows the interviewer that you're not able to debug an issue or handle problems well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;Study up on your language and practice problem solving without autocomplete enabled in your IDE. Make sure you know how to explain why you chose this specific data structure versus others in order to solve the challenge.&lt;br&gt;
For more information on picking a language, read this amazing post in the &lt;a href="https://techinterviewhandbook.org/picking-a-language/"&gt;Tech Interview Handbook&lt;/a&gt; on the pros and cons of using Python vs Java during an interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mistake-not-having-questions-at-the-end"&gt;
  &lt;/a&gt;
  Mistake: Not having questions at the end
&lt;/h2&gt;

&lt;p&gt;Not asking your interviewer(s) questions is a missed opportunity. You're depriving yourself of interviewing the company and seeing if this role is a right fit for you. Also some people may view this as a lack of interest in the position. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-to-do-instead"&gt;
  &lt;/a&gt;
  What to do instead:
&lt;/h3&gt;

&lt;p&gt;Prepare a list of back up questions if you have nothing to ask. This is something you may benefit from without you realizing it. You get to pick the brains of engineers who are in the place that you want to be. And your interviewers are more than happy to share their experiences with you.&lt;br&gt;
Here are some &lt;a href="https://techinterviewhandbook.org/questions-to-ask/"&gt;great examples on what questions you can ask for greatest impact&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;I must admit that I once made these mistakes when I was looking to start my career. It's taken me a lot of practice, and a lot of rejections, to improve my technical interviewing skills.&lt;/p&gt;

&lt;p&gt;I can confirm it's true when they say your interviewer(s) want you to succeed. We'll give hints and we'll debug the compiler error with you. I get excited when a candidate is on the right track and I'm happy to give a hint or two if I need to. Technical interviewing is a nerve wracking experience but it gets better with practice. There's no growth in comfort so let's use our mistakes to make ourselves better.&lt;/p&gt;

&lt;p&gt;Let me know in the comments if you've seen any other mistakes I haven't touched on!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Write a Good Mobile App Testing Strategy</title>
      <author>QA Madness</author>
      <pubDate>Fri, 17 Dec 2021 15:40:19 +0000</pubDate>
      <link>https://dev.to/qamadness/how-to-write-a-good-mobile-app-testing-strategy-1e94</link>
      <guid>https://dev.to/qamadness/how-to-write-a-good-mobile-app-testing-strategy-1e94</guid>
      <description>&lt;p&gt;According to Statista, the number of mobile devices worldwide will increase by 3.7 billion during the next three years. Taking into account the mass digitization forced by social distancing and followed by remote work and education, it is not hard to believe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h4vI2Jg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nak3w6114klu59ql8oq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h4vI2Jg_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nak3w6114klu59ql8oq.jpg" alt="Image description" width="880" height="621"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meanwhile, eMarketer reports that smartphone users in the US spend 88% of their mobile time on apps. Of course, the numbers can vary across countries. The general tendency, however, is rather clear: people prefer apps to web view in browsers. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnV3STM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/409bmt44427ksm6v5fx1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnV3STM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/409bmt44427ksm6v5fx1.jpg" alt="Image description" width="880" height="621"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This fact reminds us once more that every mobile app should undergo thorough testing before it appears in the stores. To ensure expected business performance and high customer retention, a company should offer users an appealing and functional software product. In other words, mobile QA with a solid testing strategy is essential.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-testing-strategy"&gt;
  &lt;/a&gt;
  What Is a Testing Strategy?
&lt;/h2&gt;

&lt;p&gt;A testing strategy is a guideline a QA team follows to achieve the set quality-related objectives for a software product. A mobile app testing strategy answers the question, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“How is the team going to test this particular mobile app?”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Don’t confuse it with a &lt;a href="https://www.qamadness.com/qa-strategy-whats-inside/"&gt;QA strategy&lt;/a&gt;. The latter covers more than just testing. The same goes for a testing plan – it is more detailed. In smaller projects, a testing strategy is often included in a testing plan.&lt;/p&gt;

&lt;p&gt;A mobile strategy document usually features information about the testing objectives, team roles and responsibilities, defect tracking and reporting, tools, and deliverables. Simply put, it briefly explains how testing will be done in a way all parties can understand.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-a-mobile-app-testing-strategy-necessary"&gt;
  &lt;/a&gt;
  Why Is a Mobile App Testing Strategy Necessary?
&lt;/h2&gt;

&lt;p&gt;Many quality-related aspects in development can be handled efficiently only by engaging professional QA resources. It doesn’t matter if a company chooses to create an in-house team or go with QA outsourcing. The point is to make sure that testing isn’t based on enthusiasm only, but engages relevant expertise, too. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.qamadness.com/services/mobile-application-testing/"&gt;Mobile app testing&lt;/a&gt; goes beyond executing several common user flows. It should cover maximum requirements and consider use cases that might not be obvious at first. Besides, some aspects require using a specific tech stack – for example, app performance testing.&lt;/p&gt;

&lt;p&gt;Testing requires thorough planning summarized in a custom strategy that encompasses all the strategic areas, describes essential testing activities, roles and responsibilities, etc. Every activity has a specific place in the pipeline. It is important to schedule those activities correctly so that they don’t interfere with one another. The same goes for objectives, resources, and logistics in general. Having everything recorded and agreed makes the testing process structured, understandable for all the parties, and therefore much easier to manage. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-strategy-for-mobile-application-testing-step-by-step"&gt;
  &lt;/a&gt;
  Test Strategy for Mobile Application Testing Step By Step
&lt;/h2&gt;

&lt;p&gt;Let’s start with the structure of a mobile app testing strategy. As a rule, it includes the following components and sections: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title Page&lt;/li&gt;
&lt;li&gt;Document Control&lt;/li&gt;
&lt;li&gt;Test Strategy Identifier&lt;/li&gt;
&lt;li&gt;Table of Contents&lt;/li&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Purpose&lt;/li&gt;
&lt;li&gt;Testing Process&lt;/li&gt;
&lt;li&gt;General Approach&lt;/li&gt;
&lt;li&gt;Issue Severity&lt;/li&gt;
&lt;li&gt;Issue Priority&lt;/li&gt;
&lt;li&gt;Defect Life Cycle&lt;/li&gt;
&lt;li&gt;Environment&lt;/li&gt;
&lt;li&gt;Tools&lt;/li&gt;
&lt;li&gt;Deliverables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that it is not the only correct way to write a testing strategy. For example, you may include information about possible risks and their mitigation. The structure and content of some clauses can also vary. This sample mobile testing strategy is based on the documents our team uses. You will find more detailed explanations on the abovementioned components in the text. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-start-with-the-basic-information"&gt;
  &lt;/a&gt;
  1. Start with the basic information
&lt;/h3&gt;

&lt;p&gt;Create the title page that features the document name, for example: &lt;em&gt;Product Name Testing Strategy&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Below, add a &lt;strong&gt;Test Strategy Identifier – a unique number assigned to the document&lt;/strong&gt;. It is generated to identify the testing strategy, its level, and the level of software related to it. &lt;/p&gt;

&lt;p&gt;Include information regarding document control. Usually, it goes as two tables – one for document detail and the other for change control. Document Detail features document title, version, date, electronic file name &amp;amp; location, author, and contributors. Change Control shows issue date, version, details (e. G. a working draft), and authors. &lt;/p&gt;

&lt;p&gt;The document control section allows keeping track of changes that take place during the process. Though quite static, a mobile app testing strategy can be modified as a project develops or in case project requirements or a client’s requests change.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-write-an-introduction"&gt;
  &lt;/a&gt;
  2. Write an introduction
&lt;/h3&gt;

&lt;p&gt;The next section of the strategy document is the introduction. Here, a QA team briefly explains the basic activities that will take place. For example: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Our company provides Functional, UI, Cross-Browser, Cross-Platform, Smoke, and Regression Testing services to detect problems in the applications before it goes on production. The team prepares test scenarios and cases based on the product requirements and specifications. We performed a detailed inspection of the agreed functionality of the application so your company can achieve the set business goals.&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An explanation like this prepares a person who has access to the document to what they are about to read. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-state-the-purpose-of-the-document"&gt;
  &lt;/a&gt;
  3. State the purpose of the document
&lt;/h3&gt;

&lt;p&gt;For stakeholders and developers, it will be a clarification of why strategy is necessary and what it describes. For QA engineers, it is a reminder about their mission and the purpose of their work. Here’s an example of the purpose wording:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The purpose of this Test Strategy is to define the overall approach the team will use during testing the [product name] mobile application. The document describes the complex QA strategy of manual, performance, and automated testing activities that will allow ensuring the highest quality standards of the mobile application for end-users. The present document clarifies the testing activities, roles and responsibilities, processes, practices, and resources that will be applied.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The text of the purpose section will vary depending on the expected scope of work and aspects subject to inspection. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-write-briefly-about-the-testing-process"&gt;
  &lt;/a&gt;
  4. Write briefly about the testing process
&lt;/h3&gt;

&lt;p&gt;Sometimes a client comes with a clearly defined scope of testing. In this case, you list the in-demand features the team is to test. For example: business-critical functionality on the physical target devices.&lt;/p&gt;

&lt;p&gt;Defining the testing scope is significant for all the parties involved. For the QA team, it helps to allocate resources and plan the work of QA engineers. For stakeholders, it provides information about what exactly will be tested and what won’t be. In other words, everyone will have clear expectations about the process. Also, if a customer decides to include more activities, it is easier to make changes at this stage. &lt;/p&gt;

&lt;p&gt;To determine the scope correctly, a Team Lead should know: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;customer requirements; &lt;/li&gt;
&lt;li&gt;product specifications; &lt;/li&gt;
&lt;li&gt;project budget; &lt;/li&gt;
&lt;li&gt;skills of the test team members.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A QA team discusses the need for particular mobile application testing types with a client before they start writing the testing strategy. The most efficient way to summarize the information about the upcoming testing activities is by initially dividing the process into phases. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Phase 1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mobile app testing always starts with manual inspection. Therefore, &lt;strong&gt;the first phase is manual testing – full or covering the specific functionality requested by a client&lt;/strong&gt;. &lt;em&gt;For example, if a product is a video player, a client may request to run cross-device and cross-platform checks only&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;So, you are to specify what types of testing the team will run during the first phase. A list of activities required for a mobile application will include Functional Testing, UI Testing, Compatibility Testing, Smoke Testing, Regression Testing, etc. The precise list will depend on the functionality. You may need to add Integration Testing, Accessibility Testing, and other activities. Be attentive and don’t rely on the sample documents when defining the necessary types of testing. You need to make sure everything essential is included. &lt;/p&gt;

&lt;p&gt;Provide a short explanation and state the objectives of each testing type. For a QA team, you may add brief notes regarding the techniques that can or should be used. For example: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;4.1. Functional Testing&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Objectives:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Functional testing focuses on the product requirements and aims to verify that all features of the mobile application work as intended. The goal of the functional tests is to check data acceptance, processing, and retrieval against the requirements, as well as the correct implementation of business logic and rules. This type of testing is based on the black-box techniques – investigation of the internal processes during direct interaction with the product and without access to the source code.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After listing the types of testing, describe an approach to the test phase. In this section, you should explain what specialists will be involved in the project and when. You can also provide the details of the onboarding process. For example: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The first phase is manual testing. At the initial stages, QA Lead will be involved in the management and implementation of the Test Strategy. The specialist will analyze, test, control, and manage the ongoing work, as well as participate in the testing activities.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We suggest involving a dynamic team at the initial stage to perform full testing in the shortest terms. After allocating the necessary number of QA engineers, we will conduct testing efficiently and within the defined timeframes. Such an approach allows us to check the application integrally and define weak spots promptly so the development team can start bug fixing while the QA team proceeds to the next phase.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The QA Lead will pass knowledge to other team members who will continue to work on the project later. Once the dynamic QA team completes the application testing, the QA Lead will continue to manage the process and select dedicated resources&lt;/em&gt;. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then, list the test items. To keep this section short, you can refer to the test items as &lt;em&gt;application functionality&lt;/em&gt; and specify when the team will provide test cases or a checklist. &lt;/p&gt;

&lt;p&gt;If the task is to test only a particular part of the functionality (shopping cart or checkout flow in an e-commerce app, student interface in an e-learning app, newly added features), etc. – remember to state this in the test items subsection to avoid any misunderstandings in the future. &lt;/p&gt;

&lt;p&gt;Then, include info about resources and timeframes. You can use a table for it. Create the following columns: Specialist, Timeframes, Cost, and Responsibilities. In each row, fill in the data about a particular specialist involved. As always, the number of specialists will depend on the project specifics. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Phase X&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The number of phases will vary from application to application, depending on industry, purpose, business goals, etc. After completing the Functional Testing, the QA team may proceed to Performance Testing, Security Testing, Automation, New Feature Testing in the future, and so on. &lt;/p&gt;

&lt;p&gt;Remember that the structure of this section doesn’t have to be identical for each stage. You may need to explain the objectives of performance testing in close detail. The security testing phase may feature specific terms and definitions, as well as outline the level of responsibility (e. g. what areas you can check and what is beyond your control). Therefore, the approach description may also be different. For example, it may be reasonable to provide more information about each stage of the test automation process. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Related: &lt;a href="https://www.qamadness.com/mobile-app-testing-best-qa-strategies-tools/"&gt;Mobile App Testing: Best QA Strategies &amp;amp; Tools&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-describe-the-general-approach"&gt;
  &lt;/a&gt;
  5. Describe the general approach
&lt;/h3&gt;

&lt;p&gt;This section explains entry and exit criteria for different phases – analysis and planning, testing, etc. You can just record these points using bulleted lists. &lt;strong&gt;The General Approach part also includes information about change management, notifications, and pass/fail criteria for tests&lt;/strong&gt;. Make sure to divide the material into subsections with clear headlines. A mobile app testing strategy is meant to keep information understandable for all parties, and things like formatting matter, too. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-clarify-issue-severity-and-priority"&gt;
  &lt;/a&gt;
  6. Clarify issue severity and priority
&lt;/h3&gt;

&lt;p&gt;You can provide this information in a table (or rather two tables, since we are speaking about two different classifications). Just in case, below are the terms you should include. &lt;/p&gt;

&lt;p&gt;Issue severity: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blockers&lt;/li&gt;
&lt;li&gt;Critical&lt;/li&gt;
&lt;li&gt;Major&lt;/li&gt;
&lt;li&gt;Minor&lt;/li&gt;
&lt;li&gt;Trivial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Issue priority: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High&lt;/li&gt;
&lt;li&gt;Major&lt;/li&gt;
&lt;li&gt;Medium&lt;/li&gt;
&lt;li&gt;Low&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to include clear definitions of the abovementioned severity and priority levels. Development teams usually understand the gradation and the difference. Team members without a tech background, however, can find it difficult.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-explain-the-defect-life-cycle"&gt;
  &lt;/a&gt;
  7. Explain the defect life cycle
&lt;/h3&gt;

&lt;p&gt;Defect life cycle data can remind a step-by-step guideline for working with the detected issues. Again, this section will be especially valuable for stakeholders with non-technical backgrounds and new people joining the team. As for the defect life cycle stages, there are six of them: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Identification – it is possible to reproduce a defect, so it is logged in a bug tracking system. &lt;/li&gt;
&lt;li&gt;Prioritizing – the defect gets its priority in the backlog based on the severity.&lt;/li&gt;
&lt;li&gt;Analysis – a specialist studies the defect.&lt;/li&gt;
&lt;li&gt;Resolution – a development team fixes the defect. &lt;/li&gt;
&lt;li&gt;Verification – a QA team executes tests once again to confirm successful fixing. &lt;/li&gt;
&lt;li&gt;Closure – a specialist closes the defect in the bug tracking system. &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#8-describe-the-environmental-and-infrastructure-needs"&gt;
  &lt;/a&gt;
  8. Describe the environmental and infrastructure needs
&lt;/h3&gt;

&lt;p&gt;Along with requirements, test logistics prepares background for testing. The access details for environmental and infrastructure needs may include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Links to the testing environments. &lt;/li&gt;
&lt;li&gt;Test credentials. &lt;/li&gt;
&lt;li&gt;Project specifications. &lt;/li&gt;
&lt;li&gt;Access to a bug tracking system, communication tool, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#9-inform-about-the-tools"&gt;
  &lt;/a&gt;
  9. Inform about the tools
&lt;/h3&gt;

&lt;p&gt;Here you focus on the tech stack the QA team is going to use. List all the tools you are going to apply for test management, bug tracking, automation, etc. You can go just with the list or include a brief overview of each tool. If you choose the second option, mention whether it is an open-source or paid solution, how many users are supported on a plan, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-list-the-deliverables"&gt;
  &lt;/a&gt;
  10. List the deliverables
&lt;/h3&gt;

&lt;p&gt;Be clear about the materials a client is going to receive at the end. Usually, the artifacts produced during the testing phase are checklists, test cases, manual and automated test reports. &lt;/p&gt;

&lt;p&gt;Clients don’t necessarily need to receive all of them, so it is necessary to ask for clarification and specify it in the document. We often include links to sample test cases and test reports. You can add examples of test cases and bug reports in the text, too. For instance: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example of a test case&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0GkfjSfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hyl50vxm1ix7pwhusc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0GkfjSfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hyl50vxm1ix7pwhusc5.png" alt="Image description" width="880" height="269"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example of a bug report&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zqr96jro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7cr3zh58t7efntnei2r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zqr96jro--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7cr3zh58t7efntnei2r.png" alt="Image description" width="880" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-send-the-document-for-review-and-approval"&gt;
  &lt;/a&gt;
  11. Send the document for review and approval
&lt;/h3&gt;

&lt;p&gt;Finally, it is time to finalize the document. The mobile application testing strategy is reviewed, approved, and signed by the main stakeholders, as well as development and testing teams. Include information about people who should review and approve the document, as well as those who are going to use it. It will be helpful in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom Line
&lt;/h2&gt;

&lt;p&gt;Every mobile app needs a customized QA approach. A testing strategy is one of the artifacts that document it. It translates high-level objectives into actual activities that help to ensure high quality on an end product. It also bridges the gap between stakeholders, aligning them in terms of terminology, responsibilities, tech stack, etc. &lt;/p&gt;

&lt;p&gt;So if you are about to write a mobile testing strategy, learn about the product and client’s objectives first. Aim to cover all the aspects of the upcoming testing process. Explain the terminology used. Make sure you don’t leave any controversial points before submitting the document for review. &lt;/p&gt;

&lt;p&gt;If you are looking for a quality assurance &amp;amp; testing company that can prepare an efficient strategy for your mobile app, don’t hesitate to &lt;a href="https://www.qamadness.com/contact-us/"&gt;contact us&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>testing</category>
      <category>mobileapptesting</category>
      <category>strategy</category>
      <category>testingstrategy</category>
    </item>
  </channel>
</rss>
