<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Faster JetBrains IDEs with shared indexes</title>
      <author>Ben Potter</author>
      <pubDate>Sun, 02 Jan 2022 21:53:11 +0000</pubDate>
      <link>https://dev.to/coder/faster-jetbrains-ides-with-shared-indexes-10n1</link>
      <guid>https://dev.to/coder/faster-jetbrains-ides-with-shared-indexes-10n1</guid>
      <description>&lt;p&gt;If you develop with IntelliJ IDEA, PyCharm, GoLand, or other JetBrains IDEs,  it‚Äôs likely you‚Äôve waited for ‚Äúindexing‚Äù to complete after opening a project. While this may be annoying, it‚Äôs necessary for IntelliJ and other heavy-weight IDEs to have features such as code search, highlighting, refactoring, and code completion.&lt;/p&gt;

&lt;p&gt;Waiting for an IDE to finish indexing a project might not be a big problem for many workflows. After the first load, indexes are cached and subsequent runs are faster. However, indexing time can be a huge blocker for developers, especially in these cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;large projects (monorepos, many dependencies, monolithic applications)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;running old/slow machines (indexing is CPU-intensive)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ephemeral developer workspaces (containers, remote IDEs)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L83iYpUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksoux60kx7ntmfu4fywr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L83iYpUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksoux60kx7ntmfu4fywr.png" alt="edit of xkcd's &amp;quot;compiling&amp;quot; comic: https://xkcd.com/303/" width="681" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post, we‚Äôll cover how &lt;a href="https://www.jetbrains.com/help/idea/shared-indexes.html"&gt;shared indexes&lt;/a&gt; can significantly reduce IDE load times, share some examples, and a one-line command to generate these for your project. (Historically, shared indexes have been difficult to set up)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-how-indexing-works"&gt;
  &lt;/a&gt;
  First, how indexing works
&lt;/h2&gt;

&lt;p&gt;Indexing works by traversing the project‚Äôs codebase to create a ‚Äúvirtual map‚Äù of classes, methods, and objects for future lookups. After the index is generated, it is cached on your device for later use.&lt;/p&gt;

&lt;p&gt;Indexing a codebase will likely take the longest &lt;strong&gt;the first time you open it on your machine&lt;/strong&gt;. When the codebase changes, such as pulling code or switching branches, your indexes will ‚Äúupdate,‚Äù but significantly faster than the first time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shared-indexes"&gt;
  &lt;/a&gt;
  Shared indexes ‚ö°
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.jetbrains.com/help/idea/shared-indexes.html"&gt;Shared indexes&lt;/a&gt; make it possible to host pre-generated indexes for others to download, significantly improving loading speeds across your team. These remote indexes work in conjunction with local indexing to ensure your IDE always has up-to-date information on the codebase.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7kbzLye_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.datocms-assets.com/19109/1639079914-final61b24be6b9a30400a127b80d760422.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7kbzLye_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.datocms-assets.com/19109/1639079914-final61b24be6b9a30400a127b80d760422.gif" alt="Comparison: local vs shared indexes" width="880" height="182"&gt;&lt;/a&gt;GIF: Loading the code-server project in WebStorm&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generating-shared-indexes-for-your-project"&gt;
  &lt;/a&gt;
  Generating shared indexes for your project
&lt;/h2&gt;

&lt;p&gt;JetBrains has a &lt;a href="https://www.jetbrains.com/help/idea/shared-indexes.html"&gt;guide for creating shared indexes&lt;/a&gt;, but it involves many steps, including downloading custom tooling and uploading indexes to a CDN. It also lacks instructions for automating this process, to generate indexes in CI, for example.&lt;/p&gt;

&lt;p&gt;Using a Docker container to generate shared indexes makes it simple to try locally or automate with cron/CI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;your_large_codebase/

&lt;span class="c"&gt;# generate shared indexes&lt;/span&gt;
docker run &lt;span class="nt"&gt;-it&lt;/span&gt; &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;:/var/project &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;/indexes-output:/shared-index &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;INDEXES_CDN_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://cdn.myserver.com/project &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-u&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  bencdr/indexer:idea-2021.3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After generating indexes, you can upload the output folder to your CDN, or a local server. You can also use shared indexes without a CDN by using a network share or even your local filesystem for testing. Check out my &lt;a href="https://github.com/bpmct/indexer"&gt;GitHub repo&lt;/a&gt; for details:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bpmct"&gt;
        bpmct
      &lt;/a&gt; / &lt;a href="https://github.com/bpmct/jetbrains-indexer"&gt;
        jetbrains-indexer
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Generate &amp;amp; package JetBrains shared indexes with a Docker container.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#benchmarking-shared-indexes"&gt;
  &lt;/a&gt;
  Benchmarking shared indexes
&lt;/h2&gt;

&lt;p&gt;I tested indexing time for some popular projects on my 2019 MacBook Pro. To benchmark your own projects, &lt;code&gt;File ‚Üí Invalidate Caches&lt;/code&gt; in your IDE will allow you to opt in/out of downloading shared indexes to simulate first launching your project.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Project&lt;/th&gt;
&lt;th&gt;Language(s)&lt;/th&gt;
&lt;th&gt;Local indexing üêå&lt;/th&gt;
&lt;th&gt;With shared indexes ‚ö°&lt;/th&gt;
&lt;th&gt;Improvement %&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kubernetes/kubernetes"&gt;kubernetes/kubernetes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;2m 40s&lt;/td&gt;
&lt;td&gt;22s&lt;/td&gt;
&lt;td&gt;727%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/cdr/code-server"&gt;cdr/code-server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Typescript&lt;/td&gt;
&lt;td&gt;2m 30s&lt;/td&gt;
&lt;td&gt;34s&lt;/td&gt;
&lt;td&gt;441%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Coder internal monorepo&lt;/td&gt;
&lt;td&gt;Go &amp;amp; Typescript&lt;/td&gt;
&lt;td&gt;3m 20s&lt;/td&gt;
&lt;td&gt;32s&lt;/td&gt;
&lt;td&gt;625%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/jetbrains-intellij-community"&gt;jetbrains/intellij-community&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Java&lt;/td&gt;
&lt;td&gt;6m 30s&lt;/td&gt;
&lt;td&gt;2m 15s&lt;/td&gt;
&lt;td&gt;288%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;These times were averaged across two test runs. Your mileage will vary depending on network speeds, device performance, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remote-development-amp-shared-indexes"&gt;
  &lt;/a&gt;
  Remote development &amp;amp; shared indexes
&lt;/h2&gt;

&lt;p&gt;Recently, JetBrains released &lt;a href="https://www.jetbrains.com/remote-development/"&gt;remote development support&lt;/a&gt;, making it simple to develop from powerful, remote workspaces. On-demand workspaces have a lot of benefits, such as faster onboarding and better reproducibility. However, first-time indexing happens much more frequently, since, after all, workspaces are meant to be ephemeral.&lt;/p&gt;

&lt;p&gt;Shared indexes work with &lt;a href="https://coder.com"&gt;Coder&lt;/a&gt;, our remote development platform. Coder supports all JetBrains IDEs locally, or via the web browser. If you don‚Äôt want to host a CDN for shared indexes, you can include them in the workspace image, so everything loads in a snap ‚ö°&lt;/p&gt;

&lt;p&gt;If you‚Äôd like to learn more about Coder, you can &lt;a href="https://coder.com/demo"&gt;request a demo&lt;/a&gt; or &lt;a href="https://coder.com/trial"&gt;try it for free&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xJKff0QUd3c"&gt;Talk: Indexing, or How We Made Indexes Shared and Fast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/remote-development/"&gt;JetBrains Remote Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/help/idea/shared-indexes.html"&gt;JetBrains docs: Indexing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/damintsew/idea-shared-index-dockerfile"&gt;GitHub: idea-shared-index-dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>tooling</category>
      <category>performance</category>
      <category>devops</category>
    </item>
    <item>
      <title>Getting started With Open Source</title>
      <author>MFONIDO MARK</author>
      <pubDate>Sun, 02 Jan 2022 21:23:34 +0000</pubDate>
      <link>https://dev.to/favourmark05/getting-started-with-open-source-ohm</link>
      <guid>https://dev.to/favourmark05/getting-started-with-open-source-ohm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  OVERVIEW
&lt;/h2&gt;

&lt;p&gt;Open source is a term that originally referred to open source software (OSS). Open-source software is code that is designed to be publicly accessible‚Äîanyone can see, modify, and distribute the code as they see fit. Open source refers to source code that is made available to the public to view, use, modify, and distribute under a license. It‚Äôs usually developed and maintained collaboratively by a community of its users. Some well-known open-source projects include Django, Postgres, MongoDB, Vue, Go, Ruby, TypeScript, Git and so many more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-open-source"&gt;
  &lt;/a&gt;
  WHY OPEN SOURCE
&lt;/h2&gt;

&lt;p&gt;There is a variety of good reasons to release something under an open-source license, from ‚Äúmore perspectives make better software‚Äù to ‚Äúestablishing a standard.‚Äù It is important to build a sustainable project to consider your reasons for publishing as open-source and use these as guidance for decision making. Although the main point of open source projects is to create valuable and accessible open-source software, individual contributors can get plenty of personal benefit from contributing to them. You help maintain the software you use while honing your technical skills. When you‚Äôre applying for jobs, you can point to your work on open source software as proof of your skills.&lt;br&gt;
"Open source code is written by developers and for developers."&lt;br&gt;
To protect all the parties engaged in open source, the project owner can use a Creative Commons license. A Creative Commons (CC) license enables everyone to share, use, and build upon their work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#open-source-vs-closed-source"&gt;
  &lt;/a&gt;
  Open Source Vs Closed Source
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#opensource"&gt;
  &lt;/a&gt;
  OPEN-SOURCE
&lt;/h2&gt;

&lt;p&gt;Open source refers to source code that is made available to the public to view, use, modify, and distribute under a license. It‚Äôs usually developed and maintained collaboratively by a community of its users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#close-source"&gt;
  &lt;/a&gt;
  CLOSE SOURCE
&lt;/h2&gt;

&lt;p&gt;By contrast, there is proprietary software, also called ‚Äúclosed source software‚Äù. The source code of such a program can be inspected or altered only by its owners. Some examples of proprietary software include some products of Microsoft, Adobe, or Apple.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-benefit-of-contributing-to-open-source"&gt;
  &lt;/a&gt;
  The benefit of Contributing to Open Source
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#personal-benefits"&gt;
  &lt;/a&gt;
  PERSONAL BENEFITS
&lt;/h2&gt;

&lt;p&gt;If I say that open source developers are driven by altruism and the desire to help others, a lot of people reading this article may smile in disbelief. But this intrinsic motivation is the primary reason most people work on open source projects.&lt;br&gt;
Don't underestimate the importance of personal benefits ‚Äì those feelings of being helpful and self-accomplished.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community-recognition"&gt;
  &lt;/a&gt;
  COMMUNITY RECOGNITION
&lt;/h2&gt;

&lt;p&gt;Scientists and doctors share their experiences by writing scholarly articles and participating in scientific conferences. UI/UX designers share their experience on Behance or Dribbble. Writers print their books or share them via online platforms. Musicians and movie-makers share their work with the world via different streaming services. Why would software developers be any different and want to miss their opportunity to get recognition?&lt;br&gt;
When working on or running open-source projects, you can get recognition from the developer community in several ways, such as creating a great GitHub profile and participating in events like Hacktoberfest.&lt;br&gt;
You might also get discounts, free admissions to events, and a well-developed infrastructure to run your projects. Not only does working on open source projects save you money, but also it inspires you to use all the greatest tools available to you in your projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#self-advertising"&gt;
  &lt;/a&gt;
  SELF ADVERTISING
&lt;/h2&gt;

&lt;p&gt;If you or your company actively participate in the open-source community, you can earn a great reputation. This way, if you are an individual or self-employed developer, it will be easier for you to find a job as a freelancer or a full-time employee. If you represent a software development company, it will be easier for you to find people willing to work for you, partners willing to cooperate, and clients willing to request your professional services. This is why developing open-source software creates a perfect advertising opportunity ‚Äì a win-win situation both for developers and development agencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sense-of-value"&gt;
  &lt;/a&gt;
  SENSE OF VALUE
&lt;/h2&gt;

&lt;p&gt;No need to hide the truth: job burnout plagues developers‚Äô work and software vendors‚Äô HR strategies. If you are a company owner, by motivating your employees to participate in open source development, you show them that their work has value. Not only will they be working on your commercial projects but they will also be providing value to the wider developer community by working on open source projects. By helping your developers achieve these feelings of purpose and value, you keep them interested in working with you. The same is true if you are a self-employed developer. Engaging in open source software development will make your work meaningful, and you will not grow to hate it as time passes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#software-quality"&gt;
  &lt;/a&gt;
  SOFTWARE QUALITY
&lt;/h2&gt;

&lt;p&gt;Open source code is often of higher quality. A piece of software created by a team of developers can be of lower quality than that developed by thousands of developers from all over the world with experience in different technologies, industries, and projects. And bugs in open source software are identified very quickly as the code is being constantly reviewed by multiple developers. Even code written by a single developer is often higher quality if it is open-sourced. If you write code that only you or your close colleagues will see, you may not care much about code style. But if you write code that everyone can see, you will do all you can not to look like a code monkey. Reviews, contributions, and refactoring from the community are all helpful here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  SUMMARY
&lt;/h2&gt;

&lt;p&gt;The importance and benefits of Open Source cannot be overemphasized, when it comes to building quality software and writing good codes, even the personal gain you get from participating in open source projects.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>How To Add A Community Trading Bot on Discord</title>
      <author>Kevin Wang</author>
      <pubDate>Sun, 02 Jan 2022 21:10:01 +0000</pubDate>
      <link>https://dev.to/kw4ng/how-to-add-a-community-trading-bot-on-discord-7p2</link>
      <guid>https://dev.to/kw4ng/how-to-add-a-community-trading-bot-on-discord-7p2</guid>
      <description>&lt;p&gt;At Blankly, we pride ourselves not just for the product that we are building, but also towards cultivating a community of quant enthusiasts which no one else is doing in this field right now. We identified a critical void that many Discord servers currently suffer from: low member engagement. That said, to elevate the overall experience of using the Blankly package and fix the problem identified earlier, we decided to roll out three Discord bots each of which specializes in something unique. We will dive into the Blankly Connect Bot in this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-blankly-connect-to-integrate-a-discord-bot"&gt;
  &lt;/a&gt;
  Using Blankly Connect to Integrate a Discord Bot
&lt;/h3&gt;

&lt;p&gt;To give the users a taste of our product, we created this bot using a virtual sandbox and our in-house &lt;a href="https://blankly.finance/products/api"&gt;Blankly Connect API&lt;/a&gt;‚Äîthe single source to connect, unify, and trade across all exchanges‚Äîwhich aims at simulating what the actual product will be like. We feel that this is the best way for beginners to get acclimated with the fast-paced environment of quant trading and for more experienced members to understand how our platform works.&lt;/p&gt;

&lt;p&gt;Having used Discord previously as a means to connect with friends, group partners, and other communities, I was very excited to create a bot that focuses on community trading ultimately helping server owners spice their servers and elevate their member's experience to a new level. At Blankly, for example, it gave us the opportunity to differentiate ourselves from other similar platforms by offering our members something they haven't ever witnessed.&lt;/p&gt;

&lt;p&gt;I would highly recommend that you install some kind of an IDE (I used VSCode, however my team prefers Webstorm :/), Node.js, and set up a Discord account. Before you even start coding, you are going to need to create an application from the &lt;a href="https://discord.com/developers/docs/intro"&gt;Discord Developer Portal&lt;/a&gt; which will allow you to obtain an authorization token and set the permissions for your bot.&lt;/p&gt;

&lt;p&gt;Once the application is created, click on the section titled &lt;em&gt;Bot&lt;/em&gt; and go ahead and fill the necessary details. Find the bot's authorization token and make sure to &lt;strong&gt;not share it with anyone.&lt;/strong&gt; This token will be needed in the next few steps. Now that your bot is setup, you have to invite it to your server. Therefore, select the &lt;em&gt;OAUTH2&lt;/em&gt; tab and then the &lt;em&gt;URL Generator&lt;/em&gt; to allow you to select certain permissions and abilities for the bot. When done, copy the URL shown at the bottom of the page and paste it into your web browser. Select the server to which the bot will be in and that's it. Your bot is alive within your server... YAYY üéÜ&lt;/p&gt;

&lt;p&gt;Now, create a file on your IDE which will contain your bot's token like the following snippet below and make sure to give it a &lt;code&gt;.json&lt;/code&gt; file type before adding it to &lt;code&gt;.gitignore&lt;/code&gt;, so that the token wont be visible when you push your repository onto Github.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "token" = "[token goes here]"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second starter file will be the &lt;code&gt;package.json&lt;/code&gt; so that it is easy for others to manage and install your package. Add the following fields:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "name": "[Name of your bot]",
    "version": "[version id]",
    "description": "Enter a description",
    "main": "bot.js",
    "author": "Your Name Goes Here",
    "dependencies": { },
    "scripts": { }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last file needed is where you will code how your bot should function and its behavioristics.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let Discord = require('discord.io');
let auth = require('./botAuth.json');
let blankly_connecter = require('../src/blankly_client')

blankly_connecter.setExchange('coinbase_pro');
blankly_connecter.setKeys({'API_KEY': '***', 'API_SECRET': '***',
'API_PASS':'***'});
blankly_connecter.setSandbox(true);

let bot = new Discord.Client({
    token: auth.token,
    autorun: true
});

bot.on('ready', function (evt) {
    console.log('{Status: Connect Bot is Connected}')
});

bot.on('error', function (error) {
    console.log(error)
});

bot.on('message', function (user, userID, channelID, message, evt) {
    if (message.substring(0, 1) == '!') {
        var args = message.substring(1).split(' ');
        var cmd = args[0];
        args = args.splice(1);
        switch(cmd) {
            case 'ping':
                bot.sendMessage({
                    to: channelID,
                    message: 'pong!'
                });
            break;
            // Add further cases if you need to..
        }
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the basic boilerplate code for a Discord bot which responds to commands. This code snippet is more than enough to help you understand how Discord bots operate and the syntax required to be able to operate them. Another great resource I would recommend are the documentation notes for the Discord bots such as &lt;a href="https://www.npmjs.com/package/discord.io/v/1.0.1"&gt;Discord.io&lt;/a&gt;, which this bot uses, but you can also use &lt;a href="https://discord.js.org/#/"&gt;Discord.js&lt;/a&gt;. It is also important to emphasize that there are many other ways that you can code your bot depending on your needs.&lt;/p&gt;

&lt;p&gt;Furthermore, as you can see, I imported the Blankly Connect API in &lt;code&gt;bot.js&lt;/code&gt; so that I can utilize its robust functionality. As shown from the diagram below, this API acts as a middleman between Discord and the major stock and cryptocurrency exchanges allowing for a smooth experience for the user when inputting commands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---U_Vn_0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0az9cgzbylqj868bbjdm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---U_Vn_0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0az9cgzbylqj868bbjdm.png" alt="Blankly Connect in Discord" width="812" height="602"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;You now have the basic tools needed to create your own community-based trading Discord bot. Have fun coding and I hope your bots don't take over the world!&lt;/p&gt;

&lt;p&gt;Overall, this was a very interesting project as it exposed me to a new aspect of Discord which I was previously not aware of‚Äîthe Developer side. Due to the pandemic, I have started using Discord almost every day and never really thought how easy it would be to create a bot to handle certain tasks. Although at first it may seem a bit daunting, it gets easier and easier as you become more comfortable with the developer environment. I can now confidently go ahead and create a bot within hours. Incorporating bots to your server will definitely increase the overall user engagement and will also significantly boost the number of users in the server and, thus, is a great addition to have.&lt;/p&gt;

&lt;p&gt;As we look to continuously improve the bots, our next few steps are to transform this project into being open source, similar to our other products, so that the community can have a more direct involvement with our cause and we can make improvements related to your feedback.&lt;/p&gt;

</description>
      <category>discord</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>ü•≥ How to Get More Stars on Github! (Part 2)</title>
      <author>William McGonagle</author>
      <pubDate>Sun, 02 Jan 2022 21:05:05 +0000</pubDate>
      <link>https://dev.to/williammcgonagle/how-to-get-more-stars-on-github-part-2-2pdk</link>
      <guid>https://dev.to/williammcgonagle/how-to-get-more-stars-on-github-part-2-2pdk</guid>
      <description>&lt;p&gt;I‚Äôve been working on &lt;a href="https://github.com/fairfield-programming/eaf-linter/"&gt;eaf-linter&lt;/a&gt; for about a few days now, and it already has 6 stars and 2 forks. My other project that I've been working on, &lt;a href="https://github.com/fairfield-programming/backend-server/"&gt;the Backend Server&lt;/a&gt;, has 14 stars, 9 forks, and nearly 10 outside contributors. That might not sound like a lot, but both of these projects are only about a week old.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, how did I do it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most important thing has been issues, &lt;a href="https://dev.to/williammcgonagle/how-to-get-more-stars-on-github-5a66"&gt;which I talked about here&lt;/a&gt;. But, the second most important thing has been designing a great readme. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good readme is the difference between someone staring your project and someone ignoring it.&lt;/strong&gt; If you have badges, easily understandable features, and lots of images, you have a star worthy repository. &lt;/p&gt;

&lt;p&gt;First, you need to have badges. If you don't know what a badge is, it's the little image that says how many stars, downloads, etc. a project has. These are also known as shields, and you can get them from &lt;a href="https://shields.io/"&gt;this website&lt;/a&gt;. If you have a ton of them and they all say good things, it increases the confidence that someone has in your project. &lt;/p&gt;

&lt;p&gt;Secondly, you need easily understandable features. If you look at my newest repository, &lt;a href="https://github.com/fairfield-programming/eaf-linter/"&gt;eaf-linter&lt;/a&gt;, you will see that all of the features have a simple headline and they link to a new page. &lt;strong&gt;This is very important&lt;/strong&gt;. If your feature can link to a more in depth description of the feature, it will increase the confidence that the possible contributor has in your project. &lt;/p&gt;

&lt;p&gt;Finally, images are super important. In my &lt;a href="https://github.com/fairfield-programming/backend-server/"&gt;backend server&lt;/a&gt;, I have a ton of really eye-catching images. These images increase the likelihood that someone will keep looking through your readme, and the longer that the person stays on your page, the more likely they are to star your repository. &lt;/p&gt;

&lt;p&gt;There will be more tips like this coming tomorrow and the day after, so if you liked hearing this, make sure to follow me, so you can see more tips as they come out.&lt;/p&gt;

&lt;p&gt;Also, our open-source, non-profit is &lt;a href="https://www.linkedin.com/company/fairfield-programming"&gt;hiring right now&lt;/a&gt; if you're interested. Don't forget to follow us on LinkedIn.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>tutorial</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>Streaming data from AWS S3 using NodeJS Stream API and Typescript</title>
      <author>Austin Burger</author>
      <pubDate>Sun, 02 Jan 2022 20:35:31 +0000</pubDate>
      <link>https://dev.to/about14sheep/streaming-data-from-aws-s3-using-nodejs-stream-api-and-typescript-3dj0</link>
      <guid>https://dev.to/about14sheep/streaming-data-from-aws-s3-using-nodejs-stream-api-and-typescript-3dj0</guid>
      <description>&lt;p&gt;AWS s3 SDK and NodeJS read/write streams makes it easy to download files from an AWS bucket. However, what if you wanted to stream the files instead? &lt;/p&gt;

&lt;p&gt;There is a timeout on connection to the AWS s3 instance set to 120000ms (2 minutes). Unless you have very small files, this just won't cut it for streaming. &lt;/p&gt;

&lt;p&gt;One option is to simply raise that timeout, but then how much should you raise it? Since the timeout is for the total time a connection can last; you would have to either make the timeout some ridiculous amount, or guess how long it will take to stream the file and update the timeout accordingly. This is also not taking into account the stream closing due to HTTP(S)'s own timeout reasons as well.&lt;/p&gt;

&lt;p&gt;Instead of making guesses and fighting random bugs, we can make use of the NodeJS Stream API and create our very own custom readable "smart stream".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-begin"&gt;
  &lt;/a&gt;
  Before we begin
&lt;/h2&gt;

&lt;p&gt;I am assuming you have used AWS s3 SDK to download files successfully and are now wanting to convert that functionality to a proper stream. As such, I will omit the AWS implementation and instead show a simple example of how, and where, to instantiate this "smart stream" class.&lt;/p&gt;

&lt;p&gt;I am also assuming you have a (basic) understanding of NodeJS and read/write streams.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smart-streaming"&gt;
  &lt;/a&gt;
  Smart Streaming
&lt;/h2&gt;

&lt;p&gt;The idea is to create a stream that uses the power of AWS s3 &lt;br&gt;
 ability to grab a range of data, close the connection, then grab another range of data. This stream will pause when its buffer is full, only requesting new data on an as needed basis. This allows us to process the data as we are grabbing it without fear of running into an issue with the timeout!&lt;/p&gt;

&lt;p&gt;We will start by creating the "smart stream" class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Readable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ReadableOptions&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SmartStream&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Readable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Holds the current starting position for our range queries&lt;/span&gt;
    &lt;span class="nx"&gt;_s3DataRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Amount of bytes to grab&lt;/span&gt;
    &lt;span class="nl"&gt;_maxContentLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Total number of bites in the file&lt;/span&gt;
    &lt;span class="nl"&gt;_s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// AWS.S3 instance&lt;/span&gt;
    &lt;span class="nl"&gt;_s3StreamParams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GetObjectRequest&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Parameters passed into s3.getObject method&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GetObjectRequest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;maxLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="c1"&gt;// You can pass the ReadableStream options to the NodeJS Readable super class here&lt;/span&gt;
        &lt;span class="c1"&gt;// For this example we don't use this, however I left it in to be more robust&lt;/span&gt;
        &lt;span class="nx"&gt;nodeReadableStreamOptions&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;ReadableOptions&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nodeReadableStreamOptions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3StreamParams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;_read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// If the current position is greater than the amount of bytes in the file&lt;/span&gt;
            &lt;span class="c1"&gt;// We push null into the buffer, NodeJS ReadableStream will see this as the end of file (EOF) and emit the 'end' event&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Calculate the range of bytes we want to grab&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3DataRange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// If the range is greater than the total number of bytes in the file&lt;/span&gt;
            &lt;span class="c1"&gt;// We adjust the range to grab the remaining bytes of data&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;adjustedRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;range&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;rangeEnd&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_maxContentLength&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// Set the Range property on our s3 stream parameters&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3StreamParams&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`bytes=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;adjustedRange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// Update the current range beginning for the next go &lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_currentCursorPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;adjustedRange&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c1"&gt;// Grab the range of bytes from the file&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_s3StreamParams&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="c1"&gt;// If we encounter an error grabbing the bytes&lt;/span&gt;
                    &lt;span class="c1"&gt;// We destroy the stream, NodeJS ReadableStream will emit the 'error' event&lt;/span&gt;
                    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="c1"&gt;// We push the data into the stream buffer&lt;/span&gt;
                    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-break-this-down-a-bit"&gt;
  &lt;/a&gt;
  Let's break this down a bit
&lt;/h2&gt;

&lt;p&gt;We are extending the Readable class from the NodeJS Stream API to add some functionality needed to implement our "smart stream". The Readable class has a buffer that we can push data in too. Once this buffer is full, we stop requesting more data from our AWS s3 instance and instead push the data to another stream. When we have room in the buffer, we make another request to grab a range of bites. We repeat this until the entire file is read.&lt;/p&gt;

&lt;p&gt;The beauty of this simple implementation is that you have access to all of the event listeners and functionality you would expect from a NodeJS readStream. You can even pipe this stream into 'gzip' and stream zipped files!&lt;/p&gt;

&lt;p&gt;Now that we have the SmartStream class coded, we are ready to wire it into our program. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-with-aws-s3"&gt;
  &lt;/a&gt;
  Implementing with AWS S3
&lt;/h2&gt;

&lt;p&gt;For this next part, as I am assuming you understand the AWS s3 SDK, I am simply going to offer an example of how to establish the stream.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;SmartStream&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Path&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;SmartStream&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createAWSStream&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SmartStream&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucketParams&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Your&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;resolveS3Instance&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

            &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bucketParams&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="c1"&gt;// After getting the data we want from the call to s3.headObject&lt;/span&gt;
                &lt;span class="c1"&gt;// We have everything we need to instantiate our SmartStream class&lt;/span&gt;
                &lt;span class="c1"&gt;// If you want to pass ReadableOptions to the Readable class, you pass the object as the fourth parameter&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SmartStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bucketParams&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ContentLength&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;This is only one example of the amazing things you can do with the NodeJS standard Stream API. For further reading checkout the &lt;a href="https://nodejs.org/api/stream.html"&gt;NodeJS Stream API docs&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>After 1 YEAR of hard work my NEW Ultimate Web Desktop Environment is ready for launch!!!!! üéâüéâ</title>
      <author>Dustin Brett</author>
      <pubDate>Sun, 02 Jan 2022 20:01:03 +0000</pubDate>
      <link>https://dev.to/dustinbrett/after-1-year-of-hard-work-my-new-ultimate-web-desktop-environment-is-ready-for-launch-2dnd</link>
      <guid>https://dev.to/dustinbrett/after-1-year-of-hard-work-my-new-ultimate-web-desktop-environment-is-ready-for-launch-2dnd</guid>
      <description>&lt;p&gt;LIVE LINK: &lt;a href="https://dustinbrett.com/"&gt;https://dustinbrett.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey everyone, thanks for checking out my article on my &lt;a href="https://github.com/DustinBrett/daedalOS"&gt;passion project&lt;/a&gt; for the last year (and several years prior in different forms/&lt;a href="https://github.com/DustinBrett/daedalOS/tree/v1"&gt;codebases&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I've recently completed &lt;a href="https://www.youtube.com/playlist?list=PLM88opVjBuU7xSRoHhs3hZBz3JmHHBMMN"&gt;52 weekly streams&lt;/a&gt; in 2021 as I worked on coding my app, from Hello World to &lt;a href="https://dustinbrett.com/"&gt;what it is today&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yzgygP7QC7c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Today (Jan 2nd) was the day of my &lt;a href="https://youtu.be/S-rF5rkhaJ0"&gt;first stream&lt;/a&gt; one year ago so I felt it was a good day to do this release. I will be having a LIVE üî¥ &lt;a href="https://youtu.be/U9nsxgCQZjk"&gt;Release Party Stream&lt;/a&gt; later &lt;em&gt;TONIGHT&lt;/em&gt;, (Jan 2nd, 2022) at 9 PM PT to celebrate finally getting the &lt;a href="https://dustinbrett.com/"&gt;code live&lt;/a&gt; and also to answer any questions or comments anyone may have.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/U9nsxgCQZjk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I'm also going to be answering questions throughout the 1st week of 2022 as I will post on several sub reddits that may find this project interesting. Today I have &lt;a href="https://www.reddit.com/r/reactjs/comments/rugj5a/after_1_year_of_hard_work_my_new_ultimate_web/"&gt;posted on /r/reactjs&lt;/a&gt; so feel free to go over there to comment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#feature-summary"&gt;
  &lt;/a&gt;
  Feature Summary
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#system"&gt;
  &lt;/a&gt;
  System üß†
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#file-system"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/jvilk/BrowserFS"&gt;File System&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;File Explorer

&lt;ul&gt;
&lt;li&gt;Back, Forward, Recent locations, Address bar&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API"&gt;Drag &amp;amp; Drop&lt;/a&gt; File Support (internal &amp;amp; external)

&lt;ul&gt;
&lt;li&gt;Loading progress dialog&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;ZIP (&lt;a href="https://www.npmjs.com/package/fflate"&gt;write support&lt;/a&gt;), &lt;a href="https://github.com/jvilk/BrowserFS/blob/master/src/backend/ZipFS.ts"&gt;ZIP&lt;/a&gt;/&lt;a href="https://github.com/jvilk/BrowserFS/blob/master/src/backend/IsoFS.ts"&gt;ISO&lt;/a&gt; read support, &lt;a href="https://www.npmjs.com/package/node-unrar-js"&gt;RAR extract&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;Writes to &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"&gt;IndexedDb&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Group selection/manipulation &amp;amp; drag to sort&lt;/li&gt;
&lt;li&gt;Dynamic and auto cached icons for &lt;a href="https://github.com/Borewit/music-metadata-browser"&gt;music&lt;/a&gt;, images &amp;amp; video&lt;/li&gt;
&lt;li&gt;Context Menus

&lt;ul&gt;
&lt;li&gt;Cut, Copy, Create shortcut, Delete, Rename&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications"&gt;Add file&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API"&gt;Map directory&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Open with, Open file/folder location, Open in new window&lt;/li&gt;
&lt;li&gt;Download, Add to archive, Extract here, Set as wallpaper&lt;/li&gt;
&lt;li&gt;Sort by, New Folder, New Text Document&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Keyboard Shortcuts

&lt;ul&gt;
&lt;li&gt;CTRL+C, CTRL+V, CTRL+X, CTRL+A, Delete&lt;/li&gt;
&lt;li&gt;F2, F5, Backspace, Arrows, Enter&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;File information tooltips&lt;/li&gt;
&lt;li&gt;Allow sorting by name, date, type or extension

&lt;ul&gt;
&lt;li&gt;Persists states&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bokuweb/react-rnd"&gt;Resizable and Draggable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Minimize, Maximize &amp;amp; Close&lt;/li&gt;
&lt;li&gt;Persists size/position/maximized states&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.framer.com/motion/"&gt;Animates&lt;/a&gt; opening and closing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#start-menu"&gt;
  &lt;/a&gt;
  Start Menu
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Expandable Sidebar

&lt;ul&gt;
&lt;li&gt;Apps list, Documents shortcut, Power (clears session)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Spotlight visual effect&lt;/li&gt;
&lt;li&gt;Folder support&lt;/li&gt;
&lt;li&gt;Keyboard shortcut opens with &lt;strong&gt;&lt;em&gt;SHIFT+ESC&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#taskbar"&gt;
  &lt;/a&gt;
  Taskbar
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/bubkoo/html-to-image"&gt;Peek&lt;/a&gt; hover preview of windows&lt;/li&gt;
&lt;li&gt;Focused window indicator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#clock"&gt;
  &lt;/a&gt;
  Clock
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Runs in a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers"&gt;web worker&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Synced to system clock on load&lt;/li&gt;
&lt;li&gt;Date tooltip&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#wallpaper"&gt;
  &lt;/a&gt;
  Wallpaper
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.vantajs.com/"&gt;Dynamic animated wallpaper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Set via images (Fill, Fit, Stretch, Tile, Center)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#url"&gt;
  &lt;/a&gt;
  URL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Query parameter loading

&lt;ul&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/?url=/favicon.ico&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/?app=TinyMCE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#apps"&gt;
  &lt;/a&gt;
  Apps üß™
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#boxedwine-exe-zip"&gt;
  &lt;/a&gt;
  &lt;a href="http://www.boxedwine.org/"&gt;BoxedWine&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.exe, .zip&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Runs 16/32-bit Windows applications&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#browser-htm-html"&gt;
  &lt;/a&gt;
  Browser (&lt;strong&gt;&lt;em&gt;.htm, .html&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Loads websites (&lt;em&gt;w/HTTP header support&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Bookmark bar&lt;/li&gt;
&lt;li&gt;Favicon support&lt;/li&gt;
&lt;li&gt;Back/Forward &amp;amp; Reload&lt;/li&gt;
&lt;li&gt;Google search via Address bar&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#devtools"&gt;
  &lt;/a&gt;
  &lt;a href="https://eruda.liriliri.io/"&gt;DevTools&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Console, Elements, Network, Resources, Sources, DOM&lt;/li&gt;
&lt;li&gt;Activate from Start Menu or &lt;strong&gt;&lt;em&gt;SHIFT+F12&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#jsdos-exe-jsdos-zip"&gt;
  &lt;/a&gt;
  &lt;a href="https://js-dos.com/"&gt;js-dos&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.exe, .jsdos, .zip&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;DOS emulator&lt;/li&gt;
&lt;li&gt;Automatic save states on close

&lt;ul&gt;
&lt;li&gt;/Users/Public/Snapshots&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Automatic window resize&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#monaco-editor"&gt;
  &lt;/a&gt;
  &lt;a href="https://microsoft.github.io/monaco-editor/"&gt;Monaco Editor&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code/text editor&lt;/li&gt;
&lt;li&gt;Supports all file types&lt;/li&gt;
&lt;li&gt;Save files via &lt;strong&gt;&lt;em&gt;CTRL+S&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Line count, cursor position, language id&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; formatting

&lt;ul&gt;
&lt;li&gt;json, js/ts, css/sass/less, html, markdown&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pdf-pdf"&gt;
  &lt;/a&gt;
  &lt;a href="https://mozilla.github.io/pdf.js/"&gt;PDF&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.pdf&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Renders PDF's&lt;/li&gt;
&lt;li&gt;Page current/count &amp;amp; Zoom&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#photos"&gt;
  &lt;/a&gt;
  Photos
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#supported_image_formats"&gt;Supported Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen &amp;amp; &lt;a href="https://github.com/anvaka/panzoom"&gt;Zoom&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ruffle-swf-spl"&gt;
  &lt;/a&gt;
  &lt;a href="https://ruffle.rs/"&gt;Ruffle&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.swf, .spl&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Flash Player emulator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#terminal"&gt;
  &lt;/a&gt;
  &lt;a href="https://xtermjs.org/"&gt;Terminal&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;File system support&lt;/li&gt;
&lt;li&gt;Autocomplete &amp;amp; history&lt;/li&gt;
&lt;li&gt;Command list via &lt;code&gt;help&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://isomorphic-git.org/"&gt;Git support&lt;/a&gt; (checkout &amp;amp; clone)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pyodide.org/"&gt;Python support&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.py&lt;/em&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wapm.io/"&gt;WebAssembly Package Manager&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Examples:&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;wapm cowsay moo&lt;/code&gt; (&lt;a href="https://wapm.io/package/cowsay"&gt;#&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;wax fortune&lt;/code&gt; (&lt;a href="https://wapm.io/package/fortune"&gt;#&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wttr.in/"&gt;Weather information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tinymce-whtml"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.tiny.cloud/tinymce/"&gt;TinyMCE&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.whtml&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Read &amp;amp; WYSIWYG modes&lt;/li&gt;
&lt;li&gt;File save support&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#virtual-x86-img-iso"&gt;
  &lt;/a&gt;
  &lt;a href="https://copy.sh/v86/"&gt;Virtual x86&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.img, .iso&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;x86 emulator&lt;/li&gt;
&lt;li&gt;Automatic save states on close

&lt;ul&gt;
&lt;li&gt;/Users/Public/Snapshots&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Automatic window resize&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#video-player"&gt;
  &lt;/a&gt;
  &lt;a href="https://videojs.com/"&gt;Video Player&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Video_codecs"&gt;Supported Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Plays &lt;a href="https://github.com/videojs/videojs-youtube"&gt;YouTube&lt;/a&gt; videos/shortcuts&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#webamp-mp3-wsz"&gt;
  &lt;/a&gt;
  &lt;a href="https://webamp.org/"&gt;Webamp&lt;/a&gt; (&lt;strong&gt;&lt;em&gt;.mp3, .wsz&lt;/em&gt;&lt;/strong&gt;)
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Winamp audio player&lt;/li&gt;
&lt;li&gt;&lt;a href="https://skins.webamp.org/"&gt;Skin support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#to-do"&gt;
  &lt;/a&gt;
  To Do üî®
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#asap"&gt;
  &lt;/a&gt;
  ASAP
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add custom session.json for sort orders&lt;/li&gt;
&lt;li&gt;File search in Terminal &amp;amp; File Explorer&lt;/li&gt;
&lt;li&gt;Status bar button to save Monaco on mobile&lt;/li&gt;
&lt;li&gt;PDF change page/zoom inputs&lt;/li&gt;
&lt;li&gt;IRC Client&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#soon"&gt;
  &lt;/a&gt;
  Soon
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add 96x96 icons for higher dpi devices&lt;/li&gt;
&lt;li&gt;Make desktop icons draggable around grid&lt;/li&gt;
&lt;li&gt;Window Menu Bar&lt;/li&gt;
&lt;li&gt;Open/Save File Dialog&lt;/li&gt;
&lt;li&gt;File Explorer Column View&lt;/li&gt;
&lt;li&gt;File Properties Dialog&lt;/li&gt;
&lt;li&gt;NES/SNES Emulator&lt;/li&gt;
&lt;li&gt;Light theme&lt;/li&gt;
&lt;li&gt;FFMpeg Support&lt;/li&gt;
&lt;li&gt;ImageMagik Support&lt;/li&gt;
&lt;li&gt;System Tray&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#eventually"&gt;
  &lt;/a&gt;
  Eventually
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Event Viewer&lt;/li&gt;
&lt;li&gt;Task Manager&lt;/li&gt;
&lt;li&gt;Run Dialog&lt;/li&gt;
&lt;li&gt;Drag/Drop Taskbar Entries&lt;/li&gt;
&lt;li&gt;Wapm I/O&lt;/li&gt;
&lt;li&gt;Terminal piping&lt;/li&gt;
&lt;li&gt;Virtual Assistant&lt;/li&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;Spreadsheet Viewer&lt;/li&gt;
&lt;li&gt;Browser Tabs&lt;/li&gt;
&lt;li&gt;Fancy Zones&lt;/li&gt;
&lt;li&gt;Service Worker&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#bugs"&gt;
  &lt;/a&gt;
  Bugs üêõ
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#general"&gt;
  &lt;/a&gt;
  General
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Initial sort order is not based on session&lt;/li&gt;
&lt;li&gt;Layout shifts when text is untruncated&lt;/li&gt;
&lt;li&gt;Closing File Manager too quickly causes memory leak&lt;/li&gt;
&lt;li&gt;Monaco breaks Vanta is loaded via url query&lt;/li&gt;
&lt;li&gt;Space Cadet loads too big if BoxedWine is loaded&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mobile"&gt;
  &lt;/a&gt;
  Mobile
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Titlebar menu/clicking doesn't work properly when draggable&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#safari-mobile"&gt;
  &lt;/a&gt;
  Safari Mobile
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Drag image is black&lt;/li&gt;
&lt;li&gt;V86 not working&lt;/li&gt;
&lt;li&gt;Eruda is missing titlebar&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#firefox"&gt;
  &lt;/a&gt;
  Firefox
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;TinyMCE styling is reset on 2nd load&lt;/li&gt;
&lt;li&gt;Webamp stays in front during File Explorer drags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you very much for checking out my project and please feel free to leave me feedback in whatever forum you desire. I plan to be focusing my YouTube efforts on coding and various topics about my project throughout 2022 so feel free to check those out and &lt;a href="https://www.youtube.com/c/DustinBrett/"&gt;subscribe to my channel&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-your-time"&gt;
  &lt;/a&gt;
  THANKS FOR YOUR TIME!!!
&lt;/h1&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Desestrutura√ß√£o para vari√°veis j√° existentes</title>
      <author>Eduardo Donato</author>
      <pubDate>Sun, 02 Jan 2022 19:44:35 +0000</pubDate>
      <link>https://dev.to/ebdonato/desestruturacao-para-variaveis-ja-existentes-28je</link>
      <guid>https://dev.to/ebdonato/desestruturacao-para-variaveis-ja-existentes-28je</guid>
      <description>&lt;p&gt;√â poss√≠vel utilizar desestrutura√ß√£o para vari√°veis ao inv√©s de sempre criar novas.&lt;/p&gt;

&lt;p&gt;Por exemplo, caso tenhamos um objeto como o a seguir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Eduardo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Podemos fazer a desestrutura√ß√£o com a seguinte sintaxe:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Eduardo&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 39&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Por√©m se as vari√°veis &lt;code&gt;name&lt;/code&gt; e &lt;code&gt;age&lt;/code&gt; j√° tiverem sido declaradas no mesmo escopo, ser√° necess√°rio desestruturar e renomear ao mesmo tempo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newAge&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Eduardo&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 39&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para atribuir a desestrutura√ß√£o para as vari√°veis declaradas anteriormente, utiliza-se a seguinte sintaxe (par√™nteses na declara√ß√£o):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Fulano&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Eduardo&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 39&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
    </item>
    <item>
      <title>12 Products in 12 Months</title>
      <author>Anthony M.</author>
      <pubDate>Sun, 02 Jan 2022 19:38:29 +0000</pubDate>
      <link>https://dev.to/amorriscode/12-products-in-12-months-4h62</link>
      <guid>https://dev.to/amorriscode/12-products-in-12-months-4h62</guid>
      <description>&lt;p&gt;It's been a while since I've built anything for myself. One of the reasons I consider myself a "product-focused engineer" is because of my passion for building. Programming has enabled me to create something from nothing. Its turned me into a builder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://alicezhao.com/"&gt;My partner&lt;/a&gt; and I have been talking about doing an ambitious project for 2022. We've decided to build &lt;strong&gt;12 products in 12 months&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h2&gt;

&lt;p&gt;There are a lot of reasons I'm excited about this project. The first one was mentioned above.&lt;/p&gt;

&lt;p&gt;I'm a builder. Creating things excites me. It makes me feel alive. I love everything from naming products, designing logos, writing bits of code, and setting up deployments. Every bit of the process is a fun way to flex my creativity. It brings me joy.&lt;/p&gt;

&lt;p&gt;My partner is a computer science student. She's been developing her coding skills for some time now. Although we've collaborated before, she's grown a lot in the past 6 months. Now she's ready to take on bigger projects! For her, it'll be a great way to practice the skills she's learning in school and in her internships. It'll help her flex the programming muscle. It's a unique way for us to spend more time together.&lt;/p&gt;

&lt;p&gt;I suck at marketing. I'm not &lt;em&gt;great&lt;/em&gt; at design. The whole product life cycle is something I'm interested in. This project will be a safe space for me to play in areas I don't get to do as often at work. I'll be consuming a lot of product resources and seeing where we can take our products.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline
&lt;/h2&gt;

&lt;p&gt;We're making one product every month.&lt;/p&gt;

&lt;p&gt;Some people I've told have criticized the project. You can't build a business in a month. You can't build a good product in a month. Tell that to &lt;a href="(https://levels.io/12-startups-12-months/)"&gt;Pieter Levels&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Either way, that isn't why we are doing this. We aren't setting out to build billion dollar startups here. We're looking to build skills, be creative, and to have fun. I do hope some of our products end up being useful for ourselves (and others!) but that would be a beneficial side effect.&lt;/p&gt;

&lt;p&gt;At the start of each month, we're going to pick the product we want to build. We have a giant list but we're also &lt;a href="//mailto:amorriscode@gmail.com"&gt;open to suggestions&lt;/a&gt;! Once we've decided on the product, we'll break down our MVP and write tickets for work to be done. There's flexibility here. We're basically just going to use Kanban as we build throughout the month.&lt;/p&gt;

&lt;p&gt;At the end of each month, we'll each reflect on what we've learned. Where did we fall short? What did we have the most fun doing? And of course, we'll post on Product Hunt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#following-along"&gt;
  &lt;/a&gt;
  Following Along
&lt;/h2&gt;

&lt;p&gt;We've setup a &lt;a href="https://batteries.notion.site/12-Products-45c32d127b274f67b44684c5e1c2dd1b"&gt;public Notion page&lt;/a&gt; where you can follow along. This is where we'll do our planning. You can see each product, the scope of the MVP, and our tickets as we work through them.&lt;/p&gt;

&lt;p&gt;We also plan to stream on Twitch every Sunday at 12 PM PST! This is will just be a fun way to interact with others. If you want to cheer us on, ask questions, or shit talk us, you can do it there. My guess is we won't have any viewers but it's just going to be another fun way to engage with the project. It should also add some aspect of accountability to the whole thing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-first-project"&gt;
  &lt;/a&gt;
  Our First Project
&lt;/h2&gt;

&lt;p&gt;Today we decided on our first project, &lt;strong&gt;Poke&lt;/strong&gt;! Poke is a personal accountability system. You setup recurring goals on the platform and get reminded about them via text message.&lt;/p&gt;

&lt;p&gt;For example, if you want to go to the gym three days a week, you can add a reminder in Poke to message you on your gym days. Poke will keep track of when you accomplish your goals or when you've slipped up.&lt;/p&gt;

&lt;p&gt;I've been thinking a lot about building platforms that interact with users by sending them text messages. I use Messages on my phone more than anything else. Don't be surprised if we build other text-based things later in the year.&lt;/p&gt;

&lt;p&gt;This project is extremely ambitious. There's a good chance we don't even build 12 products. Some of our ideas could barely be described as products, others could be startups in their own right. A lot of people will doubt the value of this project or our ability to succeed. In the end, I don't care about any of that. I'm excited to be building. I'm excited to be giving myself permission to be creative just for the heck of it.&lt;/p&gt;

&lt;p&gt;The last few years have been taxing on all of us. This project has me looking at 2022 with hope and excitement. I hope you find something to make you feel the same. I can't wait to get started.&lt;/p&gt;

&lt;p&gt;I can't wait to share the journey as we make our way through 12 products!&lt;/p&gt;

</description>
      <category>product</category>
      <category>programming</category>
      <category>startup</category>
      <category>challenge</category>
    </item>
    <item>
      <title>The most underrated feature of the Julia Programming Language , the package manager</title>
      <author>Logan Kilpatrick</author>
      <pubDate>Sun, 02 Jan 2022 19:33:46 +0000</pubDate>
      <link>https://dev.to/logankilpatrick/the-most-underrated-feature-of-the-julia-programming-language-the-package-manager-2hk5</link>
      <guid>https://dev.to/logankilpatrick/the-most-underrated-feature-of-the-julia-programming-language-the-package-manager-2hk5</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/@logankilpatrick/the-most-underrated-feature-of-the-julia-programming-language-the-package-manager-652065f45a3a?source=rss-2c8aac9051d3------2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B_H1BYzg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2600/0%2A7lKK60TaVIXKxFnW" alt="" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Where other languages fall short, Julia‚Äôs package manager provides robust features and intuitive syntax.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@logankilpatrick/the-most-underrated-feature-of-the-julia-programming-language-the-package-manager-652065f45a3a?source=rss-2c8aac9051d3------2"&gt;Continue reading on Medium ¬ª&lt;/a&gt;&lt;/p&gt;

</description>
      <category>julia</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>coding</category>
    </item>
    <item>
      <title>Use an object instead of a switch</title>
      <author>guiga</author>
      <pubDate>Sun, 02 Jan 2022 19:18:47 +0000</pubDate>
      <link>https://dev.to/guigacodes/use-an-object-instead-of-a-switch-1e55</link>
      <guid>https://dev.to/guigacodes/use-an-object-instead-of-a-switch-1e55</guid>
      <description>&lt;p&gt;Sometimes we can do a simple refactor and achieve a lot with it! The example that I'm gonna show was taken from a real project that has been working just fine for a long time.&lt;/p&gt;

&lt;p&gt;Still, that doesn't mean we shouldn't take the initiative to improve simply because it's already working! However, we also need to be pragmatic and not fall into &lt;a href="https://www.youtube.com/watch?v=BY6bGhcnDDs"&gt;the perfectionism trap&lt;/a&gt;. basically, We should find the sweet spot where the effort necessary is paid by its own results. üïµÔ∏è&lt;/p&gt;

&lt;p&gt;I was working on a module that had a &lt;code&gt;getMonth&lt;/code&gt; function which would return the translation key according to the given month:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getMonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;January&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JANUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;February&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FEBRUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;March&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MARCH_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;April&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;APRIL_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;May&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MAY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;June&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JUNE_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;July&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JULY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;August&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AUGUST_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;September&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SEPTEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;October&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OCTOBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;November&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NOVEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;December&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;translationKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;translationKey&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, it was clear to me what I would accomplish using an object instead of a switch statement:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;readability&lt;/li&gt;
&lt;li&gt;cognitive complexity (you can read more about it &lt;a href="https://www.sonarsource.com/resources/white-papers/cognitive-complexity/"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why an object? Well, if you take a closer look at what the &lt;code&gt;getMonth&lt;/code&gt; function is doing, you realize that it's doing nothing but mapping keys to values, which is exactly what an object does! ‚ú®&lt;/p&gt;

&lt;p&gt;Therefore, a switch statement isn't needed at all. actually, it just makes the code less readable and increases its cognitive complexity. So, after refactoring:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;January&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;February&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;March&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;April&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;May&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;June&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;July&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;August&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;September&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;October&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;November&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;December&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Record&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MONTH_TO_TRANSLATION_KEY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;January&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JANUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;February&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FEBRUARY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;March&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MARCH_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;April&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;APRIL_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;May&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MAY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;June&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JUNE_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;July&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JULY_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;August&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AUGUST_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;September&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SEPTEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;October&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OCTOBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;November&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;NOVEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;December&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;DECEMBER_TRANSLATION_KEY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getMonth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Month&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;MONTH_TO_TRANSLATION_KEY&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I created a &lt;a href="https://github.com/guilhermedeandrade/switch-vs-object"&gt;repository with both versions&lt;/a&gt; and used the &lt;a href="https://github.com/Deskbot/Cognitive-Complexity-TS"&gt;cognitive-complexity-ts&lt;/a&gt; package to have numbers to compare (a higher score means a more complex code):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RdCKJAer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5jj61gjdy0y520u0be.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RdCKJAer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5jj61gjdy0y520u0be.png" alt="the image shows that the switch version has score 1 while the object version has score 0" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As expected, the usage of an object makes this code less complex and also more readable, since it's less verbose than the switch statement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; whenever we notice that the switch is doing nothing more than mapping keys to values, we should use an object instead üëå&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>My 2021 Unwrapped</title>
      <author>Anamika</author>
      <pubDate>Sun, 02 Jan 2022 19:07:33 +0000</pubDate>
      <link>https://dev.to/noviicee/my-2021-unwrapped-2h01</link>
      <guid>https://dev.to/noviicee/my-2021-unwrapped-2h01</guid>
      <description>&lt;p&gt;&lt;em&gt;As we step into a new year, I am here to unwrap whatever I did in the year 2021.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2021 was an year of mixed emotions for me. From anxiety, to sadness, to little happiness, to meeting new people &amp;amp; making new friends, to motivations &amp;amp; encouragements, to learning a lot. This year has been a roller-coaster for me and has surely taught me a lot. Not only on the materialistic side, but also on the intellectual aspect.&lt;/p&gt;

&lt;p&gt;The year started pretty well. I started learning new things. One of my goals for 2021 was to read about a new topic each day. I will say I am 40%-50% on that goal, because some days, it so happened that I read about a new topic and then following days I was digging into that particular topic itself. It surely counts as learning new thing, doesn't it?&lt;br&gt;
In 2021 I enhanced my open-source journey a bit. Although I entered into the world of open-source in 2020, but it was only in 2021 that I understood the true meaning of open-source and open-culture.&lt;br&gt;
I took part in different open-source programs as a volunteer, participant, and mentor. It started with &lt;a href="https://gssoc.girlscript.tech/"&gt;Girl Script Summer of Code&lt;/a&gt;. I learnt a lot more than the basic git commands here and met new people. I was able to secure a rank of 83 among 6500+ participants from across the globe. After that I was selected as a mentor for DevIncept DCP 2021 and a fellow for Script Winter of Code. I took up the role of mentor in &lt;a href="https://dcp.devincept.com/"&gt;DevIncept DCP 2021&lt;/a&gt; and helped a lot of participants to make their first contribution to open-source. It felt great to be able to help newcomers and retain their faith in themselves that they are no less and once after getting started, they can do wonders!&lt;br&gt;
I was also a part of the Open Source Day by AnitaB.org, where I made contributions to projects like Ceph and Material-UI.&lt;/p&gt;

&lt;p&gt;Later this year, I got the chance to be a part of the SUSE Cloud Native Foundations Program by &lt;a href="https://www.udacity.com/"&gt;Udacity&lt;/a&gt;. &lt;br&gt;
I was one among the 15000 scholars selected globally to enter the SUSE Cloud Native Foundations Course workspace.&lt;br&gt;
It was the most special part of the year. I met so many new people, learnt a lot, made new friends and what not.&lt;br&gt;
The scholarship challenge was fun, and it indeed taught me a lot. From time-management, to cloud native fundamentals. I even got into top 5 student stories around the world which was really unexpected. &lt;br&gt;
Here we organized webinars, sessions, made study groups to accomplish our goals, encouraged and helped each other. My favorite part was organizing events, because it helped me clear my understanding on the topics even more, and eventually helped people who were stuck in that particular topic. The love and support that I received from this program and the events that we conducted was really encouraging.&lt;/p&gt;

&lt;p&gt;One of my goals which I was able to complete in 2021 was to speak at events. I was invited to speak at several events including the Powershell, DevOps and Cloud Conference 2021, Docker Community All Hands #4, etc. More of myself in this area will be seen in 2022. üòá&lt;/p&gt;

&lt;p&gt;Another thing about which I am happy was Hacktoberfest 2021. &lt;br&gt;
I felt beyond happy that one year ago, I was zero on git and github. I was unable to make a simple Pull Request. But this year, I was searching for more meaningful contributions to make. I felt glad that I was able to expand my learnings even if it was by just a small percentage.&lt;br&gt;
I made contributions in repositories of organizations like Appwrite, Appsmith, Milvus, Mattermost, LoginRadius, etc. Some of my blogs can be found on &lt;a href="https://dev.to/noviicee"&gt;my Dev.to profile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apart from these, I enhanced my learnings in the Python Programming Language. I happened to talk to some experienced people in this field which helped my understand where I lack, and therefore I'll be working on those areas in 2022 :)&lt;br&gt;
Also, one should never forget about failures as they are a part of journey. I tried to expertise in a few more skills and areas, but have not been able to do it till now. Hopefully the new year helps me in completing my incomplete tasks from the previous year :)&lt;/p&gt;

&lt;p&gt;Further for 2022, I am planning to learn &amp;amp; share as much as I can with the community. I look forward to meet with more people and try to better myself. I am also planning to take out time to read and exercise, as I had been more on the lazier side in the previous year.&lt;/p&gt;

&lt;p&gt;Well these are my small wins for 2021. The year had surely been a lot more, but these, form a major part of Anamika's 2021.&lt;/p&gt;

&lt;p&gt;Hope that the New Year brings waves of happiness and joy to us. Happy New Year everyone! üéâ&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>discuss</category>
      <category>writing</category>
    </item>
    <item>
      <title>How to Create a IP Finder Web Application With JS</title>
      <author>Masudur Rahaman Sourav</author>
      <pubDate>Sun, 02 Jan 2022 18:58:35 +0000</pubDate>
      <link>https://dev.to/masudursourav/how-to-create-a-ip-finder-web-application-with-js-4mac</link>
      <guid>https://dev.to/masudursourav/how-to-create-a-ip-finder-web-application-with-js-4mac</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gXje1_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9lqfl58wj1jnu5jghhe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gXje1_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9lqfl58wj1jnu5jghhe.png" alt="Image description" width="880" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey,&lt;br&gt;
If you are new in JavaScrip it will be interesting for you. Here you can learn to use API on JS. It will be a very very easy project for you. First you have to learn what is an API. API stands for Application Programming Interface pretty messy right but it is a fun thing. In easy way API will send you some data you just have to show them in your Webpage you have to just learn how to fetch a API and how to show the data on your webpage. If you want to learn more about the API just &lt;a href="https://www.youtube.com/watch?v=s7wmiS2mSXY"&gt;click here&lt;/a&gt; and watch the video. It will explain you in a easy way. But again you don't have to learn the internal processing of an API.&lt;/p&gt;

&lt;p&gt;First, We have to write some code for our HTML page. Here is a simple code which I used you can use this or write by your own :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Index.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Find Your IP&amp;lt;/title&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div class="main-items"&amp;gt;
        &amp;lt;div class="main-text"&amp;gt;
            &amp;lt;h1&amp;gt;Here Is Your IP :&amp;lt;/h1&amp;gt;
            &amp;lt;h2 class="ip"&amp;gt;&amp;lt;/h2&amp;gt;
            &amp;lt;h1&amp;gt;Your ISP is :&amp;lt;/h1&amp;gt;
            &amp;lt;h2 class="isp"&amp;gt;&amp;lt;/h2&amp;gt;
            &amp;lt;h1&amp;gt;Your Location :&amp;lt;/h1&amp;gt;
            &amp;lt;h2 class="location"&amp;gt;&amp;lt;/h2&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script src="main.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will look so simple without any styles you probably know that HTML without CSS it almost like a man without cloths. So, let's put some cloths on our HTML webpage. HA! HA! HA!,&lt;br&gt;
Here is my CSS style file but here again you can style your own webpage in your own way. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;style.css&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@1,500&amp;amp;display=swap');
body {
    font-family: 'Fira Sans', sans-serif;
    background-image: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 9, 119, 1) 24%, rgba(9, 9, 121, 1) 35%, rgba(0, 212, 255, 1) 100%);
}

h1 {
    color: rgb(42, 81, 209);
}

.main-text {
    width: 25em;
    background-color: aliceblue;
    text-align: center;
    border: 1em solid rgb(73, 167, 230);
    border-radius: 2em;
}

.main-text h1 {
    margin: .5em;
}

.main-items {
    display: flex;
    justify-content: center;
    align-content: center;
    margin-top: 7em;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will add some brain on our webpage which call JavaScript. First we will have to fetch the API if you don't know how to fetch a API watch the video he explained this clearly &lt;a href="https://www.youtube.com/watch?v=cuEtnrL9-H0"&gt;Click here&lt;/a&gt; . get your own API link from &lt;a href="https://www.ipify.org/"&gt;ipify&lt;/a&gt; . Then fetch the API in this way :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fetch('Your URL provided by ipify')
  .then(response =&amp;gt; response.json())
  .then(data =&amp;gt; changeTheDom(data));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here fetch getting response from ipify API and .json making this as json . Then you data is sending on changeTheDom function.&lt;/p&gt;

&lt;p&gt;Here the changeTheDom function code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function changeTheDom(data) {
    let IP = data.ip;
    let dom1 = document.querySelector('.ip');
    dom1.innerHTML = IP;
    let ISP = data.isp;
    let dom2 = document.querySelector('.isp');
    dom2.innerHTML = ISP;
    let dom3 = document.querySelector('.location');
    dom3.innerHTML = data.location.city + ' , ' + data.location.region + ' , ' + data.location.country;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in this piece of function we are changing the DOM we are getting the ip element by data.ip. We selected the ip class by querySelector and replacing its innerHTML value with IP.And in this way we changed other values also. &lt;/p&gt;

&lt;p&gt;Thanks for reading .&lt;br&gt;
My project's live site : &lt;a href="https://masudursourav.github.io/Find-Your-IP-With-JS/"&gt;Live&lt;/a&gt;&lt;br&gt;
Project's Source file : &lt;a href="https://github.com/masudursourav/Find-Your-IP-With-JS"&gt;Source&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Follow me on&lt;br&gt;&lt;br&gt;
 &lt;a href="https://twitter.com/knowsourav"&gt;Twitter&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://www.linkedin.com/in/masudursourav/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://github.com/masudursourav"&gt;GitHub&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://masudur.me/"&gt;Website&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
