<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Marketing Your Mobile App, The Acquisition Stage</title>
      <author>Krowser Web Services </author>
      <pubDate>Wed, 26 May 2021 12:43:59 +0000</pubDate>
      <link>https://dev.to/krowser/marketing-your-mobile-app-the-acquisition-stage-5fha</link>
      <guid>https://dev.to/krowser/marketing-your-mobile-app-the-acquisition-stage-5fha</guid>
      <description>&lt;p&gt;With a user acquisition strategy, the possibilities are endless. It is important to utilize different methods, be creative, and continually refining your strategy. Aim to get as many downloads as possible in the first week after launch. The more rapidly your app gets downloads, the higher it will rank in the App Store search results. It is important as users begin to download your app you track where the downloads are originating from. This way you can focus on the most profitable channels and improve the others. Below is a list of strategies that can be used to acquire users.&lt;/p&gt;

&lt;p&gt;‚óã Paid Strategy&lt;br&gt;
After the app is launched, start rolling out advertising such as ads on social platforms like LinkedIn, which are extremely effective for user acquisition. Depending on your target demographic, you should also consider other platforms like Instagram and Twitter, although the reach is not as large it‚Äôs still effective, especially for millennials. LinkedIn‚Äôs ad platform is great at letting businesses target desired audiences based on their interests, location, and much more. If you‚Äôre targeting your audience via social ads, you need to remember that people have shorter attention spans, so your ads should convey the purpose of the product in a few seconds. If you‚Äôre providing a solution that your users are searching for, Google Search ads may also be a good option.&lt;/p&gt;

&lt;p&gt;‚óã App Store Optimization (ASO)&lt;br&gt;
App Store Optimization involves optimizing your App Store page to rank higher in search results and convert at a higher rate. Over 65% of apps are discovered from a search in the App Store directly. Once your app is ranked highly in search for a certain keyword, it will continue to rank for months after. The higher your app ranks, the more visible it is to potential users. Ultimately, the increased visibility should lead to more downloads, which will help get your app noticed by editors. Good app store optimization is dependant on an array of factors which include title and choice of keywords. A great title is a chance to hook users in and get them to click on your app to discover more. Include a keyword in the title for best results. Those keywords should be strategically placed throughout your listing so you show up when users search for those words. Always include features and benefits the user will get out of the app. For added value, include screenshots and videos. Lastly, there are tons of people who would love to use your app but will never find it because it‚Äôs not in their language. Change this by localizing your app.&lt;/p&gt;

&lt;p&gt;‚óã  Pitch To Apple‚Äôs Editorial Team To Be Featured In The App Store&lt;br&gt;
Getting featured in the App Store is another tool for marketers to utilize within their marketing strategy. Being featured offers a greater potential for apps to increase visibility and downloads which can result in lower acquisition costs, more engaged users, and increased revenue.&lt;br&gt;
Every day, a free or paid app and game is reviewed by professional App Store curators. Apple receives thousands of pitches to feature mobile apps. This tactic can be useful if done persuasively. Craft a convincing pitch that outlines what your app does and how it‚Äôs unique.&lt;/p&gt;

</description>
      <category>android</category>
      <category>ios</category>
      <category>google</category>
      <category>apple</category>
    </item>
    <item>
      <title>How to Build a Great Developer Portfolio (+ Examples &amp; Tools)</title>
      <author>Anastasia üèÑüèª‚Äç‚ôÄÔ∏è</author>
      <pubDate>Wed, 26 May 2021 12:36:52 +0000</pubDate>
      <link>https://dev.to/actitime/how-to-build-a-great-developer-portfolio-examples-tools-bkj</link>
      <guid>https://dev.to/actitime/how-to-build-a-great-developer-portfolio-examples-tools-bkj</guid>
      <description>&lt;p&gt;As any other specialists, developers need to market themselves to get dream jobs and projects, attract more clients and reach a desirable level of income. The necessary skills and a killer portfolio website are the two things that you need. Many developers think of portfolios as an optional objective, passing the competitive advantage to those who think otherwise, and here‚Äôs why.&lt;/p&gt;

&lt;p&gt;A developer portfolio is a website that showcases your best work, personality and talents. It is your best chance to prove your skills, share your enthusiasm about the profession and give your potential employers and clients a glimpse of how awesome it would be to work with you. LinkedIn pages and r√©sum√©s are also important, but they focus on work experience and don‚Äôt communicate your true value. R√©sum√© is where you talk the talk, and portfolio is where you walk the walk.&lt;/p&gt;

&lt;p&gt;This article will dwell on the most important components of developer portfolios and illustrate them with real-life examples. You can also use this article as a checklist and save it to get back to it anytime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#before"&gt;Before You Build a Portfolio&lt;/a&gt; &lt;br&gt;
&lt;a href="#ta"&gt;1. Keep the Target Audience in Mind&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#homepage"&gt;Take Advantage of Your Homepage&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#scannable"&gt;Make Your Portfolio Scannable&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#clicks"&gt;Minimize Clicks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#uxui"&gt;2. Remember UX and UI&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mobile"&gt;Go Mobile or Go Home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance"&gt;Optimize Website Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Remember Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#work"&gt;3. Showcase Your Best Work and Skills&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#code"&gt;Share Your Code and Live Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#samples"&gt;OR Provide Code Samples and GIFs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#freelance"&gt;Boast Freelance and Personal Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#selective"&gt;BUT Be Selective&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#samepage"&gt;Prove that You Are on The Same Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#personality"&gt;4. Show Your Personality&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#domain"&gt;Use Custom Domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Make Use of Introductory Statement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#voice"&gt;Use Your Tone of Voice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;Share Your Motivation (Optional)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#brand"&gt;5. Maintain Personal Brand&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#uptodate"&gt;Keep Portfolio Up-to-Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testimonials"&gt;Include Testimonials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#communication"&gt;6. Encourage Communication&lt;/a&gt;&lt;br&gt;
&lt;a href="#great"&gt;How to Build a Great Developer Portfolio&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#before-you-build-a-portfolio"&gt;
  &lt;/a&gt;
  Before You Build a Portfolio &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;When building a portfolio, developers often forget about its purpose and create websites that don‚Äôt meet the expectations and hardly attract any clients or job offers. Let‚Äôs take a look into developer portfolios from a marketing perspective.&lt;/p&gt;

&lt;p&gt;Essential questions to ask yourself before building a portfolio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Who is your target audience?&lt;/strong&gt; Do you create a portfolio as an extension of your CV or as an independent website where you market your skills, sell your services and attract clients? These are two completely different use cases meaning different approaches to building a portfolio.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;What are they looking for?&lt;/strong&gt; For example, there‚Äôs a high chance that employers will want to have a look at your code while your clients won‚Äôt care about it ‚Äì now you can deduce the website structure and content with more ease.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;How will they use your portfolio website?&lt;/strong&gt; Employers will most likely be interested to see your projects and code, while clients may take more interest in your professional services, case studies and personality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;What are their pain points?&lt;/strong&gt; For example, employers need to make sure that you are a team player who meets deadlines and delivers quality ‚Äì include quotes from your recommendation letters to solve these doubts. Or use client logos and case studies to prove to your potential clients that you are trustworthy and reliable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Why you?&lt;/strong&gt; Why should they choose you and not another developer or a whole agency instead? How are you different from others? What are the benefits of working with you?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After you answer these questions, you‚Äôll better understand what is expected of you and how to build a portfolio that will deliver the desired results. Along with that, you‚Äôll know how to communicate your personality and which soft skills to highlight. So, keep your ideal client or employer in mind when building your developer portfolio.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-keep-the-target-audience-in-mind"&gt;
  &lt;/a&gt;
  1. Keep the Target Audience in Mind &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A portfolio website may look like a perfect opportunity to showcase your skills, but you‚Äôd better keep it simple. Just think of it: your potential employer or client opens your portfolio and fails to work their way through all the bells and whistles ‚Äì you definitely don‚Äôt want that to happen. So our first advice is to &lt;strong&gt;keep your portfolio website clean and uncluttered&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The main goal of a developer portfolio is to impress its visitors with your projects, code, personality, UX and UI sensibilities. Therefore, a junior developer portfolio should contain a &lt;strong&gt;smooth and straightforward user interface&lt;/strong&gt; with simple navigation. If it‚Äôs your first portfolio, we‚Äôd recommend using HTML, CSS and vanilla JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Helpful tools:&lt;/strong&gt; &lt;a href="https://www.behance.net/"&gt;Behance&lt;/a&gt;, &lt;a href="https://dribbble.com/"&gt;Dribble&lt;/a&gt;, &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt;, &lt;a href="https://www.adobe.com/products/xd.html"&gt;Adobe XD&lt;/a&gt;, &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#take-advantage-of-your-homepage"&gt;
  &lt;/a&gt;
  Take Advantage of Your Homepage &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Your portfolio homepage is your only chance to make a positive first impression. It needs to &lt;strong&gt;make clear who you are and what you do&lt;/strong&gt;, contain your photo or image and have a hint of your personality in the intro text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6YURvR4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/seb-kay-1024x538.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6YURvR4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/seb-kay-1024x538.png" alt="Seb Kay's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://sebkay.com/"&gt;Seb Kay&lt;/a&gt; introduced himself at the portfolio homepage&lt;/em&gt;&lt;/center&gt; 
&lt;h3&gt;
  &lt;a href="#make-your-portfolio-scannable"&gt;
  &lt;/a&gt;
  Make Your Portfolio Scannable &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The spread of the Internet has changed the way we &lt;a href="https://www.nngroup.com/articles/text-scanning-patterns-eyetracking/"&gt;interact with web pages&lt;/a&gt;: we no longer read them from top-to-bottom but scan. So make sure that your layout is perfectly styled, your texts are written in &lt;a href="https://www.iabcwaterloo.com/blog/2020/1/26/the-importance-of-plain-language"&gt;plain language&lt;/a&gt; and are proofread, all links and interactable objects are up and running.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minimize-clicks"&gt;
  &lt;/a&gt;
  Minimize Clicks &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Portfolios don‚Äôt have to be complex ‚Äì they should contain the most critical information for your visitors. Your projects, code samples, social media and contact form should be only a few clicks away.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-remember-ux-and-ui"&gt;
  &lt;/a&gt;
  2. Remember UX and UI &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As a developer, you should be aware of the UX and UI fundamentals. Your portfolio website should have a simple good looking UI and provide a good UX as well.&lt;/p&gt;

&lt;p&gt;If you are not good with design, you may want to gather inspiration from design platforms such as &lt;a href="https://www.behance.net/"&gt;Behance&lt;/a&gt; and &lt;a href="https://dribbble.com/"&gt;Dribble&lt;/a&gt;. After that, you can design the website, its navigation and structure using &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt; or &lt;a href="https://www.adobe.com/products/xd.html"&gt;Adobe XD&lt;/a&gt; and then code it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0K3DS0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Suresh-Murali-1024x452.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0K3DS0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Suresh-Murali-1024x452.png" alt="Suresh Murali's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://sureshmurali.github.io/"&gt;Suresh Murali&lt;/a&gt; created the design that you can feel&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Don‚Äôt forget to develop design and the positioning of the UI components, including icons, form elements, checkboxes, text and search fields, tooltips and menus. Learn best &lt;a href="https://uxplanet.org/8-typography-tips-for-designers-how-to-make-fonts-speak-84741a4053c8"&gt;typography tips&lt;/a&gt; before you finish your mockup and start coding: fonts set the mood for your design and, when applied incorrectly, can bust your mobile version website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-mobile-or-go-home"&gt;
  &lt;/a&gt;
  Go Mobile or Go Home &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Speaking of mobile, this is the mobile age and it‚Äôs your number one priority to develop a mobile-responsive website. Responsive design aims to avoid the necessary resizing, scrolling, zooming and provide a pleasant experience. If your portfolio website isn‚Äôt mobile-friendly, that‚Äôs a huge drawback that will most likely turn off your potential employers and clients.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RiPBspJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Prashant-Sani-3-1024x789.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RiPBspJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Prashant-Sani-3-1024x789.png" alt="Prashant Sani's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://prashantsani.com/"&gt;Prashant Sani&lt;/a&gt; created a mobile-friendly portfolio&lt;/em&gt;&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#optimize-website-performance"&gt;
  &lt;/a&gt;
  Optimize Website Performance &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Website performance is another key element of a successful developer portfolio. Users are unlikely to wait for more than 3 seconds for your website to load. So, optimize the size of the images, &lt;a href="https://web.dev/lazy-loading-images/"&gt;set up lazy-loading&lt;/a&gt;, minimize the number of JavaScript and CSS files and use website caching.&lt;/p&gt;

&lt;p&gt;To learn how your website is doing in terms of performance, accessibility, SEO and other parameters try &lt;a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk"&gt;Lighthouse&lt;/a&gt; ‚Äì a Google Chrome extension that gives you a full website audit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fr_qxIwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lighthouse-1-1024x905.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fr_qxIwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lighthouse-1-1024x905.png" alt="Lighthouse - Chrome Extension for developers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Helpful tools:&lt;/strong&gt; &lt;a href="https://tinyjpg.com/"&gt;tinyjpg&lt;/a&gt;, &lt;a href="https://tinypng.com/"&gt;tinypng&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remember-accessibility"&gt;
  &lt;/a&gt;
  Remember Accessibility &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Accessibility is another critical quality criterion of any website. It includes website adjustments for people with special needs, disabilities and impairments that can make it difficult for them to navigate your website.&lt;/p&gt;

&lt;p&gt;Here are a few ideas on how to &lt;a href="https://romeo.elsevier.com/accessibility_checklist/"&gt;improve website accessibility&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add alt text to all images&lt;/li&gt;
&lt;li&gt;choose accessible color choices&lt;/li&gt;
&lt;li&gt;enable resizable text&lt;/li&gt;
&lt;li&gt;create accessible forms&lt;/li&gt;
&lt;li&gt;turn off auto-play for flashing and blinking elements like ads and videos&lt;/li&gt;
&lt;li&gt;provide transcripts for audio and video elements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Thea0eJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lounge-Lizard-1024x487.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Thea0eJc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lounge-Lizard-1024x487.png" alt="Lounge Lizard's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://www.loungelizard.com/"&gt;Lounge Lizard&lt;/a&gt; takes accessibility seriously&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Helpful tools:&lt;/strong&gt; &lt;a href="https://webaim.org/resources/contrastchecker/"&gt;Contrast Checker&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/accessibility-developer-t/fpkknkljclfencbdbgkenhalefipecmb?hl=en"&gt;Accessibility Developer Tools&lt;/a&gt;, &lt;a href="https://wave.webaim.org/"&gt;Web Accessibility Evaluation Tool&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-showcase-your-best-work-and-skills"&gt;
  &lt;/a&gt;
  3. Showcase Your Best Work and Skills &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#share-your-code-and-live-products"&gt;
  &lt;/a&gt;
  Share Your Code and Live Products &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Now, this is a major distinction between r√©sum√© and portfolio: while r√©sum√© lists your education and employment history, portfolio is where you showcase your work and achievements, communicate your skills and personality.&lt;/p&gt;

&lt;p&gt;When it comes to showing your work, you can either show the end-products, provide links to code or do both ‚Äì which approach is best depends on your portfolio‚Äôs purpose. If your portfolio is meant to serve as an extension of your r√©sum√©, you may want to include both code and end-product links, while in the case of the client portfolio, you need to showcase your work only.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_jCO_kar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Alex-Calia-1024x673.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_jCO_kar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Alex-Calia-1024x673.png" alt="Alex Calia's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://alexcalia.com/"&gt;Alex Calia&lt;/a&gt; shows live products and links to their GitHub repos&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;As long as the project gallery is the key part of your portfolio, it would be best to put it right after the home section. Pick projects that you built yourself or, in the case of junior developers, don‚Äôt include projects from tutorials unless you customized and made them unique. Another good practice is to supply projects with descriptions and the tech stack used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UM3ZUO7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Rafael-Caferati-1024x618.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UM3ZUO7y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Rafael-Caferati-1024x618.png" alt="Rafael Caferati's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://caferati.me/"&gt;Rafael Caferati&lt;/a&gt; uses tags for project navigation&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;If you have a lot of projects and technologies used, consider building navigation for them. If you can boast a wide variety of projects, define the context for which those projects were developed. For example, ‚Äúa commercial website for a marketing agency‚Äù or ‚Äúa language exchange platform for up to 100k users‚Äù.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#or-provide-code-samples-and-gifs"&gt;
  &lt;/a&gt;
  OR Provide Code Samples and GIFs &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you‚Äôve been working on a private project or developed particular parts of a project, include code samples if allowed by the associated client or employee. Here are a few ideas of how to do it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Embed or add links to code editors with live previews&lt;/li&gt;
&lt;li&gt;Add links to GitHub repos and supply them with animated GIFs&lt;/li&gt;
&lt;li&gt;Upload a screencast video to explain your process and how you worked&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out your source code and make sure that it is properly organized: it follows &lt;a href="https://github.com/kriasoft/Folder-Structure-Conventions"&gt;folder structure&lt;/a&gt; and &lt;a href="https://datamanagement.hms.harvard.edu/collect/file-naming-conventions"&gt;naming conventions&lt;/a&gt;. This will prove that your thinking is structured and organized and will make it easier for employers and clients to follow your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boast-freelance-amp-personal-projects"&gt;
  &lt;/a&gt;
  Boast Freelance &amp;amp; Personal Projects &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Freelance projects also make a great addition to your portfolio as they demonstrate your credibility, communication and time management skills, which constitute a good freelancer and full-time employee alike. Freelance jobs also provide an opportunity to try new technology, so you may showcase these projects to highlight more skills.&lt;/p&gt;

&lt;p&gt;Sometimes, you may want to list some skills that are missing in-practice confirmation. If you struggle to find freelance projects for that, you can always start a project of your own that you‚Äôll showcase in the portfolio. For example, you may want to create your own version of a landing page for the company that you want to impress. This will also demonstrate your motivation, a self-starter attitude and passion for the profession.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_pqoUtW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Matt-Farley-1024x501.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_pqoUtW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Matt-Farley-1024x501.png" alt="Matt Farley's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://mattfarley.ca/"&gt;Matt Farley&lt;/a&gt; shares his startup projects&lt;/em&gt;&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#but-be-selective"&gt;
  &lt;/a&gt;
  BUT Be Selective &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;You must be proud of your work and showcase as many projects as possible. But remember that your potential employers and clients won‚Äôt be delving into details of your every project. Most likely, they will spend a minute or two reviewing your website and will take a bit closer look at some of your projects.&lt;/p&gt;

&lt;p&gt;To learn which projects to include in the portfolio, ask yourself the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What makes you incredibly proud of this project?&lt;/li&gt;
&lt;li&gt;Does it prove your skills, knowledge and talents that are missing in other projects?&lt;/li&gt;
&lt;li&gt;Are there similar projects in your portfolio? If yes, are you willing to replace them with this project?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you know someone who is reliable, trustworthy and more experienced than you, ask for their feedback and use it to include the best work in your portfolio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prove-that-you-are-on-the-same-page"&gt;
  &lt;/a&gt;
  Prove that You Are on The Same Page &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you build a portfolio to attract clients, it‚Äôs important to show that you speak the same language. Your clients are unlikely to use &lt;a href="https://www.business.com/articles/cut-the-code-why-speaking-in-technical-jargon-is-not-making-you-look-smarter/"&gt;devspeak&lt;/a&gt;, which makes your ability to clearly articulate your code in plain terms a great soft skill. The same is true for full-time employment: you need to communicate clearly with non-programmers, including designers and other team members.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-show-your-personality"&gt;
  &lt;/a&gt;
  4. Show Your Personality &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A portfolio not only gives you a perfect opportunity to showcase your work and achievements but it is also a great means to express yourself. Your potential employers and clients want to know you better to understand if you are going to click.&lt;/p&gt;

&lt;p&gt;Don‚Äôt hesitate to use the About Me part and tell about your passion for video games, pixel art or whatever drives you. Mention your background and education if you think they will communicate important details about you. Add a hint of your personality in the body of your website, its design and navigation ‚Äì it‚Äôs your portfolio, after all. And, of course, don‚Äôt forget to upload a headshot or an image of yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-custom-domain"&gt;
  &lt;/a&gt;
  Use Custom Domain &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Your developer portfolio is a part of your brand as is your website address. To look professional, you need a suitable URL. Usually, a portfolio address includes the name of its owner or the work they do. Instead of hosting your website on a long-tailed subdomain, consider buying your own.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8hB8Xzbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Brittany-Chiang-1024x485.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8hB8Xzbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Brittany-Chiang-1024x485.png" alt="Brittany Chiang's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://brittanychiang.com/"&gt;Brittany Chiang&lt;/a&gt; hosts her portfolio on a personal domain containing her full name&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Many developers forget to buy an SSL certificate for their website that moves it from HTTP to HTTPS, making it more secure and trustworthy for browsers and search engines. Imagine that you send a link to your portfolio to your client, but their browser blocks the page because your website is not secure (e.g. Google Chrome is guilty of this) ‚Äì you don‚Äôt want that to happen.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-use-of-introductory-statement"&gt;
  &lt;/a&gt;
  Make Use of Introductory Statement &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;One more place to express your personality is the intro paragraph on your homepage, where you may introduce yourself. Some developers use it to list their tech stack, while others include other relevant experience and related professions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wt6isD5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Josue-Espinosa-1024x487.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wt6isD5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Josue-Espinosa-1024x487.png" alt="Josue Espinosa's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://ejosue.com/"&gt;Josue Espinosa&lt;/a&gt; makes use of his intro statement&lt;/em&gt;&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#use-your-tone-of-voice"&gt;
  &lt;/a&gt;
  Use Your Tone of Voice &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Tone of voice in written communication is your choice of words, their order and rhythm, which makes it a great means for expressing your personality. A pile of facts and statements has the same impact on the reader as a fridge manual ‚Äì none at all. But if you use some expressive or colloquial words, geek-talks or puns, you‚Äôll sound much more human and have greater chances to connect with employers and clients.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#share-your-motivation-optional"&gt;
  &lt;/a&gt;
  Share Your Motivation (Optional) &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This advice will bring the most benefit to bootcamp graduates and junior developers. To increase your chances of getting a job, you can prove your motivation and passion for the profession in your portfolio. Showcasing personal projects is one of the most solid ways to prove yourself reliable and motivated. A few lines describing your inner motivation is also an excellent way to highlight your ready-for-hard-work mindset.&lt;/p&gt;

&lt;p&gt;Here are a few ideas of what to include in the portfolio:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mention your achievements and career plans for the next few years&lt;/li&gt;
&lt;li&gt;Share your career goals (technology to learn, projects to build) and highlight your passion for studying (attended industry events and conferences)&lt;/li&gt;
&lt;li&gt;What you did, do and going to do to meet your career goals&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This information works best in r√©sum√©s but can help you get a job if you don‚Äôt have an impressive portfolio yet. Include this information right after the project gallery ‚Äì this way, you‚Äôll handle potential objections concerning your work experience.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-maintain-personal-brand"&gt;
  &lt;/a&gt;
  5. Maintain Personal Brand &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Personal branding or personal marketing is building your online reputation and making yourself recognizable on the market. Along with your social media accounts, blogs and communities, your portfolio provides a summary of your work experience, skills, talents and personality, so that &lt;a href="https://dev.to/itsabdessalam/work-on-your-personal-branding-as-a-developer-20pm"&gt;your online presence&lt;/a&gt; communicates a clear and memorable picture of you as a professional.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Your brand is what people say about you when you‚Äôre not in the room ‚Äì Jeff Bezos, the CEO of Amazon&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#keep-portfolio-uptodate"&gt;
  &lt;/a&gt;
  Keep Portfolio Up-To-Date &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you review popular developer portfolios, you‚Äôll notice that most of them haven‚Äôt been updated for years: most of the links are broken, social media accounts are inactive, no recent projects or work experience mentioned. Now think of how many new clients these portfolios could bring: while blogs and online media share them as examples of great portfolios, these developers are missing dozens of chances to get star clients and one-in-a-lifetime opportunities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3bZKvFTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Shawn-Wang-1024x575.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3bZKvFTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Shawn-Wang-1024x575.png" alt="Shawn Wang's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://www.swyx.io/"&gt;Shawn Wang&lt;/a&gt; shares his industry achievements and updates his portfolio website regularly&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;So, our advice is to keep your portfolio as up-to-date as possible even when you have enough workload and are not looking for employment or freelance jobs. Update it whenever you finish another project, give a tech talk, start a tech podcast ‚Äì whatever drives you and, at the same time, is relevant to your portfolio.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#include-testimonials"&gt;
  &lt;/a&gt;
  Include Testimonials &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs recap: a portfolio is a proof of your skills and achievements, an essential part of your personal brand and a marketing tool that attracts employers and customers. To make your portfolio even more convincing, you need to include testimonials.&lt;/p&gt;

&lt;p&gt;Here a few ideas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Include quotes from recommendation letters&lt;/li&gt;
&lt;li&gt;Ask for and add feedback from the current place of work&lt;/li&gt;
&lt;li&gt;Display feedback from your past clients&lt;/li&gt;
&lt;li&gt;If you work as a freelancer, post a few case studies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nGhOyEeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Seb-Kay-2-1024x572.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGhOyEeo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Seb-Kay-2-1024x572.png" alt="Seb Kay's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="https://sebkay.com/"&gt;Seb Kay&lt;/a&gt; ‚Äì included a quote from his recommendation&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Case studies is a way to add testimonials to your developer portfolio. Case studies are stories about how your clients overcame their problems using your expertise. For each project you include, consider explaining the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Client:&lt;/strong&gt; who they are and what they were looking for&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Problem:&lt;/strong&gt; what problem they solved with you&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Project details:&lt;/strong&gt; timeline, tech stack used, etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Your work:&lt;/strong&gt; what you implemented and why&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Results:&lt;/strong&gt; how your work influenced the client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The contents of the case studies depends on the purpose of your portfolio. If you are looking to get employed, you may want to include more technical details. Or, if you want to attract more clients, keep these details to the minimum and focus on the business benefits instead.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ENoHd-Dm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Riccardo-Zanutta-1024x551.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ENoHd-Dm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Riccardo-Zanutta-1024x551.png" alt="Riccardo Zanutta's developer portfolio"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;em&gt;&lt;a href="http://riccardozanutta.com/"&gt;Riccardo Zanutta&lt;/a&gt; takes the case studies approach&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;Testimonials make a great addition to any developer portfolio. Encourage your employers and clients to compose a few paragraphs about how your work positively impacted their business. Get their contact information if possible and include it in your r√©sum√© and portfolio to add more value to their claims and allow your portfolio visitors to get in touch with them for some follow-up questions&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-encourage-communication"&gt;
  &lt;/a&gt;
  6. Encourage Communication &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;After you‚Äôve showed your experience, personality and projects, it‚Äôs time to ask your portfolio visitors to contact you if they are interested in cooperating with you. The ‚ÄúContacts‚Äù part should be the last and the final point of your developer portfolio.&lt;/p&gt;

&lt;p&gt;A few ideas of what goes on the ‚ÄúContact‚Äù page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Contact form.&lt;/strong&gt; Please note that recruiters want to contact you now and not to fill out a form and wait to see when, if ever, they get a call back.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Email address.&lt;/strong&gt; Basically, it‚Äôs the same as the contact form + more efforts to open an email tab.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Phone number.&lt;/strong&gt; Probably the best contact option for recruiters and the worst for communicating with clients.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hours of availability.&lt;/strong&gt; Especially useful if you ask your portfolio visitors to contact you via your phone number.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Social media links.&lt;/strong&gt; Include only active accounts such as LinkedIn, GitHub and StackOverflow to strengthen your credentials.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#how-to-build-a-great-developer-portfolio"&gt;
  &lt;/a&gt;
  How to Build a Great Developer Portfolio &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A well-rounded developer portfolio is your chance to advance faster in your career and build a personal brand. If you are looking to get a Junior position, a portfolio can make all the difference when you‚Äôre competing with other hopefuls for a coveted role. But don‚Äôt confuse r√©sum√© with portfolio: r√©sum√© is where you talk the talk, a portfolio is where you walk the walk.&lt;/p&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>csharp</category>
    </item>
    <item>
      <title>AWS CDK: Per-Environment Configuration Patterns</title>
      <author>Gerald Stewart</author>
      <pubDate>Wed, 26 May 2021 12:23:13 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-cdk-per-environment-configuration-patterns-48m6</link>
      <guid>https://dev.to/aws-builders/aws-cdk-per-environment-configuration-patterns-48m6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction üëã
&lt;/h1&gt;

&lt;p&gt;Often projects will have different configuration values for each deployed environment. This could be feature toggles, URLs for third-party services or any number of other variables.&lt;/p&gt;

&lt;p&gt;With the AWS CDK, this is simple to configure. I have seen a few different approaches to this problem. In this blog I'll share a few suitable for use in TypeScript.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-stack-configuration-function"&gt;
  &lt;/a&gt;
  Method 1Ô∏è‚É£: Stack Configuration Function
&lt;/h1&gt;

&lt;p&gt;This approach uses a mapper function to return the configuration, you can see we have a single configuration property defined in the &lt;code&gt;EnvironmentConfig&lt;/code&gt; interface.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="na"&gt;environmentMapper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;local&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://dev.google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://test.google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;production&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;environmentMapper&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;environmentName&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This function would be called from the stack like this, &lt;code&gt;process.env.ENV_NAME&lt;/code&gt; would correspond to the environment name (replace this with your environment name variable for your chosen CI/CD pipeline) or default to local if undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ENV_NAME&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;local&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;environmentConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then access the configuration like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;apiEndpoint&lt;/code&gt; variable is now ready to be used in your stack.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-cdk-runtime-context"&gt;
  &lt;/a&gt;
  Method 2Ô∏è‚É£: CDK Runtime Context
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/cdk/latest/guide/context.html"&gt;CDK Context&lt;/a&gt; values are key-value pairs that can be associated with a stack or construct. There are a number of different ways these values can be configured, for more information on that see the link above to the documentation.&lt;/p&gt;

&lt;p&gt;In this example, I'm going to use &lt;code&gt;cdk.context.json&lt;/code&gt; file in the root of a CDK project to configure a stack.&lt;/p&gt;

&lt;p&gt;Here is an example &lt;code&gt;cdk.context.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"local"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"myEnvSpecificApiEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://dev.google.com/api"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"myEnvSpecificApiEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://test.google.com/api"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"production"&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"myEnvSpecificApiEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"https://google.com/api"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interfaces can also be created to define the type of configuration data expected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These values can be accessed like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ENV_NAME&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;local&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tryGetContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#method-extending-stackprops"&gt;
  &lt;/a&gt;
  Method 3Ô∏è‚É£: Extending StackProps
&lt;/h1&gt;

&lt;p&gt;The AWS CDK &lt;a href="https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_core.StackProps.html"&gt;StackProps&lt;/a&gt; interface can be extended to add additional configuration properties. In this example we will extend the AWS CDK interface to add a property called &lt;code&gt;myEnvSpecificApiEndpoint&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;IEnvironmentConfig&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;StackProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in the stack initialisation file (located in the &lt;code&gt;bin&lt;/code&gt; directory) we can pass this in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
    &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://dev.google.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, the one downfall of this is that you still need to implement something like method 1 or 2 to configure it on a per-environment basis. This would look something like this for method 1:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TheScheduledLambdaStack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
    &lt;span class="na"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;envConfig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myEnvSpecificApiEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion ü§å
&lt;/h1&gt;

&lt;p&gt;Looking at all three methods, I personally like method 2. Until recently I was blissfully unaware the CDK had already 'solved' this problem for us.&lt;/p&gt;

&lt;p&gt;I live by the saying 'code is a liability' - the less code you manage the better.&lt;/p&gt;

&lt;p&gt;Do you..&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use any of these methods already?&lt;/li&gt;
&lt;li&gt;have a better way of doing it?&lt;/li&gt;
&lt;li&gt;have a different opinion on the optimal solution?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me know in the comments!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cdk</category>
      <category>iac</category>
    </item>
    <item>
      <title>Scientific Programming School Bootcamp (Coding Videos)</title>
      <author>Scientific Programming School</author>
      <pubDate>Wed, 26 May 2021 12:22:31 +0000</pubDate>
      <link>https://dev.to/scientificschool/scientific-programming-school-bootcamp-coding-videos-1nm8</link>
      <guid>https://dev.to/scientificschool/scientific-programming-school-bootcamp-coding-videos-1nm8</guid>
      <description>&lt;p&gt;Introducing the Scientific Programming School - Bootcamp.&lt;br&gt;
&lt;a href="https://bootcamp.scientificprogramming.io/"&gt;https://bootcamp.scientificprogramming.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A 100% free, automated video-based learning platform that curates, organises and shows tutorials on advanced programming and Linux computing. It enables you to "like" videos, create your own "playlist" and provides a "watch later" option. Most of all, it gives you a complete distraction free learning experience. Not to mention, no registration or what so ever is required. &lt;/p&gt;

&lt;p&gt;Currently, the Bootcamp contains 3000+ videos and is curating thousands of videos each day,  pulling together into categories like C/C++, Bash, Perl, Java, JS, Kotlin, Parallel Programming, R, Swift, Matlab and so on. All checked for quality and easiness to digest.&lt;/p&gt;

&lt;p&gt;How good is that?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nugSqAAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9gt9iiulz8pbj7ugelw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nugSqAAg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9gt9iiulz8pbj7ugelw.png" alt="Scientific Programming School Bootcamp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bootcamp.scientificprogramming.io/"&gt;bootcamp.scientificprogramming.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a minor reward, please don‚Äôt forget to Subscribe our new &lt;a href="https://www.youtube.com/channel/UCTML7fZU9u0TyMeYi_IpYBQ?sub_confirmation=1"&gt;YouTube channel&lt;/a&gt; if you want more weekly updates on Linux, Devops, HPC and Advanced coding. We create advanced code videos and present you a platform (scientificprogramming.io) to run scientific codes/ OS commands as you learn with playgrounds and Interactive shells, inside your browser! &lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>promotion</category>
    </item>
    <item>
      <title>7 Tricks I Use To Rewrite JavaScript Code From My Early Days</title>
      <author>Nevin Katz</author>
      <pubDate>Wed, 26 May 2021 12:19:54 +0000</pubDate>
      <link>https://dev.to/nevkatz/7-tricks-i-use-to-rewrite-javascript-code-from-my-early-days-1745</link>
      <guid>https://dev.to/nevkatz/7-tricks-i-use-to-rewrite-javascript-code-from-my-early-days-1745</guid>
      <description>&lt;p&gt;For the past four years, I have been working on a Cordova app that runs on JavaScript. The codebase has grown to the point where working on it often feels like wandering through streets and alleys of a large city. And looking at some of the earlier modules feels like sauntering into old buildings I originally constructed years ago.&lt;/p&gt;

&lt;p&gt;While my JS coding has evolved over this time, I often run into code in the app that feels inefficient and outdated - and it bothers me to the point where I usually feel compelled to eventually refactor it so that it is more compact, readable, and understandable.&lt;/p&gt;

&lt;p&gt;Here are &lt;a href="https://betterprogramming.pub/7-approaches-to-rewriting-javascript-from-my-early-days-c6ada526d55f?sk=943c7f6366a06aa724d18451671cb35d"&gt;7 time-tested tricks&lt;/a&gt; I use to rewrite my JavaScript code from those early days, published this month in Better Programming. I hope you find them useful. Enjoy!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>refactorit</category>
    </item>
    <item>
      <title>üöÄ 40 Developer tools to make your programming life a little easier
</title>
      <author>ProgrammerHumor.io</author>
      <pubDate>Wed, 26 May 2021 12:18:12 +0000</pubDate>
      <link>https://dev.to/prgrmmrhumor_io/40-developer-tools-to-make-your-programming-life-a-little-easier-2opg</link>
      <guid>https://dev.to/prgrmmrhumor_io/40-developer-tools-to-make-your-programming-life-a-little-easier-2opg</guid>
      <description>&lt;p&gt;A list of 40 awesome websites, chrome extensions, web apps, and everything in between that will help you in your programming career.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-whatruns"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.whatruns.com/"&gt;Whatruns&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A free browser extension that helps you identify technologies used on any website at the click of a button. &lt;br&gt;
&lt;a href="https://www.whatruns.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQRe--G6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/io2e36flh7lbak4jg88z.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-sizzy"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://sizzy.co/"&gt;Sizzy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The browser for developers. Stop wasting time and speed up your development workflow &lt;br&gt;
&lt;a href="https://sizzy.co/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zOOyfo2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73geqjuwi6e1uksoaocb.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-logrocket"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://logrocket.com/"&gt;LogRocket&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;LogRocket lets you replay what users do on your site, helping you reproduce bugs and fix issues faster. &lt;br&gt;
&lt;a href="https://logrocket.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GOWF31g5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6ci3ete5gxzn3qby9fbu.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-sentry"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://sentry.io/"&gt;Sentry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Sentry's application monitoring platform helps every developer diagnose, fix, and optimize the performance of their code. &lt;br&gt;
&lt;a href="https://sentry.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W3ELnq2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o9y6dnlj5u09h4runv4p.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-can-i-use"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://caniuse.com/"&gt;Can I Use?&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;"Can I use" provides up-to-date browser support tables for support of front-end web technologies on desktop and mobile web browsers. &lt;br&gt;
&lt;a href="https://caniuse.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kxi-j9Y3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ljyqcptdyk5bgygoszxg.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-prettier"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;An opinionated code formatter, Supports many languages,Integrates with most editors,Has few options. &lt;br&gt;
&lt;a href="https://prettier.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lIuDtzm2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6u21bureeecjlpseay31.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-css-scan"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://getcssscan.com/"&gt;CSS Scan&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Goodbye to "Inspect Element" ‚Äî Check the CSS of any element you hover over, instantly, and copy its entire rules with a single click. &lt;br&gt;
&lt;a href="https://getcssscan.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0SFM61t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hp19t4ynedr98dce45de.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-bundlephobia"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://bundlephobia.com/"&gt;Bundlephobia&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Find the cost of adding a npm package to your bundle &lt;br&gt;
&lt;a href="https://bundlephobia.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--unU6SIqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/skn4pre94fy3q4ezp45x.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-cypress"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser. &lt;br&gt;
&lt;a href="https://www.cypress.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Su7hqsmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zpl4pcg1tncaatywfz11.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-unminify"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://unminify.com/"&gt;Unminify&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Free tool to unminify (unpack, deobfuscate) JavaScript, CSS, HTML, XML and JSON code, making it readable and pretty. &lt;br&gt;
&lt;a href="https://unminify.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cr8sMPV4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/5bsecufgz7il16lo8nlt.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-regex-101"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://regex101.com/"&gt;RegEx 101&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Free PCRE-based regular expression debugger with real time explanation, error detection and highlighting. &lt;br&gt;
&lt;a href="https://regex101.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lIoKMnjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m2sqz88plmzmzbcp3ign.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-clear-cache"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en%20"&gt;Clear Cache&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Clear your cache and browsing data with a single click of a button. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en%20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n35jp92r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jycol4iy8g8p1rx0antv.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-window-resizer"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh"&gt;Window Resizer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Resize the browser window to emulate various screen resolutions. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wntp2AL0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iw1x04nxpsr5w7s5la4h.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-wappalyzer"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;Wappalyzer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Wappalyzer is a utility that uncovers the technologies used on websites. It detects content management systems, ecommerce platforms, web frameworks, server software, analytics tools and many more &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h12J-aQ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vzgqwj5j6q08ms80huaj.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-mdn"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The MDN Web Docs site provides information about Open Web technologies including HTML, CSS, and APIs for both Web sites and progressive web apps. &lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZlHK0G6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zx5xyv5nwgws5qsl1o9z.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-axe"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://www.deque.com/axe/"&gt;Axe&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Standard in Accessibility Testing. Chosen by Microsoft, Google, development and testing teams everywhere, axe is the World‚Äôs leading digital accessibility toolkit. &lt;br&gt;
&lt;a href="https://www.deque.com/axe/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eq7utvWq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xrclziyiu2vubfq6shup.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-git-graph"&gt;
  &lt;/a&gt;
  17. &lt;a href="https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph"&gt;Git Graph&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Git Graph extension for Visual Studio Code. View a Git Graph of your repository, and easily perform Git actions from the graph. Configurable to look the way you want! &lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xaq96uY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/w1tjaf3iec4g65mulxf7.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-kontrast-wcag-contrast-checker"&gt;
  &lt;/a&gt;
  18. &lt;a href="https://chrome.google.com/webstore/detail/kontrast-wcag-contrast-ch/haphaaenepedkjngghandlmhfillnhjk"&gt;Kontrast - WCAG Contrast Checker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Quickly check and adjust contrast in realtime in your browser to meet WCAG 2.1 requirements. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/kontrast-wcag-contrast-ch/haphaaenepedkjngghandlmhfillnhjk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XOxOtgrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/8nvykg1bu2k42o49jp0g.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-octotree"&gt;
  &lt;/a&gt;
  19. &lt;a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;Octotree&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Browser extension that enhances GitHub code review and exploration. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJTSxV0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dodew8uacgc08wla3oo8.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-hoppscotch"&gt;
  &lt;/a&gt;
  20. &lt;a href="https://hoppscotch.io/"&gt;Hoppscotch&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Previously known as Postwoman, web alternative to Postman - Helps you create requests faster, saving precious time on development &lt;br&gt;
&lt;a href="https://postwoman.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eei13F3b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y3ygksxrep4vph4uvs8d.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-responsively"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://responsively.app/"&gt;Responsively&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;App Develop responsive web apps 5x faster! A must-have DevTool for all Front-End developers that will make your job easier. &lt;br&gt;
&lt;a href="https://xscode.com/manojvivek/responsively-app"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFhGC7Ua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eppixeywg241qh1nl7ky.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-fullstory"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://www.fullstory.com/"&gt;FullStory&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Deliver exceptional experiences by letting our easy-to-use, intelligent software pinpoint when, where, and how user struggle is affecting your revenue and retention &lt;br&gt;
&lt;a href="https://www.fullstory.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ju9nvYkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uge3jh88xh9n0cgovjbq.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-gitignoreio"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://www.toptal.com/developers/gitignore"&gt;gitignore.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Create useful .gitignore files for your project &lt;br&gt;
&lt;a href="https://www.toptal.com/developers/gitignore"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3blvgWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0sf6iuj0qdo53ims72ir.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-1loc"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://1loc.dev/"&gt;1Loc&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;206 Favorite JavaScript Utilities in single line of code! No more! &lt;br&gt;
&lt;a href="https://1loc.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z77otOBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/v6ihza3zyjbufj14vexh.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-does-it-mutate"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://doesitmutate.xyz/"&gt;Does it mutate?&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://doesitmutate.xyz/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKiEf7DC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/axhfndtc5rz9lb24ajza.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#26-keycode"&gt;
  &lt;/a&gt;
  26. &lt;a href="https://keycode.info/"&gt;Keycode&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Press any key to get the JavaScript event keycode &lt;br&gt;
&lt;a href="https://keycode.info/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QaZZ_Hbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/voj3s893ca07lsvzftow.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#27-worth-it-modern-js-edition"&gt;
  &lt;/a&gt;
  27. &lt;a href="https://module-nomodule-calculator.glitch.me/"&gt;Worth It: Modern JS edition&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This tool analyzes a page to determine how much less JavaScript is downloaded in modern browsers as a result of it using the module/nomodule pattern. &lt;br&gt;
&lt;a href="https://module-nomodule-calculator.glitch.me/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8HQvrrJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6sit8k507pe8096ma87s.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#28-npmview"&gt;
  &lt;/a&gt;
  28. &lt;a href="https://npmview.now.sh/"&gt;npmview&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A web application to view npm package files. &lt;br&gt;
&lt;a href="https://npmview.now.sh/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ARPCMkWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9tl0sfv7vm6svl4rkmna.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#29-css-to-js"&gt;
  &lt;/a&gt;
  29. &lt;a href="https://css2js.dotenv.dev/"&gt;CSS to JS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Transform between CSS, JS Objects and JSX props. &lt;br&gt;
&lt;a href="https://css2js.dotenv.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LTd_JXsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z7fvom7d0izgnctqch6b.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#30-all-characters"&gt;
  &lt;/a&gt;
  30. &lt;a href="https://aymkdn.github.io/characters/"&gt;All Characters&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A simple page that shows all the different characters and their HTML code. &lt;br&gt;
&lt;a href="https://aymkdn.github.io/characters/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_LWn3D_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oudkiwkbihedznwmncfs.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#31-shape-catcher"&gt;
  &lt;/a&gt;
  31. &lt;a href="https://shapecatcher.com/"&gt;Shape Catcher&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This is a tool to help you find Unicode characters. Finding a specific character whose name you don't know is cumbersome. On shapecatcher.com, all you need to know is the shape of the character! &lt;br&gt;
&lt;a href="https://shapecatcher.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8h3jz7kQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i3k8oeti0n1e0obgo660.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#32-mocky"&gt;
  &lt;/a&gt;
  32. &lt;a href="https://designer.mocky.io/"&gt;Mocky&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Don't wait for the backend to be ready, generate custom API responses with Mocky and start working on your application straightaway &lt;br&gt;
&lt;a href="https://designer.mocky.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y26hiMXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zjhth6dynl92uqwrrfzl.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#33-explain-shell"&gt;
  &lt;/a&gt;
  33. &lt;a href="https://explainshell.com/"&gt;Explain Shell&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Write down a command-line to see the help text that matches each argument &lt;br&gt;
&lt;a href="https://explainshell.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hGnOL-X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2h7te0igiu8hbos4x4g6.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#34-open-graph"&gt;
  &lt;/a&gt;
  34. &lt;a href="https://opengraphcheck.com/"&gt;Open Graph&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Check When sharing content on Facebook and other social networks, clickattractivity is really important. An optimized preview tailored to the target group leads to significant improvements in the Click Trough Rate. Opengraphcheck.com will help you do the job best. And the most awesome thing is the Open Graph Check is for free! &lt;br&gt;
&lt;a href="https://opengraphcheck.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGYAWMCS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gcj2ck3fafshu4ywfyqz.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#35-brotli-pro"&gt;
  &lt;/a&gt;
  35. &lt;a href="https://www.brotli.pro/"&gt;Brotli pro&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Brotli. Next Level. Compression. Ready? &lt;br&gt;
&lt;a href="https://www.brotli.pro/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hg7i_2J9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9zmqc7xye4dm3hlaywt7.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#36-responsive-breakpoints"&gt;
  &lt;/a&gt;
  36. &lt;a href="https://www.responsivebreakpoints.com/"&gt;Responsive Breakpoints&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Easily generate the optimal responsive image dimensions &lt;br&gt;
&lt;a href="https://www.responsivebreakpoints.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4VxIsrei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nv3oub460jvml15dez08.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#37-is-my-host-fast-yet"&gt;
  &lt;/a&gt;
  37. &lt;a href="https://ismyhostfastyet.com/"&gt;Is my host fast yet?&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Real-world server response (Time to First Byte) latencies, as experienced by real-world users navigating the web. &lt;br&gt;
&lt;a href="https://ismyhostfastyet.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVM66yMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/db5tffcwo709nhqie1ig.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#38-check-my-links"&gt;
  &lt;/a&gt;
  38. &lt;a href="https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf?hl=en-GB"&gt;Check My Links&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Check My Links is a link checker that crawls through your webpage and looks for broken links. &lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf?hl=en-GB"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZz5Y_Jh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oz7i5wq3ns4yk57814dc.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#39-json-web-token"&gt;
  &lt;/a&gt;
  39. &lt;a href="https://www.jsonwebtoken.io/"&gt;JSON Web Token&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Encode or Decode JWTs &lt;br&gt;
&lt;a href="https://www.jsonwebtoken.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IzNGNcy7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7phdt1qka2ri0can0d6c.png" alt="Alt Text"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#40-programmerhumorio"&gt;
  &lt;/a&gt;
  40. &lt;a href="https://programmerhumor.io/"&gt;ProgrammerHumor.io&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;After a long programming session when you need a break, head over to ProgrammerHumor.io for best programming memes and fun stuff.&lt;br&gt;
&lt;code&gt;Full disclosure: I built it.&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yjry7UNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gc6fwil2ho9gcu41kru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yjry7UNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gc6fwil2ho9gcu41kru.png" alt="ProgrammerHumor.io: Best programming memes for software engineers and developers"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>JS interview in 2 minutes / Memoization üí≠</title>
      <author>Nikita Kozlov</author>
      <pubDate>Wed, 26 May 2021 11:55:48 +0000</pubDate>
      <link>https://dev.to/kozlovzxc/js-interview-in-2-minutes-memoization-p37</link>
      <guid>https://dev.to/kozlovzxc/js-interview-in-2-minutes-memoization-p37</guid>
      <description>&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;br&gt;
What is memoization?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick answer:&lt;/strong&gt;&lt;br&gt;
It is a way to optimize application performance by caching results of time-consuming pure functions calculations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Longer answer:&lt;/strong&gt;&lt;br&gt;
As we know from the &lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-pure-vs-impure-functions-22om"&gt;previous post&lt;/a&gt;, there are pure and impure functions. &lt;/p&gt;

&lt;p&gt;Pure functions are basically functions that return the same result if you pass the same data and they don't change anything outside of its scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pureAdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;pureAdd&lt;/code&gt; function doesn't change anything outside it just returns the answer and it always returns the same answer for the same arguments.&lt;/p&gt;

&lt;p&gt;With these restrictions come the benefits. If the result is the same every time we run the functions, then why don't we just calculate it once and save the result?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Don't reuse it, it is just an example&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;memo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cache hit :)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cache miss :(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;expire&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;ms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;expire&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;slowAdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;memoAdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;memo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slowAdd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;memoAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// * waiting for 1 sec *&lt;/span&gt;
&lt;span class="c1"&gt;// Cache miss :(&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;memoAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;// No waiting&lt;/span&gt;
&lt;span class="c1"&gt;// Cache hit :)&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Real-life applications:&lt;/strong&gt;&lt;br&gt;
It's not only a theoretical benefit but actually a practical one.&lt;/p&gt;

&lt;p&gt;For example, there is &lt;code&gt;React.memo&lt;/code&gt; which does memoization.&lt;/p&gt;

&lt;p&gt;If your component renders the same result given the same props ... React will skip rendering the component, and reuse the last rendered result.&lt;/p&gt;

&lt;p&gt;Also, there is a &lt;code&gt;useMemo&lt;/code&gt; hook, which also does memoization.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useMemo&lt;/code&gt; will only recompute the memoized value when one of the dependencies has changed. This optimization helps to avoid expensive calculations on every render.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Memoization#:~:text=In%20computing%2C%20memoization%20or%20memoisation,the%20same%20inputs%20occur%20again."&gt;wiki/memoization&lt;/a&gt;&lt;br&gt;
&lt;a href="https://reactjs.org/docs/react-api.html#reactmemo"&gt;react-docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other posts:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-pure-vs-impure-functions-22om"&gt;JS interview in 2 minutes / pure vs impure functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-closure-3hi6"&gt;JS interview in 2 minutes / Closure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-currying-2hko"&gt;JS interview in 2 minutes / Currying ü•ò&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Btw, I will post more fun stuff here and on &lt;a href="https://twitter.com/kozlovzxc"&gt;Twitter&lt;/a&gt;. Let's be friends üëã&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Container Queries: Another Polyfill</title>
      <author>Mads Stoumann</author>
      <pubDate>Wed, 26 May 2021 11:50:27 +0000</pubDate>
      <link>https://dev.to/madsstoumann/container-queries-another-polyfill-2488</link>
      <guid>https://dev.to/madsstoumann/container-queries-another-polyfill-2488</guid>
      <description>&lt;p&gt;I &lt;strong&gt;love&lt;/strong&gt; container queries ‚Äî I have been waiting for them for years.&lt;/p&gt;

&lt;p&gt;But, alas, until all browsers have implemented them, we have to rely on polyfills to make them work. &lt;/p&gt;

&lt;p&gt;While other polyfills work just fine, I needed something that didn't require postCSS or a specific syntax ‚Äì and more tailored to a project, I'm currently working on. &lt;/p&gt;

&lt;p&gt;So I decided to make my own polyfill, and ended up with a script, that's just 502 bytes gzipped:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CSSContainerRule&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)?&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ResizeObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contentRect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;!==&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;?(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cssText&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}});[...&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;styleSheets&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/@container&lt;/span&gt;&lt;span class="se"&gt;\s?\(&lt;/span&gt;&lt;span class="sr"&gt;min-width:&lt;/span&gt;&lt;span class="se"&gt;\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;breakpoint&amp;gt;.*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;px&lt;/span&gt;&lt;span class="se"&gt;\)\s?\{\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;selector&amp;gt;.*&lt;/span&gt;&lt;span class="se"&gt;)\s?\{\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;css&amp;gt;.*;&lt;/span&gt;&lt;span class="se"&gt;)\s?\}&lt;/span&gt;&lt;span class="sr"&gt;/gm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(;&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);)[...&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;:[],&lt;/span&gt;&lt;span class="na"&gt;css&lt;/span&gt;&lt;span class="p"&gt;:[],&lt;/span&gt;&lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;breakpoint&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;?(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)});&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)})})}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OK, that's &lt;em&gt;completely&lt;/em&gt; unreadable, so let's set up the stage with HTML and CSS, before we look at the script!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#setting-the-stage"&gt;
  &lt;/a&gt;
  Setting the stage
&lt;/h2&gt;

&lt;p&gt;In HTML, add this to a new document:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cqw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cq cq1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cqw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cq cq2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cqw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cq cq3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cqw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"cq cq4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;-section, add a link to a stylesheet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"cq.css"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, create the &lt;code&gt;cq.css&lt;/code&gt;-sheet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.cq&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;aspect-ratio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--asr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;silver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;25vw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.cqw&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;contain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="n"&gt;inline-size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.cq1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;tomato&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.cq2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;orange&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.cq3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;skyblue&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.cq4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;tan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;.cq&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--asr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;.cq1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;indianred&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;.cq2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkorange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;.cq3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;steelblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;.cq4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--bgc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lavender&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;.cq&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;.cq&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="py"&gt;--w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25vw&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your page should now look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NiF9mAyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlyu9507myq7lu4zo5gx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NiF9mAyZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlyu9507myq7lu4zo5gx.png" alt="CQ example 2"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-script"&gt;
  &lt;/a&gt;
  The Script
&lt;/h2&gt;

&lt;p&gt;First we need to check whether we need the script or not:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSSContainerRule&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we'll iterate the stylesheets on the page, grab them (again, but they are cached) with &lt;code&gt;fetch()&lt;/code&gt;, convert the result with &lt;code&gt;.text()&lt;/code&gt; and return the rules as a string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;styleSheets&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sheet&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll use &lt;code&gt;regEx&lt;/code&gt; to find what we need in that string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;re&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/@container&lt;/span&gt;&lt;span class="se"&gt;\s?\(&lt;/span&gt;&lt;span class="sr"&gt;min-width:&lt;/span&gt;&lt;span class="se"&gt;\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;breakpoint&amp;gt;.*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;px&lt;/span&gt;&lt;span class="se"&gt;\)\s?\{\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;selector&amp;gt;.*&lt;/span&gt;&lt;span class="se"&gt;)\s?\{\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;css&amp;gt;.*;&lt;/span&gt;&lt;span class="se"&gt;)\s?\}&lt;/span&gt;&lt;span class="sr"&gt;/gm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; A good place to play around with RegEx, is &lt;a href="https://regex101.com/"&gt;regex101.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This expression will return groups of matches entitled &lt;code&gt;breakpoint&lt;/code&gt;, &lt;code&gt;selector&lt;/code&gt; and &lt;code&gt;css&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, let's iterate the matches. For each match, we'll use a &lt;code&gt;querySelectorAll&lt;/code&gt; to find the elements in the &lt;code&gt;DOM&lt;/code&gt; matching the &lt;code&gt;selector&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On each element, we'll create an object, &lt;code&gt;__cq&lt;/code&gt; that will contain an array of breakpoints, the css for each breakpoint, and an index. For each iteration, we'll check whether the object already exists:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;observe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elm&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="na"&gt;css&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;breakpoint&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A &lt;code&gt;Set()&lt;/code&gt; called &lt;code&gt;observe&lt;/code&gt; is used to hold the (unique) set of elements, we'll need to observe:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;RO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;RO&lt;/code&gt; is a &lt;code&gt;ResizeObserver&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ResizeObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;findLastIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contentRect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastIndex&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cssText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's using a small method called &lt;code&gt;findLastIndex&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;findLastIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;... and use that to determine which &lt;code&gt;breakpoint&lt;/code&gt; (bp) is currently needed, and then sets the &lt;code&gt;style&amp;gt;&lt;/code&gt;-attribute of the element to the &lt;code&gt;css&lt;/code&gt; from the &lt;code&gt;__cq&lt;/code&gt;-object.&lt;/p&gt;

&lt;p&gt;Here's the complete script ‚Äî add this or the minified version above to a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;-tag on your demo-page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CSSContainerRule&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;findLastIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ResizeObserver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;findLastIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contentRect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastIndex&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cssText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lastIndex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lastIndex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;styleSheets&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sheet&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;observe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;re&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/@container&lt;/span&gt;&lt;span class="se"&gt;\s?\(&lt;/span&gt;&lt;span class="sr"&gt;min-width:&lt;/span&gt;&lt;span class="se"&gt;\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;breakpoint&amp;gt;.*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;px&lt;/span&gt;&lt;span class="se"&gt;\)\s?\{\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;selector&amp;gt;.*&lt;/span&gt;&lt;span class="se"&gt;)\s?\{\s?(?&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;css&amp;gt;.*;&lt;/span&gt;&lt;span class="se"&gt;)\s?\}&lt;/span&gt;&lt;span class="sr"&gt;/gm&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;)].&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elm&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="na"&gt;css&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="na"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;breakpoint&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
              &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__cq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;RO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, when you resize your page, the boxes change &lt;code&gt;aspect-ratio&lt;/code&gt; and &lt;code&gt;background-color&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUp3oZ8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udnrqk46x8ivrq3yd8x0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUp3oZ8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udnrqk46x8ivrq3yd8x0.png" alt="CQ example 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At &lt;code&gt;900px&lt;/code&gt; the layout returns to it's initial values, and then at &lt;code&gt;1200px&lt;/code&gt; it's back to the updated values.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; It's &lt;em&gt;mobile first&lt;/em&gt;, thus only &lt;code&gt;min-width&lt;/code&gt; will work, and &lt;strong&gt;only&lt;/strong&gt; with pixels as it's value, since the &lt;code&gt;contentRect.width&lt;/code&gt; of the &lt;code&gt;ResizeObserver&lt;/code&gt; returns a value in pixels.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'm sure there's a ton of stuff that could be optimized or changed/added (error-handling, for instance!) ‚Äî after all, this is something I cooked up in 3-4 hours!&lt;/p&gt;

&lt;p&gt;Thanks for reading! &lt;/p&gt;




&lt;p&gt;Cover-image by Pixabay from Pexels&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to check if a python string contains a substring?</title>
      <author>hrishikesh1990</author>
      <pubDate>Wed, 26 May 2021 11:43:15 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-check-if-a-python-string-contains-a-substring-2hal</link>
      <guid>https://dev.to/hrishikesh1990/how-to-check-if-a-python-string-contains-a-substring-2hal</guid>
      <description>&lt;p&gt;In this python tutorial, we look at how you can check if a python string contains a substring. We look at the various methods and explain their use cases in detail.    &lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts. However, in case you are here only for the solution use this link.   &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-check-if-a-python-string-contains-a-substring"&gt;Why check if a python string contains a substring?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-the-in-operator"&gt;Using the in operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#using-string-methods"&gt;Using String Methods&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-index"&gt;index() method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-find"&gt;find() method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-and-caveats"&gt;Limitations and Caveats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-check-if-a-python-string-contains-a-substring"&gt;
  &lt;/a&gt;
  Why check if a python string contains a substring?
&lt;/h2&gt;

&lt;p&gt;We check if a python string contains a substring for multiple reasons, however, its most commonly used in conditional statements. This runs a code in case a substring exists and another if the python string does not contain the substring. Another common use is to find the index of the substring in the python string.&lt;/p&gt;

&lt;p&gt;If you are coming from another language, it most likely that you have come across the &lt;code&gt;contains&lt;/code&gt; function. Python also supports the &lt;code&gt;__contains__&lt;/code&gt; method, however, it also supports a few faster and more readable methods to check if a python string contains a substring.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-raw-in-endraw-operator"&gt;
  &lt;/a&gt;
  Using the &lt;code&gt;in&lt;/code&gt; operator:
&lt;/h2&gt;

&lt;p&gt;The in operator is the most easiest and pythonic method to check if a python string contains a substring. The in and not in are membership operators, they take in two arguments and evaluate if one is a member of another. They return True in case it is a member and False in case it isn't. And hence it is used to check if a substring is a member of a python string. This is an efficient alternative to the &lt;strong&gt;contains&lt;/strong&gt; method and can also be used to check if an item exists in a list.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;in&lt;/code&gt; is mainly used when the user only wants to check if it python string contains the substring and also because it is more readable. However, in case you are looking to return the index of the substring, the next solution is the goto.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-raw-in-endraw-"&gt;
  &lt;/a&gt;
  Syntax of &lt;code&gt;in&lt;/code&gt;:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="s"&gt;'substring` in string
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The syntax for &lt;code&gt;not in&lt;/code&gt; is the same. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-to-check-if-python-string-contains-a-substring"&gt;
  &lt;/a&gt;
  Code to check if python string contains a substring:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"Hire"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Exists"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dose not exist"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Output - Exists
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;in&lt;/code&gt; operator is case sensitive, and the above code would've returned a false if the substring was &lt;code&gt;"hire"&lt;/code&gt; and hence is a good practice to use it with the &lt;code&gt;.lower()&lt;/code&gt; method. This method converts the string to lower case. As strings are immutable, this would not affect the original string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"hire"&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Exists"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dose not exist"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Output - Exists
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-string-methods"&gt;
  &lt;/a&gt;
  Using String Methods:
&lt;/h2&gt;

&lt;p&gt;Python comes with a few string methods that can be used to check if a python string contains a substring. We look at the &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;Index()&lt;/code&gt; methods. These methods stand out from &lt;code&gt;in&lt;/code&gt; as they return the index of the substring. However, they come with their cons we discuss them more in detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-raw-index-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;index()&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;string.index()&lt;/code&gt; method returns the starting index of the substring passed as a parameter. In this way, it could be used to check if a python string contains a substring. However, a major con is that in case the substring does not exist this method returns a &lt;code&gt;ValueError&lt;/code&gt;  and hence it needs to be placed inside a &lt;code&gt;Try Except&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax of &lt;code&gt;index()&lt;/code&gt;:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;code&gt;string&lt;/code&gt; is the python string and &lt;code&gt;value&lt;/code&gt; in the substring. The syntax also contains two optional parameters &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; these are used in case you are looking for a substring within a particular index. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code using &lt;code&gt;index()&lt;/code&gt;:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hire"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dose not exist"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sti&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#Output = 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similar given &lt;code&gt;index()&lt;/code&gt; is case sensitive and using the .lower() is recommended.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hire"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dose not exist"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sti&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;#Output = 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-raw-find-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;find()&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;string.find()&lt;/code&gt; is another method that can be used to check if the python string contains the substring. Similar to &lt;code&gt;index()&lt;/code&gt; , &lt;code&gt;find()&lt;/code&gt; also returns the starting index of the substring. But unlike the &lt;code&gt;index()&lt;/code&gt; method it does not return a &lt;code&gt;ValueError&lt;/code&gt; in case the substring does not exist but rather returns &lt;code&gt;-1&lt;/code&gt; which is the index of the left-most string. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax of &lt;code&gt;find()&lt;/code&gt;:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The syntax and parameters of &lt;code&gt;find()&lt;/code&gt;  are the same as &lt;code&gt;index()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code using &lt;code&gt;find()&lt;/code&gt;:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hire"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hire"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dose not exist"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And again, since &lt;code&gt;find()&lt;/code&gt; is also case sensitive the following code can be used.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"hire"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hire the top freelancers"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hire"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dose not exist"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#limitations-and-caveats"&gt;
  &lt;/a&gt;
  Limitations and Caveats
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Remember to use the &lt;code&gt;.lower()&lt;/code&gt; methods as all the methods are case sensitive.&lt;/li&gt;
&lt;li&gt;Which using the &lt;code&gt;index()&lt;/code&gt; method to ensure it is placed inside an try and except condition.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Understanding Docker: part 34 ‚Äì Context</title>
      <author>Aur√©lie Vache</author>
      <pubDate>Wed, 26 May 2021 11:37:04 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-docker-part-34-context-2gad</link>
      <guid>https://dev.to/aurelievache/understanding-docker-part-34-context-2gad</guid>
      <description>&lt;p&gt;Understanding Docker can be difficult or time-consuming. In order to spread knowledge about Cloud technologies I started to create sketchnotes about Docker. I think it could be a good way, more visual, to explain Docker (and other technologies like Kubernetes and Istio).&lt;/p&gt;

&lt;p&gt;We continue the series of Docker sketchnotes with a focus about Docker contexts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6jgyTlZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azrsk0xuslv2s8qgn6hx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jgyTlZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azrsk0xuslv2s8qgn6hx.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPVxJnrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by5tsi0twoz2j6rp0zkr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPVxJnrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by5tsi0twoz2j6rp0zkr.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I published all the sketchnotes on Docker (and new ones!) to make a "book" of 93 pages: &lt;a href="https://gumroad.com/aurelievache#YTLzM"&gt;"Understanding Docker in a visual way"&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Swift Packages ‚Äì Dependency Management of the Future</title>
      <author>leogdion</author>
      <pubDate>Wed, 26 May 2021 11:12:18 +0000</pubDate>
      <link>https://dev.to/leogdion/swift-packages-dependency-management-of-the-future-2gdh</link>
      <guid>https://dev.to/leogdion/swift-packages-dependency-management-of-the-future-2gdh</guid>
      <description>&lt;p&gt;Package Management has been around for decades. There‚Äôs everything from APT to Maven to chocolatey. For those who work in the Apple space we are probably more familiar with Cocoapods and Homebrew. However since the introduction of Swift, the Apple team has given us a new package manager: &lt;strong&gt;Swift Package Manager&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this article, I'll cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  what iOS and other Swift developers can use&lt;/li&gt;
&lt;li&gt;  the advantages of SPM (Swift Package Manager) from its predecessors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First, let's get into &lt;strong&gt;why you'd want to use any package manager in the first place&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X26gmEMh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/030-puzzle-17054.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X26gmEMh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/030-puzzle-17054.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modularity-and-reuse-benefits-of-package-management"&gt;
  &lt;/a&gt;
  Modularity and Reuse - Benefits of Package Management
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;One key component of package management is the ability to share code or an executable&lt;/strong&gt; - whether that's publicly or just within your internal dev team.&lt;/p&gt;

&lt;p&gt;Part of doing that is breaking your code into separate pieces. This is where package managers encourage &lt;strong&gt;modularization&lt;/strong&gt;. In other words components can be separated out, tested properly, and used by others.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BTG7e_60zN8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Once you‚Äôve separated that piece of functionality, you can include support across a variety of devices and operating systems. &lt;strong&gt;In the Apple ecosystem, this could mean supporting not only the iPhones but anything from Linux servers to the Apple Watch.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another nice feature of package management is that you can lock onto specific versions. Usually you can specify a &lt;em&gt;&lt;a href="https://semver.org"&gt;semver&lt;/a&gt;&lt;/em&gt; compatible version number related to a version tag or even a branch name. Let's get into the different package managers for developers in the Apple ecosystem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lCKypKoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/pasted-image-small-14348.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lCKypKoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/pasted-image-small-14348.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-came-before-and-is-still-around"&gt;
  &lt;/a&gt;
  What Came Before... and is Still Around
&lt;/h2&gt;

&lt;p&gt;Swift Package Manager is fairly a new addition for Swift developers let alone iOS and macOS developers. Let's talk about what what has come before for developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Carthage&lt;/strong&gt; has been around since the advent of Swift. Carthage really specializes in building the binary frameworks and sharing those within your project. Before Carthage, there was &lt;strong&gt;CocoaPods&lt;/strong&gt; which has been around since the early days of Objective-C.&lt;/p&gt;

&lt;p&gt;One drawback is that Cocoapods is built in Ruby and is therefore dependent on having the correct versions of Ruby installed while Carthage is built in Swift. Another drawback for Cocoapods is that &lt;strong&gt;it requires modification of your Xcode projects and workspaces&lt;/strong&gt;. Carthage gets around this by having the user &lt;strong&gt;add the built frameworks the manually the first time they integrate it.&lt;/strong&gt; If you are interested in some of the choices where Carthage differs from Cocoapods, check out &lt;a href="https://github.com/Carthage/Carthage#differences-between-carthage-and-cocoapods"&gt;this piece the Carthage README.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly, if neither works for your project, there's &lt;strong&gt;&lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules"&gt;git submodules&lt;/a&gt;&lt;/strong&gt;. Git Submodules are the most difficult to deal with, but perhaps the most versatile. They simply require an available git repo to link to a subdirectory. If you plan editing your dependency, git submodules may be required.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you are going to use a package manager, choose one at best and stick with it.&lt;/strong&gt; However your best bet is migrating to Swift Package Manager.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ShVMBMtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/Xcode_Icon-small-15043.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ShVMBMtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/04/Xcode_Icon-small-15043.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-swift-package-manager"&gt;
  &lt;/a&gt;
  Why Swift Package Manager?
&lt;/h2&gt;

&lt;p&gt;Swift Package Manager brings plenty of benefits along with it. Along with it's versatile handing of versioning, SPM (Swift Package Manager) is natively supported in Swift. While tools like CocoaPods require Ruby and other Gem dependencies, there's no need with SPM. SPM simply requires either Swift or Xcode be installed on your macOS or Linux machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SPM is also open-source while also being supported by Apple. This means you get the benefits of seeing how something works and being open to the community as well as in Apple's best interest to support it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Really it comes down to whether your current line of dependencies support SPM. At this point, the list of Cocoapods and Carthage packages which also support SPM continues to grow as SPM expands its support for features like binary packages (i.e. XCFrameworks).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2ZhvfG_vd5Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Not only does SPM provide benefits in your Xcode projects but also in the way you modularize and share your code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-publish-with-swift-package-manager"&gt;
  &lt;/a&gt;
  Why Publish with Swift Package Manager?
&lt;/h2&gt;

&lt;p&gt;There are plenty of reasons to break apart your application or even publish your library or executable via Swift Package Manager. For one thing, &lt;strong&gt;it becomes easier to build your application completely in Swift - from server to device.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#full-stack-swift"&gt;
  &lt;/a&gt;
  Full Stack Swift
&lt;/h3&gt;

&lt;p&gt;For instance, you can build your supporting server application in Swift whether that‚Äôs Vapor, Lambda, Smoke, or Hummingbird. By doing that, &lt;strong&gt;you can share code between client (iOS application) and server.&lt;/strong&gt; Specifically Codable models can be shared on both iOS and the server. Even if you have an existing server, you can build a mock server in Swift for testing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// an example of sharing server-side and client-side code via SPM&lt;/span&gt;

    &lt;span class="c1"&gt;// HeartwitchKit/WorkoutData.swift&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;WorkoutData&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;heartRate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;

      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;heartRate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heartRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;heartRate&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;updated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;WorkoutData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;WorkoutData&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;heartRate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heartRate&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heartRate&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kt"&gt;WorkoutData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;heartRate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;heartRate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="kt"&gt;WorkoutData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Codable&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="c1"&gt;// HeartwitchKitServer/WorkoutData&lt;/span&gt;
    &lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Vapor&lt;/span&gt;
    &lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="kt"&gt;WorkoutData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Content&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are going the route of building both ends of your application in Swift, SPM is the only way to go. In fact for parts of your code that can be abstracted away from the device, SPM has advantages over Xcode when it comes to testing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testability"&gt;
  &lt;/a&gt;
  Testability
&lt;/h3&gt;

&lt;p&gt;The ease of testing through SPM is really nice as well. Especially when it‚Äôs difficult and slow to do in simulator. For instance before Xcode 12.5 supported watchOS testing, it was nearly impossible to run unit tests for watchOS.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fzLkHAku1mc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;However by having most of your Apple Watch application code in a Swift package, I can easily test code which doesn't require watchOS specifically. &lt;strong&gt;This circumvents the issue but also makes it easier without needing an actual device or via simulator.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In spots where code is only applicable and available on the watch, such as SwiftUI or HealthKit code I can use a combination of preprocessor directives to mark availability:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// using canImport and os to disable applicable code&lt;/span&gt;

    &lt;span class="cp"&gt;#if canImport(HealthKit)&lt;/span&gt;
      &lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;HealthKit&lt;/span&gt;

      &lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="kt"&gt;HKHealthStore&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;HealthInterface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;workout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;withConfiguration&lt;/span&gt; &lt;span class="nv"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;WorkoutConfiguration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;throws&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Workout&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;hkConfig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;HKWorkoutConfiguration&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
          &lt;span class="n"&gt;hkConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activityType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activityType&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;healthKitType&lt;/span&gt;
          &lt;span class="cp"&gt;#if os(watchOS)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="kt"&gt;HealthKitLiveWorkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fromHealthStore&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;withConfiguration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hkConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="cp"&gt;#else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="kt"&gt;HealthKitWorkout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fromHealthStore&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;withConfiguration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hkConfig&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="cp"&gt;#endif&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not only that but as I develop a server-side application I may not want to run the watchOS application every time to test capabilities on the server. This is where refactoring into a Swift package is also useful. By having a library which contains most of my watchOS code, I can simulate the heart rate in the Apple Watch application by creating a simple command line application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#command-line-tools"&gt;
  &lt;/a&gt;
  Command Line Tools
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;SPM allows me to duplicate the functionality of Heartwitch, my watchOS app, into a command line tool&lt;/strong&gt; which replicates the heart rate sensor feature. This makes it easier to test the server application without having to run the Heartwitch app on my Apple Watch or via simulator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pfOydfhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/hwmonitor.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pfOydfhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://learningswift.brightdigit.com/wp-content/uploads/sites/2/2021/05/hwmonitor.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of my favorite tools out there is &lt;a href="https://github.com/apple/swift-argument-parser"&gt;the Swift Argument Parser by the Swift team&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Swift Argument Parser builds on the great ideas from Swift UI (i.e. Property Wrappers) and Codable and brings that to the command line.&lt;/strong&gt; You can do things like subcommands, helpful feedback, options, and flags. In my case, I use it to enable faster server-side development. Specifically I built a command line tool to replicate the heart rate monitoring feature of the Apple Watch app and feed my server simulated heart rates.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SeaRbgIkmW4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#power-of-spm"&gt;
  &lt;/a&gt;
  Power of SPM
&lt;/h2&gt;

&lt;p&gt;In this article we covered package management and the advantages of SPM over other managers. Consider using SPM and learning the ins and outs of integrating Swift Packages into your projects. If you are using Cocoapods or Carthage, consider migrating your applications over. In the next article, I'll talk about creating a Swift Package from scratch as well as the most important part - Package.swift - the Swift Package Manifest file.&lt;/p&gt;

</description>
      <category>swift</category>
      <category>swiftpackagemanager</category>
      <category>dependencymanagement</category>
      <category>ios</category>
    </item>
    <item>
      <title>6 Amazing Tips To Boost Your SEO</title>
      <author>Raymond Halliwell</author>
      <pubDate>Wed, 26 May 2021 10:56:59 +0000</pubDate>
      <link>https://dev.to/raymondhalliwell/6-amazing-tips-to-boost-your-seo-38ee</link>
      <guid>https://dev.to/raymondhalliwell/6-amazing-tips-to-boost-your-seo-38ee</guid>
      <description>&lt;p&gt;While there is a lot of SEO advice and tips out there, most don‚Äôt deliver desirable results. And some are already outdated and seem to work no more with Google‚Äôs constant change in algorithm. With an abundance of tips and tricks flooding the internet, choosing the right one can be  challenging. That is why &lt;a href="https://twitter.com/raymondhalliwel"&gt;Raymond Halliwell&lt;/a&gt;, a digital marketing expert on actionable SEO tips that have proven to improve organic rankings without getting penalized. It‚Äôs time to let go of those that aren‚Äôt working and embrace the real deal that will Improve your search rankings. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-relevant-subtopics-to-existing-contents"&gt;
  &lt;/a&gt;
  Add relevant subtopics to existing contents
&lt;/h2&gt;

&lt;p&gt;It is not okay to miss essential points during the first draft that could have improved your page rank in search engines. Keywords might be less ranked due to missing subtopics which might lead to less visibility for your site. Rank the subtopics and include major keywords to improve ranking.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-backlinks-from-one-page-on-your-site-to-another"&gt;
  &lt;/a&gt;
  Add backlinks from one page on your site to another
&lt;/h2&gt;

&lt;p&gt;Backlinks are interlinked that are added to new pages. These are links from a page on one website to another to give easy navigation to visitors. To increase your site ranking, add more interlinks to the pages. Search for relevant opportunities with high authorities and interlink them on your page. You can do this by searching for the website URL with the keyword you are looking for. If there are many keywords, filter them and prioritize the ones with the highest authority over the others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-for-competing-backlinks-that-undermine-and-decrease-the-performance-of-your-content"&gt;
  &lt;/a&gt;
  Check for competing Backlinks that undermine and decrease the performance of your content
&lt;/h2&gt;

&lt;p&gt;There is room for improvement if your keyword is not yet ranked as number one. Check for the ranking first with a SERP checker. Competing Backlinks can be a result of other pages having a lot of referring domains that pushed the ranking of your site back. Look for areas where your page beats others and use the contents. That is, go to pages with less view, reach out to them, direct and link them to your page to improve traffic and visibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#revamp-your-blog-posts-as-video-content"&gt;
  &lt;/a&gt;
  Revamp your blog posts as video content
&lt;/h2&gt;

&lt;p&gt;As individuals, we are different and we have different preferences. This is also applicable to content we view on the internet. Different people prefer different content formats for their business websites. Hence you should find out which format your audience prefers and tailor your content format according to your target audience‚Äôs needs. Most people prefer video formats. Therefore, you can change your blog post to videos or embed videos related to topics or keywords that most people search for on YouTube on your blog posts to reach a wider audience. This will level up your ranking on the Google search engine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-and-fix-pages-that-have-broken-backlinks"&gt;
  &lt;/a&gt;
  Check and fix pages that have broken backlinks
&lt;/h2&gt;

&lt;p&gt;Backlinks that lead to dead pages are not useful according to SEO. They no longer exist nor do they help other active pages in their ranking. To know a broken backlink, filter for error 404 pages in a Link report, and if pages with referring domains exist, then the backlinks are broken.&lt;/p&gt;

&lt;p&gt;Broken backlinks can be fixed by:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Reinstating dead pages deleted by mistake.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redirecting a URL of dead pages to new URLs or redirect nonexistent dead pages with a similar page to the old URL.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Requesting for a link change. Only fix dead pages with high-quality backlinks or leave them at 404. To check if a page backlink is of good quality, go to the backlinks report.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#convert-custommade-infographics-illustrations-images-etc-into-backlinks"&gt;
  &lt;/a&gt;
  Convert custom-made infographics, illustrations, images, etc into backlinks
&lt;/h2&gt;

&lt;p&gt;Others might make use of these images in their contents and link back to the image source instead of the main page (source link). To check if people are using your image without proper linking, go to any image on your website, right-click then click on ‚ÄúSearch Google‚Äù for Image options available on the menu. You can also copy and paste the link to your website on Site Explore. For this, click on Backlinks report, look for links that have .jpg, or .PNG, in the URLs of the backlinks and you will see the sites that have inappropriately linked their contents to your images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;We hope these tips given by Raymond Halliwell can be of help in your SEO journey. The good thing is it doesn‚Äôt take time and it can be implemented in a few hours. With these, watch your website pages rank high in no time.  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://getjoys.net/technology/tips-to-boost-seo/"&gt;getjoys.net&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>digitalmarketing</category>
      <category>raymondhalliwell</category>
      <category>seo</category>
      <category>socialmediamarketing</category>
    </item>
  </channel>
</rss>
