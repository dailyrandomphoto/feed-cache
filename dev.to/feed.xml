<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>January  20th, 2022: What did you learn this week?</title>
      <author>Nick Taylor</author>
      <pubDate>Fri, 21 Jan 2022 01:25:04 +0000</pubDate>
      <link>https://dev.to/nickytonline/january-20th-2022-what-did-you-learn-this-week-odl</link>
      <guid>https://dev.to/nickytonline/january-20th-2022-what-did-you-learn-this-week-odl</guid>
      <description>&lt;p&gt;It's that time of the week again. So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/W1ecIq4sEofza/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/W1ecIq4sEofza/giphy.gif" alt="Hackerman from Kung Fury putting on a Nintendo Power glove" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>weeklylearn</category>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Design Patterns of Event-driven Architecture</title>
      <author>ChunTing Wu</author>
      <pubDate>Fri, 21 Jan 2022 01:16:18 +0000</pubDate>
      <link>https://dev.to/lazypro/design-patterns-of-event-driven-architecture-3a79</link>
      <guid>https://dev.to/lazypro/design-patterns-of-event-driven-architecture-3a79</guid>
      <description>&lt;p&gt;According to the &lt;a href="https://www.gartner.com/ngw/globalassets/en/information-technology/documents/top-10-strategic-technology-trends-for-2018.pdf"&gt;report&lt;/a&gt;, we can see the event-driven model is a hot topic for the system design. However, designing a good event-driven architecture is quite challenging. We are familiar with the synchronization model, which request and response directly, but the stories are totally different in the asynchronization scheme. Nevertheless, here are some architecture patterns for reference.&lt;/p&gt;

&lt;p&gt;The blueprint comes from the &lt;a href="https://youtu.be/dc20BQ9izs8"&gt;video&lt;/a&gt; and shows the whole vision on a well-defined event-driven architecture. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jkS1nSge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aWW2ybH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkS1nSge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aWW2ybH.png" alt="" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will briefly introduce those terminologies in the later sections.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#channel-monitoring-pattern"&gt;
  &lt;/a&gt;
  Channel monitoring pattern
&lt;/h2&gt;

&lt;p&gt;The channel monitoring pattern define a role called channel monitor to watch the usage and utilization of the main queue. It monitors some metrics like the amount of pending messages, the amount of consumers and the consuming rate.&lt;/p&gt;

&lt;p&gt;Having those metrics helps to understand the workload and the healthy of the system. Moreover, the information can let the system be able to self-healing by adjusting the amount of consumers and throttle the producer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#consumer-supervisor-pattern"&gt;
  &lt;/a&gt;
  Consumer supervisor pattern
&lt;/h2&gt;

&lt;p&gt;This supervisor is responsible for adjusting the amount of consumers. It listens to the channel monitor and determines if the current consumers can handle the events. If the supervisor thinks the throughput of consumers is not enough, it will call more consumers to help, and vise versa.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#producer-control-flow-pattern"&gt;
  &lt;/a&gt;
  Producer control flow pattern
&lt;/h2&gt;

&lt;p&gt;In the previous section, the supervisor improves the throughput by making more consumers. However, if the cost is a concern, using more consumers obviously is infeasible.&lt;/p&gt;

&lt;p&gt;Therefore, there is another approach, producer control flow pattern. When the consuming rate cannot align to the producing rate, a controller will send a signal to the producer to slow down the event generation. After the pending events are processed, the producer can disable the throttling to restore the normal state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thread-delegate-pattern"&gt;
  &lt;/a&gt;
  Thread delegate pattern
&lt;/h2&gt;

&lt;p&gt;The thread delegate pattern is a useful pattern not only in the event-driven architecture but the other types of the system design.&lt;/p&gt;

&lt;p&gt;The pattern has two purposes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Preserve the message order&lt;/li&gt;
&lt;li&gt;Track the metrics of event processing, ex. response time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I-b5VuoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8Yk7qAz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I-b5VuoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8Yk7qAz.png" alt="" width="880" height="631"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's begin from the first purpose. When a huge amounts of events enter the queue, we are used to bring up more consumers to handle them, aka scale-out. This method is common in the stateless scenarios. But, some kind of events are stateful, the order of events must be addressed. For instance,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Put some items in the cart&lt;/li&gt;
&lt;li&gt;Clean up the cart&lt;/li&gt;
&lt;li&gt;Put other items in the same cart&lt;/li&gt;
&lt;li&gt;Charge it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The event order must be kept; otherwise, you may buy the wrong items. Thus, how to handle the events on multiple consumers? In thread delegate pattern, it introduces a new role, event dispatcher, and the dispatcher dispatch an event to the corresponding consumer based on the event type. In other words, all events with the same type will be in the same place, and the order can be ensured.&lt;/p&gt;

&lt;p&gt;So, the dispatcher maintains a mapping table to record which type of event belongs to who. After the consumer finishes an event, it callback to the dispatcher. The dispatcher knows all processing results of consumers, i.e., it can track the response time as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workflow-event-pattern"&gt;
  &lt;/a&gt;
  Workflow event pattern
&lt;/h2&gt;

&lt;p&gt;When event consumer encounter an error while processing, it may not fix the error due to many reasons like the malformed event, transaction conflicts, etc. Hence, the consumer emit this event to another queue handled by workflow processor. The processor will either fix the event or store the event in the storage. In addition, the processor can display the event on the dashboard and inform the human to take over the case. The human can fix the situation manually and resend this event to the queue.&lt;/p&gt;

&lt;p&gt;It is worth to mention that if the event is resent to the queue, the order cannot be guaranteed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requestresponse-model"&gt;
  &lt;/a&gt;
  Request-response Model
&lt;/h2&gt;

&lt;p&gt;Wait, we are designing an event-driven architecture which is asynchronized definitely. Why we are talking about the synchronized model here? In my opinion, the request-response models is very classic way to start up a project. We used to request a response through the restful APIs. This implementation can reduce the development effort and give a straightforward view. However, we donâ€™t want to lose the flexibility of event-driven architectures. The solution is we implement a request-response models upon an event system.&lt;/p&gt;

&lt;p&gt;The sequential diagram is shown as the following figure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yDQyBpMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0j97hfhyqf9ewhmgdja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yDQyBpMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0j97hfhyqf9ewhmgdja.png" alt="Image description" width="606" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The server is a traditional HTTP server with some synchronized Restful APIs, and the client requests the server as usual. Nevertheless, the server doesn't handle this request directly; instead, he delegate this job to the event worker and wait for the response at the agreed place which is another queue. After using this pattern, we can enjoy not only the benefits of the event-driven architecture but also the simplicity between clients and servers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ambulance-pattern"&gt;
  &lt;/a&gt;
  Ambulance Pattern
&lt;/h2&gt;

&lt;p&gt;The ambulance pattern is used to handle the message priority correctly. The simple design for an emergency event is always put this event to the head of a queue, so that workers can process those high-priority events Immediately. Well, this implementation has some drawbacks, especially, the starvation of the low-priority events. Those normal events might not be processed at all, because there are always emergency events come in.&lt;/p&gt;

&lt;p&gt;In order to handle events evenly, we can separate emergency events from ordinary events and submit to a new queue like the follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OUgrnewP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iou2o797xhjykgdcuial.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OUgrnewP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iou2o797xhjykgdcuial.png" alt="Image description" width="449" height="162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The workers can pick events from those queues to avoid the starvation. There can be a weight to determine the ratio of the two sides, or simply use round-robin to handle those events sequentially.&lt;/p&gt;

&lt;p&gt;Furthermore, you can dedicate a worker focus on the emergency events.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zE0_r7RV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/peqh154mc0as3mbz5fqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zE0_r7RV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/peqh154mc0as3mbz5fqy.png" alt="Image description" width="449" height="162"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;We walk through several design patterns of an event-driven architecture. We can design a self-monitoring and self-healing system leverage those patterns. The system is scalable, robust, efficient, and fault-tolerant.&lt;/p&gt;

&lt;p&gt;In order to make the client more easily, we can leverage the request-response model. If we encounter a scenario is to distinguish the event priority, we can use the ambulance pattern.&lt;/p&gt;

&lt;p&gt;The trend of using event-driven architecture has become apparent. However, until now, there is no one-size-fits-all solution can design a well architecture for events. We have to find the corresponding solution according to various situations. Hope this article are helpful to you.   &lt;/p&gt;

</description>
      <category>eventdriven</category>
      <category>architecture</category>
      <category>design</category>
    </item>
    <item>
      <title>Use VS Code snippets to generate Markdown front matter</title>
      <author>Cecelia Martinez</author>
      <pubDate>Thu, 20 Jan 2022 23:57:31 +0000</pubDate>
      <link>https://dev.to/ceceliacreates/use-vs-code-snippets-to-generate-markdown-front-matter-fpc</link>
      <guid>https://dev.to/ceceliacreates/use-vs-code-snippets-to-generate-markdown-front-matter-fpc</guid>
      <description>&lt;p&gt;Many modern blogging platforms and frameworks for content-focused web apps use Markdown to manage individual content files. Markdown front matter makes it easy to add metadata to your content with information like tags, publish date, title, description, and more. Dev.to for example, uses Jekyll front matter for blog posts written on the platform.&lt;/p&gt;

&lt;p&gt;If you're using a framework like &lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt; for Vue or &lt;a href="https://www.gatsbyjs.com/"&gt;Gatsby&lt;/a&gt; for React, you may have very specific properties you need in you front matter to ensure content renders the right way on your site. There are likely many ways to do this, but I've found that using VS Code snippets to store the block of front matter is an easy way to generate markdown files that are consistent with what my front end expects.&lt;/p&gt;

&lt;p&gt;Here is an example of the front matter for an event markdown file for my &lt;a href="https://ceceliacreates.com"&gt;personal website&lt;/a&gt;, built with Nuxt:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Effective Testing Approaches for your Application&lt;/span&gt;
&lt;span class="na"&gt;org&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Refactr.TECH&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;2021-10-03T00:00:00&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Talk&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;In this talk, we'll define the different types of testing and cover their use cases, as well as provide some guidelines for deciding which approach to use for your application.&lt;/span&gt;
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;-MUqhmhjt1I&lt;/span&gt;
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://slides.com/ceceliamartinez/effective-testing-approaches&lt;/span&gt;
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;testing&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;conference&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;test strategy&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would be a lot of properties to remember every time I want to add an event to my site. This is why I let snippets remember for me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vs-code-snippets"&gt;
  &lt;/a&gt;
  VS Code Snippets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_create-your-own-snippets"&gt;Snippets in VS Code&lt;/a&gt; are templates for repeated code that you can use throughout files in your code editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=l66s-Ju_QRk&amp;amp;ab_channel=JuriStrumpflohner"&gt;This great video&lt;/a&gt; by Juri Strumpflohner walks through the process of creating a VS Code snippet using a &lt;a href="https://snippet-generator.app/"&gt;snippet generator&lt;/a&gt;. This is the process I'll use to create my markdown front matter snippets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-vs-code-snippets-file"&gt;
  &lt;/a&gt;
  Setting up your VS Code snippets file
&lt;/h2&gt;

&lt;p&gt;First we need to create the file to store our snippets.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Press &lt;code&gt;cmd+shift+p&lt;/code&gt; (Mac) or &lt;code&gt;ctrl+shift+p&lt;/code&gt; (Windows) to open the Command Palette in VS Code. Type 'snippet' and select 'Preferences: Configure User Snippets.' You can also click Code &amp;gt; Preferences &amp;gt; User Snippets from the menu bar.&lt;/li&gt;
&lt;li&gt;You can either create a global snippets file, or one specific to the workspace for your project. I'd recommend creating a local file unless you have multiple projects that need the same front matter snippets.&lt;/li&gt;
&lt;li&gt;Select which option you prefer to create the file. It will prompt you to name the file, then click Save. This creates a file with a .code-snippets suffix within the .vscode directory for your project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The generated file will have instructions for creating snippets, as well as an example of the syntax. You can use this documentation to write your own, but we'll make things easier and use a snippet generator.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-snippet"&gt;
  &lt;/a&gt;
  Creating a snippet
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://snippet-generator.app/"&gt;snippet generator app&lt;/a&gt; converts the snippet information and body and converts it to the syntax needed by VS Code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pxx18MR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5mqq6qn4puag2ihvi5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pxx18MR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5mqq6qn4puag2ihvi5b.png" alt="Screenshot of snippet generator app" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Description...&lt;/code&gt; field is the name of the snippet. Following the example of the event front matter above, I'll name mine 'event frontmatter'.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Tab trigger...&lt;/code&gt; field corresponds to the &lt;code&gt;prefix&lt;/code&gt; property in the VS Code snippet syntax. This is the name that will show up in VS Code when you open the snippet menu and select which one to use, like in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iW7RQ0c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoy01q7uytj8zsrywpaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iW7RQ0c8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hoy01q7uytj8zsrywpaw.png" alt="snippet menu" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I named mine &lt;code&gt;eventFrontmatter&lt;/code&gt;, but the format is up to you.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Your snippet...&lt;/code&gt; field is where you enter the front matter you'd like to generate with the snippet. This is my example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-tabstops-and-placeholders"&gt;
  &lt;/a&gt;
  Adding tabstops and placeholders
&lt;/h2&gt;

&lt;p&gt;So far, this snippet saves me some typing, but does not provide the best experience because I'll have to click through each line to update the values for these fields.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_tabstops"&gt;Tabstops&lt;/a&gt; to the rescue! Tabstops are stopping points in your snippet where you can enter text and then &lt;code&gt;tab&lt;/code&gt; to the next location. Use a $n to enter them in your snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$1&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$2&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$3&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$4&lt;/span&gt;
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$5&lt;/span&gt;
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$6&lt;/span&gt;
&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$7&lt;/span&gt;
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$8&lt;/span&gt;
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$9&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I can also add default values at a tabstop with a &lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_placeholders"&gt;placeholder&lt;/a&gt;. A placeholder is auto-set and highlighted when tabbed so you can update easily if needed. You can even set multiple choices for a placeholder. Because I have only a few set event types, I'm going to use placeholder choices for that field in my snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$1&lt;/span&gt;
&lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$2&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${3|Workshop,Talk,Interview,Podcast,Stream|}&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$4&lt;/span&gt;
&lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$5&lt;/span&gt;
&lt;span class="na"&gt;embed&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$6&lt;/span&gt;
&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$7&lt;/span&gt;
&lt;span class="na"&gt;slides&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$8&lt;/span&gt;
&lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$9&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when I go to use my snippet, I can tab through these options. Neat!&lt;/p&gt;

&lt;p&gt;Now that we have our snippet, we can copy it from the generator and add to our &lt;code&gt;.code-snippets&lt;/code&gt; file back in VS Code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--re7dKQjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6g15fic8gnqvwmxprlt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--re7dKQjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6g15fic8gnqvwmxprlt.png" alt="Screenshot of generated snippet" width="880" height="813"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure you paste your snippet &lt;strong&gt;inside&lt;/strong&gt; the object in the file. Multiple snippets should be comma separated just like with JSON.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MLvLBAh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x5gw99jfto9lhrtr6kn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MLvLBAh5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0x5gw99jfto9lhrtr6kn.png" alt="Screenshot of snippets file in VS Code" width="880" height="849"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#snippets-for-front-matter"&gt;
  &lt;/a&gt;
  Snippets for front matter
&lt;/h2&gt;

&lt;p&gt;Snippets can be used for any type of code, but there are a few things to keep in mind when using for front matter specifically.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Triple dashes.&lt;/strong&gt; Don't forget to add these at the beginning and end of your snippet so the front matter is parsed correctly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Be careful with quotes.&lt;/strong&gt; If you use quotes, make sure not to mix single and double quotes in your placeholder values, otherwise you'll get errors. For most frameworks or platforms you don't need them, so leave them out unless you do.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Escape characters.&lt;/strong&gt; The snippet generator will automatically escape quotes in your placeholders, but be careful not to remove them when editing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-the-snippet"&gt;
  &lt;/a&gt;
  Using the snippet
&lt;/h2&gt;

&lt;p&gt;Now that our snippet is saved, we can use it in any file in VS Code either globally or in our project, depending on which type of snippets file you created.&lt;/p&gt;

&lt;p&gt;To open the snippets menu, type &lt;code&gt;ctrl+spacebar&lt;/code&gt; in your editor. This will bring up the available snippets. You can arrow down to select and then &lt;code&gt;Enter&lt;/code&gt; to insert the snippet in your file. Now you can &lt;code&gt;tab&lt;/code&gt; through your tabstops and enter the values for your file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8XjL7r5n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/faq25nblwtztdvzerxf7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8XjL7r5n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/faq25nblwtztdvzerxf7.gif" alt="Selecting a choice placeholder with a snippet" width="642" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No more manually generating front matter for your content!&lt;/p&gt;

&lt;p&gt;I hope you found this a helpful introduction to using snippets in VS Code. For more information, check out &lt;a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets#_create-your-own-snippets"&gt;the official documentation&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>markdown</category>
      <category>vscode</category>
      <category>snippets</category>
      <category>nuxt</category>
    </item>
    <item>
      <title>Running A Youtube Channel - 10 Ways Developers Make Money Working from Home - E01</title>
      <author>Dan Fleser</author>
      <pubDate>Thu, 20 Jan 2022 23:10:46 +0000</pubDate>
      <link>https://dev.to/danfleser/running-a-youtube-channel-10-ways-developers-make-money-working-from-home-e01-2h05</link>
      <guid>https://dev.to/danfleser/running-a-youtube-channel-10-ways-developers-make-money-working-from-home-e01-2h05</guid>
      <description>&lt;p&gt;I recently switched from working at a company to freelancing and had a lot of my friends asking me: how's that going.&lt;/p&gt;

&lt;p&gt;I'll tell you what I told everyone: It's going great, and I am really surprised I succeeded in this. The minimum salary I've got till now is $500/day.&lt;/p&gt;

&lt;p&gt;You have to be good in order to switch to freelancing and get to those numbers, but is not that hard, so don't overthink, just start.&lt;/p&gt;

&lt;p&gt;Because I successfully managed to convert 2 of my friend from 8â€“5 jobs to freelancing, and more of my friends want me to help them, I decided to create a video series about that later this year. It will be free on YouTube, so be sure you Subscribe here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Running A Youtube Channel - 10 Ways Developers Make Money Working from Home - E01&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/MMbp6eNk4Q8"&gt;YouTube video here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://youtu.be/MMbp6eNk4Q8"&gt;https://youtu.be/MMbp6eNk4Q8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YouTube is a great platform where you can make money by making videos on different topics or about things that you know or are passionate about.&lt;/p&gt;

&lt;p&gt;If you're a web developer and know how to educate others on how to build websites, then it's time for you to start earning money by running a Youtube Channel.&lt;/p&gt;

&lt;p&gt;The process is simple:&lt;br&gt;
Create interesting content for the viewers.&lt;br&gt;
Post your videos regularly &amp;amp; share them with your audience on social media.&lt;br&gt;
Once, you'll start getting love from the audience in the shape of subscribers, likes &amp;amp; views. You can then monetize your channel from google AdSense, bring sponsors &amp;amp; do affiliate marketing.&lt;/p&gt;

&lt;p&gt;In this video series, I share the best ways and how to increase your money income as a web developer while working from home.&lt;/p&gt;

&lt;p&gt;ðŸ‘‰ Subscribe to Dan Later - &lt;a href="https://bit.ly/31SdiZv"&gt;https://bit.ly/31SdiZv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Timeline - Running A Youtube Channel&lt;br&gt;
00:00 Intro&lt;br&gt;
00:24 Running A Youtube Channel&lt;br&gt;
00:58 Live Coding &amp;amp; Streaming&lt;br&gt;
01:21 Courses&lt;br&gt;
01:44 Digital Products&lt;br&gt;
01:57 Software-as-a-service&lt;br&gt;
02:41 Why&amp;amp;how To Blog&lt;br&gt;
03:17 Freelancing&lt;br&gt;
04:40 Working As A Professional Developer&lt;br&gt;
05:13 Mentoring&lt;br&gt;
05:18 Contributing To Open Source&lt;br&gt;
05:26 Outro&lt;/p&gt;

&lt;p&gt;Other parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Running A Youtube Channel - &lt;a href="https://youtu.be/MMbp6eNk4Q8"&gt;https://youtu.be/MMbp6eNk4Q8&lt;/a&gt;&lt;br&gt;
How did I start YouTube?&lt;br&gt;
MrBeast YouTube Growth Success&lt;br&gt;
YouTube Niches&lt;br&gt;
Recording software for YouTube videos - Obs is free&lt;br&gt;
Video editing software for YouTube videos - Davinci Resolve is Free&lt;br&gt;
Increase YouTube content engagement&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Live Coding &amp;amp; Streaming - &lt;a href="https://youtu.be/d7jczFpBKl0"&gt;https://youtu.be/d7jczFpBKl0&lt;/a&gt;&lt;br&gt;
Make money coding live&lt;br&gt;
Set goals for your audience&lt;br&gt;
Mentoring sessions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Courses - &lt;a href="https://youtu.be/zs4abEW9nNk"&gt;https://youtu.be/zs4abEW9nNk&lt;/a&gt;&lt;br&gt;
Why create a course?&lt;br&gt;
Youtube videos&lt;br&gt;
How to create a course?&lt;br&gt;
Create a course outline&lt;br&gt;
Grow an audience&lt;br&gt;
Platforms to sell a course&lt;br&gt;
Publish course to your own website&lt;br&gt;
Create your own Newsletter&lt;br&gt;
Ways to Get People to Buy Your Products&lt;br&gt;
Post-launch Discounts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Digital Products - &lt;a href="https://youtu.be/ORbLO2rjHaQ"&gt;https://youtu.be/ORbLO2rjHaQ&lt;/a&gt;&lt;br&gt;
What products to create?&lt;br&gt;
Why digital products?&lt;br&gt;
Instant access&lt;br&gt;
Where to sell?&lt;br&gt;
How to create a product?&lt;br&gt;
How to write a book Google Docs&lt;br&gt;
Create page templates/Create page themes&lt;br&gt;
What to do when you donâ€™t have ideas? - boost ideas&lt;br&gt;
Build an MVP&lt;br&gt;
Create your own Newsletter&lt;br&gt;
Growing Your Audience&lt;br&gt;
Sell anything by Creating a Bundle&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Software-as-a-service - &lt;a href="https://youtu.be/lnwifUqJ7HU"&gt;https://youtu.be/lnwifUqJ7HU&lt;/a&gt;&lt;br&gt;
What the hell is SaaS?&lt;br&gt;
How to build a SaaS?&lt;br&gt;
Ways to start&lt;br&gt;
How to deal with competitors&lt;br&gt;
Lean thinking&lt;br&gt;
Build features that people actually use&lt;br&gt;
How to Validate Feature and Product Ideas Before You Build&lt;br&gt;
Choosing the Right Tech Stack for Your Project&lt;br&gt;
Scaling tips&lt;br&gt;
Trending Tech Stack&lt;br&gt;
Choosing the Pricing model for your business&lt;br&gt;
A typical validated learning process&lt;br&gt;
Analysis Data&lt;br&gt;
What is User testing?&lt;br&gt;
What is Split testing?&lt;br&gt;
Saas Marketing Examples&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why&amp;amp;how To Blog - &lt;a href="https://youtu.be/E5XNUr04p7k"&gt;https://youtu.be/E5XNUr04p7k&lt;/a&gt;&lt;br&gt;
Why start blogging?&lt;br&gt;
Write articles&lt;br&gt;
How to increase Motivation as a Blogger&lt;br&gt;
Stop thinking and start doing&lt;br&gt;
Find your audience&lt;br&gt;
What do you need to start blogging?&lt;br&gt;
How to create a blog?&lt;br&gt;
How to grow an audience&lt;br&gt;
Create an email newsletter&lt;br&gt;
How to make money blogging?&lt;br&gt;
How to add Ads on the blog&lt;br&gt;
How to Affiliate and Market a blog?&lt;br&gt;
Make money via Sponsored posts&lt;br&gt;
How to promote services and products?&lt;br&gt;
Create content and get paid&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Freelancing - &lt;a href="https://youtu.be/JjGTrdJkiJs"&gt;https://youtu.be/JjGTrdJkiJs&lt;/a&gt;&lt;br&gt;
How to create a website&lt;br&gt;
Be Professional - Register an LLC&lt;br&gt;
Why choose Freelancing?&lt;br&gt;
How to start freelancing&lt;br&gt;
Outsourcing&lt;br&gt;
How to create a good portfolio&lt;br&gt;
What a great portfolio should contain&lt;br&gt;
How to charge for a website&lt;br&gt;
Hourly Pricing&lt;br&gt;
Project-based Pricing&lt;br&gt;
Value-based Pricing&lt;br&gt;
How to get clients?&lt;br&gt;
Tips - how to get more clients&lt;br&gt;
What are Google Ads&lt;br&gt;
Keywords to bid as a freelancer&lt;br&gt;
How to get more sales/conversions&lt;br&gt;
Linkedin Ads Tips&lt;br&gt;
Linkedin InMail Ads Tips&lt;br&gt;
Build your own website&lt;br&gt;
Freelancing platforms&lt;br&gt;
Get clients fast as a freelancer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working As A Professional Developer - &lt;a href="https://youtu.be/uJKVk7cv3Dw"&gt;https://youtu.be/uJKVk7cv3Dw&lt;/a&gt;&lt;br&gt;
Opportunities When Starting Out&lt;br&gt;
How to Prepare for a Job&lt;br&gt;
Take Online Courses?&lt;br&gt;
What College Taught Me&lt;br&gt;
How to Learn Faster&lt;br&gt;
Make Your Free Time Count&lt;br&gt;
Effective Way to Improve Your Code by Reviewing Open Source Code&lt;br&gt;
Start Creating an Mvp&lt;br&gt;
Get Others Opinions&lt;br&gt;
Find a Mentor&lt;br&gt;
Create a Portfolio&lt;br&gt;
Portfolio Website Checklist&lt;br&gt;
Think Outside the Box&lt;br&gt;
Be Professional&lt;br&gt;
Job Application Tips&lt;br&gt;
Tips for Great Job Interviews&lt;br&gt;
Make Linkedin Profile Impressive&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mentoring - &lt;a href="https://youtu.be/Ni6Jlkj4Xuo"&gt;https://youtu.be/Ni6Jlkj4Xuo&lt;/a&gt;&lt;br&gt;
Monetize tutoring&lt;br&gt;
Practice your skills&lt;br&gt;
How much to Charge for online mentoring?&lt;br&gt;
Provide value mentoring and people will come like a stream&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Contributing To Open Source - &lt;a href="https://youtu.be/qVN9FIY0j4Y"&gt;https://youtu.be/qVN9FIY0j4Y&lt;/a&gt;&lt;br&gt;
What is Open Source?&lt;br&gt;
Can you make money with Open Source?&lt;br&gt;
Github Sponsors&lt;br&gt;
How to Engage people to Finance your work?&lt;br&gt;
Start a Patreon&lt;br&gt;
Set monthly audience goals&lt;br&gt;
Benefits of Open Source as a web developer&lt;br&gt;
Create a premium version of the Open Source project&lt;br&gt;
What is Freemium software&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#programming-buildinpublic-career"&gt;
  &lt;/a&gt;
  programming #buildinpublic #career
&lt;/h1&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>leadership</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Kafka da Neden Partition OluÅŸtururuz? ðŸ’« ðŸŒŒ âœ¨</title>
      <author>GÃ¼lsen ðŸ¦‹</author>
      <pubDate>Thu, 20 Jan 2022 22:52:47 +0000</pubDate>
      <link>https://dev.to/gulsenkeskin/kafka-da-neden-partition-olustururuz-4fog</link>
      <guid>https://dev.to/gulsenkeskin/kafka-da-neden-partition-olustururuz-4fog</guid>
      <description>&lt;p&gt;&lt;strong&gt;Aggrigation yapabiliriz&lt;/strong&gt;: yani yazÄ±lan verilerin belli Ã¶zelliklere gÃ¶re toplanmasÄ±. Producer'lerin verilerinin belirlenen Ã¶zelliklerine gÃ¶re toplanmasÄ±dÄ±r.&lt;br&gt;
Verilerin sÄ±ralÄ± bir ÅŸekilde toplanmasÄ± (sorting - event sourcing)&lt;br&gt;
Daha hÄ±zlÄ± okumak (parallelism)&lt;br&gt;
Verileri daha verimli saklamak (efficiency)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Round robin:&lt;/strong&gt; Gelen mesajlarÄ± sÄ±rasÄ±yla partitionlara bÃ¶lÃ¼ÅŸtÃ¼rmek&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aggregation:&lt;/strong&gt; Ã–rneÄŸin key deÄŸerini category olarak verirsek mesajlar kategoriye gÃ¶re gruplandÄ±rÄ±lÄ±p Ã¶yle gÃ¶nderilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sorting- event sourcing:&lt;/strong&gt; Ã–rneÄŸin customerId'yi key olarak verirsek login, add to cart, purchase (giriÅŸ yap, sepete ekle, satÄ±n alma) gibi kullanÄ±cÄ±larÄ±n yaptÄ±ÄŸÄ± iÅŸlemleri arka arkaya sÄ±ralar.&lt;/p&gt;

&lt;p&gt;Bir partition olsaydÄ± okuma ve yazma performansÄ± Ã§ok kÃ¶tÃ¼ olurdu yani paralelizm yapamazdÄ±k.&lt;/p&gt;

&lt;p&gt;Bir partition'dan aynÄ± anda aynÄ± kimliÄŸe sahip sadece bir consumer okuyabilir.&lt;br&gt;
Partition kullanarak bÃ¼yÃ¼k boyutlu mesajlarÄ± istediÄŸimiz ÅŸekilde yÃ¶nlendirebiliriz.&lt;br&gt;
Mesela bÃ¼yÃ¼k mesajlarÄ± belli bir partition'a kÃ¼Ã§Ã¼k mesajlarÄ± belli bir partition'a yÃ¶nlendirebiliriz.&lt;/p&gt;

&lt;p&gt;Leader partition : her partitionun replication kopyalarÄ±ndan biri lider olarak atanÄ±r bizde bu lider partitiona yazarÄ±z. Bu yazdÄ±ÄŸÄ±mÄ±z partition da diÄŸer replication kopyalarÄ±na bu bilgiyi gÃ¶nderip senkronize eder.&lt;br&gt;
EÄŸer bir nedenden dolayÄ± lider olan partition Ã§Ã¶kerse kafka hemen yeni bir partition'u lider olarak seÃ§er.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kafkaya veri yazÄ±mÄ± Ã¼Ã§ safhadan oluÅŸur:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Kafkaya veri gÃ¶ndermek&lt;/li&gt;
&lt;li&gt;Verinin lider olan partition'a gÃ¶nderilip saklanmasÄ±&lt;/li&gt;
&lt;li&gt;Lider olan partition'un bu veriyi diÄŸer kopya olan partition'lara aktarmasÄ±&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Producer Acknowledgement:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Kafkaya veri gÃ¶nderdiÄŸimizde bu Ã¼Ã§ safhanÄ±n hangilerinin bitmesini veya tastik etmesi gerektiÄŸini belirleyebiliyoruz buna &lt;strong&gt;acknowledgement&lt;/strong&gt; deniliyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks=0&lt;/strong&gt; (en hÄ±zlÄ± ve riskli olan mesaj kaybolma ÅŸansÄ± yÃ¼ksek)&lt;br&gt;
Kafkaya gÃ¶nder ve cevabÄ± beklemeden devam et&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks=1&lt;/strong&gt; (orta derece hÄ±zlÄ± ve gÃ¼venli, Mesaj kaybolma ÅŸansÄ± Ã§ok az)&lt;br&gt;
Kafkaya gÃ¶nder ve sadece leader yazana kadar bekle&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Acks= all, -1&lt;/strong&gt; (en yavaÅŸÄ± ve en gÃ¼venlisi , mesaj kaybolma ÅŸansÄ± yok)&lt;br&gt;
Kafkaya gÃ¶nder, leader yazmasÄ±nÄ± ve leader'in diÄŸer partition'lara yazmasÄ±nÄ± bekle&lt;/p&gt;

</description>
      <category>kafka</category>
      <category>partition</category>
      <category>pubsub</category>
      <category>apache</category>
    </item>
    <item>
      <title>Understanding DNS (Domain Name Servers)</title>
      <author>Chris Benjamin</author>
      <pubDate>Thu, 20 Jan 2022 22:52:26 +0000</pubDate>
      <link>https://dev.to/chrisbenjamin/understanding-dns-domain-name-servers-34ph</link>
      <guid>https://dev.to/chrisbenjamin/understanding-dns-domain-name-servers-34ph</guid>
      <description>&lt;p&gt;Domain Name Servers (DNS) is a critical service that is part of every network and website in the world. DNS is crucial to how internet functions and allows your computer to find and access other computers and services across the world!&lt;/p&gt;

&lt;p&gt;If you have ever visited a website or sent an email, you are using DNS! In most cases, it just works!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lUm1A_kg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718584257/sIXt4A_6B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUm1A_kg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718584257/sIXt4A_6B.png" alt="boxes showing common domain name extensions like .com .org" width="640" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dns"&gt;
  &lt;/a&gt;
  What is DNS?
&lt;/h2&gt;

&lt;p&gt;DNS is like the Postal address system for the internet and local networks. For example, if you want to visit Twitter on your PC, you would type in Twitter.com in your favorite browser and will be almost instantly connected to Twitter's website. &lt;/p&gt;

&lt;p&gt;How does your computer know that when you type in Twitter.com to take you to the right computer and server out of the millions across the world? &lt;/p&gt;

&lt;p&gt;When you send emails, how does your computer know where the recipient is?  &lt;/p&gt;

&lt;p&gt;When you want to print to your wireless printer, how does your computer know where to send the print job? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The answer is DNS&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#analogy-postal-system"&gt;
  &lt;/a&gt;
  Analogy - Postal System
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uPFdDSBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718644401/7MYkjAsSX.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uPFdDSBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718644401/7MYkjAsSX.jpeg" alt="a picture of mailboxes" width="640" height="404"&gt;&lt;/a&gt;&lt;br&gt;
Imagine you are sending a letter in the mail from your house in Seattle, WA to your friend in Nashville, TN ðŸ“¬.  When you mail that letter, your letter is carried by the postman back to the mail facility, it is then sent out with the rest of the outgoing mail to a sorting facility. These letters are then sorted and transferred to the next station, this happens multiple times until your letter finally arrives at your friends city. Your letter then is handed to a mail carrier who will bring it to your house. This whole process takes a matter of days. You don't have to understand how the layers of the postal routing system work to mail your letter and you can rest assured that it will reach the right place. &lt;/p&gt;

&lt;p&gt;This same philosophy applies when you are visiting a website. You type in the name of a service you wish to visit such as Twitter.com. Your computer makes a connection behind the scenes to your Router, your Modem, then your Internet Service Provider, then a root name server to determine which server has the address information, then another request is made to the root hint server to get the actual IP address of the service. This serve has the address in the form of an IP address which is a series of numbers. &lt;/p&gt;

&lt;p&gt;At this point, DNS has finished it's job and got the final address of the destination, routing kicks in and your computer makes a connection to the IP address that it received, your computer is connected to this numerical address behind the scenes where computer will perform a Get request to the web server and request the content on that server which you will see in your browser. &lt;/p&gt;

&lt;p&gt;As an example, one of the IP addresses that resolves from Twitter.com is 104.244.42.193. Could you imagine having to memorize the IP address number for each website that you wanted to visit?  &lt;/p&gt;

&lt;p&gt;Say you wanted to go to Facebook.com but you had to know the IP of 157.240.3.35, you could open your browser and type in &lt;a href="http://157.240.3.35"&gt;http://157.240.3.35&lt;/a&gt; and it would connect you to Facebook.com (go ahead, try it!). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;Your computer makes several connections behind the scenes when you visit a website, and all of this happens almost instantly. The very first time you access a website, your computer has to load all of the content but it saves the DNS information, route information, and some of the content in various caches on your computer so that subsequent requests happen much faster.  In the below example. you can see what is called a trace report showing that there was 15 separate connections that it took to reach my website! It's incredible that all of this happens magically in the background for you. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kjbqLEfs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717778283/lnTiolF7F.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kjbqLEfs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717778283/lnTiolF7F.png" alt="MXtoolbox trace report for chrisbenjamin.dev" width="580" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#email-uses-dns"&gt;
  &lt;/a&gt;
  Email uses DNS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_y7LLDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718656849/AoAxRz94x.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_y7LLDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642718656849/AoAxRz94x.jpeg" alt="showing emails leaving a mobile device and flying into the air" width="640" height="329"&gt;&lt;/a&gt;&lt;br&gt;
Email ðŸ“§ is the electronic version of a letter that we use to mail. Thankfully this service also uses DNS to route your email and ensure that it ends up in the right mailbox. It takes a similar journey as your physical mailed letter.  Have you ever sent an email and received back a Postmaster rejection error that your email wasn't delivered? That's the same as getting a returned letter in the mail. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#business-networks-use-dns"&gt;
  &lt;/a&gt;
  Business Networks use DNS
&lt;/h3&gt;

&lt;p&gt;All business networks use DNS the same way that the internet does for finding information. For example. if your company has a central file storage where you may save or access information. Your computer uses DNS to find the server that has the requested information and then connects your computer to that server or resource and provides the information. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dns-inventor"&gt;
  &lt;/a&gt;
  DNS Inventor
&lt;/h3&gt;

&lt;p&gt;We can thank Paul Mockapetris (@svnr2000) for the invention of DNS and the fact that we don't have to remember these IP addresses to visit the websites that services that we use every day. Source: &lt;a href="https://internethalloffame.org/inductees/paul-mockapetris"&gt;Internet Hall Of Fame&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dns-record-types"&gt;
  &lt;/a&gt;
  DNS Record Types
&lt;/h3&gt;

&lt;p&gt;DNS also handles the routing for everything with the domain name using different types of records. Every domain has DNS settings, which is how root hint servers get their information for your website. These settings can route your website, your email, sub-domains, and multiple other services. Some of the most common ones are listed below along with the services that they are used for. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A Record&lt;/strong&gt; - This is used to tell DNS root servers the IP address for your domain. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;C Name Record&lt;/strong&gt; - This is used for subdomains. Say you own example.com but you also want to have blog.example.com. the "blog" portion of this address is a CName record which can point this part of the website to a different IP address in the event your blog is hosted somewhere other than your website. I use this for my own domain (chrisbenjamin.dev and blog.chrisbenjamin.dev) &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MX Record&lt;/strong&gt; - This is used for mail routing. When someone sends you an email to your domain such as (&lt;a href="mailto:user@example.com"&gt;user@example.com&lt;/a&gt;) then DNS is used by the email servers to determine where to send that email&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TXT Record&lt;/strong&gt; - Text record, typically used for administrative notes, validation, or other security features for the domain. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;NS Record&lt;/strong&gt; - Name Server Record lets DNS servers know which server is responsible for resolving records on your domain name. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#testing-dns"&gt;
  &lt;/a&gt;
  Testing DNS
&lt;/h3&gt;

&lt;p&gt;You can check out DNS information for any website, it's all publicly accessible information. You can use built in tools on your computer such as &lt;strong&gt;nslookup&lt;/strong&gt; to find information from a command line, but if you prefer the graphical approach then my recommendation is MXToolbox SuperTool available &lt;a href="https://mxtoolbox.com/supertool.aspx"&gt;here&lt;/a&gt;. You can use the drop down to search through all available records for a domain and see what you can learn! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NSLookup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4m7SjW1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717232953/4qqENNvuB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4m7SjW1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717232953/4qqENNvuB.png" alt="windows command prompt showing the command line version of nslookup and resolving twitter.com and facebook.com" width="428" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MXToolBox&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zqDgp_2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716811742/vc4C-ROcs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqDgp_2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642716811742/vc4C-ROcs.png" alt="Showing the mxtoolbox website resolving DNS records for chrisbenjamin.dev" width="740" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changing-dns-records"&gt;
  &lt;/a&gt;
  Changing DNS Records
&lt;/h3&gt;

&lt;p&gt;When a DNS record is changed, such as moving your website from one hosting provider to another, or simply adding a new C Name record for your blog site. These changes go through a process called propagation. During this time, many DNS root servers will still be pointing to old records because of DNS caching, or may not have the record yet. This process can take up to 72 hours to propagate around the whole world so it's important to plan your changes wisely. Some servers will pick up the change as soon as 5 minutes, while others will take several hours. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dns-problems"&gt;
  &lt;/a&gt;
  DNS Problems
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fclDquEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717934013/zYzyZHitO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fclDquEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642717934013/zYzyZHitO.png" alt="A meme about dns, &amp;quot;it's not dns&amp;quot;, &amp;quot;there's no way it's dns&amp;quot;, &amp;quot;it was dns&amp;quot;" width="500" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When DNS problems occur, there is usually a failure along one of the many paths that the computer uses to resolve the domain name. When troubleshooting DNS it's best to follow the chain and see where the problem occurs. There are numerous errors caused by DNS since it's the heart of almost all network communication between computers and servers around the world. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;My goal was for you to learn at least one thing new in this article regarding DNS. This article has covered some of the basics of what DNS is, why it's important, the basic principals of how it works, and how to check DNS records yourself.  If you are a web developer, spend some time familiarizing yourself with DNS if you are not conformable with it, it will be important when it comes time to deploying your website on the internet. &lt;/p&gt;

&lt;p&gt;Iâ€™m on @buymeacoffee. If you like my work, you can buy me a taco and share your thoughts ðŸŽ‰ðŸŒ®&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/ChrisBenjamin"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Kafkadan veriler nasÄ±l okunur? ðŸ’« ðŸŒŒ âœ¨</title>
      <author>GÃ¼lsen ðŸ¦‹</author>
      <pubDate>Thu, 20 Jan 2022 22:35:51 +0000</pubDate>
      <link>https://dev.to/gulsenkeskin/kafkadan-veriler-nasil-okunur-29ja</link>
      <guid>https://dev.to/gulsenkeskin/kafkadan-veriler-nasil-okunur-29ja</guid>
      <description>&lt;p&gt;Hangi ofsetten okunmaya baÅŸlanacaÄŸÄ± kafka'nÄ±n ilk belirlediÄŸi ÅŸeydir. &lt;br&gt;
Bu okuyucumuz eÄŸer daha Ã¶nce okumuÅŸ ve okumasÄ± yarÄ±m kalmÄ±ÅŸsa  zaten zookeeper iÃ§erisinde kaldÄ±ÄŸÄ± ofset pozisyonu belirlidir. Oradan okumaya devam eder.&lt;/p&gt;

&lt;p&gt;Okuyucumuz yeni ise en baÅŸtan ofset 0 dan okumaya baÅŸlar&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Event oku (ofset 0)
2. Ä°ÅŸlemi yap
3. Commit et (ofset 0)
4. Bir sonraki okunacak offset 1 oluyor.
5. Event oku (ofset 1)
6. Commit et (ofset 1)
7. Bir sonraki okunacak offset 2 oluyor.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#kafkadan-veri-okuma-se%C3%A7enekleri"&gt;
  &lt;/a&gt;
  Kafkadan veri okuma seÃ§enekleri:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;At most once:&lt;/strong&gt; En fazla bir kere&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At least once:&lt;/strong&gt; En az bir kere, en Ã§ok kullanÄ±lan yÃ¶ntem&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exactly once:&lt;/strong&gt; Tam bir kere ,  performansa bÃ¼yÃ¼k etkisi olur&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Consumer groups:&lt;/strong&gt; Consumerlar yani okuyucular her zaman bir consumer grup'a baÄŸlÄ±dÄ±r.&lt;br&gt;
BÃ¶ylelikle kafka hangi okuyucu olduÄŸunu bilir ve ofset pozisyonunu ona gÃ¶re belirler.&lt;/p&gt;

</description>
      <category>kafka</category>
      <category>apache</category>
      <category>consumer</category>
      <category>zookeeper</category>
    </item>
    <item>
      <title>Selenium WebDriver GiriÅŸ ðŸ’« ðŸŒŒ âœ¨</title>
      <author>GÃ¼lsen ðŸ¦‹</author>
      <pubDate>Thu, 20 Jan 2022 22:24:15 +0000</pubDate>
      <link>https://dev.to/gulsenkeskin/selenium-webdriver-giris-40ja</link>
      <guid>https://dev.to/gulsenkeskin/selenium-webdriver-giris-40ja</guid>
      <description>&lt;h2&gt;
  &lt;a href="#web-driver-web-s%C3%BCr%C3%BCc%C3%BCs%C3%BC"&gt;
  &lt;/a&gt;
  Web Driver (Web SÃ¼rÃ¼cÃ¼sÃ¼)
&lt;/h2&gt;

&lt;p&gt;WebDriver, bir kullanÄ±cÄ±nÄ±n yerel olarak veya Selenium sunucusunu kullanan uzak bir makinede yapacaÄŸÄ± gibi bir tarayÄ±cÄ±yÄ± yerel olarak Ã§alÄ±ÅŸtÄ±rÄ±r.&lt;/p&gt;

&lt;p&gt;â€¢ WebDriver, basit ve daha Ã¶zlÃ¼ bir programlama arayÃ¼zÃ¼ olarak tasarlanmÄ±ÅŸtÄ±r.&lt;/p&gt;

&lt;p&gt;â€¢ WebDriver, kompakt bir nesne yÃ¶nelimli API'dir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ba%C5%9Flarken"&gt;
  &lt;/a&gt;
  BaÅŸlarken
&lt;/h2&gt;

&lt;p&gt;Selenium, WebDriver'Ä± kullanarak piyasadaki tÃ¼m bÃ¼yÃ¼k tarayÄ±cÄ±larÄ±n otomasyonunu destekler. WebDriver, web tarayÄ±cÄ±larÄ±nÄ±n davranÄ±ÅŸÄ±nÄ± kontrol etmek iÃ§in dilden baÄŸÄ±msÄ±z bir ara yÃ¼z tanÄ±mlayan bir API ve protokoldÃ¼r. Her tarayÄ±cÄ±, sÃ¼rÃ¼cÃ¼ adÄ± verilen belirli bir WebDriver uygulamasÄ± tarafÄ±ndan desteklenir. SÃ¼rÃ¼cÃ¼, tarayÄ±cÄ±ya yetki vermekten sorumlu bileÅŸendir ve Selenium ile tarayÄ±cÄ± arasÄ±ndaki iletiÅŸimi yÃ¶netir.&lt;/p&gt;

&lt;p&gt;Selenium kurulumu, diÄŸer ticari araÃ§larÄ±n kurulumundan oldukÃ§a farklÄ±dÄ±r. Selenium'u otomasyon projenizde kullanmak iÃ§in, seÃ§tiÄŸiniz dil iÃ§in o dilin kitaplÄ±klarÄ±nÄ± yÃ¼klemeniz gerekir. Ek olarak, otomatikleÅŸtirmek ve Ã¼zerinde test Ã§alÄ±ÅŸtÄ±rmak istediÄŸiniz tarayÄ±cÄ±lar iÃ§in WebDriver ikili dosyalarÄ±na ihtiyacÄ±nÄ±z olacak.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selenium-kurulumu-%C3%BC%C3%A7-ad%C4%B1ma-ayr%C4%B1labilir"&gt;
  &lt;/a&gt;
  Selenium kurulumu Ã¼Ã§ adÄ±ma ayrÄ±labilir:
&lt;/h2&gt;

&lt;p&gt;â€¢ Ä°stediÄŸiniz programlama dili iÃ§in Selenium kitaplÄ±ÄŸÄ±nÄ± yÃ¼kleyin&lt;br&gt;
â€¢ TarayÄ±cÄ±nÄ±zÄ± otomatikleÅŸtirmek iÃ§in tarayÄ±cÄ± sÃ¼rÃ¼cÃ¼sÃ¼nÃ¼ ayarlayÄ±n (Ã¶rn. Firefox iÃ§in GeckoDriver)&lt;br&gt;
â€¢ (Ä°steÄŸe baÄŸlÄ±) Testlerinizi bÃ¼yÃ¼tmek istiyorsanÄ±z Selenium Grid'i kurun ve yapÄ±landÄ±rÄ±n&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bile%C5%9Fenleri-anlama"&gt;
  &lt;/a&gt;
  BileÅŸenleri anlama:
&lt;/h2&gt;

&lt;p&gt;WebDriver kullanarak bir test takÄ±mÄ± oluÅŸturmak, bir dizi farklÄ± bileÅŸeni anlamanÄ±zÄ± ve etkili bir ÅŸekilde kullanmanÄ±zÄ± gerektirir. YazÄ±lÄ±mdaki her ÅŸeyde olduÄŸu gibi, farklÄ± insanlar aynÄ± fikir iÃ§in farklÄ± terimler kullanÄ±r. AÅŸaÄŸÄ±da, bu aÃ§Ä±klamada terimlerin nasÄ±l kullanÄ±ldÄ±ÄŸÄ±nÄ±n bir dÃ¶kÃ¼mÃ¼ bulunmaktadÄ±r.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terminoloji"&gt;
  &lt;/a&gt;
  terminoloji:
&lt;/h2&gt;

&lt;p&gt;â€¢API: Uygulama Programlama ArayÃ¼zÃ¼. Bu, WebDriver'Ä± deÄŸiÅŸtirmek iÃ§in kullandÄ±ÄŸÄ±nÄ±z "komutlar" kÃ¼mesidir.&lt;/p&gt;

&lt;p&gt;â€¢Library (KÃ¼tÃ¼phane): API'leri ve bunlarÄ± uygulamak iÃ§in gerekli kodu iÃ§eren bir kod modÃ¼lÃ¼.&lt;br&gt;
KitaplÄ±klar her dile Ã¶zeldir, Ã¶rneÄŸin Java iÃ§in .jar dosyalarÄ±, .NET iÃ§in .dll dosyalarÄ± vb.&lt;/p&gt;

&lt;p&gt;â€¢Driver (SÃ¼rÃ¼cÃ¼): GerÃ§ek tarayÄ±cÄ±nÄ±n kontrolÃ¼nden sorumludur. SÃ¼rÃ¼cÃ¼ler genellikle, test paketini yÃ¼rÃ¼ten sistemde deÄŸil, tarayÄ±cÄ±nÄ±n kendisiyle birlikte sistemde Ã§alÄ±ÅŸan yÃ¼rÃ¼tÃ¼lebilir modÃ¼llerdir. (Bunlar aynÄ± sistem olabilir.) NOT: BazÄ± kiÅŸiler sÃ¼rÃ¼cÃ¼lerden proxy olarak bahseder.&lt;/p&gt;

&lt;p&gt;â€¢Framework (Ã‡erÃ§eve): WebDriver paketleri iÃ§in destek olarak kullanÄ±lan ek bir kitaplÄ±k. Bu Ã§erÃ§eveler, JUnit veya NUnit gibi test Ã§erÃ§eveleri olabilir. Cucumber veya Robotium gibi doÄŸal dil Ã¶zelliklerini destekleyen Ã§erÃ§eveler de olabilirler. Ã‡erÃ§eveler ayrÄ±ca test edilen sistemi manipÃ¼le etme veya yapÄ±landÄ±rma, veri oluÅŸturma, test kahinleri vb. gibi ÅŸeyler iÃ§in de yazÄ±labilir ve kullanÄ±labilir.&lt;/p&gt;

&lt;p&gt;WebDriver bir sÃ¼rÃ¼cÃ¼ aracÄ±lÄ±ÄŸÄ±yla bir tarayÄ±cÄ±yla konuÅŸur. Ä°letiÅŸim iki yÃ¶nlÃ¼dÃ¼r: WebDriver, komutlarÄ± sÃ¼rÃ¼cÃ¼ aracÄ±lÄ±ÄŸÄ±yla tarayÄ±cÄ±ya iletir ve bilgileri aynÄ± yoldan geri alÄ±r.&lt;/p&gt;

</description>
      <category>selenium</category>
      <category>webdriver</category>
      <category>testing</category>
      <category>testdev</category>
    </item>
    <item>
      <title>6 examples of Bias for action for Software Engineers</title>
      <author>Kevin Peters</author>
      <pubDate>Thu, 20 Jan 2022 22:14:39 +0000</pubDate>
      <link>https://dev.to/getworkrecognized/6-examples-of-bias-for-action-for-software-engineers-158e</link>
      <guid>https://dev.to/getworkrecognized/6-examples-of-bias-for-action-for-software-engineers-158e</guid>
      <description>&lt;p&gt;Bias for action is a principle that appears in many leadership principle lists of companies, like Amazon. Let us explore what it means and how software engineers apply this principle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-bias-for-action"&gt;
  &lt;/a&gt;
  What is Bias for action?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;In business, time is money. Many judgments and acts can be reversed and do not need in-depth research. Risk-taking is something that is appreciated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As software engineers, we have to take risks, decisions and need to judge decisions all the time. This depends of course on seniority and your current level, but in any job as a software engineer - even if you do not work at Amazon - you will show this principle.&lt;/p&gt;

&lt;p&gt;The principle can also be described as a calculated risk. Not every decision will be the right one but with a bit of data, you can measure the risk of each option for doing a specific task. If the risk is acceptable you should be open to taking any path that leads to completion of the task, ideally with the lowest friction. If it was wrong, then change.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ooM7uLiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9gripjcgj0w24q8gxpk.gif" alt="A simple way to your promotion" width="800" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The characteristics making out a person that fits this leadership principle are consisting of different things. For once, we have the doer. When considering "Bias for action" people that are not scared of doing mistakes will show this leadership principle more. They are willing to do certain things without overthinking. They take the risks required which other people might not take. Additionally, they will also have the courage to own the outcome when taking an action. If the action might lead to failure, they are there to fix it, iterate, improve and maybe iterate based on the action. True ownership.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-companies-use-bias-for-action"&gt;
  &lt;/a&gt;
  Which companies use Bias for action?
&lt;/h2&gt;

&lt;p&gt;Next to Amazon there is GitHub who is uses a similar principle called "Ship to learn". It is similar to the details of "Bias for Action" by Amazon. So here is a short list with all the companies using this principle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/amazon-2020"&gt;Amazon: Bias For action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/github-2020"&gt;GitHub: Ship to Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer"&gt;And others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a lot more companies adapting leadership principles "Bias for action" will become more important. Companies also get more technical and analyze the impact they have, making sure that you can pivot from your initial decision if it does not work out. So let us check what software engineers can do in detail to show this leadership principle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#situations-for-bias-for-action"&gt;
  &lt;/a&gt;
  Situations for Bias for action
&lt;/h2&gt;

&lt;p&gt;As a software engineer, you might ask yourself initially where you show bias for action. It is really difficult when you think about it but there are a lot of opportunities and day-to-day activities where you show this principle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#during-arguments"&gt;
  &lt;/a&gt;
  During arguments
&lt;/h3&gt;

&lt;p&gt;A situation where it is quite common to use "Bias for action" is in discussions with the team. It could be any discussion on how to implement a specific feature. Or talking about a past decision on what went wrong. Often, participants in the discussion do not focus on the actions they can take from the discussion but because they like to discuss. In these situations, the leadership principle can be applied. Disagreeing and focusing on actually taking an action, even if you do not agree with it necessarily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decisioning-process"&gt;
  &lt;/a&gt;
  Decisioning Process
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--plkegc9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/204j7hpe3otxloei7xvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--plkegc9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/204j7hpe3otxloei7xvv.png" alt="A group of people deciding for a feature" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in the last chapter, most decision processes will be decided based upon discussions. In any way, as software engineers, we will also have the ability to make decisions ourselves. Especially because as a software engineer you will most likely have access to the data to make the decisions. If you know in a meeting that a discussion might help to take any action, but to take a really good decision it will take a bit more time to gather data, delay the decision. The action will be to get more data to make sure whatever action you will take, will make the whole process a success for your customer. To the person or organization, you are writing software for. Push for this principle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#helping-people-to-make-decisions"&gt;
  &lt;/a&gt;
  Helping people to make decisions
&lt;/h3&gt;

&lt;p&gt;When you think about discussions, you mostly think about yourself and how you interact in the discussion. But it is also important to put yourself into the other participants' perspective. If you understand the other person and make sure their voice, their concerns, and their decisions are well respected, it is the first step to making good decisions. You can help to convince them of your ideas by giving them a little nudge, to rethink approaches. For example, this works well with gathering data on the problem and presenting it to them. It might make them rethink their decision and take action instead of just arguing with the team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-measure-bias-for-action"&gt;
  &lt;/a&gt;
  How do you measure Bias for action?
&lt;/h2&gt;

&lt;p&gt;If you read this article you probably want to know what you have done which relates to this principle. But first, let us check how we can measure Bias for action. It is probably one of the leadership principles that is the most difficult to track. But what you can do is &lt;a href="https://getworkrecognized.com/blog/3-brag-document-templates-google-docs"&gt;create a brag document&lt;/a&gt; every week or month and write down the situations when you took a risk rather than waiting out on deciding something. The more detailed timeline you have of the discussion and decision processes the easier it will get for you to summarize where you acted based on this principle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lQyouyIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1p8efiertt9hvn3cbec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lQyouyIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1p8efiertt9hvn3cbec.png" alt="Writing a brag document" width="880" height="371"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Another good tip is to keep a brag document with getworkrecognized and keep records of when you showed a bias for action so you can reference it in the future. With getworkrecgonized, you can keep a diary of all your achievements at work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-of-how-to-apply-bias-for-action"&gt;
  &lt;/a&gt;
  Examples of how to apply Bias for action
&lt;/h2&gt;

&lt;p&gt;Programmers show bias for action most of the time by default. But pinpointing specific examples in your career is always feeling difficult. In the following section, we list some examples where bias for action can be shown.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solutions"&gt;
  &lt;/a&gt;
  Solutions
&lt;/h3&gt;

&lt;p&gt;Coming up with a solution to solve a problem can be applied to many problems. It can be a technical problem but also a team problem, but we will discover them later in this chapter. In general, solutions should be built minimal. When a problem arises try to focus on thinking of an MVP - a minimum viable product. So to say. A better term would be probably a minimum viable solution that fixes the problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#feature-discussions"&gt;
  &lt;/a&gt;
  Feature Discussions
&lt;/h3&gt;

&lt;p&gt;Discussions about product features are probably the most common one for software engineers to be involved in. For example, it could be a simple discussion of which user interface is better and should be chosen for the next feature. A lot of preferences come into play here like personal experience with UI and experiences at your old company how they have done things. Most of the time an A/B test can help with actually choosing the right UI. Instead of arguing which UI is better, focus on actually choosing a metric that will help you to see which is the better UI.&lt;/p&gt;

&lt;p&gt;Another example is purely technical feature discussions. For example, like choosing the right database type for your new application or service. For such decisions, the principle "Bias for action" might not be applied because database migrations are difficult to do in the long term. So you should be still open to listening to other people's opinions but decide on the best long-term solution. Be careful of the risks of your decisions. Note them down.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ooM7uLiu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9gripjcgj0w24q8gxpk.gif" alt="A simple way to your promotion" width="800" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A different situation can occur during sprint planning with your team. Which feature should you focus on? Normally sprints are taking 2 weeks and there is a goal for the sprint to achieve. People hesitate about what to choose normally and what has the highest impact. Gather data on the impact and effort to finish the different projects, which are also called epics in some companies. With that, you can measure the risk of actually delivering a feature within a sprint and measure the outcome.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#team-issues"&gt;
  &lt;/a&gt;
  Team Issues
&lt;/h3&gt;

&lt;p&gt;Most modern and agile teams follow some sort of sprints. What most of the sprints have in common is a retrospective at the end of each cycle of the sprint. During this meeting, the participants discuss the last cycle and what can be done better. But more importantly, they discuss concrete actions that can improve the team's health and performance. The focus should be on actions rather than discussing the issues. Sometimes though, discussing the issue will clear up specific arguments, so feel free to discuss from time to time, but push the participants of the meeting to take action and remind them that sometimes it is ok to disagree if you have any action and can measure the success in future retros. Especially if the issue is not critical to running your current team's processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mentoring"&gt;
  &lt;/a&gt;
  Mentoring
&lt;/h3&gt;

&lt;p&gt;An engineer will have many opportunities to mentor other employees in the company. More junior people need a helping hand from time to time with easy but also difficult problems. More senior people need guidance on how to navigate the product the best, how to contribute, and what are core parts of the code are.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEDjWG4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7giy2utk4ch5i5gzq69f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEDjWG4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7giy2utk4ch5i5gzq69f.png" alt="A person teaching a group of other people" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During mentoring it is important that you can tell the other person that you do not know everything and if you get into a situation where you do not have an answer to a question, you can simply answer you do not know. But it is important to also give them the feeling that if they fail with their actions, failures are appreciated because you can learn from them. This is the most important part. Push them for a decision soon and let them reevaluate if it does not work out. An important part though is to encourage them to also gather some data around their issue, and see if what they thought is right, is working out.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meetings"&gt;
  &lt;/a&gt;
  Meetings
&lt;/h3&gt;

&lt;p&gt;The principle can be also shown in meetings. As we learned in the discussions chapter before it is important to take action from a meeting. What you can do to push this action-taking and make it quicker is to just research some data regarding the meeting before the actual meeting. Take 30-60 minutes the next time before a meeting and gather data around the issues that will appear. It will help to drive your meeting forward. And even if the meeting does not go in the direction of actions, take an action to gather data around the issue to see if there is any impact. We also wrote &lt;a href="https://getworkrecognized.com/blog/structured-meetings-get-you-promoted"&gt;another article&lt;/a&gt; on how to structure your meetings.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h3&gt;

&lt;p&gt;Writing documentation comes short most of the time for developers. A problem that many software engineers have is that they can't put themself into another perspective. So the reader of the documentation will suffer. It is good to create some personas for your documentation and then write the documentation.&lt;/p&gt;

&lt;p&gt;It's important to roll out this documentation quickly and gather feedback. Most of the time some documentation is better than none. Take action and write that piece of documentation everyone is needing. For internal customers or external customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Bias for action is a weird leadership principle. It is not clear immediately how this principle is actually manifested in your work and especially in interviews at Amazon, it might be weird to answer this question. Find one of the examples above in your work and prepare them for the interview. And feel free to track your work with getworkrecognized. It will help you to figure out your actions towards "Bias for action".&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
    </item>
    <item>
      <title>Just posted my website!!!!</title>
      <author>Boolean</author>
      <pubDate>Thu, 20 Jan 2022 22:02:57 +0000</pubDate>
      <link>https://dev.to/lincjones/just-posted-my-website-5a07</link>
      <guid>https://dev.to/lincjones/just-posted-my-website-5a07</guid>
      <description>&lt;p&gt;I posted it on lincjones.github.io!!!!! I made it with Html, CSS, JavaScript, and Bootstrap. I am considering buying a domain name.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>css</category>
    </item>
    <item>
      <title>Intersection Observer API</title>
      <author>Sanjeev Yogi</author>
      <pubDate>Thu, 20 Jan 2022 21:51:42 +0000</pubDate>
      <link>https://dev.to/syogifse/intersection-observer-api-3nbn</link>
      <guid>https://dev.to/syogifse/intersection-observer-api-3nbn</guid>
      <description>&lt;p&gt;The Intersection Observer API is the browser API that provides an easy way to asynchronously observe the visibility and position of the target element relative to the top-level viewport or the containing root element. Before the introduction of Intersection Observer API, performing such tasks was difficult.&lt;br&gt;
It has several use cases. Some examples among many are lazy-loading of images, infinite scrolling, and animations based on the relative position of elements. The CodePen demo below is the illustration of one such use. CodePen Demo is further explained in the latter part of the blog.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ygsjv/embed/oNGREeR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#terminologies"&gt;
  &lt;/a&gt;
  Terminologies
&lt;/h2&gt;

&lt;p&gt;To better understand the Intersection Observer API, we need to be familiar with some of the terminologies used to construct and control the intersection observer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Root (root)&lt;/strong&gt;&lt;br&gt;
The root is the element that serves as a viewport to check the visibility of the target element. It must be the ancestor of the target. If unspecified or null, it defaults to the browser viewport.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Root Margin (rootMargin)&lt;/strong&gt;&lt;br&gt;
It is similar to the CSS margin which serves to grow or shrink the viewport from the top, bottom, left, and right. It can be expressed in pixel and percentage. If unspecified, it defaults to zero.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intersection Ratio (intersectionRatio)&lt;/strong&gt;&lt;br&gt;
The degree of intersection between the target element and its root is called the intersection ratio. It is represented as a percentage and has a value between 0.0 to 1.0.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Threshold (threshold)&lt;/strong&gt;&lt;br&gt;
Threshold is responsible for running the callback function that is passed into the constructor of the intersection observer. Threshold can have a single number or can have an array of numbers to run the callback function. For example, to run the callback function when the visibility of target element inside viewport passes the 30% mark, the value of the threshold is set at 0.3. Similarly, to run a callback function every time the visibility passes 25%, the threshold is set as array [0, 0.25, 0.5, 0.75, 1]. The default, 0 triggers callback function as soon as one pixel is visible in the viewport while the maximum value, 1 means the threshold is not considered passed until every pixel of the target element is visible inside the viewport.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-intersection-observer"&gt;
  &lt;/a&gt;
  Creating an Intersection Observer
&lt;/h2&gt;

&lt;p&gt;The intersection observer can be created by calling its constructor and passing the callback function and options object. The callback function handles the intersection of the root element and target element while the options object controls all the circumstances at which the callback function is invoked. It has root, rootMargin, and threshold as keys with their respective values.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let options = {&lt;br&gt;
Â     root: document.querySelector('#scrollArea'),&lt;br&gt;
Â     rootMargin: '0px',&lt;br&gt;
Â     threshold: 1.0&lt;br&gt;
}&lt;/code&gt;&lt;br&gt;
&lt;code&gt;let observer = new IntersectionObserver(callback, options);&lt;/code&gt;&lt;br&gt;
&lt;code&gt;let callback = (entries, observer) =&amp;gt; {&lt;br&gt;
Â     entries.forEach(entry =&amp;gt; {&lt;br&gt;
Â     //do something&lt;br&gt;
Â });&lt;br&gt;
};&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The callback function takes entries and observer as the parameters. "Entries" lists one entry for each target element and represents them as an array. On the other hand, the intersection observer object observes and reports the intersection position of the target elements. Each entry is an instance of IntersectionObserverEntry. IntersectionObserverEntry is an interface of the Intersection Observer API and it describes the intersection between the target element and its root container at a specific moment of transition. It has several useful properties which are briefly discussed below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;boundingClientRect&lt;/em&gt;&lt;/strong&gt;, information about the size of an element and its position relative to the viewport.Â &lt;br&gt;
&lt;strong&gt;&lt;em&gt;intersectionRect&lt;/em&gt;&lt;/strong&gt;, the target visible area.&lt;br&gt;
&lt;strong&gt;&lt;em&gt;isIntersecting&lt;/em&gt;&lt;/strong&gt;, if the target element intersects with the root container.Â &lt;br&gt;
&lt;strong&gt;&lt;em&gt;intersectionRatio&lt;/em&gt;&lt;/strong&gt;, the ratio of intersectionRect to the boundingClientRect.&lt;br&gt;
&lt;strong&gt;&lt;em&gt;rootBound&lt;/em&gt;&lt;/strong&gt;, position and size of the intersection root.&lt;/p&gt;

&lt;p&gt;The target element needs to be selected and observed to report its intersection position.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let target = document.querySelector('#listItem');&lt;br&gt;
observer.observe(target);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To stop observing the target, we can simply use&lt;br&gt;
&lt;code&gt;observer.unobserve(target);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The CodePen demo above utilizes the intersection observer to change the color of the circle by scrolling. The color-changing function and procedure of the circle are controlled by the values of the root, rootMargin, and threshold in the options object. It has three sections. The target element is the middle section with a light green background. The top and bottom sections have light blue backgrounds. The root has the value of null. Thus, the root is the browser viewport. Margin is 0px and threshold is 0 as well. Since, the threshold is 0, as soon as the green background appears in the viewport, the callback function is invoked and the color of the circle changes to green from blue. The color of the circle changesÂ &lt;br&gt;
back to blue once the green background disappears from the viewport.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Intersection Observer API is a powerful tool that can be used to our advantage in several ways in web development. It observes the intersection between the root and target element. The root can be the parent of the target element or the browser viewport. The size of the root can be adjusted using rootMargin. The root has a callback function which is executed when the root crosses the threshold value. Though intersection Observer API observes the target asynchronously, the callback functions are executed synchronously. Lastly, if needed, we can stop observing the target.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Building UIs in Figma with hand movements</title>
      <author>Charlie Gerard</author>
      <pubDate>Thu, 20 Jan 2022 20:44:59 +0000</pubDate>
      <link>https://dev.to/devdevcharlie/building-uis-in-figma-with-hand-movements-3pi4</link>
      <guid>https://dev.to/devdevcharlie/building-uis-in-figma-with-hand-movements-3pi4</guid>
      <description>&lt;p&gt;&lt;em&gt;Post originally shared on my &lt;a href="https://charliegerard.dev"&gt;blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since the release of the latest version of the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/hand-pose-detection"&gt;MediaPipe handpose detection&lt;/a&gt; machine learning model that allows the detection of multiple hands, I've had in mind to try to use it to create UIs, and here's the result of a quick prototype built in a few hours!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/AzV2ngmbiBw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before starting this, I also came across 2 projects mixing TensorFlow.js and Figma, one by &lt;a href="https://twitter.com/adispezio/status/1440153362872221701"&gt;Anthony DiSpezio to turn gestures into emojis&lt;/a&gt; and one by &lt;a href="https://twitter.com/sidahuj/status/1440705845973512195"&gt;Siddharth Ahuja to move Figma's canvas with hand gestures&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I had never made a Figma plugin before but decided to look into it to see if I could build one to design UIs using hand movements.&lt;/p&gt;

&lt;p&gt;The first thing to know is that you can't test your plugins in the web version so you need to install the Desktop version while you're developing.&lt;/p&gt;

&lt;p&gt;Then, even though you have access to some Web APIs in a plugin, access to the camera and microphone isn't allowed, for security reasons, so I had to figure out how to send the hand data to the plugin.&lt;/p&gt;

&lt;p&gt;The way I went about it is using &lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt; to run a separate web app that handles the hand detection and send specific events to my Figma plugin via websockets.&lt;/p&gt;

&lt;p&gt;Here's a quick visualization of the architecture:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nkFkQYe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9wprstm7yfx9esybjgo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nkFkQYe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o9wprstm7yfx9esybjgo.png" alt="A web app is running the hand detection with TensorFlow.js, sends events such as pinch or zoom to the express server with socket.io running on port 8080. The Figma plugin is listening on the same port to the zoom event and when received, triggers different actions in the Figma UI." width="880" height="615"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gesture-detection-with-tensorflowjs"&gt;
  &lt;/a&gt;
  Gesture detection with TensorFlow.js
&lt;/h2&gt;

&lt;p&gt;In my separate web app, I am running &lt;a href="https://www.tensorflow.org/js"&gt;TensorFlow.js&lt;/a&gt; and the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/hand-pose-detection"&gt;hand pose detection model&lt;/a&gt; to get the coordinates of my hands and fingers on the screen and create some custom gestures.&lt;/p&gt;

&lt;p&gt;Without going into too much details, here's a code sample for the "zoom" gesture:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;leftThumbTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightThumbTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftIndexTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightIndexTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hands&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;hands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handedness&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Left&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="c1"&gt;// DETECT PALM&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;leftIndexTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;leftRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;leftRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmLeft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="c1"&gt;// DETECT PALM&lt;/span&gt;
        &lt;span class="c1"&gt;//---------------&lt;/span&gt;
        &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_tip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keypoints&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ring_finger_dip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;rightIndexTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightIndexFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightMiddleFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
          &lt;span class="nx"&gt;rightRingFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;rightRingFingerDip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;palmRight&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;palmLeft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// zoom&lt;/span&gt;
          &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;rightMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;leftMiddleFingerTip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code looks a bit messy but that's intended. The goal was to validate the hypothesis that this solution would work before spending some time improving it.&lt;/p&gt;

&lt;p&gt;What I did in this sample was checking that the y coordinate of the tips of my index, middle finger and ring finger was smaller than the y coordinate of their dip cause it would mean my fingers are straight so I'm doing some kind of "palm" gesture.&lt;br&gt;
Once it is detected, I'm emitting a "zoom" event and sending the difference in x coordinate between my right middle finger and left middle finger to represent some kind of width.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#express-server-with-socketio"&gt;
  &lt;/a&gt;
  Express server with socket.io
&lt;/h2&gt;

&lt;p&gt;The server side uses &lt;code&gt;express&lt;/code&gt; to serve my front-end files and &lt;code&gt;socket.io&lt;/code&gt; to receive and emit messages.&lt;/p&gt;

&lt;p&gt;Here's a code sample of the server listening for the &lt;code&gt;zoom&lt;/code&gt; event and emitting it to other applications.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Server&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;socket.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;connection&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a user connected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;listening on *:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#figma-plugin"&gt;
  &lt;/a&gt;
  Figma plugin
&lt;/h2&gt;

&lt;p&gt;On the Figma side, there's two parts. A &lt;code&gt;ui.html&lt;/code&gt; file is usually responsible for showing the UI of the plugin and a &lt;code&gt;code.js&lt;/code&gt; file is reponsible for the logic.&lt;br&gt;
My html file starts the socket connection by listening to the same port as the one used in my Express server and sends the events to my JavaScript file.&lt;/p&gt;

&lt;p&gt;For example, here's a sample to implement the "Zoom" functionality:&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;ui.html&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.1/socket.io.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ws://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;transports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;websocket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="c1"&gt;// Zoom zoom&lt;/span&gt;
  &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pluginMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;code&gt;code.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showUI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__html__&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Messages sent from ui.html&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;zoom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;normalizedZoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;figma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;viewport&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;normalizedZoom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;normalize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;According to the Figma docs, the zoom level needs to be a number between 0 and 1, so I am normalizing the coordinates I get from the hand detection app to be a value between 0 and 1.&lt;/p&gt;

&lt;p&gt;So as I move my hands closer or further apart, I am zooming in or out on the design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c71uSx7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewfigpcdyuin51apewe0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c71uSx7H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewfigpcdyuin51apewe0.gif" alt="Gif showing me moving my hands closer and further apart to zoom in and out of a UI design" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a pretty quick walkthrough but from there, any custom gesture from the frontend can be sent to Figma and used to trigger layers, create shapes, change colors, etc!&lt;/p&gt;

&lt;p&gt;Having to run a separate app to be able to do this is not optimal but I doubt Figma will ever enable access to the &lt;code&gt;getUserMedia&lt;/code&gt; Web API in a plugin so in the meantime, that was an interesting workaround to figure out!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>machinelearning</category>
      <category>tensorflow</category>
      <category>tfjs</category>
    </item>
  </channel>
</rss>
