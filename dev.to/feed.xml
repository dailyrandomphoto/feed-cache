<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>DNS Explained. Resolution</title>
      <author>Blake Khan</author>
      <pubDate>Sun, 24 Jan 2021 19:54:43 +0000</pubDate>
      <link>https://dev.to/blake/dns-explained-resolution-a2i</link>
      <guid>https://dev.to/blake/dns-explained-resolution-a2i</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This is an article in the &lt;em&gt;DNS Explained.&lt;/em&gt; series. Click &lt;a href="https://dev.to/blake/dns-explained-introduction-history-1an7"&gt;here&lt;/a&gt; to read the introduction post. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Resolution is the process of asking for the resource records of a fully-qualified domain name (FQDN) and receiving back an answer. Every time that your computer does not have an IP address cached for a required FQDN, a resolution takes place. In this post, I discuss the main components involved in DNS resolution and explain the two main methods in which resolution is performed.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#components" class="anchor"&gt;
  &lt;/a&gt;
  Components
&lt;/h1&gt;

&lt;p&gt;There are five main components that play a role in DNS resolution.&lt;/p&gt;

&lt;p&gt;The first component is the &lt;strong&gt;client&lt;/strong&gt;. This is the host that is asking the question, "Where is &lt;a href="http://www.netflix.com"&gt;www.netflix.com&lt;/a&gt; on the internet?"&lt;/p&gt;

&lt;p&gt;The second component is the &lt;strong&gt;DNS resolver&lt;/strong&gt;. Typically provided by your ISP, this serves as the first component that the client reaches out to if the answer to the DNS query is not cached by the client. Its role is to query the other components to find the answer to the original question. The way it does this depends on the type of DNS resolution being performed.&lt;/p&gt;

&lt;p&gt;Clients can configure their settings to use a DNS resolver not provided by their ISP. &lt;a href="https://developers.google.com/speed/public-dns"&gt;Google&lt;/a&gt;, &lt;a href="https://one.one.one.one/"&gt;Cloudflare&lt;/a&gt;, &lt;a href="https://www.verisign.com/en_US/security-services/public-dns/index.xhtml"&gt;Verisign&lt;/a&gt;, and &lt;a href="https://www.opendns.com/"&gt;Cisco&lt;/a&gt; are just a handful of companies that offer free-alternative DNS resolvers. Be aware of which resolver you choose though! Every site you visit will likely send a DNS query which is handled by your chosen DNS resolver. This gives that resolver an ability to see what you request and may sell this data to advertisers. Always read the policies of DNS resolvers that you are considering to use.&lt;/p&gt;

&lt;p&gt;The third component is the &lt;strong&gt;DNS Root Zone&lt;/strong&gt;, which is questioned if the DNS resolver does not have the answer in cache. Its role is to return the nameservers for the requested TLD. There are 13 root servers in the world operated by 12 organizations. These servers are anycasted and I go into more detail about them in my &lt;a href="https://dev.to/blake/dns-explained-hierarchy-and-architecture-18pj"&gt;DNS Architecture&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;The fourth component is the &lt;strong&gt;TLD's Nameservers&lt;/strong&gt;. Its role is to return the authoritative nameservers of the requested second-level domain.&lt;/p&gt;

&lt;p&gt;Finally, the fifth component is the &lt;strong&gt;Authoritative Nameservers&lt;/strong&gt;. These servers are the responsibility of the registrant to provide, and their role is to return the resource record for the requested third-level domain (or apex domain).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#iterative-resolution" class="anchor"&gt;
  &lt;/a&gt;
  Iterative Resolution
&lt;/h1&gt;

&lt;p&gt;There are two types of resolution, the first is iterative. In an iterative resolution, it is the responsibility of the DNS resolver to keep querying nameservers until it gets an answer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5KgHsEBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/DpK9H6o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5KgHsEBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/DpK9H6o.png" alt="A flowchart describing iterative resolution."&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Let's go through each step in more detail.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The client sends an iterative DNS query for &lt;code&gt;www.blakes.site.&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The DNS resolver receives this query. If it doesn't have an answer for this query already cached, it will continue by asking a root server where the nameservers for &lt;code&gt;.site&lt;/code&gt; are. If it is cached, the answer will be returned here and the process will terminate. Sidenote: The DNS resolver could also store cache entries for the &lt;code&gt;.site&lt;/code&gt; TLD nameservers and the &lt;code&gt;blakes.site&lt;/code&gt; authoritative nameservers and skip the appropriate steps.&lt;/li&gt;
&lt;li&gt;The root server returns the IP addresses for the &lt;code&gt;.site&lt;/code&gt; nameservers. It also can cache the &lt;code&gt;.site&lt;/code&gt; nameservers for future usage.&lt;/li&gt;
&lt;li&gt;The DNS resolver now has to ask the &lt;code&gt;.site&lt;/code&gt; TLD nameservers for the IP addresses of the &lt;code&gt;blakes.site&lt;/code&gt; authoritative nameservers. It also can cache the &lt;code&gt;.site&lt;/code&gt; nameservers for future usage.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;.site&lt;/code&gt; TLD nameservers return the IP addresses for the &lt;code&gt;blakes.site&lt;/code&gt; authoritative nameservers. The DNS resolver can cache the &lt;code&gt;blakes.site&lt;/code&gt; authoritative nameservers for future usage.&lt;/li&gt;
&lt;li&gt;The DNS resolver asks the &lt;code&gt;blakes.site&lt;/code&gt; authoritative nameservers for the resource records for the entry &lt;code&gt;www&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;blakes.site&lt;/code&gt; authoritative nameservers return the resource records for the entry &lt;code&gt;www&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The DNS resolver caches the response and returns it back to the client.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#recursive-resolution" class="anchor"&gt;
  &lt;/a&gt;
  Recursive Resolution
&lt;/h1&gt;

&lt;p&gt;The alternative to iterative resolution is recursive resolution. Instead of an address to the next nameserver being sent back to the DNS resolver to then query, the nameserver makes the request itself and returns the result all the way back up to the DNS resolver.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eshz2rh_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KNpCaLc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eshz2rh_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KNpCaLc.png" alt="A flowchart describing recursive resolution."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's also go through this resolution step-by-step.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The client sends a recursive DNS query for &lt;code&gt;www.blakes.site.&lt;/code&gt;. Nothing new.&lt;/li&gt;
&lt;li&gt;The DNS resolver receives this query. If it doesn't have an answer for this query already cached, it will continue by asking a root server for the answer to &lt;code&gt;www.blakes.site.&lt;/code&gt;. If it is cached, the answer will be returned here and the process will terminate.&lt;/li&gt;
&lt;li&gt;If the root server did not have an answer cached, then it asks the next component that could have an answer: the TLD nameservers. The root servers can also cache the TLD nameservers for the requested domain for future use.&lt;/li&gt;
&lt;li&gt;If the TLD nameservers did not have an answer cached, then it asks the next component that could have an answer: the authoritative nameservers. The TLD nameservers can also cache the authoritative nameservers for the requested domain for future use.&lt;/li&gt;
&lt;li&gt;The authoritative nameservers find an answer for &lt;code&gt;www.blakes.site.&lt;/code&gt; and pass the answer up back to the TLD nameservers.&lt;/li&gt;
&lt;li&gt;The TLD nameservers pass the answer back up to the root server.&lt;/li&gt;
&lt;li&gt;The root server passes the answer back to the DNS resolver.&lt;/li&gt;
&lt;li&gt;The DNS resolver caches and passes the answer back to the client.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There is caching at each component, so it is possible that only a partial resolution has to take place for a query. If the requested FQDN is popular and the DNS resolver is being used by a lot of people, then it is completely possible that the root servers are never contacted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recursive-resolution-proscons" class="anchor"&gt;
  &lt;/a&gt;
  Recursive Resolution: Pros/Cons
&lt;/h2&gt;

&lt;p&gt;In general, recursive resolution tends to be faster than its iterative counterpart due to caching of final answers. However, this type of resolution creates security flaws including &lt;a href="https://www.cloudflare.com/learning/dns/dns-cache-poisoning/"&gt;cache poisoning&lt;/a&gt; and &lt;a href="https://www.cloudflare.com/learning/ddos/dns-amplification-ddos-attack/"&gt;DNS amplification attacks&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#responsibility-recursive-vs-iterative" class="anchor"&gt;
  &lt;/a&gt;
  Responsibility: Recursive vs Iterative
&lt;/h2&gt;

&lt;p&gt;In recursive resolution, the burden of having to contact nameservers belongs to the server. On the flip side, for iterative resolution, the burden of contacting nameservers belongs to the client.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dns-resolver-observation" class="anchor"&gt;
  &lt;/a&gt;
  DNS Resolver Observation
&lt;/h2&gt;

&lt;p&gt;It should be noted that for both recursive and iterative resolution, it is required that the DNS resolver already know the IP addresses of the 13 root servers. Implementation wise, these addresses are simply hardcoded and &lt;a href="https://root-servers.org/"&gt;publicly available&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>dns</category>
      <category>networking</category>
      <category>domain</category>
      <category>resolution</category>
    </item>
    <item>
      <title>How to Check a User's Location with JavaScript</title>
      <author>Nathan Pasko</author>
      <pubDate>Sun, 24 Jan 2021 17:35:41 +0000</pubDate>
      <link>https://dev.to/sprite421/how-to-check-a-user-s-location-with-javascript-142b</link>
      <guid>https://dev.to/sprite421/how-to-check-a-user-s-location-with-javascript-142b</guid>
      <description>&lt;p&gt;This little series is all about expanding our definition of "responsive design" to consider more than just screen size. Last time we talked about using CSS media queries to automatically shift between light and dark display modes. Today, let's talk about another part of the environment we can respond to: the user's location.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#locationbased-responsiveness" class="anchor"&gt;
  &lt;/a&gt;
  Location-Based Responsiveness
&lt;/h1&gt;

&lt;p&gt;Responsiveness is all about embracing the &lt;strong&gt;context&lt;/strong&gt; that surrounds our users and their devices. The most urgent responsive concerns are undoubtedly the wide variety of screen sizes that those devices might employ, but there's a lot more context beyond screen size that designers can respond to. &lt;strong&gt;What if our responsive designs could respond not just to screen size, but to the user's location as well?&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#geolocation" class="anchor"&gt;
  &lt;/a&gt;
  Geolocation
&lt;/h1&gt;

&lt;p&gt;To achieve this, we can use the &lt;strong&gt;Geolocation API&lt;/strong&gt;. This API is available only in secure contexts—HTTPS—in some supporting browsers, and yet it provides a super easy way to read a device's location. Today we'll look at two different geolocation approaches: one to check location a single time, and one to watch location continuously.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-the-users-location-once" class="anchor"&gt;
  &lt;/a&gt;
  How to Get the User's Location Once
&lt;/h2&gt;

&lt;p&gt;Let's start with a blank HTML page to try getting device location. We'll just add a button that will trigger the location check. Something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"get-location"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Get Location&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We want to be able to click this button and &lt;strong&gt;get location data in the console&lt;/strong&gt;. To achieve this, we'll write three JavaScript functions. The first is the function we'll stick to our button via event listener. We can access the Geolocation API at &lt;code&gt;navigator.geolocation&lt;/code&gt;. Inside our first function, we'll check whether the Geolocation API is supported by testing &lt;code&gt;navigator.geolocation&lt;/code&gt;, and if it is supported, we can get our location data using &lt;code&gt;navigator.geolocation.getCurrentPosition()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getLocation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Geolocation API not supported by this browser.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Checking location...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The Geolocation API provides &lt;code&gt;getCurrentPosition()&lt;/code&gt; so we can quickly locate users. This function will get the job done quite easily, but you might have noticed that it &lt;strong&gt;expects two arguments&lt;/strong&gt;, called &lt;code&gt;success&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; in this example. These are the two other functions we need to write.&lt;/p&gt;

&lt;p&gt;The first argument should be a function to call if geolocation is &lt;strong&gt;successful&lt;/strong&gt;. We need to carve out an argument in this function, too; this argument is called &lt;code&gt;position&lt;/code&gt; and it's how the browser will pass the geolocation results back to us.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;error()&lt;/code&gt; function will only be called if the &lt;strong&gt;geolocation fails&lt;/strong&gt;. Hopefully we won't even hit this function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Geolocation error!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Don't forget to attach &lt;code&gt;getLocation()&lt;/code&gt; to the button by adding a click event listener!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;get-location&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getLocation&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we have all the JavaScript we need to grab some location data. If we try it out by clicking the Get Location button, it'll ultimately result in a GeolocationPosition object being printed in the console. This object is a packet of the &lt;strong&gt;results from our geolocation check&lt;/strong&gt;. Its keys include a timestamp and another object called &lt;code&gt;coords&lt;/code&gt; that contains data like latitude, longitude, and so on. &lt;strong&gt;The data found in &lt;code&gt;coords&lt;/code&gt; is what we can work with to create a responsive design that consider's the user's location.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We can use the console to poke around the &lt;code&gt;coords&lt;/code&gt; object or we can directly log values from &lt;code&gt;coords&lt;/code&gt; to the console in &lt;code&gt;success()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Latitude:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Longitude:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;em&gt;Note!&lt;/em&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Latitude traditionally precedes longitude. If you explore location APIs on the web you might see latitude and longitude out of order, but just remember they should usually appear in alphabetical order!&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#how-to-continuously-watch-the-users-location" class="anchor"&gt;
  &lt;/a&gt;
  How to Continuously Watch the User's Location
&lt;/h2&gt;

&lt;p&gt;Instead of getting the user's location once, we can also watch their location continuously. Using the &lt;code&gt;watchPosition()&lt;/code&gt; function we can set up a handler function that will be called each time geolocation updates. We need to pass in a function to call when a new location is successfully returned, so let's reuse our &lt;code&gt;success()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;This example is pretty easy to set up for our purposes. We can just add one line of JavaScript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;watchPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we can continuously get location data! This comes with the processing, data, and energy overhead that you'd expect, but maybe you're as pleased as I was to learn how simple it is to start working with the Geolocation API.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-word-of-caution" class="anchor"&gt;
  &lt;/a&gt;
  A Word of Caution
&lt;/h1&gt;

&lt;p&gt;This series offers practical examples illustrating how to add different kinds of responsiveness, but it's also a conversation starter; a brain teaser. It's worthwhile to look at a user's location as part of the context they bring to our app or website, especially as a mental exercise, but devices will need to get permission to check location, and this will prove a UX wrinkle.&lt;/p&gt;

&lt;p&gt;It's really not a good idea for our users to be faced with a dialog in the browser immediately upon arriving at our site, however the kind of location-based responsiveness that we used as an example above will trigger those dialogs to get permissions for the location check. That's not ideal. Putting this stuff into practice will require a more thoughtful approach, or at least the deferral of location responsiveness away from the initial landing experience. Nevertheless, I think you'll find the expansion of the commonly held definition of responsiveness to include location is an exciting addition to your web design playbook. &lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Do you plan upcoming weeks on Sundays 🏖? If yes how?🤷🏻‍♂️</title>
      <author>Sarthak Sharma</author>
      <pubDate>Sun, 24 Jan 2021 17:18:40 +0000</pubDate>
      <link>https://dev.to/sarthology/do-you-plan-upcoming-weeks-on-sundays-if-yes-how-hkj</link>
      <guid>https://dev.to/sarthology/do-you-plan-upcoming-weeks-on-sundays-if-yes-how-hkj</guid>
      <description>&lt;p&gt;Sunday is day the when I sit back, relax and reflect on my past week. Then I set goals for upcoming week using my &lt;a href="https://gumroad.com/l/NVgre"&gt;Notion Template&lt;/a&gt;. One of my personal way to plan is using weekly batching recommended by Tim Ferriss and block my Calendar ahead of time. Check it out &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ghVdzAeX0bg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>productivity</category>
    </item>
    <item>
      <title>5 Things I've Learned as a Female Developer</title>
      <author>Eevis (she/her)</author>
      <pubDate>Sun, 24 Jan 2021 17:16:00 +0000</pubDate>
      <link>https://dev.to/eevajonnapanula/5-things-i-ve-learned-as-a-female-developer-p19</link>
      <guid>https://dev.to/eevajonnapanula/5-things-i-ve-learned-as-a-female-developer-p19</guid>
      <description>&lt;p&gt;In a few months, I will have been a professional software developer for four years. It has been fun, challenging, marvelous, exhausting, and an incredible learning journey.  It has contained much that I wouldn't have chosen and an astonishing amount of positive surprises. &lt;/p&gt;

&lt;p&gt;In Finland, of software developers, about 10% are women. (Source: &lt;a href="https://yle.fi/uutiset/3-10687050"&gt;Yle.fi&lt;/a&gt;, unfortunately only in Finnish). The exact amount of female developers, of course, varies from company to company, but in the big picture, we are a minority. Important programs, such as &lt;a href="https://mimmitkoodaa.ohjelmistoebusiness.fi/in-english/"&gt;Mimmit Koodaa&lt;/a&gt;,  are working to change that, but it takes time to improve these numbers.&lt;/p&gt;

&lt;p&gt;In this blog post, I will share some learnings from the perspective of a  female developer. These opinions are my own and are my experience. I'm happy if you haven't encountered anything negative in your career, but please, do respect the fact that not all of us are so lucky. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nobody-knows-everything" class="anchor"&gt;
  &lt;/a&gt;
  Nobody Knows Everything
&lt;/h2&gt;

&lt;p&gt;When I first started working as a software developer, I looked up to every software developer in the company. I had this idea that they know so much, some of them even everything. Some of them also played the part and were acting like they knew everything. Later, it has become clear that those who acted that way didn't actually know much. &lt;/p&gt;

&lt;p&gt;Some experiences in other companies have taught me this: Nobody knows everything. They might be deep specialists in certain areas but don't know anything about the others. The problem is that some people act like they are subject matter experts in everything when they're subject matter experts only in one thing. &lt;/p&gt;

&lt;p&gt;In 2018, Dan Abramov, one of the core developers in React, tweeted a blog post he had written about things he doesn't know:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1YgPzW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336281436685541376/fRSl8uJP_normal.jpg" alt="Dan Abramov profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan Abramov
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/dan_abramov"&gt;@dan_abramov&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      📝 New on Overreacted: Things I Don’t Know as of 2018. We can admit our knowledge gaps without devaluing our expertise. &lt;a href="https://t.co/0VJ76yPvzg"&gt;overreacted.io/things-i-dont-…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:53 PM - 28 Dec 2018
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1078650200221204480" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1078650200221204480" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1078650200221204480" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;It was circulating in my networks, and many felt that it was a reassuring piece of knowledge. Someone, who's been seen as a great expert, admits that he does not know some things that others might think of as very simple!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This realization has helped me in the evergoing fight with impostor syndrome.&lt;/strong&gt; I don't know everything, but I don't even have to. I keep learning every day. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-interviews-everybody-lies-usually-unintentionally" class="anchor"&gt;
  &lt;/a&gt;
  In Interviews Everybody Lies - Usually Unintentionally
&lt;/h2&gt;

&lt;p&gt;During these years, I have gone through many interview processes. I've realized that interviewers give a more rosy picture of the company than it actually is. This is about selling the company to the candidate. In most cases, this is done purely unintentionally and without any evil purposes. &lt;/p&gt;

&lt;p&gt;It is possible interviewers don't have a truthful image of the company's situation. They may be selling an idea they would like the company to be like. This can be about the work environment, the clients, the projects, or any other thing.  &lt;/p&gt;

&lt;p&gt;So, a piece of advice: Always be skeptical about what the company promises. Ask questions, ask for proof if the thing they promise is significant for you.  &lt;/p&gt;

&lt;p&gt;Of course, something unforeseen can happen. Last year alone has proven that. Some things that were promised can change when something unexpected happens. But then again, those unexpected situations reveal a lot about how much the company respects its employees. By this, I mean that hard times uncover the company's true values.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-is-always-someone-with-a-genderbias" class="anchor"&gt;
  &lt;/a&gt;
  There is Always Someone with a Gender-Bias
&lt;/h2&gt;

&lt;p&gt;I have been lucky to work with people who don't underestimate me because I'm not a man. I would say that most of the colleagues have been incredible in this matter. &lt;/p&gt;

&lt;p&gt;However, as you might have guessed from the title, there have been people who see me as being less competent because I'm a woman. I think nobody has said this straight to my face, but the bias has been pretty evident from how they talk.&lt;/p&gt;

&lt;p&gt;Example: There was a group conversation in which the topic was something I was really good at, and everybody knew it. Next to me was standing another developer, let's call him developer A. Third developer, B, needed help with the subject. The fourth developer, C, instantly said that A is the best one for this. The truth was that I knew the most about that subject (and the fourth developer knew this), but his bias made him forget about my experience.&lt;/p&gt;

&lt;p&gt;I have to give credits to developer A in that case - he brought up that he's not actually the expert here, but I am. It was essential for me that someone called this out. You might think that this is nothing, but let me tell you, it is. Seeing someone as being less competent because of some characteristic instead of the actual competence is the core of discrimination.&lt;/p&gt;

&lt;p&gt;The funny thing is that I've heard the words "I have no bias towards women in tech" only from people who have, with their actions, made it clear that they do. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#most-technical-interviews-suck" class="anchor"&gt;
  &lt;/a&gt;
  Most Technical Interviews Suck
&lt;/h2&gt;

&lt;p&gt;As said before, I've been in many interview processes. I've noticed about the technical interviews that they are as far from the actual job as they ever could be. Let's take the example of whiteboard code solving puzzles. Do you ever do that in your daily job? I haven't. &lt;/p&gt;

&lt;p&gt;Some say that it is a good test for how the candidate performs under pressure. I don't think so. This approach feels a bit like dropping someone in the middle of woods without any tools and then saying "good luck." Jobs I've had have not been like that. &lt;/p&gt;

&lt;p&gt;This tweet sums it up pretty beautifully:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fI-xidSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/CfNJTAHWAAAik5I.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--YW-SOVqr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1171381674753630208/3xNHuta1_normal.jpg" alt="DEV Community 👩‍💻👨‍💻 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        DEV Community 👩‍💻👨‍💻
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      How to make the hiring process as arbitrary and subject to bias as possible. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:34 PM - 04 Apr 2016
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=716997357624287232" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwRENZp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=716997357624287232" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFD0MJBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=716997357624287232" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wx1BHu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Also, putting the candidate through a tech grill is not a good approach. Again, you could say something about the stress test and that people know their stuff even when grilled if they're professionals. Well, how many times those interviewers use search engines throughout the day? Shouldn't they know their stuff, right?&lt;/p&gt;

&lt;p&gt;Stressful situations make many people freeze, and they can't show how good they actually are. In the actual job, it is a rare occasion when someone asks questions in the same way as in those tech grill interviews.&lt;/p&gt;

&lt;p&gt;My favorite kind of technical interview has been one where I showed some code I had written. That was some free time code, so not a task for the interview process. It was a starting point for conversations, and interviewers asked me questions based on that. I knew the code inside out, and it was so much easier to just have a conversation without all the time fearing that I might answer wrong. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#communities-matter" class="anchor"&gt;
  &lt;/a&gt;
  Communities Matter
&lt;/h2&gt;

&lt;p&gt;When I started learning to code, I was alone. I lived in a city where there were no developer communities. The closest town with meetups was something like 100 km away. The communities online (like Stack Overflow) felt hostile, so I didn't feel like being part of them either. So when I moved to Helsinki because of my first developer job, I was thrilled about all the possible meetups and other events.&lt;/p&gt;

&lt;p&gt;In these four years, I've gotten to know quite a few people from various workplaces I've been in. Another critical community for me has been &lt;a href="https://oslevelupkoodarit.github.io/about.html"&gt;LevelUp Koodarit&lt;/a&gt; - a Facebook group and Slack-space for women and gender minorities. &lt;/p&gt;

&lt;p&gt;People I've gotten to know through these communities are fantastic, and I'm super happy about the connections I've made. They've also been a support group and door opener for many things - be it public speaking, blogging, or hosting a study group about accessibility. And for job opportunities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up" class="anchor"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;So, the last almost four years have been a journey. There have been ups, and there have been downs. I've seen a lot and learned even more. There is still a lot of work to do for equal treatment in the tech industry, especially for those who are more in the margins than I am. &lt;/p&gt;

&lt;p&gt;I hope you learned something from these points, and if you have any similar experiences, I'd love to hear them! 😊&lt;/p&gt;

</description>
      <category>career</category>
      <category>womenintech</category>
      <category>inclusion</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Get familiar with the SeleniumBase API</title>
      <author>Automation Bro</author>
      <pubDate>Sun, 24 Jan 2021 16:13:39 +0000</pubDate>
      <link>https://dev.to/automationbro/get-familiar-with-the-seleniumbase-api-59b5</link>
      <guid>https://dev.to/automationbro/get-familiar-with-the-seleniumbase-api-59b5</guid>
      <description>&lt;p&gt;SeleniumBase framework comes with a set of pre-defined &lt;a href="https://seleniumbase.io/help_docs/method_summary/"&gt;APIs&lt;/a&gt; or helper methods for us to use. In this post, we will get familiar with some of the common APIs such as click, get_text, assert_text, etc… and understand how it works and which ones to use when.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-use-seleniumbase-api" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;💭 Why use SeleniumBase API?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;SeleniumBase API provides us with helper wrapper methods to use that are built on top of regular selenium commands. These wrapper methods make working with Selenium a lot easier as it comes with in-built smart wait features to make your tests more reliable. So, you do not have to worry about adding waits or sleeps after every other command, as all of that gets dealt with by SeleniumBase APIs.&lt;/p&gt;

&lt;p&gt;It even comes with some additional helper methods which you typically would have to create on your own when directly using Selenium commands.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#scenario-1-click-on-a-button-and-assert-url" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Scenario #1 – Click on a button and assert URL&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P5EH_K21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u3k1ru7f6mnxoqousd9q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P5EH_K21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/u3k1ru7f6mnxoqousd9q.png" alt="Scenario1"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#scenario-2-scroll-and-assert-the-text-of-the-element" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Scenario #2 – Scroll and assert the text of the element&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b6yFFQgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/26hold5zdoumkzqz2top.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b6yFFQgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/26hold5zdoumkzqz2top.png" alt="Scenario2"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#check-out-the-video-below-to-learn-more-about-the-seleniumbase-apis-" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Check out the video below to learn more about the SeleniumBase APIs –&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/wXBT0XZ2RfA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;📧 Subscribe to my &lt;a href="https://automationbro.com/mailing-list"&gt;mailing list&lt;/a&gt; to get access to more content like this &lt;br&gt;
👍 Follow &lt;a href="https://twitter.com/automationbro"&gt;automationbro&lt;/a&gt; on Twitter for the latest updates&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I love coffees! And, if this post helped you out and you would like to support my work, you can do that by clicking on the button below and buying me a cup of coffee -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/automationbro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUHFj71T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4aw2ub3f4qkyjk0ivwt4.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>python</category>
      <category>testing</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Products Quantity Counter Using HTML CSS &amp; JavaScript</title>
      <author>Stackfindover</author>
      <pubDate>Sun, 24 Jan 2021 15:08:31 +0000</pubDate>
      <link>https://dev.to/stackfindover/products-quantity-counter-using-html-css-javascript-663</link>
      <guid>https://dev.to/stackfindover/products-quantity-counter-using-html-css-javascript-663</guid>
      <description>&lt;p&gt;Hello, guys in this &lt;a href="https://blogs.stackfindover.com/category/tutorials/" rel="dofollow"&gt;tutorial&lt;/a&gt; we will create a Products Quantity Counter Using HTML CSS &amp;amp; JavaScript.&lt;/p&gt;

&lt;p&gt;First, we need to create two files &lt;strong&gt;index.html&lt;/strong&gt; and &lt;strong&gt;style.css&lt;/strong&gt; then we need to do code for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#products-quantity-counter-step1" class="anchor"&gt;
  &lt;/a&gt;
  Products Quantity Counter Step:1
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Add below code inside index.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Products Quantity Counter&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"ie=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"counter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"down"&lt;/span&gt; &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;'decreaseCount(event, this)'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"up"&lt;/span&gt;  &lt;span class="na"&gt;onClick=&lt;/span&gt;&lt;span class="s"&gt;'increaseCount(event, this)'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;increaseCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previousElementSibling&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;decreaseCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextElementSibling&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)?&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#products-quantity-counter-step2" class="anchor"&gt;
  &lt;/a&gt;
  Products Quantity Counter Step:2
&lt;/h3&gt;

&lt;p&gt;Then we need to add code for &lt;strong&gt;style.css&lt;/strong&gt; which code I provide in the below screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'IBM Plex Sans'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.counter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.counter&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0052cc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;appearance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.counter&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0052cc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;user-select&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#products-quantity-counter-video-output" class="anchor"&gt;
  &lt;/a&gt;
  Products Quantity Counter Video Output:
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BrwEhCT1YJM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#products-quantity-counter-codepen-output" class="anchor"&gt;
  &lt;/a&gt;
  Products Quantity Counter CodePen Output:
&lt;/h3&gt;

&lt;p&gt;We will update soon :)&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Transaction in Spring Boot as simple as possible</title>
      <author>Fabio Hiroki</author>
      <pubDate>Sun, 24 Jan 2021 14:09:14 +0000</pubDate>
      <link>https://dev.to/fabiothiroki/transaction-in-spring-boot-as-simple-as-possible-5ecf</link>
      <guid>https://dev.to/fabiothiroki/transaction-in-spring-boot-as-simple-as-possible-5ecf</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;A few days ago I had to investigate a bug in production that involved a database transaction, specifically defined by &lt;br&gt;
&lt;a href="https://spring.io/guides/gs/managing-transactions/"&gt;&lt;code&gt;@Transaction&lt;/code&gt;&lt;/a&gt; annotation. That sounded like a great opportunity to review the basic concepts and hopefully fix the bug.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#no-bug-yet" class="anchor"&gt;
  &lt;/a&gt;
  No bug yet
&lt;/h1&gt;

&lt;p&gt;Before the bug was introduced, this is how the application looked like: an endpoint that received some payload and then performed write on different tables in the same transactional annotation, using its respective dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Autowired&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;TableOneService&lt;/span&gt; &lt;span class="n"&gt;tableOneService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Autowired&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;TableTwoService&lt;/span&gt; &lt;span class="n"&gt;tableTwoService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;


&lt;span class="nd"&gt;@PostMapping&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@Transactional&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@RequestBody&lt;/span&gt; &lt;span class="nc"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;tableOneService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;tableTwoService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;So far, so good, the application was behaving as expected.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#requirements-change" class="anchor"&gt;
  &lt;/a&gt;
  Requirements change
&lt;/h1&gt;

&lt;p&gt;After observing the data persisted in table two, we've decided to change the business rule, validate the payload persisted based on its values. If you don't know the entire application and just focus on changing the &lt;code&gt;tableTwoService&lt;/code&gt; code based on these specific requirements, this is a possible solution that you may consider:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add some king of validation on &lt;code&gt;save&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;Throw an exception that will be translated to a &lt;code&gt;Bad Request&lt;/code&gt; response to the client.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Don't feel guilty if you've considered this solution, we've also done this and deployed it to production.&lt;/p&gt;

&lt;p&gt;This is what the code looked like now. As developers, we're so wrongly proud.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TableTwoService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;paylod&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isValid&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// persists on database&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// throw some exception&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#bug-detected" class="anchor"&gt;
  &lt;/a&gt;
  Bug detected
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xTiTnGuHmcaQeWSryE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xTiTnGuHmcaQeWSryE/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After some days, someone raised the hand:&lt;/p&gt;

&lt;p&gt;"Hey something feels wrong, we're missing some data on table one since the deployment of the validation code".&lt;/p&gt;

&lt;p&gt;Damn, we didn't even change the &lt;code&gt;tableOneService&lt;/code&gt; neither the API controller code, for sure this is someone else's problem.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#database-transaction" class="anchor"&gt;
  &lt;/a&gt;
  Database Transaction
&lt;/h1&gt;

&lt;p&gt;In short words, this is what defines the behavior of a method annotated by &lt;code&gt;@Transaction&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Begin the transaction.&lt;/li&gt;
&lt;li&gt;Execute a set of data manipulations and/or queries.&lt;/li&gt;
&lt;li&gt;If no error occurs, then commit the transaction.&lt;/li&gt;
&lt;li&gt;If an error occurs, then roll back the transaction.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Transactional&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@RequestBody&lt;/span&gt; &lt;span class="nc"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Both operations should work for transaction commit&lt;/span&gt;
  &lt;span class="c1"&gt;// Otherwise no operation will persist&lt;/span&gt;
  &lt;span class="n"&gt;tableOneService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;tableTwoService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Besides the code of &lt;code&gt;tableOneService&lt;/code&gt; was executing without errors on runtime, the exception thrown on &lt;code&gt;tableTwoService&lt;/code&gt; was rollbacking its persistence.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-fix-the-bug" class="anchor"&gt;
  &lt;/a&gt;
  Let's fix the bug
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Wsju5zAb5kcOfxJV9i/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Wsju5zAb5kcOfxJV9i/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution I've decided to use was to remove the exception thrown and instead just log the payload received so I could have better observability of this flow. An exception now won't trigger the transaction rollback.&lt;/p&gt;

&lt;p&gt;In this case, my solution works because it's ok for the client that sent this request to not receive a &lt;code&gt;Bad Request&lt;/code&gt; response whenever it sends an invalid payload, and just have its payload ignored.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TableTwoService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Payload&lt;/span&gt; &lt;span class="n"&gt;paylod&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isValid&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// persists on database&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// log a message and do nothing&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-end" class="anchor"&gt;
  &lt;/a&gt;
  The end
&lt;/h1&gt;

&lt;p&gt;The bug is now fixed and I've learned a little more about the &lt;code&gt;@Transaction&lt;/code&gt; annotation. I hope this story helps someone else in the future.&lt;/p&gt;

</description>
      <category>java</category>
      <category>database</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What is the best routine for a Dev?</title>
      <author>Rishabh Singh</author>
      <pubDate>Sun, 24 Jan 2021 13:41:26 +0000</pubDate>
      <link>https://dev.to/mindninjax/what-is-the-best-routine-for-a-dev-23o2</link>
      <guid>https://dev.to/mindninjax/what-is-the-best-routine-for-a-dev-23o2</guid>
      <description>&lt;p&gt;As a Dev, we often have to follow strict deadlines, meet the expectations of our clients or bosses &amp;amp; make time for our personal projects or leisure.&lt;/p&gt;

&lt;p&gt;None of these would be possible if we cant follow along with our daily routine which makes us comfortable and provide us with the flexibility to help stretch our horizons to do more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TSlEOnOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p86ifdqyx3leenc84gif.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TSlEOnOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p86ifdqyx3leenc84gif.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-routine" class="anchor"&gt;
  &lt;/a&gt;
  My Routine
&lt;/h3&gt;




&lt;p&gt;&lt;strong&gt;Here's my routine:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;6:30 AM:&lt;/strong&gt; Wake up&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;7 AM:&lt;/strong&gt; Hit Gym&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;9 AM:&lt;/strong&gt; Start Coding :D&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;12 PM:&lt;/strong&gt; Lunch (I usually like to skip breakfasts as it helps me with Ketosis)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;3 PM:&lt;/strong&gt; Nap&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;4 PM:&lt;/strong&gt; Anime&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;6 PM:&lt;/strong&gt; Go out with friends&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;8 PM:&lt;/strong&gt; Back to work&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10 PM:&lt;/strong&gt; Dinner&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;11 PM:&lt;/strong&gt; Time for bed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#discuss" class="anchor"&gt;
  &lt;/a&gt;
  Discuss
&lt;/h3&gt;




&lt;p&gt;Now it's your turn to share your routine.&lt;/p&gt;

&lt;p&gt;Feel free to discuss the routine which makes you feel most productive in the discussions/comments.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>discuss</category>
      <category>watercooler</category>
      <category>programming</category>
    </item>
    <item>
      <title>Date &amp; Time in JavaScript</title>
      <author>Himanshu Tiwari 🌼</author>
      <pubDate>Sun, 24 Jan 2021 13:07:39 +0000</pubDate>
      <link>https://dev.to/himanshutiwari15/date-time-in-javascript-1lmd</link>
      <guid>https://dev.to/himanshutiwari15/date-time-in-javascript-1lmd</guid>
      <description>&lt;p&gt;Let’s meet someone amazing today 😁, haha a new built-in object: Date. In Javascript, we can easily work with Date &amp;amp; Time using the Date class. To create an object of this type we use the &lt;em&gt;new&lt;/em&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// Creating a Date object&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dateObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dateObj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;By doing this, we create an object with the current date and time formed by weekday, month, day, year, hours, minutes, seconds, and timezone. Now that's friggin precise 😝.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#methods-of-the-date-object" class="anchor"&gt;
  &lt;/a&gt;
  Methods of the Date object   😵
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;getDate()&lt;/td&gt;
&lt;td&gt;Returns the day of the month (1 to 31)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getDay()&lt;/td&gt;
&lt;td&gt;Returns the weekday (0 - Sunday to 6 -&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Saturday)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getFullYear()&lt;/td&gt;
&lt;td&gt;Returns the full year (YYYY)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getMonth()&lt;/td&gt;
&lt;td&gt;Returns the month (0 to 11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getHours()&lt;/td&gt;
&lt;td&gt;Returns the hours (0 to 23)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getMinutes()&lt;/td&gt;
&lt;td&gt;Return the minutes (0 to 59)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getSeconds()&lt;/td&gt;
&lt;td&gt;Returns the seconds (0 to 59)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getMilliseconds()&lt;/td&gt;
&lt;td&gt;Returns the milliseconds (0 to 999)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getTime()&lt;/td&gt;
&lt;td&gt;Returns the number of milliseconds since the&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Epoch(Jan 1st, 1970, 00:00:00)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;setTime()&lt;/td&gt;
&lt;td&gt;Creates a specific date from milliseconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;since the epoch.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#what-is-unix-epoch" class="anchor"&gt;
  &lt;/a&gt;
  What is UNIX EPOCH?😰
&lt;/h5&gt;

&lt;p&gt;The Epoch is present in most programming languages. We can consider it the starting point of counting the time. This is useful to do calculations with date and time.&lt;/p&gt;

&lt;p&gt;Javascript uses the Unix Epoch, which is: Jan 1st, 1970, 00:00:00, UTC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-time-chart-for-reference" class="anchor"&gt;
  &lt;/a&gt;
  A Time Chart for reference   😅
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Time&lt;/th&gt;
&lt;th&gt;Milliseconds (ms)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1 second&lt;/td&gt;
&lt;td&gt;1,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 minute&lt;/td&gt;
&lt;td&gt;60,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 hour&lt;/td&gt;
&lt;td&gt;3,600,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 day&lt;/td&gt;
&lt;td&gt;86,400,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1 year (365 days)&lt;/td&gt;
&lt;td&gt;31,536,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#how-to-calculate-how-many-hours-have-passed-since-the-epoch" class="anchor"&gt;
  &lt;/a&gt;
  How to calculate how many hours have passed since the Epoch?   😬
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;3600000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#passing-argument-to-date" class="anchor"&gt;
  &lt;/a&gt;
  Passing Argument to &lt;strong&gt;Date()&lt;/strong&gt;   😷
&lt;/h3&gt;

&lt;p&gt;We created date objects without passing any arguments, this is why they represented the current time but we can also use them with specific objects or better to say a specific number of objects.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Numeric arguments&lt;/th&gt;
&lt;th&gt;Time represents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;One&lt;/td&gt;
&lt;td&gt;milliseconds since the epoch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Two&lt;/td&gt;
&lt;td&gt;years and month (months go from 0 to 11)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Three&lt;/td&gt;
&lt;td&gt;years, month, and day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Four&lt;/td&gt;
&lt;td&gt;years, month, day, and hours&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Five&lt;/td&gt;
&lt;td&gt;years, month, days, hours, minutes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Six&lt;/td&gt;
&lt;td&gt;years, month, day, hours, minutes, and&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;Obj&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We can also pass strings as an argument and in different formats&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ISO date: "2020-03-18" (YYYY-MM-DD)&lt;/li&gt;
&lt;li&gt;Short Date: "03/18/2020" (MM/DD/YYYY)&lt;/li&gt;
&lt;li&gt;Long Date: "Mar 18 2020" or "18 Mar 2020"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you guys have learnt and saved it for later reference&lt;br&gt;
and if you found my grammatical mistakes then don't forget to comment them 😂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>computerscience</category>
      <category>webdev</category>
    </item>
    <item>
      <title>PWA (Progressive Web Apps) interview questions and answers for developers</title>
      <author>Devinterview-io</author>
      <pubDate>Sun, 24 Jan 2021 11:30:49 +0000</pubDate>
      <link>https://dev.to/devinterview/pwa-progressive-web-apps-interview-questions-and-answers-for-developers-49kh</link>
      <guid>https://dev.to/devinterview/pwa-progressive-web-apps-interview-questions-and-answers-for-developers-49kh</guid>
      <description>&lt;p&gt;A progressive web application is a type of application software delivered through the web, built using common web technologies including HTML, CSS, and JavaScript. Here is a list of coding interview questions on PWA to help you get ready for your next technical interview in 2021.&lt;/p&gt;

&lt;p&gt;👉 You can check all 22 &lt;a href="https://devinterview.io/dev/pwa-interview-questions"&gt;PWA tech interview questions here&lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-what-is-a-progressive-web-app" class="anchor"&gt;
  &lt;/a&gt;
  🔹 1. What is a progressive web app?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;The concept of the &lt;strong&gt;progressive web app (PWA)&lt;/strong&gt; was approached by Google in late 2015. They are basically web applications (Website) but have look and feel like other native mobile apps. The progressive web app enabled websites can offer functionalities such as working offline, push notifications, and device hardware access.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/47055893/what-is-a-progressive-web-app-in-laymans-terms"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#2-what-are-some-benefits-of-pwa" class="anchor"&gt;
  &lt;/a&gt;
  🔹 2. What are some benefits of PWA?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;Benefits of the progressive web app:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Smaller and Faster:&lt;/strong&gt; The progressive web apps are much smaller in size than native apps. They don’t even need to install. That’s they are not wasting disc space and load very fast.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Responsive Interface:&lt;/strong&gt; Progressive web app (PWA) supported web pages are capable to fit in every screen sizes automatically. It could be a smartphone, tablet, desktop or laptop.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;No Updates Required:&lt;/strong&gt; Most of the mobile apps need regular weekly updates. Like the normal website, progressive web apps (PWA) are always loaded latest updated version whenever the user interaction happens and no App or Play Store approval required.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Cost Effective:&lt;/strong&gt; Native mobile apps need to be developed for both Android and iOS devices separately and their development cost is very high. On the other hand, progressive web apps are had the same features but the fraction of the prior price.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;SEO Advantage:&lt;/strong&gt; Progressive web apps are discoverable by search engines and load super-fast. Just like other websites, their links are sharable too. This, in other words, gives good user experience and result in SEO rank boost.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Offline capabilities:&lt;/strong&gt; Due to the support of service worker API, PWAs are accessible in offline or low internet connections.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Security:&lt;/strong&gt; PWAs are delivered over HTTPS connection and secure user-data over each interaction.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Push Notifications:&lt;/strong&gt; By the support of push notifications, PWAs can interact easily with the users and provide a really amazing user experience.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Bypass the app stores:&lt;/strong&gt; PWAs don’t need the App store or Google play store support. Their updated version can be directly loaded from the web server without the requirement of app store approval. On the other hand, native apps need days of approval if any new update required. There are possibilities of getting rejected or banned.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Zero installation:&lt;/strong&gt; During browsing, progressive web app gets its own icon on phones and tablets, just like a mobile application, but without the need to go through the tedious and slow App Store installation process.&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/47055893/what-is-a-progressive-web-app-in-laymans-terms"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#3-what-makes-an-app-a-pwa" class="anchor"&gt;
  &lt;/a&gt;
  🔹 3. What makes an app a PWA?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;There are some key principles a web app should try to observe to be identified as a PWA. It should be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Discoverable&lt;/strong&gt;, so the contents can be found through search engines.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Installable&lt;/strong&gt;, so it's available on the device's home screen.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Linkable&lt;/strong&gt;, so you can share it by simply sending a URL. *** Network independent**, so it works offline or with a poor network connection.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Progressive&lt;/strong&gt;, so it's still usable on a basic level on older browsers, but fully-functional on the latest ones.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Re-engageable&lt;/strong&gt;, so it's able to send notifications whenever there's new content available.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Responsive&lt;/strong&gt;, so it's usable on any device with a screen and a browser — mobile phones, tablets, laptops, TVs, fridges, etc.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Safe&lt;/strong&gt;, so the connection between you and the app is secured against any third parties trying to get access to your sensitive data.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Introduction"&gt;developer.mozilla.org&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#4-why-do-we-need-a-web-manifest-for-pwa" class="anchor"&gt;
  &lt;/a&gt;
  🔹 4. Why do we need a web manifest for PWA?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;web manifest&lt;/strong&gt; file lists all the information about the website in a JSON format. Having this file is one of the requirements &lt;strong&gt;to make the website installable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It usually resides in the root folder of a web app. It contains useful information, such as the app’s title, paths to different-sized icons that can be used to represent the app on a mobile OS (for example, as the home screen icon), and a background color to use in loading or splash screens. This information is needed for the browser to present the web app properly when installing, and on the home screen.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Installable_PWAs"&gt;developer.mozilla.org&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#5-what-features-do-progressive-web-apps-have-that-native-apps-lacks" class="anchor"&gt;
  &lt;/a&gt;
  🔹 5. What features do Progressive Web Apps have that native apps lacks?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;There are some:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;discoverability&lt;/strong&gt; - content in progressive web apps can easily be found by search engines but a content-centric native app like StackOverflow won't show among app store search results for content that it does offer access to, such as "pwa vs. native". This is a problem for communities like Reddit, which can't expose their numerous sub-communities to the app store as individual "apps".&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;linkability&lt;/strong&gt; - any page/screen can have a direct link, which can be shared easily&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;bookmarkability&lt;/strong&gt; - save that link to access an app's view directly&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;always fresh&lt;/strong&gt; - no need to go through the app stores to push updates&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;universal access&lt;/strong&gt; - not subject by app stores &lt;a href="https://medium.com/@krave/apple-s-app-store-review-process-is-hurting-users-but-we-re-not-allowed-to-talk-about-it-55d791451b#.s2bse2bai"&gt;sometimes arbitrary policies&lt;/a&gt; or (unintended) &lt;a href="https://android.stackexchange.com/questions/12538/how-can-i-circumvent-regional-restrictions-in-googles-play-store"&gt;geographic restrictions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;large data savings&lt;/strong&gt;, extremely important in emerging markets with expensive and/or slow Internet access. For example, e-commerce website Konga &lt;a href="https://developers.google.com/web/showcase/2016/konga"&gt;cut data usage by 92% for the first load by migrating to a PWA&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;low friction of distribution&lt;/strong&gt; - if your progressive web app is online, it's already accessible for Android (and other mobile) users.

&lt;ul&gt;
&lt;li&gt;  &lt;a href="http://www.businessinsider.com/how-many-apps-people-download-per-month-2014-8"&gt;65.5% of US smartphone users don't download any new apps each month&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  PWAs eliminate the need to go to the app store, search for the app, click Install, wait for the download, then open the app. &lt;a href="https://www.youtube.com/watch?v=qmE_jpnYXFo&amp;amp;feature=youtu.be&amp;amp;t=96"&gt;Each of these steps loses 20% of the potential users.&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/35504194/what-features-do-progressive-web-apps-have-vs-native-apps-and-vice-versa-on-an"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#6-what-is-the-differences-between-a-hybrid-mobile-app-and-a-progressive-web-app" class="anchor"&gt;
  &lt;/a&gt;
  🔹 6. What is the differences between a Hybrid Mobile App and a Progressive Web App?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;hybrid mobile app&lt;/strong&gt; usually refers to an application built using a combination of web and native technology that is distributed via a native app store. These apps go through Apple, Google, Microsoft, etc's app store review process.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;Progressive Web App&lt;/strong&gt; is an application built using web technology that runs in the browser and may be added to the home screen. They do not need to be distributed via native app stores, but can be included in them. Microsoft includes PWAs in its Microsoft Store as of 2018 and Trusted Web Activities make it easier to submit PWAs to the Google Play Store.&lt;/p&gt;

&lt;p&gt;Some hybrid mobile app platforms include PhoneGap (aka Cordova), Appcelerator Titanium, and Ionic. You don't need a platform to create a hybrid app, but they are helpful because they've already taken care of creating a bridge between native APIs and JavaScript APIs.&lt;/p&gt;

&lt;p&gt;Progressive Web Apps simply run in the browser so they can be built with basic HTML, CSS and JavaScript.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/40820592/difference-between-a-progressive-web-app-and-a-hybrid-mobile-app"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#7-what-are-some-requirements-to-make-the-website-installable-as-pwa" class="anchor"&gt;
  &lt;/a&gt;
  🔹 7. What are some requirements to make the website installable as PWA?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;To make the website installable, it needs the following things in place:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  A web manifest, with the correct fields filled in&lt;/li&gt;
&lt;li&gt;  The website to be served from a secure (HTTPS) domain&lt;/li&gt;
&lt;li&gt;  An icon to represent the app on the device&lt;/li&gt;
&lt;li&gt;  A service worker registered, to make the app work offline (this is required only by Chrome for Android currently)&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Installable_PWAs"&gt;developer.mozilla.org&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#8-what-is-cachestorage" class="anchor"&gt;
  &lt;/a&gt;
  🔹 8. What is CacheStorage?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CacheStorage&lt;/strong&gt; is a storage mechanism in browsers for storing and retrieving network requests and response. It stores a pair of Request and Response objects. The Request as the key and Response as the value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CacheStorage&lt;/strong&gt; is not a Service Worker API, but it enables SW to cache network responses so that they can provide offline capabilities when the user is disconnected from the network.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;caches&lt;/code&gt; (an instance of CacheStorage) object is used to access the CacheStorage, to retrieve, store and delete objects.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://blog.bitsrc.io/introduction-to-the-cache-storage-a-new-browser-cache-pwa-api-a5d7426a2456"&gt;blog.bitsrc.io&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#9-what-are-some-disadvantages-of-pwa" class="anchor"&gt;
  &lt;/a&gt;
  🔹 9. What are some disadvantages of PWA?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of the progressive web app:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Less access to system features:&lt;/strong&gt; Currently, Progressive Web Apps have limited access to native system features than native apps. Also, all browsers are not supporting its full features but maybe in near future, it will be the new standard of development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;More Android – Less Apple’s iOS:&lt;/strong&gt; progressive web apps are currently, most supported by Android devices. Apple’s iOS is only partially supporting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;No review standard:&lt;/strong&gt; progressive web apps don’t need any kind of review system which is applicable for native apps from the app store. It may make the process faster but lack of promotional benefits from the app store.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/47055893/what-is-a-progressive-web-app-in-laymans-terms"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#10-what-is-indexeddb-and-how-is-it-used-by-pwa" class="anchor"&gt;
  &lt;/a&gt;
  🔹 10. What is IndexedDB and how is it used by PWA?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;IndexedDB is a large-scale, NoSQL storage system. It lets you store just about anything in the user's browser. In addition to the usual search, get, and put actions, IndexedDB also supports transactions.&lt;/p&gt;

&lt;p&gt;IndexedDB is a low-level API for client-side storage of significant amounts of structured data, including files/blobs. This API uses indexes to enable high performance searches of this data. While DOM Storage is useful for storing smaller amounts of data, it is less useful for storing larger amounts of structured data. IndexedDB provides a solution.&lt;/p&gt;

&lt;p&gt;In a context of PWA a general recommendation for storing data offline:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  For the network resources necessary to load your app while offline, use the Cache API (part of service workers).&lt;/li&gt;
&lt;li&gt;  For all other data, use IndexedDB (with a promises wrapper).&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://developers.google.com/web/ilt/pwa/working-with-indexeddb"&gt;developers.google.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#11-what-is-a-fetch-event" class="anchor"&gt;
  &lt;/a&gt;
  🔹 11. What is a fetch event?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;After a service worker is installed and the user navigates to a different page or refreshes, the service worker will begin to receive &lt;code&gt;fetch&lt;/code&gt; events.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;fetch&lt;/code&gt; event fires every time any resource controlled by a service worker is fetched, which includes the documents inside the specified scope, and any resources referenced in those documents (for example if index.html makes a cross origin request to embed an image, that still goes through its service worker.)&lt;/p&gt;

&lt;p&gt;Consider:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;self.addEventListener('fetch', function(event) {
  event.respondWith(
    caches.match(event.request)
      .then(function(response) {
        // Cache hit - return response
        if (response) {
          return response;
        }
        return fetch(event.request);
      }
    )
  );
});
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://developers.google.com/web/fundamentals/primers/service-workers"&gt;developers.google.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#12-what-is-a-service-worker" class="anchor"&gt;
  &lt;/a&gt;
  🔹 12. What is a service worker?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;service worker&lt;/strong&gt; is a specific type of JS Script, which runs in the background of the user’s browser. It acts like a proxy server exists between your app, the browser and the network. Among other things, service workers allow apps to continue functioning offline in case the user loses internet connection.&lt;/p&gt;

&lt;p&gt;Service Workers are a virtual proxy between the browser and the network. They finally fix issues that front-end developers have struggled with for years — most notably how to properly cache the assets of a website and make them available when the user’s device is offline.&lt;/p&gt;

&lt;p&gt;They run on a &lt;strong&gt;separate thread&lt;/strong&gt; from the main JavaScript code of our page, and don't have any access to the DOM structure. This introduces a different approach from traditional web programming — the API is non-blocking, and can send and receive communication between different contexts. You are able to give a Service Worker something to work on, and receive the result whenever it is ready using a Promise-based approach.&lt;/p&gt;

&lt;p&gt;They can do a lot more than "just" offering offline capabilities, including handling notifications, performing heavy calculations on a separate thread, etc. Service workers are quite powerful as they can take control over network requests, modify them, serve custom responses retrieved from the cache, or synthesize responses completely.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://developers.google.com/web/fundamentals/primers/service-workers"&gt;developers.google.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#thanks-for-reading-and-good-luck-on-your-next-tech-interview" class="anchor"&gt;
  &lt;/a&gt;
  Thanks 🙌 for reading and good luck on your next tech interview!
&lt;/h2&gt;

&lt;p&gt;Explore 3800+ dev interview question here 👉 &lt;a href="https://devinterview.io/"&gt;Devinterview.io&lt;/a&gt;&lt;/p&gt;





</description>
      <category>pwa</category>
      <category>webdev</category>
      <category>mobile</category>
      <category>career</category>
    </item>
    <item>
      <title>Just do it</title>
      <author>Cyril Cabo</author>
      <pubDate>Sun, 24 Jan 2021 10:52:25 +0000</pubDate>
      <link>https://dev.to/cyrilcabo/just-do-it-3n55</link>
      <guid>https://dev.to/cyrilcabo/just-do-it-3n55</guid>
      <description>&lt;h1&gt;
  &lt;a href="#just-do-it" class="anchor"&gt;
  &lt;/a&gt;
  Just do it
&lt;/h1&gt;

&lt;p&gt;No, this is not sponsored by Nike. It is a message that most of us need. Frankly, I am someone who needs it most. Why? In this article, I am going to talk about why instead of thinking a whole lot about it, sometimes, you just have to do it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ys-TXuhj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3.us-east-2.amazonaws.com/alphadevelopment/blogs/1611456325712/image-0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ys-TXuhj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3.us-east-2.amazonaws.com/alphadevelopment/blogs/1611456325712/image-0.jpg" alt="Credits: https://unsplash.com/photos/D7bmnvGJA2Q "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I like being organized; I don’t like multitasking, instead I want to focus my resources and time on a single thing, especially if it’s something I really like. I have been in love with web development for a very long time now, but it wasn’t only until recently that I have started doing things as a web developer. It was because I wanted to find the right time to focus on web development and web development only. The result? I stalled for a good 5 years. I was so anxious to start doing things when I had free time, because I was scared I won’t be able to focus, while there are other things happening around. I thought that if I’m not able to give it my all on this, I wouldn’t be very good at it; and yes, I hate not being great at something I like. So I waited, and waited, for the perfect opportunity.&lt;/p&gt;

&lt;p&gt;After some time, I did find the time to focus on web development, because of the lockdowns, but the funny thing is, I am not the great developer I thought I’d turned out to be. Even though, I had all the time to learn, I wasn’t able to utilize all those hours, because there were burnouts and other circumstances. I was so late to find out that I couldn’t spend all my time on a single thing. Looking back, if I had only spent a single hour every day, for the past five years, I may have become a far greater developer than the one I am today.&lt;/p&gt;

&lt;p&gt;You see, in life, there are things we are afraid to conquer/face, because we are doubting our skills, capacity or simply the circumstances that we are in. But, if you think you have the means to do it, even just a &lt;strong&gt;fraction&lt;/strong&gt; of it, you have just got to &lt;strong&gt;DO IT&lt;/strong&gt;. As the mainstream saying goes, &lt;em&gt;small steps done consistently will lead you to great distances&lt;/em&gt;. Don’t belittle yourself if you are making small progress, what matters is &lt;strong&gt;you are still making progress&lt;/strong&gt;. Out of 7 billion people in this world, surely, there are a lot who wants to do the same thing as you. How do you separate yourself from them? You are the one who actually &lt;strong&gt;does&lt;/strong&gt; the thing.&lt;/p&gt;

&lt;p&gt;Life isn’t going backwards. It just keeps on going and going, and the time has passed is either time wasted or time well spent. And remember, in anything you want to do, &lt;strong&gt;JUST DO IT.&lt;/strong&gt; &lt;/p&gt;

</description>
      <category>motivation</category>
      <category>alphastory</category>
      <category>webdev</category>
    </item>
    <item>
      <title>PHP interview questions and answers for web developers</title>
      <author>Devinterview-io</author>
      <pubDate>Sun, 24 Jan 2021 09:14:15 +0000</pubDate>
      <link>https://dev.to/devinterview/php-interview-questions-and-answers-for-web-developers-4j11</link>
      <guid>https://dev.to/devinterview/php-interview-questions-and-answers-for-web-developers-4j11</guid>
      <description>&lt;p&gt;PHP is a general-purpose scripting language especially suited to web development. Here is a list of coding interview questions on PHP to help you get ready for your next technical interview in 2021.&lt;/p&gt;

&lt;p&gt;👉 You can check all 82 &lt;a href="https://devinterview.io/dev/php-interview-questions"&gt;PHP tech interview questions here&lt;/a&gt;  &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-what-is-the-use-of-iniset" class="anchor"&gt;
  &lt;/a&gt;
  🔹 1. What is the use of ini_set()?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;PHP allows the user to modify some of its settings mentioned in php.ini using ini_set(). This function requires two string arguments. First one is the name of the setting to be modified and the second one is the new value to be assigned to it.&lt;/p&gt;

&lt;p&gt;Given line of code will enable the display_error setting for the script if it’s disabled.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ini_set('display_errors', '1');&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We need to put the above statement, at the top of the script so that, the setting remains enabled till the end. Also, the values set via ini_set() are applicable, only to the current script. Thereafter, PHP will start using the original values from php.ini.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://github.com/Bootsity/cracking-php-interviews-book"&gt;github.com/Bootsity&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#2-what-is-the-difference-between-and-" class="anchor"&gt;
  &lt;/a&gt;
  🔹 2. What is the difference between == and ===?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  The operator &lt;code&gt;==&lt;/code&gt; casts between two different types if they are different&lt;/li&gt;
&lt;li&gt;  The &lt;code&gt;===&lt;/code&gt; operator performs a '&lt;em&gt;typesafe comparison&lt;/em&gt;'&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That means that it will only return true if both operands have the same type and the same value.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="c1"&gt;// 1 is an integer, "1" is a string&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;// "1" gets casted to an integer, which is 1&lt;/span&gt;
    &lt;span class="s2"&gt;"foo"&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;// both operands are strings and have the same value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/80646/how-do-the-php-equality-double-equals-and-identity-triple-equals-comp"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#3-what-is-the-return-type-of-a-function-that-doesnt-return-anything" class="anchor"&gt;
  &lt;/a&gt;
  🔹 3. What is the return type of a function that doesn't return anything?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;void&lt;/code&gt; which mean nothing.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://github.com/Bootsity/cracking-php-interviews-book"&gt;github.com/Bootsity&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#4-what-does-globals-mean" class="anchor"&gt;
  &lt;/a&gt;
  🔹 4. What does $GLOBALS mean?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$GLOBALS&lt;/code&gt; is associative array including references to all variables which are currently defined in the global scope of the script.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://www.guru99.com/php-interview-questions-answers.html"&gt;guru99.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#5-what-are-the-keys-amp-values-in-an-indexed-array" class="anchor"&gt;
  &lt;/a&gt;
  🔹 5. What are the keys &amp;amp; values in an indexed array?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;Consider:&lt;br&gt;
    Array ( [0] =&amp;gt; Hello [1] =&amp;gt; world [2] =&amp;gt; It's [3] =&amp;gt; a [4] =&amp;gt; beautiful [5] =&amp;gt; day)&lt;/p&gt;

&lt;p&gt;The keys of an indexed array are 0, 1, 2 etc. (the index values) and values are "Hello", "world", "It's", "beautiful", "day".&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://github.com/Bootsity/cracking-php-interviews-book"&gt;github.com/Bootsity&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#6-what-is-the-purpose-of-phpini-file" class="anchor"&gt;
  &lt;/a&gt;
  🔹 6. What is the purpose of php.ini file?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;The PHP configuration file, &lt;em&gt;php.ini&lt;/em&gt;, is the final and most immediate way to affect PHP's functionality. The php.ini file is read each time PHP is initialized.in other words, whenever httpd is restarted for the module version or with each script execution for the CGI version.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://github.com/Bootsity/cracking-php-interviews-book"&gt;github.com/Bootsity&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#7-how-can-you-pass-a-variable-by-reference" class="anchor"&gt;
  &lt;/a&gt;
  🔹 7. How can you pass a variable by reference?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;To be able to pass a variable by &lt;strong&gt;reference&lt;/strong&gt;, we use an &lt;em&gt;ampersand&lt;/em&gt; in front of it, as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$var1 = &amp;amp;amp;$var2&lt;/code&gt;&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://www.guru99.com/php-interview-questions-answers.html"&gt;guru99.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#8-is-multiple-inheritance-supported-in-php" class="anchor"&gt;
  &lt;/a&gt;
  🔹 8. Is multiple inheritance supported in PHP?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;PHP supports only single inheritance; it means that a class can be extended from only one single class using the keyword 'extended'.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://www.guru99.com/php-interview-questions-answers.html"&gt;guru99.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#9-what-is-stdclass-in-php" class="anchor"&gt;
  &lt;/a&gt;
  🔹 9. What is stdClass in PHP?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;stdClass&lt;/code&gt; is just a generic 'empty' class that's used when casting other types to objects. &lt;code&gt;stdClass&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; the base class for objects in PHP. This can be demonstrated fairly easily:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="nv"&gt;$foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$foo&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="n"&gt;stdClass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="s1"&gt;'Y'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;'N'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// outputs 'N'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It is useful for anonymous objects, dynamic properties, etc.&lt;/p&gt;

&lt;p&gt;An easy way to consider the &lt;code&gt;StdClass&lt;/code&gt; is as an alternative to associative array. See this example below that shows how &lt;code&gt;json_decode()&lt;/code&gt; allows to get an StdClass instance or an associative array. Also but not shown in this example, &lt;code&gt;SoapClient::__soapCall&lt;/code&gt; returns an &lt;code&gt;StdClass&lt;/code&gt; instance.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//Example with StdClass&lt;/span&gt;
    &lt;span class="nv"&gt;$json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'{ "foo": "bar", "number": 42 }'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$stdInstance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$json&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$stdInstance&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;PHP_EOL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//"bar"&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$stdInstance&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;PHP_EOL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//42&lt;/span&gt;

    &lt;span class="c1"&gt;//Example with associative array&lt;/span&gt;
    &lt;span class="nv"&gt;$array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;PHP_EOL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//"bar"&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'number'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;PHP_EOL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/931407/what-is-stdclass-in-php"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#10-in-php-objects-are-they-passed-by-value-or-by-reference" class="anchor"&gt;
  &lt;/a&gt;
  🔹 10. In PHP, objects are they passed by value or by reference?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;In PHP, objects passed by &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://www.guru99.com/php-interview-questions-answers.html"&gt;guru99.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#11-what-is-pdo-in-php" class="anchor"&gt;
  &lt;/a&gt;
  🔹 11. What is PDO in PHP?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;PDO&lt;/strong&gt; stands for PHP Data Object.&lt;/p&gt;

&lt;p&gt;It is a set of PHP extensions that provide a core PDO class and database, specific drivers. It provides a vendor-neutral, lightweight, data-access abstraction layer. Thus, no matter what database we use, the function to issue queries and fetch data will be same. It focuses on data access abstraction rather than database abstraction.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://github.com/Bootsity/cracking-php-interviews-book"&gt;github.com/Bootsity&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#12-is-there-a-difference-between-isset-and-empty" class="anchor"&gt;
  &lt;/a&gt;
  🔹 12. Is there a difference between isset and !empty?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;empty&lt;/code&gt; is more or less shorthand for&lt;code&gt;!isset($foo) || !$foo&lt;/code&gt;, and &lt;code&gt;!empty&lt;/code&gt; is analogous to &lt;code&gt;isset($foo) &amp;amp;amp;&amp;amp;amp; $foo&lt;/code&gt;. &lt;code&gt;empty&lt;/code&gt; is the same as &lt;code&gt;!$foo&lt;/code&gt;, but doesn't throw warnings if the variable doesn't exist. That's the main point of this function: do a boolean comparison without worrying about the variable being set.&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/4559925/why-check-both-isset-and-empty"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#13-differentiate-between-echo-and-print" class="anchor"&gt;
  &lt;/a&gt;
  🔹 13. Differentiate between echo and print()
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;echo&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; are more or less the same. They are both used to output data to the screen.&lt;/p&gt;

&lt;p&gt;The differences are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  echo has no return value while print has a return value of 1 so it can be used in expressions.&lt;/li&gt;
&lt;li&gt;  echo can take multiple parameters (although such usage is rare) while print can take one argument.&lt;/li&gt;
&lt;li&gt;  echo is faster than print.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://github.com/Bootsity/cracking-php-interviews-book"&gt;github.com/Bootsity&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#14-what-is-the-differences-between-a-b-and-a-b" class="anchor"&gt;
  &lt;/a&gt;
  🔹 14. What is the differences between $a != $b and $a !== $b?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;!=&lt;/code&gt; means &lt;em&gt;inequality&lt;/em&gt; (TRUE if $a is not equal to $b) and &lt;code&gt;!==&lt;/code&gt; means &lt;em&gt;non-identity&lt;/em&gt; (TRUE if $a is not identical to $b).&lt;/p&gt;



&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://www.guru99.com/php-interview-questions-answers.html"&gt;guru99.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;








&lt;h2&gt;
  &lt;a href="#15-what-does-the-var-keyword-mean-in-php" class="anchor"&gt;
  &lt;/a&gt;
  🔹 15. What does the 'var' keyword mean in PHP?
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#answer" class="anchor"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h3&gt;

&lt;p&gt;It's for declaring class member variables in PHP4, and is no longer needed. It will work in PHP5, but will raise an &lt;strong&gt;E_STRICT&lt;/strong&gt; warning in PHP from version 5.0.0 up to version 5.1.2, as of when it was deprecated. Since PHP 5.3, var has been un-deprecated and is a synonym for 'public'.&lt;/p&gt;

&lt;p&gt;Consider:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// or you can use public like...&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'y'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//this is also a class member variables.&lt;/span&gt;
        &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;span&gt;&lt;em&gt;Source:&lt;/em&gt; &lt;span&gt;&lt;a href="https://stackoverflow.com/questions/1206105/what-does-php-keyword-var-do"&gt;stackoverflow.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;   &lt;/p&gt;









&lt;p&gt;Thanks 🙌 for reading and good luck on your next tech interview!&lt;br&gt;&lt;br&gt;
Explore 3800+ dev interview question here 👉 &lt;a href="https://devinterview.io/"&gt;Devinterview.io&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>career</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
