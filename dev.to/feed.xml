<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Backdrop-filters!</title>
      <author>Ellaine Tolentino</author>
      <pubDate>Sun, 03 Oct 2021 23:17:10 +0000</pubDate>
      <link>https://dev.to/tolentinoel/backdrop-filters-3ec8</link>
      <guid>https://dev.to/tolentinoel/backdrop-filters-3ec8</guid>
      <description>&lt;p&gt;Hi! This blog is just to show recent backdrop-filters I've used!&lt;br&gt;
I am no expert but this is just me sharing what I've encountered in the hopes to help other newbie devs like me that might have an interest testing these effects out!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#backdropfilter"&gt;
  &lt;/a&gt;
  backdrop-filter:
&lt;/h2&gt;

&lt;p&gt;While filter applies the effect on the entire element including its children, backdrop-filter is more specific since it only applies as a ‘background effect’ or anything behind that element.&lt;/p&gt;

&lt;p&gt;It is limited on compatibility, so please bare with me since almost all of these would still need a workaround to apply the same effect.&lt;/p&gt;



&lt;p&gt;There are multiple values which backdrop-filter may be:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#blur"&gt;
  &lt;/a&gt;
  blur()
&lt;/h3&gt;

&lt;p&gt;Starting of with blur, which values can be of pixels or rem. The length value refers to the length of pixels blurring together hence, longer the length the blurry it is.&lt;br&gt;
I have examples on blur application on my previous blog(&lt;a href="https://dev.to/tolentinoel/frosted-glass-on-css-37bg"&gt;Frosted glass on CSS&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OZwyd0Yb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd7pq3h8nrx19m98zns2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OZwyd0Yb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd7pq3h8nrx19m98zns2.png" alt="blur example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other workarounds for other browser were also discussed on &lt;a href="https://stackoverflow.com/questions/38145368/css-workaround-to-backdrop-filter"&gt;stackoverflow&lt;/a&gt; by other fellow devs!&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#sepia"&gt;
  &lt;/a&gt;
  sepia()
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;sepia&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;90&lt;/span&gt;&lt;span class="o"&gt;%)&lt;/span&gt; 

&lt;span class="c"&gt;/* Can be an IE &amp;amp; Firefox fallback: */&lt;/span&gt;
&lt;span class="c"&gt;/* Not exactly the same but definitely can be altered for a more similar effect*/&lt;/span&gt;
&lt;span class="nt"&gt;background&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#715515&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
&lt;span class="nt"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Y9n9qZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnyvkt8arx3tenr9aem6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Y9n9qZQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnyvkt8arx3tenr9aem6.png" alt="Sepia example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Workaround:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yX5P-XUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1u7vhw2wf0xx4pauxb5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yX5P-XUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1u7vhw2wf0xx4pauxb5.png" alt="Sepia workaround"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#grayscale"&gt;
  &lt;/a&gt;
  grayscale()
&lt;/h3&gt;

&lt;p&gt;Values can be a number or percentage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;sepia&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%);&lt;/span&gt;
&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;sepia&lt;/span&gt;&lt;span class="o"&gt;(.&lt;/span&gt;&lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* 50% of the effect */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ov3RP6u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfzbtzjvqx0x6gldoiid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ov3RP6u0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfzbtzjvqx0x6gldoiid.png" alt="grayscale"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#huerotate"&gt;
  &lt;/a&gt;
  hue-rotate()
&lt;/h3&gt;

&lt;p&gt;I think this is my current favorite effect. This effect changes the whole hue of the image or background color depending on the angle values!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;hue-rotate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;220&lt;/span&gt;&lt;span class="nt"&gt;deg&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* same effect as -140deg */&lt;/span&gt;
&lt;span class="nt"&gt;backdrop-filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;hue-rotate&lt;/span&gt;&lt;span class="o"&gt;(.&lt;/span&gt;&lt;span class="err"&gt;61&lt;/span&gt;&lt;span class="nt"&gt;turn&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c"&gt;/* same effect as 220deg */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j7alPjgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s54a8bq3l6ewrp3o573b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j7alPjgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s54a8bq3l6ewrp3o573b.png" alt="hue-rotate"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you wanted to take a peek of each's compatibility on browsers, check out &lt;a href="https://caniuse.com/"&gt;caniuse.com&lt;/a&gt; and browse around for any css compatibility you wanna know about.&lt;/p&gt;

&lt;p&gt;There are more backdrop-filter effects you should try! Check out these CodePens by other creators!&lt;/p&gt;
Simon's CodePen



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/typo3-freelancer/embed/YzGQMmP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
Mahdi's CodePen



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/hamidimahdi92/embed/oNZZdjg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Resources that every developer should know.</title>
      <author>Ivan Zadivar</author>
      <pubDate>Sun, 03 Oct 2021 22:17:24 +0000</pubDate>
      <link>https://dev.to/ivanz123/resources-that-every-developer-should-know-3jkd</link>
      <guid>https://dev.to/ivanz123/resources-that-every-developer-should-know-3jkd</guid>
      <description>&lt;p&gt;Hi guys! I have created this publication, because I wanted to share some tools or resources that I use in my day to day when I am developing an app. And some of these may work for you. Get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#online-code-editors"&gt;
  &lt;/a&gt;
  Online Code Editors.
&lt;/h2&gt;

&lt;p&gt;Sometimes when we are developing an app, we need to perform a process, create an algorithm, and we do not want to perform in our project. We have the alternative of creating a new project and testing. But sometimes we need it to be fast, so online code editors are not great.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codesandbox"&gt;
  &lt;/a&gt;
  Codesandbox.
&lt;/h3&gt;

&lt;p&gt;Is defined as "Where teams build faster, together&lt;br&gt;
Create, share, and get feedback with collaborative sandboxes for rapid web development". Visit the following link: &lt;a href="https://codesandbox.io"&gt;https://codesandbox.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vjjfaSLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd5bhjau2t4e241k14yx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjjfaSLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd5bhjau2t4e241k14yx.png" alt="Codesandbox Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codeopen"&gt;
  &lt;/a&gt;
  Codeopen.
&lt;/h3&gt;

&lt;p&gt;Is defined as "The best place to build, test, and discover front-end code. CodePen is a social development environment for front-end designers and developers. Build and deploy a website, show off your work, build test cases to learn and debug, and find inspiration.". Visit the following link: &lt;a href="https://codepen.io"&gt;https://codepen.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PO8LBkCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hn869rcgkv5hstfxapj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PO8LBkCW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hn869rcgkv5hstfxapj.png" alt="Codeopen Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stackblitz"&gt;
  &lt;/a&gt;
  Stackblitz.
&lt;/h3&gt;

&lt;p&gt;Is defined as "The fastest, most secure dev environment on the planet.". Visit the following link: &lt;a href="https://stackblitz.com"&gt;https://stackblitz.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YziwlJpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrgi12eor2jzwlaraijk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YziwlJpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xrgi12eor2jzwlaraijk.png" alt="Stackblitz Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other online code editors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codeanywhere.com"&gt;https://codeanywhere.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jsfiddle.net"&gt;https://jsfiddle.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codeshare.io"&gt;https://codeshare.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing.
&lt;/h2&gt;

&lt;p&gt;When we have finished our app, it is time to test that everything we have done works correctly, and prevent things from breaking once in production.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cypressio"&gt;
  &lt;/a&gt;
  Cypress.io
&lt;/h3&gt;

&lt;p&gt;Cypress is a front-end automated testing tool built for the modern web. Cypress is based on a new architecture and runs on the same execution cycle as the application under test. As a result, Cypress provides better, faster, and more reliable tests for everything that runs in a browser. Cypress works on any front-end website or framework. Visit the following link: &lt;a href="https://www.cypress.io"&gt;https://www.cypress.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88FrdrCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8hj9xeucl2xyjmpz659.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88FrdrCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8hj9xeucl2xyjmpz659.png" alt="Cypress.io Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-platform"&gt;
  &lt;/a&gt;
  API Platform.
&lt;/h2&gt;

&lt;p&gt;I use this tool when I am creating an API and I do not want to develop the Frontend at the time of API development, I know that there are extensions in VSCode such as REST Client. But I want to share some programs with you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#postman"&gt;
  &lt;/a&gt;
  Postman.
&lt;/h3&gt;

&lt;p&gt;Postman is an API platform for building and using APIs. Postman simplifies each step of the API lifecycle and streamlines collaboration so you can create better APIs—faster. You can download in the following link: &lt;a href="https://www.postman.com"&gt;https://www.postman.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tcjSpBze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzosysvkhih5fo50fcs8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tcjSpBze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzosysvkhih5fo50fcs8.png" alt="Postman Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#insomnia"&gt;
  &lt;/a&gt;
  Insomnia.
&lt;/h3&gt;

&lt;p&gt;Is defined as "Deliver high quality APIs through standards and collaboration with the Insomnia API design platform". You can download in the following link: &lt;a href="https://insomnia.rest"&gt;https://insomnia.rest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--atWxoo9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4w5jaiyrkl7y5kx85b3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atWxoo9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4w5jaiyrkl7y5kx85b3.png" alt="Insomnia Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#email-testing"&gt;
  &lt;/a&gt;
  Email Testing.
&lt;/h2&gt;

&lt;p&gt;Many times when we want to incorporate email verification for our users, or we are developing an ecommerce, we send offers to our clients we need to send emails. Here are some tools that allow us to test this entire process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mailtrap"&gt;
  &lt;/a&gt;
  Mailtrap.
&lt;/h3&gt;

&lt;p&gt;This is one of the best tools that I have used when I am developing an app that needs to send emails. Click in the following link: &lt;a href="https://mailtrap.io"&gt;https://mailtrap.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kAYifqBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jpo5uiu16ycxwu6zej8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kAYifqBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jpo5uiu16ycxwu6zej8.png" alt="Mailtrap Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sendgrid"&gt;
  &lt;/a&gt;
  Sendgrid.
&lt;/h3&gt;

&lt;p&gt;Now sendgrid brings new functionalities, and one of these is to be able to test our emails before going to production. Click here: &lt;a href="https://sendgrid.com/solutions/email-marketing/email-testing"&gt;https://sendgrid.com/solutions/email-marketing/email-testing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RJrB1WDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkmjx7m9z92jfnu5kgur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJrB1WDb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkmjx7m9z92jfnu5kgur.png" alt="Senedgrid Testing Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other tools.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.htmlemailcheck.com"&gt;https://www.htmlemailcheck.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mock-data"&gt;
  &lt;/a&gt;
  Mock Data.
&lt;/h2&gt;

&lt;p&gt;Data generators. Many times when we are developing an app, we need to generate false records to be able to carry out tests, and check that everything works perfectly. Imagine that you are creating a virtual store, and it contains products, categories, customers, promotions, among others. If you realize there are many things, and it is a tedious and boring task, enter all these data. With these tools, you will take off that burden.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mockaroo"&gt;
  &lt;/a&gt;
  Mockaroo.
&lt;/h3&gt;

&lt;p&gt;Mockaroo is a website where you can create thousands of test data in just seconds, modify the fields that your database models will have and more ... Personally, this is the one I use the most. Visit the following link: &lt;a href="https://www.mockaroo.com"&gt;https://www.mockaroo.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hFOqNnDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i05irw8f6fg7oz2fi5x0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hFOqNnDJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i05irw8f6fg7oz2fi5x0.png" alt="Image Mockaroo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generatedata"&gt;
  &lt;/a&gt;
  Generatedata.
&lt;/h3&gt;

&lt;p&gt;Generatedata, on a website that allows you to create false data immediately, you can obtain streets, addresses, names, telephone numbers. In addition, to specify is what format you want, be it JSON, HTML, SQL and more. Visit the following link: &lt;a href="https://generatedata.com"&gt;https://generatedata.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qwn43MHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfjcy4ys18j9shz7eeon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qwn43MHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfjcy4ys18j9shz7eeon.png" alt="Generatedata image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other generate data.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mockapi.io"&gt;https://mockapi.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://designer.mocky.io"&gt;https://designer.mocky.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.onlinedatagenerator.com"&gt;https://www.onlinedatagenerator.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.randomuser.me"&gt;https://www.randomuser.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images.
&lt;/h2&gt;

&lt;p&gt;It is very common to add images to our websites, but sometimes we want to have images in high definition. That is why I leave you some of the websites with the best images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#undraw"&gt;
  &lt;/a&gt;
  Undraw.
&lt;/h3&gt;

&lt;p&gt;Allows you to add svg images. In addition, it allows you to make aesthetic changes so that they are in sync with our website. Visit following link: &lt;a href="https://undraw.co/illustrations"&gt;https://undraw.co/illustrations&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uohDDr5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uquykjkgag4adtgr7qjy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uohDDr5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uquykjkgag4adtgr7qjy.png" alt="Undraw Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pexels"&gt;
  &lt;/a&gt;
  Pexels.
&lt;/h3&gt;

&lt;p&gt;This is one of the websites that I use the most to add images to my websites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B3Txphuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgsgelxy6ftal9xxbnc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B3Txphuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jlgsgelxy6ftal9xxbnc.png" alt="Pexels Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uiavatars"&gt;
  &lt;/a&gt;
  UiAvatars.
&lt;/h3&gt;

&lt;p&gt;If you've ever wondered how Google can add an avatar with your first and last name, take a look here: &lt;a href="https://ui-avatars.com"&gt;https://ui-avatars.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3JEaQus9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpwiky6jw660d257ux8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3JEaQus9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpwiky6jw660d257ux8t.png" alt="UiAvatars Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#unsplash"&gt;
  &lt;/a&gt;
  Unsplash.
&lt;/h3&gt;

&lt;p&gt;Is defined as "The internet’s source of freely-usable images.&lt;br&gt;
Powered by creators everywhere". Visit the following link: &lt;a href="https://unsplash.com"&gt;https://unsplash.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFMQbFop--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/111j5ed2474j1dxqp3qq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZFMQbFop--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/111j5ed2474j1dxqp3qq.png" alt="Unsplash Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pixabay.com"&gt;https://pixabay.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://picsum.photos"&gt;https://picsum.photos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#image-compression"&gt;
  &lt;/a&gt;
  Image Compression.
&lt;/h2&gt;

&lt;p&gt;There are times that our images are too heavy, and that slows down the loading of our website, now is the time to minify our images. Or use Lazy-Loading.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tinypng"&gt;
  &lt;/a&gt;
  TinyPNG.
&lt;/h3&gt;

&lt;p&gt;This site allows us to compress images of all resolutions and extensions. Click in the following link: &lt;a href="https://tinypng.com"&gt;https://tinypng.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ynmzi139--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p832bgykk2q0dlb5lku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ynmzi139--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p832bgykk2q0dlb5lku.png" alt="TinyPNG Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ezgif.com/optipng"&gt;https://ezgif.com/optipng&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#favicon-generators"&gt;
  &lt;/a&gt;
  Favicon generators.
&lt;/h2&gt;

&lt;p&gt;When we are about to deploy an application (or in development) we want to see an icon on the page. This icon is as follows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--92PpeM3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6s08up4d0iemv9ag3z8r.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--92PpeM3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6s08up4d0iemv9ag3z8r.jpg" alt="Favivon example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#faviconico"&gt;
  &lt;/a&gt;
  Favicon.ico
&lt;/h3&gt;

&lt;p&gt;The only favicon generator you need for your next project. Quickly generate your favicon from text, image, or choose from hundreds of emojis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YKt3VY1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32d00xtramj7ypcv9qjc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YKt3VY1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/32d00xtramj7ypcv9qjc.png" alt="Favicon.io Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Others websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.favicon-generator.org"&gt;https://www.favicon-generator.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realfavicongenerator.net"&gt;https://realfavicongenerator.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.favicon.cc"&gt;https://www.favicon.cc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#colors"&gt;
  &lt;/a&gt;
  Colors.
&lt;/h2&gt;

&lt;p&gt;The safest thing is that you already know these pages, but I'll leave them here anyway.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flatuicolors"&gt;
  &lt;/a&gt;
  Flatuicolors.
&lt;/h3&gt;

&lt;p&gt;In this page you will find beautiful colors for adding in your page, website or webapp. Visit the following link: &lt;a href="https://flatuicolors.com"&gt;https://flatuicolors.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o66EjZAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6b3ylk9xuc6942cba67v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o66EjZAA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6b3ylk9xuc6942cba67v.png" alt="Flatuicolors Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uigradients"&gt;
  &lt;/a&gt;
  UiGradients.
&lt;/h3&gt;

&lt;p&gt;This site, I use it normally when I need to have colors with gradients. Visit the following link: &lt;a href="https://uigradients.com"&gt;https://uigradients.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LnkB6n_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg153t1krf97eqvdtmm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LnkB6n_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg153t1krf97eqvdtmm9.png" alt="UiGradient Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#htmlcolorcodes"&gt;
  &lt;/a&gt;
  Htmlcolorcodes.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4tblgc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otp53ztexczmllvvya80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4tblgc3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otp53ztexczmllvvya80.png" alt="HtmlColorCodes image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://htmlcolors.com"&gt;https://htmlcolors.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.webfx.com/web-design/color-picker"&gt;https://www.webfx.com/web-design/color-picker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/colors/colors_picker.asp"&gt;https://www.w3schools.com/colors/colors_picker.asp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#icons"&gt;
  &lt;/a&gt;
  Icons.
&lt;/h2&gt;

&lt;p&gt;When we are developing an application we need to add icons to our buttons, card, toolbar and others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boxicons"&gt;
  &lt;/a&gt;
  Boxicons.
&lt;/h3&gt;

&lt;p&gt;On this site you will find a lot of icons to add to your components. Click in the following link: &lt;a href="https://boxicons.com"&gt;https://boxicons.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_lHyw3PG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88lfd5zni0obemhddm2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lHyw3PG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88lfd5zni0obemhddm2t.png" alt="Boxicons Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#font-awesome"&gt;
  &lt;/a&gt;
  Font Awesome.
&lt;/h3&gt;

&lt;p&gt;Well, every developer who is a few weeks old knows about this tool. 😂😂😂 I leave the link: &lt;a href="https://fontawesome.com"&gt;https://fontawesome.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0-m1N-vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4g2nj8cfwm7egz8h3p4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0-m1N-vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4g2nj8cfwm7egz8h3p4.png" alt="Font Awesome Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#google-icons"&gt;
  &lt;/a&gt;
  Google Icons.
&lt;/h3&gt;

&lt;p&gt;Google also offers very nice icons, it also allows filtering these by categories, names, etc; so that the icon we are looking for is faster. Click here: &lt;a href="https://fonts.google.com/icons"&gt;https://fonts.google.com/icons&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7_bl0S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dknefm2h6dm8fu2t9yaf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7_bl0S2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dknefm2h6dm8fu2t9yaf.png" alt="Google Icons Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.flaticon.com"&gt;https://www.flaticon.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://icons8.com"&gt;https://icons8.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#text-generators"&gt;
  &lt;/a&gt;
  Text generators.
&lt;/h2&gt;

&lt;p&gt;The text generator is very useful when we are developing an application and we need to add filler text to see how it is being. And the truth is that it is quite tedious if we add it, especially when it is a large text. Here are some websites:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loremipsumio"&gt;
  &lt;/a&gt;
  Loremipsum.io
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eb76dbic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0a4olhcsmnklvfza8mi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eb76dbic--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0a4olhcsmnklvfza8mi.png" alt="Image Lorem Ipsum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lorem Ipsum is a placeholder text commonly used in the graphics, graphics, and publishing industries to preview visual layouts and mockups. Click in the following link: &lt;a href="https://loremipsum.io"&gt;https://loremipsum.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other websites.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lipsum.com"&gt;https://www.lipsum.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getlorem.com"&gt;https://getlorem.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.webfx.com/tools/lorem-ipsum-generator"&gt;https://www.webfx.com/tools/lorem-ipsum-generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the time of making this post, they are the tools that I use in my day to day, at least the one I remember. If there are tools that you use, do not forget to comment, which is very helpful for all of us to grow as a community. Regards and until next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#follow-me-on-social-networks"&gt;
  &lt;/a&gt;
  Follow me on social networks.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;🎉 Twitter: &lt;a href="https://twitter.com/ToSatn2"&gt;https://twitter.com/ToSatn2&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;💡 Github: &lt;a href="https://github.com/IvanZM123"&gt;https://github.com/IvanZM123&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>tooling</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Do it in Keras! - Hacktoberfest</title>
      <author>Sebastian Ponce</author>
      <pubDate>Sun, 03 Oct 2021 22:09:39 +0000</pubDate>
      <link>https://dev.to/sebaspv/do-it-in-keras-hacktoberfest-4g2h</link>
      <guid>https://dev.to/sebaspv/do-it-in-keras-hacktoberfest-4g2h</guid>
      <description>&lt;h3&gt;
  &lt;a href="#modern-deep-learning-architectures-and-tasks-all-implemented-in-keras"&gt;
  &lt;/a&gt;
  Modern deep learning architectures and tasks, all implemented in Keras
&lt;/h3&gt;

&lt;p&gt;Have you ever been in a situation where you scroll through forums, reddit, journal posts or even 5 year old github repos trying to find an example for a Deep Learning task that you want to implement using Python and Keras?&lt;/p&gt;

&lt;p&gt;Is your code not working because the original code was outdated?&lt;/p&gt;

&lt;p&gt;Are you tired of always seeing the same benchmark datasets without the possibility of implementing your own?&lt;/p&gt;

&lt;p&gt;Do you like to contribute to the spread of Deep Learning and want to implement your own examples in Keras?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Well, then Do it in Keras is for you!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-do-it-in-keras"&gt;
  &lt;/a&gt;
  What is Do it in Keras?
&lt;/h3&gt;

&lt;p&gt;Do it in Keras is a collection of easy to use Jupyter Notebooks hosted in Github which have various implementations of Deep Learning with custom datasets and future exercises for you to learn the most popular Deep Learning library: Keras.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-i-contribute-to-it"&gt;
  &lt;/a&gt;
  How do I contribute to it?
&lt;/h3&gt;

&lt;p&gt;Do it in Keras is now participating in Hacktoberfest, so you can not only learn a lot more about Keras and Open Source, but you can also win a lot of cool prizes!&lt;/p&gt;

&lt;p&gt;If you've never heard about Hacktoberfest, you can check it out &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To contribute to Do it in Keras, you only need to make a pull request on the official &lt;a href="https://github.com/sebaspv/do-it-in-keras"&gt;Do it in Keras repository&lt;/a&gt;. Anything related to Deep Learning with Keras helps, and you can also upload your own implementation of a Deep Learning task.&lt;/p&gt;

</description>
      <category>deeplearning</category>
      <category>jupyter</category>
      <category>machinelearning</category>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>The React Lifecycle</title>
      <author>Thomas(Tripp) White </author>
      <pubDate>Sun, 03 Oct 2021 22:09:31 +0000</pubDate>
      <link>https://dev.to/turpp/the-react-lifecycle-3635</link>
      <guid>https://dev.to/turpp/the-react-lifecycle-3635</guid>
      <description>&lt;p&gt;Wait! React has a lifecycle? Is this the web form of the Terminator? No humankind is safe! React is such a great frontend tool. For those unaware, React uses components to control what is rendered on the screen for the user. If you want to learn more about how React controls this with the Virtual DOM check out my article &lt;a href="https://dev.to/turpp/what-is-the-virtual-dom-in-react-3afn"&gt;What is the Virtual DOM in React&lt;/a&gt;. React Class Components have a built in lifecycle that gives them even more utility. Every react component has 3 phases of its life. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mounting&lt;/li&gt;
&lt;li&gt;Updating&lt;/li&gt;
&lt;li&gt;Unmounting&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As a developer we have access to unique methods in each phase of the components lifecycle. In this article I will discuss what each phase is and also some of the common methods we have access to. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mounting"&gt;
  &lt;/a&gt;
  Mounting
&lt;/h2&gt;

&lt;p&gt;This is the very first phase in a components life. The lifecycle methods included in this phase are designed to create/setup and put the component in view. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;constructor()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;very first lifecycle method called&lt;/li&gt;
&lt;li&gt;sets the initial state of the component and binds event handler methods&lt;/li&gt;
&lt;li&gt;if there is no state or methods to bind you don’t need to include this in your component&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;render()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt; only required method in a class component&lt;/li&gt;
&lt;li&gt; this is where you place your JSX to get rendered onto the DOM.&lt;/li&gt;
&lt;li&gt; needs to be pure in nature. Meaning that it returns the same thing every time under the same circumstances. If you need to interact with the browser or change state make sure to use other lifecycle methods and not &lt;code&gt;render()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;componentDidMount()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;called right after the component is rendered.&lt;/li&gt;
&lt;li&gt;since its called after its rendered you have access to DOM nodes.&lt;/li&gt;
&lt;li&gt;place to make network request to APIs etc.
only called on initial rendering&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#updating"&gt;
  &lt;/a&gt;
  Updating
&lt;/h2&gt;

&lt;p&gt;We know that when state or props change in a component it will trigger a re-render. The lifecycle methods in this phase gives us control over the re-render and allows the component to update.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;called when new props are received&lt;/li&gt;
&lt;li&gt;used to let React know if the new props should trigger a re-render or not.&lt;/li&gt;
&lt;li&gt;defaults to true and triggers a re-render and if returns false will not re-render&lt;/li&gt;
&lt;li&gt;used for performance optimization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;render()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;automatically gets called&lt;/li&gt;
&lt;li&gt;same as before. Puts the updated component on the DOM.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;componentDidUpdate()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;gets called after the re-render&lt;/li&gt;
&lt;li&gt;works just like &lt;code&gt;componentDidMount()&lt;/code&gt; but gets called during updating phase and re-renders&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#unmounting"&gt;
  &lt;/a&gt;
  Unmounting
&lt;/h2&gt;

&lt;p&gt;This phase happens as our component rides off into the sunset. This is were we would preform any clean up operations. Once this phase is complete this component will be destroyed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;componentWillUnmount()&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;invoked right before a component is unmounted&lt;/li&gt;
&lt;li&gt;used to preform any clean up operations that was created earlier. (timers, network request, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#functional-components-and-hooks"&gt;
  &lt;/a&gt;
  Functional Components and Hooks
&lt;/h2&gt;

&lt;p&gt;Lifecycle methods used to only be available to class components. This has since changed with the introduction of React Hooks. We use the &lt;code&gt;useEffect&lt;/code&gt; hook to access these methods. Accessing these lifecycle methods is a bit different from class components. I may do a separate article about this in the future but in the mean time I encourage you to check out the React documentation on this &lt;a href="https://reactjs.org/docs/hooks-effect.html"&gt;https://reactjs.org/docs/hooks-effect.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thats React components lifecycle in a nutshell. There are more lifecycle methods in each of the phases, but they are used for very specific cases. To learn more detail about the above methods or to dig a little deeper on the more rare lifecycle methods check out the &lt;a href="https://reactjs.org/docs/state-and-lifecycle.html"&gt;React documentation&lt;/a&gt;. &lt;br&gt;
Knowing more about the different phases of a component and the lifecycle methods associated with each phase will do nothing but make you a stronger React developer.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Writing my own minimal shell in C - Part 1 (The constraints)</title>
      <author>harsh banthiya</author>
      <pubDate>Sun, 03 Oct 2021 21:38:52 +0000</pubDate>
      <link>https://dev.to/harshbanthiya/writing-my-own-minimal-shell-in-c-part-1-the-constraints-20cg</link>
      <guid>https://dev.to/harshbanthiya/writing-my-own-minimal-shell-in-c-part-1-the-constraints-20cg</guid>
      <description>&lt;h1&gt;
  &lt;a href="#day-1-understanding-the-problem"&gt;
  &lt;/a&gt;
  Day 1 - Understanding the Problem.
&lt;/h1&gt;

&lt;p&gt;This is my attempt to replicate the behavior of BASH or (Bourne again shell) command line interpreter for a school project. Before we get into how to get into the solution and the general approach of making the shell. Let's first look at all the constraints and what is expected from this minimal shell. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-and-foremost-standard-library-functions-i-am-allowed-to-use"&gt;
  &lt;/a&gt;
  First and foremost, standard library functions I am allowed to use.
&lt;/h2&gt;

&lt;p&gt;Below is the list of the external functions / standard library functions that I am allowed to use, if I need any another function I must code it myself. Please see the man pages of these functions if you do not recognize them. &lt;/p&gt;

&lt;p&gt;readline, rl_clear_history, rl_on_new_line, rl_replace_line, rl_redisplay, add_history, printf, malloc, free, write, access, open, read, close, fork, wait, waitpid, wait3, wait4, signal, sigaction, kill, exit, getcwd, chdir, stat, lstat, fstat, unlink, execve, dup, dup2, pipe, opendir, readdir, closedir, strerror, perror, isatty, ttyname, ttyslot, ioctl, getenv, tcsetattr, tcgetattr, tgetflag, tgetnum, tgetstr, tgoto, tputs&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#expectations-from-the-shell-what-must-this-minimal-shell-do"&gt;
  &lt;/a&gt;
  Expectations from the shell, what must this minimal shell do
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It must implement the builtin shell functions &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; echo with the option -n&lt;/li&gt;
&lt;li&gt; cd with only a relative or absolute path&lt;/li&gt;
&lt;li&gt; pwd with no options &lt;/li&gt;
&lt;li&gt; export with no options &lt;/li&gt;
&lt;li&gt; unset with no options &lt;/li&gt;
&lt;li&gt; env with no options or arguments &lt;/li&gt;
&lt;li&gt; exit with no options &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redirections &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &amp;lt; should redirect input&lt;/li&gt;
&lt;li&gt; &amp;gt; should redirect output &lt;/li&gt;
&lt;li&gt; &amp;lt;&amp;lt; read input from the current source until a line containing only the delimiter is even. &lt;/li&gt;
&lt;li&gt; &amp;gt;&amp;gt; should redirect output in append mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pipes &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; | The output of each command in the pipeline is connected via a pipe to the input of the next command&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Environment Variables ($ followed by characters ) should expand to their values.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$? should expand to the exit status of the most recently executed foreground pipeline&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For some simplification, the shell must not interpret unclosed quotes or unspecified special characters like '\' or ';' etc&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The shell must show a prompt waiting for next command, have a working history and must only use one global variable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ctrl-C ctrl-D ctrl-\ should work like bash. When interactive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; ctrl-C print a new prompt on a newline&lt;/li&gt;
&lt;li&gt; ctrl-D exit the shell.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-begin-researching-the-problems-and-the-areas-of-operating-system-i-am-less-familiar-with-in-the-next-part-of-this-series-i-will-break-down-the-general-overview-of-the-design-and-i-will-try-to-make-it-super-modular"&gt;
  &lt;/a&gt;
  Lets begin researching the problems and the areas of Operating System I am less familiar with, in the next part of this series I will break down the general overview of the design and I will try to make it super modular.
&lt;/h2&gt;

</description>
      <category>c</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AWS Database Services Fundamentals</title>
      <author>John Bulla</author>
      <pubDate>Sun, 03 Oct 2021 21:14:53 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-database-services-fundamentals-4ml6</link>
      <guid>https://dev.to/aws-builders/aws-database-services-fundamentals-4ml6</guid>
      <description>&lt;p&gt;A database is a collection of information that is organized in a way that can be easily accessed, managed, and updated. Computer databases often contain record sets or data files, which contain information about sales transactions or interactions with specific customers. Databases are important back-end systems used to store, manage, update, and analyze data for all types of applications, from small back-office systems to consumer and mobile web applications on a global scale. Most databases use structured query language (SQL) to write and query data.&lt;/p&gt;

&lt;p&gt;Databases have evolved dramatically since their inception in the early 1960s. Navigation databases, such as the hierarchical database (which was based on a tree-like model and only allowed a one-to-many relationship), and the network database (a more flexible model that allowed multiple relationships), were the original systems used to store and manipulate data. Although simple, these early systems were inflexible. In the 1980s, relational databases became popular, followed by object-oriented databases in the 1990s. More recently, NoSQL databases emergedin response to the growth of the internet and the need for greater speed and processing of unstructured data. Today, the cloud database and separate databases are opening up new ways as to how to collect, store, manage and use the data.&lt;/p&gt;

&lt;p&gt;According to their type, the databases can be classified as relational and non-relational databases. Relational databases became popular in the eighties, the elements of a relational database are organized as a set of tables with columns and rows. Relational database technology provides the most efficient and flexible way to access structured information. NoSQL or non-relational databases allow unstructured and semi-structured data to be stored and manipulated, unlike a relational database, which defines how all the data inserted into the database should be composed. NoSQL databases became popular as web applications became more common and complex.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2zU85A36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h39g7ktn3ei7tw88d50k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2zU85A36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h39g7ktn3ei7tw88d50k.png" alt="Database Relational and Non-Relational"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The databases can also be classified according to their type of workload into operational databases (OLTP - Online Transaction Processing) or analytical databases (OLAP - Online Analytical Processing). OLTP systems are databases oriented to transaction processing. A transaction generates an atomic process (which must be validated with a commit, or invalidated with a rollback), and that may involve data insertion, modification and deletion operations. The transactional process is typical of operational databases. OLAP systems are databases oriented to analytical processing. This analysis usually involves, generally, the reading of large amounts of data to get to extract some type of useful information that is helpful for decision making, such as sales trends, consumer behavior patterns, elaboration of complex reports, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkQoz7YF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o547ifm4v97f5zxd97bu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkQoz7YF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o547ifm4v97f5zxd97bu.png" alt="Database OLTP and OLAP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS offers a wide variety of custom databases for your specific application use cases. Our fully managed database services include relational databases for transactional applications, non-relational databases for Internet-scale applications, a data warehouse for analytics, an in-memory database for caching and workloads in real time, and a graphs database to create applications with strongly connected data. With AWS Database Migration Service, migrating existing databases to AWS is easy and cost-effective.&lt;/p&gt;

&lt;p&gt;AWS Databases were designed from the ground up to support the scale, performance, and availability demands of modern globally distributed applications with microservices architectures.&lt;/p&gt;

&lt;p&gt;AWS offers 15 database engines and continues to grow, including relational and non-relational types for every application need. The types of AWS databases are described below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relational&lt;/strong&gt;&lt;br&gt;
Description: Relational databases store data with predefined schemas and relationships between them. These databases are designed to support ACID transactions, and maintain referential integrity and strong data consistency.&lt;/p&gt;

&lt;p&gt;Use cases: Aplicaciones tradicionales, ERP, CRM y e-commerce&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/rds/aurora"&gt;Amazon Aurora&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/rds/"&gt;Amazon RDS&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/redshift/"&gt;Amazon Redshift&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key-value&lt;/strong&gt;&lt;br&gt;
Description: Key-value databases are optimized for common access patterns, typically to store and retrieve large volumes of data. These databases deliver quick response times, even in extreme volumes of concurrent requests.&lt;/p&gt;

&lt;p&gt;Use cases: High-traffic web apps, e-commerce systems, gaming applications&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/dynamodb/"&gt;Amazon DynamoDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In-memory&lt;/strong&gt;&lt;br&gt;
Description: In-memory databases are used for applications that require real-time access to data. By storing data directly in memory, these databases deliver microsecond latency to applications for whom millisecond latency is not enough.&lt;/p&gt;

&lt;p&gt;Use cases: Caching, session management, gaming leaderboards, geospatial applications&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/elasticache/memcached/"&gt;Amazon ElastiCache for Memcached&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/elasticache/redis/"&gt;Amazon ElastiCache for Redis&lt;/a&gt;, &lt;a href="https://aws.amazon.com/es/memorydb"&gt;Amazon MemoryDB for Redis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Document&lt;/strong&gt;&lt;br&gt;
Description: A document database is designed to store semistructured data as JSON-like documents. These databases help developers build and update applications quickly.&lt;/p&gt;

&lt;p&gt;Use cases: Content management, catalogs, user profiles&lt;br&gt;
AWS service: &lt;a href="https://aws.amazon.com/es/documentdb/"&gt;Amazon DocumentDB (with MongoDB compatibility)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wide column&lt;/strong&gt;&lt;br&gt;
Description: A wide column store is a type of NoSQL database. It uses tables, rows, and columns, but unlike a relational database, the names and format of the columns can vary from row to row in the same table.&lt;/p&gt;

&lt;p&gt;Use cases: High scale industrial apps for equipment maintenance, fleet management, and route optimization&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/keyspaces/"&gt;Amazon Keyspaces (for Apache Cassandra)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Graph&lt;/strong&gt;&lt;br&gt;
Description: Graph databases are for applications that need to navigate and query millions of relationships between highly connected graph datasets with millisecond latency at large scale.&lt;/p&gt;

&lt;p&gt;Use cases: Fraud detection, social networking, recommendation engines&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/neptune/?c=db&amp;amp;sec=srv"&gt;Amazon Neptune&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time series&lt;/strong&gt;&lt;br&gt;
Description: Time-series databases efficiently collect, synthesize, and derive insights from data that changes over time and with queries spanning time intervals.&lt;/p&gt;

&lt;p&gt;Use cases: IoT applications, DevOps, industrial telemetry&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a href="https://aws.amazon.com/es/timestream/"&gt;Amazon Timestream&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ledger&lt;/strong&gt;&lt;br&gt;
Description: Systems of record, supply chain, registrations, banking transactions&lt;/p&gt;

&lt;p&gt;Use cases: Systems of record, supply chain, registrations, banking transactions&lt;/p&gt;

&lt;p&gt;AWS service: &lt;a&gt;Amazon QLDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=AbhnNqlOYWY"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YOzs18B4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.youtube.com/vi/AbhnNqlOYWY/0.jpg" alt="AWS Databases: Break Free to Save, Grow, and Innovate Faster"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Strategy for selecting a database&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The optimal database solution for a system varies depending on the requirements for availability, consistency, partition tolerance, latency, durability, scalability, and query capacity. Many systems use different database solutions for various subsystems and allow different features to improve performance. Selecting the wrong database features and solutions can result in lower performance efficiencies.&lt;/p&gt;

&lt;p&gt;When selecting a database service, consider the dimensions and choose the one that best suits each of your requirements and components of your application and architecture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Leader in Gartner's New Magic Quadrant&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;LIndustry analyst firm Gartner has published a new report, the &lt;a href="https://pages.awscloud.com/GLOBAL-multi-DL-gartner-mq-cdbms-2020-learn.html?trk=el_a134p000006gMUAAA2&amp;amp;trkCampaign=WW-FY20-AR-104-gartner-mq-cdbms_Download_Report&amp;amp;sc_channel=el&amp;amp;sc_campaign=DB_Blog&amp;amp;sc_outcome=Global_Marketing_Campaigns&amp;amp;sc_geo=NAMER&amp;amp;sc_country=mult"&gt;Magic Quadrant for Cloud Database Management Systems&lt;/a&gt;, naming AWS as a Leader and placing AWS highest among the 16 vendors evaluated for “Ability to Execute.” This report is Gartner’s first database and analytics report exclusively evaluating cloud-based services, doubling down on their assertion in a June 2019 report that The Future of the DBMS Market is Cloud. More info &lt;a href="https://aws.amazon.com/es/blogs/database/aws-named-a-leader-in-new-gartner-magic-quadrant-report-evaluating-cloud-database-and-analytics-services/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b6fKFtOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7a292dtyua8grl153ur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b6fKFtOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7a292dtyua8grl153ur.png" alt="Magic Quadrant for Cloud Database Management Systems"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Databases free tier&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;he AWS Free Tier offers users an opportunity to explore products for free, with offers including products that are always free, free for 12 months, and short-term free trials. AWS offers the widest selection of purpose-built databases, allowing you to save, grow, and innovate faster.&lt;/p&gt;

&lt;p&gt;Build database solutions using &lt;a href="https://aws.amazon.com/es/free/database/"&gt;these product offerings&lt;/a&gt; of the AWS Free Tier.&lt;/p&gt;

&lt;p&gt;To obtain updated information on AWS database services, I invite you to follow their page “&lt;a href="https://www.linkedin.com/showcase/aws-databases/"&gt;AWS Databases &amp;amp; Analytics&lt;/a&gt;” on Linkedin.&lt;/p&gt;

&lt;p&gt;Later, I will delve into each of the AWS database services. I hope this information is useful !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow us:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://wiki-cloud.co/"&gt;Wiki Cloud&lt;/a&gt;, &lt;a href="https://www.facebook.com/groups/wikicloud"&gt;Facebook&lt;/a&gt;, &lt;a href="https://twitter.com/johnbulla"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/groups/12529878"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://www.youtube.com/user/johnbulla"&gt;Youtube&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>database</category>
      <category>cloud</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Dyslexia Awareness Week</title>
      <author>Terry Child</author>
      <pubDate>Sun, 03 Oct 2021 20:47:37 +0000</pubDate>
      <link>https://dev.to/terrychild/dyslexia-awareness-week-2klp</link>
      <guid>https://dev.to/terrychild/dyslexia-awareness-week-2klp</guid>
      <description>&lt;p&gt;October the 4th to 10th is Dyslexia Awareness Week, a time to raise awareness and understanding of dyslexia and how it affects the people who have it.  It is believed up to 10% of people experience dyslexia, I’m one of them.  I would like to share with you some of my thoughts on the subject, some of the challenges I experience and the incredible gift I consider dyslexia to be.&lt;/p&gt;

&lt;p&gt;I’d like to start by explaining how I was tested for dyslexia, it gives some insight into what educational psychologists are looking for and what dyslexia is. The main part of the evaluation process consists of a series of short tests covering all kinds of areas.  As you might expect there are reading, writing and spelling tests.  There are also comprehension, logical reasoning, spatial awareness and memory tests, the list goes on.  It’s a complete workout for the brain and the whole process takes a few hours.&lt;/p&gt;

&lt;p&gt;Each test starts easy (spell "cat" for example), and gets progressively more difficult (spell "dyslexia") before you fail or run out of time.  Some tests are repeated using different communication styles, for example the spelling test will be done as a written test and then as an oral test.&lt;/p&gt;

&lt;p&gt;The results for each test are compared to the national averages to see which percentile they scored in.  Scoring in the 50th percentile means half the nation scored better, half worse, in other words a perfectly average score.&lt;/p&gt;

&lt;p&gt;The psychologist is interested in the differences in the percentiles.  Everyone has their strengths and will score higher on some tests than others, for most people the spread should be relatively small, within 10 to 15 points of each other.  When a person has a significantly lower score for some tests compared to others, this suggests a specific learning difficulty.  When those lower scores are for reading, writing, short term memory etc this is called dyslexia, which was the case for me.&lt;/p&gt;

&lt;p&gt;There is more to the evaluation than this, but an important point is that people who experience dyslexia have notably below average ability when it comes to reading and writing, but often above average skills when it comes to creative thinking, logical analysis and problem solving.&lt;/p&gt;

&lt;p&gt;Not everyone who is diagnosed with dyslexia has the same difficulties.  My particular brand of dyslexia manifests itself in a few ways, but I'm lucky as my symptoms just tend to slow me down.  For the more serious cases it can be debilitating where words and letters are hard to even focus on let alone read.&lt;/p&gt;

&lt;p&gt;I have big problems with vowels, they all sound the same to me and when spelling I know that words are supposed to have vowels, I’m just never sure which ones and where they go.  This has become less of a problem over the years as spell checkers have gotten smarter.  For anything important I always get someone to proofread my work.  Mistakes slip through though, for the longest time an application I developed had a view titled “pepole”.&lt;/p&gt;

&lt;p&gt;I'll often transpose numbers.  I almost missed my driving test because I thought it was on the "23rd of the 4th [April]", but it was actually on the "24th of the 3rd [March]".  To avoid this problem I’ll use copy and paste wherever I can, especially if that number has something to do with money.&lt;/p&gt;

&lt;p&gt;The most embarrassing effect is my inability to retain abstract details like names.  I’m not exaggerating to say that when meeting a new person I can remember their name for only a few seconds.  For meetings the key here is to be prepared, if I’ve already studied the invite list I have a better chance to remember as I’m matching faces to names.  In most other situations I simply hope I don’t need to use the person’s name until I’ve had time to look it up and relearn it.&lt;/p&gt;

&lt;p&gt;Reading takes longer than average, writing takes way longer.  Writing documentation, specifications etc is something I have to psych myself up for.  The task this affects me the most often however is reading and replying to emails.  Emails are relentless and I have to put aside a good portion of my day to deal with them.  If an email did not ask me a question and therefore does not require a response, I don’t respond, this saves me a lot of stress.  Otherwise I’ve developed an infamously terse email style, sometimes “Done.” is all that needs to be said.&lt;/p&gt;

&lt;p&gt;In contrast to the one word responses, when asked a technical question that requires a detailed response, I labour over the email often writing a few drafts as I try to get the level of detail correct and convince myself what I’ve written is understandable.&lt;/p&gt;

&lt;p&gt;My dyslexia is primarily a communication problem, my analytical reasoning is good, something to be proud of.  I’m just never sure the information arrives correctly and I’m not sure the messages I deliver are understood.  This is why I agonise over emails.  It’s also why in face to face communication I will initially start quietly absorbing as much information as I can, re-organise that information in my own overly logical order and repeat it back out to ensure I understood it.  Often because I’m not sure I said it correctly I repeat myself but with a slightly different structure.&lt;/p&gt;

&lt;p&gt;My coping mechanism for dealing with dyslexia turns out to be a really useful skill in the business world.  My job is to build applications that support business processes.  This requires really understanding the process, breaking down the sometimes messy analog real world steps into logical, predictable, repeatable, programmable steps we can turn into a digital application.  This comes very naturally to me, it’s the same process I use to assimilate information and I’ve been doing it my entire life.&lt;/p&gt;

&lt;p&gt;It is not original advice to play to your strengths and mitigate your weaknesses.  I strongly believe that being diagnosed with dyslexia has given me an extra advantage in life as I know with some confidence what my strengths are and where I need to take special care.  I’ve used this information to pick a career path that has allowed me to excel.  I know which development areas I need to focus on and have been given expert advice on how to improve.&lt;/p&gt;

&lt;p&gt;I’m not the only person in the DEV community with dyslexia, given the nature of our work/hobby I am willing to bet it’s higher than the 10% average.  Others have written on this &lt;a href="https://dev.to/search?q=dyslexia"&gt;site&lt;/a&gt; about how they cope with dyslexia, I’ve found their stories encouraging and their suggestions useful.  I’m keen to hear your thoughts in the comments, I’m especially eager to swap coping strategies.  The reality is they work for everyone, not just people diagnosed with dyslexia.&lt;/p&gt;

&lt;p&gt;Most importantly if you are worried about a child you think might be struggling with dyslexia, there is no need to worry, dyslexia is increasingly well understood and there is a lot of help available.  Search for &lt;a href="https://www.google.com/search?q=dyslexia+awareness+week"&gt;Dyslexia Awareness Week&lt;/a&gt; to find events that may be happening local to you.  Alternatively schools will know how to proceed.  Besides they are in great company; Jamie Oliver, Keira Knightley, Richard Branson, Whoopi Goldberg, Steve Jobs, Gwen Stefani and Albert Einstein are all people who didn’t let dyslexia stop them from achieving great things.&lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>Deploy Rails 7 with Docker and Nginx</title>
      <author>Roeland</author>
      <pubDate>Sun, 03 Oct 2021 20:36:52 +0000</pubDate>
      <link>https://dev.to/roelandmoors/deploy-rails-7-with-docker-and-nginx-b11</link>
      <guid>https://dev.to/roelandmoors/deploy-rails-7-with-docker-and-nginx-b11</guid>
      <description>&lt;p&gt;The easiest solution to deploy a Rails application is something like &lt;a href="https://heroku.com"&gt;Heroku&lt;/a&gt; or &lt;a href="https://www.hatchbox.io/"&gt;Hatchbox&lt;/a&gt; or &lt;a href="https://www.digitalocean.com/products/app-platform/"&gt;DigitalOcean Apps&lt;/a&gt;. But for some small projects I like to use my existing VPS. &lt;/p&gt;

&lt;p&gt;I assume you have a VPS with Ubuntu 20.04 and Docker and Nginx installed.&lt;br&gt;
If you use &lt;a href="https://m.do.co/c/238c76f53b4f"&gt;DigitalOcean&lt;/a&gt; you can select the Docker image in the marketplace and add Nginx to it.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#new-rails-7-app"&gt;
  &lt;/a&gt;
  New Rails 7 app
&lt;/h2&gt;

&lt;p&gt;Lets create a new Rails project with &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt; and &lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt; on your local machine:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;rails new demo &lt;span class="nt"&gt;-d&lt;/span&gt; postgresql &lt;span class="nt"&gt;--edge&lt;/span&gt; &lt;span class="nt"&gt;-j&lt;/span&gt; esbuild &lt;span class="nt"&gt;--css&lt;/span&gt; tailwind
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adjust you config/database.yml with the settings for your database.&lt;/p&gt;

&lt;p&gt;Scaffold a simple table:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/rails g scaffold Book name:string
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create your database and tables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/rails db:create
bin/rails db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can create a root path in routes.rb:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="s2"&gt;"books#index"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can start the website with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bin/dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h2&gt;

&lt;p&gt;Let's go to the VPS. I transfer my code with Github.&lt;br&gt;&lt;br&gt;
For large projects you would probably use CI, but this is just a small project.&lt;/p&gt;

&lt;p&gt;I prefer to create a small shell script to do the build steps and start rails.&lt;br&gt;
This is the content of &lt;code&gt;bin/prod&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production
bundle &lt;span class="nb"&gt;install
&lt;/span&gt;yarn &lt;span class="nb"&gt;install
&lt;/span&gt;yarn build
yarn build:css
bin/rails assets:precompile
bin/rails server &lt;span class="nt"&gt;-b&lt;/span&gt; 0.0.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's make it executable with: &lt;code&gt;chmod a+x bin/prod&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now create a Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ruby:3&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;apt-get update &lt;span class="nt"&gt;-qq&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-y&lt;/span&gt; nodejs npm postgresql-client
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; yarn
&lt;span class="k"&gt;RUN &lt;/span&gt;gem update &lt;span class="nt"&gt;--system&lt;/span&gt;

&lt;span class="c"&gt;# use a global path instead of vendor&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; GEM_HOME="/usr/local/bundle"&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; BUNDLE_PATH="$GEM_HOME"&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; BUNDLE_SILENCE_ROOT_WARNING=1&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; BUNDLE_APP_CONFIG="$GEM_HOME"&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; PATH="$GEM_HOME/bin:$BUNDLE_PATH/gems/bin:${PATH}"&lt;/span&gt;

&lt;span class="c"&gt;# make 'docker logs' work&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; RAILS_LOG_TO_STDOUT=true&lt;/span&gt;

&lt;span class="c"&gt;# copy the source&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . /app&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; tmp/pids/server.pid
&lt;span class="k"&gt;RUN &lt;/span&gt;bundle &lt;span class="nb"&gt;install&lt;/span&gt;

&lt;span class="c"&gt;# build and start&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["bin/prod"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The master.key file is not in git for safety. &lt;br&gt;
There are several solutions for this, but I just recreate the file on the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"30acf9tralalalalala7af75eb7"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; config/master.key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it's time to create the docker image.&lt;br&gt;&lt;br&gt;
Run this inside the root folder of the demo project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker build &lt;span class="nt"&gt;-t&lt;/span&gt; demo:0.0.1 &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now see the image with &lt;code&gt;docker images&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lets run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; 3001:3000 &lt;span class="nt"&gt;--name&lt;/span&gt; demo &lt;span class="nt"&gt;--env&lt;/span&gt; &lt;span class="nv"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;production &lt;span class="nt"&gt;-v&lt;/span&gt; ~/demo:/app demo:0.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The docker container is exposing port 3000, but I map that to 3001 since I already have an other website running on port 3000.&lt;/p&gt;

&lt;p&gt;You should probably have a seperate Postgres server, but I also run that inside a Docker.&lt;br&gt;
To allow access to this container I create a seperate network and add the two containers in it.&lt;br&gt;
In database.yml you can than use postgres_container as host.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker network create demo_network
docker network connect demo_network demo
docker network connect demo_network postgres_container
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create the database and tables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec &lt;/span&gt;demo bin/rails db:create
docker &lt;span class="nb"&gt;exec &lt;/span&gt;demo bin/rails db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case of errors you can use &lt;code&gt;docker logs demo&lt;/code&gt; to find the error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nginx"&gt;
  &lt;/a&gt;
  Nginx
&lt;/h2&gt;

&lt;p&gt;I use Nginx as a proxy to the different Rails projects and to load the assets directly.&lt;br&gt;
To create a new configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;vi /etc/nginx/sites-available/demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is the content: (you need to change the domain and paths)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight nginx"&gt;&lt;code&gt;&lt;span class="k"&gt;upstream&lt;/span&gt; &lt;span class="s"&gt;demo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="nf"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3001&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;demo.example.org&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="n"&gt;/home/user/demo/public&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;access_log&lt;/span&gt; &lt;span class="n"&gt;/home/user/demo/log/nginx.access.log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;error_log&lt;/span&gt; &lt;span class="n"&gt;/home/user/demo/log/nginx.error.log&lt;/span&gt; &lt;span class="s"&gt;info&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;^~&lt;/span&gt; &lt;span class="n"&gt;/assets/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;gzip_static&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;expires&lt;/span&gt; &lt;span class="s"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Cache-Control&lt;/span&gt; &lt;span class="s"&gt;public&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="n"&gt;/index.html&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="s"&gt;@demo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@demo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt; &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="nv"&gt;$http_host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class="nv"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Ssl&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# Optional&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Port&lt;/span&gt; &lt;span class="nv"&gt;$server_port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;proxy_redirect&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://demo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kn"&gt;error_page&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt; &lt;span class="mi"&gt;502&lt;/span&gt; &lt;span class="mi"&gt;503&lt;/span&gt; &lt;span class="mi"&gt;504&lt;/span&gt; &lt;span class="n"&gt;/500.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;client_max_body_size&lt;/span&gt; &lt;span class="mi"&gt;100M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kn"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Enable it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo ln&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; /etc/nginx/sites-available/demo /etc/nginx/sites-enabled/demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Test the configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;nginx &lt;span class="nt"&gt;-t&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And restart Nginx:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should now have a working website.&lt;br&gt;
It's a good idea to add Let's Encrypt with the certbot tool.&lt;br&gt;
This is explained &lt;a href="https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>docker</category>
      <category>nginx</category>
      <category>devops</category>
    </item>
    <item>
      <title>Side Project Journey Part 1 – Initial Design</title>
      <author>Jon Deavers</author>
      <pubDate>Sun, 03 Oct 2021 20:26:18 +0000</pubDate>
      <link>https://dev.to/lucsedirae/side-project-journey-part-1-initial-design-4be1</link>
      <guid>https://dev.to/lucsedirae/side-project-journey-part-1-initial-design-4be1</guid>
      <description>&lt;p&gt;As a web developer, I am constantly looking to improve my skills. I’ve completed a full stack boot camp, followed dozens of tutorials, and built my own projects from scratch. As my skills have developed certain things have come into focus. Firstly, I know where my strengths lie; organizing code in a readable and maintainable codebase is a borderline obsession for me. I like small, modular components that keep individual files to a manageable size. React is a framework I have genuinely come to love. It has provided me with a much greater competency in “vanilla” JavaScript and a practical, consistent path to rendering my vision in the browser. Node.js was a struggle to get comfortable with at first, but building simple API’s has given me a much deeper understanding of how the web works as a synergistic system of front-end views and back-end models and controllers.&lt;/p&gt;

&lt;p&gt;I am also more aware of my weaknesses. At the top of that list is as a designer. Like many developers, I like to explore new ideas and tools but sometimes that case of “shiny object syndrome” will keep me from completing or even making progress on a project. Often I will start a project in the code editor. This isn’t always a bad idea, but it does lead to more frustration than would be necessary had I started with a design and “roadmap” through the development process. My dev directory is full of abandoned, half-baked projects.&lt;/p&gt;

&lt;p&gt;After taking some time to analyze these strengths and weaknesses, I decided to try and shore up the weaker parts of my skill set and start a new project where I follow a specific development process. I also wanted to document this process in hopes that it will keep me accountable to finishing the project and hopefully be of value to others.&lt;/p&gt;

&lt;p&gt;Here’s my plan:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-name"&gt;
  &lt;/a&gt;
  Project Name
&lt;/h2&gt;

&lt;p&gt;Bioledger – A biometric tracking application&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tech-stack-tools"&gt;
  &lt;/a&gt;
  Tech Stack / Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Figma – For designing the UI based on hand sketches&lt;/li&gt;
&lt;li&gt;Node JS – JavaScript runtime for web server&lt;/li&gt;
&lt;li&gt;Express – Node framework for building a web server&lt;/li&gt;
&lt;li&gt;MongoDB – Relational database for data storage&lt;/li&gt;
&lt;li&gt;Mongoose – MongoDB framework for building REST API&lt;/li&gt;
&lt;li&gt;React – UI framework for front-end client&lt;/li&gt;
&lt;li&gt;Next JS – React toolkit for handling routing, image optimization, and server-side rendering of static data&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#user-story"&gt;
  &lt;/a&gt;
  User Story
&lt;/h2&gt;

&lt;p&gt;As a user working to become healthier, I want an application where I can log in daily and easily track my weight and blood pressure readings. I also want to see my progress displayed in easy-to-read charts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#development-process"&gt;
  &lt;/a&gt;
  Development Process
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Design product

&lt;ol&gt;
&lt;li&gt;Sketch out the UI on paper including any necessary elements and a basic navigation flow&lt;/li&gt;
&lt;li&gt;Use the sketches as a basis for a more detailed design on a digital design tool (i.e. Figma)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Develop back end

&lt;ol&gt;
&lt;li&gt;Using the designs developed in step 1, map out the data structure for the necessary mongoose Schema(s)&lt;/li&gt;
&lt;li&gt;Build a node.js express server that handles an API for the MongoDB database using Schemas and controllers informed by the previous step&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Develop front-end client

&lt;ol&gt;
&lt;li&gt;Utilizing Next JS, bootstrap a client and add necessary pages, fields and layout components&lt;/li&gt;
&lt;li&gt;Style front-end using CSS modules&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#initial-sketches"&gt;
  &lt;/a&gt;
  Initial Sketches
&lt;/h2&gt;

&lt;p&gt;There’s a reason I like to be creative using digital tools. I am certainly not a visual artist. However, I’ve been following a design course on Udemy that recommends beginning the design process with sketches and so I’m following their advice. Below are  my (very) rough drafts of the UI for this project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7oq4vVbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3qdhq19ae9paxqm5d92.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7oq4vVbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r3qdhq19ae9paxqm5d92.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N5EIXwSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgrj1rsa178i8k2id50k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N5EIXwSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgrj1rsa178i8k2id50k.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This process is subject to change. I’ll do my best to explain my thoughts as I work through the steps and if you have any suggestions, feedback, or questions please connect with me on Twitter and I’d be grateful for the advice and be happy to help.&lt;/p&gt;

&lt;p&gt;Originally published on my blog at &lt;a href="https://jondeavers.net/posts/side-project-journey-part-1-initial-design"&gt;jondeavers.net&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>Python map() Function: How to use map in python ? </title>
      <author>Enes Karataş</author>
      <pubDate>Sun, 03 Oct 2021 20:22:43 +0000</pubDate>
      <link>https://dev.to/bl4ckst0n3/python-map-function-how-to-use-map-in-python-381m</link>
      <guid>https://dev.to/bl4ckst0n3/python-map-function-how-to-use-map-in-python-381m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#python-map-function-how-to-work-"&gt;
  &lt;/a&gt;
  Python map() Function : How to work ?
&lt;/h2&gt;

&lt;p&gt;📍 Hello everyone in this tutorial we are going to investigate &lt;strong&gt;map()&lt;/strong&gt; function in &lt;em&gt;python&lt;/em&gt; together. Firstly we are going to start with what &lt;strong&gt;map()&lt;/strong&gt; is. &lt;br&gt;
👉 The &lt;strong&gt;map()&lt;/strong&gt; function is used for doing some process with all the items in an iterable(list, tuple etc.) without using a loop. When you need to apply given function to each item in an &lt;em&gt;iterable&lt;/em&gt; the &lt;strong&gt;map()&lt;/strong&gt; can be pretty useful. Alright let's go ahead the next step !&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started-with-map-function"&gt;
  &lt;/a&gt;
  Getting started with &lt;strong&gt;map()&lt;/strong&gt; function
&lt;/h2&gt;

&lt;p&gt;Sometimes you might want to apply process to all the items of an iterable. The most common approach to do that is using &lt;em&gt;for loop&lt;/em&gt; in python. However we are going to handle this situation without using &lt;strong&gt;loop&lt;/strong&gt;.  So, this way is &lt;strong&gt;map()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Before using the map() function we don't need to import any module so, to be able to use the map() you need to use just directly in python file that's sufficient. &lt;br&gt;
The syntax of the &lt;strong&gt;map()&lt;/strong&gt; function as the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;map(function, iterable[...iterable(N)])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us begin with the most common example. Suppose you have a list and you want to transform square the each item of iterable. You would probably think using &lt;em&gt;for loop&lt;/em&gt; as the first like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;for_loop&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;square_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;number_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
         &lt;span class="n"&gt;square_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"squared =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;square_list&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adding the &lt;em&gt;main&lt;/em&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;for_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would get this output like following while the code above is run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
squared =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alright! Let us code the better one. We are going to code again &lt;em&gt;for loop&lt;/em&gt; as single line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loop_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;square_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;number_list&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"squared =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;square_list&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
squared =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔎🔎 ⁉️ We can also take the same result without using &lt;em&gt;for loop&lt;/em&gt;, by using &lt;strong&gt;map()&lt;/strong&gt;. The following reimplementation of the above instance.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;list_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;square_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;square&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_number&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"squared =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;square_list&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
squared =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take a look at the result that's exactly the same with &lt;em&gt;for loop&lt;/em&gt;. The &lt;em&gt;square_list&lt;/em&gt; gives us the transformation each items of the &lt;em&gt;list_number&lt;/em&gt;. Firstly we've implemented the classic &lt;em&gt;for loop&lt;/em&gt; method and so changed a bit. And then we put &lt;em&gt;for loop&lt;/em&gt; inside of the list, it is about code optimization. And the last we've used the &lt;strong&gt;map()&lt;/strong&gt; function instead of &lt;em&gt;for loop&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;👉  So far so good ! And of course not finished yet so we are about to move on the other implementations of &lt;strong&gt;map()&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;‼️ The &lt;strong&gt;map()&lt;/strong&gt; allows the type conversion for instance suppose you have a list that stores string characters. You're also able to type conversion on all items of the list using the &lt;strong&gt;map()&lt;/strong&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;list_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"9"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;list_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"converted list =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;list_int&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
converted list =&amp;gt; [1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now try to convert integer to float.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;list_int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;list_float&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"converted list =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;list_float&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above we have passed the type as parameter to the &lt;strong&gt;map()&lt;/strong&gt; so the type of all items has changed.&lt;/p&gt;

&lt;p&gt;Let us continue to the instances. In the next one we are going to use another callable method in the &lt;strong&gt;map()&lt;/strong&gt;. There are some built-in functions that you can use in the &lt;strong&gt;map()&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;list_numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.99&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;abs_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_numbers&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"abs values =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;abs_list&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
abs values =&amp;gt; [5, 2, 8, 11, 2.17, 1.99, 6, 4]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;❓❔  What if we try to use lambda in the map function.🤔 Of course we do! Go back above the 'square' example and implement the lambda expression like following.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;number_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;list_square&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"lambda squared =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;list_square&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
lambda squared =&amp;gt; [1, 4, 9, 16, 25, 36, 49, 64, 81]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, It works ‼️&lt;br&gt;
Let's show how useful method lambda is by one more example. Sometimes we need to do some process like addition, substruction etc. between two lists. In those times we can just use the &lt;strong&gt;map()&lt;/strong&gt; with &lt;strong&gt;lambda&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;list_num_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;list_num_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

      &lt;span class="n"&gt;list_sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_num_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_num_2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
sum of the lists =&amp;gt; [11, 3, 2, 0, 3]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
     &lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"banana"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"grape"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"melon"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"avocado"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"mango"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
     &lt;span class="n"&gt;upper_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="n"&gt;capitalize_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"UPPER =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;upper_fruits&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Capitalize =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;capitalize_fruits&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
UPPER =&amp;gt; ['APPLE', 'BANANA', 'GRAPE', 'MELON', 'AVOCADO', 'MANGO', 'ORANGE']

Capitalize =&amp;gt; ['Apple', 'Banana', 'Grape', 'Melon', 'Avocado', 'Mango', 'Orange']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‼️ Note that you can use the functions that can get arguments as parameter like &lt;em&gt;strip()&lt;/em&gt;, &lt;em&gt;split()&lt;/em&gt; etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="n"&gt;s_m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"string/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"manipulation/"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="n"&gt;list_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;s_m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"list string =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;list_string&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
list string =&amp;gt; ['string', 'manipulation']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;👉  Another way to manipulation list that stores string item without using lambda is &lt;em&gt;str&lt;/em&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="n"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"apple"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"banana"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"grape"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"melon"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"avocado"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"mango"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="n"&gt;upper_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="n"&gt;capitalize_fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"UPPER =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;upper_fruits&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Capitalize =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;capitalize_fruits&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output: 
UPPER =&amp;gt; ['APPLE', 'BANANA', 'GRAPE', 'MELON', 'AVOCADO', 'MANGO', 'ORANGE']

Capitalize =&amp;gt; ['Apple', 'Banana', 'Grape', 'Melon', 'Avocado', 'Mango', 'Orange']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"string manipulation using map"&lt;/span&gt;
   &lt;span class="n"&gt;list_split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"split =&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;list_split&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
split =&amp;gt; [['s'], ['t'], ['r'], ['i'], ['n'], ['g'], [], ['m'], ['a'], ['n'], ['i'], ['p'], ['u'], ['l'], ['a'], ['t'], ['i'], ['o'], ['n']]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On the other hand the &lt;em&gt;lambda&lt;/em&gt; can be quite useful about dictionaries in the &lt;strong&gt;map()&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;map_fun&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="n"&gt;car_trademarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="s"&gt;"car1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"BMW"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;"car2"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Audi"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;"car3"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Bentley"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;"car4"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Mercedes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s"&gt;"car5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Porsche"&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;trademarks_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;car_trademarks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;car_trademarks&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trademarks_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
the car list =&amp;gt; ['BMW', 'Audi', 'Bentley', 'Mercedes', 'Porsche']
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alright ! The last we are going to write our own module using OOP approach. The module returns string message containing information about given string whether palindrome is or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str_obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
          &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_obj&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_isPalindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
          &lt;span class="n"&gt;list_temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_obj&lt;/span&gt;
          &lt;span class="n"&gt;list_temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list_temp&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;list_temp&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_isPalindrome&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
              &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"The object &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_obj&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; is palindrome !"&lt;/span&gt;
          &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"The object &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_obj&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; is not palindrome !"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The class takes single string argument and compare with its reverse using list. If it's the same this is palindrome, if it's not the same this is not palindrome.&lt;br&gt;
👉 Adding the main method to run the class Palindrome.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"tenet"&lt;/span&gt;
      &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the output will probably be like following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Output:
The object ['t', 'e', 'n', 'e', 't'] is palindrome !
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Start Using Tailwind CSS Right Now</title>
      <author>Shubham Patil</author>
      <pubDate>Sun, 03 Oct 2021 20:20:28 +0000</pubDate>
      <link>https://dev.to/shubhampatilsd/start-using-tailwind-css-right-now-3pck</link>
      <guid>https://dev.to/shubhampatilsd/start-using-tailwind-css-right-now-3pck</guid>
      <description>&lt;p&gt;I've been using Tailwind CSS for the past 4 months now, and I can confidently say that it's much much MUCH better than plain CSS.&lt;/p&gt;

&lt;p&gt;If you didn't know, Tailwind CSS basically provides utility classes that can be used to style your HTML. Think of it as Bootstrap but with much more freedom. Instead of being stuck to a certain design, Tailwind CSS gives you the ability to make your own. Although it does have a design system, it is pretty subtle compared to Bootstrap, while saving you time from creating a design system from scratch like with plain old CSS.&lt;/p&gt;

&lt;p&gt;You might be confused so let me give you an example. To create a 4rem margin above your element in CSS, you would do&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.element&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then your HTML would look like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"element"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But, with Tailwind CSS, those lines of CSS get incorporated into the class of the HTML element, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-16"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the &lt;code&gt;mt-16&lt;/code&gt; stands for &lt;code&gt;margin-top: 4rem&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This leads me to my first point: creating an entire design system (including spacing and classes) can be very time-consuming and unproductive. Tailwind CSS provides a solution to this problem by providing spacing, color, responsive and basic animation classes, that act as substitute for actual CSS.&lt;/p&gt;

&lt;p&gt;For example, for spinning animation, all you need is the class name &lt;code&gt;animate-spin&lt;/code&gt;. The implementation for that would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animate-spin"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you have a spinning element now!&lt;/p&gt;

&lt;p&gt;The color system Tailwind has is fantastic for small projects in which you don't want to create a color scheme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DNIC7T_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc45w79u2m02d31r2zxm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DNIC7T_I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc45w79u2m02d31r2zxm.png" alt="List of Tailwind Colors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The colors that Tailwind offers are not just CSS colors with fancy names, they are much more appealing.&lt;/p&gt;

&lt;p&gt;This is Tailwind's most vibrant blue:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IYDtbwME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibobyql8brukpc5jxgga.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IYDtbwME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibobyql8brukpc5jxgga.png" alt="Tailwind Blue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then this is CSS's most vibrant blue:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GrgIXaq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nf30mh3sbg8iemh6j7qq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GrgIXaq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nf30mh3sbg8iemh6j7qq.png" alt="CSS Blue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is noticeable that Tailwind's colors are much more soothing and are less harsh than the base CSS colors.&lt;/p&gt;

&lt;p&gt;Tailwind also has a variety of other classes that shorten the amount of styling you need to write. For example, pseudo-selectors like &lt;code&gt;hover:&lt;/code&gt;, are basically condensed into&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hover:whatever-you-want-to-do-on-hover"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tailwind also has a bit of sorcery when it comes to responsive layout. Tailwind uses pre-set (by default) pixel values for certain breakpoints. For example, there is an &lt;code&gt;sm&lt;/code&gt; breakpoint which is a screen width of 640px. If you're confused, just think of these breakpoints as media queries in CSS.&lt;/p&gt;

&lt;p&gt;To use these breakpoints, just use &lt;code&gt;breakpointName:&lt;/code&gt;. The &lt;code&gt;breakpointName&lt;/code&gt; is one of the values below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAtdYZGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giyall93cfl1qiwe4tfd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAtdYZGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giyall93cfl1qiwe4tfd.png" alt="Breakpoint measures"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Say that you wanted to hide a &lt;code&gt;div&lt;/code&gt; on smaller screens for a responsive layout and have it shown as flex on screens bigger than 768px.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hidden md:flex"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   ...
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the HTML above, it basically says to "Hide everything below the &lt;code&gt;md&lt;/code&gt; breakpoint, and everything above the &lt;code&gt;md&lt;/code&gt; breakpoint should be shown as &lt;code&gt;flex&lt;/code&gt;". (In this case, &lt;code&gt;flex&lt;/code&gt; = &lt;code&gt;display: flex;&lt;/code&gt; in normal CSS).&lt;/p&gt;

&lt;p&gt;Tailwind also has a lot customization options. Just hop into the &lt;code&gt;tailwind.config.js&lt;/code&gt; and you have a bunch of options to customize breakpoints and other colors and stuff.&lt;/p&gt;

&lt;p&gt;However, Tailwind is not without its weak points. First let's talk about how bloated the code looks after applying these styles. &lt;/p&gt;

&lt;p&gt;Just take a look at this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--agloxdm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3x7191eepmtnhdhvgs2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--agloxdm1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3x7191eepmtnhdhvgs2.png" alt="Spaghetti HTML"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wanted four buttons, you would have to do something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-blue rounded-md shadow-md px-2 py-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-blue rounded-md shadow-md px-2 py-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-blue rounded-md shadow-md px-2 py-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-blue rounded-md shadow-md px-2 py-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pretty repetitive right? Well, this can be solved if you use a JavaScript framework that supports the creation of components, like React, Vue, Angular, and Svelte (which is loved by a lot of developers due to its simplicity).&lt;/p&gt;

&lt;p&gt;Another option to shorten the class name is to use &lt;code&gt;@apply&lt;/code&gt; in the accompanying CSS file that Tailwind needs to apply the styles. More information about the applying concept can be found &lt;a href="https://tailwindcss.com/docs/functions-and-directives#apply"&gt;on their website&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The same example of that button class name would be condensed to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;bg-blue&lt;/span&gt; &lt;span class="err"&gt;rounded-md&lt;/span&gt; &lt;span class="err"&gt;shadow-md&lt;/span&gt; &lt;span class="err"&gt;px-2&lt;/span&gt; &lt;span class="err"&gt;py-1&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and your button would look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After a while, Tailwind becomes second nature, and you start to know exactly what to type out. This can be challenging to you if you're new to Tailwind as you think you have to memorize all the classes. Don't do this to yourself; it's like subconsciously knowing the class for the job. After a while, you simply gain the sense of which utilities to use and when to use them. Also, if you need any help, &lt;a href="https://tailwindcss.com"&gt;Tailwind's website&lt;/a&gt; is always there to assist you.&lt;/p&gt;

&lt;p&gt;If you're interested, check out &lt;a href="https://tailwindcss.com/docs/installation"&gt;https://tailwindcss.com/docs/installation&lt;/a&gt; to view the documentation on setting it up with frameworks like NextJS and even CDN through your HTML.&lt;/p&gt;

&lt;p&gt;That's all about Tailwind! As I've stated before, do check the website for more help on specific topics like, for example, CSS grid and other utilities. If you enjoyed this post, there are 3 buttons on the left side of this article for your clicking pleasure and a comment section awaiting your input. If you didn't like this article, those buttons are still open, ready to be clicked 🙃.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>css</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>My Simple Checklist For Well Tested React Components</title>
      <author>Chak Shun Yu</author>
      <pubDate>Sun, 03 Oct 2021 20:15:56 +0000</pubDate>
      <link>https://dev.to/keraito/my-simple-checklist-for-well-tested-react-components-4d4a</link>
      <guid>https://dev.to/keraito/my-simple-checklist-for-well-tested-react-components-4d4a</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article is part of &lt;a href="https://www.getrevue.co/profile/chakshunyu"&gt;Uncommon React&lt;/a&gt;, a newsletter focused on helping you become a better React developer by focusing on the less commonly discussed topics, like testing, readability, and more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Testing is one of the most important activities in software development and React development is no exception to this. Unfortunately, software testing itself is a very overlooked and neglected topic. More often than not, implementing tests is an afterthought and developers are only willing to spend the least amount of time and effort on it. The results are low-quality tests that don't provide any confidence in our software, are meaningless, and are only introducing noise to the codebase.&lt;/p&gt;

&lt;p&gt;Proper software testing is a very difficult topic, even more than software development itself. With software development, the beginning and the end are clearly defined. But for software testing, this is not the case. There is no clear path that you can take every time to test your code. It's different every time based on the feature, context, and implementation.&lt;/p&gt;

&lt;p&gt;Over the years, I've had my fair share of struggles and difficulties with it. For a very long time, I was writing tests for the sake of writing tests. Just before opening a Merge Request (MR), I would remember that I had to write tests. I would mindlessly copy over the structure from other existing tests and adjust it towards my code. Minimal effort for maximum results, kind of.&lt;/p&gt;

&lt;p&gt;The problem was that the resulting tests were far from decent quality, let alone good quality. So often did I think after shipping a feature that it was implemented and tested very well, but so often have bugs been reported in those features. The problem was that I always tested the wrong aspects, tested in the wrong context, or didn't know what to test specifically.&lt;/p&gt;

&lt;p&gt;After taking this topic more serious, one of the habits that I've picked up is always going through a testing checklist of topics that I try to cover when testing React components. This article will share that testing checklist, elaborate on the topics, and can help you get through testing your React components easier, create a checklist of your own, and ensure higher quality React code.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#user-interactions"&gt;
  &lt;/a&gt;
  User Interactions
&lt;/h2&gt;

&lt;p&gt;The most important things to tests for React components are user interactions. In the end, React development is a form of web development. All the web applications that we create are intended to be used by customers, clients, and users. The most important aspect for all of these user audiences is the interactivity of the application. Without interactivity, the web application is a static website and will hold little value to its users. &lt;/p&gt;

&lt;p&gt;When verifying user interactions, it's important to determine what the prerequisites, the specific interaction, and the expected behaviour are. That will be the bread-and-butter layout for most of your tests. First, you set up the test in an environment that can trigger the interaction. Then, you mimic the user interaction. Lastly, you verify that it leads to the expected behaviour.&lt;/p&gt;

&lt;p&gt;Every part of this process is crucial in making sure that the tests are useful, meaningful, and reliable. Every scenario will require different answers and different implementations, especially in regards to how to verify the expected behaviour. There are also many ways to implements these kinds of tests, like unit, behaviour, or e2e tests, and different tools, like Enzyme, React Testing Library, Jest, Jasmine, and more. Going over all of these will be a book on its own, but for now, the most important aspect is to start documenting user interactions in tests.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#product-manager-requirements"&gt;
  &lt;/a&gt;
  Product Manager Requirements
&lt;/h2&gt;

&lt;p&gt;After user interactions, the second most important aspect of any new feature is the requirements from the product manager. In the end, we're writing code and creating software for a particular audience. The party that is responsible for being in contact with that audience, hearing their voice, and managing users' requests is the product manager of your team.&lt;/p&gt;

&lt;p&gt;Verifying their requirements are satisfied is equally, if not even more, important than possible user interactions. In the end, the product manager will have (hopefully) thought out every aspect there is to a feature and provide you with a list of requirements. The most straightforward way to translate those into tests is by creating a test for every single requirement.&lt;/p&gt;

&lt;p&gt;Ultimately, the requirements are like a checklist for when your feature is completed. Turning those into tests doesn't only verify that they are satisfied, but also lays a foundation of stability, documentation, and confidence for future developers to maintain and work with it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#internal-components-and-utility-functions"&gt;
  &lt;/a&gt;
  Internal Components And Utility Functions
&lt;/h2&gt;

&lt;p&gt;Most of the time, our focus for testing is on the external users of our code like end-users, clients, or even product managers. Similarly, most of the topics in this article are also geared towards that audience type. But when writing code, there is another type of audience that we should consider, namely other developers.&lt;/p&gt;

&lt;p&gt;When performing React development, not all the code will directly affect the application as is presented to the end-user. React development also involves code like internal components and utility functions which are created for other developers to use. But to use them properly, they need to understand them.&lt;/p&gt;

&lt;p&gt;There are different ways to document the usage, input, and appropriate results of this internal code, but one of the best ways is using tests. Documenting internal components and utility functions in tests immediately gives an example of how to use them, provides information on what to provide to them, and what the expected behaviour is.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#backwards-compatibility-features"&gt;
  &lt;/a&gt;
  Backwards Compatibility Features
&lt;/h2&gt;

&lt;p&gt;From a client's perspective, especially when your product is released regularly, backwards compatibility is an important aspect. In frontend development, we have a similar thing regarding the dependencies that we use. For the user, being able to upgrade towards newer versions of a dependency or application can be a crucial factor in deciding whether to upgrade, migrate and adopt or not.&lt;/p&gt;

&lt;p&gt;Based on personal experience, I either didn't come across this particular topic a lot or just never paid attention to it. Until my most recent job where we're shipping widgets using React regularly. One of the most important topics of discussion is whether a new version contains breaking changes and is backwards compatible. &lt;/p&gt;

&lt;p&gt;Having proper tests in place to verify your existing features is a great start and can go a long way in ensuring backwards compatibility. But in frontend development, backwards compatibility isn't always only about features and interactivity. Aspects like SEO, DOM structure, and CSS class names are also part of the conversation. For these, &lt;a href="https://www.chakshunyu.com/blog/what-are-proper-use-cases-for-snapshot-testing-react-components/"&gt;snapshot tests&lt;/a&gt; are a great tool to test them with. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#regressions"&gt;
  &lt;/a&gt;
  Regressions
&lt;/h2&gt;

&lt;p&gt;So often have I seen the following scenario play out: A bug was reported by support about a feature that we shipped in the past. After a developer picked it up, it turned out that the original developer forgot a specific edge case or one of the requirements. Not a big deal, so the currently responsible developer wrote a fix and shipped the new feature. One week later, a new bug was reported in the same feature. Turned out we caused a regression. We fixed it and shipped it. Another week later, rinse and repeat.&lt;/p&gt;

&lt;p&gt;There are a lot of aspects that we can dive into in this scenario regarding testing. But the most important one, for now, is to make sure that the newly added code didn't break the old code in any way. If it did, it's called a regression. From personal experience, regressions are one of the biggest causes of frustration for developers, users, and everyone involved. &lt;/p&gt;

&lt;p&gt;To prevent regressions, you first need to have solid tests for the previous code in place. To start with that, it's important to make always add a test that covers when introducing a new feature or fixing a bug. This makes sure that it will not regress in the future.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Testing React components is one of the most important and impactful activities in React development, but unfortunately also one of the most overlooked and neglected ones. During several years of working with React, I've had my fair share of struggles and difficulties with it. After looking into this issue seriously, it became apparent that one of the problems was that I never knew what to test or how to approach it. Contrary to development, I never had a proper routine for testing.&lt;/p&gt;

&lt;p&gt;This article shared the checklist that I nowadays go through when testing React components to ensure high-quality tests and code. These include verifying product manager requirements, internal components and utility functions, backwards compatibility features, and making sure regressions don't happen. The specific tooling or tests that you should use will vary and depend on the use case, but the most important aspect is to consider these topics in the first place and create a routine for yourself.&lt;/p&gt;




&lt;p&gt;If you liked this story, consider &lt;a href="https://twitter.com/keraito"&gt;following me on Twitter&lt;/a&gt; to stay up to date with my work or checking out my newsletter &lt;a href="https://www.getrevue.co/profile/chakshunyu"&gt;Uncommon React&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>react</category>
      <category>testing</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
