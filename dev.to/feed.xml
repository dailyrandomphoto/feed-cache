<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Building a Twitter Spaces clone in React Native</title>
      <author>Arpit Mishra</author>
      <pubDate>Fri, 10 Dec 2021 09:20:34 +0000</pubDate>
      <link>https://dev.to/100mslive/building-a-twitter-spaces-clone-in-react-native-30a0</link>
      <guid>https://dev.to/100mslive/building-a-twitter-spaces-clone-in-react-native-30a0</guid>
      <description>&lt;p&gt;In the mood to learn something new over the weekend?üßë‚Äçüíª &lt;/p&gt;

&lt;p&gt;100ms ü§ù GeekyAnts&lt;/p&gt;

&lt;p&gt;Join speaker üéô  Vipul Bhardwaj, Senior Engineer at #NativeBase, for a webinar üé•  with #100ms on how to build a Twitter Spaces clone with #React Native.&lt;/p&gt;

&lt;p&gt;What would you learn?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is NativeBase and how to build consistent UI with it&lt;/li&gt;
&lt;li&gt;What is Twitter Spaces and how does it work&lt;/li&gt;
&lt;li&gt;How to build Twitter Spaces with 100ms React Native SDK&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sounds exciting? then register now üëá&lt;br&gt;
Tune in on üóì 18th December&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.100ms.live/events/twitter-spaces-clone"&gt;https://www.100ms.live/events/twitter-spaces-clone&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Integrating Huawei's AppGallery Connect Auth Service for iOS</title>
      <author>Zachary Powell</author>
      <pubDate>Fri, 10 Dec 2021 09:19:40 +0000</pubDate>
      <link>https://dev.to/devwithzachary/integrating-huaweis-appgallery-connect-auth-service-for-ios-1g5d</link>
      <guid>https://dev.to/devwithzachary/integrating-huaweis-appgallery-connect-auth-service-for-ios-1g5d</guid>
      <description>&lt;p&gt;Auth Service helps you quickly and easily develop account registration and sign-in functions for your app.&lt;/p&gt;

&lt;p&gt;This service is offered completely free of charge and supports a range of platforms including Android and iOS!&lt;/p&gt;

&lt;p&gt;Today we are going to take a look at how this can be quickly integrated into an iOS application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enabling-auth-service"&gt;
  &lt;/a&gt;
  Enabling Auth Service
&lt;/h2&gt;

&lt;p&gt;To enable Auth Service, sign in to &lt;a href="https://developer.huawei.com/consumer/en/service/josp/agc/index.html#/"&gt;AppGallery Connect&lt;/a&gt;, click &lt;strong&gt;My projects&lt;/strong&gt;, click your project card, and select an app for SDK integration from the app drop-down list at the top of the page. Then go to Build &amp;gt; Auth Service, and enable the service if you haven't already.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mK3spsw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6gt5w8ke1cly9gxa3wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mK3spsw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6gt5w8ke1cly9gxa3wt.png" alt="Image description" width="865" height="179"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#integrating-the-service-sdk"&gt;
  &lt;/a&gt;
  Integrating the Service SDK
&lt;/h2&gt;

&lt;p&gt;If you are using Xcode, you need to integrate the service SDK into your Xcode project using CocoaPods.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add the AppGallery Connect configuration file of the app to your Xcode project.&lt;/li&gt;
&lt;li&gt;Sign in to AppGallery Connect and click &lt;strong&gt;My projects&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Click your project card and select an app for SDK integration from the app drop-down list at the top of the page.&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Project settings &amp;gt; General information&lt;/strong&gt; and download &lt;strong&gt;agconnect-services.plist&lt;/strong&gt; under App information.&lt;/li&gt;
&lt;li&gt;Copy the &lt;strong&gt;agconnect-services.plist&lt;/strong&gt; file to your app's module directory.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xnwrUMY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thsqezyztwebyufzgzq2.png" alt="Image description" width="880" height="264"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#create-a-podfile"&gt;
  &lt;/a&gt;
  Create a PodFile
&lt;/h3&gt;

&lt;p&gt;Open the CLI and navigate to the Xcode project. Then, create a Podfile. Skip this step if a Podfile already exists.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd project-directory &lt;br&gt;
pod init&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#edit-the-podfile"&gt;
  &lt;/a&gt;
  Edit the PodFile
&lt;/h3&gt;

&lt;p&gt;Integrate the service SDK.&lt;br&gt;
Add the pod dependency AGConnectAuth to the Podfile.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;target 'AGConnectAuthDemo' do&lt;br&gt;
pod 'AGConnectAuth'&lt;br&gt;
end&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install the pod and open the .xcworkspace file to view the project.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pod install&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#designing-the-ui"&gt;
  &lt;/a&gt;
  Designing the UI
&lt;/h2&gt;

&lt;p&gt;You can create a layout page in the Xcode project and design the UI based on the following figure, to allow users to register an account on your app using a mobile number or email address.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NBnqQbMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz5wfnealzjtvwatidr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBnqQbMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz5wfnealzjtvwatidr2.png" alt="Image description" width="379" height="670"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#enabling-required-authentication-modes"&gt;
  &lt;/a&gt;
  Enabling Required Authentication Modes
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Sign in to &lt;a href="https://developer.huawei.com/consumer/en/service/josp/agc/index.html#/"&gt;AppGallery Connect&lt;/a&gt; and click &lt;strong&gt;My projects&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Click your project card and select an app from the app drop-down list at the top of the page.&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Build &amp;gt; Auth Service&lt;/strong&gt;. On the &lt;strong&gt;Authentication mode&lt;/strong&gt; tab page, enable &lt;strong&gt;Mobile number&lt;/strong&gt; and &lt;strong&gt;Email address&lt;/strong&gt; in the Operation column.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0zCCteN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/un97iibw81mebh85zplf.png" alt="Image description" width="865" height="159"&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#developing-functions"&gt;
  &lt;/a&gt;
  Developing Functions
&lt;/h2&gt;

&lt;p&gt;Associate Storyboard with ViewController so that you can obtain parameters required for sign-up and sign-in through text boxes&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#mobile-number"&gt;
  &lt;/a&gt;
  Mobile Number
&lt;/h3&gt;

&lt;p&gt;If the mobile number entered has not been used to register an account, you need to send a verification code to it to check whether it belongs to the user. Enter a mobile number and tap &lt;strong&gt;Send verification code&lt;/strong&gt;. Then call the method for requesting a verification code and obtain the result in the callback.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Enter the verification code you received and the password set for your account. Tap the &lt;strong&gt;register button&lt;/strong&gt;, call the method for mobile number registration, and obtain the result in the block callback.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;After successfully registering an account, enter the mobile number and password you set, and tap &lt;strong&gt;login&lt;/strong&gt; to sign in to your app. Congratulations, you have now successfully enabled registration and sign-in with a mobile number for your app.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#email"&gt;
  &lt;/a&gt;
  Email
&lt;/h3&gt;

&lt;p&gt;If the email address entered has not been used to register an account, you need to send a verification code to it. Enter the email address and tap Send verification code. Then call the method for requesting a verification code and obtain the result in the callback.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Enter the verification code you received and the sign-in password, and tap register.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Enter the email address and the password you set and tap login to sign in to your app. Congratulations, you have now successfully enabled registration and sign-in with an email address for your app.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Auth Service is a service that provides you with a quick and easy way to develop registration and sign-in functions for app. Its lightweight SDK also help you reduce your app‚Äôs size. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;p&gt;More information about &lt;a href="https://developer.huawei.com/consumer/en/doc/development/AppGallery-connect-Guides/agc-auth-introduction-0000001053732605"&gt;Auth Service&lt;/a&gt;&lt;/p&gt;

</description>
      <category>huawei</category>
      <category>ios</category>
      <category>appgallery</category>
      <category>authentication</category>
    </item>
    <item>
      <title>How to Create an Application - Steps to Develop an App Successfully</title>
      <author>Bhavik Sadhu</author>
      <pubDate>Fri, 10 Dec 2021 09:15:34 +0000</pubDate>
      <link>https://dev.to/bhaviksadhu/how-to-create-an-application-steps-to-develop-an-app-successfully-2feg</link>
      <guid>https://dev.to/bhaviksadhu/how-to-create-an-application-steps-to-develop-an-app-successfully-2feg</guid>
      <description>&lt;p&gt;Are you thinking about how to create an application? Then you‚Äôre withinside the right place. This article will undergo the whole-mobile app development process, from making plans to publishing and the whole thing in between.&lt;/p&gt;

&lt;p&gt;With the growing wide variety of phone users and the increase withinside the running software program field, the app marketplace is increasing faster. You need to be made ready with a successful mobile app development procedure so your goal marketplace may moreover take delivery of your app. You want to comply with a few steps to growing a mobile app according to your commercial enterprise needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-around-with-these-steps-to-create-your-own-app"&gt;
  &lt;/a&gt;
  Go Around with These Steps to Create your Own app:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. Plan Your App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before you get began out with the app development process, you want to devise it. The greater thorough you're at this stage, the less complicated the relaxation of the mobile app development technique will become.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Recognize the need&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Substantiation will show that a demand exists in your app. You can validate your concept via way of means the use of the Google Keyword Planner tool to search for the variety of human beings looking for what you‚Äôre seeking to do. You may also develop a touchdown web page that widely highlights your app opinion and is seeking consumer interest via email signup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Market Examination&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, it is hard to research the marketplace where you'll be developing your app idea. Doing the proper studies might boom your probability of success.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Layout the float and functions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Validation of your app concept manner that you‚Äôve were given something that human beings need to use. Now is the time to detail your product onto a document, or if you want to move the more mile, use a wireframing tool. &lt;/p&gt;

&lt;p&gt;When placing your idea down on paper, do not forget to be as awesome as possible. Include the flow of approaches the person will navigate the app further to all the capabilities envisioned. This will help your developer indefinitely respect your expectations&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Manipulate Graphic Designing process&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After the UX, it's far the flip of UI (User-Interface) designing now. You will expand a responsive layout that consists of applicable images, layout, graphics, movement graphics, videos, etc. It is fine to hire an expert UX development firm that has various experiences in presenting UI/UX solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Developing Your Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You have alternatives to develop your app. Either you may expand an app from scratch, or you may develop a clone app. An app from scratch starts with the fundamental development app. To make UI designs, a workflow is devoted to 1 app only.&lt;/p&gt;

&lt;p&gt;On the alternative hand, a clone app is equal to a famous present app. For instance, in case you need to make a taxi app, you may pick the Uber clone app.&lt;/p&gt;

&lt;p&gt;Well, in case you do now no longer need to spend extra money developing an app from scratch, then it is higher to choose a clone solution. Moreover, you're choosing a clone solution that works excellent as you're building one of the fine app ideas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Performing thorough exceptional assurance (QA) testing at some stage in the mobile app development method makes applications stable, usable, and secure. To make certain complete QA checking out of your app, you first want to put together test cases that deal with all components of app checking out.&lt;/p&gt;

&lt;p&gt;Your app has to go through the subsequent checking out methods, to supply a pleasant mobility solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Functionality Testing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;2) Usability testing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;3) Interface testing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;4) Compatibility testing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;5) Performance testing&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;6) Security testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Launching Your App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To offer you a concept approximately the Apple Store submission processes, we're going to spotlight a few simple submission processes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create an iOS profile &amp;amp; distribution certificate&lt;/li&gt;
&lt;li&gt;Make Ready your app for submission&lt;/li&gt;
&lt;li&gt;Archive &amp;amp; add your mobile app with the aid of using Xcode&lt;/li&gt;
&lt;li&gt;Configure your mobile app‚Äôs metadata and different info withinside the iTunes Connect record&lt;/li&gt;
&lt;li&gt;Submit your application for review&lt;/li&gt;
&lt;li&gt;Check at the app status&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h1&gt;

&lt;p&gt;The mobile app development rank is quite massive and mindless. But it's far a profitable method as nicely in case you do it withinside the proper manner. We have mentioned right here a chronological step-with the aid of the using-step method to &lt;a href="https://www.techavidus.com/blogs/how-to-create-an-application?utm_source=referral&amp;amp;utm_devto=devto&amp;amp;utm_campaign=content_sharing"&gt;how to create an application&lt;/a&gt; that may be implemented to each start-up customer and enterprise. Hope our guide to how to create an application enables you to recognize all of the factors.&lt;/p&gt;

</description>
      <category>app</category>
      <category>programming</category>
      <category>ios</category>
    </item>
    <item>
      <title>Tutorial - Video Chat App with Twilio, Rails, and JS.</title>
      <author>Bacancy Technology</author>
      <pubDate>Fri, 10 Dec 2021 08:55:19 +0000</pubDate>
      <link>https://dev.to/bacancy_technology/tutorial-video-chat-app-with-twilio-rails-and-js-1mh4</link>
      <guid>https://dev.to/bacancy_technology/tutorial-video-chat-app-with-twilio-rails-and-js-1mh4</guid>
      <description>&lt;p&gt;In our last tutorial of the Video chat app with Twilio, Rails, and JavaScript, we developed the app with basic calling functionality. Make sure you read that tutorial first and get important insight before moving with this tutorial.&lt;/p&gt;

&lt;p&gt;Here, In this tutorial, we are going to discuss the same demo application. We all are well aware of video calling functionality, we understand that basic calling functionality is not enough. If you are using a Video chat application, the user must need the features like audio mute-unmute, turning the video on-off, and screen sharing.&lt;/p&gt;

&lt;p&gt;Here, I have listed down the steps to make you understand how we can develop such features in your video chat application.&lt;/p&gt;

&lt;p&gt;These are the new features that we will implement in our demo application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Audio mute and unmute&lt;/li&gt;
&lt;li&gt;Video on and off&lt;/li&gt;
&lt;li&gt;Screen sharing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We shared all the steps and technical codes in the article for your better understanding. If you want to implement these steps of the &lt;a href="https://www.bacancytechnology.com/blog/video-chat-app-with-twilio-rails-part-2"&gt;Video Chat App with Twilio, Rails, and JS&lt;/a&gt;, kindly visit our article now.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to access URL path using useParams hook in React js</title>
      <author>NasreenKhalid</author>
      <pubDate>Fri, 10 Dec 2021 08:43:17 +0000</pubDate>
      <link>https://dev.to/nasreenkhalid/how-to-access-url-path-using-useparams-hook-in-react-js-1gkh</link>
      <guid>https://dev.to/nasreenkhalid/how-to-access-url-path-using-useparams-hook-in-react-js-1gkh</guid>
      <description>&lt;p&gt;In my previous posts, we have studied about various hooks that comes with React package which enables us to perform different functions within our app. Today, we'll explore the useParams hook that comes with React-Router-dom package and allows us to access the URL parameters for example if you want to access the id for a particular URL then you will have to make use of useParams hook.&lt;br&gt;
Let's start by creating a new react app by typing in the following command in our command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;useparams&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we navigate to our app and clear out some unnecessary files like logo.svg, also we can remove the commented out code to make our app look neat and clean.&lt;br&gt;
Now, we would need to install the react-router-dom package in order to be able to access different routes and also make use of useParams hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will navigate to App.js file of our app and write some basic code to be displayed on the Home page of our app, we would also need to import BrowserRouter, Switch , Route, Link and useParams objects from react-router-dom to be able to access the navigation properties of this package. After the imports and rendering the home page of our app at the default path of "/", our App.js file will look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt; &lt;span class="nx"&gt;Hook&lt;/span&gt; &lt;span class="nx"&gt;Demo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;navbar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BrowserRouter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have to wrap the entire component in BrowserRouter component and the 'Link' method will create a hyperlink to access a particular component.&lt;/p&gt;

&lt;p&gt;Now we will also create an About us page to make things more clear and for this purpose we will have to create an About.js file in the src directory of our project, the code for About.js file is mentioned below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="nx"&gt;Us&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's write some code related to useParams hook. Suppose we have a list of products which we want to list down on a Products page on our app, we will first include the products object in the App.js as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-3-valor-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;VALOUR BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CT8532_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jordan-mars-270-london&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JORDAN MARS 270 LONDON&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CV3042_001_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-1-zoom-racer-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RACER BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CK6637_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will create a link to the Products page where we will list down all the above products nicely:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Redirect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ProductsPage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/ProductsPage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/About&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-3-valor-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;VALOUR BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CT8532_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jordan-mars-270-london&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JORDAN MARS 270 LONDON&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CV3042_001_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-1-zoom-racer-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RACER BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CK6637_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt; &lt;span class="nx"&gt;Hook&lt;/span&gt; &lt;span class="nx"&gt;Demo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;navbar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Products&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;

   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ProductsPage&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BrowserRouter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have passed the products object as a prop to the ProductsPage component so that we can display it there.&lt;br&gt;
Now create a ProductsPage component and display the products:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react'
import { Link, Switch, Route } from 'react-router-dom'


export const ProductsPage = ({products}) =&amp;gt; {

    return (

        &amp;lt;div className="product-box"&amp;gt;

        &amp;lt;h2 className="title"&amp;gt; Products Component&amp;lt;/h2&amp;gt;
        &amp;lt;div className="box"&amp;gt;
        {Object.entries(products).map(([id, {name,img}]) =&amp;gt; (
                &amp;lt;li key={id}&amp;gt;
                    &amp;lt;Link to={`/product/${id}`}&amp;gt;
                        &amp;lt;h2 className="product-name"&amp;gt;{name}&amp;lt;/h2&amp;gt;
                        &amp;lt;img src={img} alt={name}/&amp;gt;
                    &amp;lt;/Link&amp;gt;
                &amp;lt;/li&amp;gt;
            ))} 
        &amp;lt;/div&amp;gt;


        &amp;lt;/div&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We made use of javascript map method to display the list of products. Notice that the name of each product is also a link which will navigate to the detail page of each product:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Product&lt;/span&gt; &lt;span class="nx"&gt;Detail&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Brand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the Product component, we will use the useparams hook to extract the id from the url for each product.&lt;br&gt;
You may be wondering from where do the id is passed to the Product component so it was passed from App.js where we defined the Route for the Product component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Redirect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ProductsPage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/ProductsPage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/About;
import {Product} from &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;

function App() {

  const products = {
    "air-jordan-3-valor-blue": {
      name: "VALOUR BLUE",
      img:
        "https://secure-images.nike.com/is/image/DotCom/CT8532_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1"
    },
    "jordan-mars-270-london": {
      name: "JORDAN MARS 270 LONDON",
      img:
        "https://secure-images.nike.com/is/image/DotCom/CV3042_001_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1"
    },
    "air-jordan-1-zoom-racer-blue": {
      name: "RACER BLUE",
      img:
        "https://secure-images.nike.com/is/image/DotCom/CK6637_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1"
    }
  };

  return (
    &amp;lt;BrowserRouter&amp;gt;
&amp;lt;div className="App"&amp;gt;
   &amp;lt;h1&amp;gt;React Router useParams Hook Demo&amp;lt;/h1&amp;gt;
   &amp;lt;div className="navbar"&amp;gt;
   &amp;lt;Link to="/"&amp;gt;Home&amp;lt;/Link&amp;gt;
   &amp;lt;Link to="/topics"&amp;gt;Topics&amp;lt;/Link&amp;gt;
   &amp;lt;Link to="/about"&amp;gt;About&amp;lt;/Link&amp;gt;
   &amp;lt;/div&amp;gt;


   &amp;lt;Switch&amp;gt;
     &amp;lt;Route exact path="/"&amp;gt;
       &amp;lt;h2&amp;gt;&amp;lt;p&amp;gt;Welcome to the Home Component&amp;lt;/p&amp;gt;&amp;lt;/h2&amp;gt;

     &amp;lt;/Route&amp;gt;
     &amp;lt;Route path="/products"&amp;gt;
    &amp;lt;ProductsPage products={products}/&amp;gt;
     &amp;lt;/Route&amp;gt;
     &amp;lt;Route path="/about"&amp;gt;
       &amp;lt;About /&amp;gt;
     &amp;lt;/Route&amp;gt;
     &amp;lt;Route path="/product/:id"&amp;gt;&amp;lt;Product products={products}/&amp;gt;&amp;lt;/Route&amp;gt;
   &amp;lt;/Switch&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;

  );
}

export default App;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, in this manner we were able to display all the products and also output the ID for each product by the use of useParams hook.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading the article.&lt;br&gt;
Happy Coding...&lt;/p&gt;

</description>
      <category>react</category>
      <category>useparams</category>
      <category>hooks</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why Your Website Is Loading So Slowly</title>
      <author>Alex Sanders</author>
      <pubDate>Fri, 10 Dec 2021 08:43:11 +0000</pubDate>
      <link>https://dev.to/alexsan28195851/why-your-website-is-loading-so-slowly-2ihl</link>
      <guid>https://dev.to/alexsan28195851/why-your-website-is-loading-so-slowly-2ihl</guid>
      <description>&lt;p&gt;We‚Äôve all had the experience of dealing with a website that refuses to load in a reasonable amount of time. If you‚Äôre like most people, you probably abandoned that site. It‚Äôs only natural, given our modern expectations that websites load almost immediately.&lt;/p&gt;

&lt;p&gt;But what if that slow-loading website is yours? What could be responsible for your sluggish site? And what‚Äôs the best way to fix it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-impact-of-site-speed"&gt;
  &lt;/a&gt;
  The Impact of Site Speed
&lt;/h2&gt;

&lt;p&gt;According to &lt;a href="https://website.design/"&gt;Website.design&lt;/a&gt;, website loading speed is one of the most important variables to optimize on your website. If your website loads slowly, it could discourage people from visiting. It could cut each visit short ‚Äì and even if your users stick around, they may have a bad experience, ultimately resulting in a blemish on your brand‚Äôs reputation.&lt;/p&gt;

&lt;p&gt;To make matters worse, site speed plays a significant technical role in search engine optimization (SEO). If your site loads too slowly, or if there are interruptions when a visitor reaches your website, it could be detrimental to your SERP rankings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-usual-culprits"&gt;
  &lt;/a&gt;
  The Usual Culprits
&lt;/h2&gt;

&lt;p&gt;So why is your site loading slowly?&lt;/p&gt;

&lt;p&gt;There are several possibilities, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Internet or device issues.&lt;/strong&gt; Let‚Äôs start with the obvious. There‚Äôs a chance that nothing is inherently wrong with your website ‚Äì its slow loading times could be an issue with your internet service or the device you‚Äôre using. If your computer is running slow, or if there‚Äôs a slowdown in your internet download speed, your website could be an unfortunate casualty. Test your website on multiple devices and in multiple areas for a better assessment of its potential.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Poorly optimized images.&lt;/strong&gt; Images are some of the largest and most cumbersome files on your website, so if they‚Äôre poorly optimized, they can bog down the entirety of your website. Make sure they‚Äôre correctly formatted and compressed (to an extent).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Messy coding.&lt;/strong&gt; Messy coding can also be an obstructive issue. If your code isn‚Äôt clean, or if there are serious issues, it‚Äôs going to result in loading delays. If you‚Äôre using a traditional template or a website builder, you probably won‚Äôt have to worry much about this. The same is true if you‚Äôre working with a competent website design agency.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;JavaScript problems.&lt;/strong&gt; JavaScript and JQuery plugins have made it much easier to add custom content to your website ‚Äì but they can also be a problem if they‚Äôre installed or used incorrectly. If you‚Äôre using too many API calls, it can result in bloating and slow down your entire website.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Excessive requests.&lt;/strong&gt; Your browser uses HTTP requests to retrieve information from JS, CSS, and image files. If these requests are too numerous, it can result in slowdown. Fortunately, minification can reduce the number of files on your site and lead to a faster, more streamlined web experience.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lack of caching.&lt;/strong&gt; &lt;a href="https://www.nexcess.net/blog/wordpress-caching-plugins"&gt;Caching plugins work&lt;/a&gt; by allowing users to store your website information locally. This way, when they visit your site for a second (or subsequent) time, the site can load almost instantly. It won‚Äôt work for first-time visitors, but your repeat visitors will thank you.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Too many plugins.&lt;/strong&gt; Caching plugins are incredibly useful, but not every plugin is worth using. In fact, if your site is bogged down with too many plugins, it can sharply reduce your loading speed. Get rid of whatever plugins aren‚Äôt adding value to your site.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lack of compression.&lt;/strong&gt; Compression is valuable for reducing the size of your website (and the files therein) ‚Äì and every bit counts. Even marginal reductions in data can lead to impressive improvements in loading speed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hosting issues.&lt;/strong&gt; Your hosting provider also plays a role in how quickly your site can load. If you‚Äôre using a shared server, or if the server encounters problems, it can render your site practically inaccessible. Upgrading your hosting can usually fix this issue, though you‚Äôll typically have to pay more money for the service.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Too many ads.&lt;/strong&gt; Ads are a convenient strategy for monetizing a site with decent traffic, but there‚Äôs such a thing as too many. If your site is cluttered with ads, it‚Äôs going to result in a terrible user experience ‚Äì including slow loading times.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lack of CDN services.&lt;/strong&gt; Content delivery networks (CDN) use distributed proxy servers and data centers to reduce loading times for users across the globe. If you want to maximize your site speed, a CDN could be worth the investment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list is not exhaustive, but it does cover the most common variables responsible for slow loading websites. As you‚Äôre optimizing your site, make sure to take advantage of &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;Google‚Äôs free PageSpeed Insights tool&lt;/a&gt;. It will tell you everything you need to know about your site speed, such as first contentful paint (FCP), first input delay (FID), and largest contentful paint (LCP). With that information, you can gradually tweak your site to improve its performance and witness your changes making an impact in real time.&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Intro to dApp's: Create your dApp backend w/Solidity</title>
      <author>Eda</author>
      <pubDate>Fri, 10 Dec 2021 08:41:01 +0000</pubDate>
      <link>https://dev.to/edatweets_/intro-to-dapps-create-your-dapp-backend-wsolidity-11dm</link>
      <guid>https://dev.to/edatweets_/intro-to-dapps-create-your-dapp-backend-wsolidity-11dm</guid>
      <description>&lt;p&gt;In the &lt;a href="https://eda.hashnode.dev/intro-to-dapps-create-your-dapp-frontend-withreact"&gt;previous post&lt;/a&gt;, we talked about creating a dApp frontend w/React. In this post, we will build the backend for our dApp and connect the two pieces.&lt;/p&gt;

&lt;p&gt;Before we deep dive into the code, I've laid out some fundamentals for building the application's backend. Then we'll move on to creating a basic smart contract and putting the two pieces together.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note: In this article, we will be referring to dApp's on the Ethereum blockchain.&lt;/em&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#intro-to-decentralized-apps-dapps"&gt;
  &lt;/a&gt;
  Intro to Decentralized App's (dApp's)
&lt;/h1&gt;

&lt;p&gt;In the most basic form, a dApp consists of a &lt;strong&gt;backend (smart contract)&lt;/strong&gt; and a &lt;strong&gt;frontend user interface.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smart-contracts"&gt;
  &lt;/a&gt;
  Smart Contracts
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/"&gt;smart contract&lt;/a&gt; is a computer program stored on the blockchain. When the conditions of a smart contract are met, the code is executed by the Ethereum Virtual Machine (EVM). It's basically the server-side of the application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.soliditylang.org/en/v0.8.10/"&gt;Solidity&lt;/a&gt;&lt;/strong&gt; is one of the most popular smart contract languages for Ethereum.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transaction-amp-gas-fee"&gt;
  &lt;/a&gt;
  Transaction &amp;amp; Gas Fee
&lt;/h2&gt;

&lt;p&gt;An &lt;a href="https://ethereum.org/en/developers/docs/transactions"&gt;Ethereum transaction&lt;/a&gt;  refers to an action initiated by an account on the blockchain. For example, sending tokens to another account, buying an nft, swapping tokens are transactions on Ethereum.&lt;/p&gt;

&lt;p&gt;Each transaction on the blockchain has a cost. So when you want to interact with a smart contract, you need to pay the "&lt;a href="https://ethereum.org/tr/developers/docs/gas/"&gt;gas fee&lt;/a&gt;."&lt;/p&gt;

&lt;p&gt;Gas is the measure of the unit to denote the cost for a transaction. Accordingly, gas fees are the fees that are paid to the network to process the transactions. On Ethereum, gas fees are paid in ETH and denoted in gwei (10-9 ETH). When there is a lot of demand for the network, the gas fees increase, you can check the gas fees from the &lt;a href="https://etherscan.io/gastracker"&gt;Ethereum gas tracker&lt;/a&gt; . &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-binary-interface-abi"&gt;
  &lt;/a&gt;
  Application Binary Interface (ABI)
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://docs.soliditylang.org/en/v0.5.3/abi-spec.html"&gt;Contract Application Binary Interface (ABI)&lt;/a&gt; is the interface between two program modules. Simply put, ABI is like the API (Application Programming Interface) in the Ethereum world. It defines the methods and structures to interact with the smart contract.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#how-to-create-your-own-dapp-wsolidity-and-react"&gt;
  &lt;/a&gt;
  How to create your own dApp w/Solidity and React
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#create-your-smart-contract"&gt;
  &lt;/a&gt;
  Create your Smart Contract
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#project-tools"&gt;
  &lt;/a&gt;
  Project Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://metamask.io/"&gt;Metamask Wallet&lt;/a&gt;: crypto wallet. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dashboard.alchemyapi.io/"&gt;Alchemy&lt;/a&gt;: ethereum developer platform. We will be using the Alchemy API to interact with Alchemy's Ethereum infrastructure.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://hardhat.org/"&gt;Hardhat&lt;/a&gt;: ethereum development environment. It comes as an npm package.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Choose your IDE and get the "solidity extension." I am using VS Code and am very happy with it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an account on  &lt;a href="https://metamask.io/"&gt;metamask&lt;/a&gt; and switch to the rinkeby test network. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get your &lt;a href="https://alchemy.com/?r=63afe97f6fd780ac"&gt;Alchemy API key&lt;/a&gt;. You will need to create an account on Alchemy. Then when logged in, create an App on the Rinkeby Test Network. Here's how your App settings should look like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tl_eTeIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448516727/ZWykzJeebm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tl_eTeIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448516727/ZWykzJeebm.png" alt="Screen Shot 2021-12-01 at 21.07.37.png" width="880" height="279"&gt;&lt;/a&gt;&lt;br&gt;
Once created, head over to the app details and get your key by clicking "view key" on the top right.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href="https://nodejs.org/en/"&gt;node.js&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get some Rinkeby Test Network Ethereum. Try the faucet &lt;a href="https://faucet.rinkeby.io/"&gt;here&lt;/a&gt; to get some Rinkeby ETH.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#building-the-smart-contract"&gt;
  &lt;/a&gt;
  Building the Smart Contract
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a project folder and head over to its directory. Install hardhat.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir eda-sample-smart-contract
cd eda-sample-smart-contract
npm init -y
npm install --save-dev hardhat
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your project directory &lt;strong&gt;create a hardhat project&lt;/strong&gt; by running &lt;code&gt;npx hardhat.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx hardhat
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The setup wizard will show up. Click enter throughout and keep the default options. Hardhat will create a sample project and install the dependencies for you. Here's how your terminal should look like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWyyoOtC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448658575/YOjUkiQ_d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWyyoOtC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448658575/YOjUkiQ_d.png" alt="Screen Shot 2021-12-02 at 10.43.25.png" width="880" height="243"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the project from your code editor. Under the 'Contracts' folder, you should see the default &lt;strong&gt;Greeter.sol&lt;/strong&gt; file. ".Sol" is the file extension for the solidity language, and it's our sample smart contract. I've added the smart contract below with some comments to explain what's going on.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.4; // add the solidity version for the compiler
import "hardhat/console.sol";
// create the smart contract 
contract Greeter {
 // create a variable called greeting that will be stored in the contract 
 string private greeting;
 constructor(string memory _greeting) {
     console.log("Deploying a Greeter with greeting:", _greeting); // print to the console 
     greeting = _greeting;
 }
 // create a function to give the greeting message 
 // public: functions are public by default, anyone reading from the contract can call it
 // view: the function will not modify the state, it will only return a value
 // returns: the function declaration tells the type of the return value, here the return type is a string 
 function greet() public view returns (string memory) {
     return greeting; 
 }
 // create a function to change the greeting message 
 function setGreeting(string memory _greeting) public {
     console.log("Changing greeting from '%s' to '%s'", greeting, _greeting); // print to the console
     greeting = _greeting;
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get your &lt;strong&gt;Alchemy API key&lt;/strong&gt;; it's needed to talk to the Rinkeby Test Network from the smart contract. Add it to the &lt;strong&gt;hardhat.config.js&lt;/strong&gt; (see code snippet under step-6). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add your &lt;strong&gt;metamask private key&lt;/strong&gt; to &lt;strong&gt;hardhat.config.js&lt;/strong&gt;. You can get you private key by clicking Account Details --&amp;gt; Export Private Key from your Metamask extension.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require('@nomiclabs/hardhat-waffle');
module.exports = {
solidity: '0.8.4', // make sure the version matches the one in smart contract file 
networks: {
 rinkeby: {
   url: ' ', // rinkeby key 
   accounts: [' '], // metamask privte key- DO NOT SHARE THIS!! It has access to all your accounts
 },
},
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to take our contract from our local machine and put it onto the Rinkeby Test Network. For this, we will use the &lt;strong&gt;sample-script.js&lt;/strong&gt; file under the 'Scripts' folder. (It's usually called deploy.js; but let's leave it as is for this sample project.) Run the command below to deploy the contract to the Rinkeby Test Network.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx hardhat run scripts/sample-script.js --network rinkeby
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;üéâ Once you see the details of your smart contract on the terminal, it means that your smart contract is deployed onto the Rinkeby network! For the next steps, you will need the &lt;strong&gt;smart contract address&lt;/strong&gt; and the &lt;strong&gt;ABI&lt;/strong&gt;. Here is where you can find them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The smart contract address is printed on the terminal&lt;/li&gt;
&lt;li&gt;There is a new folder called artifacts that is generated after deploying the smart contract. The ABI is the json document(Greeter.json) on the following path &lt;em&gt;artifacts/Contracts/Greeter.json.&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8XV75pty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454077741/XjJkZ_sCB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8XV75pty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454077741/XjJkZ_sCB.png" alt="Screen Shot 2021-12-02 at 17.07.29.png" width="880" height="211"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-to-your-smart-contract-from-the-frontend"&gt;
  &lt;/a&gt;
  Connect to your Smart Contract from the frontend
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;In this section, we will use the code from the &lt;a href="https://eda.hashnode.dev/intro-to-dapps-create-your-dapp-frontend-withreact"&gt;Intro to dApp's: Create your dApp frontend w/React&lt;/a&gt; post. Follow the steps there to create your frontend w/React. Make sure you have ethers.js installed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#building-the-frontend-of-your-dapp"&gt;
  &lt;/a&gt;
  Building the frontend of your dApp
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;strong&gt;contract address&lt;/strong&gt; to App.js.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// add the contract address
const contractAddress = " "
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to add the &lt;strong&gt;contract ABI.&lt;/strong&gt; Copy the ABI file (greeter.json) from the smart contract and add it under /src in the react project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eHw10qgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454181519/23ZMMuG2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eHw10qgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454181519/23ZMMuG2t.png" alt="Screen Shot 2021-12-02 at 17.09.34.png" width="880" height="280"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Import greeter.json which is the contract abi to App.js.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Greeter from './greeter.json'
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Import "useRef" from react to store the mutable greeting value to App.js.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useEffect, useState,  useRef } from 'react';
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside the App construct on App.js define a new variable to keep the greeting message.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const userGreeting = useRef();
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the functions to get the greeter message and another to set the greeter message. Have a look at the code below, I have added comments to explain what's going on. Add the code snippet to App.js&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const getGreeting = async () =&amp;gt;  {
 // check that there is a wallet connected
 const { ethereum } = window;
   if (ethereum) {
     // provider is a connection to the ethereum node
     const provider = new ethers.providers.Web3Provider(ethereum);
     // signer is used to sign messages and transactions
     const signer = provider.getSigner();
     // connect to the smart contract 
     const contract = new ethers.Contract(edasSmartContract, Greeter.abi, signer);
     // call the greet function on the smart contract
     const message = await contract.greet();
     // pop up the greet message 
     alert(message);
   }
}
const setGreeting = async (event) =&amp;gt; { 
 event.preventDefault();
 if (userGreeting.current.value === '') {
   return;
 }
 const { ethereum } = window;
 if (ethereum) {
   const provider = new ethers.providers.Web3Provider(ethereum);
   const signer = provider.getSigner();
   const contract = new ethers.Contract(edasSmartContract, Greeter.abi, signer);
   const transaction = await contract.setGreeting(userGreeting)
   await transaction.wait()
   getGreeting() // go back to the getGreeting() func to give the user the greeting 
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, modify the walletConnected() component to display buttons which call the getGreeting() and setGreeting() functions.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//wallet connected
const walletConnected = () =&amp;gt; (
&amp;lt;div&amp;gt;
  &amp;lt;p&amp;gt;Connected to the wallet&amp;lt;/p&amp;gt;
  &amp;lt;button onClick={getGreeting}&amp;gt;Greet&amp;lt;/button&amp;gt;
  &amp;lt;br/&amp;gt;
  &amp;lt;form onSubmit={setGreeting}&amp;gt;
   &amp;lt;button type="submit"&amp;gt;
     Submit New Greeting Message
   &amp;lt;/button&amp;gt;
   &amp;lt;br/&amp;gt;
   &amp;lt;textarea
     ref={userGreeting}
     placeholder="add your new greeting message here!"
   &amp;gt;&amp;lt;/textarea&amp;gt;
   &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run the app with the command below. Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üôå  If everything is working, when you click the "Greet" you should see the greeting message pop up. You can also change the greet message by submitting a new one; it will ask you to sign and pay for the transaction since you are performing an action on the Rinkeby Network. (I've made some changes to App.css to make my UI prettier üòÄ)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qn0jO3Cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638470086396/O7m4hguPeF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qn0jO3Cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638470086396/O7m4hguPeF.png" alt="Screen Shot 2021-12-02 at 21.34.14.png" width="880" height="204"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a basic introduction to creating your own dApp on Ethereum. As a next step, I'd highly recommend the following resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://buildspace.so/"&gt;Buildspace&lt;/a&gt;: a platform for developers to learn about web3 by creating cool projects. It's a fantastic learning resource where you can also connect with other fellow developers looking to get in the web3 world&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cryptozombies.io/"&gt;Cryptozombies&lt;/a&gt;: an interactive platform for making smart contracts in Solidity or Libra.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you enjoyed the article! If you have any questions or comments, feel free to drop them below or reach out to me from &lt;a href="https://twitter.com/edatweets_"&gt;Twitter!&lt;/a&gt; &lt;/p&gt;

</description>
      <category>web3</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How I bought loading time of a media from ~3s to  ~100ms or less</title>
      <author>Rohith Gilla</author>
      <pubDate>Fri, 10 Dec 2021 08:34:56 +0000</pubDate>
      <link>https://dev.to/gillarohith/how-i-bought-loading-time-of-a-media-from-3s-to-100ms-or-less-3m2e</link>
      <guid>https://dev.to/gillarohith/how-i-bought-loading-time-of-a-media-from-3s-to-100ms-or-less-3m2e</guid>
      <description>&lt;p&gt;Hello, in this short blog post we will try to cover on how to improve media loading time when you access from firebase storage.&lt;/p&gt;

&lt;p&gt;This approach is very useful when dealing with media content rich applications, for example social media apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL:DR
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-it-started"&gt;
  &lt;/a&gt;
  How  it started
&lt;/h3&gt;

&lt;p&gt;It started with 3.8s to load the image which is off 401KB from the bucket.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q8YNhzF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/770QiCJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8YNhzF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/770QiCJ.png" alt="https://i.imgur.com/770QiCJ.png" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-it-going"&gt;
  &lt;/a&gt;
  How is it going
&lt;/h3&gt;

&lt;p&gt;It ended up with 71ms üòé  for the same size of the image from the bucket.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RFZ_Jp7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0YLNs4r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RFZ_Jp7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0YLNs4r.png" alt="https://i.imgur.com/0YLNs4r.png" width="880" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an example on how can you improve it when you are using Firebase Storage.&lt;/p&gt;

&lt;p&gt;Note, this approach may not be helpful for you if &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your bucket data is not public&lt;/li&gt;
&lt;li&gt;Want to have some authorisation to view the media&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#inspiration"&gt;
  &lt;/a&gt;
  Inspiration
&lt;/h2&gt;

&lt;p&gt;Usually social media application, the media will be public. Meaning if you get the url you can access it.&lt;/p&gt;

&lt;p&gt;Best example is instagram, in instagram though a profile is private, if you have the image url of any of the post, and try to open in incognito browser the image loads.&lt;/p&gt;

&lt;p&gt;On further analysis you can see the url is just plain with some cache controls, it doesn't have any media key or some keys.&lt;/p&gt;

&lt;p&gt;I have analysed the response of the image from instagram url&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Image size is very low, amazing how well they pull off the compression without loosing quality.&lt;/li&gt;
&lt;li&gt;Cache headers are configured well.&lt;/li&gt;
&lt;li&gt;TTFB is insanely low&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Image size, I really can't tinker around with that since the application has active users and don't want to mess that database urls üòõ&lt;/p&gt;

&lt;p&gt;The problem with Firebase Storage is the storage bucket is in single location, so even say we optimise storage, if the bucket is in US the user from Australia will be cursing the application since it takes even more time for them.&lt;/p&gt;

&lt;p&gt;One way that I have decided to approach the problem is using CDN!&lt;/p&gt;

&lt;p&gt;Content Delivery Network is Magic&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CQTyVPCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/gweb-cloudblog-publish/images/cdn-5mkui.max-700x700.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CQTyVPCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/gweb-cloudblog-publish/images/cdn-5mkui.max-700x700.PNG" alt="https://storage.googleapis.com/gweb-cloudblog-publish/images/cdn-5mkui.max-700x700.PNG" width="700" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;This is an old image, you can assume this has upgraded to many folds&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now one good thing is that firebase storage buckets are accessible in GCP, which means we can use Google Cloud Platform tools to setup Cloud CDN to the storage bucket we had.&lt;/p&gt;

&lt;p&gt;I have followed &lt;a href="https://cloud.google.com/cdn/docs/setting-up-cdn-with-bucket"&gt;this&lt;/a&gt; guide step by step and was able to set it up seemlessly.&lt;/p&gt;

&lt;p&gt;I have followed the &lt;code&gt;Console&lt;/code&gt; method and not &lt;code&gt;gcloud&lt;/code&gt; cli way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h2&gt;

&lt;p&gt;Now we know that not everyone uses &lt;strong&gt;GCP&lt;/strong&gt; so what are the other alternatives you may ask.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloudinary is one of the OG in this era, you get amazing performance with cloudinary.&lt;/li&gt;
&lt;li&gt;If you are in AWS eco system, CloudFront is the service you are looking for. Here is &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-https-requests-s3/"&gt;guide&lt;/a&gt; on how you can add that to S3 bucket.&lt;/li&gt;
&lt;li&gt;Supabase gives you CDN to their Storage Tier out of the box, you need not customise anything üòÄ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want more such short articles let me know in the comments or by reacting to the heart emoji, will write more such content.&lt;/p&gt;

&lt;p&gt;Until then take care!&lt;/p&gt;

&lt;p&gt;Rohith Gilla&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>todayilearned</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Add AutoMapper to .Net 6 </title>
      <author>Mohamad Lawand</author>
      <pubDate>Fri, 10 Dec 2021 08:24:12 +0000</pubDate>
      <link>https://dev.to/moe23/add-automapper-to-net-6-3fdn</link>
      <guid>https://dev.to/moe23/add-automapper-to-net-6-3fdn</guid>
      <description>&lt;p&gt;In this article we will be adding AutoMapper to our AspNetCore 6 application. &lt;/p&gt;

&lt;p&gt;You can watch the full video on Youtube &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jmHKWdMzihY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The first thing we need to do is add the packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet add package AutoMapper &lt;span class="nt"&gt;--version&lt;/span&gt; 10.1.1
dotnet add package AutoMapper.Extensions.Microsoft.DependencyInjection &lt;span class="nt"&gt;--version&lt;/span&gt; 8.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is adding the AutoMapper to our DI container, inside the program.cs we need to add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddAutoMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AppDomain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CurrentDomain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetAssemblies&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now its time to create our AutoMapper profiles, so on the root directory of our application we need to create a folder called Profiles, inside the Profiles folder we will create a new class called UserProfile ("We can call the class anything we want, but per convention we need to name the class based on the entity we want to map as well add the word profile to it"). &lt;/p&gt;

&lt;p&gt;We are going to map the below entity ("User") to the a Dto ("UserDto")&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;FirstName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;LastName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Phone&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;DateOfBirth&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Country&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;MobileNumber&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Sex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserDto&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;FirstName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;LastName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Phone&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;DateOfBirth&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Country&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now inside the UserProfile class we need to add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserProfile&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Profile&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UserProfile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;CreateMap&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UserDto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FirstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FirstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToDateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateOfBirth&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateOfBirth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Phone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Phone&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Country&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Country&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The UserProfile class MUST inherit from Profile class in order for AutoMapper to recognise it.&lt;/p&gt;

&lt;p&gt;Inside the constructor we define the mapping between the Entity and the Dto. &lt;/p&gt;

&lt;p&gt;Once we complete our profile mapping its now to utilise our new map in our controller.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UsersController&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IUnitOfWork&lt;/span&gt; &lt;span class="n"&gt;_unitOfWork&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// define the mapper&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IMapper&lt;/span&gt; &lt;span class="n"&gt;_mapper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// initialise the dependencies with constructor initialisation&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UsersController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;IMapper&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;IUnitOfWork&lt;/span&gt; &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;   
        &lt;span class="n"&gt;_mapper&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_unitOfWork&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;AddUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserDto&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// utilise the mapping :)&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_mappedUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_mapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_unitOfWork&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_mappedUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_unitOfWork&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CompleteAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UserDto&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;CreatedAtRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GetUser"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_mappedUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// return a 201&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So basically we need to initialise the mapper with constructor initialisation.&lt;/p&gt;

&lt;p&gt;Then we need to utilise as follow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_mappedUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_mapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;AutoMapper is a powerful tool to keep in our toolset while developing any .Net applications.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>automapper</category>
      <category>csharp</category>
      <category>aspnetcore</category>
    </item>
    <item>
      <title> ‡¶∞‡¶ø‡ßü‡ßá‡¶ï‡ßç‡¶ü ‡¶∞‡¶æ‡¶â‡¶ü‡¶æ‡¶∞ ‡¶°‡¶Æ v6 - Changes &amp; Updates</title>
      <author>Shakil Ahmed Atik</author>
      <pubDate>Fri, 10 Dec 2021 08:20:57 +0000</pubDate>
      <link>https://dev.to/shakilahmedatik/riyyektt-raauttaar-ddm-v6-changes-updates-2jbc</link>
      <guid>https://dev.to/shakilahmedatik/riyyektt-raauttaar-ddm-v6-changes-updates-2jbc</guid>
      <description>&lt;p&gt;‡¶∏‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø React Router Dom ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßá ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶∞‡¶ø‡¶≤‡¶ø‡¶ú ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡•§ ‡¶è‡¶á ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶®‡ßá ‡¶¨‡ßá‡¶∂ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶¨‡ßç‡¶∞‡ßá‡¶ï‡¶ø‡¶Ç ‡¶ö‡ßá‡¶û‡ßç‡¶ú ‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶è‡¶∏‡ßá‡¶õ‡ßá ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡ßã ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßá‡¶∂ ‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶è‡¶¨‡¶Ç ‡¶®‡¶§‡ßÅ‡¶®‡•§ ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶è‡¶á ‡¶¨‡ßç‡¶≤‡¶ó‡ßá React Router Dom ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶è‡¶∞ ‡¶∏‡¶ï‡¶≤ ‡¶¨‡ßç‡¶∞‡ßá‡¶ï‡¶ø‡¶Ç ‡¶ö‡ßá‡¶û‡ßç‡¶ú ‡¶è‡¶¨‡¶Ç ‡¶®‡¶ø‡¶â ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶® ‡¶∏‡¶π ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶Ü‡¶≤‡ßã‡¶ö‡¶®‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá‡•§&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E0%A6%95%E0%A6%BF%E0%A6%AD%E0%A6%BE%E0%A6%AC%E0%A7%87-%E0%A6%87%E0%A6%A8%E0%A7%8D%E0%A6%B8%E0%A6%9F%E0%A6%B2-%E0%A6%95%E0%A6%B0%E0%A6%AC%E0%A7%8B"&gt;
  &lt;/a&gt;
  ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶á‡¶®‡ßç‡¶∏‡¶ü‡¶≤ ‡¶ï‡¶∞‡¶¨‡ßã?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Npm: npm install react-router@next react-router-dom@next&lt;/code&gt;&lt;br&gt;
&lt;code&gt;Yarn: yarn add react-router@next react-router-dom@next&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-switch-%E0%A6%8F%E0%A6%B0-%E0%A6%AA%E0%A6%B0%E0%A6%BF%E0%A6%AC%E0%A6%B0%E0%A7%8D%E0%A6%A4%E0%A7%87-routes-%E0%A6%8F%E0%A6%B8%E0%A7%87%E0%A6%9B%E0%A7%87"&gt;
  &lt;/a&gt;
  1. Switch ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá Routes ‡¶è‡¶∏‡ßá‡¶õ‡ßá
&lt;/h2&gt;

&lt;p&gt;React Router Dom ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶è &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶ï‡¶∞‡ßá ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá &lt;code&gt;&amp;lt;Routes&amp;gt;&lt;/code&gt; ‡¶Ü‡¶®‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶è‡¶ü‡¶ø‡¶§‡ßá &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; ‡¶è‡¶∞ ‡¶™‡ßç‡¶∞‡¶æ‡ßü ‡¶∏‡¶¨ ‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø ‡¶•‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶™‡¶æ‡¶∂‡¶æ‡¶™‡¶æ‡¶∂‡¶ø ‡¶¨‡ßá‡¶∂ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡ßç‡¶∏‡¶ü‡¶æ ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶∞‡ßü‡ßá‡¶õ‡ßá‡•§&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶®‡¶É&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { BrowserRouter, Switch, Route } from 'react-router-dom';
const App = () =&amp;gt; {
  return (
    &amp;lt;BrowserRouter&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route exact path="/" component={Home} /&amp;gt;
        &amp;lt;Route path="/dashboard" component={Dashboard} /&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { BrowserRouter, Routes, Route } from 'react-router-dom';
const App = () =&amp;gt; {
  return (
    &amp;lt;BrowserRouter&amp;gt;
      &amp;lt;Routes&amp;gt;
        &amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
        &amp;lt;Route path="dashboard" element={&amp;lt;Dashboard/&amp;gt;} /&amp;gt;
      &amp;lt;/Routes&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶è ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß´ ‡¶è‡¶∞ ‡¶Æ‡¶§‡¶® ‡¶Ü‡¶∞ component ‡¶ï‡ßá ‡¶™‡ßç‡¶∞‡¶™‡ßç‡¶∏ ‡¶¨‡¶æ ‡¶ö‡¶ø‡¶≤‡ßç‡¶°‡ßç‡¶∞‡ßá‡¶® ‡¶Ü‡¶Å‡¶ï‡¶æ‡¶∞‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶≤‡¶æ‡¶ó‡ßá‡¶®‡¶æ‡•§ element ‡¶™‡ßç‡¶∞‡¶™ ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞ jsx ‡¶´‡¶∞‡¶Æ‡ßá‡¶ü‡ßá component ‡¶ï‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶π‡ßü‡•§&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-component-%E0%A6%8F%E0%A6%B0-%E0%A6%AC%E0%A6%A6%E0%A6%B2%E0%A7%87-%E0%A6%8F%E0%A6%B8%E0%A7%87%E0%A6%9B%E0%A7%87-element-%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A6%AA"&gt;
  &lt;/a&gt;
  2. component ‡¶è‡¶∞ ‡¶¨‡¶¶‡¶≤‡ßá ‡¶è‡¶∏‡ßá‡¶õ‡ßá element ‡¶™‡ßç‡¶∞‡¶™
&lt;/h2&gt;

&lt;p&gt;‡¶Ü‡¶™‡¶®‡¶ø ‡¶Ø‡¶¶‡¶ø ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£‡ßá ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Ø ‡¶ï‡¶∞‡ßá‡¶®, ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶è  ‡¶Ü‡¶Æ‡¶∞‡¶æ component ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá element ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶õ‡¶ø‡•§ ‡¶è‡¶ü‡¶ø ‡¶Ö‡¶®‡ßá‡¶ï ‡¶π‡ßá‡¶≤‡ßç‡¶™‡¶´‡ßÅ‡¶≤ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞, ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø element e  ‡¶™‡ßç‡¶∞‡¶™‡¶∏ ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶®‡¶É&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;React Router v5&lt;/strong&gt;&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&amp;lt;Route path="/dashboard" render={routeProps =&amp;gt; (
    &amp;lt;Dashboard isAdmin={true} /&amp;gt;
  )}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&amp;lt;Route path="dashboard" element={&amp;lt;Dashboard isAdmin={true} /&amp;gt;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-exact-%E0%A6%8F%E0%A6%AC%E0%A6%82-strict-%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A6%AA-%E0%A6%97%E0%A6%BE%E0%A7%9F%E0%A7%87%E0%A6%AC%E0%A7%81%E0%A6%B2-%E0%A6%B9%E0%A6%BE%E0%A6%93%E0%A7%9F%E0%A6%BE"&gt;
  &lt;/a&gt;
  3. Exact ‡¶è‡¶¨‡¶Ç strict ‡¶™‡ßç‡¶∞‡¶™ ‡¶ó‡¶æ‡ßü‡ßá‡¶¨‡ßÅ‡¶≤ ‡¶π‡¶æ‡¶ì‡ßü‡¶æ
&lt;/h2&gt;

&lt;p&gt;‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶è ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∞‡¶æ‡¶â‡¶ü exactly ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ö ‡¶ï‡¶∞‡ßá ‡¶¨‡¶æ‡¶á ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶§‡¶æ‡¶á extact ‡¶è‡¶¨‡¶Ç strict ‡¶™‡ßç‡¶∞‡¶™‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶® ‡¶®‡ßá‡¶á‡•§&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶®‡¶É&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-relative-paths-%E0%A6%8F%E0%A6%AC%E0%A6%82-links"&gt;
  &lt;/a&gt;
  4.  Relative paths ‡¶è‡¶¨‡¶Ç links
&lt;/h2&gt;

&lt;p&gt;‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶è, paths ‡¶è‡¶¨‡¶Ç link ‡¶¶‡ßÇ‡¶ü‡ßã‡¶á ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡ßá‡¶∞‡ßá‡¶®‡ßç‡¶ü‡ßá ‡¶∞‡¶æ‡¶â‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∞‡¶ø‡¶≤‡ßá‡¶ü‡¶ø‡¶≠‡•§ ‡¶§‡¶æ‡¶á ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∞‡¶ø‡¶≤‡ßá‡¶ü‡¶ø‡¶≠ ‡¶™‡¶æ‡¶•‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶® ‡¶π‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ  ‚Äú/‚Äù ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶õ‡¶æ‡ßú‡¶æ‡¶á ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶®‡¶É&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&amp;lt;Route path="/dashboard" component={Dashboard} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&amp;lt;Route path="dashboard" element={&amp;lt;Dashboard /&amp;gt;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-nested-routes-%E0%A6%8F%E0%A6%96%E0%A6%A8-%E0%A6%86%E0%A6%B0%E0%A7%8B-%E0%A6%B8%E0%A6%B9%E0%A6%9C"&gt;
  &lt;/a&gt;
  5. Nested Routes ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶∞‡ßã ‡¶∏‡¶π‡¶ú
&lt;/h2&gt;

&lt;p&gt;‡¶∞‡ßá‡¶ó‡ßÅ‡¶≤‡¶æ‡¶∞ ‡¶∞‡¶ø‡ßü‡ßá‡¶ï‡ßç‡¶ü ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶Æ‡¶§‡¶® ‡¶è‡¶ñ‡¶® ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶ö‡¶æ‡¶á‡¶≤‡ßç‡¶° ‡¶∞‡¶æ‡¶â‡¶ü ‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá ‡¶™‡ßá‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡¶æ‡¶â‡¶ü ‡¶¶‡¶ø‡ßü‡ßá ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶™ ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶≤‡ßá‡¶á ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶®‡ßá‡¶∏‡ßç‡¶ü‡ßá‡¶° ‡¶∞‡¶æ‡¶â‡¶ü‡•§&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶®‡¶É&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&amp;lt;Route path="/users" component={Users} /&amp;gt;
// ....
users.js
import { useRouteMatch } from 'react-router-dom';
const Users = () =&amp;gt; {
  const { path } = useRouteMatch();
return (
    &amp;lt;div&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route path={`${path}/:id`} component={UserInfo} /&amp;gt;
        &amp;lt;Route path={`${path}/profile`} component={UserProfile} /&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&amp;lt;Route path="users" element={&amp;lt;Users /&amp;gt;}&amp;gt;
  &amp;lt;Route path=":id" element={&amp;lt;UserInfo /&amp;gt;} /&amp;gt;
  &amp;lt;Route path="profile" element={&amp;lt;UserProfile /&amp;gt;} /&amp;gt;
&amp;lt;/Route&amp;gt;
// ....
users.js
import { Outlet } from 'react-router-dom';
const Users = () =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Outlet/&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-usehistory-%E0%A6%8F%E0%A6%B0-%E0%A6%AA%E0%A6%B0%E0%A6%BF%E0%A6%AC%E0%A6%B0%E0%A7%8D%E0%A6%A4%E0%A7%87-%E0%A6%8F%E0%A6%B8%E0%A7%87%E0%A6%9B%E0%A7%87-usenavigte"&gt;
  &lt;/a&gt;
  6. useHistory ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá ‡¶è‡¶∏‡ßá‡¶õ‡ßá useNavigte
&lt;/h2&gt;

&lt;p&gt;useHistory ‡¶ï‡ßá ‡¶ó‡¶æ‡ßü‡ßá‡¶¨‡ßÅ‡¶≤ ‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡ßá ‡¶ö‡¶≤‡ßá ‡¶è‡¶∏‡ßá‡¶õ‡ßá ‡¶Ü‡¶∞‡ßã ‡¶¨‡ßá‡¶∂‡¶ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ‡¶∞‡¶´‡ßÅ‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡¶° useNavigate ‡¶π‡ßÅ‡¶ï‡•§&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶®‡¶É&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useHistory } from 'react-router-dom';
const CustomButton = props =&amp;gt; {
  const history = useHistory();
  const handleClick = () =&amp;gt; {
    history.push('/users');
  }
  return &amp;lt;button onClick={handleClick}&amp;gt;{props.label}&amp;lt;/button&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useNavigate } from 'react-router-dom';
const CustomButton = props =&amp;gt; {
  const navigate = useNavigate();
  const handleClick = () =&amp;gt; {
    navigate('/users');
  }
  return &amp;lt;button onClick={handleClick}&amp;gt;{props.label}&amp;lt;/button&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-%E0%A6%86%E0%A6%B0%E0%A7%8B-%E0%A6%AC%E0%A7%87%E0%A6%B6%E0%A6%BF-%E0%A6%85%E0%A6%AA%E0%A6%9F%E0%A6%BF%E0%A6%AE%E0%A6%BE%E0%A6%87%E0%A6%9C%E0%A6%A1-%E0%A6%86%E0%A6%B0%E0%A7%8B-%E0%A6%AC%E0%A7%87%E0%A6%B6%E0%A6%BF-%E0%A6%AA%E0%A6%BE%E0%A6%93%E0%A7%9F%E0%A6%BE%E0%A6%B0%E0%A6%AB%E0%A7%81%E0%A6%B2"&gt;
  &lt;/a&gt;
  7. ‡¶Ü‡¶∞‡ßã ‡¶¨‡ßá‡¶∂‡¶ø ‡¶Ö‡¶™‡¶ü‡¶ø‡¶Æ‡¶æ‡¶á‡¶ú‡¶°, ‡¶Ü‡¶∞‡ßã ‡¶¨‡ßá‡¶∂‡¶ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ‡¶∞‡¶´‡ßÅ‡¶≤
&lt;/h2&gt;

&lt;p&gt;‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß´ ‡¶è‡¶∞ ‡¶ö‡ßá‡ßü‡ßá ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨ ‡¶Ö‡¶®‡ßá‡¶ï ‡¶¨‡ßá‡¶∂‡¶ø ‡¶™‡¶æ‡¶ì‡ßü‡¶æ‡¶∞‡¶´‡ßÅ‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßÉ‡¶¶‡ßç‡¶¨ ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶™‡¶∞‡ßá‡¶ì ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶á‡¶ú ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß´ ‡¶è‡¶∞ ‡¶™‡ßç‡¶∞‡¶æ‡ßü ‡¶Ö‡¶∞‡ßç‡¶ß‡ßá‡¶ï‡ßá‡¶∞‡¶ì ‡¶ï‡¶Æ‡•§&lt;/p&gt;

&lt;p&gt;‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß´‡¶É &lt;code&gt;‡ß®‡ßÆ.‡ß™ kb&lt;/code&gt;&lt;br&gt;&lt;br&gt;
‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡ß¨‡¶É &lt;code&gt;‡ßß‡ß¶.‡ß® kb&lt;/code&gt; &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Debounced Hover on Nested Components Using Event Delegation</title>
      <author>Jimmy Yeung</author>
      <pubDate>Fri, 10 Dec 2021 08:20:42 +0000</pubDate>
      <link>https://dev.to/jimmyyeung/debounced-hover-on-nested-components-using-event-delegation-18ji</link>
      <guid>https://dev.to/jimmyyeung/debounced-hover-on-nested-components-using-event-delegation-18ji</guid>
      <description>&lt;h2&gt;
  &lt;a href="#consider-the-following-case"&gt;
  &lt;/a&gt;
  Consider the following case:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FirstLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement1&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement2&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where we want to fire a function &lt;code&gt;logAnalytics()&lt;/code&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;when the cursor is hovered on a &lt;code&gt;DeepestElement&lt;/code&gt; for some seconds (e.g. 1s)&lt;/li&gt;
&lt;li&gt;and we want to know which &lt;code&gt;DeepestElement&lt;/code&gt; is captured (Consider some of the info needs to come from the parent components, so we couldn't simply add a listener in &lt;code&gt;DeepestElement&lt;/code&gt;s)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#one-of-the-approach-is"&gt;
  &lt;/a&gt;
  One of the approach is
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;pass &lt;code&gt;onMouseEnter&lt;/code&gt; handlers into nested div, with the use of debounce from &lt;code&gt;lodash-es&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FirstLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt;
        &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;logAnalytic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Some other info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement1&lt;/span&gt;
       &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement2&lt;/span&gt;
       &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Delay for one second&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;debounce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;
      &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Delay for one second&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;debounce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;
      &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But seems lots of useless listeners are added...could we do it in a simpler way?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#event-delegation-approach"&gt;
  &lt;/a&gt;
  Event Delegation Approach
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First we define a hook &lt;code&gt;useDebounceHover&lt;/code&gt;, the input &lt;code&gt;onHover&lt;/code&gt; will be called &lt;code&gt;onMouseOut&lt;/code&gt; if the time difference between &lt;code&gt;onMouseOver&lt;/code&gt; and &lt;code&gt;onMouseOut&lt;/code&gt; &amp;gt; 1s (&lt;code&gt;onMouseEnter&lt;/code&gt; cannot be used in event delegation, check &lt;a href="https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave#:~:text=Events%20mouseenter%2Fmouseleave%20are%20like,from%20descendants%2C%20are%20not%20counted"&gt;here&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event"&gt;here&lt;/a&gt; for more details)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DOMAttributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ComponentIdToTypeMapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;some_data_id_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;some_data_id_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useDebounceHover&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Element&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;onHover&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;duration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Pick&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DOMAttributes&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onMouseOver&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onMouseOut&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;some_data_id_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;some_data_id_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;labelType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ComponentIdToTypeMapping&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOut&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;labelType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ComponentIdToTypeMapping&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;onHover&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;duration&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;onHover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;onMouseOver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;onMouseOut&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOut&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useDebounceHover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And so you could:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FirstLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onMouseOver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onMouseOut&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDebounceHover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;logAnalytic&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; 
      &lt;span class="nx"&gt;onMouseOver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseOver&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;onMouseOut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseOut&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement1&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement2&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DeepestElement1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DeepestElement2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The presentation layer should be simpler coz with the hook, we just need to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add a parent div for &lt;code&gt;onMouseOver&lt;/code&gt; and &lt;code&gt;onMouseOut&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;data-id&lt;/code&gt; to the deepest components&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Note that &lt;a href="https://dev.to/thawsitt/should-i-use-event-delegation-in-react-nl0"&gt;React has done some optimization&lt;/a&gt; so the performance w/o event delegation are similar. &lt;strong&gt;Event Delegation does not help in performance in React.&lt;/strong&gt; But for simplicity, actually my team prefers to use Event Delegation.&lt;/p&gt;

&lt;p&gt;But again, there's always trade-off and it depends on different cases ;D.&lt;/p&gt;

</description>
      <category>react</category>
      <category>eventdelegation</category>
      <category>hover</category>
      <category>simplicity</category>
    </item>
    <item>
      <title>GUI in Python Using Tkinter</title>
      <author>Anjali Kumawat</author>
      <pubDate>Fri, 10 Dec 2021 08:11:11 +0000</pubDate>
      <link>https://dev.to/anjalikumawat2002/gui-in-python-using-tkinter-gfa</link>
      <guid>https://dev.to/anjalikumawat2002/gui-in-python-using-tkinter-gfa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#gui-in-python"&gt;
  &lt;/a&gt;
  GUI in Python
&lt;/h2&gt;

&lt;p&gt;Python libraries to create Graphical Interfaces :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tkinter&lt;/li&gt;
&lt;li&gt;Python QT&lt;/li&gt;
&lt;li&gt;wxPython&lt;/li&gt;
&lt;li&gt;Kivy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tkinter is an inbuilt Python module used to create simple GUI apps.&lt;/p&gt;

&lt;p&gt;Tk provides following widgets :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;button&lt;/li&gt;
&lt;li&gt;canvas&lt;/li&gt;
&lt;li&gt;checkbutton&lt;/li&gt;
&lt;li&gt;Combobox&lt;/li&gt;
&lt;li&gt;entry&lt;/li&gt;
&lt;li&gt;frame&lt;/li&gt;
&lt;li&gt;label&lt;/li&gt;
&lt;li&gt;labelframe&lt;/li&gt;
&lt;li&gt;listbox&lt;/li&gt;
&lt;li&gt;menu&lt;/li&gt;
&lt;li&gt;menubutton&lt;/li&gt;
&lt;li&gt;message&lt;/li&gt;
&lt;li&gt;notebook&lt;/li&gt;
&lt;li&gt;tk_optionmenu&lt;/li&gt;
&lt;li&gt;panedwindow&lt;/li&gt;
&lt;li&gt;progressbar&lt;/li&gt;
&lt;li&gt;radiobutton&lt;/li&gt;
&lt;li&gt;scale&lt;/li&gt;
&lt;li&gt;scrollbar&lt;/li&gt;
&lt;li&gt;separator&lt;/li&gt;
&lt;li&gt;sizegrip&lt;/li&gt;
&lt;li&gt;spinbox&lt;/li&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;treeview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It provided the following top-level windows :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tk_chooseColor&lt;/li&gt;
&lt;li&gt;tk_chooseDirectory&lt;/li&gt;
&lt;li&gt;tk_dialog&lt;/li&gt;
&lt;li&gt;tk_getOpenFile&lt;/li&gt;
&lt;li&gt;tk_getSaveFile&lt;/li&gt;
&lt;li&gt;tk_messageBox&lt;/li&gt;
&lt;li&gt;tk_popup&lt;/li&gt;
&lt;li&gt;toplevel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tk also provides three geometry managers :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‚Äã   place  -  It positions widgets at absolute locations&lt;/li&gt;
&lt;li&gt;‚Äã    grid    -  It arranges widgets in a grid&lt;/li&gt;
&lt;li&gt;‚Äã    pack  -  It packs widgets into a cavity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#basics-of-tkinter"&gt;
  &lt;/a&gt;
  Basics of tkinter
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; import tkinter module&lt;/li&gt;
&lt;li&gt; create the main window (container)&lt;/li&gt;
&lt;li&gt; Add any number of widgets to the main window&lt;/li&gt;
&lt;li&gt; Enter the main event loop&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Eg.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import tkinter
window = Tkinter.Tk()          # creates main window
window.title("GUI")
label = tkinter.Label(window , text="Hello World !!").pack()
window.mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;mainloop() is used when our application is ready to run. mainloop() is an infinite loop used to run the application, wait for an event to occur and process the event till the window is not closed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#widgets"&gt;
  &lt;/a&gt;
  Widgets
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#button"&gt;
  &lt;/a&gt;
  Button
&lt;/h3&gt;

&lt;p&gt;It is used to add a button in our application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Button(master, option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;master&lt;/strong&gt; represents the parent window.&lt;/p&gt;

&lt;p&gt;activebackground    :   sets the background color when button is under the cursor.&lt;/p&gt;

&lt;p&gt;activeforeground     :    sets the foreground color when button is under the cursor.&lt;/p&gt;

&lt;p&gt;bg                          :    sets normal background color&lt;/p&gt;

&lt;p&gt;fg                          :     sets the foreground color&lt;/p&gt;

&lt;p&gt;command            :     to call a function&lt;/p&gt;

&lt;p&gt;font                        :     sets the font of button label&lt;/p&gt;

&lt;p&gt;image                    :     sets the image on the button&lt;/p&gt;

&lt;p&gt;width                     :     sets the width of the button&lt;/p&gt;

&lt;p&gt;height                  :     sets the height of the button&lt;/p&gt;

&lt;p&gt;justify                   :     LEFT , RIGHT , CENTER&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import tkinter as tk
window = tk.Tk()
window.title("Python")
button = tk.Button(window , text = 'GUI',width = 25,command = window.destroy)
button.pack()
window.mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ods3yj1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62aefbj9ak9pabk98zwa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ods3yj1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62aefbj9ak9pabk98zwa.png" alt="Image description" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#label"&gt;
  &lt;/a&gt;
  Label
&lt;/h3&gt;

&lt;p&gt;It is used to display text or image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Label(master,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg               :       sets the normal background color&lt;br&gt;
command     :        to call a function&lt;br&gt;
font              :      sets the font of Label text &lt;br&gt;
image          :       sets the image on the Label&lt;br&gt;
width           :        sets the width of the Label&lt;br&gt;&lt;br&gt;
height           :     sets the height of the Label&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
root = Tk()
l1 = Label(root,text="GUI Python",bg="pink",width = 25)
l1.pack()
root.mainloop()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXHTKqJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp2agtp2g03s17a008c5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXHTKqJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp2agtp2g03s17a008c5.png" alt="Image description" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#entry"&gt;
  &lt;/a&gt;
  Entry
&lt;/h3&gt;

&lt;p&gt;(Text Field)&lt;/p&gt;

&lt;p&gt;It is used to input single line of text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Entry(master,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg      :       sets the background color&lt;/p&gt;

&lt;p&gt;fg      :       sets the foreground color&lt;/p&gt;

&lt;p&gt;font        :       sets the font for widget&lt;/p&gt;

&lt;p&gt;justify :       LEFT , RIGHT , CENTER&lt;/p&gt;

&lt;p&gt;command :       to call a function&lt;/p&gt;

&lt;p&gt;width       :       sets the width of widget&lt;/p&gt;

&lt;p&gt;height      :       sets the height of widget&lt;/p&gt;

&lt;p&gt;show        :       Normally, the characters that the user types appear in the entry. To make a  .password.   entry that echoes each character as (show = "*")&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-entry"&gt;
  &lt;/a&gt;
  Methods of Entry
&lt;/h4&gt;

&lt;p&gt;delete(start,end)           :   delete a character or range of characters&lt;/p&gt;

&lt;p&gt;get()                           :     returns the text of widget&lt;/p&gt;

&lt;p&gt;insert(index,string)     :     inserts text at the specified index&lt;/p&gt;

&lt;p&gt;select_range(start,end) :     selects specified range.&lt;/p&gt;

&lt;p&gt;select_present()            :     returns True if there is a selection,false otherwise&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
master = Tk()
l1=Label(master,text='first Name')
l1.grid(row=0)
l2=Label(master,text='Last Name')
l2.grid(row=1)
e1=Entry(master)
e2=Entry(master)
e1.grid(row=0,column=1)
e2.grid(row=1,column=1)
mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vsOsd9E6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10au0b7qovh4bhnc781p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vsOsd9E6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10au0b7qovh4bhnc781p.png" alt="Image description" width="308" height="123"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#text"&gt;
  &lt;/a&gt;
  Text
&lt;/h3&gt;

&lt;p&gt;It is used to edit multi line text and formate the way it has to be displayed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;t = Text(master,option = value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;highlightcolor      :       set the color of focus highlight&lt;/p&gt;

&lt;p&gt;insertbackground  :     set the background of the widget&lt;/p&gt;

&lt;p&gt;bg                       :      sets the normal background color&lt;/p&gt;

&lt;p&gt;fg                        :     sets the foreground color&lt;/p&gt;

&lt;p&gt;bd                       :      sets width of the border around the widget. (Default is 2 pixels)&lt;/p&gt;

&lt;p&gt;font                       :        sets the font&lt;/p&gt;

&lt;p&gt;image                  :        sets the image&lt;/p&gt;

&lt;p&gt;width                   :       sets the width (in pixels)&lt;/p&gt;

&lt;p&gt;height                 :        sets the height (in lines)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
root = Tk()
t = Text(root , height = 4,width=40)
t.pack()
t.insert(END,'ANJALI KUMAWAT \nCOMPUTER SCIENCE UNDERGRAD \nGWOC"21" CONTRIBUTOR')
mainloop()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0icy3tcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m244z16lq36nd428cfnk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0icy3tcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m244z16lq36nd428cfnk.png" alt="Image description" width="404" height="108"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-text"&gt;
  &lt;/a&gt;
  Methods of Text
&lt;/h4&gt;

&lt;p&gt;delete(start,end)   -   deletes a specific character or a range of text&lt;br&gt;
get(start,end)         -       returns a specific character or a range of text&lt;br&gt;
insert(index,string)   -       inserts text at the specified index&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#checkbutton"&gt;
  &lt;/a&gt;
  CheckButton
&lt;/h3&gt;

&lt;p&gt;It is used to display a number of options to a user as toggle buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = CheckButton(master , option = value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg              :       sets background color&lt;/p&gt;

&lt;p&gt;fg               :      sets foreground color&lt;/p&gt;

&lt;p&gt;command :       to call a function&lt;/p&gt;

&lt;p&gt;font              :     sets the font&lt;/p&gt;

&lt;p&gt;image         :     sets the image&lt;/p&gt;

&lt;p&gt;cffvalue        :       A checkbutton's associated control variable will be &lt;strong&gt;set to 0&lt;/strong&gt; when it is cleared(off).We can supply an alternate value for the off state.&lt;/p&gt;

&lt;p&gt;onvalue     :       A checkbutton's associated control variable will be &lt;strong&gt;set to 1&lt;/strong&gt; when it is set(on).We can supply an alternate value for the on state.&lt;/p&gt;

&lt;p&gt;state            :      Default is &lt;strong&gt;state=NORMAL&lt;/strong&gt; but we can use &lt;strong&gt;state=DISANLED&lt;/strong&gt; to grey out the control and make is unresponsive.&lt;/p&gt;

&lt;p&gt;variable        :       This is control variable associated with checkbutton that tracks the current state of widget.Normally this variable is an IntVar and 0 means cleared and 1 means set.&lt;/p&gt;

&lt;p&gt;Width           :       sets the width of widget.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-checkbutton"&gt;
  &lt;/a&gt;
  Methods of checkbutton
&lt;/h4&gt;

&lt;p&gt;Deselect()      -       clears the checkbutton&lt;br&gt;
Select()        -       selects the checkbutton&lt;br&gt;
Toggle()            -       reverses the state(on/off)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
root = Tk()
var1 = IntVar()
var2 = IntVar()
c1 = Checkbutton(root,text = "like Mango ? ",variable = var1,onvalue = 1,offvalue = 0,width = 40)
c2 = Checkbutton(root,text = "like Orange ? ",variable = var2,onvalue = 1,offvalue = 0,width = 40)
c1.pack()
c2.pack()
root.mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2TKIXhKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz2bfbyfevkmy4ki0zas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2TKIXhKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz2bfbyfevkmy4ki0zas.png" alt="Image description" width="373" height="97"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#radiobutton"&gt;
  &lt;/a&gt;
  RadioButton
&lt;/h3&gt;

&lt;p&gt;It is used to offer multiple choice option to the used and user can select one option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = RadioButton(master,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg              :       sets the background color&lt;/p&gt;

&lt;p&gt;fg               :      sets foreground color&lt;/p&gt;

&lt;p&gt;command :       to call a function&lt;/p&gt;

&lt;p&gt;font              :     sets the font&lt;/p&gt;

&lt;p&gt;image         :     sets the image&lt;/p&gt;

&lt;p&gt;width           :       sets the width&lt;/p&gt;

&lt;p&gt;variable        :       variable associated with the Radiobuttons.&lt;/p&gt;

&lt;p&gt;value           :       when a radiobutton is selected by user,its control variable is set to its associated value. If the control variable is an IntVar , give each radiobutton in the group a different integer value option. If the control variable is a StringVar,give each radiobutton a different string value option.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-radiobutton"&gt;
  &lt;/a&gt;
  Methods of Radiobutton
&lt;/h4&gt;

&lt;p&gt;select()        -       selects Radiobutton&lt;br&gt;
deselect()      -       deselects Radiobutton&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *

def select():
    if choice.get()==1:
        order = "Large Pizza"
    elif choice.get()==2:
        order = "Medium Pizza"
    else:
        order = "Small Pizza"
    selection = "You have ordered "+order
    label.config(text=selection)

root = Tk()
root.title("Pizza Corner")
choice = IntVar()
rbLarge = Radiobutton(root, text = "Large Pizza",font=20,variable=choice,value=1,command=select)
rbMedium = Radiobutton(root, text = "Medium Pizza",font=20,variable=choice,value=2,command=select)
rbSmall = Radiobutton(root, text = "Small Pizza",font=20,variable=choice,value=3,command=select)
rbLarge.pack(anchor=W)
rbMedium.pack(anchor=W)
rbSmall.pack(anchor=W)
label = Label(root,text="Choose pizza that you want!!",font=35)
label.pack()
mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;When we are not clicking on any RadioButton - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gvNgll4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqcqcm115yhhvi3kjfqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gvNgll4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqcqcm115yhhvi3kjfqs.png" alt="Image description" width="880" height="122"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we are clicking on any RadioButton then -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---A55lLun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcgpr5nosgxnuvu2emz6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---A55lLun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcgpr5nosgxnuvu2emz6.png" alt="Image description" width="880" height="126"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spinbox"&gt;
  &lt;/a&gt;
  SpinBox
&lt;/h3&gt;

&lt;p&gt;It is used to select a value from fixed number of values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Spinbox(root,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg              :       sets the background color&lt;/p&gt;

&lt;p&gt;fg               :      sets foreground color&lt;/p&gt;

&lt;p&gt;font              :     sets the font&lt;/p&gt;

&lt;p&gt;justify       :     LEFT,RIGHT,CENTER&lt;/p&gt;

&lt;p&gt;width         :     sets the width for widget&lt;/p&gt;

&lt;p&gt;from_        :      sets the minimum value&lt;/p&gt;

&lt;p&gt;to             :        sets the maximum value&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-for-spinbox"&gt;
  &lt;/a&gt;
  Methods for Spinbox
&lt;/h4&gt;

&lt;p&gt;get()       -       returns the value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *

def select():
    string = "Selection is "+str(sp.get())
    l.config(text=string)

root = Tk()
sp = Spinbox(root,from_=0,to=10,command=select,width = 15,font=30)
sp.pack()
l=Label(root,text=" ")
l.pack()
mainloop()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚ÄãOutput is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oyh-gDSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsvyvemguvt4i61yatrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oyh-gDSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsvyvemguvt4i61yatrg.png" alt="Image description" width="880" height="95"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep Learning......&lt;br&gt;
Keep Coding......üë©‚Äçüíª‚ù§Ô∏èüôå&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>python</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
