<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Remote Jobs for Javascript, Go, Python and Fullstack Developers</title>
      <author>Stefan Wuthrich</author>
      <pubDate>Mon, 19 Jul 2021 08:26:25 +0000</pubDate>
      <link>https://dev.to/golangch/remote-jobs-for-javascript-go-python-and-fullstack-developers-4c8f</link>
      <guid>https://dev.to/golangch/remote-jobs-for-javascript-go-python-and-fullstack-developers-4c8f</guid>
      <description>&lt;p&gt;We know it all...&lt;/p&gt;

&lt;p&gt;Since Covid 19 changed all our lives, Remote Jobs offers are growing, as many companies realized that this mode of work works fine for them and can attract new developers out there.&lt;/p&gt;

&lt;p&gt;I have run now about three years four developer-related Job Boards, which have since begun a Remote Filter for Job Candidates and, of course, those options for companies adding Remote Jobs.&lt;/p&gt;

&lt;p&gt;Here the boards:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fullstackjob.com/jobs/remote-ok"&gt;Remote Fullstack Developer Jobs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://javascriptjob.xyz/jobs/remote-ok"&gt;Remote Javascript Developer Jobs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://pythonjob.xyz/jobs/remote-ok"&gt;Remote Python Developer Jobs&lt;/a&gt;&lt;br&gt;
&lt;a href="https://golangjob.xyz/jobs/remote-ok"&gt;Remote Golang Developer Jobs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>go</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>A Look at Selenium and Its Alternative Solution for 2021 and Beyond
</title>
      <author>Brian Anderson</author>
      <pubDate>Mon, 19 Jul 2021 08:15:51 +0000</pubDate>
      <link>https://dev.to/briananderson2209/a-look-at-selenium-and-its-alternative-solution-for-2021-and-beyond-1n82</link>
      <guid>https://dev.to/briananderson2209/a-look-at-selenium-and-its-alternative-solution-for-2021-and-beyond-1n82</guid>
      <description>&lt;p&gt;Selenium was initially published in the mid-2000s as a Web browser plugin for recording and replaying Web browser interactions. Since then, it has undoubtedly become the most used test automation tool. According to a study of the automated testing community, the framework is utilized by more than 80% of those polled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Selenium is an open-source framework for Web-based application automation, including Selenium WebDriver, Selenium IDE, and Selenium Grid. &lt;/li&gt;
&lt;li&gt;Selenium IDE is a browser plugin that captures and replays user interactions.&lt;/li&gt;
&lt;li&gt;Selenium Grid enables WebDriver to simultaneously execute automation tests on many computers, browsers, and OS systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selenium is frequently utilized in the software automation sector due to the benefits it gives. First, it is developer-friendly, enabling developers to build and test any programming language of their choosing. Second, the framework is a cross-browser and cross-operating system, allowing teams to perform test automation across several browsers and operating systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-structure-of-selenium-webdriver"&gt;
  &lt;/a&gt;
  The Structure of Selenium WebDriver
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---u8T-GAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pudy65usdmmyaxeh35vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---u8T-GAm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pudy65usdmmyaxeh35vb.png" alt="Selenium WebDriver Architecture"&gt;&lt;/a&gt;&lt;br&gt;
The Selenium WebDriver architecture is made up of three parts: the WebDriver, the Browser Specific Drivers or Drivers, and the Browser. These components communicate bidirectionally or two-ways, issuing HTTP requests and receiving HTTP replies in RESTful services.&lt;/p&gt;

&lt;p&gt;WebDriver includes language-specific client libraries, often known as language bindings, for creating automation scripts and executing script commands in the Browser using Drivers. Selenium can now enable scripting in various languages, including Java, C#, Python, Ruby, and JavaScript, thanks to these language bindings.&lt;br&gt;
Browser Specific Drivers, also known as Drivers, are responsible for running the actual Browser via delivering WebDriver requests. Drivers can be implemented and extended by third parties. Two browser driver implementations are GeckoDriver for Firefox and ChromeDriver for Chrome.&lt;br&gt;
Browser component accepts requests from the Drivers component to drive interactions on the application under test (AUT). Selenium is compatible with all major browsers, including Chrome, Firefox, Internet Explorer, Opera, and Safari.&lt;/p&gt;

&lt;p&gt;WebDriver can operate on a separate system than the Drivers and Browser components. In this configuration, WebDriver connects with these components remotely through Selenium Server or Remote WebDriver. Selenium can now perform automated tests on many browsers and computers seamlessly at the same time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-this-structure"&gt;
  &lt;/a&gt;
  Benefits of this structure
&lt;/h2&gt;

&lt;p&gt;The architecture is disjointed. Three components connect using the HTTP protocol and RESTful Web services as the mode of communication. This property enables an element to function independently of the others. Changes and improvements to one component may be performed quickly and without impacting the others. Selenium may be platform- and language-neutral thanks to its loosely linked design.&lt;br&gt;
Moreover, the architecture is accessible. Selenium WebDriver is a W3C Recommendation, which allows for many contributions from the software community.&lt;br&gt;
These architectural characteristics result in a spate of significant Selenium characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cross-platform and cross-language compatibility. Because several implementations of the Drivers component are available, users may run automation scripts on various operating systems and browsers. As long as language bindings in the WebDriver are accessible, Selenium automation scripts may be developed in various languages.&lt;/li&gt;
&lt;li&gt;Developer friendly. Because Selenium supports various languages, developers may build automation scripts in their preferred language. They may also create and incorporate a binding library in the WebDriver component to help a new scripting language if necessary.&lt;/li&gt;
&lt;li&gt;Open for extension. The Selenium architecture allows for language binding expansions by supporting additional test scripting languages or Drivers for new browsers.&lt;/li&gt;
&lt;li&gt;Open for integration with a test automation framework. A new test automation framework may be constructed on top of Selenium by utilizing it as an engine for executing scripts for Web automation, as demonstrated in the figure below.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-demand-for-a-selenium-alternative-solution"&gt;
  &lt;/a&gt;
  The Demand for a Selenium Alternative Solution
&lt;/h2&gt;

&lt;p&gt;When viewed through the eyes of individuals who do not possess programming or sophisticated technical abilities, Selenium's advantages in assisting programming are really its drawbacks. Many testers see Selenium as a barrier to getting started with test automation due to complex programming. As a result, using Selenium directly presents a high learning curve for many testers.&lt;/p&gt;

&lt;p&gt;Selenium also lacks means for separating automation scripts from test data, resulting in high test script maintenance costs and difficulties with test script and test data reusability. There is also a deficiency in managing and organizing test materials such as test scripts, data, and test objects.&lt;/p&gt;

&lt;p&gt;These restrictions help to explain the rapid rise of Selenium-based products in the software test automation industry in recent years. Teams and companies want a solution that provides out-of-the-box testing capabilities without requiring them to develop their own Selenium-based framework to start their automation process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-structure-of-seleniumbased-test-frameworks"&gt;
  &lt;/a&gt;
  The Structure of Selenium-based Test Frameworks
&lt;/h2&gt;

&lt;p&gt;On top of Selenium, a variety of test automation frameworks have been developed. These frameworks attempt to solve several of Selenium's shortcomings, such as the absence of modules for reporting, logging, monitoring, and reusing test automation assets. Importantly, these frameworks aid in overcoming the challenge of developing and launching an automation effort with Selenium.&lt;/p&gt;

&lt;p&gt;The diagram below presents various components of a typical test framework that uses Selenium as its test execution engine. &lt;/p&gt;

&lt;p&gt;Many current automation solutions use this Selenium-based framework. Some examples are Katalon Studio, CrossBrowserTesting, QMetry Automation Studio, Lambda Test, and Sauce Labs. Many of these solutions go a step further by incorporating Appium as a test automation engine for mobile apps, allowing them to handle both web and mobile automation in a single tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Resource&lt;/em&gt;&lt;/strong&gt;: &lt;a href="https://www.katalon.com/resources-center/blog/selenium-alternative-solution/"&gt;A Deep Dive into Selenium, Its Alternative Solution for 2021 and Beyond&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.katalon.com/resources-center/blog/selenium-ide-alternative-firefox-chrome/"&gt;Top 3 Selenium IDE Alternative&lt;/a&gt;&lt;br&gt;
Also Katalon are introduce &lt;a href="https://www.katalon.com/selenium-test-migration/"&gt;how to migrate from Selenium&lt;/a&gt; &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>testing</category>
      <category>testdev</category>
    </item>
    <item>
      <title>AWS open source news and updates #76</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 19 Jul 2021 07:52:13 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-76-2e23</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-76-2e23</guid>
      <description>&lt;h2&gt;
  &lt;a href="#19th-july-2021-instalment-76"&gt;
  &lt;/a&gt;
  19th July, 2021 - Instalment #76
&lt;/h2&gt;

&lt;p&gt;Newsletter #76.&lt;/p&gt;

&lt;p&gt;This week, we have new oss projects such as ecs-files-composer, lucid-dynamodb, kubectl-trace, tailscale-layer and more. AWS and community blog posts featuring OpenSearch, Kubernetes, COBOL, Jamulus, Firecracker, Apache Hudi, Apache Kakfa, Apache Flink, Redis and more. In the videos section we catch up with a couple of the sessions from the Airflow Summit and finally, some new events for your diary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Tal Hoffman, Corey Quinn, John Preston, Pahud Hsieh, Vu Dao, Martin Baillie, Richard Austin Melchior, Re Alvarez-Parmar, Nithish Kumar Murcherla, Drew Zhang, Ali Arsanjani, Ashish Khetan, Li Zhang, Yi Xiang,  Piotr Chotkowski, John Mousa, Sascha Janssen, Veliswa Boya, Didier Durand, Scott Kellish, Asaf Porat Stoler, Zach Gardner, Yaron Sananes, Zoltan Bozoky, Soyean Kim, Victor Leung, Nelson Assis, Param Sharma, Arindam Chatterji, Kyle Thomson, Matt Asay, Antony Prasad Thevaraj, Helge Aufderheide, Dhiraj Thakur, Sameer Goel, and Imtiaz Sayed.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-from-open-source-projects"&gt;
  &lt;/a&gt;
  Latest from open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ecs-files-composer&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/qs"&gt;ecs-files-composer&lt;/a&gt; and useful open source project from John Preston, ECS Files Composer, is a small program that will allow users to define files they need pulled out of AWS Services, such as AWS S3 or AWS SSM Parameter Store, and load the content to a given location, adding builtin capabilities to set file ownership, mode, and other handy features. Great examples, use cases and top notch documentation as you would expect from a project form Mr Preston. Nice work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;lucid-dynamodb&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qj"&gt;lucid-dynamodb&lt;/a&gt; Dinesh Sonachalam has put together this open source project that is Python wrapper for AWS DynamoDB, and he provides plenty of documentation and examples to help you get going with this project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;kubectl-trace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qi"&gt;kubectl-trace&lt;/a&gt; this new project, kubectl trace, is a kubectl plugin that allows you to schedule the execution of bpftrace programs in your Kubernetes cluster. &lt;a href="https://github.com/iovisor/bpftrace"&gt;bpftrace&lt;/a&gt; is a high-level tracing language for Linux enhanced Berkeley Packet Filter (eBPF) available in recent Linux kernels (4.x). This project has good documentation and examples so you can get going.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tailscale-layer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qh"&gt;tailscale-layer&lt;/a&gt; what is this, an open source project from Corey Quinn? Indeed it is, and this project builds an AWS Lambda extension to provide a SOCKS5 proxy inside of the Lambda runtime environment. According to Corey, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tailscale is a next-generation VPN approach that wraps around Wireguard. It offers a useful management interface, uses far less power on mobile devices than options like OpenVPN, and claims to run on almost anything.&lt;br&gt;
In other words, this extension can be used with any existing Lambda function to provide communication across your Tailscale network — without having to configure a bunch of network rules that, frankly, don't work very well across different provider boundaries. &lt;br&gt;
So far, I've used the extension to have Lambda functions talk to: The Raspberry Pi in my video production studio/guest room/sewing closet/screamatorium. My massively overpowered instance running in Oracle Cloud's yes-it's-actually-free tier. My iPhone and iPad. Resources living inside of my AWS VPCs, without having to use a NAT instance or Managed NAT Gateway to allow those functions to also speak to external resources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Read more in the blog post he put around this, in &lt;a href="https://aws-oss.beachgeek.co.uk/q6"&gt;Corey Writes Open-Source Code for Lambda and Tailscale&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;serverless-mux-on-aws&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qx"&gt;serverless-mux-on-aws&lt;/a&gt; new project from Pahud Hsieh, that shows you how you can do a local build, test and deploy your &lt;a href="https://github.com/gorilla/mux"&gt;gorilla/mux&lt;/a&gt; application for both AWS Lambda and AWS Fargate with AWS CDK.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b_kqcNps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pahud/serverless-mux-on-aws/63e544f85d44a4de606ad2f4ad06e93578e82fd0/images/serverless-mux-go.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_kqcNps--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/pahud/serverless-mux-on-aws/63e544f85d44a4de606ad2f4ad06e93578e82fd0/images/serverless-mux-go.svg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;blog-multi-arch-springboot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qf"&gt;blog-multi-arch-springboot&lt;/a&gt; an open source project that shows you how you can build a multi-architecture pipeline to deploy a sample application (in this instance a Spring Boot app) onto any architecture type and to any location (thanks to the ECS Anywhere capability of Amazon ECS). The python CDK application builds everything you need, and I have written a blog post that will walk you through this in &lt;a href="https://aws-oss.beachgeek.co.uk/qg"&gt;Creating a multi architecture CI/CD deployment for Amazon ECS and ECS Anywhere&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-open-source-posts"&gt;
  &lt;/a&gt;
  Community open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Firecracker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tal Hoffman dives deep in his blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/qz"&gt;Firecracker internals: a deep dive inside the technology powering AWS Lambda&lt;/a&gt; guiding you through some of the Firecracker code. An often forgotten fact that sometimes just going through the source code of open source projects like Firecracker is one of the best ways to improve your understanding of it. Very nice post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NPJSMRyl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/MUj6Aon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NPJSMRyl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/MUj6Aon.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emacs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are an Emacs user, then Martin Baillie has a must read post for you this week, in &lt;a href="https://aws-oss.beachgeek.co.uk/r0"&gt;Emacs TRAMP over AWS SSM APIs&lt;/a&gt; showing you how you can use Emacs &lt;a href="https://www.emacswiki.org/emacs/TrampMode"&gt;TRAMP&lt;/a&gt; mode to copy files to and from different locations on an EC2 instances, using SSH proxied over SSM.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qy"&gt;AWS EKS With EFS CSI Driver And IRSA Using CDK&lt;/a&gt; another very nice post from Vu Dao on how you can configure your Amazon EKS cluster to use AWS EFS (Elastic File Service) with the  Amazon EFS Container Storage Interface (CSI) driver, via an AWS CDK application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C4am5Ya8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X0JpEvKy--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/efs-provisioner-arch.png%253Fraw%253Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C4am5Ya8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X0JpEvKy--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/efs-csi/img/efs-provisioner-arch.png%253Fraw%253Dtrue" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Richard Austin Melchior has put together this post, &lt;a href="https://aws-oss.beachgeek.co.uk/qr"&gt;Ship it, Next.js on AWS with Serverless Framework&lt;/a&gt; where he shows you how you can take a built Next.js application and ship it onto an AWS serverless stack using the Serverless framework.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-amazon-open-source-posts"&gt;
  &lt;/a&gt;
  AWS and Amazon open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qc"&gt;OpenSearch 1.0 launches&lt;/a&gt; Eli Fisher, Carl Meadows, Jules Graybill, Kyle Davis, and Mehul Shah share in this blog post the exciting news that the OpenSearch project has reached a major milestone with the launch of OpenSearch 1.0. This milestone marks the first production-ready version of OpenSearch. In addition to being production-ready, multiple new enhancements were added to the project: data streams, trace analytics span filtering, report scheduling, and more.&lt;/p&gt;

&lt;p&gt;Essential reading this week, and a great shout out to the contributors so far.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;COBOL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Great two part post from Veliswa Boya and Didier Durand, &lt;a href="https://aws-oss.beachgeek.co.uk/qk"&gt;Serverless COBOL: Rejuvenating legacy code with open source software Part 1&lt;/a&gt; (and &lt;a href="https://aws-oss.beachgeek.co.uk/ql"&gt;Part 2&lt;/a&gt;) show you how you can use open source software, in this instance GnuCOBOL, combined with AWS to extend the life of legacy code to help build modern (serverless) mainframes. They also take a look at the additional benefits of open source software when legacy features are deployed in such a modern environment. Really great post, and recommended reading this week. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4mwXu8ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/07/08/didduran-Lambda-Cobol_architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4mwXu8ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/07/08/didduran-Lambda-Cobol_architecture.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jamulus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jamulus is an open source project that enables you to play music, rehearse, or just jam with anyone online with low latency and works across multiple desktop clients such as Windows, macOS, or Linux. These clients connect to Jamulus servers worldwide. In this post from Helge Aufderheide, &lt;a href="https://aws-oss.beachgeek.co.uk/qv"&gt;Running your own server for Jamulus, an open source solution to jam with other musicians online&lt;/a&gt; you will soon be able to get your own Jamulus server up and running and fulfil your musical rockstar ambitions to a global audience (rather than just the shower or car)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwEI31qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/06/25/ahelge-jamulus_f7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwEI31qs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/06/25/ahelge-jamulus_f7.png" alt="jamullus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/qb"&gt;Building an Apache Kafka data processing Java application using the AWS CDK&lt;/a&gt; is a post from  Piotr Chotkowski who walks you through the process of creating a simple end-to-end data processing application. Thanks to AWS Cloud Development Kit (CDK), in just a few lines of code you will have set up an Apache Kafka cluster as well as explaining how to structure your project and package your application for deployment. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--23xwxehh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2021/07/12/architecture-1024x517.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--23xwxehh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2021/07/12/architecture-1024x517.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Hudi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dhiraj Thakur, Sameer Goel, and Imtiaz Sayed have come together to write this first in a series of posts, &lt;a href="https://aws-oss.beachgeek.co.uk/qw"&gt;Query an Apache Hudi dataset in an Amazon S3 data lake with Amazon Athena part 1: Read-optimized queries&lt;/a&gt;. This series will look at Athena and Apache Hudi, and will provide a short overview of key Hudi capabilities along with detailed procedures for using read-optimized queries, snapshot queries, and bootstrapped tables. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Flink/Grafana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;John Mousa and Sascha Janssen have put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/qd"&gt;Near real-time processing with Amazon Kinesis, Amazon Timestream, and Grafana&lt;/a&gt; is part of a series of posts  that aim to explore various patterns for data ingestion and cost-effective architecture pipelines. This particular looks at device telemetry uses cases. You will see how you can monitor your devices’ operations by visualising operational data with Grafana, using Apache Flink to transforms and aggregate streaming data in near-real time, to detect and clean any errors in time series data timestamps before ingesting them in Timestream to optimise operational analytics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hnWUD6Z---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/07/06/DBB-1453-image011.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnWUD6Z---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/07/06/DBB-1453-image011.png" alt="overview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All the &lt;a href="https://aws-oss.beachgeek.co.uk/qe"&gt;source code&lt;/a&gt; is available so you can reproduce this for yourself. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/qm"&gt;Migrate Amazon ElastiCache to Graviton2 processors&lt;/a&gt; Scott Kellish, Asaf Porat Stoler, Zach Gardner, and Yaron Sananes explore the performance benefits of Graviton2 instances and how to migrate your ElastiCache for Redis cluster to Graviton2. More and more workloads are moving to Arm, and this is an area where open source projects are helping to unlock the ability for customers to run their workloads on any processor architecture.&lt;/p&gt;

&lt;p&gt;Last week we also had Matt Asay and Antony Prasad Thevaraj post, &lt;a href="https://aws-oss.beachgeek.co.uk/qu"&gt;How AWS and Redis Labs partner to make a better Redis&lt;/a&gt; which takes a look at how you can both collaborate with and compete with open source. The post explores that in detail as well as taking a look at how it all comes back to how we can best serve our customers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Param Sharma and Arindam Chatterji show you how to set up end-to-end encryption on Amazon Elastic Kubernetes Service (Amazon EKS) with AWS Certificate Manager Private Certificate Authority in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/qo"&gt;TLS-enabled Kubernetes clusters with ACM Private CA and Amazon EKS&lt;/a&gt;. You will learn how you can set up an NGINX ingress controller on Amazon EKS. As part of the example, we show you how to configure an AWS Network Load Balancer (NLB) with HTTPS using certificates issued via ACM Private CA in front of the ingress controller. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p5aYan1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2021/07/13/TLS-enabled-Kubernetes-clusters-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p5aYan1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2021/07/13/TLS-enabled-Kubernetes-clusters-2.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fluentd&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Following on from last weeks Fluentd/Amazon EKS post, this week it is the turn of Re Alvarez-Parmar, Nithish Kumar Murcherla, and Drew Zhang in the post &lt;a href="https://aws-oss.beachgeek.co.uk/q8"&gt;Capturing logs at scale with Fluent Bit and Amazon EKS&lt;/a&gt; where they explore the need for optimisation when using Fluentd or Fluent Bit for log aggregation and demonstrate recent enhancements to Fluent Bit that are designed to reduce the volume API calls it makes to the Kubernetes API servers. An image is worth many words they say, so let me leave this here to tempt you into reading more. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n_Yqlncp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/07/08/image-2021-07-07T200546.692.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n_Yqlncp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/07/08/image-2021-07-07T200546.692.png" alt="graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SageMaker JumpStart&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SageMaker JumpStart is a capability in SageMaker that allows you to quickly get started with ML. JumpStart uses open-source pre-trained models to solve common ML problems like image classification, object detection, text classification, sentence pair classification, and question answering. In this first of a series, Ali Arsanjani, Ashish Khetan, and Li Zhang have put together &lt;a href="https://aws-oss.beachgeek.co.uk/qa"&gt;Run image classification with Amazon SageMaker JumpStart&lt;/a&gt;, covers image classification tasks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tensorflow Serving&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yi Xiang has put together this post, &lt;a href="https://aws-oss.beachgeek.co.uk/q9"&gt;Deploy variational autoencoders for anomaly detection with TensorFlow Serving on Amazon SageMaker&lt;/a&gt; that looks at how you can implement a variational autoencoder on SageMaker to solve an anomaly detection tasks,  showing you how you can deploy multiple trained models to a single TensorFlow Serving multi-model endpoint. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PD4ByXHc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/07/01/ML1533-image017.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PD4ByXHc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/07/01/ML1533-image017.png" alt="model"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#case-study"&gt;
  &lt;/a&gt;
  Case study
&lt;/h3&gt;

&lt;p&gt;Zoltan Bozoky, Soyean Kim, and Victor Leung from Providence Health Care together with Nelson Assis from AWS shared how a public health organisation can use cloud services together with open source to improve medical care, such as infection prevention and control practices in controlled environments, in the post &lt;br&gt;
&lt;a href="https://aws-oss.beachgeek.co.uk/qn"&gt;Using cloud computing to develop an open source infection prevention and disease control solution&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fHBIDMLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/07/14/nlsss_quickstart-arch_f1_new.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fHBIDMLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/07/14/nlsss_quickstart-arch_f1_new.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The open source AWS Quick Start solution described in this post can help you increase data throughput, minimise the total cost of ownership, and enable robust security, while providing enhanced availability, capacity, and scalability through access to advanced data mining and modelling services. [hands on]&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apache-airflow-summit-2021"&gt;
  &lt;/a&gt;
  Apache Airflow Summit 2021
&lt;/h3&gt;

&lt;p&gt;In case you missed it, last week was the Airflow Summit, a free online conference for the worldwide community of developers and users of Apache Airflow. There were a few sessions covering Amazon Managed Workflows for Apache Airflow (MWAA), as well as lots of other great sessions which you should check out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow 2.0 on Amazon MWAA&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.crowdcast.io/e/airflowsummit2021/39"&gt;https://www.crowdcast.io/e/airflowsummit2021/39&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this session we will discuss Amazon Managed Workflows for Apache Airflow (MWAA), how Apache Airflow (and specifically version 2.0) is implemented in the service, best practices for deployment and operations, and the Amazon MWAA team’s commitment to open source usage and contributions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MWAA: Design Choices and Road Ahead&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.crowdcast.io/e/airflowsummit2021/53"&gt;https://www.crowdcast.io/e/airflowsummit2021/53&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An informal and fun chat about the journey that we took and the decisions that we made in building Amazon Managed Workflows for Apache Airflow. We will talk about Our first tryst with understanding Airflow Talking to Amazon Data Engineers and how they ran workflows at scale Key design decisions and the reasons behind them Road ahead, and what we dream about for future of Apache Airflow. Open-Source tenets and commitment from the team We will leave time at the end for a short AMA/Questions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS Toolkit for JetBrains&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/qp"&gt;AWS Toolkit for JetBrains now supports Go and TypeScript&lt;/a&gt; Kyle Thomson shares how Go and TypeScript are now supported in this open source plugin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amplify Flutter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week the AWS Amplify’s tools and libraries for Flutter were updated to support null safety for all of our use cases. Flutter developers can now enjoy all the easy-to-integrate Amplify functionality with higher reliability and improved developer ergonomics. Sound null safety is a Dart language feature in which code is non-nullable by default and turns runtime null-dereference errors into edit-time analysis errors. This enables developers to reduce bugs in their code and benefit from performance improvements through smaller binaries and faster execution.&lt;/p&gt;

&lt;p&gt;Null safety protection was introduced with Flutter 2 as an opt-in feature for developers and, as of Flutter 2.2, is enabled by default for all new Flutter apps. With this release of Amplify Flutter developers can now create new apps with null safety enabled, and no longer have to wait to migrate their existing apps to be null safe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have updated Amazon RDS for PostgreSQL to support PostgreSQL minor versions 13.3, 12.7, 11.12, 10.17, and 9.6.22. This release closes security vulnerabilities in PostgreSQL and contains bug fixes and improvements done by the PostgreSQL community.&lt;/p&gt;

&lt;p&gt;This release also adds support for the oracle_fdw extension, which allows your PostgreSQL database to connect and retrieve data stored in separate Oracle databases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FreeRTOS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;FreeRTOS AWS reference integrations are pre-integrated FreeRTOS projects ported to microcontroller-based evaluation boards that demonstrate end-to-end connectivity to AWS IoT Core. This helps developers save months of development effort and accelerate time to market. FreeRTOS AWS reference integrations now include the new managed AWS IoT Over-the-Air update (OTA) library, AWS IoT Jobs library, and the AWS IoT Device Defender custom metrics feature from the FreeRTOS 202012.01 LTS release, and the coreMQTT Agent library from the FreeRTOS 202104.00 release.&lt;/p&gt;

&lt;p&gt;Developers can use the reference integrations to get started on a wide variety of evaluation boards and use the integrated libraries to remotely update IoT device firmware, manage IoT device fleets, monitor IoT device fleet metrics, and to simplify the management of MQTT connections in multi-threaded applications.&lt;/p&gt;

&lt;p&gt;Read more, including &lt;a href="https://aws-oss.beachgeek.co.uk/q3"&gt;links to supporting blog posts here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open datasets&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Forty-four new or updated datasets from the National Library of Medicine, Digital Earth Africa, Amazon, and others are available on the Registry of Open Data in the following categories: COVID-19, Agriculture, Climate and Weather, Energy, Geospatial, Life Sciences and Machine Learning.&lt;/p&gt;

&lt;p&gt;Check out the full announcement, including links to the open datasets in, &lt;a href="https://aws-oss.beachgeek.co.uk/q4"&gt;New datasets available on the Registry of Open Data from the National Library of Medicine, Digital Earth Africa, Amazon, and others&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also read the blog post from Joe Flasher, &lt;a href="https://aws-oss.beachgeek.co.uk/qt"&gt;Satellite imagery over Africa, a large-scale climate ensemble, and product listings with 3D renderings: The latest open data on AWS&lt;/a&gt; that looks at a few of those open datasets in more detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hugging Face&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last week we announced AWS Deep Learning Containers (DLCs) with integrated SDKs for inference that enable customers to easily deploy Hugging Face models in Amazon SageMaker at scale. Read the full announcement in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/q5"&gt;Amazon announces new AWS Deep Learning Containers to deploy Hugging Face models faster on Amazon SageMaker&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;Later this week, there are a couple of interesting looking events you should check out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developing Secure Open Source Software (OSS)&lt;/strong&gt; [FREE Event]&lt;br&gt;
&lt;strong&gt;July 20th, 9:30 – 11:00am PDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;David Wheeler, Director of Open Source Supply Chain Security at The Linux Foundation will discuss steps you can take to develop more secure OSS and evaluate OSS for security.&lt;/p&gt;

&lt;p&gt;Read more and &lt;a href="https://aws-oss.beachgeek.co.uk/pm"&gt;register here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ML Dev Day Live Workshop&lt;/strong&gt; [FREE Event]&lt;br&gt;
&lt;strong&gt;July 21st 9:00am PDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learn how to build highly scalable and reliable pipelines for analytics using open source technologies such as Apache Spark, Delta Lake and open source machine learning frameworks such as TensorFlow, XGBoost, scikit-learn and MLFlow.&lt;/p&gt;

&lt;p&gt;Read more and &lt;a href="https://aws-oss.beachgeek.co.uk/pl"&gt;register here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Data Lakes with Presto, Apache Hudi &amp;amp; AWS Glue and S3 – the next generation of analytics&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;July 27th at 10am PT/ 1pm ET&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sign up for this roundtable discussion where experts from each layer in this stack – Presto, AWS, and Apache Hudi – will discuss why they are seeing a pronounced adoption to this next generation of cloud data lake analytics and how these technologies enable open, flexible, and highly performant analytics in the cloud.&lt;/p&gt;

&lt;p&gt;Read more &lt;a href="https://aws-oss.beachgeek.co.uk/q7"&gt;and register here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;23rd September, Bern Switzerland&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is this, an in person event returning? A stellar line up including our own Michael Hausenblas, an event looking at CNCF projects and the future of IT. Find out more and to view prices/register, by clicking &lt;a href="https://cloudnativeday.ch/en/#speakers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on [@AWSOpen](&lt;a href="https://twitter.com/AWSOpen"&gt;https://twitter.com/AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Pro Tips For Designing Robust React Components</title>
      <author>Ali Sherief</author>
      <pubDate>Mon, 19 Jul 2021 06:51:43 +0000</pubDate>
      <link>https://dev.to/zenulabidin/pro-tips-for-designing-robust-react-components-2aii</link>
      <guid>https://dev.to/zenulabidin/pro-tips-for-designing-robust-react-components-2aii</guid>
      <description>&lt;p&gt;As you already know, React components are written as functions these days, not classes. Among other things, it allows us to dispense with binding methods and the this prop. But with both ways, you ultimately have to write a render method that returns a part of the DOM in the form of JSX.&lt;/p&gt;

&lt;p&gt;They return a part of the DOM and do not generate a completely new one because the DOM is quite expensive to update, so developers try to minimize the number of DOM updates as much as possible.&lt;/p&gt;

&lt;p&gt;Hence, most web developers reduce the number of components renders to a minimum to reduce the load on both the client's browser and the server.&lt;/p&gt;

&lt;p&gt;Another important requirement of React components is that they update their UI fairly quickly. This prevents users from unnecessarily waiting on the app frontend and improves user experience.&lt;/p&gt;

&lt;p&gt;Finally, it helps when your components are reusable. Not only do you avoid writing the same code twice, thus satisfying the DRY (Don't Repeat Yourself) principle, you can also be confident that each instance of your reusable, independent components will do a minimal number of re-renders.&lt;/p&gt;

&lt;p&gt;In this article, and in the next few articles in this series, I will share with you some tips to reduce the number of renders your web app makes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-to-partition-the-app-so-that-each-component-is-independent-of%C2%A0others"&gt;
  &lt;/a&gt;
  Try to partition the app so that each component is independent of others
&lt;/h2&gt;

&lt;p&gt;The reason for this is, if your components are interdependent, then each state update in one component will likely require a state update in the other component. This causes a re-render, so you end up rendering multiple times when you do a higher-level component update. Ideally, you want to update components once per high-level update, but of course, this may not always be possible.&lt;/p&gt;

&lt;p&gt;It would help if you tried to make each component partitioned in such a way that represents the UI layout of your app. For example, most apps have a header bar with buttons and links on it. So you should contain your button components in that location inside a header component.&lt;/p&gt;

&lt;p&gt;Each component you create adds complexity to the whole application. You have to make sure the parameters are correct, and the returned JSX is what you expected, and, in the case of arrow or lambda functions, that they are defined in an order such that a function does not call another such arrow or lambda function above it in the file.&lt;/p&gt;

&lt;p&gt;Try to make the nesting level of components as flat as possible. Although the way React updates the DOM ensures that nested components are not re-rendered if they have not been modified in a parent component, the advantage of making the component tree flat is that it makes it easier for you to debug each component by itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-to-use-prop-destructuring"&gt;
  &lt;/a&gt;
  When to use prop destructuring
&lt;/h3&gt;

&lt;p&gt;Prop destructuring in methods can greatly cut down the length of your prop variable names - if done properly. For one thing, it is not recommended to destructure multiple layers of props simultaneously (nested destructuring) because you cannot validate the data in the intermediate-level props, so that is a source for semantic errors.&lt;/p&gt;

&lt;p&gt;It is not uncommon for components to have a few dozen props, so just the spelling of those props by itself will get messy when you write your functional component.&lt;/p&gt;

&lt;p&gt;You should destructre your props, one level at a time, when there are a small number of them like this:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Credits: &lt;a href="https://javascript.plainenglish.io/destructure-react-props-with-es6-object-destructuring-for-cleaner-code-3984453e484d"&gt;https://javascript.plainenglish.io/destructure-react-props-with-es6-object-destructuring-for-cleaner-code-3984453e484d&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So that you avoid writing functions that continuously reference &lt;code&gt;props&lt;/code&gt; like this:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Credits: &lt;a href="https://javascript.plainenglish.io/destructure-react-props-with-es6-object-destructuring-for-cleaner-code-3984453e484d"&gt;https://javascript.plainenglish.io/destructure-react-props-with-es6-object-destructuring-for-cleaner-code-3984453e484d&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Using another component as an example, we can do two different destructuring assignments to drill down the props, doing the equivalent of nested destructuring:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Credits: &lt;a href="https://stackoverflow.com/questions/60589914/destructuring-props-in-react"&gt;https://stackoverflow.com/questions/60589914/destructuring-props-in-react&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In addition to that, the spread operator fits nicely on the right side of the assignment involving a destructured variables.&lt;/p&gt;




&lt;p&gt;That's all for today folks. Stay tuned for next week's post where I write about pro tips for managing component state. Also, let me know in the comments below if you have any questions.&lt;/p&gt;

&lt;p&gt;Cover image by &lt;a href="https://unsplash.com/@les_photos_de_raph?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Raphaël Biscaldi&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/atoms?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>An introduction to bot programming: building a simple Bomberman bot (part 2)</title>
      <author>Joy</author>
      <pubDate>Mon, 19 Jul 2021 06:48:03 +0000</pubDate>
      <link>https://dev.to/joooyz/an-introduction-to-bot-programming-building-a-simple-bomberman-bot-part-2-5blg</link>
      <guid>https://dev.to/joooyz/an-introduction-to-bot-programming-building-a-simple-bomberman-bot-part-2-5blg</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This is part 2 of a series originally published on the &lt;a href="https://www.gocoder.one/blog/beginners-bot-programming-tutorial-bomberman"&gt;Coder One blog&lt;/a&gt;. Check out Part 1 here: &lt;a href="https://www.gocoder.one/blog/how-to-build-an-ai-game-bot-bomberman"&gt;Building an AI game bot for Bomberman&lt;/a&gt;. In this tutorial series, we'll build a bot in Python that can play in a variation of the classic Bomberman game called &lt;a href="https://dnds.gocoder.one"&gt;Dungeons and Data Structures&lt;/a&gt;. We'll start off simple, and add advanced strategies in the later parts of the series.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YyCwYR6u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.gocoder.one/static/dungeons-and-data-structures-50eeec34d83c91cf8631383400abf3fd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YyCwYR6u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.gocoder.one/static/dungeons-and-data-structures-50eeec34d83c91cf8631383400abf3fd.gif" alt="Dungeons and Data Structures"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recap"&gt;
  &lt;/a&gt;
  Recap
&lt;/h2&gt;

&lt;p&gt;Make sure you check out &lt;a href="https://www.gocoder.one/blog/how-to-build-an-ai-game-bot-bomberman"&gt;part 1 of this bot programming tutorial&lt;/a&gt; series first. So far we've covered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up the game environment &lt;a href="https://github.com/CoderOneHQ/dungeons-and-data-structures"&gt;Dungeons and Data Structures&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Working with a starter Python agent that makes random moves&lt;/li&gt;
&lt;li&gt;Getting familiar with the game environment's objects and methods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In part 2, we'll show you how to build a simple agent called the '&lt;strong&gt;Wanderer Agent&lt;/strong&gt;' that implements some scripted logic to explore and navigate the world. More specifically, it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Looks at its immediate surroundings&lt;/li&gt;
&lt;li&gt;Checks which directions are valid ones to move in&lt;/li&gt;
&lt;li&gt;Chooses a random valid direction to take&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you're more interested in the topic of reinforcement learning, check out my other introductory tutorial to &lt;a href="https://www.gocoder.one/blog/rl-tutorial-with-openai-gym"&gt;Reinforcement Learning With OpenAI Gym’s ‘Taxi’&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-helper-methods"&gt;
  &lt;/a&gt;
  Step 1: Helper methods
&lt;/h2&gt;

&lt;p&gt;In this section, we'll walk through creating 3 helper methods that will be useful for our agent:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;get_surrounding_tiles()&lt;/code&gt;: Returns a list of our surrounding tiles&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;get_empty_tiles()&lt;/code&gt;: Returns tiles that are valid for our agent to move into&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;move_to_tile()&lt;/code&gt;: Returns the corresponding action the agent should take to move to a tile&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should be familiar with the &lt;code&gt;game_state&lt;/code&gt; and &lt;code&gt;player_state&lt;/code&gt; objects from &lt;a href="https://www.gocoder.one/blog/how-to-build-an-ai-game-bot-bomberman"&gt;part 1 of the tutorial&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-getsurroundingtiles-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;get_surrounding_tiles()&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Our first helper method &lt;code&gt;get_surrounding_tiles()&lt;/code&gt; will return us a list of tiles surrounding our agent's current location as an (x,y) tuple of the game map.&lt;/p&gt;

&lt;p&gt;We'll take advantage of the coordinate-representation of the map:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mqbwWFCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t59bfkevn1h72pfy3h7z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mqbwWFCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t59bfkevn1h72pfy3h7z.png" alt="DNDS map"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below is the skeleton code for our &lt;code&gt;get_surrounding_tiles()&lt;/code&gt; method*&lt;em&gt;.&lt;/em&gt;* We've left you some gaps to fill out. If you get stuck, check out the &lt;a href="https://gist.github.com/joooyzee/8c1282a1ad9584480f7cbf1ee2df03a4"&gt;solution&lt;/a&gt;. (💡 &lt;strong&gt;Hint:&lt;/strong&gt; check the &lt;a href="https://dnds.gocoder.one/getting-started/game-documentation#game-state"&gt;game state documentation&lt;/a&gt; for useful methods).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# given our current location as an (x,y) tuple, return the surrounding tiles as a list
# (i.e. [(x1,y1), (x2,y2),...])
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="c1"&gt;# location[0] = x-index; location[1] = y-index
&lt;/span&gt;    &lt;span class="n"&gt;tile_north&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
    &lt;span class="n"&gt;tile_south&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;    &lt;span class="n"&gt;tile_west&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;    &lt;span class="n"&gt;tile_east&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;         

    &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tile_north&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile_south&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile_west&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile_east&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tile&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# check if the tile is within the boundaries of the game
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;################ CHANGE 'NONE' ###################
&lt;/span&gt;            &lt;span class="c1"&gt;# remove invalid tiles from our list
&lt;/span&gt;            &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/8c1282a1ad9584480f7cbf1ee2df03a4"&gt;Link to solution&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, add your &lt;code&gt;get_surrounding_tiles()&lt;/code&gt; method to your &lt;code&gt;Agent&lt;/code&gt; class in &lt;code&gt;my_agent.py&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Agent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;next_move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;player_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;'''
        This method is called each time your Agent is required to choose an action
        '''&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="c1"&gt;########################
&lt;/span&gt;    &lt;span class="c1"&gt;###      HELPERS     ###
&lt;/span&gt;    &lt;span class="c1"&gt;########################
&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;'''
        Your code here
        '''&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-getemptytiles-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;get_empty_tiles()&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;In order for our agent to move effectively, it will also need to know which of its surrounding tiles are actually empty (i.e. not containing a block or other player). Here's a &lt;code&gt;get_empty_tiles&lt;/code&gt; method with some blanks for you to fill out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# given a list of tiles, return only those that are empty/free
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_empty_tiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tiles&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;empty_tiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tile&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tiles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;################ CHANGE 'NONE' ###################
&lt;/span&gt;            &lt;span class="c1"&gt;# add empty tiles to list
&lt;/span&gt;            &lt;span class="n"&gt;empty_tiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;empty_tiles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/ba0d21dc7090ebefab6a0d4e45d5effe"&gt;Link to solution&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-movetotile-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;move_to_tile()&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Given an adjacent surrounding tile and our current location, &lt;code&gt;move_to_tile()&lt;/code&gt; will return the action (i.e. &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;r&lt;/code&gt;) that will get us there. E.g. if the tile we want to move to is directly north of us, this method will return &lt;code&gt;u&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# given an adjacent tile location, move us there
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;move_to_tile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="c1"&gt;# see where the tile is relative to our current location
&lt;/span&gt;    &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# return the action that moves in the direction of the tile
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'u'&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'l'&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/c9fa640b4ee2ebc737388218d2da2aea"&gt;Link to solution&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-agent-logic"&gt;
  &lt;/a&gt;
  Step 2: Agent logic
&lt;/h2&gt;

&lt;p&gt;With our helper methods in place, we'll be able to implement some simple logic to control our agent to navigate the game world.&lt;/p&gt;

&lt;p&gt;Here's some sample skeleton code to help you piece together your agent. Here's also a link to our &lt;a href="https://github.com/CoderOneHQ/agent-template/blob/main/wanderer.py"&gt;own version of Wanderer Agent&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Agent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;'''
        Place any initialization code for your agent here (if any)
        '''&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;next_move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;player_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;'''
        This method is called each time your Agent is required to choose an action
        '''&lt;/span&gt;
        &lt;span class="c1"&gt;########################
&lt;/span&gt;        &lt;span class="c1"&gt;###    VARIABLES     ###
&lt;/span&gt;        &lt;span class="c1"&gt;########################
&lt;/span&gt;
        &lt;span class="c1"&gt;# game map is represented in the form (x,y)
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game_state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;           &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;
        &lt;span class="c1"&gt;# useful for later
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;game_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;game_state&lt;/span&gt; 
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;player_state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;

        &lt;span class="c1"&gt;########################
&lt;/span&gt;        &lt;span class="c1"&gt;###      AGENT       ###
&lt;/span&gt;        &lt;span class="c1"&gt;########################
&lt;/span&gt;
        &lt;span class="c1"&gt;# get our surrounding tiles
&lt;/span&gt;        &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# get list of empty tiles around us
&lt;/span&gt;        &lt;span class="n"&gt;empty_tiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;           &lt;span class="c1"&gt;################ FILL THIS ################### 
&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;empty_tiles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# choose an empty tile to walk to
&lt;/span&gt;            &lt;span class="n"&gt;random_tile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;empty_tiles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;            &lt;span class="c1"&gt;################ FILL THIS ################### 
&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# we're trapped
&lt;/span&gt;            &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;

    &lt;span class="c1"&gt;########################
&lt;/span&gt;    &lt;span class="c1"&gt;###      HELPERS     ###
&lt;/span&gt;    &lt;span class="c1"&gt;########################
&lt;/span&gt;
    &lt;span class="c1"&gt;# given our current location as an (x,y) tuple, return the surrounding tiles as a list
&lt;/span&gt;    &lt;span class="c1"&gt;# (i.e. [(x1,y1), (x2,y2),...])
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="c1"&gt;# location[0] = x-index; location[1] = y-index
&lt;/span&gt;        &lt;span class="n"&gt;tile_north&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   
        &lt;span class="n"&gt;tile_south&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;        &lt;span class="n"&gt;tile_west&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;        &lt;span class="n"&gt;tile_east&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;         

        &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tile_north&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile_south&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile_west&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile_east&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tile&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# check if the tile is within the boundaries of the game
&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;################ CHANGE 'NONE' ###################
&lt;/span&gt;                &lt;span class="c1"&gt;# remove invalid tiles from our list
&lt;/span&gt;                &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;surrounding_tiles&lt;/span&gt;

    &lt;span class="c1"&gt;# given a list of tiles, return only those that are empty/free
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_empty_tiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tiles&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="n"&gt;empty_tiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tile&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tiles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;################ CHANGE 'NONE' ###################
&lt;/span&gt;                &lt;span class="c1"&gt;# add empty tiles to list
&lt;/span&gt;                &lt;span class="n"&gt;empty_tiles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;empty_tiles&lt;/span&gt;

    &lt;span class="c1"&gt;# given an adjacent tile location, move us there
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;move_to_tile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="c1"&gt;# see where the tile is relative to our current location
&lt;/span&gt;        &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c1"&gt;# return the action that moves in the direction of the tile
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'u'&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;     &lt;span class="c1"&gt;################ FILL THIS ###################
&lt;/span&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'l'&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://github.com/CoderOneHQ/agent-template/blob/main/wanderer.py"&gt;Link to full Wanderer Agent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save your agent (&lt;code&gt;my_agent.py&lt;/code&gt;) then run the following command in your terminal to watch your new bot go up against itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;coderone-dungeon &lt;span class="nt"&gt;--watch&lt;/span&gt; my_agent my_agent
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-3-bombs-away"&gt;
  &lt;/a&gt;
  Step 3: Bombs away
&lt;/h2&gt;

&lt;p&gt;To win at &lt;a href="https://dnds.gocoder.one"&gt;Dungeons and Data Structures&lt;/a&gt;, your agent will need to do more than roam around the map. It will need to know how to place bombs strategically in order to blow up crates for points or take down your opponent. &lt;/p&gt;

&lt;p&gt;Now that you've got a better grasp of the environment, have a go at implementing some logic around bomb placements.&lt;/p&gt;

&lt;p&gt;If you're interested, check out our implementation of a &lt;a href="https://github.com/CoderOneHQ/agent-template/blob/main/flee_bot.py"&gt;very simple 'Flee Agent'&lt;/a&gt;. It uses the &lt;a href="https://iq.opengenus.org/euclidean-vs-manhattan-vs-chebyshev-distance/"&gt;Manhattan Distance&lt;/a&gt; formula to decide whether to focus on running away from nearby bombs or placing more of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;In this part, we went from a random agent that selects its moves at random, to one that can interpret its surrounding environment and explore it.&lt;/p&gt;

&lt;p&gt;In the next part of the series, we'll implement a pathfinding algorithm to help it navigate to useful objects around the map. You can follow me here on DEV or on &lt;a href="https://joooyz.medium.com/"&gt;Medium&lt;/a&gt; to get notified when Part 3 is out.&lt;/p&gt;

&lt;p&gt;P.S. If you're interested in supporting this project, please follow us on &lt;a href="https://www.producthunt.com/upcoming/dungeons-and-data-structures"&gt;Product Hunt&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Thanks for reading 🙌&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>ai</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>MATLAB MONDAYS💥- Crash Course part-4</title>
      <author>Aatmaj</author>
      <pubDate>Mon, 19 Jul 2021 06:36:48 +0000</pubDate>
      <link>https://dev.to/aatmaj/matlab-mondays-crash-course-part-4-2c43</link>
      <guid>https://dev.to/aatmaj/matlab-mondays-crash-course-part-4-2c43</guid>
      <description>&lt;h2&gt;
  &lt;a href="#welcome-all-this-monday-let-us-learn-all-about-matrices-in-matlab-and-how-to-generate-them"&gt;
  &lt;/a&gt;
  Welcome all! ❤️‍🔥 This Monday let us learn all about matrices in MATLAB, and how to generate them🤟
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Making matrices in MATLAB&lt;/strong&gt;&lt;br&gt;
We will now learn how to create Matrices in MATLAB.&lt;br&gt;
Similer to row vectors, the elements in a row are separated by a ',' and column by a ';'. First, type in the values for the first column separated by commas. When the row ends, type a semicolon and the proceed on to the next row. Repeat until done, and end with the square brackets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fxal93yH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tr3x2ne4hn7pqq72coj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fxal93yH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tr3x2ne4hn7pqq72coj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mismatch of elements in rows or columns generates this error-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rDgOODa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aa6dzbd8321mh79qhlia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rDgOODa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aa6dzbd8321mh79qhlia.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fusing two Matrices&lt;/strong&gt;&lt;br&gt;
In a similar way of making matrices, we can combine them together with this syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight matlab"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is vertical concatenation. The two matrices will be placed one on top of the other and joined together&lt;/p&gt;

&lt;p&gt;For horizontal concatenation, use the syntax c=[a,b]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ohyVLuIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0l0pjrk9v054nmo2v6rw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ohyVLuIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0l0pjrk9v054nmo2v6rw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note, For horizontal Concatenation, the number of rows for both matrices must be the same, and for vertical concatenation, the number of columns must be equal. If tis rule is violated, Concatenation error is generated. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Matrix generation functions&lt;/strong&gt;&lt;br&gt;
There are a few matrix generation functions in MATLAB like eye() this function generates an Identity matrix of the size we input.&lt;br&gt;
example-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight matlab"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;eye&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The zeros() function creates a square martix of zeros&lt;br&gt;
For rectangular matrices, two arguments can be used.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight matlab"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use the exact same syntax for the ones function and the rand function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight matlab"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

    &lt;span class="mf"&gt;0.8147&lt;/span&gt;    &lt;span class="mf"&gt;0.0975&lt;/span&gt;    &lt;span class="mf"&gt;0.1576&lt;/span&gt;    &lt;span class="mf"&gt;0.1419&lt;/span&gt;    &lt;span class="mf"&gt;0.6557&lt;/span&gt;    &lt;span class="mf"&gt;0.7577&lt;/span&gt;
    &lt;span class="mf"&gt;0.9058&lt;/span&gt;    &lt;span class="mf"&gt;0.2785&lt;/span&gt;    &lt;span class="mf"&gt;0.9706&lt;/span&gt;    &lt;span class="mf"&gt;0.4218&lt;/span&gt;    &lt;span class="mf"&gt;0.0357&lt;/span&gt;    &lt;span class="mf"&gt;0.7431&lt;/span&gt;
    &lt;span class="mf"&gt;0.1270&lt;/span&gt;    &lt;span class="mf"&gt;0.5469&lt;/span&gt;    &lt;span class="mf"&gt;0.9572&lt;/span&gt;    &lt;span class="mf"&gt;0.9157&lt;/span&gt;    &lt;span class="mf"&gt;0.8491&lt;/span&gt;    &lt;span class="mf"&gt;0.3922&lt;/span&gt;
    &lt;span class="mf"&gt;0.9134&lt;/span&gt;    &lt;span class="mf"&gt;0.9575&lt;/span&gt;    &lt;span class="mf"&gt;0.4854&lt;/span&gt;    &lt;span class="mf"&gt;0.7922&lt;/span&gt;    &lt;span class="mf"&gt;0.9340&lt;/span&gt;    &lt;span class="mf"&gt;0.6555&lt;/span&gt;
    &lt;span class="mf"&gt;0.6324&lt;/span&gt;    &lt;span class="mf"&gt;0.9649&lt;/span&gt;    &lt;span class="mf"&gt;0.8003&lt;/span&gt;    &lt;span class="mf"&gt;0.9595&lt;/span&gt;    &lt;span class="mf"&gt;0.6787&lt;/span&gt;    &lt;span class="mf"&gt;0.1712&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similarly there is the diag function for a diagonal matrix&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight matlab"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;diag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

     &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;6&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;That's all for today. For any suggestions or doubts, please comment below 👇 (they do motivate me a lot...) 🎗️ Follow me for updates...&lt;br&gt;
Also, you can gmail me for any suggestion or help 🙌 &lt;br&gt;
&lt;a href="https://www.linkedin.com/in/aatmajmhatre/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0mtLmTxG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/linkedin-%25230077B5.svg%3F%26style%3Dfor-the-badge%26logo%3Dlinkedin%26logoColor%3Dwhite" alt="LinkedIn"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://aatmaj.mhatre@gmail.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C75QF96b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Gmail-D14836%3Fstyle%3Dfor-the-badge%26logo%3Dgmail%26logoColor%3Dwhite" alt="Gmail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bye for now 🖐&lt;br&gt;
Happy to help always.....😃&lt;br&gt;
Meet you all soon👍&lt;/p&gt;

&lt;p&gt;➕➖✖️➗&lt;/p&gt;

</description>
      <category>matlab</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Angular - HTML Debugger Mode (feature request) </title>
      <author>Kushal J</author>
      <pubDate>Mon, 19 Jul 2021 06:25:30 +0000</pubDate>
      <link>https://dev.to/kutec/angular-html-debugger-mode-for-the-bound-keys-o6n</link>
      <guid>https://dev.to/kutec/angular-html-debugger-mode-for-the-bound-keys-o6n</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;Here I would like to share a feature request that I have raised to Angular community. &lt;/p&gt;

&lt;p&gt;This is to add a feature where a developer can see an object key bound over an HTML element.&lt;/p&gt;

&lt;p&gt;This can be helpful where a developer has to check for a key from a big chunk of service response.&lt;/p&gt;

&lt;p&gt;Requesting to go over the below link of Github and support by giving an upvote.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/angular/angular/issues/42269#issue-899733493"&gt;https://github.com/angular/angular/issues/42269#issue-899733493&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also share your thoughts in comments. &lt;/p&gt;

&lt;p&gt;Thanks. &lt;/p&gt;

</description>
      <category>angular</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Hosting static sites in S3</title>
      <author>Ajit Singh</author>
      <pubDate>Mon, 19 Jul 2021 05:59:49 +0000</pubDate>
      <link>https://dev.to/this-is-learning/hosting-static-sites-in-s3-1n3k</link>
      <guid>https://dev.to/this-is-learning/hosting-static-sites-in-s3-1n3k</guid>
      <description>&lt;p&gt;Let's see how a website deployment work. When we deploy a website on a server then we actually open a port on a server and then do some calculations on the server have some state or DB etc. We process the requests and serve files after processing the request but that is not the case for static files in this we just have to serve files without processing them. So, setting up a server for them is useless. If we can serve these files as required then we are good. This means that we just need storage for our files mapped to the requests and we can also have some dynamic behavior if our files are js files because the browser can process js files so we just send static js files which later on our browser can process.&lt;/p&gt;

&lt;p&gt;AWS S3 provides us with this we deploy files in our S3 bucket and serve them statically. We just need to add some way by which we can join it to a web address. There is a setting in S3 which allows us to do just that. This way we need not maintain servers and cost reduces drastically. It can be used to deploy a lot of framework website too like React, Angular, Vue just not the ones that use SSR because they need to process data in the server. &lt;/p&gt;

&lt;p&gt;In the next tutorial we will see how to setup static websites on AWS S3.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Setting bucket Permissions in S3 - Hands On</title>
      <author>Ajit Singh</author>
      <pubDate>Mon, 19 Jul 2021 05:55:07 +0000</pubDate>
      <link>https://dev.to/this-is-learning/setting-bucket-permissions-in-s3-hands-on-2j7k</link>
      <guid>https://dev.to/this-is-learning/setting-bucket-permissions-in-s3-hands-on-2j7k</guid>
      <description>&lt;p&gt;Lets see how to set permissions on our S3 bucket and then we will see the affects of the policy on our S3 bucket.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Upload a few files in S3 bucket.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jM-dRC9R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05971bq0gjcsmq67covf.png" alt="S3 permissions"&gt;
&lt;/li&gt;
&lt;li&gt;Go to the bucket homepage and click on permissions.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dJnnDg56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eajp7hikzfaic8i76hpf.png" alt="S3 permissions"&gt;
&lt;/li&gt;
&lt;li&gt;In the permissions got to the bucket policy section and click edit.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPKFFXkt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q61dt6e8n5pbvtrezvt9.png" alt="S3 permissions"&gt;
&lt;/li&gt;
&lt;li&gt;This takes us to a section where we edit our policies.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HPrPp1U8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfhl380xkowt8dpxl3fd.png" alt="S3 permissions"&gt;
&lt;/li&gt;
&lt;li&gt;This is our first time generating our policy. So, lets use the policy generator given by Amazon to make our policy. To use AWS policy generator click policy generator button.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HUp1Oy-2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3s2t7elybylz9wbw2ea.png" alt="S3 permissions"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS policy generator generates policy many different things so select bucket policy from the type of policy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In this policy we will make our bucket objects public. So that anyone can see them via the url. To do that we set the following on policy generator.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Effect: Allow - This means who ever falls in this policy will be allowed to do the action defined in the bucket policy.&lt;/li&gt;
&lt;li&gt;Principal: * - This means we ale allowing everyone to action defined in the policy&lt;/li&gt;
&lt;li&gt;Actions: GetObject - This will allow us to set policy for getting the objects from S3 bucket.&lt;/li&gt;
&lt;li&gt;Amazon Resource Name (ARN): Bucket ARN get that from the page where we clicked policy generator and add /*
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DBr7JU3B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l7r81nj6tbog0sgrop7.png" alt="S3 permissions"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N9Ny-C2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8ddx6ysq5k6aaabt3d1.png" alt="S3 permissions"&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click add statement and after that click on generate policy. A policy is generated.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--To_MKX8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdyhsnrg3ykcsbb9a7xt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--To_MKX8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdyhsnrg3ykcsbb9a7xt.png" alt="S3 permissions"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy this policy and paste it in the edit policy section and click on save changes this will not allow you to save the changes still. &lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W3yS5VAw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcvbl0nwft1kfxk7przq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W3yS5VAw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcvbl0nwft1kfxk7przq.png" alt="S3 permissions"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is because there is a block all public access section in our permissions tab. Edit that and allow all public access by unchecking block all public access. &lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_p43BXuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aip40r4ccy6zo326g2e8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_p43BXuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aip40r4ccy6zo326g2e8.png" alt="S3 permissions"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RRT8csjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjc07wduq2r48cvyw14h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RRT8csjS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjc07wduq2r48cvyw14h.png" alt="S3 permissions"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can save you policy. &lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_XxPRfc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hfpbwhcfro4zl80d9k7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_XxPRfc1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hfpbwhcfro4zl80d9k7.png" alt="S3 permissions"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We have changed the bucket policy. Now click on an object in the bucket and click on the URL given it should open it.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--26zMBmsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/823iw024xkksnpu7gn5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--26zMBmsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/823iw024xkksnpu7gn5e.png" alt="S3 permissions"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we have changed the S3 bucket policy. We will set other policies and how they affect our bucket later on. Next we will study how to host static sites on S3.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Autoscaling CI with Kraken CI</title>
      <author>Michal Nowikowski</author>
      <pubDate>Mon, 19 Jul 2021 05:41:40 +0000</pubDate>
      <link>https://dev.to/godfryd/autoscaling-ci-with-kraken-ci-jij</link>
      <guid>https://dev.to/godfryd/autoscaling-ci-with-kraken-ci-jij</guid>
      <description>&lt;p&gt;&lt;a href="https://kraken.ci/"&gt;Kraken CI&lt;/a&gt; is a new Continuous Integration tool. It is a modern, open-source, on-premise CI/CD system that is highly scalable and focused on testing. It is licensed under Apache 2.0 license. Its source code is available on &lt;a href="https://github.com/Kraken-CI/kraken"&gt;Kraken CI GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This tutorial is the third installment of the series of articles about Kraken CI. &lt;a href="https://dev.to/godfryd/kraken-ci-new-kid-on-the-ci-block-4imo"&gt;Part 1, Kraken CI, New Kid on the CI block&lt;/a&gt;, presented the installation of Kraken. The second part covered &lt;a href="https://dev.to/godfryd/your-first-workflow-in-kraken-ci-43hb"&gt;how to prepare a workflow for a simple Python project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This time we would like to show the latest feature that was developed in Kraken CI: autoscaling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Maintaining a fixed number of machines for Kraken CI can be costly. If there is no high traffic of builds, then some machines sit idle and waste power. The solution to this problem is autoscaling ie. spawning machines with Kraken Agents dynamically depending on the current needs in the Kraken CI. If there is submitted a new flow with many building or testing jobs, then new machines are spawned. When the flow completes, machines are terminated and no costs are incurred.&lt;/p&gt;

&lt;p&gt;Currently, Kraken CI autoscaling is supporting AWS EC2 virtual machines.&lt;/p&gt;

&lt;p&gt;The following chapters show how to configure access to AWS, then how to configure parameters and behaviour of spawned machines. In the end, the usage in job definitions is presented.&lt;/p&gt;

&lt;p&gt;Details about configuration can be found in &lt;a href="https://kraken.ci/docs/autoscale-in-cloud"&gt;the Kraken docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#global-cloud-settings"&gt;
  &lt;/a&gt;
  Global Cloud Settings
&lt;/h2&gt;

&lt;p&gt;First, global settings have to be set to allow access to a given cloud provider. In Web UI, on Kraken -&amp;gt; Settings page, in Cloud tab, there is a form for collecting credentials to cloud providers:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lMtMCtll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/resipud8fec1bihh2141.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lMtMCtll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/resipud8fec1bihh2141.png" alt="Global Settings with AWS Cloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the case of AWS, there are required &lt;code&gt;Access Key&lt;/code&gt; and &lt;code&gt;Secret Access Key&lt;/code&gt;. After filling in the values and saving settings, it is possible to check if it works by clicking &lt;code&gt;Test Access&lt;/code&gt; button.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparing-cloud-environment"&gt;
  &lt;/a&gt;
  Preparing Cloud Environment
&lt;/h2&gt;

&lt;p&gt;In the case of AWS it is also required to assign proper permissions so that Kraken can create or destroy EC2 instances. The list of all requires permissions looks as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2012-10-17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"Statement"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Sid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"VisualEditor0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Effect"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Allow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:AuthorizeSecurityGroupIngress"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:CreateKeyPair"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:CreateSecurityGroup"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:CreateTags"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:DeleteKeyPair"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:DescribeInstances"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:DescribeInstanceStatus"&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:DescribeInstanceTypeOfferings"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:DescribeRegions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:DescribeSecurityGroups"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:DescribeVpcs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:RunInstances"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ec2:TerminateInstances"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Resource"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configuration-in-agents-groups"&gt;
  &lt;/a&gt;
  Configuration in Agents Groups
&lt;/h2&gt;

&lt;p&gt;Having set credentials to cloud providers, it is possible now to configure aspects of spawning new machines. This can be done on Kraken -&amp;gt; Agents -&amp;gt; Groups page.  Let's create a new Agents Group by clicking &lt;code&gt;Add New Group&lt;/code&gt; button and naming it &lt;code&gt;aws-t2-micro&lt;/code&gt;. The newly created details will be presented on a separate tab. On this tab, there is a section &lt;code&gt;Agents Deployment&lt;/code&gt;. So the deployment can be manual (default)&lt;br&gt;
or automated to a particular cloud provider. In the case of Amazon Web Services, there are the following options that can be set:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EYaAMJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv4fo4miukf8zxrr31dl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EYaAMJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tv4fo4miukf8zxrr31dl.png" alt="Agents Group with AWS Settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select any region that fits you. Limit of instances can be set to 2. This will not allow having more running machines than 2. For now, the default AMI can be empty.&lt;/p&gt;

&lt;p&gt;Then in VM options, let's stick to AWS free tier and select &lt;code&gt;t2.micro&lt;/code&gt; instance type. The rest of the checkboxes leave empty. Init script also can be blank.&lt;/p&gt;

&lt;p&gt;To ensure that dangling instances do not eat up our budget, let's set the options in Destruction section to 1 job and 10 minutes. So a spawned machine will be terminated after executing 1 job. And even then, if it sits idle for more than 10 minutes, it will be destroyed as well.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#job-definition"&gt;
  &lt;/a&gt;
  Job Definition
&lt;/h2&gt;

&lt;p&gt;Now, to use the defined &lt;code&gt;aws-t2-micro&lt;/code&gt; Agents Group, we need to prepare a project with a branch and a stage. More details about that can be found in &lt;a href="https://kraken.ci/docs/guide-intro"&gt;Introductory Guide&lt;/a&gt;. So let's concentrate now on defining a job.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"parent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"root"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"triggers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"parent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;True&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"configs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"jobs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"hello"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"timeout"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"steps"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"tool"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"shell"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"cmd"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo 'hello world'"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"environments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"system"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ami-0967f290f3533e5a8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"agents_group"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"aws-t2-micro"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"default"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is no much difference comparing to regular Kraken jobs. The job has a defined environments section where we are pointing to out &lt;code&gt;aws-t2-micro&lt;/code&gt; Agents Group. What's is new is &lt;code&gt;system&lt;/code&gt; field which points to &lt;code&gt;AMI&lt;/code&gt; identifier - this indicates AWS EC2 image.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run"&gt;
  &lt;/a&gt;
  Run
&lt;/h2&gt;

&lt;p&gt;Now when a job is assigned to an agents group with configured Agents Deployment then a new machine will be spawned for that job if agents are no available in the Kraken.&lt;/p&gt;

&lt;p&gt;Let's change the view to Branch Results view and trigger a new flow by clicking &lt;code&gt;Run Flow&lt;/code&gt; button. On the run page, the list of jobs shows our AWS job:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYH7fMsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgtsnij6254uyun5qyfa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYH7fMsk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgtsnij6254uyun5qyfa.png" alt="Job Executed in AWS EC2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it!&lt;/p&gt;

</description>
      <category>ci</category>
      <category>cd</category>
      <category>buildautomation</category>
      <category>devops</category>
    </item>
    <item>
      <title>LeetCode 121. Best Time to Buy and Sell Stock (javascript solution)</title>
      <author>codingpineapple</author>
      <pubDate>Mon, 19 Jul 2021 05:33:45 +0000</pubDate>
      <link>https://dev.to/cod3pineapple/leetcode-121-best-time-to-buy-and-sell-stock-javascript-solution-4jmj</link>
      <guid>https://dev.to/cod3pineapple/leetcode-121-best-time-to-buy-and-sell-stock-javascript-solution-4jmj</guid>
      <description>&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description:
&lt;/h3&gt;

&lt;p&gt;You are given an array prices where prices[i] is the price of a given stock on the ith day.&lt;/p&gt;

&lt;p&gt;You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.&lt;/p&gt;

&lt;p&gt;Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;

&lt;p&gt;Time Complexity : O(n)&lt;br&gt;
Space Complexity: O(1)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maxProfit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;profit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;// The day we should buy at&lt;/span&gt;
        &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="c1"&gt;// Check if selling at the current day gives us the most profit&lt;/span&gt;
        &lt;span class="nx"&gt;profit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;profit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;profit&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Vim: Enhancing Editing Speed</title>
      <author>Meet Gor</author>
      <pubDate>Mon, 19 Jul 2021 05:00:54 +0000</pubDate>
      <link>https://dev.to/mr_destructive/vim-enhancing-editing-speed-5325</link>
      <guid>https://dev.to/mr_destructive/vim-enhancing-editing-speed-5325</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Editing/ Writing is a crucial part of any text editor, the swiftness with which one can make changes in a file(s) or a structure is a bit dependent on the editor we use as well. Vim can be a bit hassle for beginners in the initial stage but it becomes second nature soon. It also depends majorly on the level of usage and the area of usage. If you are an advanced programmer, you will use these commands extensively, and might not be a big deal for you, But for a beginner, it might take some time to get used to the workflow in Vim.&lt;br&gt;
This article won't be covering the basics of editing in Vim but the ways to save time on the basic level commands to improve efficiency. That being said, beginners can also read to be aware of the possibilities and tricks in Vim. &lt;/p&gt;

&lt;p&gt;Below are some quick basic commands for getting started in editing and improving the overall workflow. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#entering-in-into-the-insert-mode"&gt;
  &lt;/a&gt;
  Entering in into the Insert Mode
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;i&lt;/code&gt;  -&amp;gt; Enter into &lt;strong&gt;Insert mode&lt;/strong&gt; from the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;I&lt;/code&gt;   -&amp;gt; Enter into &lt;strong&gt;Insert mode&lt;/strong&gt; from the beginning of the current line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;a&lt;/code&gt;   -&amp;gt; Enter into &lt;strong&gt;Insert mode&lt;/strong&gt;  just after the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;A&lt;/code&gt;   -&amp;gt; Enter into &lt;strong&gt;Insert mode&lt;/strong&gt; from the end of the current line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;o&lt;/code&gt;   -&amp;gt; Enter into &lt;strong&gt;Insert mode&lt;/strong&gt; below the current line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;O&lt;/code&gt;   -&amp;gt; Enter the &lt;strong&gt;Insert mode&lt;/strong&gt; above the current line.&lt;/p&gt;

&lt;p&gt;The above commands are purely to add text in the line or above or below the line without deleting anything.&lt;/p&gt;

&lt;p&gt;The following commands will delete some characters/words/lines and then entering into the Insert mode.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;s&lt;/code&gt;   -&amp;gt; delete the character under the cursor and enter into &lt;strong&gt;Insert mode&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cw&lt;/code&gt;  -&amp;gt; Delete the word under cursor and enter into &lt;strong&gt;Insert mode&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;S&lt;/code&gt;   -&amp;gt; delete the entire line under the cursor and enter into &lt;strong&gt;Insert mode&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cut-copy-paste-commands"&gt;
  &lt;/a&gt;
  Cut Copy Paste Commands
&lt;/h2&gt;

&lt;p&gt;This set of commands are quite helpful as a programmer and it is used quite frequently. These commands can surely boost the time to cut-copy-paste but also they will provide more customization to the way you do these tasks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cutdelete-commands"&gt;
  &lt;/a&gt;
  Cut/Delete Commands
&lt;/h3&gt;

&lt;p&gt;The below-mentioned commands can be used in Normal or any Visual/ Selection mode as it depends whether you have selected the text or you want to work in Normal mode itself. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;dd&lt;/code&gt;  -&amp;gt; Delete the current entire line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dw&lt;/code&gt;  -&amp;gt; Delete the word on the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;d0&lt;/code&gt; -&amp;gt; Deletes the line from the current cursor position to the beginning of the line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;D&lt;/code&gt; or &lt;code&gt;d$&lt;/code&gt; -&amp;gt; Deletes the line from the current cursor position to the end of the line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;d&lt;/code&gt;  -&amp;gt; Delete the selected text (only in Visual/Visual-Line/Visual-Block/Selection mode).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;x&lt;/code&gt;  -&amp;gt; Delete the character under the cursor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yankcopy-commands"&gt;
  &lt;/a&gt;
  Yank/Copy Commands
&lt;/h3&gt;

&lt;p&gt;The following commands are used in the Normal mode as they perform the copying of text with words and lines only.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yw&lt;/code&gt; -&amp;gt; yank(copy) the word on the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;y$&lt;/code&gt;  -&amp;gt; yank(copy) line till the end from the current cursor position.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yy&lt;/code&gt;  -&amp;gt; yank(copy) the current entire line to the unnamed register ("").&lt;/p&gt;

&lt;p&gt;You have to be in Visual/ Visual line/ Selection mode to yank the text for the next set of yanking commands. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;y&lt;/code&gt;  -&amp;gt; yank(copy) the selected text to the unnamed register ("").&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"+y&lt;/code&gt; -&amp;gt; yank(copy) the selected text to the system clipboard ("+ register).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paste-commands"&gt;
  &lt;/a&gt;
  Paste Commands
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;p&lt;/code&gt;   -&amp;gt; Paste the content of the unnamed register("") below the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;P&lt;/code&gt;   -&amp;gt; Paste the content of the unnamed register("") above the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"+p&lt;/code&gt;  -&amp;gt; Paster the content of system clipboard ("+ register) to the cursor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#replacing-text"&gt;
  &lt;/a&gt;
  Replacing Text
&lt;/h3&gt;

&lt;p&gt;Replacing is a great option for instant productivity, if you want to make some minor changes, you don't have to go into insert mode and delete and then edit the text. Instead, the replace commands such as &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;R&lt;/code&gt; allow us to replace some characters being in Normal and Replace mode respectively. This can be used very heavily if you just want to replace it instead of adding/removing text.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r&lt;/code&gt;   -&amp;gt; replace the character under the cursor with the following key entered from the keyboard.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;R&lt;/code&gt;   -&amp;gt; Enter into &lt;strong&gt;Replace mode&lt;/strong&gt;( replace the character with the specified word from the keyboard). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#undoing-and-redoing"&gt;
  &lt;/a&gt;
  Undoing and Redoing
&lt;/h3&gt;

&lt;p&gt;We often make mistakes and want to revert to the changes we have to make and start from the last save. The following sets of commands will make us do exactly that.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;u&lt;/code&gt;   -&amp;gt; Undo the last made changes before saving.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;U&lt;/code&gt; -&amp;gt; Restore the changes in the entire line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt;   -&amp;gt; Redo the last undo (un-undo -&amp;gt; revert back changes).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#search-and-replacement"&gt;
  &lt;/a&gt;
  Search and Replacement
&lt;/h3&gt;

&lt;p&gt;Some of the below-mentioned commands are a great set for bulk replacement and addition. We can either replace a particular pattern in the entire file or in specific parts of the file as mentioned and explained as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:%s/old/new&lt;/code&gt;  -&amp;gt; Replace the word &lt;code&gt;old&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt; in the entire file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:4s/old/new&lt;/code&gt;  -&amp;gt; Replace the word &lt;code&gt;old&lt;/code&gt; with the word &lt;code&gt;new&lt;/code&gt; on line 4( where 4 can be any number of lines in the file).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:2, 9s/old/new&lt;/code&gt;  -&amp;gt; Replace the word &lt;code&gt;old&lt;/code&gt; with &lt;code&gt;new&lt;/code&gt; between the lines 2 and 9 inclusive(where 2 and 9 can be any number of lines in the file).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:%s/^/This&lt;/code&gt;  -&amp;gt; Add &lt;code&gt;This&lt;/code&gt; to the beginning of each line in the file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:%s/$/That&lt;/code&gt;  -&amp;gt; Append the word &lt;code&gt;That&lt;/code&gt; to the end of each file.&lt;/p&gt;

&lt;p&gt;You can notice that the &lt;code&gt;%&lt;/code&gt; symbol here indicates the entire file. We can skip prefixing s with &lt;code&gt;%&lt;/code&gt; to make changes only in the current line or any number of lines specified instead of it. This command is quite a lot customizable and powerful, I can't show each and every combination of this command. It should be used as per requirement and thus should be modified accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#indenting-text"&gt;
  &lt;/a&gt;
  Indenting Text
&lt;/h3&gt;

&lt;p&gt;Indenting is quite important in certain languages like Python, YAML, Haskell, etc. This can get really frustrating if you even miss a single indentation, you have to format everything to a proper indentation scratch. But thanks to powerful Text-editors and IDEs which have made the indentation quite easy and even auto-correct the wrong indentation. Vim has some commands to make those indentations much easier and it also has a customizable number of spaces in its config file called vimrc.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  -&amp;gt; Indent or shift the current line to the right. (normal mode)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;  -&amp;gt; Unindent shift the current line to the left. (normal mode)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;   -&amp;gt; Indent or shift the selected text to right. (Visual/Visual-line/VIsual-block/Select mode)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;  -&amp;gt; Unindent or shift the selected text to left. (Visual/Visual-line/VIsual-block/Select mode)&lt;/p&gt;

&lt;p&gt;If your file is saved as a particular language that supports indentation, it will automatically indent lines for you but it cannot be reliable. So, we need to &lt;a href="https://github.com/Yggdroot/indentLine"&gt;IndentLine&lt;/a&gt;, and others as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#miscellaneous"&gt;
  &lt;/a&gt;
  Miscellaneous
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;~&lt;/code&gt; -&amp;gt; Convert the character under the cursor to upper case/ lower case.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vip&lt;/code&gt; -&amp;gt; Yank a entire paragraph ( till empty line).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gu&lt;/code&gt; -&amp;gt; Convert the selected text into lowercase. (Visual/Select Mode)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gU&lt;/code&gt; -&amp;gt; Convert the selected text into Uppercase. (Visual/Select Mode)&lt;/p&gt;

&lt;p&gt;All of the above commands were somewhat basic and commonly used but if used along with other key shortcuts for movement can also improve the editing speed quite considerably. Just keep using these commands and you'll be amazed by the speed you've developed. Thanks for reading. Happy Coding :)&lt;/p&gt;

&lt;p&gt;References:  &lt;a href="https://catswhocode.com/vim-commands/"&gt;catswhocode&lt;/a&gt;  &lt;a href="https://thevaluable.dev/vim-advanced/"&gt;The valuable dev&lt;/a&gt; &lt;a href="https://vim.rtorr.com/"&gt;rtorr.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vim</category>
      <category>editing</category>
      <category>editor</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
