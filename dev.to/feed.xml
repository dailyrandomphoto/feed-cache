<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Aliases - Using Linux made easier</title>
      <author>Ayush Agarwal</author>
      <pubDate>Fri, 19 Nov 2021 15:54:34 +0000</pubDate>
      <link>https://dev.to/ayushdev_24/aliases-using-linux-made-easier-3j49</link>
      <guid>https://dev.to/ayushdev_24/aliases-using-linux-made-easier-3j49</guid>
      <description>&lt;p&gt;It is a lovely day, you are sitting in front of your laptop on your work desk writing some excellent code, and your terminal is full of some scripts or commands.&lt;/p&gt;

&lt;p&gt;Now you realize I need to navigate to a directory inside another directory that is inside another. The chain continues for about 4-5 directories until you reach the required folder.&lt;/p&gt;

&lt;p&gt;Such a mood spoiler, right! This potential move has the tendency to force you to get up from your desk and take a 5-minute break which can very quickly turn into a long break. &lt;/p&gt;

&lt;p&gt;See, the damaging domino effect it can have? Now you will argue, ah! You don't know, I can keep pressing the "up" arrow and find the command I need because I used it just about a few hours ago. &lt;/p&gt;

&lt;p&gt;But is that the most efficient way or the best we can do?&lt;/p&gt;

&lt;p&gt;Of course not, and this is where the magic of Aliases come in.&lt;/p&gt;

&lt;p&gt;To understand things better, let's assume you have to go to a folder named "test," inside 5 folders A,B,C,D, and E.&lt;/p&gt;

&lt;p&gt;Most people will do either of the below two:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd A/B/C/D/E/test&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#or"&gt;
  &lt;/a&gt;
  or
&lt;/h4&gt;



&lt;p&gt;&lt;code&gt;cd A&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;cd B&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;cd C&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;cd D&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;cd E&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;cd test&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Now let's do the same task using Aliases. (The reason for all the build-up until now,)&lt;/p&gt;

&lt;p&gt;In simple terms, Aliases are one-word replacements of those types of long commands you see above. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aliases-in-action-"&gt;
  &lt;/a&gt;
  Aliases in Action :
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a ".bashrc" file. Now let us create an alias for the task we did above. In the file, write :
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;alias test="cd /users/$USER/A/B/C/D/E/test"&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;$USER will be replaced by your system username.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, to have this working, you will have to run this .bashrc file every time the system starts. Sounds redundant, right? &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is a simple solution to it. You must have a file named ".zshenvuser." This is the file that runs every time your system starts. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In that file, just put:&lt;br&gt;
&lt;br&gt;
&lt;code&gt;~/.bashrc&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This will ensure the .bashrc file runs on every system too. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you don't have the ".zshenvuser" file, create a ".bash_profile" and put the below code in it:
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;if [ -r ~/.bashrc ]; &lt;br&gt;
    then&lt;br&gt;
    source ~/.bashrc&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;These are the two ways to automate the running of bashrc. If you know of any other, please comment below. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, after all, this, what have we achieved. &lt;/p&gt;

&lt;p&gt;Go to your Linux terminal and just type "test." It will take you to the test directory exactly what&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;cd A/B/C/D/E/test&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 does. &lt;/p&gt;

&lt;p&gt;Similarly, you can create different aliases for all the commands you use frequently and make your coding session more productive. &lt;/p&gt;

&lt;p&gt;To create more alias, just add another line with the same name alias="."&lt;/p&gt;

&lt;p&gt;That's it for this tech Friday blog. I would love your feedback, even negative ones. &lt;/p&gt;

&lt;p&gt;Comment below if you feel I have missed something. After we are all learning. &lt;/p&gt;

</description>
      <category>linux</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Check Internet Speed with Apple Network Responsiveness</title>
      <author>NaveenKumar Namachivayam âš¡</author>
      <pubDate>Fri, 19 Nov 2021 15:50:18 +0000</pubDate>
      <link>https://dev.to/qainsights/check-internet-speed-with-apple-network-responsiveness-2n9</link>
      <guid>https://dev.to/qainsights/check-internet-speed-with-apple-network-responsiveness-2n9</guid>
      <description>&lt;p&gt;There are umpteen tools available to check the internet speed. SpeedTest, &lt;a href="https://qainsights.com/deep-dive-into-cloudflares-speed-test/" rel="noreferrer noopener"&gt;Speed from Cloudflare&lt;/a&gt;, Netflix's &lt;a href="https://fast.com" rel="noreferrer noopener"&gt;Fast&lt;/a&gt;, or if you use &lt;a href="https://www.google.com/search?q=internet+speed" rel="noreferrer noopener"&gt;Google search&lt;/a&gt;, you can test the internet speed and its analytics. In macOS Monterey, Apple has released a command line tool called &lt;code&gt;networkQuality&lt;/code&gt;. In this blog article we will deep dive into networkQuality and its usage.&lt;/p&gt;

&lt;h2&gt;Launching networkQuality&lt;/h2&gt;

&lt;p&gt;The only prerequisite to launch &lt;code&gt;networkQuality&lt;/code&gt; is macOS Monterey. Launch the &lt;code&gt;terminal&lt;/code&gt; from the &lt;code&gt;Finder&lt;/code&gt;. In the terminal, type &lt;code&gt;networkQuality&lt;/code&gt; and hit enter.&lt;/p&gt;

&lt;p&gt;The tool will display the download and upload capacity for every second as shown below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hUniC0Lu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-2-1024x87.png" alt="Testing" width="880" height="75"&gt;&lt;/a&gt;Testing&lt;/p&gt;

&lt;p&gt;Once the test is done after ~15 seconds, you can see the summary of your internet performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H6MZi7d_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-3.png" alt="" width="638" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Responsiveness&lt;/code&gt; in the above summary is in roundtrips completed per minute (RPM). Responsiveness measures the quality of the network by the number of roundtrips per minute.&lt;/p&gt;

&lt;p&gt;There are three categories in Responsiveness. &lt;strong&gt;Low, Medium, and High&lt;/strong&gt;. High means there is a reliable network connection. Low means, you can see the issues while on a call or downloading a huge document or media file. Medium means, you can see a brief delay in the network.&lt;/p&gt;

&lt;p&gt;To view the manual page, enter &lt;code&gt;man networkQuality&lt;/code&gt; and hit enter.&lt;/p&gt;

&lt;p&gt;By default, networkQuality tests with parallel upload/download. If you want to test in sequential order add &lt;code&gt;-s&lt;/code&gt; option to the command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-4.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_O4V4St--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-4-1024x68.png" alt="Download Stats" width="880" height="58"&gt;&lt;/a&gt;Download Stats&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xvo_AJG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-5-1024x87.png" alt=" Upload Stats " width="880" height="75"&gt;&lt;/a&gt; Upload Stats &lt;/p&gt;

&lt;p&gt;To view the output in JSON format, enter &lt;code&gt;networkQuality -c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4yJ2ghJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-7-470x1024.png" alt="JSON output" width="470" height="1024"&gt;&lt;/a&gt;JSON output&lt;/p&gt;

&lt;p&gt;To view the verbose output, enter &lt;code&gt;networkQuality -v&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7VrYnoTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-6.png" alt="Summary" width="756" height="368"&gt;&lt;/a&gt;Summary&lt;/p&gt;

&lt;p&gt;To test other interface in the network, enter &lt;code&gt;networkQuality -I &amp;lt;interface_name&amp;gt;&lt;/code&gt;. This will bind the interface and run the tests.&lt;/p&gt;

&lt;p&gt;By default, networkQuality uses the below configuration for testing.If you want to configure, you can use &lt;code&gt;the -C&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;In the JSON file, there are three different URLs to test the network speed. Small and Large are for GET requests. The Upload URL is for POST request.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  "version": 1,
  "urls": {
    "small_https_download_url": "https://mensura.cdn-apple.com/api/v1/gm/small",
    "large_https_download_url": "https://mensura.cdn-apple.com/api/v1/gm/large",
    "https_upload_url": "https://mensura.cdn-apple.com/api/v1/gm/slurp"
  },
  "test_endpoint": "usqas2-edge-bx-023.aaplimg.com"
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is an example of a &lt;a href="https://github.com/QAInsights/networkQuality/blob/main/config.json" rel="noreferrer noopener"&gt;custom configuration file&lt;/a&gt;. But it is not properly working; If you find a solution, please share it in the comments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/QAInsights/networkQuality" rel="noreferrer noopener"&gt;networkQuality Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

&lt;p&gt;Using the &lt;a href="https://qainsights.com/jump-start-with-fiddler-everywhere/" rel="noreferrer noopener"&gt;Fiddler Everywhere&lt;/a&gt;, I captured the traffic when the test was running. Here is the screenshot. Totally, there were around 40+ requests made to conclude the testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/11/image-8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwKUI88D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/11/image-8-1024x573.png" alt="" width="880" height="492"&gt;&lt;/a&gt;Fiddler Capture during the test&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Apple's &lt;code&gt;networkQuality&lt;/code&gt; is not a full-fledged solution to test the network speed. There are many matured solutions that are available for free. But if you are in the Apple ecosystem and love being a fan of Apple, you can add &lt;code&gt;networkQuality&lt;/code&gt; in your shell file.&lt;/p&gt;

</description>
      <category>performance</category>
      <category>tooling</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>PlanetScale integrates with Arctype's MySQL GUI</title>
      <author>etnoctua</author>
      <pubDate>Fri, 19 Nov 2021 15:47:58 +0000</pubDate>
      <link>https://dev.to/planetscale/planetscale-integrates-with-arctypes-mysql-gui-3mc4</link>
      <guid>https://dev.to/planetscale/planetscale-integrates-with-arctypes-mysql-gui-3mc4</guid>
      <description>&lt;p&gt;Check out our exclusive integration with &lt;a href="https://arctype.com/"&gt;Arctype&lt;/a&gt;, our favorite database GUI for developers. &lt;/p&gt;

&lt;p&gt;Arctype features a fast, modern interface with &lt;a href="https://docs.arctype.com/keyboard-shortcuts"&gt;keyboard shortcuts&lt;/a&gt;, a &lt;a href="https://docs.arctype.com/getting-started/quick-find"&gt;command bar&lt;/a&gt; to quickly find objects, and the best support for JSON in a SQL client. Itâ€™s also free to use. You can already &lt;a href="https://arctype.com/mysql/setup/planetscale-mac"&gt;connect to the main branch&lt;/a&gt; of your PlanetScale database in Arctype, but today itâ€™s possible to connect to development branches, switch between them, and even create deploy requests. The power of PlanetScale is experienced within a beautiful GUI! &lt;/p&gt;

&lt;p&gt;For a full walk through, check out the &lt;a href="https://planetscale.com/blog/planetscale-free-sql-gui-with-arctype"&gt;demo video&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>mysql</category>
      <category>devops</category>
      <category>database</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Bluetooth Low Energy (BLE) Tutorial for Arduino using BleuIO</title>
      <author>Bleuio tech</author>
      <pubDate>Fri, 19 Nov 2021 15:44:02 +0000</pubDate>
      <link>https://dev.to/bleuiot/bluetooth-low-energy-ble-tutorial-for-arduino-using-bleuio-1dom</link>
      <guid>https://dev.to/bleuiot/bluetooth-low-energy-ble-tutorial-for-arduino-using-bleuio-1dom</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AalPVydb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnuztvnm88rp0ej0vtyh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AalPVydb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mnuztvnm88rp0ej0vtyh.png" alt="Arduino with BleuIO Dongle." width="800" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-introduction"&gt;
  &lt;/a&gt;
  1. Introduction
&lt;/h2&gt;

&lt;p&gt;The project is a simple example showcasing a quick way to setup an Arduino with a USB Host Shield as a USB CDC Host capable of communicating with the BleuIO Dongle.&lt;/p&gt;

&lt;p&gt;When a BleuIO Dongle is connected to the USB port, the BleuIO Dongle will start advertising. It will then act as a terminal, taking input and sending data to the Arduino Virtual Com Port.&lt;/p&gt;

&lt;p&gt;We have used an Arduino Uno Rev. 3 with SparkFun's USB Host Shield (DEV-09947) for this example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-about-the-code"&gt;
  &lt;/a&gt;
  2. About the Code
&lt;/h2&gt;

&lt;p&gt;You can get project &lt;a href="https://github.com/smart-sensor-devices-ab/arduino_bleuio_example"&gt;&lt;strong&gt;HERE&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/smart-sensor-devices-ab/arduino_bleuio_example"&gt;https://github.com/smart-sensor-devices-ab/arduino_bleuio_example&lt;/a&gt;&lt;br&gt;&lt;br&gt;
This project based on the 'acm_terminal' example in the &lt;a href="https://felis.github.io/USB_Host_Shield_2.0/"&gt;Host USB Shield Library 2.0&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dqh5Of9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2d696ulrdw7bnta7ks6p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dqh5Of9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2d696ulrdw7bnta7ks6p.png" alt="acm example" width="465" height="491"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;The largest possible max.packet size for the function Acm.RcvData() is 64 bytes, so to accommodate the amount of data we will receive, we are using three buffers to receive the data from the BleuIO Dongle.&lt;/p&gt;

&lt;p&gt;If the buffers have received any data, we print it out to the serial terminal connected to the Virtual COM Port.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Usb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;Acm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isReady&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;rcode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;rcode2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;rcode3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

       &lt;span class="cm"&gt;/* reading the keyboard */&lt;/span&gt;
       &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
         &lt;span class="cm"&gt;/* sending to the BleuIO Dongle */&lt;/span&gt;
         &lt;span class="n"&gt;rcode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Acm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SndData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rcode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ErrorMessage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SndData"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rcode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;//if(Serial.available()...&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_flag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;rcode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Acm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SndData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;START_CMDS&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;START_CMDS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rcode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ErrorMessage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SndData"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rcode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

          &lt;span class="n"&gt;start_flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="cm"&gt;/* reading the BleuIO Dongle */&lt;/span&gt;
        &lt;span class="kt"&gt;uint8_t&lt;/span&gt;  &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;rcvd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;uint8_t&lt;/span&gt;  &lt;span class="n"&gt;buf2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;rcvd2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;uint8_t&lt;/span&gt;  &lt;span class="n"&gt;buf3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;rcvd3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;uint8_t&lt;/span&gt;  &lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;input_indx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="n"&gt;rcode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Acm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RcvData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rcvd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;rcode2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Acm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RcvData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rcvd2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;rcode3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Acm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RcvData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;rcvd3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rcode&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;rcode&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;hrNAK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ErrorMessage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Ret"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rcode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;

         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rcode2&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;rcode2&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;hrNAK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="n"&gt;ErrorMessage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Ret"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rcode2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;

         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rcode3&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;rcode3&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;hrNAK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
             &lt;span class="n"&gt;ErrorMessage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Ret"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rcode3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;


            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;rcvd&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//more than zero bytes received&lt;/span&gt;
              &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;rcvd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;//printing on the screen&lt;/span&gt;
                &lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_indx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;input_indx&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;rcvd2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//more than zero bytes received&lt;/span&gt;
              &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;rcvd2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;buf2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;//printing on the screen&lt;/span&gt;
                &lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_indx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;buf2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;input_indx&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;rcvd3&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//more than zero bytes received&lt;/span&gt;
              &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint16_t&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;rcvd3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;buf3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;//printing on the screen&lt;/span&gt;
                &lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_indx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;buf3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;input_indx&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_indx&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0x00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="c1"&gt;// Example on a way for the Arduino to react to BleuIO events&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strstr&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"handle_evt_gap_connected"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;&amp;lt;CONNECTION DETECTED!&amp;gt;&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strstr&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;dongle_input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"handle_evt_gap_disconnected"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;&amp;lt;CONNECTION LOST!&amp;gt;&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
              &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;//if( Usb.getUsbTaskState() == USB_STATE_RUNNING..&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;We also store the latest data from the dongle into the dongle_input buffer and run it through a simple "parser" to showcase an easy way of how you can react to events and have the Arduino do something.&lt;/p&gt;

&lt;p&gt;In this example, we are explicitly looking for BLE connection or disconnect events. When found, we just print out "&amp;lt;&amp;gt;" or "&amp;lt;&amp;gt;" to the terminal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-using-the-example-project"&gt;
  &lt;/a&gt;
  3. Using the example project
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#31-what-you-will-need"&gt;
  &lt;/a&gt;
  3.1 What you will need
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A BleuIO dongle with firmware version 2.1.0 or later (&lt;a href="https://www.bleuio.com/getting_started/docs/release_history/#release-v210"&gt;https://www.bleuio.com/getting_started/docs/release_history/#release-v210&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;An Arduino Uno Rev. 3 (&lt;a href="https://store.arduino.cc/products/arduino-uno-rev3"&gt;https://store.arduino.cc/products/arduino-uno-rev3&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;An USB Host Shield (&lt;a href="https://www.sparkfun.com/products/9947"&gt;https://www.sparkfun.com/products/9947&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The Arduino IDE (&lt;a href="https://www.arduino.cc/en/software"&gt;https://www.arduino.cc/en/software&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#32-requirments-for-the-sparkfun-board"&gt;
  &lt;/a&gt;
  3.2 Requirments for the SparkFun board
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;With the SparkFun board, it seems like you MUST supply external power on Vin or the barrel jack. 5V from the USB cable did not work.&lt;/li&gt;
&lt;li&gt;You must also apply a jumper from pin D7 to RESET.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-how-to-setup-project"&gt;
  &lt;/a&gt;
  4. How to setup project
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#41-downloading-the-project-from-github"&gt;
  &lt;/a&gt;
  4.1 Downloading the project from GitHub
&lt;/h3&gt;

&lt;p&gt;Get project &lt;a href="https://github.com/smart-sensor-devices-ab/arduino_bleuio_example"&gt;HERE&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/smart-sensor-devices-ab/arduino_bleuio_example"&gt;https://github.com/smart-sensor-devices-ab/arduino_bleuio_example&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Either clone the project, or download it as a zip file and unzip it, into your Arduino folder.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-downloading-the-usb-host-shield-library-20"&gt;
  &lt;/a&gt;
  4.2 Downloading the USB Host Shield Library 2.0
&lt;/h3&gt;

&lt;p&gt;Either download the Library from Here (&lt;a href="https://felis.github.io/USB_Host_Shield_2.0/"&gt;https://felis.github.io/USB_Host_Shield_2.0/&lt;/a&gt;) and place the folder into your libraries folder inside your Arduino folder.&lt;br&gt;
(For information on installing libraries, see: &lt;a href="http://www.arduino.cc/en/Guide/Libraries"&gt;http://www.arduino.cc/en/Guide/Libraries&lt;/a&gt;)&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Or download it through the Arduino IDE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Arduino IDE choose Sketch&amp;gt;Include Library&amp;gt;Manage Library
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UH3ad7n2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oxzs0zrz74yv2kclf27b.png" alt="Import BleuIO Arduino project" width="593" height="273"&gt;

&lt;/li&gt;
&lt;li&gt;Search for USB Host Shield Library 2.0 and click 'Install'
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l4_gdj3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v04f3b4licwkv2u8pfk.png" alt="Existing Projects." width="786" height="443"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-running-the-example"&gt;
  &lt;/a&gt;
  5. Running the example
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In Arduino IDE click the upload button to upload the project to your Arduino.&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xgH7rbYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzze6y5fgv5zwqirkrwu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgH7rbYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzze6y5fgv5zwqirkrwu.png" alt="BleuIO Arduino Projects." width="203" height="46"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open up the 'Arduino Uno Viritual COM Port' with a serial terminal emulation program like TeraTerm, Putty or CoolTerm.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Serial port Setup:&lt;br&gt;&lt;br&gt;
Baudrate: 115200&lt;br&gt;&lt;br&gt;
Data Bits: 8&lt;br&gt;&lt;br&gt;
Parity: None&lt;br&gt;&lt;br&gt;
Stop Bits: 1&lt;br&gt;&lt;br&gt;
Flow Control: None&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Or inside the Arduino IDE open up Arduino Monitor and in the bottom right corner select 'Carriage Return' and '115200 baud'&lt;br&gt;
&lt;br&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oB25zvMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzqgtcowt3f3fvy1y4l0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oB25zvMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzqgtcowt3f3fvy1y4l0.png" alt="BleuIO Arduino Projects." width="326" height="73"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You should see the word 'Start' and then see the dongle running two commands: setting response data and starting the advertising. You can now type commands to the dongle.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AkjKbIfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b1i89nv7zvclqxc8bg0n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AkjKbIfX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b1i89nv7zvclqxc8bg0n.png" alt="BleuIO Arduino Projects." width="681" height="171"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Github Actions (Lab 9)</title>
      <author>Ahmad</author>
      <pubDate>Fri, 19 Nov 2021 15:42:51 +0000</pubDate>
      <link>https://dev.to/ar/github-actions-lab-9-37d7</link>
      <guid>https://dev.to/ar/github-actions-lab-9-37d7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting up
&lt;/h1&gt;

&lt;p&gt;For my CI workflow, I went with Anaconda.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65sBEEBY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shf4d7e9d2bgnqv1vigg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65sBEEBY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shf4d7e9d2bgnqv1vigg.png" alt="Image description" width="880" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I altered the default YAML to run on push and pull requests on the main branch.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ZE95s22--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv9lyij25ztugh4a3sca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ZE95s22--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv9lyij25ztugh4a3sca.png" alt="Image description" width="159" height="105"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When installing dependencies, the default YAML looks for a &lt;code&gt;environment.yml&lt;/code&gt; file. I don't have that in my project so I set it up to install each dependency individually.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vwnlenor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9mwx0d0btctrjxrf3ka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vwnlenor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9mwx0d0btctrjxrf3ka.png" alt="Image description" width="193" height="119"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#testing-the-workflow"&gt;
  &lt;/a&gt;
  Testing the workflow
&lt;/h1&gt;

&lt;p&gt;After committing the YAML, I noticed that the workflow failed with this reason:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Version 3.1 with arch x64 not found The list of all available versions can be found here: https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I fixed this by changing the python version to 3.9.5, the version on my local machine.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W8cuxR7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u4xy0py8i8b52ftcprv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W8cuxR7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u4xy0py8i8b52ftcprv.png" alt="Image description" width="231" height="144"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The workflow then passed successfully.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U9yQqxHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzvwi22k7lu69zxio4re.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U9yQqxHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzvwi22k7lu69zxio4re.png" alt="Image description" width="307" height="123"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Python Package using Conda&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build-linux&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;max-parallel&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Set up Python 3.9.5&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-python@v2&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;python-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;3.9.5&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Add conda to system path&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;# $CONDA is an environment variable pointing to the root of the miniconda directory&lt;/span&gt;
        &lt;span class="s"&gt;echo $CONDA/bin &amp;gt;&amp;gt; $GITHUB_PATH&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install dependencies&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;conda install black&lt;/span&gt;
        &lt;span class="s"&gt;conda install flake8&lt;/span&gt;
        &lt;span class="s"&gt;conda install markdown&lt;/span&gt;
        &lt;span class="s"&gt;conda install pygments&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Lint with flake8&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;conda install flake8&lt;/span&gt;
        &lt;span class="s"&gt;# stop the build if there are Python syntax errors or undefined names&lt;/span&gt;
        &lt;span class="s"&gt;flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics&lt;/span&gt;
        &lt;span class="s"&gt;# exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide&lt;/span&gt;
        &lt;span class="s"&gt;flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Test with pytest&lt;/span&gt;
      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;conda install pytest&lt;/span&gt;
        &lt;span class="s"&gt;pytest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#writing-a-test-for-another-repo"&gt;
  &lt;/a&gt;
  Writing a test for another repo
&lt;/h1&gt;

&lt;p&gt;I chose to work on &lt;a href="https://github.com/roman-rezinkin/RomanStaticSG"&gt;Roman Rezinkin's SSG&lt;/a&gt; for this part. I looked through his testing file &lt;code&gt;roman_ssg_util.py&lt;/code&gt; for any functions he may have missed and found &lt;code&gt;create_index_page()&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;After writing a simple test for it that calls the function and checks if the index page file was created, I created a &lt;a href="https://github.com/roman-rezinkin/RomanStaticSG/pull/29"&gt;pull request&lt;/a&gt;. The workflow Roman had set up passed and it was quickly merged.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_create_index_page&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;roman_ssg_util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_index_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"en-US"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"1.html"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./index.html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#outcomes"&gt;
  &lt;/a&gt;
  Outcomes
&lt;/h1&gt;

&lt;p&gt;This lab really showed me how powerful Github Actions can be, especially when reviewing pull requests. It ensures that the pull request adheres to your rules, customizable in the YAML file.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>13 Sublime Text Plugins that Every Developer Must Use</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Fri, 19 Nov 2021 15:39:17 +0000</pubDate>
      <link>https://dev.to/abstract/13-sublime-text-plugins-that-every-developer-must-use-3ei0</link>
      <guid>https://dev.to/abstract/13-sublime-text-plugins-that-every-developer-must-use-3ei0</guid>
      <description>&lt;p&gt;Sublime Text 3 is one of the most popular free IDEs for writing your code. You can use it for opening files (.txt and more), as well as for small projects that use Python and Web-dev. Earlier, I had written an article about VSCode Extensions. However, if you prefer to use Sublime Text 3 rather than VSCode, then this compilation of the 13 plugins is exactly for you.&lt;br&gt;
I think these are the most common and the greatest Sublime Text 3 plugins that every developer (doesn't matter who are youâ€Š-â€Šfull-stack developer or data scientist) should work with.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-package%C2%A0control"&gt;
  &lt;/a&gt;
  1. PackageÂ Control
&lt;/h2&gt;

&lt;p&gt;When you just install Sublime Text 3, you should immediately install the Package Control plugin. It is the most basic plugin that will allow you to install, delete, redact other plugins easily and without any problems. As I said earlier, after installing this plugin you don't have to do this anymore.&lt;br&gt;
Use command ctrl+shift+p (for Windows or Linux) or cmd+shift+p (For Mac).&lt;br&gt;
Type "Install-Package Control" and press enter.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hIuODK3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0rkrjkq4yz5rtcxvhnx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hIuODK3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0rkrjkq4yz5rtcxvhnx.png" alt="Image description" width="800" height="294"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-emmet"&gt;
  &lt;/a&gt;
  2. Emmet
&lt;/h2&gt;

&lt;p&gt;This plugin is second in popularity and one of the most useful. Emmet helps you to write a lot less. It lets you use abbreviations that automatically deflate into fully functional code.&lt;br&gt;
You will need to use Package Control as we mentioned earlier. Write "Install-Package Control" again and then write "Emmet" and press enter.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vSH__ofe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uamy9s1fpsoqv8ccul7f.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vSH__ofe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uamy9s1fpsoqv8ccul7f.gif" alt="Image description" width="640" height="209"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cztsji-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stdkogapxreyivcb56c5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cztsji-l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stdkogapxreyivcb56c5.gif" alt="Image description" width="640" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-alignment"&gt;
  &lt;/a&gt;
  3. Alignment
&lt;/h2&gt;

&lt;p&gt;Alignment is a useful tool for aligning multiple sections or multi-line sections, which means you can align multiple selections, or lines, via delimiter such as =. Simply type ctrl + alt + a on Windows, or cmd + ctrl + a on a Mac. And again use "Install-Package Control" command to install it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97hTHVJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7buzytkg60v0p0fn9jqs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97hTHVJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7buzytkg60v0p0fn9jqs.gif" alt="Image description" width="800" height="170"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-git"&gt;
  &lt;/a&gt;
  4. Git
&lt;/h2&gt;

&lt;p&gt;This plugin brings Git into Sublime Text 3, so you don't need to go back and forth between the command line and your text editor. To get started quickly, install the plugin and use the Command Palette to launch your Git commands&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wqIRxrA2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c6x1r4nogmto0pz15ml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wqIRxrA2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7c6x1r4nogmto0pz15ml.png" alt="Image description" width="800" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-jshint"&gt;
  &lt;/a&gt;
  5. JSHint
&lt;/h2&gt;

&lt;p&gt;JSHint is a really good plugin without which I can't normally write JavaScript code. As you might have noticed it helps with your JavaScript code, specifically it shows where you made an error and also proposes to you how to fix it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SKRmCwOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y9mv0n68lahs1rcno4j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SKRmCwOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y9mv0n68lahs1rcno4j.png" alt="Image description" width="797" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-colorpicker"&gt;
  &lt;/a&gt;
  6. ColorPicker
&lt;/h2&gt;

&lt;p&gt;ColorPicker a really good plugin for Sublime Text 3 because it adds a color panel to your CSS code. To open the color picker, simply type cmd+shift+c on a Mac, or ctrl+shift+c on Windows or Linux.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JieJUpea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qxifa6mnz2rlsn30p7fi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JieJUpea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qxifa6mnz2rlsn30p7fi.jpeg" alt="Image description" width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-terminal"&gt;
  &lt;/a&gt;
  7. Terminal
&lt;/h2&gt;

&lt;p&gt;The Terminal plugin lets you open your project folders in the terminal directly from Sublime Text 3â€Š-â€Šwith a hotkey. It is a very helpful plugin when you need to execute command lines inside the given folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--efnCvICs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mkxtvo2iyz1nfevpand4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--efnCvICs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mkxtvo2iyz1nfevpand4.gif" alt="Image description" width="880" height="412"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-brackethighlighter"&gt;
  &lt;/a&gt;
  8. BracketHighlighter
&lt;/h2&gt;

&lt;p&gt;When you work with many count of brackets it's very difficult and painful to find the right brackets. BracketHighlighter underscores and highlights all brackets.&lt;br&gt;
BracketHighlighter matches a variety of brackets such as: [], (), {}, "", '', , and even custom brackets.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--709725Ft--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg2arqpt0raz3ur33eob.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--709725Ft--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sg2arqpt0raz3ur33eob.png" alt="Image description" width="769" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-livereload"&gt;
  &lt;/a&gt;
  9. LiveReload
&lt;/h2&gt;

&lt;p&gt;A small but necessary plugin for most web developers is LiveReload. Instead of having to refresh your browser every time you make a tiny change to a file in order to see results, LiveReload will simply sync with your browser of choice and instantly display the updated results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-autofilename"&gt;
  &lt;/a&gt;
  10. AutoFileName
&lt;/h2&gt;

&lt;p&gt;The AutoFileName plugin completes filenames automatically. It triggers a dropdown with file names relative to your existing file and the subsequent path as you type. For example, when you want to write something for the url attribute in your HTML tag, it will propose the name of the file in your folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7rltOIa0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcq5bt7c81ypjasvtxgi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7rltOIa0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcq5bt7c81ypjasvtxgi.jpeg" alt="Image description" width="554" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-sidebar%E2%80%8Benhancements"&gt;
  &lt;/a&gt;
  11. SideBarâ€‹Enhancements
&lt;/h2&gt;

&lt;p&gt;The SideBarEnhancements plugin adds a new window to your Sublime Text 3 where you can easily manage your folders. Also, it provides delete options such as "Move to trash", includes an "Open withâ€¦", gives you the ability to move files and more.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_7CuT1Lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rvv79yguvqgl9abpmap.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_7CuT1Lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rvv79yguvqgl9abpmap.jpeg" alt="Image description" width="800" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-a-file%C2%A0icon"&gt;
  &lt;/a&gt;
  12. A FileÂ Icon
&lt;/h2&gt;

&lt;p&gt;This plugin is great for easily scanning what files you have in your project. It simply adds pretty and customizable icons to supported files in your project sidebar.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LddxKi7i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8wf7f7egv2g0c9uzuin.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LddxKi7i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8wf7f7egv2g0c9uzuin.png" alt="Image description" width="800" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-theme%E2%80%8A%E2%80%8Aone%C2%A0dark"&gt;
  &lt;/a&gt;
  13. Themeâ€Š-â€ŠOneÂ Dark
&lt;/h2&gt;

&lt;p&gt;And the last plugin for today is "One Dark", which is a theme for Sublime Text. This plugin doesn't have any functionality but adds a really beautiful interface with which you can code in a prettier environment.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yPbYasMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/latkngo1g46gon8om8eh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yPbYasMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/latkngo1g46gon8om8eh.png" alt="Image description" width="800" height="563"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;These were the most common and useful plugins for Sublime Text 3â€Š-â€Šone of the most popular IDEs. I hope you enjoyed this article. Let me know in the comments if you want more articles like this.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>Add a video background to your landing page to make it more gorgeous</title>
      <author>Anjan Shomooder</author>
      <pubDate>Fri, 19 Nov 2021 15:38:40 +0000</pubDate>
      <link>https://dev.to/thatanjan/add-a-video-background-to-your-landing-page-to-make-it-more-gorgeous-3nmk</link>
      <guid>https://dev.to/thatanjan/add-a-video-background-to-your-landing-page-to-make-it-more-gorgeous-3nmk</guid>
      <description>&lt;p&gt;In this blog you will learn how to add a video background to your landing page to make it more gorgeous.&lt;/p&gt;

&lt;p&gt;Preview:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nVryoBkVEzc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic HTML &amp;amp; CSS knowledge&lt;/li&gt;
&lt;li&gt;Basic Javascript(Optional. only required for the navigation toggle effect)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have already created a video about it on my youtube channel. Check that out for more details.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/s6J2Q2vOhf0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you like this video, please like share, and Subscribe to my channel.&lt;/p&gt;

&lt;p&gt;source code: &lt;a href="https://github.com/thatanjan/video-background-landing-page-yt"&gt;https://github.com/thatanjan/video-background-landing-page-yt&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starter-code"&gt;
  &lt;/a&gt;
  Starter code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Taylor Swift&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"nav.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"content.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"responsive.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        This is body

        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lets-add-the-video-and-overlay-to-html"&gt;
  &lt;/a&gt;
  Let's add the video and overlay to html.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"video_container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./media/background.mp4"&lt;/span&gt; &lt;span class="na"&gt;autoplay&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt; &lt;span class="na"&gt;muted&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"overlay"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T4fwlEdL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjzp8464atlc7x38y8p4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T4fwlEdL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjzp8464atlc7x38y8p4.png" alt="video with no style - Add video background to your landing page to make it more gorgeous by cules coding " width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A video container to contain the video and overlay.&lt;/li&gt;
&lt;li&gt;Video will be started automatically with a loop. It will also be muted.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#css-reset"&gt;
  &lt;/a&gt;
  Css reset
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The entire webpage should not be bigger than the screen width.&lt;/li&gt;
&lt;li&gt;Webpage will not have any horizontal scrolling.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#lets-style-the-video"&gt;
  &lt;/a&gt;
  Let's style the video:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.video_container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.video_container&lt;/span&gt; &lt;span class="nt"&gt;video&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Result:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Rsix-RK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/recuxoyiwft08256si2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Rsix-RK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/recuxoyiwft08256si2u.png" alt="video styled but no overlay - Add video background to your landing page to make it more gorgeous by Cules Coding " width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The video container is taking the full width of the screen without any overflow. It is also positioned as &lt;code&gt;relative&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Actual video is positioned &lt;code&gt;absolute&lt;/code&gt; and aligned with the container. It is also taking the full height and width.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have confusion with Css position then you can watch this video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tO2KjMlor4o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To make the video fit, we need to use &lt;code&gt;object-fit&lt;/code&gt; to &lt;code&gt;cover&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If the user adjusts screen width, the user will always see the center of the video because of &lt;code&gt;object-position: center;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lets-style-the-overlay"&gt;
  &lt;/a&gt;
  Let's style the overlay.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--primary-red&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#70000e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.overlay&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--primary-red&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="py"&gt;mix-blend-mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;soft-light&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-MmzRV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4llmdtpsn2c1u224dfi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-MmzRV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4llmdtpsn2c1u224dfi.png" alt="with overlay" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explanation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Overlay element is aligned with the container using position &lt;code&gt;absolute&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The background color is stored inside a variable. If you don't know about css variable, then you can check out this &lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-css-variables"&gt;blog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Overlay has been blended with the background using a blend mode. We need to use &lt;code&gt;mix-blend-mode&lt;/code&gt; property to do so. I will use &lt;code&gt;soft-light&lt;/code&gt; as value. You can learn about &lt;code&gt;mix-blend-mode&lt;/code&gt; from &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's how you add a video background to a landing page to make it more gorgeous. If you want to learn how the rest of the project was made please watch the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/s6J2Q2vOhf0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;source code: &lt;a href="https://github.com/thatanjan/video-background-landing-page-yt"&gt;https://github.com/thatanjan/video-background-landing-page-yt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Final result:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nVryoBkVEzc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shameless-plug"&gt;
  &lt;/a&gt;
  Shameless Plug
&lt;/h2&gt;

&lt;p&gt;I have made a video about how to build a carousel postcard with React, Material-UI, and Swiper.js.&lt;br&gt;
If you are interested you can check the video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NDyjI7hd4uE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You can also demo the application form &lt;a href="https://insta-carousel-demo.vercel.app/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sXlAWXXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thatanjan/insta-carousel-yt/development/public/Screenshot%2520of%2520the%2520App.png" alt="Screenshot of Insta Carousel" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please like and subscribe to &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt;. It motivates me to create more content like this.&lt;/p&gt;

&lt;p&gt;If you have any questions, please comment down below.&lt;br&gt;
You can reach out to me on social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
.&lt;br&gt;
Stay safe. Goodbye.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-me"&gt;
  &lt;/a&gt;
  About me
&lt;/h2&gt;
&lt;h4&gt;
  &lt;a href="#why-do-i-do-what-i-do"&gt;
  &lt;/a&gt;
  Why do I do what I do?
&lt;/h4&gt;

&lt;p&gt;The Internet has revolutionized our life. I want to make the internet more beautiful and useful.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-do-i-do"&gt;
  &lt;/a&gt;
  What do I do?
&lt;/h4&gt;

&lt;p&gt;I ended up being a full-stack software engineer.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-can-i-do"&gt;
  &lt;/a&gt;
  What can I do?
&lt;/h4&gt;

&lt;p&gt;I can develop complex full-stack web applications like social media applications or e-commerce sites.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-have-i-done"&gt;
  &lt;/a&gt;
  What have I done?
&lt;/h4&gt;

&lt;p&gt;I have developed a social media application called &lt;a href="https://con-fession.vercel.app/"&gt;Confession&lt;/a&gt;. The goal of this application is to help people overcome their imposter syndrome by sharing our failure stories.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbQiTDS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjay62pz7byne4d8ja8v.png" alt="Alt Text" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also love to share my knowledge. So, I run a youtube channel called &lt;a href="https://www.youtube.com/channel/UCBaGowNYTUsm3IDaHbLRMYw?sub_confirmation=1"&gt;Cules Coding&lt;/a&gt; where I teach people full-stack web development, data structure algorithms, and many more. So, Subscribe to Cules Coding so that you don't miss the cool stuff.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#want-to-work-with-me"&gt;
  &lt;/a&gt;
  Want to work with me?
&lt;/h2&gt;

&lt;p&gt;I am looking for a team where I can show my ambition and passion and produce great value for them.&lt;br&gt;
Contact me through my email or any social media as &lt;a class="mentioned-user" href="https://dev.to/thatanjan"&gt;@thatanjan&lt;/a&gt;
. I would be happy to have a touch with you.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#contacts"&gt;
  &lt;/a&gt;
  Contacts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Email: &lt;a href="mailto:thatanjan@gmail.com"&gt;thatanjan@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;linkedin: &lt;a href="https://linkedin.com/in/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;portfolio: &lt;a href="https://thatanjan.me/"&gt;anjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Github: &lt;a href="https://github.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (personal): &lt;a href="https://instagram.com/thatAnjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instagram (youtube channel): &lt;a href="https://instagram.com/cules_coding/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="https://twitter.com/thatAnjan"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="https://www.facebook.com/thatanjan/"&gt;@thatanjan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blogs you might want to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/setup-eslint-prettier-with-typescript-and-react"&gt; Eslint, prettier setup with TypeScript and react &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-client-side-rendering"&gt;What is Client-Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/what-is-server-side-rendering"&gt;What is Server Side Rendering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/everything-you-need-to-know-about-tree-data-structure"&gt;Everything you need to know about tree data structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.culescoding.space/blog/13-reasons-why-you-should-use-Nextjs"&gt;13 reasons why you should use Nextjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Videos might you might want to watch:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rSa8sUC8m_4"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/T-n0mrssDiw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0an2g0lq7LU"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Be_C_Op8Tx8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Fetching the Github API</title>
      <author>Francesco Menghi</author>
      <pubDate>Fri, 19 Nov 2021 15:36:55 +0000</pubDate>
      <link>https://dev.to/menghif/fetching-the-github-api-119e</link>
      <guid>https://dev.to/menghif/fetching-the-github-api-119e</guid>
      <description>&lt;p&gt;This week my latest &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2466"&gt;PR&lt;/a&gt; for &lt;a href="https://github.com/Seneca-CDOT/telescope"&gt;telescope&lt;/a&gt; was merged. It all started with an &lt;a href="https://github.com/Seneca-CDOT/telescope/issues/2417"&gt;issue&lt;/a&gt; to add Github stats to the new &lt;a href="https://api.telescope.cdot.systems/v1/status"&gt;Telescope dashboard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The dashboard is currently showing the &lt;a href="https://github.com/creativetimofficial/material-dashboard"&gt;material-dashboard&lt;/a&gt; template and we are going to add relevant information to it one PR at the time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4p1MYKdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94he3xv7yj6ydjlpzrj9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4p1MYKdT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94he3xv7yj6ydjlpzrj9.png" alt="Material Dashboard" width="880" height="632"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To add relevant stats I had to go through the &lt;a href="https://docs.github.com/en/rest"&gt;Github API&lt;/a&gt; to see what data I could get from it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commit-count"&gt;
  &lt;/a&gt;
  Commit count
&lt;/h3&gt;

&lt;p&gt;I first found a way to get the weekly and yearly &lt;a href="https://docs.github.com/en/rest/reference/repos#get-the-weekly-commit-count"&gt;commit count&lt;/a&gt;. This request returns and array of the number of commits per week over the last year.&lt;/p&gt;

&lt;p&gt;Here is the request using &lt;code&gt;curl&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Accept: application/vnd.github.v3+json"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
  https://api.github.com/repos/Seneca-CDOT/telescope/stats/participation
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is with &lt;code&gt;fetch&lt;/code&gt; in Javascript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://api.github.com/repos/Seneca-CDOT/telescope/stats/participation`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/vnd.github.v3+json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// use received data&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#weekly-commits-activity"&gt;
  &lt;/a&gt;
  Weekly commits activity
&lt;/h3&gt;

&lt;p&gt;The second data I wanted was the total lines added and lines removed for the week. I found this by fetching the &lt;a href="https://docs.github.com/en/rest/reference/repos#get-the-weekly-commit-count"&gt;weekly commit activity&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://api.github.com/repos/Seneca-CDOT/telescope/stats/code_frequency"&gt;https://api.github.com/repos/Seneca-CDOT/telescope/stats/code_frequency&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Taking the last element of the array gives us the &lt;a href="https://en.wikipedia.org/wiki/Unix_time"&gt;UNIX timestamp&lt;/a&gt;, the lines added and the lines removed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;[
  1636848000,
  876,
  -349
]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#latest-author"&gt;
  &lt;/a&gt;
  Latest author
&lt;/h3&gt;

&lt;p&gt;To get the author of the latest commit, I had to fetch the &lt;a href="https://docs.github.com/en/rest/reference/repos#list-commits"&gt;list of commits&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://api.github.com/repos/Seneca-CDOT/telescope/commits"&gt;https://api.github.com/repos/Seneca-CDOT/telescope/commits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The response includes a lot of information about each commit, so I only focused on the information I needed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;username&lt;/li&gt;
&lt;li&gt;profile picture
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;{
  "commit": {
    "author": {
      "name": "Francesco Menghi",
    },
  },
  "author": {
    "login": "menghif",
    "avatar_url": "https://avatars.githubusercontent.com/u/53121061?v=4",
  },
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#total-contributors"&gt;
  &lt;/a&gt;
  Total Contributors
&lt;/h3&gt;

&lt;p&gt;Finally I wanted a way to get the total number of contributors of the repo. I fetched the &lt;a href="https://docs.github.com/en/rest/reference/repos#list-repository-contributors"&gt;repository contributors&lt;/a&gt; with 1 result per page and then retrieved the number of pages returned in the response header. &lt;a href="https://github.com/Seneca-CDOT/telescope/pull/2466#issuecomment-968177583"&gt;Thanks David!&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://api.github.com/repos/Seneca-CDOT/telescope/contributors?per_page=1`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/vnd.github.v3+json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;link&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contributors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/.*"next".*&amp;amp;page=&lt;/span&gt;&lt;span class="se"&gt;([&lt;/span&gt;&lt;span class="sr"&gt;0-9&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;.*"last".*/&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h3&gt;

&lt;p&gt;This is the end result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---tzgbwGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/53121061/141859036-cce90833-054c-494d-8e63-69902aeb85a7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---tzgbwGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/53121061/141859036-cce90833-054c-494d-8e63-69902aeb85a7.png" alt="Telescope Dashboard" width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Javascript code with all the fetch requests is available &lt;a href="https://github.com/Seneca-CDOT/telescope/blob/master/src/api/status/public/js/github-stats.js"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am pleased with the result, but it is only the first step. I am sure that other students will find bugs to fix and will have more to contribute to it. I'm looking forward to how the dashboard will look once "finished".&lt;/p&gt;

</description>
      <category>github</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Windows Subsystem for Linux (WSL)</title>
      <author>KenjiGoh</author>
      <pubDate>Fri, 19 Nov 2021 15:28:32 +0000</pubDate>
      <link>https://dev.to/kenji_goh/windows-subsystem-for-linux-wsl-2d63</link>
      <guid>https://dev.to/kenji_goh/windows-subsystem-for-linux-wsl-2d63</guid>
      <description>&lt;p&gt;Writing here for sharing and also for my personal reference as I have very poor memory and tend to forget some commands.&lt;/p&gt;

&lt;p&gt;For windows users, you can download WSL (Windows Subsystem for Linux) on powershell. WSL lets developers run a Linux environment directly on windows &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/about"&gt;Read more here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing, in Command Prompt or PowerShell, type &lt;strong&gt;wsl&lt;/strong&gt; and it will open the WSL terminal window:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wsl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To open a VS Code, type code . from the ubuntu terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;code .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go back to root directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#mounting"&gt;
  &lt;/a&gt;
  Mounting
&lt;/h2&gt;

&lt;p&gt;/mnt is a standard subdirectory of the root directory on Linux. The /mnt/c/ directory basically means mounting on Windows C drive. Therefore if u see this path, it means u are accessing a folder that resides in Windows. &lt;a href="https://code.visualstudio.com/docs/remote/wsl"&gt;Read more here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/mnt/c/&amp;lt;file_path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w3s7IUDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbgt28rp0zac4ornjsl3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w3s7IUDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbgt28rp0zac4ornjsl3.png" alt="Windows-WSL" width="880" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sudo&lt;/strong&gt; means "super user do" - a Linux command that allows you to executedddd programs as a super user (aka root user)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before we go into installing new packages, lets cover some of the essential commands to help with troubleshooting.&lt;br&gt;
Key terminologies to know:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;postgres is one of the default PostgreSQL database&lt;/li&gt;
&lt;li&gt;postgres is also the default admin user in PostgreSQL&lt;/li&gt;
&lt;li&gt;psql - interactive commandline tool&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#basic-commands-to-know"&gt;
  &lt;/a&gt;
  Basic Commands to Know:
&lt;/h2&gt;

&lt;p&gt;To check status of database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service postgresql status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start running your database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service postgresql start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To stop running your database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo service postgresql stop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#installation-of-packages"&gt;
  &lt;/a&gt;
  Installation of Packages
&lt;/h2&gt;

&lt;p&gt;To update &amp;amp; upgrade our Ubuntu to latest packages:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To install package such as node, python or postgresql&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check  version, e.g. postgreSQL, you type either one of this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql -V
psql --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see all the command documentations, you can either type one of the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-?
--help
man postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Show information about all PostgreSQL clusters&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; pg_lsclusters
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#default-databases-of-postgres-server"&gt;
  &lt;/a&gt;
  Default Databases of Postgres server
&lt;/h2&gt;

&lt;p&gt;Most Postgres servers have three databases defined by default: &lt;strong&gt;template0, template1&lt;/strong&gt; and &lt;strong&gt;postgres&lt;/strong&gt;. &lt;em&gt;(yes it is a little confusing for first-timer, default user is postgres and one of the default database name is also postgres)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The default admin user, postgres, needs a password assigned in order to connect to a database. Therefore, to set a password:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo passwd postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see the command line change to &lt;em&gt;postgres=#&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To exit the &lt;em&gt;postgres=#&lt;/em&gt;, enter &lt;strong&gt;\q&lt;/strong&gt; or &lt;strong&gt;Ctrl+D&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\q
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To switch from root user to the default admin user, postgres.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;su - postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see something like this. You can now run commands as the PostgreSQL superuser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To create a new user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;createuser --interactive --pwprompt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be prompt the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$ createuser --interactive --pwprompt
Enter name of role to add: kenji
Enter password for new role: 
Enter it again: 
Shall the new role be a superuser? (y/n) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I (postgres user in this case) have created a new user called kenji.&lt;/p&gt;

&lt;p&gt;To create a new database called simple_blog:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;createdb simple_blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To destroy a database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dropdb simple_blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-psql-interactive-shell-as-default-postgres-user"&gt;
  &lt;/a&gt;
  Using psql Interactive Shell as default postgres user
&lt;/h2&gt;

&lt;p&gt;To run Postgres with psql interactive shell(you can also just type &lt;strong&gt;psql&lt;/strong&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo -u postgres psql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be greeted with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql (12.9 (Ubuntu 12.9-0ubuntu0.20.04.1))
Type "help" for help.

postgres=#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Press &lt;strong&gt;Ctrl+D&lt;/strong&gt; to exit and we will return to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we can switch to the new user we have just created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postgres@DESKTOP-ORMQU9O:~$ su - kenji
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will then see this instead (after password prompt):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji@DESKTOP-ORMQU9O:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can enter the psql command line by typing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji@DESKTOP-ORMQU9O:~$ psql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And you will see this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql (12.9 (Ubuntu 12.9-0ubuntu0.20.04.1))
Type "help" for help.

kenji=#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;psql&lt;/em&gt; is an interactive terminal program that allows you to interactively enter, edit and execute SQL commands. Remember to put ';' to end the SQL statement.&lt;/p&gt;

&lt;p&gt;With psql shell open, to see what user accounts have been created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \du
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see all other available backslash commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To exit the help log, type '\q' and press Enter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \q
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also check connection info to see port which database, which user and which port you are connected to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kenji=# \conninfo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;You are connected to database "kenji" as user "kenji" via socket in "/var/run/postgresql" at port "5432".
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#start-psql-to-specific-database-you-have-created"&gt;
  &lt;/a&gt;
  Start psql to specific database you have created
&lt;/h2&gt;

&lt;p&gt;When not in psql shell, You can also startup psql to a specific database with the below commaned:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql simple_blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be greeted with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;psql (12.9 (Ubuntu 12.9-0ubuntu0.20.04.1))
Type "help" for help.

simple_blog=#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see all database:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;\l
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can write SQL statement directly, remember to end with semi-colon:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;simple_blog=# CREATE TABLE my_table (
simple_blog(# first integer not null default 0,
simple_blog(# second text)
simple_blog-# ;
CREATE TABLE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you type '\d my_table', you will see the created table&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;simple_blog=# \d my_table
              Table "public.my_table"
 Column |  Type   | Collation | Nullable | Default 
--------+---------+-----------+----------+---------
 first  | integer |           | not null | 0
 second | text    |           |          | 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As always, to learn more, it is best to read the &lt;a href="https://www.postgresql.org/docs/"&gt;documentation&lt;/a&gt;, as some solutions shared by others might be outdated.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Best Python Courses for Beginners to Learn Online</title>
      <author>javinpaul</author>
      <pubDate>Fri, 19 Nov 2021 15:25:16 +0000</pubDate>
      <link>https://dev.to/javinpaul/10-best-python-courses-for-beginners-to-learn-online-4ok8</link>
      <guid>https://dev.to/javinpaul/10-best-python-courses-for-beginners-to-learn-online-4ok8</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.educative.io/courses/learn-python-from-scratch?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pAI2O9AT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/cdn-cgi/image/f%3Dauto%2Cfit%3Dcover%2Cw%3D620/v2api/collection/10370001/5550095527313408/image/5568089526632448" alt="Learn Python 3 from Scratch - Free Interactive Course" width="620" height="310"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello devs, Python is one of the best programming languages in the tech world and a great tool if you want to become a Software Developer, Data Scientist, Web Developer, or Machine Learning Engineer.&lt;/p&gt;

&lt;p&gt;Because of its ever-increasing popularity, more and more people are learning Python but at the same time, they are also struggling to find the &lt;strong&gt;&lt;em&gt;best resources to learn Python&lt;/em&gt;&lt;/strong&gt; in a guided and structured manner.&lt;/p&gt;

&lt;p&gt;Being an author of a technical blog, I often receive queries like how do I learn Python, &lt;em&gt;what is the best way to learn Python?&lt;/em&gt; Could you please suggest the best resource to learn Python, or should I join an online course from Udemy or Coursera to learn Python or not, etc.?&lt;/p&gt;

&lt;p&gt;After answering them individually, I found that online courses are the best way to learn Python and if you want to learn the Python programming language in 2022 and looking for the &lt;em&gt;best Python courses&lt;/em&gt; then you have come to the right place.&lt;/p&gt;

&lt;p&gt;I the past, I have also shared a lot of free sources like these &lt;a href="https://www.java67.com/2017/05/top-7-free-python-programming-books-pdf-online-download.html"&gt;free Python books&lt;/a&gt;, &lt;a href="https://dev.to/javinpaul/top-5-places-to-learn-python-programming-for-free-m4c"&gt;tutorials&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2018/12/10-free-python-courses-for-programmers.html"&gt;courses&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;specialization&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/10-best-python-certification-courses-from-coursera-4576890eb6b3"&gt;certification&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;Python projects&lt;/a&gt;, etc, but many of you asked for more comprehensive and advanced Python courses to master this key programming skill in 2022.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://javarevisited.blogspot.com/2019/09/5-websites-to-learn-python-for-free.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fTuk4vE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/609/1%2Aaxds4g-oiL6bYQy55x7l5w.png" alt="" width="609" height="282"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a *lot of resources to learn Python on the interne*t, like these &lt;a href="https://medium.com/javarevisited/best-python-books-a93d1a0d842d"&gt;&lt;em&gt;best Python books&lt;/em&gt;&lt;/a&gt;, tutorials, &lt;a href="https://javarevisited.blogspot.com/2019/09/5-websites-to-learn-python-for-free.html"&gt;platforms&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/10-free-python-tutorials-and-courses-from-google-microsoft-and-coursera-for-beginners-96b9ad20b4e6"&gt;websites&lt;/a&gt;, including free and paid online courses, the only problem is finding the right course because it's very easy to get stuck with outdated resources.&lt;/p&gt;

&lt;p&gt;That's why we have selected a &lt;strong&gt;few advanced Python online training courses&lt;/strong&gt; from platforms like &lt;a href="https://javarevisited.blogspot.com/2019/08/top-10-udemy-courses-and-certifications-for-programmers.html"&gt;Udemy&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/pluralsight-or-udemy-d9a94d2e8ee"&gt;Coursera&lt;/a&gt;, &lt;a href="https://medium.com/javarevisited/10-free-best-edx-certifications-and-courses-to-learn-online-3473d466f968"&gt;edX&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2017/12/top-10-pluralsight-courses-java-and-web-developers.html"&gt;Pluralsight&lt;/a&gt; to help you learn Python from the best resources.&lt;/p&gt;

&lt;p&gt;If you are learning python from scratch or you have some knowledge of the Python programming language but want to take your Python skills to the next level, these online training courses can help you.&lt;/p&gt;

&lt;p&gt;These courses have been created by Python experts and trusted by more than 1 million &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-python-for-web-development-in-2020-best-of-lot-efe11fb6d212"&gt;&lt;em&gt;Python developers&lt;/em&gt;&lt;/a&gt; around the world. These are simply the best of the best courses to learn Python in depth. They are equally good for beginners and experienced Python developers.&lt;/p&gt;

&lt;p&gt;According to various websites like StackOverflow, survey &lt;a href="https://medium.com/swlh/5-free-python-courses-for-beginners-to-learn-online-e1ca90687caf"&gt;&lt;strong&gt;Python&lt;/strong&gt; &lt;/a&gt;is among the most successful coding languages of the last years. There is a high demand for Python developers or all kinds of experience because of the versatile nature of the Python programming language.&lt;/p&gt;

&lt;p&gt;For example, simultaneously with being a high-level programming language and also used for general purposes like &lt;a href="https://www.java67.com/2019/11/top-5-artificial-intelligence-courses.html"&gt;AI&lt;/a&gt; and &lt;a href="https://javarevisited.blogspot.com/2019/09/top-5-courses-to-learn-d3js-best.html"&gt;Data visualization&lt;/a&gt; and building web applications. Python is also an object-oriented language and open source so it has a large community that works together to develop a beautiful programming language.&lt;/p&gt;

&lt;p&gt;Many developers right now over the world are jumping to use &lt;a href="https://www.java67.com/2017/05/top-7-free-python-programming-books-pdf-online-download.html"&gt;Python&lt;/a&gt; for its simplicity like creating GUI applications, websites, and mobile apps.&lt;/p&gt;

&lt;p&gt;I have also selected &lt;strong&gt;hands-on&lt;/strong&gt; and &lt;strong&gt;project-based courses&lt;/strong&gt; where you will &lt;a href="https://dev.to/javinpaul/9-projects-you-can-do-to-become-a-python-master-in-2020-1om"&gt;&lt;strong&gt;learn Python by creating real work projects&lt;/strong&gt;&lt;/a&gt;. This is probably the best method to learn any new technology including Python 3 and it works really well. You won't realize that you have learned so many Python concepts while developing those projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-best-python-online-courses-to-learn-python-in-depth"&gt;
  &lt;/a&gt;
  10 Best Python Online Courses to Learn Python in depth
&lt;/h2&gt;

&lt;p&gt;Now in this article, we will see 5 of the advanced python courses that take you from a beginner to an expert and will make you a professional programmer whether in creating GUI applications or a data visualization expert, or an AI specialist.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-100-days-of-code-the-complete-python-pro-bootcamp-for-2022"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;100 Days of Code --- The Complete Python Pro Bootcamp for 2022&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to learn Python in 2022 and looking for a project-based course then this is the best course you can join on Udemy. Created by Angela Yu, instructor of the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fios-13-app-development-bootcamp%2F"&gt;&lt;strong&gt;iOS Bootcamp course&lt;/strong&gt;&lt;/a&gt;, this online course will teach you Python by building 100 projects in 100 days.&lt;/p&gt;

&lt;p&gt;You will learn to build websites, games, apps, plus scraping and data science, and become a Python professional. After completing this course you will also have a portfolio of 100 Python projects to apply for developer jobs which will make you a standout candidate.&lt;/p&gt;

&lt;p&gt;Also, this is one of the massive courses with 60+ hours of content and 229 articles but you can buy in just $9.9 on Udemy sales which happens every now and then. If you want to learn Python in 2022, I strongly recommend you to join this course on Udemy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this best Python course&lt;/strong&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;100 Days of Code --- The Complete Python Pro Bootcamp for 2022&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2F100-days-of-code%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q7HUj9ie--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/609/1%2Aynze9qj9-qx1H72o-6h0CQ.jpeg" alt="Best project based Python course for beginners" width="609" height="342"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-complete-python-developer-in-2022-zero-to-mastery"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-developer-zero-to-mastery%2F"&gt;Complete Python Developer in 2022: Zero to Mastery&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;There is no doubt that Udemy is one of the best learning platforms out there and probably is the most famous among students who want to learn skills in many different things such as programming, design, and many more fields.&lt;/p&gt;

&lt;p&gt;The platform has tens of courses about python programming language and some of them take you from beginner to advanced level.&lt;/p&gt;

&lt;p&gt;This is clearly the best Python course on Udemy. I have attended many Python courses on Udemy like &lt;a href="http://bit.ly/2ysqzDa"&gt;&lt;strong&gt;The Complete Python 3 Bootcamp&lt;/strong&gt;&lt;/a&gt; by Jose Portal which is really great but this course is even better with lots of exercises, quizzes, and hands-on projects.&lt;/p&gt;

&lt;p&gt;The Complete Python Course: Beginner to Advanced course has more than 3-.5 hours of video content and shows you how to create programs like a web scraper, web application with Django framework, GUI application, Data visualization, Machine learning, and much more.&lt;/p&gt;

&lt;p&gt;Here is the link to join this Python course --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-developer-zero-to-mastery%2F"&gt;Complete Python Developer in 2022: Zero to Mastery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-python-developer-zero-to-mastery%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFE0izPQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Awh4Gvp6C3G0t9Vi1iCOrGw.jpeg" alt="Best Python course for beginners" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you love Udemy courses and looking for the best Python course on Udemy, join this course, and if you like Andrei's teaching style then you may want to consider joining his &lt;a href="https://academy.zerotomastery.io/p/complete-python-developer-zero-to-mastery?affcode=441520_zytgk2dn"&gt;&lt;strong&gt;Zero To Mastery Academy&lt;/strong&gt;&lt;/a&gt;where he offers unlimited access to all of his courses, including this one. If you do, use code FRIENDS10 to get the 10% discount, exclusive for you.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-python-for-everybody-specialization"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;Python for Everybody Specialization&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Many programming online learning platforms have recognized the power and the future of this beautiful programming language and they have created courses on how to use it and be a professional programmer and of these platforms is Coursera.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;Python for Everybody&lt;/a&gt; is a specialization offered by one of the best universities called Michigan university and the instructor is one of the best teachers on this platform.&lt;/p&gt;

&lt;p&gt;This course will show you how to start from the beginning and be an advanced python programmer by many projects such as web crawler and using SQL databases with Python and &lt;a href="https://www.java67.com/2020/07/top-5-data-visualization-tools-every.html"&gt;data visualization&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is the link to join this best Python course on Coursera --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;Python for Everybody&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fspecializations%2Fpython"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2L5yy4xo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AfoI88hNJSxvjPf6XeAwPiQ.jpeg" alt="Best Coursera Python course for beginners" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And, if you find Coursera courses useful, you should consider joining the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;&lt;strong&gt;Coursera Plus&lt;/strong&gt;&lt;/a&gt;, a subscription plan from Coursera which gives you unlimited access to their most popular courses, specialization, professional certificate, and guided projects. It cost around $399/year but it's completely worth your money as you get &lt;strong&gt;unlimited certificates.&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-the-python-mega-course"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-mega-course%2F"&gt;The Python Mega Course&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is one of the Best Project Based Course to learn Python in depth. Python has many libraries that you can use to create useful things like AI applications or visualize some data or create web applications.&lt;/p&gt;

&lt;p&gt;If you don't want just to learn python and how you create just a basic program you can take The Python Mega Course: Build 10 Real World Applications course.&lt;/p&gt;

&lt;p&gt;This course will take you through the basic syntax of the python programming language like data types and the for loops then will show you how to use these libraries to create GUI applications, visualize data, create web applications, visualize data on a map, process images and videos with &lt;a href="https://www.java67.com/2020/07/top-5-courses-to-learn-computer-vision-opencv-python.html"&gt;OpenCV&lt;/a&gt;, and much more exciting projects.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is the link to join this project-based Python course&lt;/em&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-mega-course%2F"&gt;The Python Mega Course&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-python-mega-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aVFzGT----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AifW8EbMz1tcG5n6kDbm-jw.jpeg" alt="Best Python course online" width="750" height="422"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-introduction-to-python-programming-best-edx-course"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fprofessional-certificate%2Fintroduction-to-python-programming"&gt;Introduction to Python Programming&lt;/a&gt; [ Best edX course]
&lt;/h3&gt;

&lt;p&gt;If you want to learn python programming from professional universities or big institutes you can take a look at another alternative of Coursera called Edx. The platform offers many python courses created by universities and many big companies like Microsoft and the Georgia Institute of Technology.&lt;/p&gt;

&lt;p&gt;All you have to do is go to &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p="&gt;edx.org&lt;/a&gt; and search for tens of python classes but to save you some time I'm going to give you one of the best python courses out there.&lt;/p&gt;

&lt;p&gt;Introduction to Python Programming is a course offered on this wonderful platform and created by the Georgia Institute of Technology.&lt;/p&gt;

&lt;p&gt;Instructor David Joyner is a Senior Research Associate at the College of Computing walk you in this course from beginner to advanced and how to use the object-oriented programming method (&lt;a href="https://medium.com/swlh/5-free-object-oriented-programming-online-courses-for-programmers-156afd0a3a73"&gt;OOP&lt;/a&gt;) in your python program which is an essential skill if you want to get a job in this field since it shows you how to work as a team.&lt;/p&gt;

&lt;p&gt;Here is the link to join this best edX Python course --- &lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fprofessional-certificate%2Fintroduction-to-python-programming"&gt;Introduction to Python Programming&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.awin1.com/cread.php?awinmid=6798&amp;amp;awinaffid=631878&amp;amp;clickref=&amp;amp;p=%5B%5Bhttps%3A%2F%2Fwww.edx.org%2Fprofessional-certificate%2Fintroduction-to-python-programming"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vmh8AiIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AhsnLpEON4O3nzM8VE0RZTw.jpeg" alt="Best edX course to learn Python" width="880" height="524"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-build-a-job-board-with-python-amp-flask-pluralsight-best-course"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fprojects%2Fbuild-a-job-board-with-python-flask"&gt;Build a Job Board with Python &amp;amp; Flask&lt;/a&gt; [Pluralsight best course]
&lt;/h3&gt;

&lt;p&gt;Many programmers and learners don't know that Pluralsight also has projects which you can join to build real-world projects and apply all the knowledge you have learned. This project is created by Tom Bell and it will show you how to use &lt;a href="https://medium.com/javarevisited/10-free-python-tutorials-and-courses-from-google-microsoft-and-coursera-for-beginners-96b9ad20b4e6"&gt;Python&lt;/a&gt; &amp;amp; &lt;a href="https://javarevisited.blogspot.com/2020/01/top-5-courses-to-learn-flask-for-web-development-with-python.html"&gt;Flask&lt;/a&gt; to build a simple website.&lt;/p&gt;

&lt;p&gt;In this project, you'll use them to build a simple job board. The main page of the site will show all jobs and each job and employer will have dedicated pages. Users will also be able to review each employer.&lt;/p&gt;

&lt;p&gt;This project-based course will first teach you how to set up your local environment for projects and then walk you through everything you need to know, including how to install and configure your environment to be able to complete all of the tasks.&lt;/p&gt;

&lt;p&gt;This step-by-step guidance really helps you to move along swiftly and create a product that you can be proud of. The feeling of accomplishment you get will further boost your learning appetite and also help you to become a better Python developer.&lt;/p&gt;

&lt;p&gt;This project-based Pluralsight course is good for both beginners and intermediate Python programmers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is the link to join this hands-on Python course&lt;/em&gt; --- &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fprojects%2Fbuild-a-job-board-with-python-flask"&gt;Build a Job Board with Python &amp;amp; Flask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fprojects%2Fbuild-a-job-board-with-python-flask"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vsBk7zx---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AJoIHVp9CDBOhEpXpSoxeew.png" alt="Best Pluralsight course to learn Python" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Btw, you would need a Pluralsight membership to join this course which costs around $29 per month or $299 per year (14% discount). I highly recommend this subscription plan as you not only gain access to this project but also more than 40 such projects, 7000+ online courses, and interactive exercises. Alternatively, you can also use their &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;strong&gt;10-day-free-trial&lt;/strong&gt;&lt;/a&gt; to access this course for FREE.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#7-learn-python-programming-masterclass-udemy"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-the-complete-python-developer-course%2F"&gt;Learn Python Programming Masterclass --- Udemy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another great course to learn Python in depth from Udemy. While the first course is great for beginners this course covers some advanced concepts which make it useful for experienced Python developers.&lt;/p&gt;

&lt;p&gt;Getting the best program to learn such a beautiful language like python can be a difficulty sometimes with that many courses available online. In Udemy, you can get the right Python course for you bypassing a short test but I'm going to suggest one of the &lt;a href="https://medium.com/better-programming/top-5-courses-to-learn-python-in-2018-best-of-lot-26644a99e7ec?"&gt;&lt;strong&gt;best Python courses&lt;/strong&gt;&lt;/a&gt; you can join on Udemy.&lt;/p&gt;

&lt;p&gt;Learn Python Programming Masterclass course is designed to take you from the beginning stage to be an advanced python developer with more than 50 hours of video content and 24 coding exercises that will enhance your coding skills by practice and also you can show these projects on your LinkedIn portfolio to attract job offers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here is the link to join this Python coding course&lt;/em&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-the-complete-python-developer-course%2F"&gt;Learn Python Programming Masterclass&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fpython-the-complete-python-developer-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ln3mOKMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A07Lqu3l9Cb6m62lRcJGYIQ.jpeg" alt="Best Udemy course to learn Python" width="750" height="422"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-google-it-automation-with-python-on-coursera"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprofessional-certificates%2Fgoogle-it-automation"&gt;Google IT Automation with Python on Coursera&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another great specialization offered by Google targeted people who want to be Python developers showing taking them from beginner to expert throughout many small courses teaching you the basic syntax of python, &lt;a href="https://medium.com/javarevisited/7-best-courses-to-learn-data-structure-and-algorithms-d5379ae2588"&gt;data structure,&lt;/a&gt; automation, &lt;a href="https://medium.com/javarevisited/my-favorite-courses-to-learn-object-oriented-programming-and-design-in-2019-197bab351733"&gt;object-oriented programming&lt;/a&gt;, how to use Git and Github, and much more topics included in this specialization.&lt;/p&gt;

&lt;p&gt;This certificate can be completed in about 6 months and is designed to prepare you for a variety of roles in IT, like more advanced IT Support Specialist or Junior Systems Administrator positions. Upon completion, you can share your information with potential employers, like Walmart, Sprint, Hulu, Bank of America, Google (of course!), and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to join this certification&lt;/strong&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprofessional-certificates%2Fgoogle-it-automation"&gt;Google IT Automation with Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprofessional-certificates%2Fgoogle-it-automation"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_Jad5y8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/525/0%2ALxH5GurIrRw32Kg3.jpeg" alt="" width="525" height="274"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#9-learn-python-3-on-codecademy"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://bit.ly/learnpython3codecademy"&gt;Learn Python 3 on Codecademy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another interesting and interactive online course to learn Python 3 for beginners. I really like the curriculum and Codecademy platform for learning Python. The examples are shorter and to-the-point and provide quick feedback which is quite important for learners. &lt;/p&gt;

&lt;p&gt;This course also provide great introduction to both fundamental programming concepts and the Python programming language. Python 3 is the most up-to-date version of the language with many improvements made to increase the efficiency and simplicity of the code that you write.&lt;/p&gt;

&lt;p&gt;This is also a comprehensive course with more than 25 hours of content. Btw you would need a &lt;a href="https://bit.ly/codecademypro"&gt;Codecademy PRO subscription&lt;/a&gt; to join this course which cost around $15.9 on annual plan but its totally worth it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/learnpython3codecademy"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UpXRdAD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aws1.discourse-cdn.com/codecademy/original/5X/0/b/2/9/0b29ee29b14c9481e04de9ea06de1b1cc95615d1.png" alt="Python 3 quiz incorrect answers? - Python - Codecademy course" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#10-python-201-interactively-learn-advanced-concepts-in-python-3-on-educative"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://www.educative.io/courses/python-201-interactively-learn-advanced-concepts-in-python-3?affiliate_id=5073518643380224"&gt;Python 201 - Interactively Learn Advanced Concepts in Python 3 on Educative&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another awesome interactive course for Python developers to learn Python in depth. This course is created by Educative, a text-based interactive learning platform, to  help take you to the next level in your programming journey. &lt;/p&gt;

&lt;p&gt;It will also demonstrate to you some of the many ways you can use Python in your day-to-day work. I will be covering intermediate and some advanced level material in this course.&lt;br&gt;
Python 201 is split into four parts:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Part one covers intermediate modules&lt;br&gt;
Part two covers topics such as unicode, generators and iterators&lt;br&gt;
Part three covers web related tasks with Python&lt;br&gt;
Part four covers testing code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's expected that you have some basic knowledge of Python before joining this course as its an intermediate level Python course. &lt;/p&gt;

&lt;p&gt;And, if you find Educative platform and their interactive courses like this one and famous &lt;a href="https://www.educative.io/collection/5668639101419520/5649050225344512?affiliate_id=5073518643380224"&gt;Grokking the System Design&lt;/a&gt; course then consider getting &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative Unlimited&lt;/a&gt; which provides access to their 100+ courses in just $14.9 per month. It's very cost-effective and great for preparing for coding interviews. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/python-201-interactively-learn-advanced-concepts-in-python-3?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIh4mGrb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/cdn-cgi/image/f%3Dauto%2Cfit%3Dcover%2Cw%3D620/v2api/collection/6237007991275520/6500415600852992/image/5866506968104960%3Faffiliate_id%3D5073518643380224" alt="Python 201 - Interactively Learn Advanced Concepts in Python 3 - Learn  Interactively" width="620" height="310"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about some of the &lt;strong&gt;best courses to learn Python in-depth&lt;/strong&gt; and become an expert Python Developer. As I said, Python skills are in great demand and there is always a shortage of people who knowns Python really well.&lt;/p&gt;

&lt;p&gt;As an experienced Python developer you are expected to be familiar with not only essential Python concepts but also have good hands-on knowledge of them so that you can use the right tools at the right place and deliver better software quicker.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Python Programming and Development Articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/05/10-reasons-to-learn-python-programming.html"&gt;10 Reasons to Learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/@javinpaul/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;8 Python Projects for Beginners and Intermediate Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-free-python-tutorials-and-courses-from-google-microsoft-and-coursera-for-beginners-96b9ad20b4e6"&gt;Free Python Tutorials from Google and Microsoft&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2019/08/top-5-books-to-learn-python-for-beginners.html"&gt;Top 5 Books to learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/swlh/5-free-python-courses-for-beginners-to-learn-online-e1ca90687caf"&gt;15 Free courses to learn Python for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/@javinpaul/my-favorite-courses-to-learn-django-for-beginners-2020-ac172e2ab920?source=rss------web_development-5"&gt;My favorite courses to learn Django for beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://becominghuman.ai/9-data-science-and-machine-learning-courses-by-harvard-ibm-udemy-and-others-12a0c7c23ec1"&gt;9 Data Science courses from Harvard and IBM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/python-or-java-which-programming-language-beginners-should-learn-in-2020-de992b2650ec"&gt;Python vs Java --- Which is better to start with&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-python-for-web-development-in-2020-best-of-lot-efe11fb6d212"&gt;10 Courses to learn Python for Web Development&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/08/top-5-python-books-for-data-science-and-machine-learning.html"&gt;5 Books to learn Python for Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;10 Best Python Specialization and Certificates from Coursera&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/01/top-5-courses-to-learn-flask-for-web-development-with-python.html"&gt;Top 5 Courses to learn Flask in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/10/top-8-python-libraries-for-data-science-machine-learning.html"&gt;8 Python Libraries for Machine Learning&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.sg/2018/01/10-unit-testing-and-integration-tools-for-java-programmers.html"&gt;10 Testing Libraries Every Java Developer Should Know&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/04/top-5-python-web-development-frameworks.html"&gt;5 Python Frameworks you can learn for Web development&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you find these &lt;em&gt;best Python coding courses useful in 2022&lt;/em&gt; then please share them with your friends and colleagues. If you have any questions or feedback then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. ---&lt;/strong&gt; If you want to learn Python programming but can't afford these online training courses or looking for a free resource to start with Python programming then I also suggest you take a look at &lt;a href="http://bit.ly/2D5vvnV"&gt;&lt;strong&gt;Introduction To Python Programming&lt;/strong&gt;&lt;/a&gt; from Udemy. It's completely free and all you need is a free Udemy account to enroll in this course. More than 490,000 students have already learned Python from this course.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Rust from the beginning, variables</title>
      <author>Chris Noring</author>
      <pubDate>Fri, 19 Nov 2021 15:19:42 +0000</pubDate>
      <link>https://dev.to/azure/rust-from-the-beginning-variables-3g7c</link>
      <guid>https://dev.to/azure/rust-from-the-beginning-variables-3g7c</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;TLDR; this is the second part on Rust. In this part we'll cover variables, how to work with them, change values and so on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Series:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/azure/rust-from-the-beginning-your-first-program-30cp"&gt;Your first program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Variables, &lt;strong&gt;you are here&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;IO, read and write from the console&lt;/li&gt;
&lt;li&gt;Rust projects with Cargo&lt;/li&gt;
&lt;li&gt;Control flow&lt;/li&gt;
&lt;li&gt;Error handling&lt;/li&gt;
&lt;li&gt;Working with files
Advanced&lt;/li&gt;
&lt;li&gt;Ownership &amp;amp; Borrowing&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%C2%A0resources"&gt;
  &lt;/a&gt;
  Â Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/modules/rust-introduction?wt.mc_id=academic-0000-chnoring"&gt;What is Rust, module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/modules/rust-create-program?wt.mc_id=academic-0000-chnoring"&gt;Create your first Rust program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rust-lang.org/learn"&gt;Rust Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-variables"&gt;
  &lt;/a&gt;
  Why variables
&lt;/h2&gt;

&lt;p&gt;We use variables to store a value that we want to use later. Additionally, having a variable, a named reference, we're able to better understand what's going on. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Your account balance {}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imagine you didn't have &lt;code&gt;account_balance&lt;/code&gt; but referred to 4000 in your code, you wouldn't know at first glance what 4000 is about.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#declare-variables"&gt;
  &lt;/a&gt;
  Declare variables
&lt;/h2&gt;

&lt;p&gt;To declare a variable in Rust, we need to give it a name and a value, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note how we start with the keyword &lt;code&gt;let&lt;/code&gt;, a name for the variable &lt;code&gt;name&lt;/code&gt;, and a value, "Chris". &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type-is-inferred-by-value"&gt;
  &lt;/a&gt;
  Type is inferred by value
&lt;/h3&gt;

&lt;p&gt;Values in Rust have type, and this type is decided at first assignment of a value to the variable. In the below case, &lt;code&gt;name&lt;/code&gt; is of type string and &lt;code&gt;age&lt;/code&gt; of type &lt;code&gt;i32&lt;/code&gt; an integer type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When a variable gets a type like this, we call it as type is &lt;em&gt;inferred&lt;/em&gt;, meaning that Rust observes what value it's being assigned and makes conclusions based on the assignment.&lt;/p&gt;

&lt;p&gt;The type it's inferred is a &lt;em&gt;default&lt;/em&gt; type. So numbers, lacking fraction becomes &lt;code&gt;i32&lt;/code&gt;, 32 bit integer (whole numbers lacking decimals) for example. If you want to check what default data types, here's some nice code you can use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="n"&gt;type_of&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;any&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;type_name&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Chris"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nf"&gt;type_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nf"&gt;type_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code will print &lt;code&gt;i32&lt;/code&gt; and &lt;code&gt;string&lt;/code&gt; when run.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables-are-immutable"&gt;
  &lt;/a&gt;
  Variables are immutable
&lt;/h3&gt;

&lt;p&gt;Variable values can't be change by default. You might start assigning a value to a variable like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then later you want to change it to say 4500 and attempt to write the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, you will get an error back, that you can't do this, because it's immutable. At this point you will see just how awesome the Rust compiler is by providing you not only with the error message, but what to do about it as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; let account_balance = 4000;
  |       ---------------
  |       |
  |       first assignment to `account_balance`
  |       help: make this binding mutable: `mut account_balance`
7 |   account_balance = 4500;
  |   ^^^^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The error message suggest we make this &lt;em&gt;mutable&lt;/em&gt;. Let's explain what that means in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-variable-value"&gt;
  &lt;/a&gt;
  Change variable value
&lt;/h2&gt;

&lt;p&gt;Variables are immutable but there are ways to change them. There are two major approaches to change their values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;make them mutable&lt;/strong&gt;, this involves using the keyword &lt;code&gt;mut&lt;/code&gt; when declaring the variable. Like so:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;   &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;shadowing&lt;/strong&gt;, what we do here is declare a variable later down in the code with the exact same variable name but with a new variable name. What happens is that the old variable is "shadowed over" by the name variable and can no longer be referenced to:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;   &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c"&gt;// other code&lt;/span&gt;
   &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;account_balance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;// this version of account_balance shadows the first declared version.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#constants"&gt;
  &lt;/a&gt;
  Constants
&lt;/h2&gt;

&lt;p&gt;So far we've been using the the &lt;code&gt;let&lt;/code&gt; keyword to declare variables. Another way to declare variables is by using the &lt;code&gt;const&lt;/code&gt; keyword. &lt;code&gt;const&lt;/code&gt; means something different than &lt;code&gt;let&lt;/code&gt; though, with &lt;code&gt;const&lt;/code&gt; you declare a variable that should never change. What you are saying in the code is that here's a variable that we don't expect to ever change like the value of PI or C for the speed of light.&lt;/p&gt;

&lt;p&gt;To declare such a variable, we can type like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;f32&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.14&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the usage of &lt;code&gt;const&lt;/code&gt; and that we explicitly need to set a type, &lt;code&gt;:f32&lt;/code&gt;, a 32-bit floating-point type. In this case, we choose &lt;code&gt;f32&lt;/code&gt;, but the default would be &lt;code&gt;f64&lt;/code&gt; per below compiler recommendation. &lt;/p&gt;

&lt;p&gt;Where you to skip the type, you would get an error like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  |
6 |   const PI = 3.14;
  |         ^^ help: provide a type for the item: `PI: f64`
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's also another type of constant, &lt;code&gt;static&lt;/code&gt;, but it's outside the scope of this article, if you want to learn more about that one, &lt;a href="https://doc.rust-lang.org/rust-by-example/custom_types/constants.html"&gt;check the docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;In summary, we've learned about bit more on why variables, how to declare them and assign different types of values to them. Additionally, we've seen how variables are immutable but can be changed either by using &lt;code&gt;mut&lt;/code&gt; keyword or shadowing, declare a varible by the same name.&lt;/p&gt;

</description>
      <category>rust</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Flutter: Googleâ€™s Most Ambitious Framework</title>
      <author>Harshu Incorporation</author>
      <pubDate>Fri, 19 Nov 2021 15:17:27 +0000</pubDate>
      <link>https://dev.to/harshuinc/flutter-googles-most-ambitious-framework-4fe0</link>
      <guid>https://dev.to/harshuinc/flutter-googles-most-ambitious-framework-4fe0</guid>
      <description>&lt;p&gt;19th Century was about the Industrial Revolution. The 20th Century was about Science and Engineering. And the 21st Century is all about Technology. The era in which we are living right now is called the Digital Age.&lt;/p&gt;

&lt;p&gt;Today Technology is everywhere. From the Smartphone that is in your pocket to the Smartwatch that is on your wrist right now. Today Televisions are Smart, Refrigerators are smart, Air Conditioners are smart, even the car you are driving is also smart.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Since our every devices are smart and connected with each other, we need ONE PLATFORM FOR ALL DEVICES. Whether its our Smartphone, Smartwatch, Smart TV, Smart AC, Smart Car, Smart Home Products, One Platform for all of Them....&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This idea is really similar to the terminology &lt;strong&gt;&lt;em&gt;Write Once Run Everywhere&lt;/em&gt;&lt;/strong&gt;, which is introduced in the late 70s. The first languages based on this terminology were Java and Python.&lt;/p&gt;

&lt;p&gt;Since then every major company tried to release their platforms based on this terminology whether it is Ionic, React Native, Xamarin, PhoneGap or any other framework. On May 2017, Tech Giant Google Introduced one framework named Flutter which is capable of delivering native Android and iOS apps from a single code base. This was an alpha release of Flutter.&lt;/p&gt;

&lt;p&gt;So you might have some Questions that commonly arise when anyone thinks to switch from React Native to flutter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If React Native is pretty dominating in the market right now then why you should give a chance to flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If every major company including Facebook, Instagram, Bloomberg, Uber, Skype, and Wix uses React Native then why you should give a chance to Flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On Big Job Portals including Nokri.com, Indeed.com, Careerbuilder.com, Dice.com, and Monster.com, there are hundreds of jobs available for React Native developers but still, very less amount of jobs are available for flutter developers then why you should give a chance to flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Native is based on the most popular tech stack JavaScript, So tutorials and community support are amazing for JavaScript, and there are lots of JavaScript developers already available in the market then why you should invest your time in learning a pretty unknown language Dart for developing apps on flutter ??&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;React Native is here from quite some time. So the support for react native is amazing on community sites like Stack Overflow, Quora and over the internet.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So if everything is fine with React Native why you should give a chance to flutter ?? So now Let me give the answer to your &lt;strong&gt;WHY ?&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-just-like-others-flutter-is-not-just-for-android-and-ios"&gt;
  &lt;/a&gt;
  1. Just like others, Flutter is not just for Android and iOS
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After the 1.0 release, flutter is evolving really fast. On the 1.0 release, it was only used for targeting Android and iOS just like others.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But with the release of Flutter 1.5, flutter team amazed everyone. They officially announced that from now, flutter will not only available for Android and iOS, but it will also available for Web, Desktop, and Embedded devices. Yaa they are in Preview right now, that means they are gonna launch it really soon.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;So if you learn flutter you will become One Man Army, because from just one framework you will able to target every major platform. You just need to master one framework. Just imagine the power that flutter gives you. ðŸ”¥&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you wanna develop for Web flutter is here to help you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you wanna develop Native Android and iOS apps flutter is here to help you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you wanna develop apps for Windows, macOS, or Linux flutter is available for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And at the end, if you wanna develop apps for embedded devices such as smartwatches and smart home products, here also flutter is available for you.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-fuchsia-os-the-most-powerful-beast-in-the-game"&gt;
  &lt;/a&gt;
  2. Fuchsia OS: The Most Powerful beast in the Game.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The second and the most amazing reason to learn flutter is that in future &lt;strong&gt;&lt;em&gt;Entire App development in Fuchsia will be done in a flutter.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We all know that Google is working on a really secret Operating System named Fuchsia.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Only the Core Google team knows the real power of Fuchsia OS. But there are really strong rumors that Fuchsia will be the cross-platform OS. That means whether it will mobile, desktop, or embedded devices, ONE OS EVERYWHERE.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And for developing apps for Fuchsia, &lt;strong&gt;&lt;em&gt;Flutter is the way for you.&lt;/em&gt;&lt;/strong&gt; And as of rumors, if fuchsia is the successor of Android then you can only imagine the wider market and high demand for flutter developers that will be coming in the next couple of years. So thatâ€™s why learning flutter really worth of your time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-faster-app-development"&gt;
  &lt;/a&gt;
  3. Faster App Development
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Another important reason for learning flutter is the development speed that it provides to you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While designing the flutter framework, Google developers have a one really big advantage and challenge. They have almost 10 years of experience in App Development. So they know every pain and problem that comes in the traditional native app development.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Having experience and knowledge of the market problems is their advantage. But how to overcome those problems and create a framework that makes app development faster was a big challenge.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Today You Just ask any developer who codes one or two apps in a flutter that how fast it is to create apps in a flutter. He/she will tell you only one thing that &lt;strong&gt;&lt;em&gt;no one can beat flutter in faster app development.&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-the-partnership-of-dart-and-flutter-team"&gt;
  &lt;/a&gt;
  4. The Partnership of Dart and Flutter team
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dart is a language created by Google. And also Flutter is created by Google. In Google, both teams work together to optimize dart for flutter and Fuchsia.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the recent versions of the dart, you can understand how dart team is working hard to optimize the language for Flutter. This is a really big advantage for Flutter that dart team is always there to help them in making flutter more powerful and feature-rich. None of the frameworks have this kind of advantage. That makes flutter more Powerful and Unique from others.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-features-of-flutter"&gt;
  &lt;/a&gt;
  5. Features of Flutter
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;And Finally, letâ€™s discuss the features of flutter. Flutter has four main features.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Stateful Hot Reload&lt;/li&gt;
&lt;li&gt;Beautiful Apps&lt;/li&gt;
&lt;li&gt;Productive&lt;/li&gt;
&lt;li&gt;High Performance&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;letâ€™s discuss each topic in detail.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#stateful-hot-reload"&gt;
  &lt;/a&gt;
  Stateful Hot Reload
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Flutter provides you stateful hot reload. If you have experience with the native app development then you must know how much time-consuming it is to compile the whole app.&lt;/li&gt;
&lt;li&gt;But flutter provides you the facility of stateful hot reload. So in just fraction of seconds, you can view your changes. Just like in web development you refresh the webpage to see your changes, the same concept goes here.&lt;/li&gt;
&lt;li&gt;For providing stateful hot reload flutter uses Dart Virtual Machine in debug mode builds to quickly inject new code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#beautiful-apps"&gt;
  &lt;/a&gt;
  Beautiful Apps
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;You can give any look you want from a design language of your choice. Flutter supports both Material Design and Cupertino Based Widgets. So apps build with flutter are naturally beautiful, you will not need much of the hard work to make them beautiful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#productive"&gt;
  &lt;/a&gt;
  Productive
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Flutter has rich-set of in-built function that will make your development faster and sweeter.&lt;/li&gt;
&lt;li&gt;It has a rich set of widgets that will make your life easier and your development faster. Just try it once, youâ€™ll love the crazy power that flutter gives you right in the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#high-performance"&gt;
  &lt;/a&gt;
  High Performance
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For rendering widgets, Flutter uses its own high-performance 2D rendering engine named Skia.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the help of Skia, flutter is able to provide performance over 60fps. So your animations look smoother, and your UI behaves naturally faster.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;So I hope you get the answer to your WHY FLUTTER?? But still If you have any questions please feel free to ask me. And If I misses something please tell me that, Iâ€™ll love to learn from you. And believe me learning flutter will be one of the best choices you ever make.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>flutter</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
