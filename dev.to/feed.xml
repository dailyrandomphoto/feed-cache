<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What is Cross-browser Testing</title>
      <author>Andrew Malrowe</author>
      <pubDate>Mon, 26 Jul 2021 12:46:47 +0000</pubDate>
      <link>https://dev.to/andrewmalrowe/what-is-cross-browser-testing-1bmi</link>
      <guid>https://dev.to/andrewmalrowe/what-is-cross-browser-testing-1bmi</guid>
      <description>&lt;p&gt;This article is a guide to Cross-browser testing: definition, why it is important, when to start cross-browser-testing, who should do cross-browser testing, and what are the main issues found while doing cross-browser tests.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-crossbrowser-testing"&gt;
  &lt;/a&gt;
  What is Cross-browser Testing
&lt;/h2&gt;

&lt;p&gt;Cross-browser testing is a type of non-functional software testing where web applications are checked for support across different browsers and devices. Cross-browser testing provides an objective, independent view of the status of the web application.&lt;/p&gt;

&lt;p&gt;Cross-browser testing allows your business to appreciate and understand the risks of releasing a web application or implementing new feature(s).&lt;/p&gt;

&lt;p&gt;Test techniques include the process of executing a web application with the intent of finding failures in different browsers and devices and verifying that the website is fit for use in all of them. In other words, Cross-browser testing is verification that web application behaves in various web browsers and devices identically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zR3hVSIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1j47ah37b8ipmojw0fa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zR3hVSIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1j47ah37b8ipmojw0fa.jpg" alt="iPhones in Blisk"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Need software to test on mobile, tablet, laptop, and desktop? With Blisk, you can develop and test across multiple devices simultaneously. &lt;a href="https://blisk.io"&gt;USE BLISK FOR TESTING&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-crossbrowser-testing-is-so-important"&gt;
  &lt;/a&gt;
  Why Cross-browser Testing is So Important
&lt;/h2&gt;

&lt;p&gt;As of July 2021, more than 50% of the browser market is split between 226 web browsers of different vendors and versions. The rest (approximately 50% of the browser market) is also divided between more than 100 versions of Chrome for Android and Safari for iOS.&lt;/p&gt;

&lt;p&gt;Sounds awful, doesn't it? There are hundreds of different web browsers that any modern website should support. Otherwise, the business will not be competitive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;: as of July 2021, any modern web application must support at least 350+ different web browsers. See the visualized data on a Pie chart below. Click the image to view it in maximum size.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bkn_xDhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4g6i0ps4jyzyyfg8k68e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bkn_xDhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4g6i0ps4jyzyyfg8k68e.png" alt="Browser market share in June 2021"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-you-should-start-crossbrowser-testing"&gt;
  &lt;/a&gt;
  When You Should Start Cross-browser Testing
&lt;/h2&gt;

&lt;p&gt;There is one simple answer: you should start performing cross-browser tests as soon as possible. The earlier - the better. The modern approach to web development is that testing has become a part of the web development process. Cross-browser testing is now an integral part of web development and is performed simultaneously with creating portions of code.&lt;/p&gt;

&lt;p&gt;Here are the main pros to develop and test simultaneously:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will start detecting issues (bugs) at the early stage of development.&lt;/li&gt;
&lt;li&gt;You will focus on the exact functionality that you currently work on.&lt;/li&gt;
&lt;li&gt;You will not need to check tons of code in order to recall your previous tasks.&lt;/li&gt;
&lt;li&gt;You will deliver high-quality products making your customers happy and grateful.&lt;/li&gt;
&lt;li&gt;You will make more revenue as you will deliver high-quality products faster.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;: you should start performing the cross-browser test at the early development stage to deliver high-quality web applications faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-should-do-crossbrowser-testing"&gt;
  &lt;/a&gt;
  Who Should Do Cross-browser Testing
&lt;/h2&gt;

&lt;p&gt;In the early 2000s cross-browser testing was performed by dedicated persons - QA engineers. Later, with the widespread adoption of responsive design, developers began to engage in cross-browser testing as well.&lt;/p&gt;

&lt;p&gt;Today, everyone involved in the web development process should be responsible for cross-browser testing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Web designers&lt;/strong&gt;: should create web design stuff keeping in mind the importance of dedicated user experience on mobile devices.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Web developers&lt;/strong&gt;: should implement features that should be supported in a variety of browsers and different devices (desktop, tablet, mobile).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;QA engineers&lt;/strong&gt;: should check web applications across the stack of different browsers ensuring that user interface and functionalities work on different devices as expected.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SEO specialists&lt;/strong&gt;: should check the performance of search engine optimization on both: desktop and mobile.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Marketers&lt;/strong&gt;: should test the promotion materials, landing pages, and other marketing stuff on both: desktop and mobile.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-do-crossbrowser-testing"&gt;
  &lt;/a&gt;
  How to Do Cross-browser Testing
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Define your testing strategy&lt;/strong&gt;&lt;br&gt;
Create a list of key features and main functionalities that are critical for your project. List the requirements. Create documentation for the testing process. Schedule the testing process. Determine the criteria for successful completion testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Determine test scenarios and test cases&lt;/strong&gt;&lt;br&gt;
Test scenario is a description of a problem that a user may encounter while using a program. Test cases describe what needs to be tested without detailing the steps or data to be used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execute the tests&lt;/strong&gt;&lt;br&gt;
Use different browsers and devices to test the features and functionalities that were defined with the testing strategy. Pass the test scripts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Document the results&lt;/strong&gt;&lt;br&gt;
Document the result of each test and summarize all results. Depending on the coverage requirements and the severity of the issues found, decide whether the feature passed the test or not, whether it is ready for delivery to customers or not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-to-focus-on-when-crossbrowser-testing"&gt;
  &lt;/a&gt;
  What to Focus On When Cross-browser Testing
&lt;/h2&gt;

&lt;p&gt;Cross-browser testing regularly reveals several "top" issues. You can find the list of the most common cross-browser issues below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Html or CSS do not pass the validation.&lt;/li&gt;
&lt;li&gt;SSL certificates do not work correctly.&lt;/li&gt;
&lt;li&gt;Elements on the web page are not aligned or not spaced equally.&lt;/li&gt;
&lt;li&gt;Page layout does not work as expected on different resolutions.&lt;/li&gt;
&lt;li&gt;Styles and animations do not work identically on different devices.&lt;/li&gt;
&lt;li&gt;Upload or download functionalities fail.&lt;/li&gt;
&lt;li&gt;Navigation does not work as expected.&lt;/li&gt;
&lt;li&gt;Videos may be not supported.&lt;/li&gt;
&lt;li&gt;Zoom in or out usually breaks the layout.&lt;/li&gt;
&lt;li&gt;Drop-downs do not work properly, and dates display incorrect data.&lt;/li&gt;
&lt;li&gt;Horizontal scroll appears in the most unexpected places (e.g. modals).&lt;/li&gt;
&lt;li&gt;Grids and tables may break the layout.&lt;/li&gt;
&lt;li&gt;Session and cookies can make your web application useless.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Today, cross-browser testing is one of the key stages of web application development. Without these tests, your web applications will be uncompetitive, you will regularly lose customers and your website will not be able to be used by a significant number of potential users.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Need software to test on mobile, tablet, laptop, and desktop? With Blisk, you can develop and test across multiple devices simultaneously. &lt;a href="https://blisk.io"&gt;USE BLISK FOR TESTING&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top web development trends 2021</title>
      <author>lebedevainna</author>
      <pubDate>Mon, 26 Jul 2021 12:45:20 +0000</pubDate>
      <link>https://dev.to/lebedevainna/top-web-development-trends-2021-c9o</link>
      <guid>https://dev.to/lebedevainna/top-web-development-trends-2021-c9o</guid>
      <description>&lt;p&gt;In our fast changing world we need to keep abreast of current trends to stay successful in business. This concerns &lt;a href="https://greenice.net/custom-application-development-for-business/"&gt;web development&lt;/a&gt; as well. You cannot rely solely on what was popular back in the 2010s and expect any kind of growth. So here are some of the most important trends to follow in 2021.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobile-version"&gt;
  &lt;/a&gt;
  Mobile Version
&lt;/h2&gt;

&lt;p&gt;Let's put it clear, adaptability is a must. Today many businesses know that their websites can barely survive without a mobile version. Huge amount of customers use their phones to visit your website. So make it easy to view via a small screen.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#voice-search"&gt;
  &lt;/a&gt;
  Voice Search
&lt;/h2&gt;

&lt;p&gt;Voice search is rapidly gaining popularity. Among the growth drivers is the development of technology in smartphones. Almost all modern models are equipped with a voice search option. More and more people communicate with devices by voice, and with the help of developing machine learning technologies, artificial intelligence recognizes more and more complex queries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#artificial-intelligence"&gt;
  &lt;/a&gt;
  Artificial Intelligence
&lt;/h2&gt;

&lt;p&gt;Speaking about AI, by now, it is becoming clear that the use of &lt;a href="https://greenice.net/using-machine-learning-in-the-e-commerce-industry-benefits-use-cases-greenice/"&gt;artificial intelligence&lt;/a&gt; is not a hype or a temporary trend, but a full-fledged direction. From year to year it helps to solve more and more complex problems in various areas of business. It is not a sci-fi horror scenario anymore but a real chance to manage your work. Both repetitive tasks and thorough analysis are actually feasible for machines possessing self-learning mechanisms.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chatbots"&gt;
  &lt;/a&gt;
  Chat-bots
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://greenice.net/how-to-build-a-chatbot-from-scratch-for-your-business/"&gt;Chat-bots&lt;/a&gt; are another automation idea getting more popular in many fields. This technology allows to simplify the communication process and even solve some typical problems clients may face. It increases effectiveness, especially if you combine this tool with the function of acquiring in messenger. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pwa-amp"&gt;
  &lt;/a&gt;
  PWA + AMP
&lt;/h2&gt;

&lt;p&gt;To improve the speed use PWA (&lt;a href="https://greenice.net/how-to-build-a-chatbot-from-scratch-for-your-business/"&gt;Progressive Web Applications&lt;/a&gt;). Its autonomy and non-mandatory connection to the Internet makes them an awesome alternative to the mobile application as they have similar functionality. Today, device memory is a very important indicator for everyday life. PWA help you save space on your device because they do not need to be installed. At the same time AMP (Accelerated Web Applications) are perfect for static content displaying essential information and saving loading time by this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#single-page-applications"&gt;
  &lt;/a&gt;
  Single Page Applications
&lt;/h2&gt;

&lt;p&gt;SPA is one of the trends of recent years, which helps to eliminate the need for constant communication with the server. They provide the best performance and the highest level of data protection. All you need is located on one page which makes the access ridiculously simple.&lt;/p&gt;

&lt;p&gt;Well, sometimes it can be very difficult to follow all trends as they change quickly enough. Though, most of the current trends have been existing for a while now. So why not try them? It may turn out to be a solution for your website optimization. Just keep in mind that despite changing approaches, technologies and ideas, the main goal of web development is to provide a quality user experience. It is this trend that will remain unchanged forever.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webdevtrends</category>
      <category>ai</category>
      <category>chatbots</category>
    </item>
    <item>
      <title>Most Common AWS Services for Cloud Security Detection</title>
      <author>Adit Modi</author>
      <pubDate>Mon, 26 Jul 2021 12:07:52 +0000</pubDate>
      <link>https://dev.to/aws-builders/most-common-aws-services-for-cloud-security-detection-2e1m</link>
      <guid>https://dev.to/aws-builders/most-common-aws-services-for-cloud-security-detection-2e1m</guid>
      <description>&lt;p&gt;Data breaches and exposures in AWS have become quite common. Most are typically caused by user misconfigurations than inherent cloud platform flaws which means securing AWS infrastructure is a critical requirement that every organization should undertake. Luckily, AWS provides a host of security services that can fulfill the requirements of most organizations.&lt;/p&gt;

&lt;p&gt;In this blog post, we will discuss some of the most important AWS security services that protect your data, accounts, and workloads from unauthorized access. These include Amazon GuardDuty, Amazon Macie, AWS SecurityHub, Amazon Inspector, AWS TrustedAdvisor, and AWS Config.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My Background: Cloud Engineer | AWS Community Builder | AWS Educate Cloud Ambassador | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLYljS1P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve4g5mgl750dcqmop0p6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLYljS1P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ve4g5mgl750dcqmop0p6.png" alt="Introduction to Developer Tools with AWS (7)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#perform-log-analysis-with-amazon-guardduty"&gt;
  &lt;/a&gt;
  Perform Log Analysis with Amazon GuardDuty
&lt;/h1&gt;

&lt;p&gt;Amazon GuardDuty helps you analyze and process data from different data sources such as CloudTrail event logs, VPC Flow Logs, and DNS Logs. GuardDuty uses sophisticated machine learning, anomaly detection, and integrated threat intelligence to identify and prioritize potential threats. Additionally, GuardDuty monitors your AWS account for signs of compromised access such as unusual API calls or deployments in a region not used before.&lt;/p&gt;

&lt;p&gt;GuardDuty extracts the relevant fields from logs to help you profile and identify anomalies. You can review these findings through your AWS management console, integrate them into event management or workflow systems, or trigger AWS Lambda for automated remediation or prevention. Here is how GuardDuty displays its findings:&lt;/p&gt;

&lt;p&gt;GuardDuty findings can be aggregated into a single account (controlled by your security team) by issuing invites to all of your member accounts. This approach gives higher visibility into all accounts owned by an organization. This walkthrough demonstrates how to set up this configuration.&lt;/p&gt;

&lt;p&gt;GuardDuty findings can be delivered either to an S3 Bucket or CloudWatch Events. Using AWS Lambda Functions, teams can then automate the analysis and notification of any findings from the GuardDuty service.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can access GuardDuty either via GuardDuty Console, AWS SDKs, or AWS CLI.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#classify-and-protect-sensitive-data-with-amazon-macie"&gt;
  &lt;/a&gt;
  Classify and Protect Sensitive Data with Amazon Macie
&lt;/h1&gt;

&lt;p&gt;Amazon Macie uses machine learning and user behavior analytics to classify and protect your sensitive data stored in Amazon S3, including PII, PHI, regulatory documents, API keys, and secret keys. It provides dashboards and alerts on what is found and how it is being protected. When alerts are generated, you can use Amazon Macie for incident response using Amazon CloudWatch Events to swiftly take action to safeguard your data. You can also create automated policies to protect your data when suspicious activity is detected.&lt;/p&gt;

&lt;p&gt;Amazon Macie works by accessing and identifying a customer’s data in their Amazon S3 bucket. Then, it streams the object contents into memory for analysis. For complex file formats that require deeper analysis, Macie downloads the full copy of the object, but only keeps it till the time required for analysis. Post analysis, Macie deletes the stored content and only retains the metadata required for future analysis.&lt;/p&gt;

&lt;p&gt;You can work with Amazon Macie by logging in to the Macie console, running the provided CloudFormation templates to configure the necessary IAM roles and policies in your account, and selecting which S3 buckets to protect.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#stay-uptodate-with-amazon-inspector"&gt;
  &lt;/a&gt;
  Stay Up-To-Date with Amazon Inspector
&lt;/h1&gt;

&lt;p&gt;Amazon Inspector allows you to test and address publicly known software vulnerabilities on EC2 instances in a timely manner, removing them as a potential entry point for unauthorized users. You can basically automate security assessments throughout your development and deployment pipeline or against static production systems.&lt;/p&gt;

&lt;p&gt;Inspector offers a pre-defined rules package (host assessment and/or the network reachability) that check for unintended network accessibility and vulnerabilities of your Amazon EC2 instances. However, you cannot define your own rules for assessment templates. Amazon Inspector can be fully automated through an API and uses an optional agent. The agent monitors the behavior of the EC2 instances, including network, file system, and process activity. The service generates two types of reports for your assessment- a findings report and a full report.&lt;/p&gt;

&lt;p&gt;You can work with the Amazon Inspector service using either the Amazon Inspector Console or AWS SDKs. Inspector integrates with Amazon SNS that notifies for events such as monitoring milestones, failures, or expiration of exceptions. You can also integrate Inspector with AWS CloudTrail for logging calls.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#get-a-single-unified-view-with-aws-securityhub"&gt;
  &lt;/a&gt;
  Get a Single Unified View with AWS SecurityHub
&lt;/h1&gt;

&lt;p&gt;AWS SecurityHub offers a unified view of the severity and sensitivity of findings across the other AWS security services you’re using. These include but are not limited to Amazon GuardDuty, Inspector, Macie, AWS Firewall Manager, and IAM Access Analyzer.&lt;/p&gt;

&lt;p&gt;This service takes security findings and normalizes them into Amazon Security Findings Format (or ASFF). After normalizing, it sends them all back out through Amazon CloudWatch events to many AWS partners that are capable of consuming them. With the ASFF format, you can, for instance, write a Splunk Phantom runbook, a Demisto runbook, a Lambda function, send it to Rapid7, or cut a ticket in Jira.&lt;/p&gt;

&lt;p&gt;SecurityHub also lets you create insights into Security Hub. Insights are a collection of findings that are grouped together to identify common security issues that may require remediation action. The following screenshot shows how SecurityHub brings various AWS security services under a single hood:&lt;/p&gt;

&lt;p&gt;Security Hub is accessible through the Security Hub console when you sign in to the AWS Management Console. You can also use the Security Hub API, which lets you issue HTTPS requests directly to the service. As of June 2019, AWS Security Hub is generally available.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#follow-best-practices-with-aws-trustedadvisor"&gt;
  &lt;/a&gt;
  Follow Best Practices with AWS TrustedAdvisor
&lt;/h1&gt;

&lt;p&gt;TrustedAdvisor is a real-time guidance solution that monitors your AWS infrastructure and compares it to AWS best practices such as identifying security gaps, fault tolerance, and service limits. Post this comparison, it provides recommendations and action links.&lt;/p&gt;

&lt;p&gt;The Trusted Advisor notification feature notifies you about your AWS resource deployment. You can track recent changes or check status on the console dashboard. You can also use AWS Identity and Access Management (IAM) to control access to specific checks or check categories. You can also create alerts and automate actions with Amazon CloudWatch. The following screenshot shows how TrustedAdvisor details AWS best practices recommended for your AWS infrastructure:&lt;/p&gt;

&lt;p&gt;Trusted Advisor is available in the AWS Management Console. All AWS users have access to the data for the seven core checks. Users with business or enterprise-level support can access all checks.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#know-your-configurations-with-aws-config"&gt;
  &lt;/a&gt;
  Know Your Configurations with AWS Config
&lt;/h1&gt;

&lt;p&gt;AWS Config allows you to assess, audit, and evaluate the configurations of your AWS resources. It provides you with an AWS resource inventory, configuration history, and configuration change. Config records details of changes to your AWS resources to provide you with a configuration history. It also records software configuration changes within your Amazon EC2 instances and servers running on-premises and those provided by other cloud providers.&lt;/p&gt;

&lt;p&gt;Rules in Config are configureable and customizable so you can either use pre-built rules for evaluating provisioning and configuring your AWS resources or you can customize pre-built rules to evaluate your AWS resource configurations. You can also create your own custom rules in AWS Lambda that define your internal best practices and guidelines for resource configurations.&lt;/p&gt;

&lt;p&gt;AWS Config also provides Conformance packs where you can package a collection of AWS Config rules and remediation actions into a single entity and deploy it across an entire organization. With conformance packs, you can establish a common baseline for resource configuration policies and best practices across multiple accounts in your organization.&lt;/p&gt;

&lt;p&gt;AWS Config integrates with AWS CloudTrail, AWS Systems Manager, Amazon EC2 Dedicated Host, Application Load Balancers and AWS Organizations.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The overarching agenda of these security services is to help you automate manual security tasks so you can shift your focus to scaling and innovating your business. We recommend you to definitely incorporate these services (if not done already) to enable data locality, protection, and confidentiality in your AWS infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--66nQ0gD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rclef5y9j3oxyg3n9t4e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--66nQ0gD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rclef5y9j3oxyg3n9t4e.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand Most Common AWS Services for Cloud Security Detection, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;|&lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;.&lt;br&gt;
If you are interested in learning more about AWS Services then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>aws</category>
      <category>security</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
    <item>
      <title>JavaScript Cheatsheet for Beginners 🔥</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Mon, 26 Jul 2021 11:56:59 +0000</pubDate>
      <link>https://dev.to/unitybuddy/javascript-cheatsheet-for-beginners-3330</link>
      <guid>https://dev.to/unitybuddy/javascript-cheatsheet-for-beginners-3330</guid>
      <description>&lt;p&gt;Hello, buddies! JavaScript is the world's most popular programming language and it is the programming language of the Web. JavaScript is easy to learn even though some say it is Hard. I have mentioned earlier any programming language can be hard if you didn't give it a try😜!&lt;/p&gt;

&lt;p&gt;And about this, this is not a complete tutorial about JavaScript but we can get the basic knowledge about JavaScript and also this can be used as a reference list of JavaScript variables, strings, and other attributes. 🤟&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xWV7lDpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627259103367/96GNGCEqv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xWV7lDpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627259103367/96GNGCEqv.png" alt="STRINGS (4).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#including-javascript-in-an-html-page"&gt;
  &lt;/a&gt;
  Including JavaScript in an HTML Page
&lt;/h2&gt;

&lt;p&gt;To include JavaScript inside a page, you need to wrap it properly in &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags🎁:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;//JS code goes here&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this input, the browser can identify and execute the code properly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#call-an-external-javascript-file"&gt;
  &lt;/a&gt;
  Call an External JavaScript File
&lt;/h3&gt;

&lt;p&gt;You can also place JavaScript in its own file and name it inside your HTML. That way, you can keep different types of code separate from one another, making for better-organized files. If your code is in a file called &lt;code&gt;myscript.js&lt;/code&gt;, you would call it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;myscript.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qPBHmm_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258264423/KaikIIGDdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qPBHmm_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258264423/KaikIIGDdg.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Make sure you use comments only in complex situations. Anway, if you are using comments,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;//&lt;/code&gt; for single line comments and,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/*&lt;/code&gt; &lt;code&gt;*/&lt;/code&gt; for multi-line comments.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// My name is Mr Unity Buddy &lt;/span&gt;

&lt;span class="cm"&gt;/*My name
is
Mr Unity Buddy
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9HCiJ2SF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258295189/mUDthPh2l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9HCiJ2SF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258295189/mUDthPh2l.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
JavaScript syntax is the set of rules, how JavaScript programs are constructed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// How to create variables:&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// How to use variables:&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here are another few points to note,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript is Case Sensitive. &lt;code&gt;unitybuddy&lt;/code&gt; and &lt;code&gt;unityBuddy&lt;/code&gt;  are 2 different variables.&lt;/li&gt;
&lt;li&gt;You can't use hyphens(&lt;code&gt;-&lt;/code&gt;)in JavaScript.&lt;/li&gt;
&lt;li&gt;Every Js line should be ended with a semicolon &lt;code&gt;;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yA5Z34CU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258314999/nlq_2bWfi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yA5Z34CU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258314999/nlq_2bWfi.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Variables are stand-in values that you can use to perform operations. You should be familiar with them from math class.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#-raw-var-endraw-raw-const-endraw-raw-let-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;You have three different possibilities for declaring a variable in JavaScript, each with its own specialties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;var&lt;/code&gt;— The most common variable. It can be reassigned but only accessed within a function. Variables defined with &lt;code&gt;var&lt;/code&gt; move to the top when the code is executed.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;const&lt;/code&gt; — Can not be reassigned and not accessible before they appear within the code. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;let&lt;/code&gt; — Similar to &lt;code&gt;const&lt;/code&gt;, the let variable can be reassigned but not re-declared.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//Store value of 5&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Store value of 10&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.14159265359&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Store this value of 3.14159265359;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9iSUZ3yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258340618/Hv4tCh2Vy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9iSUZ3yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258340618/Hv4tCh2Vy.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
In programming, data types is an important concept. To be able to operate on variables, it is important to know something about the type. Without data types, a computer cannot safely solve this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Volvo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Does it make any sense to add "Volvo" to sixteen? Will it produce an error or will it produce a result?&lt;/p&gt;

&lt;p&gt;JavaScript will treat the example above as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;16&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Volvo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;When adding a number and a string, JavaScript will treat the number as a string.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mGQ-cA-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627219786897/X8pfOqg1s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mGQ-cA-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627219786897/X8pfOqg1s.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Learn more about Js Data types by @&lt;a href="https://dev.to@techstack"&gt;Bello&lt;/a&gt;'s &lt;a href="https://techstack.hashnode.dev/javascript-data-types"&gt;article&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#javascript-types-are-dynamic"&gt;
  &lt;/a&gt;
  JavaScript Types are Dynamic
&lt;/h3&gt;

&lt;p&gt;JavaScript has dynamic types. This means that the same variable can be used to hold different data types, just like below 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c1"&gt;// Now x is undefined&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c1"&gt;// Now x is a Number&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;// Now x is a String&lt;/span&gt;
&lt;span class="nx"&gt;____________________________________&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cat&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// Now x is a Cat 😹&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ikSVkYLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258371859/-62V8AXLd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ikSVkYLO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258371859/-62V8AXLd.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
A JavaScript function is defined with &lt;code&gt;function&lt;/code&gt; keyword, followed by a name, followed by parentheses&lt;code&gt;()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Function names can contain letters, digits, underscores, and dollar signs (same rules as variables).&lt;/p&gt;

&lt;p&gt;The parentheses may include parameter names separated by commas:&lt;br&gt;
(parameter1, parameter2, ...)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parameter1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parameter2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parameter3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code to &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Function parameters are listed inside the parentheses &lt;code&gt;()&lt;/code&gt; in the function definition.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Function arguments are the values received by the function when it is invoked.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inside the function, the arguments (the parameters) behave as local variables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The code to be executed, by the function, is placed inside curly brackets: &lt;code&gt;{}&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Sample Code&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getDaysBetweenTwoDates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;startDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;endDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;endDate&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;startDate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are only the basics of JavaScipt function so, you can read &lt;a href="https://faheemkhan97.hashnode.dev/function-in-javascript-a-complete-guide-for-beginners"&gt;Function in JavaScript: A complete guide for beginners&lt;/a&gt; by @&lt;a href="https://dev.to@FaheemKhancodes"&gt;Faheem Khan&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1D_1QvJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258948728/SPdP1ZUOD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1D_1QvJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258948728/SPdP1ZUOD.png" alt="STRINGS (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objects-properties-and-methods-in-reallife"&gt;
  &lt;/a&gt;
  Objects, Properties, and Methods in Real-life
&lt;/h2&gt;

&lt;p&gt;Concept of &lt;code&gt;objects&lt;/code&gt; might be somewhat hard so let's take a simple example. &lt;/p&gt;

&lt;p&gt;In real life, a flight is an object.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;properties&lt;/code&gt; of a flight are color and weight, and the &lt;code&gt;methods&lt;/code&gt; are pitch(up and down), roll etc.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kEZVd4Cf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627221203986/bS4m2V6SI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kEZVd4Cf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627221203986/bS4m2V6SI.png" alt="Games (1).png"&gt;&lt;/a&gt;&lt;br&gt;
All flights have the same properties, but the property values differ from flight to flight.&lt;/p&gt;

&lt;p&gt;All flight have the same methods, but the methods are performed at different times.&lt;/p&gt;

&lt;p&gt;This is the concept of an Object! It's super easy 🙌&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#objects-in-javascript"&gt;
  &lt;/a&gt;
  Objects in JavaScript
&lt;/h3&gt;

&lt;p&gt;We have already learned that JavaScript variables are containers for data values.&lt;/p&gt;

&lt;p&gt;This code assigns a &lt;em&gt;simple value&lt;/em&gt; (F12) to a variable named car:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;flight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;F12&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Objects are variables too. But objects can contain many values.&lt;/p&gt;

&lt;p&gt;This code assigns &lt;em&gt;many values&lt;/em&gt; (F12, 41 200, White) to a variable named &lt;code&gt;flight&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;F12&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;41 200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The values are written as name: value pairs (name and value separated by a colon).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is a common practice to declare objects with the &lt;code&gt;const&lt;/code&gt; keyword.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is is the basic concept of an Object in JavaScript. To learn more, you can refer &lt;a href="https://sjsouvik.hashnode.dev/js-objects-in-depth"&gt;JS Objects in depth&lt;/a&gt; by @&lt;a href="https://dev.to@sjsouvik"&gt;Souvik Jana&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXNxbrlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258411657/H2NDymIus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXNxbrlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258411657/H2NDymIus.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A string (or a text string) is a series of characters just like "Unity Buddy".&lt;/p&gt;

&lt;p&gt;Strings are written with quotes. You can use single or double quotes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Unity buddy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// or&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Unity Buddy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#string-length"&gt;
  &lt;/a&gt;
  String length
&lt;/h3&gt;

&lt;p&gt;To find a string's length, simply use &lt;code&gt;length&lt;/code&gt; property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// Will return 26&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are many JavaScript string methods, in [this article] @&lt;a href="https://dev.to@nialljoemaher"&gt;Niall Maher&lt;/a&gt; has written 26 built-in string methods.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aJYM-Y-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627259033207/eX5Gwu2u2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJYM-Y-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627259033207/eX5Gwu2u2.png" alt="booleanspng"&gt;&lt;/a&gt;&lt;br&gt;
Very often, in programming, you will need a data type that can only have one of two values, like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;YES&lt;/code&gt; / &lt;code&gt;NO&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ON&lt;/code&gt; / &lt;code&gt;OFF&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;TRUE&lt;/code&gt; / &lt;code&gt;FALSE&lt;/code&gt;
For this, JavaScript has a Boolean data type. It can only take the values true or false.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#-raw-boolean-endraw-function"&gt;
  &lt;/a&gt;
  &lt;code&gt;Boolean()&lt;/code&gt; Function
&lt;/h3&gt;

&lt;p&gt;You can use the &lt;code&gt;Boolean()&lt;/code&gt; function to find out if an expression (or a variable) is true:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="c1"&gt;// returns true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Very easier,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c1"&gt;// also returns true&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;                &lt;span class="c1"&gt;// also returns true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F5JbUXGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258448283/EKtp7_8tD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F5JbUXGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258448283/EKtp7_8tD.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
JavaScript arrays are used to store multiple values in a single variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;authors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Victoria&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Chris&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Catalin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Simply, An array is a special variable, which can hold more than one value at a time.&lt;/p&gt;

&lt;p&gt;If you have a list of items (a list of authors names, for example), storing some authors in single variables could look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;author1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Didi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;author2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Uncle Bigaby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;author3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Favourite Jome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, what if you want to loop through the authors and find a specific one? And what if you had not 3 authors, but 100?&lt;/p&gt;

&lt;p&gt;The solution is an array!&lt;/p&gt;

&lt;p&gt;An array can hold many values under a single name, and you can access the values by referring to an index number.&lt;/p&gt;

&lt;p&gt;Using an array literal is the easiest way to create a JavaScript Array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Array syntax&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;array_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;item1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...];&lt;/span&gt;     
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As an example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;COD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Overwatch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Among Us&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Spaces and line breaks are not important. A declaration can span multiple lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;COD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Overwatch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Among Us&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#accessing-an-array-element"&gt;
  &lt;/a&gt;
  Accessing  an Array Element
&lt;/h3&gt;

&lt;p&gt;You access an array element by referring to the &lt;strong&gt;index&lt;/strong&gt; number:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;COD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Overwatch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Among Us&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;games&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;    &lt;span class="c1"&gt;// x = "COD"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note 📝: Array indexes start with 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;[0]&lt;/code&gt; is the first element. &lt;code&gt;[1]&lt;/code&gt; is the second element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-array-elements"&gt;
  &lt;/a&gt;
  Adding Array Elements
&lt;/h3&gt;

&lt;p&gt;To add a new element, we should give a &lt;code&gt;push&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The easiest way to add a new element to an array is using the &lt;code&gt;push()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;games&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;COD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Overwatch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cyberpunk&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hill Climb Racing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// Adds a new element (Hill Climb Racing) to fruits&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#changing-an-array-element"&gt;
  &lt;/a&gt;
  Changing an Array Element
&lt;/h3&gt;

&lt;p&gt;Following code changes the first element of &lt;code&gt;games&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cyberpunk&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Change COD into Cyberpunk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Super simple. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Array Elements Can Be Objects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript variables can be objects. Arrays are special kinds of objects.&lt;/p&gt;

&lt;p&gt;Because of this, you can have variables of different types in the same Array.&lt;/p&gt;

&lt;p&gt;You can have objects in an Array. You can have functions in an Array. You can have arrays in an Array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;myArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;myArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;myArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myGames&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See some commonly used JS array methods in &lt;a href="https://shreyazz.hashnode.dev/javascript-array-methods"&gt;this article&lt;/a&gt; by @&lt;a href="https://dev.to@shreyazz"&gt;Shreyas Pahune&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ThP59MIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627259009668/bwZ2JJNAX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ThP59MIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627259009668/bwZ2JJNAX.png" alt="STRINGS.png"&gt;&lt;/a&gt;&lt;br&gt;
Comparison and Logical operators are used to test for true or false.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#comparison-operators"&gt;
  &lt;/a&gt;
  Comparison Operators
&lt;/h3&gt;

&lt;p&gt;Comparison operators are used in logical statements to determine equality or difference between variables or values.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mejMOTqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627256135616/_47jxnuNI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mejMOTqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627256135616/_47jxnuNI.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Not eligible to vote&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#logical-operators"&gt;
  &lt;/a&gt;
  Logical Operators
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Re17bCFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627256199160/g-eagkkSG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Re17bCFj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627256199160/g-eagkkSG.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comparing-different-types"&gt;
  &lt;/a&gt;
  Comparing Different Types
&lt;/h3&gt;

&lt;p&gt;Comparing data of different types may give unexpected results.&lt;/p&gt;

&lt;p&gt;When comparing a string with a number, JavaScript will convert the string to a number when doing the comparison. An empty string converts to 0. A non-numeric string converts to NaN which is always false.&lt;/p&gt;

&lt;p&gt;Below table shows the result we get when comparing different data types&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMMrxxaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627256467765/Psz3w4XEN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMMrxxaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627256467765/Psz3w4XEN.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5IWw_piU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258483659/5kZsumDv0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5IWw_piU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258483659/5kZsumDv0.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Very often when we write code, we want to perform different actions for different decisions.&lt;/p&gt;

&lt;p&gt;We can use conditional statements in our code to do this.&lt;/p&gt;

&lt;p&gt;In JavaScript we have the following conditional statements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use

&lt;code&gt;if&lt;/code&gt;

to specify a block of code to be executed, if a specified condition is true
- Use

&lt;code&gt;else&lt;/code&gt;

to specify a block of code to be executed, if the same condition is false&lt;/li&gt;
&lt;li&gt;Use

&lt;code&gt;else if&lt;/code&gt;

to specify a new condition to test, if the first condition is false&lt;/li&gt;
&lt;li&gt;Use

&lt;code&gt;switch&lt;/code&gt;

to specify many alternative blocks of code to be executed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#-raw-if-endraw-statement"&gt;
  &lt;/a&gt;
  &lt;code&gt;if&lt;/code&gt; Statement
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  block of code to be executed if the condition is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the if statement to specify a block of JavaScript code to be executed if a condition is &lt;code&gt;true&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Too young to vote&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-else-endraw-statement"&gt;
  &lt;/a&gt;
  &lt;code&gt;else&lt;/code&gt; Statement
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  block of code to be executed if the condition is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  block of code to be executed if the condition is false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the &lt;code&gt;else&lt;/code&gt; statement to specify a block of code to be executed if the condition is false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Too young to vote&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Old enough to vote&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-else-if-endraw-statement"&gt;
  &lt;/a&gt;
  &lt;code&gt;else if&lt;/code&gt; Statement
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  block of code to be executed if condition1 is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  block of code to be executed if the condition1 is false and condition2 is true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  block of code to be executed if the condition1 is false and condition2 is false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the else if statement to specify a new condition if the first condition is false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;wish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Good morning&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;wish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Good day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;wish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Good evening&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VMFlcPSn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258901873/4Avaa1NFJF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VMFlcPSn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258901873/4Avaa1NFJF.png" alt="STRINGS (2).png"&gt;&lt;/a&gt;&lt;br&gt;
The &lt;code&gt;switch&lt;/code&gt; statement is used to perform different actions based on different conditions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// code block&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// code block&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// code block&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how it works:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The switch expression is evaluated once.&lt;/li&gt;
&lt;li&gt;The value of the expression is compared with the values of each case.&lt;/li&gt;
&lt;li&gt;If there is a match, the associated block of code is executed.&lt;/li&gt;
&lt;li&gt;If there is no match, the default code block is executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's see an example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// The getDay() method returns &lt;/span&gt;
&lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;weekday&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="nx"&gt;between&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, our result is going to be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;Sunday
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-raw-break-endraw-keyword"&gt;
  &lt;/a&gt;
  The &lt;code&gt;break&lt;/code&gt; Keyword
&lt;/h3&gt;

&lt;p&gt;When JavaScript reaches a break keyword, it breaks out of the switch block.&lt;/p&gt;

&lt;p&gt;This will stop the execution inside the switch block.&lt;/p&gt;

&lt;p&gt;It is not necessary to break the last case in a switch block. The block breaks (ends) there anyway.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;📝 If you omit the break statement, the next case will be executed even if the evaluation does not match the case.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-default-endraw-keyword"&gt;
  &lt;/a&gt;
  The &lt;code&gt;default&lt;/code&gt; Keyword
&lt;/h3&gt;

&lt;p&gt;The default keyword specifies the code to run if there is no case match:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getDay&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Today is Saturday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Today is Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Looking forward to the Weekend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;\\&lt;/span&gt; &lt;span class="nx"&gt;Result&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;looking forward to the weekend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#strict-comparison"&gt;
  &lt;/a&gt;
  Strict Comparison
&lt;/h3&gt;

&lt;p&gt;Switch cases use strict comparison (===).&lt;/p&gt;

&lt;p&gt;The values must be of the same type to match.&lt;/p&gt;

&lt;p&gt;A strict comparison can only be true if the operands are of the same type.&lt;/p&gt;

&lt;p&gt;In this example there will be no match for x:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;On&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;No value found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YuRnJWhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258585247/L9xVOFJJF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YuRnJWhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627258585247/L9xVOFJJF.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Last part! You are awesome 👏👏&lt;/p&gt;

&lt;p&gt;Loops are cool, if you want to run the same code over and over again, each time with a different value.&lt;/p&gt;

&lt;p&gt;Often this is the case when working with arrays:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;be&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of this, you can just use a loop&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-for-loop"&gt;
  &lt;/a&gt;
  The For Loop
&lt;/h3&gt;

&lt;p&gt;The for loop has the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;statement&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code block to be executed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Statement 1&lt;/em&gt; is executed (one time) before the execution of the code block.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Statement 2&lt;/em&gt; defines the condition for executing the code block.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Statement 3&lt;/em&gt; is executed (every time) after the code block has been executed.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The number is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;The number is 0
The number is 1
The number is 2
The number is 3
The number is 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-while-endraw-loops"&gt;
  &lt;/a&gt;
  &lt;code&gt;while&lt;/code&gt; Loops
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code block to be executed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The while loop loops through a block of code as long as a specified condition is true. It means the value is changing and while the condition is true, &lt;code&gt;while&lt;/code&gt; loops work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// While the variable is less than 10&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The number is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-do-while-loop"&gt;
  &lt;/a&gt;
  The Do While Loop
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// code block to be executed&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;do...while&lt;/code&gt; loop is a variant of the while loop. This loop will execute the code block once, before checking if the condition is true, then it will repeat the loop as long as the condition is true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The number is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cool, it is super easy and clear. If you want learn more about Js loops,  @&lt;a href="https://dev.to@techstack"&gt;Bello&lt;/a&gt; has a wonderful article - &lt;a href="https://techstack.hashnode.dev/javascript-loops"&gt;JavaScript Loops&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JavaScript has number of librararies. React and Node.js are popular. If you want to learn more about them, read these articles &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://lo-victoria.com/react-cheat-sheet-for-beginners"&gt;React Cheat Sheet for Beginners&lt;/a&gt; by @&lt;a href="https://dev.to@victoria"&gt;Victoria Lo&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://giuliachiola.hashnode.dev/nodejs-cheatsheet"&gt;Node.js cheatsheet&lt;/a&gt; by @&lt;a href="https://dev.to@giuliachiola"&gt;Giulia Chiola&lt;/a&gt;
_________________________________________________________________________________&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Woah, that's it! 💙💙 This is not a full tutorial but I hope beginner buddies can get a basic concept about functions, loops, operators etc. here. Thanks for reading this long article and Happy Coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>cheatsheet</category>
      <category>programming</category>
    </item>
    <item>
      <title>Front-end Vs Back-end</title>
      <author>Kouluru Nanda Kishore Reddy</author>
      <pubDate>Mon, 26 Jul 2021 11:19:58 +0000</pubDate>
      <link>https://dev.to/koulurunandakishorereddy/front-end-vs-back-end-14b9</link>
      <guid>https://dev.to/koulurunandakishorereddy/front-end-vs-back-end-14b9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#frontend-developer"&gt;
  &lt;/a&gt;
  FRONT-END DEVELOPER
&lt;/h1&gt;

&lt;h2&gt;What is Frontend ?&lt;/h2&gt;

&lt;p&gt;Front-end web development, also known as client-side development is the practice of producing HTML, CSS and JavaScript for a website or Web Application so that a user can see and interact with them directly. The challenge associated with front end development is that the tools and techniques used to create the front end of a website change constantly and so the developer needs to constantly be aware of how the field is developing.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Salary - &lt;/b&gt; $100,000&lt;/p&gt;

&lt;h2&gt;Languages :&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D-EbvUh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625020551472/aLqvRgsY7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D-EbvUh1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625020551472/aLqvRgsY7.jpeg" alt="react-banner-mobile.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;HTML :&lt;/b&gt;HTML stands for Hypertext Markup Language. It is used to design the front-end portion of web pages using a markup language. HTML is the combination of Hypertext and Markup language. Hypertext defines the link between the web pages. The markup language is used to define the text documentation within the tag which defines the structure of web pages.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;CSS :&lt;/b&gt; Cascading Style Sheets fondly referred to as CSS is a simply designed language intended to simplify the process of making web pages presentable. CSS allows you to apply styles to web pages. More importantly, CSS enables you to do this independent of the HTML that makes up each web page.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;JavaScript :&lt;/b&gt; JavaScript is a famous scripting language used to create magic on the sites to make the site interactive for the user. It is used to enhancing the functionality of a website to running cool games and web-based software.&lt;/p&gt; 

&lt;p&gt;&lt;b&gt;React.js : &lt;/b&gt;React is a declarative, efficient, and flexible JavaScript library for building user interfaces. ReactJS is an open-source, component-based front-end library responsible only for the view layer of the application. It is maintained by Facebook. 
Bootstrap: Bootstrap is a free and open-source tool collection for creating responsive websites and web applications. It is the most popular HTML, CSS, and JavaScript framework for developing responsive, mobile-first websites.&lt;/p&gt;

&lt;h2&gt;Career&lt;/h2&gt;

&lt;p&gt;1. Great for beginners&lt;/p&gt;

&lt;p&gt;2. Not a lot of experience required&lt;/p&gt;

&lt;p&gt;3. Tons of job opportunity&lt;/p&gt;

&lt;h2&gt;Soft Skills&lt;/h2&gt;

&lt;p&gt;- Creativity&lt;/p&gt;

&lt;p&gt;- Design&lt;/p&gt;

&lt;p&gt;- Organization&lt;/p&gt;

&lt;h2&gt;The role of a frontend developer :&lt;/h2&gt;

&lt;p&gt;Everything a user sees, clicks, or uses to input or retrieve information on a website is the work of a front-end developer. Typically the roles of frontend developer are :&lt;/p&gt;

&lt;p&gt;- Prioritizing user experience&lt;/p&gt;

&lt;p&gt;- Bringing a concept to life with HTML, CSS, and JavaScript&lt;/p&gt;

&lt;p&gt;- Monitor app performance, watch for traffic drops related to site usability problems and rectify any issues&lt;/p&gt;

&lt;p&gt;- Production and maintenance of websites and web application user interfaces&lt;/p&gt;

&lt;p&gt;- Design new features, or maintain old features&lt;/p&gt;

&lt;p&gt;- Collaborate with back-end developers and web designers to improve usability&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XjwFWSeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625021440790/adxk-5Ulp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XjwFWSeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625021440790/adxk-5Ulp.png" alt="hire-frontend-developers.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#backend-developer"&gt;
  &lt;/a&gt;
  BACK-END DEVELOPER
&lt;/h1&gt;

&lt;h2&gt;What is Backend ?&lt;/h2&gt;

&lt;p&gt;Backend is the server-side of the website. It stores and arranges data, and also makes sure everything on the client-side of the website works fine. It is the part of the website that you cannot see and interact with. It is the portion of software that does not come in direct contact with the users. The parts and characteristics developed by backend designers are indirectly accessed by users through a front-end application. Activities, like writing APIs, creating libraries, and working with system components without user interfaces or even systems of scientific programming, are also included in the backend. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Salary - &lt;/b&gt; $150,000&lt;/p&gt;

&lt;h2&gt;Languages :&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jd49UgOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625035817775/_m2zAMSra.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jd49UgOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625035817775/_m2zAMSra.png" alt="png-transparent-web-development-c-java-python-technology-electronics-text-computer.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Python :&lt;/b&gt;Python is a programming language that lets you work quickly and integrate systems more efficiently.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Node.js :&lt;/b&gt;Node.js is an open-source and cross-platform runtime environment for executing JavaScript code outside a browser. You need to remember that NodeJS is not a framework, and it’s not a programming language. Most people are confused and understand it’s a framework or a programming language. We often use Node.js for building back-end services like APIs like Web App or Mobile App. It’s used in production by large companies such as Paypal, Uber, Netflix, Wallmart, and so on.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;PHP :&lt;/b&gt;PHP is a server-side scripting language designed specifically for web development. Since PHP code executed on the server-side, so it is called a server-side scripting language.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;C++ :&lt;/b&gt;It is a general-purpose programming language and widely used nowadays for competitive programming. It is also used as a backend language.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Java :&lt;/b&gt;Java is one of the most popular and widely used programming languages and platforms. It is highly scalable. Java components are easily available.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;JavaScript :&lt;/b&gt;JavaScript can be used as both (front end and back end) programming languages.&lt;/p&gt;

&lt;h2&gt;Career&lt;/h2&gt;

&lt;p&gt;1. Great after learning Frontend&lt;/p&gt;

&lt;p&gt;2. Requires a lot of experience&lt;/p&gt;

&lt;p&gt;3. Barely any entry level of jobs&lt;/p&gt;

&lt;h2&gt;Soft Skills&lt;/h2&gt;

&lt;p&gt;- Logic&lt;/p&gt;

&lt;p&gt;- Analytics&lt;/p&gt;

&lt;p&gt;- Problem Solving&lt;/p&gt;

&lt;h2&gt;Back-end Developer Responsibilities :&lt;/h2&gt;

&lt;p&gt;- Compile and analyze data, processes, and codes to troubleshoot problems and identify areas for improvement.&lt;/p&gt;

&lt;p&gt;- Collaborating with the front-end developers and other team members to establish objectives and design more functional, cohesive codes to enhance the user experience.&lt;/p&gt;

&lt;p&gt;- Developing ideas for new programs, products, or features by monitoring industry developments and trends.&lt;/p&gt;

&lt;p&gt;- Recording data and reporting it to proper parties, such as clients or leadership.&lt;/p&gt;

&lt;p&gt;- Participating in continuing education and training to remain current on best practices, learn new programming languages, and better assist other team members.&lt;/p&gt;

&lt;p&gt;- Taking lead on projects, as needed.&lt;/p&gt;

&lt;h2&gt; Difference between Frontend and Backend :&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---5VN6iL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625036998575/g0VY2YtQa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---5VN6iL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625036998575/g0VY2YtQa.png" alt="Front-End-and-Back-End.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; Frontend and backend development are quite different from each other, but still, they are two aspects of the same situation. The frontend is what users see and interact with and the backend is how everything works. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The frontend is the part of the website users can see and interact with such as the graphical user interface (GUI) and the command line including the design, navigating menus, texts, images, videos, etc. Backend, on the contrary, is the part of the website users cannot see and interact with.&lt;/li&gt;
&lt;li&gt;The visual aspects of the website that can be seen and experienced by users are frontend. On the other hand, everything that happens in the background can be attributed to the backend.&lt;/li&gt;
&lt;li&gt;Languages used for the front end are HTML, CSS, JavaScript while those used for the backend include Java, Ruby, Python, .Net .
&lt;p&gt;&lt;b&gt;Which one you will learn comment down👇&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Thanks for reading this&lt;/p&gt;
&lt;p&gt;You can contact via mail id  "&lt;a href="mailto:nandakouluruemail@gmail.com"&gt;nandakouluruemail@gmail.com&lt;/a&gt;"&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why Your Organization Needs a Federated Graph Interface</title>
      <author>Shada </author>
      <pubDate>Mon, 26 Jul 2021 10:52:36 +0000</pubDate>
      <link>https://dev.to/strapi/why-your-organization-needs-a-federated-graph-interface-b45</link>
      <guid>https://dev.to/strapi/why-your-organization-needs-a-federated-graph-interface-b45</guid>
      <description>&lt;p&gt;If you are working in software development today, you probably know about the major shifts that microservice architectures have brought to our industry. &lt;a href="https://martinfowler.com/articles/microservices.html"&gt;Microservices&lt;/a&gt; (and the formerly popular Service Oriented Architectures) advocate splitting a software system into a series of small, encapsulated services, each with its own scope.&lt;/p&gt;

&lt;p&gt;The advantage here is that backend engineers can work on small pieces of the application without interfering with unrelated code. Individual services can also be deployed one at a time, making maintenance and upgrades easier to manage.&lt;/p&gt;

&lt;p&gt;The biggest challenges in implementing microservices are defining the scope of each service properly (in many microservices implementations you end up with a "micro-monolith") and integrating these isolated services when developers need data from multiple microservices at once.&lt;/p&gt;

&lt;p&gt;A Federated Graph Interface is one option for gluing services together in a scalable, easy to manage way. A Federated Graph Interface is like an API gateway designed to help developers query many APIs at once using a single GraphQL interface.&lt;/p&gt;

&lt;p&gt;In this article, you'll learn about &lt;a href="https://en.wikipedia.org/wiki/Federated_architecture"&gt;federated data architectures&lt;/a&gt; and the way they can be used to query data from decoupled services. I'll focus on &lt;a href="https://www.apollographql.com/docs/federation/"&gt;the Apollo Federation implementation&lt;/a&gt; that supports reading and mutating data stored across many instances. You'll see why this approach can help your team query and use data from microservices and query many GraphQL servers as if they were one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-a-federated-graph-interface"&gt;
  &lt;/a&gt;
  The Benefits of a Federated Graph Interface
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"UI developers love the simplicity of working with one conceptual API for a large domain. Back-end developers love the decoupling and resilience offered by the API layer...As we've grown the number of developers and increased our domain complexity, developing the API aggregation layer has become increasingly harder." - &lt;a href="https://netflixtechblog.com/how-netflix-scales-its-api-with-graphql-federation-part-1-ae3557c187e2"&gt;Tejas Shikhare, Senior Software Engineer at Netflix&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Separation_of_concerns"&gt;Strong separation of concerns&lt;/a&gt; is the first benefit of implementing a Federated Graph Interface. This concept from computer science advocates the specialization of components in software, such that each part of the system is concerned with a single problem. By decomposing large components into smaller ones, each can be designed and managed by different teams using the best tech stack for each job.&lt;/p&gt;

&lt;p&gt;The second advantage to Apollo Federation is its capability to reference entities from other subgraphs. This unifies your data catalog, allowing developers to compose new solutions with each subgraph defined in the integration layer. In this way, you can stack up several definitions from previously defined entities.&lt;/p&gt;

&lt;p&gt;Finally, using a Federated Graph Interface allows you to extend previously defined entities. This mirrors the concept of &lt;a href="https://stackify.com/oop-concept-inheritance/"&gt;inheritance in Object-Oriented Programming&lt;/a&gt;. In practice, it means that you can define a base "user" object and then extend it with data from other services in your microservice network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microservices-and-data-federation"&gt;
  &lt;/a&gt;
  Microservices and Data Federation
&lt;/h2&gt;

&lt;p&gt;Two of the three &lt;a href="https://principledgraphql.com/integrity"&gt;principles of integrity&lt;/a&gt; in a GraphQL implementation declare that you should create a single graph per business even if that graph is implemented by different teams.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"When teams create their own individual graphs without coordinating their work, it is all but inevitable that their graphs will begin to overlap, adding the same data to the graph in incompatible ways. At best, this is costly to rework; at worst, it creates chaos." - &lt;a href="https://principledgraphql.com/integrity"&gt;Principled GraphQL&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This fits nicely with the objectives of a microservices architectural style. Microservices dictate that you distribute the load of the system---or the effort to build the system---into small, independent teams working towards a common public interface at the end.&lt;/p&gt;

&lt;p&gt;Using a Federated Graph Interface with microservices offers several advantages then:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Through a single graph, you can query more entities with a single query&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Heterogeneous teams can share experience and skills&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A common data catalog can be built by composing services through the federation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some operational tasks can be centralized, for example, Access Control using tactics like Role-Based Schemas&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This pattern also avoids the problem of centralizing the development of the entire graph on a single team or technology as this would essentially create a monolith and introduce &lt;a href="https://www.thoughtworks.com/insights/blog/monoliths-are-bad-design-and-you-know-it"&gt;all the problems that come along with them&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql-vs-restbased-api-gateways"&gt;
  &lt;/a&gt;
  GraphQL vs. REST-based API Gateways
&lt;/h3&gt;

&lt;p&gt;GraphQL and microservices are a great fit since they share common philosophical roots, but also because they complement each other. While there are other ways to manage a central access point for all your microservices, GraphQL federation offers some significant improvements over traditional, REST-based API gateways.&lt;/p&gt;

&lt;p&gt;First, control of the response payload is given to the consumer. This makes the payload dynamic. REST APIs typically reveal the entire schema of a service without offering any control to consumers. GraphQL---and specially federated graphs---offer the possibility to query fragments of entities composed from others defined in different subgraphs.&lt;/p&gt;

&lt;p&gt;Second, GraphQL allows for the &lt;a href="https://medium.com/yld-blog/create-custom-graphql-types-999f009d3f46"&gt;definition of custom types&lt;/a&gt;. This type system lets you define each microservice with the types of data most appropriate to its business domain. In order to support the reference and extension features of a Federated Graph Interface, the types just need to become entities with key attributes.&lt;/p&gt;

&lt;p&gt;Finally, GraphQL allows for incremental adoption of microservices. You can use your Federated Graph Interface to promote a slice of your monolithic service in an incremental way without losing any functionality on the backend.&lt;/p&gt;

&lt;p&gt;This approach has allowed &lt;a href="https://medium.com/airbnb-engineering/how-airbnb-is-moving-10x-faster-at-scale-with-graphql-and-apollo-aa4ec92d69e2"&gt;companies like Airbnb&lt;/a&gt; to split off each entity defined in a monolith into its own subgraph as they migrate pieces of their application to new microservices. This makes it possible to migrate from a monolith to fully distributed microservices in a progressive way---one service at a time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-components-of-a-federated-graph-interface"&gt;
  &lt;/a&gt;
  The Components of a Federated Graph Interface
&lt;/h2&gt;

&lt;p&gt;Once you decide that a Federated Graph Interface is right for your application, you have to come up with an adoption approach. The first step is to add an abstraction layer on top of one or more existing backend services.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5MoZwGYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2zv2ciw0ln4h1.cloudfront.net/uploads/Ik2i_DMD_55d17878b5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5MoZwGYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2zv2ciw0ln4h1.cloudfront.net/uploads/Ik2i_DMD_55d17878b5.png" alt="Ik2iDMD.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apollo Federation acts as the gateway and is connected to a series of GraphQL federated-capable services. The gateway acts as an umbrella to centralize access to each GraphQL implementation or microservice. These services can be maintained in-house, or they could be external applications.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href="https://strapi.io/"&gt;Strapi&lt;/a&gt; is a headless Content Management System (CMS) which provides a GraphQL API that is federation-ready with &lt;a href="https://forum.strapi.io/t/is-it-possible-to-use-the-apollo-federation-specification/4334"&gt;a simple change in its configuration&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="nl"&gt;"endpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/graphql"&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nl"&gt;"federation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use the headless capabilities of Strapi to implement common data models like e-commerce, blogs, or knowledge bases. These use cases are perfect for GraphQL federation as you may use the different subgraphs to offer the complimentary services that interact in a loosely coupled way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-federated-graph-interface"&gt;
  &lt;/a&gt;
  How to Build a Federated Graph Interface
&lt;/h2&gt;

&lt;p&gt;If you want to start testing this kind of approach to composing elegant and scalable solutions, you can reuse some of the Strapi &lt;a href="https://strapi.io/starters"&gt;starter repositories available for free&lt;/a&gt;. These include several common use cases for GraphQL backends accessible through a federation-ready interface compatible with Apollo. The starters also include examples of frontend frameworks you can use them with, like Gatsby, Next.js, or Vue.&lt;/p&gt;

&lt;p&gt;For example, imagine that you wanted a graph in Strapi centered around a &lt;em&gt;User&lt;/em&gt; entity. In addition to typical user fields (name, email, ID, etc.), you might want to link users with some external content like their posts on a blog.&lt;/p&gt;

&lt;p&gt;If you designed this kind of relationship in a single GraphQL service, you might end with a something like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
type User {

  id: ID!

  , nickname: String!

  , name:  String

  , posts: [Post]

}

type Post {

  id: ID!

  , title: String!

  , tags: String

  , text: String

  , writer: User

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you see, both entities are coupled, but you can easily separate them by applying reference and extension of types. This will allow you to split the user into two separated subgraphs with independent implementations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
type User {

  id: ID!

  , nickname: String!

  , name :  String

}

-- External service definition

type Post {

  id: ID!

  , title: String!

  , tags: String

  , text: String

  , writer: User

}

extended type User {

  id: ID! @external

  , posts: [Post]

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, externalizing the &lt;em&gt;Post&lt;/em&gt; entity and extending the &lt;em&gt;User&lt;/em&gt; entity with a local type allows you to reference the original &lt;em&gt;User&lt;/em&gt; type defined before. This kind of flexibility lets you create complex data models from microservices that define atomic entities that resolve single concerns.&lt;/p&gt;

&lt;p&gt;If you need more examples or want actual code to get the idea about the implementation, &lt;a href="https://blog.logrocket.com/the-what-when-why-and-how-of-federated-graphql/"&gt;this article&lt;/a&gt; is a good starting point. It shows you how to compose a &lt;em&gt;User&lt;/em&gt; with &lt;em&gt;Account&lt;/em&gt; and &lt;em&gt;Reviews&lt;/em&gt; entities from different providers using a Federated Graph Interface.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Federated Graph Interfaces are a great fit for modern software architectures, and many large companies like &lt;a href="https://medium.com/walmartglobaltech/federated-graphql-walmart-bfc85c2553de"&gt;Walmart&lt;/a&gt; and &lt;a href="https://netflixtechblog.com/how-netflix-scales-its-api-with-graphql-federation-part-1-ae3557c187e2"&gt;Netflix&lt;/a&gt; are taking advantage of them to help scale up their microservices.&lt;/p&gt;

&lt;p&gt;Now, thanks to the availability of &lt;a href="https://strapi.io/"&gt;headless CMS like Strapi&lt;/a&gt; and ready-made gateways like &lt;a href="https://www.apollographql.com/docs/federation/gateway/"&gt;Apollo&lt;/a&gt;, it's relatively easy for even small companies to implement a Federated Graph Interface quickly. The flexibility and scalability this setup provides will help you save time while building more flexible, scalable software.&lt;/p&gt;

</description>
      <category>api</category>
      <category>apollo</category>
      <category>graphql</category>
      <category>strapi</category>
    </item>
    <item>
      <title>Learn web development 04 - All About HTML Forms and HTML Inputs.</title>
      <author>Modern Web</author>
      <pubDate>Mon, 26 Jul 2021 10:40:02 +0000</pubDate>
      <link>https://dev.to/kunaal438/learn-web-development-04-all-about-html-forms-and-html-inputs-d8h</link>
      <guid>https://dev.to/kunaal438/learn-web-development-04-all-about-html-forms-and-html-inputs-d8h</guid>
      <description>&lt;p&gt;Hello, Welcome. My name is kunaal. This is a part of learn web development series.&lt;/p&gt;

&lt;p&gt;In today's article, you'll learn about html forms and inputs, buttons in HTML. So, let's start.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#forms"&gt;
  &lt;/a&gt;
  Forms
&lt;/h1&gt;

&lt;p&gt;What is Form ? Well, we all know what is form, we have filled lot of forms in websites. Maybe you have filled some registration form or you have created your friend's gmail account. Forms are everywhere.&lt;/p&gt;

&lt;p&gt;So,let's talk how we can make form in HTML.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;/form&amp;gt;&lt;/code&gt; Form Tag - This is form tag used to make forms. But, this is like a container or wrapper for your input fields. But it's has some very important attributes that you should know.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;th&gt;Attributes&lt;/th&gt;
&lt;th&gt;Values&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;tr&gt;
&lt;td&gt;method&lt;/td&gt;
&lt;td&gt;get| post&lt;/td&gt;
&lt;td&gt;It's specify how to transfer data from site to the site specified in `action` attribute.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;action&lt;/td&gt;
&lt;td&gt;(path of HTML file or server)&lt;/td&gt;
&lt;td&gt;It's specify, where to redirect user after filling form&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#understand-raw-method-endraw-values-in-detail"&gt;
  &lt;/a&gt;
  Understand &lt;code&gt;method&lt;/code&gt; values in detail
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;tr&gt;
&lt;td&gt;get&lt;/td&gt;
&lt;td&gt;This append the form data in the URL (https://site.com?name=modern+web)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;post&lt;/td&gt;
&lt;td&gt;Sends the form data as HTTP post transaction. This is more secure way to transfer data than `get`&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We'll see &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;method&lt;/code&gt; example at the last of the post where we'll make google search engine. Isn't it excited.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#input-tag"&gt;
  &lt;/a&gt;
  Input Tag
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; Input tag. This tag is self closing, it does not require a closing tag. Input Tag is used to add fields in our form. Let's see them in detail.&lt;/p&gt;

&lt;p&gt;We have lot's of attributes and types for input. So let's understand them from table.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;th&gt;Atrribute&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;text, email, password, radio, checkbox, submit, range, date, color, file, reset, and more&lt;/td&gt;
&lt;td&gt;Use to specify what type of input it is.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;text. Example `name="first name"`&lt;/td&gt;
&lt;td&gt;It is used to specify name for the input, so we can identify data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;placeholder&lt;/td&gt;
&lt;td&gt;text. Example `placeholder="type your first name"`&lt;/td&gt;
&lt;td&gt;Specifies a short hint that describes the expected value of an  element&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;text. Example `value="john"`&lt;/td&gt;
&lt;td&gt;it is used to specify the default value for the input&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;---&lt;/td&gt;
&lt;td&gt;It specify the field must be filled before submitting form.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;And so on, we have lots of attributes for Input tag. But these used most commonly. If you want you can read about more attributes &lt;a href="https://www.w3schools.com/tags/tag_input.asp"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's see types of input in detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#text"&gt;
  &lt;/a&gt;
  Text
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;type&lt;/code&gt; attribute is used to specify input type.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"type your name"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;we are not using method and action attributes in above example because we don't have submit button.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ELmortVF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo22l12yoiybdefpbaiz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ELmortVF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo22l12yoiybdefpbaiz.PNG" alt="Capture-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Email type is same as text but email text check &lt;code&gt;@&lt;/code&gt; sign also.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#password"&gt;
  &lt;/a&gt;
  Password
&lt;/h3&gt;

&lt;p&gt;This is also similar to text, but in this type you'll be not able to see text instead you'll see bullets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9PKmqtbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udgsg5tdwacwecpu2gm1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9PKmqtbh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udgsg5tdwacwecpu2gm1.PNG" alt="Capture-2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#range"&gt;
  &lt;/a&gt;
  Range
&lt;/h3&gt;

&lt;p&gt;This is used to create range slider in forms.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"range"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"range"&lt;/span&gt; &lt;span class="na"&gt;min=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;max=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;step=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BbVvnwov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70nm1yga8eio7rb0zqbz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BbVvnwov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/70nm1yga8eio7rb0zqbz.PNG" alt="Capture-4"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;min&lt;/code&gt; is to define min value.&lt;code&gt;max&lt;/code&gt; is used to define maximum value. &lt;code&gt;step&lt;/code&gt; is used to specify the interval between legal numbers.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#radio"&gt;
  &lt;/a&gt;
  Radio
&lt;/h3&gt;

&lt;p&gt;This is to create radio button in the form. Like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"radio"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;red&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"radio"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;green&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"radio"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;blue&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"radio"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;yellow&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ptazS2Wk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfdhh8mbb1uvgociey93.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ptazS2Wk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfdhh8mbb1uvgociey93.PNG" alt="-4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can notice some extra tags in the above example. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;label&amp;gt;&amp;lt;/label&amp;gt;&lt;/code&gt; Label tag. It is used for input fields to add a label to them. In the above case we are adding label to our radio buttons.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;id&lt;/code&gt; attribute. &lt;code&gt;id&lt;/code&gt; is used to give unique ID to any element.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;for&lt;/code&gt; attribute. &lt;code&gt;for&lt;/code&gt; attribute is for label tag. It specifies for which input this label is. The value of this &lt;code&gt;for&lt;/code&gt; attribute should be same to the &lt;code&gt;id&lt;/code&gt; of the element.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#checkbox"&gt;
  &lt;/a&gt;
  Checkbox
&lt;/h3&gt;

&lt;p&gt;Checkbox is used to add tick box in the form. Like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;red&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;green&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;blue&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"yellow"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;yellow&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NMHk_T2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c49or3b6eaufzwdbg864.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NMHk_T2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c49or3b6eaufzwdbg864.PNG" alt="Capture-5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The difference between checkbox and radio is you can select multiple checkbox but you can select multiple radio buttons.&lt;/p&gt;

&lt;p&gt;Note:- In radio type and checkbox type all inputs have same &lt;code&gt;name&lt;/code&gt;. Same &lt;code&gt;name&lt;/code&gt; means it belongs to same category.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#date"&gt;
  &lt;/a&gt;
  Date
&lt;/h3&gt;

&lt;p&gt;This type is used to add calendar in the form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YpvQ6VDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysc4xccx60qpvaquur07.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YpvQ6VDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysc4xccx60qpvaquur07.PNG" alt="Capture-6"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#and-some-more"&gt;
  &lt;/a&gt;
  And some more
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- to add color field in the form  --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"color"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- to add upload file  --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- to add a reset button which reset all input data --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"reset"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"reset"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- to add submit button --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1pwubYtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0wpvwofrvx2wsf09p4x.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1pwubYtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0wpvwofrvx2wsf09p4x.PNG" alt="Capture-7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, that was all about Inputs and forms. Now let's make a google search form to understand form's &lt;code&gt;action&lt;/code&gt; attribute.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#google-search"&gt;
  &lt;/a&gt;
  Google Search
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;"get"&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;"https://www.google.com/search?"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Search&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"q"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Eml_pU1E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewhxxqxdpyl6iaj0lxo5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Eml_pU1E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewhxxqxdpyl6iaj0lxo5.gif" alt="Untitled design (3)"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Let's understand above example.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We set our &lt;code&gt;method&lt;/code&gt; to &lt;code&gt;get&lt;/code&gt; so it will append form data into URL.&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;action&lt;/code&gt; attribute we have given a link &lt;code&gt;https://www.google.com/search?&lt;/code&gt;. But from where I got this link.

&lt;ul&gt;
&lt;li&gt;First go to google.com.&lt;/li&gt;
&lt;li&gt;Then search something. For example I searched 'car'.&lt;/li&gt;
&lt;li&gt;copy the text from address bar and paste it into code.
As I did. &lt;code&gt;action="https://www.google.com/search?q=car&amp;amp;sxsrf=ALeKk00oK8YP9RI6P3t-9YfvtPoZwqXsng%3A1627294553711...."&lt;/code&gt; it's a very long address.&lt;/li&gt;
&lt;li&gt;Notice we type &lt;code&gt;car&lt;/code&gt; in search box. And if we see the link. We can find our car word here &lt;code&gt;q=car&lt;/code&gt;. So okay, means google want this q field atleast to work.&lt;/li&gt;
&lt;li&gt;After you found this just delete all the unwanted keywords from the link. And now our &lt;code&gt;action&lt;/code&gt; is equal to &lt;code&gt;https://www.google.com/search?&lt;/code&gt;. We also removed that &lt;code&gt;q&lt;/code&gt; word. But remember to add &lt;code&gt;?&lt;/code&gt; at last.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;After we got our link also. Now create labels and text field for the form and create submit button.&lt;/li&gt;
&lt;li&gt;But notice I gave text field name to &lt;code&gt;name="q"&lt;/code&gt;. Why? because google want this &lt;code&gt;q&lt;/code&gt; field. And whatever we type in our field. It data will belong to &lt;code&gt;q&lt;/code&gt; field. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's how this google search is working.&lt;/p&gt;

&lt;p&gt;So, that's it for today. Today we learnt about forms and input tags in HTML. I hope you understood each and everything. If you have any doubt feel free to ask me in discussions.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#homework"&gt;
  &lt;/a&gt;
  Homework
&lt;/h1&gt;

&lt;p&gt;I appreciate, If you do homework as well for you better practice. Today's homework is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make two forms.&lt;/li&gt;
&lt;li&gt;One form for getting user data. Like name, phone number, email, password, age, D-O-B, favorite food etc. &lt;/li&gt;
&lt;li&gt;Make second form for youtube search. follow the steps that I took, to find youtube search link.&lt;/li&gt;
&lt;li&gt;And practice all the examples done in this article.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus
&lt;/h1&gt;

&lt;p&gt;We have &lt;code&gt;&amp;lt;button&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt; Button tags also. It is used to create button in the page. And you can use These buttons as submit button you only have to add &lt;code&gt;type="submit"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Click me&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aI0C6lf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25x6g85b2miutsyvedk3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aI0C6lf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25x6g85b2miutsyvedk3.PNG" alt="Capture-8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want, you can tag your homework to my &lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;. I'll be glad to see you developing web pages.&lt;/p&gt;

&lt;p&gt;If you like, you can subscribe my &lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;youtube channel&lt;/a&gt;.I create awesome web development tutorials. You can also watch tutorial on &lt;a href="https://www.youtube.com/watch?v=89IFrt_Unj0"&gt;Gradient Infinity loading animation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>Creating Weather App Using JavaScript [Day 1]</title>
      <author>Rahul Shaw</author>
      <pubDate>Mon, 26 Jul 2021 10:15:37 +0000</pubDate>
      <link>https://dev.to/rahulshawdev/creating-weather-app-using-javascript-day-1-2b90</link>
      <guid>https://dev.to/rahulshawdev/creating-weather-app-using-javascript-day-1-2b90</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  INTRODUCTION
&lt;/h3&gt;

&lt;p&gt;Today, I thought maybe I should practice my frontend knowledge so I check some challenges from &lt;a href="https://www.frontendmentor.io"&gt;Frontend Mentor&lt;/a&gt; but all the challenges were either completed by me or were boring. I am a big fan of frontend mentor's challenges but I haven't purchased the premium version, that's why I have to stick with the free versions.&lt;/p&gt;

&lt;p&gt;But then while surfing the internet I found &lt;a href="https://devchallenges.io/"&gt;DevChallenges&lt;/a&gt;. It is a website similar to frontend mentor's but the only difference it has, that I really like, is it provides you the Figma designs of the challenges for free.&lt;/p&gt;

&lt;p&gt;While exploring their challenges I found a weather app. Well, you will say what's new about the weather app, yeah I know it's pretty basic but when I saw the design it just blew my mind.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/krauHBRQnm5ZC/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/krauHBRQnm5ZC/giphy.gif" alt="Blew My Mind Gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The designs were very amazing. How a simple weather app that many courses or youtube videos show us can be very complex and amazing. And soon after I saw those designs I understood this app needs to be on my portfolio website, So I start building it. Here is my &lt;a href="https://github.com/rahulshawdev/weather-app"&gt;GitHub Repo&lt;/a&gt; if you want to follow. I don't know how much time it will take me to complete it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack
&lt;/h4&gt;

&lt;p&gt;The Website suggests creating this project using a JavaScript framework like React or Vue but I thought creating a weather app using a JavaScript framework could be a little time killer. That's why I chose vanilla JavaScript. Now let's talk about styling. You could use normal CSS for it or any CSS frameworks but I will prefer you to choose &lt;a href="https://sass-lang.com/"&gt;Sass&lt;/a&gt; if you really want to practice your frontend skills.&lt;/p&gt;

&lt;p&gt;Now, module bundler. There are plenty of module bundlers in the market like Parcel, Webpack, Snowpack, etc, but I am going to use &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; which is very fast. I have also written a blog about it &lt;a href="https://dev.to/rahulshawdev/why-you-should-use-vite-2dh9"&gt;Read Here&lt;/a&gt;. Now let's move on to the building part.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-new-project-with-vite"&gt;
  &lt;/a&gt;
  Creating New Project With Vite
&lt;/h4&gt;

&lt;p&gt;Copy the below command and paste it into your terminal for creating a Vite app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init vite@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Give a name to your project and choose vanilla js. And then change your directory to that folder and install all the modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;your-project-name&lt;span class="k"&gt;*&lt;/span&gt;
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, we need to install some dependencies. We are going to install Axios for fetching data from the rest API. The API we are using is &lt;a href="https://www.metaweather.com/api/"&gt;MetaWeather&lt;/a&gt;. And then we will install Sass.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; sass
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#folder-structure"&gt;
  &lt;/a&gt;
  Folder Structure
&lt;/h4&gt;

&lt;p&gt;Now, let's talk about folder structure. &lt;strong&gt;&lt;em&gt;NOTE:- YOU CAN ARRANGE YOUR FOLDERS HOWEVER YOU WANT, THESE ARE HOW I LIKE TO DO.&lt;/em&gt;&lt;/strong&gt; First of all create an &lt;code&gt;src&lt;/code&gt; folder on your root directory, it will hold all your source code except your &lt;code&gt;index.html&lt;/code&gt; file. Create &lt;code&gt;scripts&lt;/code&gt; and &lt;code&gt;scss&lt;/code&gt; file inside your &lt;code&gt;src&lt;/code&gt; folder. Put your &lt;code&gt;main.js&lt;/code&gt; file inside of the &lt;code&gt;scripts&lt;/code&gt; folder and delete the &lt;code&gt;styles.css&lt;/code&gt; file from the root directory as we are going to use scss.&lt;/p&gt;

&lt;p&gt;Your folder structure will look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--38fNxkEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627292655420/9Edn2aCw8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--38fNxkEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627292655420/9Edn2aCw8.png" alt="folder-structure.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have also added an &lt;code&gt;assets&lt;/code&gt; folder which has nothing but only an image that you can download from the DevChallenge. We will use the image for styling our app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sass-folder-structure"&gt;
  &lt;/a&gt;
  Sass Folder Structure
&lt;/h4&gt;

&lt;p&gt;We are going to use 7-1 pattern. I will suggest you &lt;a href="https://sass-guidelin.es/#architecture"&gt;Read Here&lt;/a&gt;. 7-1 pattern means you have to create 7 folders and only 1 scss file for example a base folder which will hold all your base styles like typography and resets etc. An abstracts folder will contain colors, fonts and breakpoints, and much more. And only 1 scss file you need to create.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MlZAtxK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627215750745/z5TKeE3X9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MlZAtxK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627215750745/z5TKeE3X9.png" alt="sass-folder-structure.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inside of &lt;code&gt;styles.scss&lt;/code&gt; file there is only a single line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="k"&gt;@use&lt;/span&gt; &lt;span class="s1"&gt;'./base'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is &lt;code&gt;@use&lt;/code&gt;? Well, &lt;code&gt;@use&lt;/code&gt; is a special syntax that gets available to us in the recent dart-sass update. What about &lt;code&gt;@import&lt;/code&gt;? You can still use &lt;code&gt;@import&lt;/code&gt; to import all your styles in scss but if you visit the sass website they will suggest you use &lt;code&gt;@use&lt;/code&gt; and &lt;code&gt;@forward&lt;/code&gt; instead of &lt;code&gt;@import&lt;/code&gt; which does the same thing. They have also written that maybe in the future &lt;code&gt;@import&lt;/code&gt; will be deprecated and in longer in use. So, it's better to use it from now on. You can check youtube videos to learn more.&lt;/p&gt;

&lt;p&gt;In the above case, &lt;code&gt;@use&lt;/code&gt; works as &lt;code&gt;@import&lt;/code&gt; but instead of importing every file which is inside of the &lt;code&gt;base&lt;/code&gt; folder which we used to do previously, it imports the whole folder.&lt;/p&gt;

&lt;p&gt;So what's inside the base folder. You can see the picture below to understand.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p7GNXmZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627216288247/-1mDgZ4pF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p7GNXmZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627216288247/-1mDgZ4pF.png" alt="base-folder.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a &lt;code&gt;_helpers.scss&lt;/code&gt; file which are all the helper classes we might be needed in the future. After that, we have a &lt;code&gt;_reset.scss&lt;/code&gt; file which contains margin and padding resets. You can also name it &lt;code&gt;_boilerplate.scss&lt;/code&gt;. Then, we have &lt;code&gt;_typography.scss&lt;/code&gt; which contains styling related to typography. &lt;strong&gt;&lt;em&gt;NOTE:- IF YOU WANT TO LOOK INSIDE THE FILES MAKE SURE TO VISIT MY GITHUB REPOSITORY.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You might be asking why you are putting an underscore in front of every file name? Well because if you create files without an underscore it will create each file in the dist folder but we want only one scss file that's why we need to put it with an underscore.&lt;/p&gt;

&lt;p&gt;One thing you will also notice that that in every folder inside of the &lt;code&gt;scss&lt;/code&gt; folder there is a &lt;code&gt;_index.scss&lt;/code&gt; file. The index file acts as a forwarder, it forwards all our files which will get imported in &lt;code&gt;styles.scss&lt;/code&gt; file. Previously, we import every single file in our &lt;code&gt;styles.scss&lt;/code&gt; file but now, we just have to import the folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="c1"&gt;// _index.scss&lt;/span&gt;

&lt;span class="k"&gt;@forward&lt;/span&gt; &lt;span class="s1"&gt;'./reset'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@forward&lt;/span&gt; &lt;span class="s1"&gt;'./helpers'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@forward&lt;/span&gt; &lt;span class="s1"&gt;'./typography'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also have an &lt;code&gt;abstracts&lt;/code&gt; folder inside of the &lt;code&gt;scss&lt;/code&gt; folder, so what does the abstracts folder contain. Well, it gathers all Sass tools and helpers used across the project. Every global variable, function, mixin, and placeholder should be put in there. I have created only two files. A &lt;code&gt;_variables.scss&lt;/code&gt; file for storing colors and fonts and a &lt;code&gt;_breakpoints.scss&lt;/code&gt; file which contain media queries that could be used in our project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SpWgyvr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627291807636/P3rwaJAar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SpWgyvr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1627291807636/P3rwaJAar.png" alt="abstracts-folder.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION
&lt;/h3&gt;

&lt;p&gt;Well, only this much I have set up on day 1. I will keep posting till the project is completed. I will also share what I learned each day while creating this project. If you want to create this project on your own don't forget to visit &lt;a href="https://devchallenges.io/"&gt;DevChallenges&lt;/a&gt; and if you want to view my code, visit my &lt;a href="https://github.com/rahulshawdev/weather-app"&gt;GitHub Repo&lt;/a&gt;. If you want to talk more about anything don't forget to comment. And if you want to learn more about &lt;code&gt;@use&lt;/code&gt; and &lt;code&gt;@forward&lt;/code&gt; then I will highly suggest you watch this YouTube Video from &lt;a href="https://www.youtube.com/watch?v=CR-a8upNjJ0"&gt;Kevin Powell&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I haven't talked about &lt;code&gt;@use&lt;/code&gt; and &lt;code&gt;@forward&lt;/code&gt; in great detail but watching the video will clear all your doubts. Kevin Powell also has a video about organizing your sass files as I have done you can also check it &lt;a href="https://www.youtube.com/watch?v=9Ld-aOKsEDk&amp;amp;t=248s"&gt;Over Here&lt;/a&gt;. Comment if you want me to write a blog about organizing sass files and talking about &lt;code&gt;@use&lt;/code&gt; and &lt;code&gt;@forward&lt;/code&gt;.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Add beautiful containers to your Flutter app</title>
      <author>Aditya Thakur</author>
      <pubDate>Mon, 26 Jul 2021 10:12:52 +0000</pubDate>
      <link>https://dev.to/adityathakur/add-beautiful-containers-to-your-flutter-app-3g8m</link>
      <guid>https://dev.to/adityathakur/add-beautiful-containers-to-your-flutter-app-3g8m</guid>
      <description>&lt;p&gt;&lt;strong&gt;Fancy Containers&lt;/strong&gt; package lets you add a beautiful gradient container to your Flutter app.&lt;/p&gt;

&lt;p&gt;These can be used to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Share announcements,&lt;/li&gt;
&lt;li&gt;Showcase information,&lt;/li&gt;
&lt;li&gt;Highlight features,&lt;/li&gt;
&lt;/ul&gt;



&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Add the latest version of the package to your pubspec.yaml (and run &lt;code&gt;dart pub get&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;dependencies:&lt;/span&gt;
  &lt;span class="nl"&gt;fancy_containers:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Import the package and use it in your Flutter App.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:fancy_containers/fancy_containers.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;

&lt;p&gt;There are a number of properties that you can modify:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;height&lt;/li&gt;
&lt;li&gt;width&lt;/li&gt;
&lt;li&gt;title&lt;/li&gt;
&lt;li&gt;titlecolor&lt;/li&gt;
&lt;li&gt;subtitle&lt;/li&gt;
&lt;li&gt;subtitlecolor&lt;/li&gt;
&lt;li&gt;gradient (color1 and color2)&lt;/li&gt;
&lt;li&gt;onTap (for function callback)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;FancyContainer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;onTap:&lt;/span&gt; &lt;span class="o"&gt;(){&lt;/span&gt;
            &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
          &lt;span class="nl"&gt;color1:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lightGreenAccent&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;color2:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lightBlue&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="s"&gt;'Hello World'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;textcolor:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;subtitle:&lt;/span&gt; &lt;span class="s"&gt;'This is a new package'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;subtitlecolor:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4j65hUpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j28cp45jyf84imhjig6k.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4j65hUpF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j28cp45jyf84imhjig6k.jpeg" alt="FancyContainers Output"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find the package on pub.dev &lt;a href="https://pub.dev/packages/fancy_containers"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>programming</category>
    </item>
    <item>
      <title>Collect payments in your Django ecommerce portal using Flutterwave ~PART 1</title>
      <author>Nick Langat</author>
      <pubDate>Mon, 26 Jul 2021 10:12:14 +0000</pubDate>
      <link>https://dev.to/nick_langat/collect-payments-in-your-django-ecommerce-portal-using-flutterwave-part-1-14kp</link>
      <guid>https://dev.to/nick_langat/collect-payments-in-your-django-ecommerce-portal-using-flutterwave-part-1-14kp</guid>
      <description>&lt;p&gt;It is great to see most businesses going digital as opposed to the traditional way of doing things(mostly manually). Assuming you are running an online electronics store, you may want your customers to be able to make payments on the spot and while at it, give them the flexibility of selecting whether to pay using mobile money or card. &lt;/p&gt;

&lt;p&gt;My name is Nick and in this two-part tutorial, we are going to create a simple electronics store using &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; and then collect payments from customers using &lt;a href="https://flutterwave.com/"&gt;Flutterwave&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  PROJECT SETUP
&lt;/h2&gt;

&lt;p&gt;Let's quickly create a Django project by navigating to the desktop directory and opening a terminal window then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir django_flutterwave &amp;amp;&amp;amp; cd django_flutterwave
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next let's create a new virtual env and install dependencies we will need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;virtualenv env

source env/bin/activate

pip install django requests django-environ Pillow
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So aside from django we need:&lt;br&gt;
1.requests library-to make calls to the payments endpoint&lt;br&gt;
2.django-environ- to securely store our environment variables&lt;br&gt;
3.Pillow to help with image processing&lt;br&gt;
Let's create the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;django-admin startproject django_store .
python manage.py startapp electronics
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to add 'electronics' to the list of installed apps in the project's &lt;code&gt;settings.py&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#models"&gt;
  &lt;/a&gt;
  MODELS
&lt;/h2&gt;

&lt;p&gt;Open &lt;code&gt;electronics/models.py&lt;/code&gt; and add the following code to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="c1"&gt;# Create your models here.
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'product_images'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FloatField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Register it in admin
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to run &lt;code&gt;makemigrations&lt;/code&gt; and finally &lt;code&gt;migrate&lt;/code&gt; commands to register our database table. &lt;br&gt;
Spin up the server using &lt;code&gt;runserver&lt;/code&gt; command.&lt;br&gt;
Create a superuser using the &lt;code&gt;createsuperuser&lt;/code&gt; command and login to (&lt;a href="http://localhost:8000/admin/"&gt;http://localhost:8000/admin/&lt;/a&gt;) and add a couple of electronic products. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#settings-configuration"&gt;
  &lt;/a&gt;
  SETTINGS CONFIGURATION
&lt;/h2&gt;

&lt;p&gt;Notice that our Product class accepts images so let's update our &lt;code&gt;settings.py&lt;/code&gt; to reflect this. At the bottom of the file add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'media'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/media/'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;open the project's &lt;code&gt;urls.py&lt;/code&gt; and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls.static&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'admin/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To tell django where to find our HTML markup, add the following to the TEMPLATES SECTION inside the &lt;code&gt;DIRS&lt;/code&gt; part:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'templates'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that in place let's move on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#views"&gt;
  &lt;/a&gt;
  VIEWS
&lt;/h2&gt;

&lt;p&gt;All the business logic will sit here. We need to list the products from the database so let's create a function to handle that. &lt;br&gt;
Add the following code to the &lt;code&gt;views.py&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Product&lt;/span&gt;
&lt;span class="c1"&gt;# Create your views here.
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;list_products&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'products'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'products.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;update the project's &lt;code&gt;urls.py&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls.static&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;electronics.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;list_products&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'admin/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_products&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'list'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#templates"&gt;
  &lt;/a&gt;
  TEMPLATES
&lt;/h2&gt;

&lt;p&gt;Create a root level folder called 'templates' and inside it create 'products.html' file. Now the content to this file can be found on &lt;a href="https://dpaste.org/BUmj"&gt;this paste&lt;/a&gt;&lt;br&gt;
With that in place go ahead and restart the dev server and access (&lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;) and you should surely see some UI like mine below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bt5qRFGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ukddxajfb704joz3d34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bt5qRFGj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ukddxajfb704joz3d34.png" alt="products"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  THAT'S IT
&lt;/h2&gt;

&lt;p&gt;Well I have to wrap up this part at this juncture. The goal here was to create the project, add products and display them on the homepage. I hope that is what you have on your end. &lt;br&gt;
Thanks for taking time to read and follow along. I am working on part 2 so stay tuned!&lt;br&gt;
Follow me here and on &lt;a href="https://twitter.com/NicksonLangat20"&gt;Twitter&lt;/a&gt; for updates.&lt;br&gt;
Also if you have time visit my website &lt;a href="https://techwithnick.com/"&gt;here&lt;/a&gt;.&lt;br&gt;
Cheers!&lt;/p&gt;

</description>
      <category>django</category>
      <category>payments</category>
      <category>python</category>
      <category>webdev</category>
    </item>
    <item>
      <title>💡 Free Laravel Tips and Tricks eBook</title>
      <author>Bobby Iliev</author>
      <pubDate>Mon, 26 Jul 2021 10:10:28 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/free-laravel-tips-and-tricks-ebook-5go2</link>
      <guid>https://dev.to/bobbyiliev/free-laravel-tips-and-tricks-ebook-5go2</guid>
      <description>&lt;p&gt;This is an open-source &lt;code&gt;Laravel Tips and Tricks eBook&lt;/code&gt; that is a collection of my own notes that I've put together for myself throughout the years. You would more likely than not need many of those tips at some point in your career as a Laravel Developer.&lt;/p&gt;

&lt;p&gt;The guide is suitable for anyone working as a Laravel developer and would love to learn some random Laravel tips and tricks. You can read the chapters in this book in a random order as they are completely separate tips or tricks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  🚀 Download
&lt;/h2&gt;

&lt;p&gt;To download a copy of the ebook use one of the following links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook/raw/main/ebook/en/export/laravel-tips-and-tricks-dark.pdf"&gt;Dark mode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook/raw/main/ebook/en/export/laravel-tips-and-tricks-light.pdf"&gt;Light mode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#chapters"&gt;
  &lt;/a&gt;
  📘 Chapters
&lt;/h2&gt;

&lt;p&gt;Some of the chapters are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;About the book&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click"&gt;How to Install Laravel on DigitalOcean with 1-Click&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-get-a-free-domain-name-for-your-laravel-project"&gt;How to get a free domain name for your Laravel project&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/8-awesome-vs-code-extensions-for-laravel-developers"&gt;8 Awesome VS Code Extensions for Laravel Developers&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-is-laravel-jetstream-and-how-to-get-started"&gt;What is Laravel Jetstream and how to get started&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-check-laravel-blade-view-syntax-using-artisan"&gt;How to check Laravel Blade View Syntax using artisan&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-speed-up-your-laravel-application-with-php-opcache"&gt;How to speed up your Laravel application with PHP OPcache&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-is-laravel-sail-and-how-to-get-started"&gt;What is Laravel Sail and how to get started&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-add-simple-search-to-your-laravel-blogwebsite"&gt;How to add simple search to your Laravel blog/website&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-create-custom-laravel-maintenance-page"&gt;How to Create Custom Laravel Maintenance Page&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-is-laravel-blade-ui-kit-and-how-to-get-started"&gt;What is Laravel Blade UI Kit and how to get started&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-add-a-simple-infinite-scroll-pagination-to-laravel"&gt;How to Add a Simple Infinite Scroll Pagination to Laravel?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-add-a-simple-rss-feed-to-laravel-without-using-package"&gt;How to add a simple RSS feed to Laravel without using a package&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-is-laravel-zero-and-how-to-get-started"&gt;What is Laravel Zero and how to get started&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-build-a-blog-with-laravel-and-wink"&gt;How to build a blog with Laravel and Wink&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-copy-or-move-records-from-one-table-to-another-in-laravel"&gt;How to copy or move records from one table to another in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-generate-title-slugs-in-laravel"&gt;How to generate title slugs in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-is-laravel-enlightn-and-how-to-use-it"&gt;What is Laravel Enlightn and how to use it&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-consume-an-external-api-with-laravel-and-guzzle"&gt;How to consume an external API with Laravel and Guzzle&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-send-discord-notifications-with-laravel"&gt;How to send Discord notifications with Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-encrypt-and-decrypt-a-string-in-laravel"&gt;How to encrypt and decrypt a string in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-remove-a-package-from-laravel-using-composer"&gt;How to remove a package from Laravel using composer&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-is-laravel-breeze-and-how-to-get-started"&gt;What is Laravel Breeze and how to get started&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/what-are-signed-routes-in-laravel-and-how-to-use-them"&gt;What are signed routes in Laravel and how to use them&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-quickly-change-the-password-for-a-user-in-laravel"&gt;How to Quickly Change the Password for a User in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-convert-markdown-to-html-in-laravel-and-voyager"&gt;How to convert markdown to HTML in Laravel and Voyager&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-create-response-macros-in-laravel"&gt;How to Create Response Macros in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-get-the-base-url-in-laravel"&gt;How to Get the Base URL in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-limit-the-length-of-a-string-in-laravel"&gt;How to limit the length of a string in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-check-if-not-null-with-laravel-eloquent"&gt;How to check 'if not null' with Laravel Eloquent&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-get-the-current-date-and-time-in-laravel"&gt;How to get the current date and time in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-get-current-route-name-in-laravel"&gt;How to Get Current Route Name in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-count-and-detect-empty-laravel-eloquent-collections"&gt;How to Count and Detect Empty Laravel Eloquent Collections&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-use-forelse-loop-in-laravel-blade"&gt;How to use Forelse loop in Laravel Blade&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-delete-all-entries-in-a-table-using-laravel-eloquent"&gt;How to Delete All Entries in a Table Using Laravel Eloquent&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-check-if-a-record-exists-with-laravel-eloquent"&gt;How to check if a record exists with Laravel Eloquent&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-add-multiple-where-clauses-using-laravel-eloquent"&gt;How to Add Multiple Where Clauses Using Laravel Eloquent&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-add-a-new-column-to-an-existing-table-in-a-laravel-migration"&gt;How to Add a New Column to an Existing Table in a Laravel Migration&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-rollback-database-migrations-in-laravel"&gt;How to Rollback Database Migrations in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-remove-a-migration-in-laravel"&gt;How to Remove a Migration in Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-create-contact-form-with-laravel-livewire"&gt;How to create a contact form with Laravel Livewire&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-display-html-tags-in-blade-with-laravel-8"&gt;How To Display HTML Tags In Blade With Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-set-a-variable-in-laravel-blade-template"&gt;How to Set a Variable in Laravel Blade Template&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-limit-the-result-with-laravel-eloquent"&gt;How to limit the result with Laravel Eloquent?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-select-specific-columns-in-laravel-eloquent"&gt;How to Select Specific Columns in Laravel Eloquent&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-get-the-laravel-query-builder-to-output-the-raw-sql-query"&gt;How to get the Laravel Query Builder to Output the Raw SQL Query?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-get-the-last-inserted-id-using-laravel-eloquent"&gt;How to Get the Last Inserted Id Using Laravel Eloquent?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-order-the-results-of-all-in-laravel-eloquent"&gt;How to Order the Results of all() in Laravel Eloquent?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-fix-laravel-unknown-column-updated-at"&gt;How to fix Laravel Unknown Column 'updated_at'?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-define-custom-env-variables-in-laravel"&gt;How to Define Custom ENV Variables in Laravel?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-fix-please-provide-a-valid-cache-path-error-in-laravel"&gt;How to fix 'Please provide a valid cache path' error in Laravel?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-check-your-exact-laravel-version"&gt;How to check your exact Laravel version?&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/contact-form-with-voyager-and-laravel"&gt;Contact Form with Voyager and Laravel&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://devdojo.com/bobbyiliev/scaling-laravel-app-with-multiple-databases"&gt;Scaling Laravel App with Multiple Databases&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sponsors"&gt;
  &lt;/a&gt;
  🌟 Sponsors
&lt;/h2&gt;

&lt;p&gt;This book is made possible thanks to these fantastic companies!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#digitalocean"&gt;
  &lt;/a&gt;
  💙 DigitalOcean
&lt;/h3&gt;

&lt;p&gt;DigitalOcean is a cloud services platform delivering the simplicity developers love and businesses trust to run production applications at scale.&lt;/p&gt;

&lt;p&gt;It provides highly available, secure, and scalable compute, storage, and networking solutions that help developers build great software faster.&lt;/p&gt;

&lt;p&gt;Founded in 2012 with offices in New York and Cambridge, MA, DigitalOcean offers transparent and affordable pricing, an elegant user interface, and one of the largest libraries of open source resources available.&lt;/p&gt;

&lt;p&gt;For more information, please visit &lt;a href="https://www.digitalocean.com"&gt;https://www.digitalocean.com&lt;/a&gt; or follow &lt;a href="https://twitter.com/digitalocean"&gt;@digitalocean&lt;/a&gt; on Twitter.&lt;/p&gt;

&lt;p&gt;If you are new to DigitalOcean, you can get a free $100 credit and spin up your own servers via this referral link here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://m.do.co/c/2a9bba940f39"&gt;Free $100 Credit For DigitalOcean&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devdojo"&gt;
  &lt;/a&gt;
  👩‍💻 DevDojo
&lt;/h3&gt;

&lt;p&gt;The DevDojo is a resource to learn all things web development and web design. Learn on your lunch break or wake up and enjoy a cup of coffee with us to learn something new.&lt;/p&gt;

&lt;p&gt;Join this developer community, and we can all learn together, build together, and grow together.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com?ref=bobbyiliev"&gt;Join DevDojo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information, please visit &lt;a href="https://www.devdojo.com?ref=bobbyiliev"&gt;https://www.devdojo.com&lt;/a&gt; or follow &lt;a href="https://twitter.com/thedevdojo"&gt;@thedevdojo&lt;/a&gt; on Twitter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-page"&gt;
  &lt;/a&gt;
  🕸️ Web Page
&lt;/h2&gt;

&lt;p&gt;A web page showcasing the eBook:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravel.bobby.sh"&gt;Laravel Tips and Tricks eBook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The web page was built using &lt;a href="http://devdojo.com/tails?ref=bobbyiliev"&gt;Tails&lt;/a&gt;, a new &lt;code&gt;kick-ass&lt;/code&gt; drag-and-drop TailwindCSS page builder!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#digitalocean-app-platform"&gt;
  &lt;/a&gt;
  DigitalOcean App Platform
&lt;/h3&gt;

&lt;p&gt;The will be hosted on the &lt;a href="https://www.digitalocean.com/products/app-platform/"&gt;DigitalOcean App Platform&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will utilize the &lt;a href="https://www.digitalocean.com/docs/app-platform/how-to/add-deploy-do-button"&gt;"Deploy to DigitalOcean" Button&lt;/a&gt; to deploy to the App Platform:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.digitalocean.com/apps/new?repo=https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook/tree/main"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CNMgVEM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mp-assets1.sfo2.digitaloceanspaces.com/deploy-to-do/do-btn-blue.svg" alt="Deploy to DO"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#laravel-playground"&gt;
  &lt;/a&gt;
  💻 Laravel Playground
&lt;/h2&gt;

&lt;p&gt;You can follow the tips from the book with this online playground here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://laravelplayground.com/#/"&gt;Laravel Playground&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-the-author"&gt;
  &lt;/a&gt;
  👋 About the author
&lt;/h2&gt;

&lt;p&gt;My name is Bobby Iliev, and I have been working as a Linux DevOps Engineer since 2014. I am an avid Linux lover and supporter of the open-source movement philosophy. I am always doing that which I cannot do in order that I may learn how to do it, and I believe in sharing knowledge.&lt;/p&gt;

&lt;p&gt;I think it's essential always to keep professional and surround yourself with good people, work hard, and be nice to everyone. You have to perform at a consistently higher level than others. That's the mark of a true professional.&lt;/p&gt;

&lt;p&gt;For more information, please visit my blog at &lt;a href="https://bobbyiliev.com"&gt;https://bobbyiliev.com&lt;/a&gt;, follow me on Twitter &lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev_&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCQWmdHTeAO0UvaNqve9udRw"&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case that you want to support me you can Buy Me a Coffee here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/bobbyiliev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pdf-generation-tool"&gt;
  &lt;/a&gt;
  🔥 PDF Generation Tool
&lt;/h2&gt;

&lt;p&gt;The project uses &lt;a href="https://github.com/themsaid/ibis/"&gt;Ibis&lt;/a&gt; developed by &lt;a href="https://github.com/themsaid"&gt;Mohamed Said&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ibis is a PHP tool that helps you write eBooks in markdown.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#book-cover"&gt;
  &lt;/a&gt;
  🎨 Book Cover
&lt;/h2&gt;

&lt;p&gt;The cover for this ebook was created with &lt;a href="https://www.canva.com/join/determined-cork-learn"&gt;Canva.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you ever need to create a graphic, poster, invitation, logo, presentation – or anything that looks good — give Canva a go.&lt;/p&gt;

&lt;p&gt;Icons made by &lt;a href="https://www.flaticon.com/"&gt;Pixel perfect&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  🔗 Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bobbyiliev.com"&gt;My blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://m.do.co/c/2a9bba940f39"&gt;Free $100 Credit For DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devdojo.com?ref=bobbyiliev"&gt;Join DevDojo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/themsaid/ibis/"&gt;Ibis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.canva.com/"&gt;Canva&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devdojo.com/tails"&gt;Tails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#other-books"&gt;
  &lt;/a&gt;
  📖 Other books
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;Introduction to Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-bash-scripting"&gt;Introduction to Bash Scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bobbyiliev/introduction-to-sql"&gt;Introduction to SQL eBook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  🤲 Contributing
&lt;/h2&gt;

&lt;p&gt;If you are contributing 🍿 please read the &lt;a href="https://github.com/bobbyiliev/laravel-tips-and-tricks-ebook/blob/main/CONTRIBUTING.md"&gt;contributing file&lt;/a&gt; before submitting your pull requests.&lt;/p&gt;

&lt;p&gt;Any suggestions for future topics would be appreciated!&lt;/p&gt;

&lt;p&gt;To support me, make sure to follow me on Twitter at &lt;a href="https://twitter.com/bobbyiliev_"&gt;@bobbyiliev_&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>opensource</category>
      <category>books</category>
    </item>
    <item>
      <title>Polymorphism</title>
      <author>UCSYSG</author>
      <pubDate>Mon, 26 Jul 2021 10:05:25 +0000</pubDate>
      <link>https://dev.to/ucsysg/polymorphism-22ap</link>
      <guid>https://dev.to/ucsysg/polymorphism-22ap</guid>
      <description>&lt;p&gt;polymorphismဆိုတာကတော့OOPရဲ့featuresတွေထဲကတစ်ခုဖြစ်ပါတယ်။polymorphismဆိုတာကတော့Greekဘာသာစကားpoly(many)နဲ့morph(form)ကနေဆင်းသက်လာခြင်းဖြစ်ပါတယ်။ဆိလိုချင်တာကတော့လုပ်ဆောင်ချက်တစ်ခုထဲကိုပဲပုံစံအမျိုးမျိုးနဲ့ဖော်ပြနိုင်ခြင်းဖြစ်ပါတယ်။&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#polymorphism%E1%80%80%E1%80%AD%E1%80%AF%E1%80%A1%E1%80%9E%E1%80%AF%E1%80%B6%E1%80%B8%E1%80%95%E1%80%BC%E1%80%AF%E1%80%81%E1%80%BC%E1%80%84%E1%80%BA%E1%80%B8"&gt;
  &lt;/a&gt;
  Polymorphismကိုအသုံးပြုခြင်း
&lt;/h1&gt;

&lt;p&gt;Classတခုဟာတခြားclassတခုကိုအမွေဆက်ခံလိုက်ပြီဆိုတာနဲ့polymorphismရဲ့သဘောတရားဟာအသက်ဝင်လာပြီဖြစ်ပါတယ်။Polymorphismကိုprogramming concept  အနေနဲ့ပြောရမယ်ဆိုရင်Objectတခုခြင်းပေါ်မူတည်ပြီးတော့Methodရဲ့လုပ်ဆောင်နိုင်စွမ်းကွဲပြားသွားတာဖြစ်ပါတယ်။ထိုကဲ့သိုကွဲပြားရာကိုမူတည်ပြီးတော့ကျွန်တော်တိုconceptနှစ်မျိုးခွဲခြားနိုင်ပါတယ်။ထိုအရာတွေကတော့-&lt;/p&gt;

&lt;p&gt;1.Method Overloading(compile time or static polymorphism )&lt;/p&gt;

&lt;p&gt;2.Method Overriding (run time or dynamic polymorphism )တိုပဲဖြစ်ပါတယ်။&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-overloading"&gt;
  &lt;/a&gt;
  Method Overloading
&lt;/h1&gt;

&lt;p&gt;Method Overloadingဆိုတာကတော့Class တစ်ခုထဲမှာmethod nameတွေတူပေမယ့်parameterတွေမတူတာကိုဆိုလိုခြင်းဖြစ်ပါတယ်။method return typeလဲကွဲပြားမှုရှိနိုင်ပါတယ်။&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-overloading-%E1%80%9C%E1%80%AF%E1%80%95%E1%80%BA%E1%80%9C%E1%80%BB%E1%80%BE%E1%80%84%E1%80%BA%E1%80%9C%E1%80%AD%E1%80%AF%E1%80%80%E1%80%BA%E1%80%94%E1%80%AC%E1%80%9B%E1%80%99%E1%80%8A%E1%80%B7%E1%80%BA%E1%80%85%E1%80%8A%E1%80%BA%E1%80%B8%E1%80%99%E1%80%BB%E1%80%89%E1%80%BA%E1%80%B8%E1%80%99%E1%80%BB%E1%80%AC%E1%80%B8"&gt;
  &lt;/a&gt;
  Method Overloading လုပ်လျှင်လိုက်နာရမည့်စည်းမျဉ်းများ
&lt;/h1&gt;

&lt;p&gt;methodနှစ်ခုကိုoverloadအဖြစ်သတ်မှတ်ချင်လျှင်အထက်ပါအချက်နှစ်ချက်တူညီရမည်-&lt;/p&gt;

&lt;p&gt;1.methodနှစ်ခုလုံးmethod name တူရမည်။&lt;/p&gt;

&lt;p&gt;2.methodနှစ်ခုလုံးparameter listကွဲပြားရမည်။&lt;/p&gt;

&lt;p&gt;ထိုနှစ်ချက်သာမရှိမဖြစ်လိုအပ်သည်။အောက်တွင်ဖော်ပြထားသောအကြောင်းအရာများလဲကွဲပြားမှုရှိနိုင်သည်။&lt;/p&gt;

&lt;p&gt;1.return typeများကွဲပြားနိုင်သည်။&lt;/p&gt;

&lt;p&gt;2.access modifier များကွဲပြားနိုင်သည်။&lt;/p&gt;

&lt;p&gt;3.exceptionများကိုthrowsလုပ်ရာတွင်လဲကွဲပြားနိုင်သည်။&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-overloading-%E1%80%A5%E1%80%95%E1%80%99%E1%80%AC"&gt;
  &lt;/a&gt;
  Method overloading ဥပမာ
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Example&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;.....&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;method&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;}&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;method&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="o"&gt;;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;method&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;;}&lt;/span&gt;
&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;method&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#method-overriding"&gt;
  &lt;/a&gt;
  Method Overriding
&lt;/h1&gt;

&lt;p&gt;MethodOverridingဆိုတာကတော့Parent classကနေလက်ခံရရှိတဲ့methodကိုမိမိကိုယ်ပိုင်ပုံစံဖြင့်ပြုပြင်ရေးသားခြင်းပဲဖြစ်ပါတယ်။&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-overriding-%E1%80%9C%E1%80%AF%E1%80%95%E1%80%BA%E1%80%9C%E1%80%BB%E1%80%BE%E1%80%84%E1%80%BA%E1%80%9C%E1%80%AD%E1%80%AF%E1%80%80%E1%80%BA%E1%80%94%E1%80%AC%E1%80%9B%E1%80%99%E1%80%8A%E1%80%B7%E1%80%BA%E1%80%85%E1%80%8A%E1%80%BA%E1%80%B8%E1%80%99%E1%80%BB%E1%80%89%E1%80%BA%E1%80%B8%E1%80%99%E1%80%BB%E1%80%AC%E1%80%B8"&gt;
  &lt;/a&gt;
  Method overriding လုပ်လျှင်လိုက်နာရမည့်စည်းမျဉ်းများ
&lt;/h1&gt;

&lt;p&gt;အောက်ပါဖော်ပြထားသောစည်းမျဉ်းများကိုမဖြစ်မနေလိုက်နာရမည်။&lt;/p&gt;

&lt;p&gt;1.method name တူရမည်။&lt;/p&gt;

&lt;p&gt;2.argument listတူရမည်။&lt;/p&gt;

&lt;p&gt;3.return typeတူညီရမည်။(JDK5မှစတင်၍convariant return typeများsupportလုပ်လာသည်။အရှင်းလင်းဆုံးပြောရလျှင်different return typeများဖြစ်သည်။different return typeဟုဆိုသော်လဲပဲထို return typeသည်parentရဲ့sub typeသာဖြစ်ရမည်။ပို၍ရှင်းလင်းစေရန်အောက်တွင်ဖော်ပြထားသောcodeကိုကြည့်ပါ)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;    
&lt;span class="no"&gt;A&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;;}&lt;/span&gt;    
&lt;span class="o"&gt;}&lt;/span&gt;    

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;    
&lt;span class="nd"&gt;@Override&lt;/span&gt;  
&lt;span class="no"&gt;B&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;;}&lt;/span&gt;&lt;span class="c1"&gt;//convariant type (B is Sub type of it's parent A)       &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.အကယ်၍parentရဲ့method access modifierသည်protectedဖြစ်လျှင်child classတွင်ပြုပြင်လိုသောmethod access modifier သည်private မဖြစ်ရပါ။&lt;/p&gt;

&lt;p&gt;5.new သိုမဟုတ် border checked exceptionများကိုthrow၍မရပါ။&lt;/p&gt;

&lt;p&gt;အထက်တွင်ဖော်ပြထားသောစည်းမျဉ်းများတူညီလျှင်override methodများတွင်အောက်ပါကိစ္စရပ်များကွဲလွဲနိုင်သည်။&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;အကယ်၍parentရဲ့method access modifierသည်protectedဖြစ်လျှင်child classတွင်ပြုပြင်လိုသောmethod access modifier သည်publicဖြစ်လိုရပါသည်။&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2.fewer, narrower checked exeeptions(သို) unchecked exceptionများthrowနိုင်သည်။(ထိုအကြောင်းအရာများကိုException handlingအပိုင်းတွင်အသေးစိတ်ဖော်ပြသွားပါမည်။)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#appendix-rules-for-overriding"&gt;
  &lt;/a&gt;
  Appendix Rules for Overriding
&lt;/h1&gt;

&lt;p&gt;1.Inheritance methodများသာoverrideပြုလုပ်နိုင်သည်။ဆိုလိုတာကတော့child classတွင်သာover ride လုပ်နိုင်သည်။&lt;/p&gt;

&lt;p&gt;2.Constructorsနှင့်private methodများကိုinheritedလုပ်၍မရသောကြောင့်oveerideမလုပ်နိုင်ပါ။&lt;/p&gt;

&lt;p&gt;3..Abstract methodများကိုလက်ခံသောconcrete class များသည်overrideမဖြစ်မနေလုပ်ရမည်။&lt;/p&gt;

&lt;p&gt;4.final methodတွေကိုoverrideလုပ်၍မရပါ။&lt;/p&gt;

&lt;p&gt;5.subclassများတွင်parentရဲ့methodများအသုံးပြုလိုပါကsuper.method()ဆိုပြီးအသုံးပြုနိုင်သည်။&lt;/p&gt;

&lt;p&gt;အထက်ပါဖော်ပြချက်များကတော့overidingနှင့်overloadingအကြောင်းပဲဖြစ်ပါသည်။ဖတ်ရှုပေးတဲ့အတွက်ကျေးဇူးအထူးတင်ရှိပါသည်။&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#method-overloading-%E1%80%A5%E1%80%95%E1%80%99%E1%80%AC"&gt;
  &lt;/a&gt;
  Method overloading ဥပမာ
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Parent's show()"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Inherited class&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;&lt;span class="c1"&gt;//method overiding&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Child's show()"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ရေးသားသူ&lt;br&gt;
Thaw Htin Aung&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
