<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>C# Dictionary</title>
      <author>Ishaan Sheikh</author>
      <pubDate>Sun, 11 Jul 2021 06:55:15 +0000</pubDate>
      <link>https://dev.to/sheikh_ishaan/c-dictionary-191c</link>
      <guid>https://dev.to/sheikh_ishaan/c-dictionary-191c</guid>
      <description>&lt;p&gt;The Dictionary in C# is a generic collection, which is used to store data in key-value pairs. It is available under the &lt;code&gt;System.Collections.Generic&lt;/code&gt; namespace.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Dictionary&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;TValue&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tkey"&gt;
  &lt;/a&gt;
  TKey
&lt;/h3&gt;

&lt;p&gt;It represents the data type of the &lt;strong&gt;key&lt;/strong&gt;. For example, &lt;strong&gt;string, bool, int&lt;/strong&gt;, etc. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tvalue"&gt;
  &lt;/a&gt;
  TValue
&lt;/h3&gt;

&lt;p&gt;It represents the data type of the &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-dictionary"&gt;
  &lt;/a&gt;
  Creating a Dictionary
&lt;/h2&gt;

&lt;p&gt;The Dictionary collection provides an &lt;code&gt;Add()&lt;/code&gt; method to add elements to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Collections.Generic&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Dictionary&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Dictionary&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"John"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Jane"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Smith"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#accessing-an-element"&gt;
  &lt;/a&gt;
  Accessing an element
&lt;/h2&gt;

&lt;p&gt;We can access the element from dictionary by providing the key inside &lt;code&gt;[]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// John&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#removing-an-element"&gt;
  &lt;/a&gt;
  Removing an element
&lt;/h2&gt;

&lt;p&gt;We can remove an element from the dictionary using the &lt;code&gt;Remove&lt;/code&gt; method by providing the key to be removed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#iterating-over-the-dictionary"&gt;
  &lt;/a&gt;
  Iterating over the dictionary
&lt;/h2&gt;

&lt;p&gt;We can use the &lt;code&gt;foreach&lt;/code&gt; loop in C# to iterate over the dictionary collection.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KeyValuePair&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" - "&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>csharp</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Demystifying Position Property</title>
      <author>Bharati Subramanian</author>
      <pubDate>Sun, 11 Jul 2021 06:38:20 +0000</pubDate>
      <link>https://dev.to/bharati21/demystifying-position-property-30kd</link>
      <guid>https://dev.to/bharati21/demystifying-position-property-30kd</guid>
      <description>&lt;p&gt;CSS provides the &lt;strong&gt;&lt;code&gt;position&lt;/code&gt;&lt;/strong&gt; property that specifies how an element should appear in the document. This property is helpful when you want to position elements in the DOM outside of normal flow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-this-blog-post-about"&gt;
  &lt;/a&gt;
  What is this blog post about?
&lt;/h2&gt;

&lt;p&gt;This blog post covers the &lt;strong&gt;&lt;code&gt;position&lt;/code&gt;&lt;/strong&gt; property with the &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; properties that determine the final position of an element.&lt;/p&gt;

&lt;p&gt;Since this property has a notorious tendency to be misunderstood, let's try to figure out this property together!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out the demos I explained in this post &lt;a href="https://demystifying-css-position.netlify.app/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites-for-the-blog"&gt;
  &lt;/a&gt;
  Prerequisites for the blog
&lt;/h2&gt;

&lt;p&gt;This blog post assumes that you are familiar with the syntax and basics of HMTL and CSS.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#what-is-the-css-position-property"&gt;
  &lt;/a&gt;
  What is the CSS position property?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;position&lt;/code&gt;&lt;/strong&gt; property specifies &lt;em&gt;how&lt;/em&gt; an element is placed in the DOM.&lt;/li&gt;
&lt;li&gt;Along with this, you can use &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt; properties that specify &lt;em&gt;where&lt;/em&gt; the element is placed.&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;position&lt;/code&gt;&lt;/strong&gt; property can take &lt;em&gt;five&lt;/em&gt; values:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;absolute&lt;/li&gt;
&lt;li&gt;relative&lt;/li&gt;
&lt;li&gt;fixed&lt;/li&gt;
&lt;li&gt;sticky&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Before we jump in, let's understand in short what &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; are.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt;, properties specify how far away from the top/ right/ bottom/ left and element should be positioned. 

&lt;ul&gt;
&lt;li&gt;By default all these properties have value &lt;em&gt;auto&lt;/em&gt;, and the element is placed in a &lt;a href="#1-static"&gt;Static Position&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It accepts both negative and positive integer values and common units such as &lt;em&gt;px&lt;/em&gt;, &lt;em&gt;rem&lt;/em&gt;, &lt;em&gt;em&lt;/em&gt;, &lt;em&gt;%&lt;/em&gt; etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; is used to specify the stack level, and layer elements. 

&lt;ul&gt;
&lt;li&gt;The default value for &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; is 0, and will not work unless you apply position on the element (except static).&lt;/li&gt;
&lt;li&gt;Elements with a larger &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; value overlaps elements with smaller &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; value.&lt;/li&gt;
&lt;li&gt;It accepts positive and negative integers without any unit.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


 
&lt;h3&gt;
  &lt;a href="#1-static"&gt;
  &lt;/a&gt;
  1. Static
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;&lt;code&gt;position: static;&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; is the default value of this property, and the elements appear in their normal flow in the document.&lt;/li&gt;
&lt;li&gt;Properties: &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; have no effect on an element positioned &lt;strong&gt;&lt;code&gt;static&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Check the example below. The blue colored &lt;code&gt;div&lt;/code&gt; with class &lt;code&gt;static&lt;/code&gt; has a static position.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pDtfJPTP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0p8fin4xqk78g6hi0s9.png" alt="Element with static position"&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The code for the above example:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;static&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* Need not specify as this is default */&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the codepen here: &lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/bhaaratii/embed/MWmjOJa?height=600&amp;amp;default-tab=html,css&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-relative"&gt;
  &lt;/a&gt;
  2. Relative
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When &lt;strong&gt;&lt;em&gt;&lt;code&gt;position: relative;&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; is applied to an element, it appears in the normal flow of the document.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;But unlike &lt;a href="#1-static"&gt;&lt;strong&gt;&lt;em&gt;static position&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;, it accepts accepts values for &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The element is then placed relative to &lt;em&gt;itself&lt;/em&gt; depending on the values of &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt;, and stacked in layers depending on the value of &lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the example shown below, the blue colored &lt;code&gt;div&lt;/code&gt; element with class &lt;code&gt;relative&lt;/code&gt; has a relative position, with top and left offset values.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g3AuPMwk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqg1m3ujunhi7s1poehl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g3AuPMwk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqg1m3ujunhi7s1poehl.png" alt="Element with relative position"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The code for the above example:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.relative&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the codepen here: &lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/bhaaratii/embed/mdmrwJK?height=600&amp;amp;default-tab=html,css&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-absolute"&gt;
  &lt;/a&gt;
  3. Absolute
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When &lt;strong&gt;&lt;em&gt;&lt;code&gt;position: absolute;&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; is applied to an element, it is taken &lt;em&gt;out&lt;/em&gt; of the the normal flow of the document.&lt;/li&gt;
&lt;li&gt;It remains in it's original position unless &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt; values are specified.&lt;/li&gt;
&lt;li&gt;The other elements ignore the element, and behave as if it is not present at all. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;z-index&lt;/code&gt;&lt;/strong&gt; can also be specified to stack and layer elements.&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In the example below, the blue colored &lt;code&gt;div&lt;/code&gt; with class &lt;code&gt;absolute&lt;/code&gt; is given a relative position, and no values of &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt; are specified.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RPvECAwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3no7oyzye5fdczfvsg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RPvECAwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3no7oyzye5fdczfvsg1.png" alt="Element with absolute position"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See what happens when this blue box is given &lt;strong&gt;&lt;code&gt;z-index: -1;&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HdF_X-4e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7dpra2xwqfkodw2gb3o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HdF_X-4e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7dpra2xwqfkodw2gb3o.png" alt="absolute positioned element with z-index -1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The parent of this &lt;code&gt;div.absolute&lt;/code&gt; is the section with class &lt;code&gt;section&lt;/code&gt; and &lt;code&gt;background-color: lightskyblue;&lt;/code&gt; has &lt;code&gt;z-index: 0;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Since &lt;strong&gt;`z-index&lt;/strong&gt;&lt;code&gt; of &lt;/code&gt;section.section&lt;code&gt; is greater than that of &lt;/code&gt;div.absolute&lt;code&gt;, the &lt;/code&gt;div` is stacked below it's parent.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;Typically an element with &lt;strong&gt;&lt;code&gt;position: absolute;&lt;/code&gt;&lt;/strong&gt; is placed relative to it's closest positioned ancestor (other than static).&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If no such ancestor is found, it is simply placed relative to the document.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check out the example below, and notice how the element is placed relative to the document.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v-uy4lSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qs4cf9en28zdafhzj569.png" alt="Element with absolute position relative to document"&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;The code for the above example:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.absolute-two&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Check out what happens, if we give the parent (or an ancestor) of an element with absolute position: &lt;code&gt;position: relative;&lt;/code&gt;.&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--swNodRPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqjfrb093smnra71dfzr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--swNodRPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqjfrb093smnra71dfzr.png" alt="Element with position absolute within an ancestor positioned absolute"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check the red colored &lt;code&gt;div&lt;/code&gt; with a class &lt;code&gt;absolute-three&lt;/code&gt;, and it's lightskyblue colored parent &lt;code&gt;section&lt;/code&gt; with class &lt;code&gt;section&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Note how this time the absolute &lt;code&gt;div.absolute-three&lt;/code&gt; is positioned relatively within the parent and not the document.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;The code for the above example is:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="nc"&gt;.section&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.absolute-three&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the final codepen here: &lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/bhaaratii/embed/KKmgqON?height=600&amp;amp;default-tab=html,css&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-fixed"&gt;
  &lt;/a&gt;
  4. Fixed
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When &lt;strong&gt;&lt;em&gt;&lt;code&gt;position: fixed;&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; is applied to an element, it is taken &lt;em&gt;out of the the normal flow of the document&lt;/em&gt; similar to &lt;a href="#3-absolute"&gt;Absolute Position&lt;/a&gt;.

&lt;ul&gt;
&lt;li&gt;The main difference is that the &lt;strong&gt;&lt;em&gt;&lt;code&gt;position: fixed;&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; element is not given space in the layout.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;The fixed element is not affected by scrolling, and remains in the specified position depending on the &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt; values.&lt;/li&gt;
&lt;li&gt;The positioned element is relative to the document except when it's ancestors have &lt;strong&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;perspective&lt;/code&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/strong&gt; property applied with a value other than &lt;strong&gt;&lt;em&gt;none&lt;/em&gt;&lt;/strong&gt;. 

&lt;ul&gt;
&lt;li&gt;Then, the ancestor behaves as the relative parent.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Check out the example below. The text &lt;code&gt;div&lt;/code&gt; with blue background has a class &lt;code&gt;fixed&lt;/code&gt; and &lt;strong&gt;&lt;code&gt;position: fixed&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wEwD1oma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op5t9su8dwx0wn0d9e6z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEwD1oma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op5t9su8dwx0wn0d9e6z.png" alt="Element with fixed position"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The code for the above example is:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.fixed&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check out the codepen here&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/bhaaratii/embed/KKmgXpe?height=600&amp;amp;default-tab=html,css&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-sticky"&gt;
  &lt;/a&gt;
  5. Sticky
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;When &lt;strong&gt;&lt;em&gt;&lt;code&gt;position: sticky;&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; is applied to an element, it is positioned in the the normal flow of the document similar to &lt;a href="https://dev.to!#2-relative"&gt;Relative Position&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;But as the element is scrolled within the positioned ancestor, it becomes fixed once the offset value specified in &lt;strong&gt;&lt;code&gt;top&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;right&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;left&lt;/code&gt;&lt;/strong&gt; properties are crossed.&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For e.g. look at the image below of a header.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--46leBLCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g2zdyizf0azdtxfgs15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--46leBLCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3g2zdyizf0azdtxfgs15.png" alt="Header with sticky positione"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The header's parent is the document, and it's &lt;strong&gt;&lt;em&gt;"sticky"&lt;/em&gt;&lt;/strong&gt; within it. As you scroll and the header is &lt;em&gt;0 away from top&lt;/em&gt;, i.e. &lt;code&gt;top: 0;&lt;/code&gt;, it becomes a fixed positioned element.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;The code for the above example is:&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="nc"&gt;.hero&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sticky&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;Let's deal with another scenario. But this time let's use an element that is positioned &lt;strong&gt;sticky&lt;/strong&gt; within another positioned ancestor.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5jstazMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m5erk9eb3fsumbe9fzse.png" alt="Element with sticky position within a relative positioned ancestor"&gt;

&lt;ul&gt;
&lt;li&gt;In this scenario, the sticky positioned element (text with blue colored background) has a class of &lt;code&gt;sticky&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;It's parent is the &lt;code&gt;section&lt;/code&gt; with class &lt;code&gt;section&lt;/code&gt;, and has a &lt;code&gt;lightskyblue background&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;As you scroll down and &lt;code&gt;div.sticky&lt;/code&gt; is &lt;code&gt;5px&lt;/code&gt; away from the top, it becomes a fixed element. Before that it remains as relatively positioned element.&lt;/li&gt;
&lt;li&gt;But there is a catch here. As the parent &lt;code&gt;section.section&lt;/code&gt; scrolls away from the layout, so does the div with &lt;strong&gt;sticky&lt;/strong&gt; position of. It no longer remains fixed, and now becomes relative again.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zO_qXWQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9iecnxamfkq9lethmxnk.png" alt="Element with position sticky within relative positioned ancestor"&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hence the sticky (in particular fixed) behavior of an element remains only within it's closest positioned parent.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The code for the above example is:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;  &lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="nc"&gt;.section&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.sticky&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;sticky&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Check the entire codepen here:&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/bhaaratii/embed/BaRLmaG?height=600&amp;amp;default-tab=html,css&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION
&lt;/h2&gt;

&lt;p&gt;Phew! That was a lot. Wasn't it?&lt;/p&gt;

&lt;p&gt;I understand that sometimes CSS can be overwhelming but trust me, as you practice the concepts become clearer.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;code&gt;position&lt;/code&gt;&lt;/strong&gt; property is very important, and comes in handy in various scenarios.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out the demos I explained in this post &lt;a href="https://demystifying-css-position.netlify.app/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;relative&lt;/code&gt; and &lt;code&gt;absolute&lt;/code&gt; positions are often used, and mostly together when you have pseudo elements. 

&lt;ul&gt;
&lt;li&gt;These positions are also often used to stack items. &lt;/li&gt;
&lt;li&gt;The combination of &lt;code&gt;absolute&lt;/code&gt; position within &lt;code&gt;relative&lt;/code&gt; position is common, and is used to add styles such as shadows to elements.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;sticky&lt;/code&gt; position can be used for headers and navbar as shown in the example for &lt;a href="#5-sticky"&gt;Sticky&lt;/a&gt; above.

&lt;ul&gt;
&lt;li&gt;It could also be used in cases when you want to keep an element fixed on the page as long as the positioned parent/ ancestor is visible on the viewport.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;These are not the only available use cases of &lt;code&gt;position&lt;/code&gt; property. I highly recommend you to practice and get your hands dirty to understand these concepts in depth.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Thank you so much for reading this post! &lt;/p&gt;

&lt;p&gt;This was my final blog post on CSS. In the coming posts, I will focus on JavaScript and try to explain few vital concepts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;If you liked this post then please help me out giving it a heart, unicorn or a pin!&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
Do share it among your dev friends, and comment down what you feel!&lt;/p&gt;





&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  RESOURCES:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/P6UgYq3J3Qs"&gt;Absolute and Relative Position Explained by Kevin Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/lUaw-AA9HnA"&gt;Practical Examples of Absolute Position by Kevin Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/8TyoihVGErI"&gt;Things you can do with Position Sticky by Kevin Powell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position"&gt;CSS Position MDN docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>My journey as a Google Developer Student Club Lead</title>
      <author>Amit Tomar</author>
      <pubDate>Sun, 11 Jul 2021 05:08:15 +0000</pubDate>
      <link>https://dev.to/amittomar/my-journey-as-a-google-developer-student-club-lead-3il1</link>
      <guid>https://dev.to/amittomar/my-journey-as-a-google-developer-student-club-lead-3il1</guid>
      <description>&lt;p&gt;I have recently completed my one-year tenure as a Google Developer Student Club Lead. And I chose to pen down my journey of establishing a club from 0 to make it a 500+ members club completely online and remotely.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mxyeASMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxvm0wjv4hkhgx9n9r59.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mxyeASMy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxvm0wjv4hkhgx9n9r59.jpeg" alt="GDSC Lead Certificate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So it all started in 2019, I was in 2nd year and I saw a couple of posts regarding the Developer Student Club lead selection. I searched about it on Google and learned that it is a club for students interested in Google technologies. As I already missed the deadline for India, I started preparing for the 2020 cohort. I worked on my interpersonal and gained some industry experience. &lt;/p&gt;

&lt;p&gt;I applied for DSC lead in 2020, I was selected for an interview and later I cleared that interview and finally became the first Google Developer Student Club Lead from my college. I was on cloud nine and it was like a dream come true for me. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUL_ZeoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwug9ce2in1tpdbxubyg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUL_ZeoL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwug9ce2in1tpdbxubyg.jpg" alt="GDSC Selection mail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was onboarded and even got a cool welcome kit. View the unboxing video &lt;a href="https://www.youtube.com/watch?v=G6cSQxLqwCI&amp;amp;t=4s"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--et_PcNd2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fio3pigjvv21nas5yb4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--et_PcNd2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fio3pigjvv21nas5yb4.jpg" alt="GDSC Welcome kit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My first responsibility as a DSC lead was to form a team. Actually, we don’t have a developer community environment in our college. Students are more interested in grades and competitive coding. They are unaware of the advantage of being connected to a community. [Hopefully, things are changing now.]&lt;/p&gt;

&lt;p&gt;I started with team formation. I would like to thank Dhruv Sharma, my classmate and core team member of our club. He helped me throughout the whole process. We mailed to all the students of our college that we are looking for core team members and in 2-3 days, we received 300+ applications. We shortlisted 70 students for interviews and then selected 12 students for our core team. We had our first team call online where we discussed everyone’s responsibility, challenges, and goals.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EVRn8bkJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/da7beu6owmq6cssu1cbt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EVRn8bkJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/da7beu6owmq6cssu1cbt.jpeg" alt="GDSC Team call"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our second task was to introduce everyone on our campus to the Club and its aim. Somehow we managed to organize an introductory session with the help of our college and team. Later we created WhatsApp groups and Slack channels to communicate with our community members. &lt;/p&gt;

&lt;p&gt;Initially, things were difficult for us because if you are managing a club in your campus physical then it is easy to communicate with the team and community members but running a club completely online is surely a difficult task. &lt;/p&gt;

&lt;p&gt;Somehow we managed everything at the right pace and we were all set to start our journey. Our first event was Explore ML, and we got 120+ registrations and 80+ attendees. Later we organized events on multiple topics like Open source, Android, Cloud computing, interview preparation, Flutter, Kotline, Community, Entrepreneurship, etc.&lt;/p&gt;

&lt;p&gt;We also hosted some giveaways to keep our community members engaged and most of our events had some goodies and swags as prizes. &lt;/p&gt;

&lt;p&gt;After one year’s hard work, some of our club’s statics are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total registered community members:&lt;/strong&gt; 584&lt;br&gt;
&lt;strong&gt;Total events organized:&lt;/strong&gt; 15&lt;br&gt;
&lt;strong&gt;Average event registrations:&lt;/strong&gt; 117&lt;/p&gt;

&lt;p&gt;On 27th July 2021, We organized our last event where we invited Mrs. Mekhla Mukherjee(Global Open source community leader, Wipro) and Mr. Snehanshu Gandhi(Founder &amp;amp; Director, Kaagaz Scanner). And I graduated as a Google Developer Student Club lead on 1st July with an online graduation ceremony. &lt;/p&gt;

&lt;p&gt;We managed every event and program completely online. There are some members in my team, I never met in person. Still, we managed all the things very well. That’s why I would like to give the whole credit to my awesome team for everything they have done. &lt;/p&gt;

&lt;p&gt;The program improved my communication, team management, and leadership skills. I made some new connections and learned a lot of new things. To know more about the program, visit &lt;a href="https://developers.google.com/community/dsc"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>5 awesome CSS tricks you did not know</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 11 Jul 2021 04:05:57 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/5-awesome-css-tricks-you-did-not-know-2j4a</link>
      <guid>https://dev.to/ruppysuppy/5-awesome-css-tricks-you-did-not-know-2j4a</guid>
      <description>&lt;p&gt;Learning &lt;strong&gt;CSS&lt;/strong&gt; is a life long journey. Everyday some new feature is coming up. With that said, there are quite a few features that I find to be used rarely, even though they are immensely helpful. This article is a short compilation of 5 such awesome &lt;strong&gt;CSS&lt;/strong&gt; tricks that can take your skills to next level or simplify your workflow.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-css-variables"&gt;
  &lt;/a&gt;
  1. &lt;strong&gt;CSS&lt;/strong&gt; variables
&lt;/h1&gt;

&lt;p&gt;Variables can immensely help you keep your code &lt;strong&gt;DRY&lt;/strong&gt; (Don't Repeat Yourself). You don't need &lt;strong&gt;SCSS&lt;/strong&gt; to leverage the power of variables in your stylesheets, vanilla &lt;strong&gt;CSS&lt;/strong&gt; supports it as well. The syntax for creating a variable in &lt;strong&gt;CSS&lt;/strong&gt; is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--variable-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The value can store anything such as: &lt;code&gt;10px&lt;/code&gt;, &lt;code&gt;20rem&lt;/code&gt;, &lt;code&gt;#ffffff&lt;/code&gt;, &lt;code&gt;box-shadow: 0px 0px 0px 0px rgb(0,0,0)&lt;/code&gt;, etc. and can be used with any &lt;strong&gt;CSS&lt;/strong&gt; selector, but it is the convention to declare the variables in the &lt;code&gt;:root&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can use variable with any parameter such as &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;background&lt;/code&gt;, etc:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.selector&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;&amp;lt;param&amp;gt;:&lt;/span&gt; &lt;span class="err"&gt;var(--variable-name);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Variables can be used to create awesome effects such as the &lt;a href="https://dev.to/ruppysuppy/dark-mode-using-css-variables-1m3"&gt;&lt;strong&gt;Dark Mode&lt;/strong&gt;&lt;/a&gt; given below with great ease.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ruppysuppy/embed/eYBEogP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-clip-path"&gt;
  &lt;/a&gt;
  2. Clip Path
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;clip path&lt;/code&gt; property makes creating some cool shapes in your websites a walk in the park. &lt;a href="https://tapajyoti-bose.vercel.app"&gt;A simple example&lt;/a&gt; of &lt;code&gt;clip path&lt;/code&gt; usage is given below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0fhmT-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkgz2btjivsck7wjkwy2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0fhmT-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkgz2btjivsck7wjkwy2.PNG" alt="Portfolio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The syntax for &lt;code&gt;clip-path&lt;/code&gt; in &lt;strong&gt;CSS&lt;/strong&gt; is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.selector&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can generate simple &lt;code&gt;clip paths&lt;/code&gt; using &lt;a href="https://bennettfeely.com/clippy/"&gt;Clippy&lt;/a&gt;, or develop custom &lt;code&gt;clip paths&lt;/code&gt; for advanced shapes like:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ruppysuppy/embed/MWmjbNW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This pen was developed by &lt;a href="https://codepen.io/jkantner"&gt;Jon Kantner&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-text-ellipsis"&gt;
  &lt;/a&gt;
  3. Text Ellipsis
&lt;/h1&gt;

&lt;p&gt;There are often situations where you would like to handle how the overflow text appears in your website, &lt;code&gt;text-overflow&lt;/code&gt; property is the way to go in such situations. It has a pre-requisite to forcefully make the text overflow as &lt;code&gt;text-overflow&lt;/code&gt; only handles how the overflown text appears.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Pre-requisite */&lt;/span&gt;
&lt;span class="nt"&gt;overflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;white-space&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;nowrap&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On adding &lt;code&gt;text-overflow: ellipsis;&lt;/code&gt; the overflown text gets clipped and '...' appears at the end of the text&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ruppysuppy/embed/JjNREYN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-custom-cursor"&gt;
  &lt;/a&gt;
  4. Custom Cursor
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; already comes with a plethora of cursors which you can use with &lt;code&gt;cursor: &amp;lt;cursor name&amp;gt;&lt;/code&gt;. Something most people don't know is that you can make your own cursors from images using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;cursor&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;"&amp;lt;link to image&amp;gt;"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="nt"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Cursors are not visible in mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/geoffgraham/embed/qZjwGe?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This pen was developed by &lt;a href="https://codepen.io/geoffgraham"&gt;Geoff Graham&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-autoresize-background-image"&gt;
  &lt;/a&gt;
  5. Auto-resize Background Image
&lt;/h1&gt;

&lt;p&gt;As a beginner, I used to struggle a lot with handling background images. There is a simple method to let &lt;strong&gt;CSS&lt;/strong&gt; handle the background image resizing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;background-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ruppysuppy/embed/mdmrLaV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article you learnt a few advanced tricks to show-off in front of your friends and take your skills to the next level. Keep learning and practicing and you surely will become an outstanding developer ;)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#workspace-setup"&gt;
  &lt;/a&gt;
  Workspace Setup
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The links given below are affiliate links. If you buy the items from these links, I will receive a small commission at &lt;strong&gt;NO&lt;/strong&gt; additional cost to you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#us-links"&gt;
  &lt;/a&gt;
  US Links
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;i5 10th Gen Processor:&lt;/strong&gt; &lt;a href="https://amzn.to/3i7Yudt"&gt;https://amzn.to/3i7Yudt&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;GTX 1060 6 GB:&lt;/strong&gt; &lt;a href="https://amzn.to/3AKxXLK"&gt;https://amzn.to/3AKxXLK&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Corsair Vengeance LPX 8 GB RAM:&lt;/strong&gt; &lt;a href="https://amzn.to/3yGa8ms"&gt;https://amzn.to/3yGa8ms&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Redragon Gaming Keyboard and Mouse:&lt;/strong&gt; &lt;a href="https://amzn.to/3ywvbrs"&gt;https://amzn.to/3ywvbrs&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#india-links"&gt;
  &lt;/a&gt;
  India Links
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;i5 10th Gen Processor:&lt;/strong&gt; &lt;a href="https://amzn.to/3qXSEiE"&gt;https://amzn.to/3qXSEiE&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;GTX 1660 6 GB:&lt;/strong&gt; &lt;a href="https://amzn.to/2UxdOYM"&gt;https://amzn.to/2UxdOYM&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Corsair Vengeance LPX 2x8 GB RAM:&lt;/strong&gt; &lt;a href="https://amzn.to/3e0jDVH"&gt;https://amzn.to/3e0jDVH&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Zebronics Gaming Keyboard and Mouse:&lt;/strong&gt; &lt;a href="https://amzn.to/3AHQnfX"&gt;https://amzn.to/3AHQnfX&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>ux</category>
      <category>html</category>
    </item>
    <item>
      <title>LinkedList Questions: Middle Element of Linked List - Naive Approach</title>
      <author>Kathan Vakharia</author>
      <pubDate>Sun, 11 Jul 2021 03:35:26 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/middle-element-of-linked-list-naive-approach-2589</link>
      <guid>https://dev.to/kathanvakharia/middle-element-of-linked-list-naive-approach-2589</guid>
      <description>&lt;p&gt;In this series of posts, I will discuss coding questions on the &lt;code&gt;LinkedList&lt;/code&gt; Data structure.&lt;br&gt;
The posts in this series will be organized in the following way,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Question Link ❓&lt;/li&gt;
&lt;li&gt;Possible Explanation 📝&lt;/li&gt;
&lt;li&gt;Documented C++ Code 🧹&lt;/li&gt;
&lt;li&gt;Time and Space Complexity Analysis ⌛🌌&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-question"&gt;
  &lt;/a&gt;
  The Question
&lt;/h2&gt;

&lt;p&gt;Given a non-empty, singly linked list with head node &lt;code&gt;head&lt;/code&gt;, return a middle node of the linked list.&lt;/p&gt;

&lt;p&gt;If there are two middle nodes, return the second middle node.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://leetcode.com/problems/middle-of-the-linked-list/"&gt;https://leetcode.com/problems/middle-of-the-linked-list/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 Give yourself at least 15-20 mins to figure out the solution :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h2&gt;

&lt;p&gt;The naive approach is very simple but it is important to understand &lt;em&gt;what&lt;/em&gt; &amp;amp; &lt;em&gt;why&lt;/em&gt; we are doing this to fully understand the optimized approach. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Find the length of LinkedList → &lt;code&gt;L&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Find the position (from start) of the node to be deleted: &lt;code&gt;floor(L/2) + 1&lt;/code&gt; → &lt;code&gt;K&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;eg: for &lt;code&gt;L = 5&lt;/code&gt;, required node is &lt;code&gt;3 = floor(5/2) + 1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;eg: for &lt;code&gt;L = 6&lt;/code&gt;, required node is &lt;code&gt;4 = floor(6/2) + 1&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reach the &lt;code&gt;Kth&lt;/code&gt; node in &lt;strong&gt;K-1&lt;/strong&gt; iterations and return it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  C++ Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#definition-of-linked-list"&gt;
  &lt;/a&gt;
  Definition of Linked List
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Definition for singly-linked list.&lt;/span&gt;
&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;ListNode&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nf"&gt;middleNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ListNode&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="c1"&gt;//- finding length of LL : O(n)&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;//pointing temp to head again&lt;/span&gt;
        &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;nodeNo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//doesn't matter if count is odd or even&lt;/span&gt;

        &lt;span class="c1"&gt;//-Time: O(k-1)&lt;/span&gt;
        &lt;span class="c1"&gt;//If I want to reach kth node, I need to go k-1 deep&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;nodeNo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#complexity-analysis"&gt;
  &lt;/a&gt;
  Complexity Analysis
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#time-complexity-on"&gt;
  &lt;/a&gt;
  Time Complexity: O(n)
&lt;/h3&gt;

&lt;p&gt;O(n) for finding length of List + O(n/2) for reaching the required node = O(n)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#space-complexity-o1"&gt;
  &lt;/a&gt;
  Space Complexity: O(1)
&lt;/h3&gt;

&lt;p&gt;We didn't use any extra space&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>cpp</category>
      <category>codenewbie</category>
      <category>linkedlist</category>
    </item>
    <item>
      <title>How to build a website in markdown</title>
      <author>Siddharth</author>
      <pubDate>Sun, 11 Jul 2021 03:19:50 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/how-to-build-a-website-in-markdown-3bm7</link>
      <guid>https://dev.to/siddharthshyniben/how-to-build-a-website-in-markdown-3bm7</guid>
      <description>&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tr&gt;
&lt;td colspan="2"&gt;
&lt;h1 id="top"&gt;Hey there!&lt;/h1&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;h2&gt;Menu&lt;/h2&gt;
&lt;a href="#top"&gt;Top&lt;/a&gt;&lt;br&gt;
&lt;a href="#what"&gt;What?&lt;/a&gt;&lt;br&gt;
&lt;a href="#how"&gt;How?&lt;/a&gt;&lt;br&gt;
&lt;a href="#why"&gt;Why?&lt;/a&gt;&lt;br&gt;
&lt;a href="#when"&gt;When?&lt;/a&gt;&lt;br&gt;
&lt;a href="#where"&gt;Where?&lt;/a&gt;&lt;br&gt;
&lt;a href="#who"&gt;Who?&lt;/a&gt;&lt;br&gt;
This thing is in the middle of the page because of the DEV Markdown parser. Go &lt;a href="https://gist.github.com/SiddharthShyniben/2e33d096f6173ae8688ca046ded151cd"&gt;Here&lt;/a&gt; for a better one
&lt;/td&gt;
&lt;td&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;h2 id="what"&gt;What?&lt;/h2&gt;
I just got bored so I just made a website using a tables like in the old days (Just for fun)&lt;br&gt;&lt;br&gt;
Doesn't it look cool? No CSS (except DEV's default stylesheet, no JavaScript, just good 'ol HTML.&lt;br&gt;&lt;br&gt;
I mean, I can't believe I built this. I'm so bad at CSS. Not like I used any CSS.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;h2 id="how"&gt;How?&lt;/h2&gt;
This is just a bunch of tables. Here's what it looks like in pseudocode:&lt;br&gt; 
&lt;pre class="highlight html"&gt;&lt;code&gt;table
    row 
        top menu thingy spanning 2 cols
    row 
        side menu thingy
        content
            another table
                row
                    column with content
                row
                    column with content
                ...
    row
        footer spanning 2 cols
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h4&gt;...Wait. So this is HTML, not markdown right?&lt;/h4&gt;

Yeah I guess, pretty much HTML. But &lt;strong&gt;limited&lt;/strong&gt; HTML.

&lt;h4&gt;You can't put markdown in HTML. S- S- So, Did you t- t- type out all this (gulp) HTML?&lt;/h4&gt;

Yes I did. It took some time to figure out how to highlight code blocks and stuff, but I did eventually did it.&lt;br&gt;

&lt;h4&gt;So, how good is this?&lt;/h4&gt;

Really bad, like literally the worst. &lt;br&gt;&lt;br&gt;

This is really hard to maintain. Like seriously, I spent half an hour putting together the table (not the content!)&lt;br&gt;&lt;br&gt;

There's a lot more stuff to think about, like the fact that &lt;a href="https://stackoverflow.com/questions/83073/why-not-use-tables-for-layout-in-html#:~:text=the%20layout%20algorithm%20for%20tables%20is%20much%20harder%2C%20the%20browser%20often%20has%20to%20wait%20for%20the%20whole%20table%20to%20load%20before%20it%20can%20begin%20to%20layout%20the%20content."&gt;tables load kinda slower&lt;/a&gt;&lt;br&gt;&lt;br&gt;

This thing is literally two nested tables. Lets not start talking about a11y.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;h2 id="why"&gt;Why?&lt;/h2&gt;

Fun.&lt;br&gt;&lt;br&gt;

(I just really felt like something was missing)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;h2 id="when"&gt;When?&lt;/h2&gt;

Fri Jul 09 2021 21:38:33 GMT+0530 (India Standard Time)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;h2 id="where"&gt;Am I missing something?&lt;/h2&gt;

I got this feeling that something should be here...
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;
&lt;h2 id="who"&gt;Who?&lt;/h2&gt;

&lt;a class="mentioned-user" href="https://dev.to/siddharthshyniben"&gt;@siddharthshyniben&lt;/a&gt;
 (Finally I don't have to use markdown for this.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;




&lt;/td&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;td colspan="2"&gt;Footer (probably)&lt;br&gt;Go &lt;a href="https://gist.github.com/SiddharthShyniben/2e33d096f6173ae8688ca046ded151cd"&gt;Here&lt;/a&gt; for a better one&lt;/td&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>markdown</category>
    </item>
    <item>
      <title>Loading Circle Progress</title>
      <author>Pierre Oliveira</author>
      <pubDate>Sun, 11 Jul 2021 02:31:19 +0000</pubDate>
      <link>https://dev.to/pierreoliveira1/loading-circle-progress-5cp5</link>
      <guid>https://dev.to/pierreoliveira1/loading-circle-progress-5cp5</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/pierreoliveira1/embed/VwbKywg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Flutter &amp; Dart Tips - Week In Review #5</title>
      <author>Offline Programmer</author>
      <pubDate>Sun, 11 Jul 2021 01:36:51 +0000</pubDate>
      <link>https://dev.to/offlineprogrammer/flutter-dart-tips-week-in-review-5-15be</link>
      <guid>https://dev.to/offlineprogrammer/flutter-dart-tips-week-in-review-5-15be</guid>
      <description>&lt;p&gt;Hello Reader,&lt;/p&gt;

&lt;p&gt;In this post, I'll share the Flutter\Dart tips I tweeted last week. One of those tweets got more than 35 likes. Can you guess which one?&lt;/p&gt;

&lt;p&gt;1- AppBar is the topmost component of the app (or sometimes the bottom-most), the AppBar’s layout contains three components: leading, title, and actions&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;
    &lt;span class="nd"&gt;@override&lt;/span&gt;
    &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;'App Title'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;centerTitle:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;actions:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
            &lt;span class="n"&gt;IconButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;logout&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{},&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;],&lt;/span&gt;
          &lt;span class="nl"&gt;backgroundColor:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;yellowAccent&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
          &lt;span class="nl"&gt;elevation:&lt;/span&gt; &lt;span class="mf"&gt;50.0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;leading:&lt;/span&gt; &lt;span class="n"&gt;IconButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="nl"&gt;tooltip:&lt;/span&gt; &lt;span class="s"&gt;'Menu Icon'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{},&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//IconButton&lt;/span&gt;
          &lt;span class="nl"&gt;brightness:&lt;/span&gt; &lt;span class="n"&gt;Brightness&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dark&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"Enjoy"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;TextStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;fontSize:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//Text&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;//Center&lt;/span&gt;
      &lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Scaffold;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2- To write any Dart program, be it a script or a Flutter app, you must define a function called main(). It is the entry point of every app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'London'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Dublin'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Paris'&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${list.indexOf(item)}&lt;/span&gt;&lt;span class="s"&gt;: &lt;/span&gt;&lt;span class="si"&gt;$item&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;});&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3- You can change the text color of a button when it’s pressed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;
    &lt;span class="n"&gt;TextButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{},&lt;/span&gt;
        &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;ButtonStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;foregroundColor:&lt;/span&gt; &lt;span class="n"&gt;MaterialStateProperty&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolveWith&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;
            &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MaterialState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;states&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MaterialState&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pressed&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pink&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Defer to the widget's default.&lt;/span&gt;
        &lt;span class="o"&gt;}),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;'Change My Color'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;TextStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;fontSize:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4- The example below is about running a code after dismissing a GetX dialog.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;
    &lt;span class="n"&gt;Get&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dialog&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyAlert&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;then&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;runSomeCode&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5- Enums and extension methods can make code cleaner to read. In the example below, we are converting Enums to Strings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;
    &lt;span class="kt"&gt;enum&lt;/span&gt; &lt;span class="n"&gt;Cities&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="n"&gt;London&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dublin&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Paris&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="n"&gt;ToString&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Cities&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;last&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;London&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Dublin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Paris&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6- Dart allows you to create a callable class so you can call the instance of the class as a function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;
    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WelcomeToTheCity&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Defining call method&lt;/span&gt;
    &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;'Welcome to &lt;/span&gt;&lt;span class="si"&gt;$a$b$c&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;welcome_to_city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WelcomeToTheCity&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// Calling the class through its instance&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;welcome_msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;welcome_to_city&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SanDiego '&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'CA '&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'USA'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;welcome_msg&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See you next week. 👋🏻&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Follow me on &lt;a href="https://twitter.com/_Mo_Malaka_"&gt;Twitter&lt;/a&gt; for more tips about #coding, #learning, #technology...etc.&lt;/p&gt;

&lt;p&gt;Check my Apps on &lt;a href="https://bit.ly/3h05gQ7"&gt;Google Play&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;Cover image &lt;a href="https://unsplash.com/@clemono?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Clem Onojeghuo&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/guess?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>flutter</category>
      <category>dart</category>
    </item>
    <item>
      <title>Snowy’s eating — tweeting my cats weight &amp; dining habits with a Raspberry Pi</title>
      <author>Simon Aubury</author>
      <pubDate>Sun, 11 Jul 2021 01:16:21 +0000</pubDate>
      <link>https://dev.to/saubury/snowy-s-eating-tweeting-my-cats-weight-dining-habits-with-a-raspberry-pi-2geh</link>
      <guid>https://dev.to/saubury/snowy-s-eating-tweeting-my-cats-weight-dining-habits-with-a-raspberry-pi-2geh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#snowys-eating%E2%80%8A%E2%80%8Atweeting-my-cats-weight-amp-dining-habits-with-a-raspberry-pi"&gt;
  &lt;/a&gt;
  Snowy’s eating — tweeting my cats weight &amp;amp; dining habits with a Raspberry Pi
&lt;/h1&gt;

&lt;p&gt;Our cat Snowy 😸 has been enjoying her meals over winter. I wanted to start collecting data on her eating habits, and analyse her weight over time. This data is collected with food and cat weight measurements; alongside phots taken by two cameras. Data is collected and images processed locally using a Raspberry Pi. At the risk of body-shaming our cat, updates are posted regularly to Twitter snowydata.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RwRvSmxm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ARxjb937E4c_vZTwvDfppQw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwRvSmxm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ARxjb937E4c_vZTwvDfppQw.png" alt="Snowy enjoying her food while being measured"&gt;&lt;/a&gt;&lt;em&gt;Snowy enjoying her food while being measured&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-overview"&gt;
  &lt;/a&gt;
  Project Overview
&lt;/h2&gt;

&lt;p&gt;There are two scales — one for weighing the cat; and an independent weight measure for her food. As Snowy enters the cat scale, an initial measurement is taken for her current weight along with an starting weight for her food. An overhead and lateral camera takes a photo every 5 seconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2BZ0m_VW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AWCcP3Oc_1yifpQ-OT1B8FQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2BZ0m_VW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AWCcP3Oc_1yifpQ-OT1B8FQ.png" alt="Diagram indicting two scales and camera placement"&gt;&lt;/a&gt;&lt;em&gt;Diagram indicting two scales and camera placement&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When Snowy leaves the cat scale, a calculation is made between the initial and current cat and food weight measurements to determine how much food has been eaten and her current weight. Two camera images are selected, text is overlaid the photos — and a Tweet is sent to announce her latest meal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hardware-how-much-food"&gt;
  &lt;/a&gt;
  Hardware — how much food?
&lt;/h2&gt;

&lt;p&gt;I needed to build two scales — one for the food and one for the cat. So another excuse for online &lt;a href="https://www.aliexpress.com/w/wholesale-10kg-load-cell.html"&gt;shopping&lt;/a&gt; for a collection of load cells and load cell amplifiers.&lt;/p&gt;

&lt;p&gt;Load cells are pretty neat. They measure weight (or, more accurately, directional force). Each load cell is able to measure the electrical resistance that changes in response to (and is proportional to) the force applied.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p07l0Mww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A27YdoSiHYb8E537Zw85rTg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p07l0Mww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A27YdoSiHYb8E537Zw85rTg.png" alt="A “straight bar” load cell"&gt;&lt;/a&gt;&lt;em&gt;A “straight bar” load cell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For weighting the food; I used a single “straight bar” load cell which can translate up to 1kg of pressure (force) into an electrical signal. To weigh the food I had the load cell mounted between two wooden boards. The weight of the food is measured by the strain resistance measured across the load cell.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRtqzgbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AQcwL4fF571fTutnxCq0aiA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRtqzgbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AQcwL4fF571fTutnxCq0aiA.png" alt="Load cell mounted between boards"&gt;&lt;/a&gt;&lt;em&gt;Load cell mounted between boards&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A load cell amplifier is used to get measurable data out from a load cell. I used an &lt;a href="https://learn.sparkfun.com/tutorials/load-cell-amplifier-hx711-breakout-hookup-guide/all"&gt;HX711&lt;/a&gt; — which is an analogue-to-digital converter (ADC) designed to act as interface between the analogue world of weigh sensors to a digital input for the Raspberry Pi.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hardware-cat-weight"&gt;
  &lt;/a&gt;
  Hardware — cat weight
&lt;/h2&gt;

&lt;p&gt;To accurately weigh Snowy I needed a larger scale. I wanted a surface large enough for her body and tail so she could be weighted whist she was eating. The first step required measuring the length of a cat&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--arQ4jFcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2178/1%2Atzam3spbULWE0mCKc1ScIg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--arQ4jFcZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2178/1%2Atzam3spbULWE0mCKc1ScIg.png" alt="Snowy was not helpful when I tried to measure her length"&gt;&lt;/a&gt;&lt;em&gt;Snowy was not helpful when I tried to measure her length&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I used four load cell weighing sensors — one for each corner of the cat weighing station. The &lt;a href="https://www.aliexpress.com/item/32968926628.html"&gt;50kg load cells and another HX711&lt;/a&gt; amplifier module was around $5. The peculiar thing about these sensors is they don’t sit flush to a surface, and the centre of each sensor needs a gap for it to flex when a load is applied. You can 3D print &lt;a href="https://www.thingiverse.com/thing:2274593"&gt;a bracket&lt;/a&gt; — but I found I could build 4 brackets with some scrap wood cut with a Dremel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IyLaFyPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AIqrROKKQ3xEJv16hQ5JFvQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IyLaFyPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AIqrROKKQ3xEJv16hQ5JFvQ.png" alt="Offset bracket for load cell"&gt;&lt;/a&gt;&lt;em&gt;Offset bracket for load cell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The wooden brackets provided sufficient clearance for the foot of the load cell to flex, while still holding the perimeter of the sensor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27YuYYyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2238/1%2A0qOJsEIT9vRdiJ8wpeSXpA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27YuYYyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2238/1%2A0qOJsEIT9vRdiJ8wpeSXpA.png" alt="Closeup of wooden mounting bracket"&gt;&lt;/a&gt;&lt;em&gt;Closeup of wooden mounting bracket&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The four load cells are wired into a single circuit with the HX711 amplifier module in a &lt;a href="https://en.wikipedia.org/wiki/Wheatstone_bridge"&gt;wheatstone bridge&lt;/a&gt; configuration — have a look at &lt;a href="https://circuitjournal.com/50kg-load-cells-with-HX711"&gt;this helpful blog&lt;/a&gt; for the detailed steps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WNqijtTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ANh7NE51RQLGq1l-p-iYxdw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WNqijtTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ANh7NE51RQLGq1l-p-iYxdw.png" alt="The four load cells are mounted to each corner and wired together"&gt;&lt;/a&gt;&lt;em&gt;The four load cells are mounted to each corner and wired together&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Finally I was ready to connect the five load cells to the two HX711 amplifier modules — and in turn to the &lt;a href="https://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt;; a tiny and very cheap computer. I found &lt;a href="https://tutorials-raspberrypi.com/digital-raspberry-pi-scale-weight-sensor-hx711/"&gt;this guide&lt;/a&gt; very helpful for providing wiring details to build a digital Raspberry Pi scale.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_X-4NO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2180/1%2Ad2_aezyZzwXph1IVw8NLvw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_X-4NO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2180/1%2Ad2_aezyZzwXph1IVw8NLvw.png" alt="Two HX711 amplifier modules connected to the Raspberry Pi"&gt;&lt;/a&gt;&lt;em&gt;Two HX711 amplifier modules connected to the Raspberry Pi&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#real-world-testing"&gt;
  &lt;/a&gt;
  Real world testing
&lt;/h2&gt;

&lt;p&gt;My first experiment was a dismal failure. After waiting an eternity for Snowy to approach the weigh station, she quickly discovered a flaw in my design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j1Nfuf-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2200/1%2AifceWiYDez7SwDtP7vWt0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j1Nfuf-0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2200/1%2AifceWiYDez7SwDtP7vWt0g.png" alt="Snowy avoiding the scale in version 1"&gt;&lt;/a&gt;&lt;em&gt;Snowy avoiding the scale in version 1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To encourage Snowy to step onto the scale when eating, I placed small triangular walls on the side of her feed station. This worked well, and Snowy appreciated the additional privacy while eating&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--53tgmr5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2154/1%2At4JgKOymbP7VpaIn8KXUVw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--53tgmr5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2154/1%2At4JgKOymbP7VpaIn8KXUVw.png" alt="Small walls around her food encouraged Snowy to stand on the scale"&gt;&lt;/a&gt;&lt;em&gt;Small walls around her food encouraged Snowy to stand on the scale&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A camera was mounted above and next to the feed station — and the entire contraption was painted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOWV4Y0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2206/1%2A27wYzB0HeWWz6AU_8yi4TA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOWV4Y0Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2206/1%2A27wYzB0HeWWz6AU_8yi4TA.png" alt="Final cat weigh station — now painted"&gt;&lt;/a&gt;&lt;em&gt;Final cat weigh station — now painted&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next
&lt;/h2&gt;

&lt;p&gt;This blog covers the initial hardware steps for the ongoing &lt;a href="https://github.com/saubury/catfit"&gt;catfit data project&lt;/a&gt;. Further blogs will describe data processing, trend analytics and data visualisation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Project files: &lt;a href="https://github.com/saubury/catfit"&gt;https://github.com/saubury/catfit&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Follow &lt;a href="https://twitter.com/SnowyBlackCat"&gt;Snowy The Cat (@SnowyBlackCat) / Twitter&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tutorials-raspberrypi.com/digital-raspberry-pi-scale-weight-sensor-hx711/"&gt;Build a digital Raspberry Pi Scale&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Depth First Search (DFS) Algorithm</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sat, 10 Jul 2021 22:31:57 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/depth-first-search-dfs-algorithm-3gjp</link>
      <guid>https://dev.to/ayabouchiha/depth-first-search-dfs-algorithm-3gjp</guid>
      <description>&lt;p&gt;Hi, today, we're going to talk about Depth First Search (&lt;strong&gt;DFS&lt;/strong&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#definition-of-depth-first-search"&gt;
  &lt;/a&gt;
  Definition of Depth First Search
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Depth First Search: is an algorithm for traversing or searching in tree or graph data structure using recursion and &lt;a href="https://dev.to/ayabouchiha/stack-data-structure-47ma"&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/a&gt; data structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#time-amp-space-complexity-of-depth-first-search-dfs"&gt;
  &lt;/a&gt;
  Time &amp;amp; Space complexity of Depth First Search (DFS)
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Space complexlity&lt;/th&gt;
&lt;th&gt;O(V)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Time complexity&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;O(V+E)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#depth-first-search-applications"&gt;
  &lt;/a&gt;
  Depth First Search applications
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Counting connected components&lt;/li&gt;
&lt;li&gt;Solving Sudoku Puzzles&lt;/li&gt;
&lt;li&gt;Topological sorting&lt;/li&gt;
&lt;li&gt;Pathfinding&lt;/li&gt;
&lt;li&gt;Finding Strongly Connected Components of a graph&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#depth-first-search-implementation-in-python"&gt;
  &lt;/a&gt;
  Depth First Search implementation in Python
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/edpresso/how-to-implement-depth-first-search-in-python"&gt;more details...&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# code from https://www.educative.io/edpresso/how-to-implement-depth-first-search-in-python
&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'A'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'C'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s"&gt;'B'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'D'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'E'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s"&gt;'C'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'F'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s"&gt;'D'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="s"&gt;'E'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'F'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s"&gt;'F'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;visited&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# Set to keep track of visited nodes.
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;neighbour&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;neighbour&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;#day_28&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-amp-useful-resources"&gt;
  &lt;/a&gt;
  References &amp;amp; useful Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.educative.io/edpresso/how-to-implement-depth-first-search-in-python"&gt;https://www.educative.io/edpresso/how-to-implement-depth-first-search-in-python&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph/"&gt;https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/tutorial/"&gt;https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/tutorial/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>algorithms</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Explained: Definition of done</title>
      <author>Mauro López</author>
      <pubDate>Sat, 10 Jul 2021 22:24:15 +0000</pubDate>
      <link>https://dev.to/maurolopezj/explained-definition-of-done-4nde</link>
      <guid>https://dev.to/maurolopezj/explained-definition-of-done-4nde</guid>
      <description>&lt;p&gt;As engineers, our responsibilities don't lie only in writing the code but also to develop a solution that meets standards of quality. To guarantee that quality it is recommended to define what we can expect from a ticket that is done, this is called “definition of done”.&lt;/p&gt;

&lt;p&gt;Normally, each team has its own definition of done. For sure, it can change between teams and commonly the responsibilities for developers are: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make sure to cover ticket accepts criteria&lt;/li&gt;
&lt;li&gt;Create Unit test to methods created and updated&lt;/li&gt;
&lt;li&gt;Make a pull request and attend requested changes if there is any&lt;/li&gt;
&lt;li&gt;Make sure Pull Request is closed before continues process&lt;/li&gt;
&lt;li&gt;Make smoke testing of ticket on controlled environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are sometimes due to any external situation where your work related to code is done but still the ticket does not satisfy what “done” means to the project, so even when it feels like it is done, the ticket is not yet!!! &lt;/p&gt;

&lt;p&gt;It’s very important to know that there exist mechanisms to manage this type of situation. All of them resume on raising your hand, but there are different ways you can raise the hand. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Meeting&lt;/li&gt;
&lt;li&gt;Official communication channel&lt;/li&gt;
&lt;li&gt;Ticket comments&lt;/li&gt;
&lt;li&gt;Email&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If daily meetings as stand up take place on your project, you must use them to mention the current situation and also, request the actions to remove the blocker. However, there is a phrase that says “words are gone with the wind”, so if you don't see any movement on your blocked ticket, you should use the official communication channel, as Slack for example, to remember the actions needed. If that doesn't solve the issue you can proceed to write a comment on the ticket and also flag it. If after all this, the situation persists, you can use the email to communicate and explain the context.    &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Always have present what “done” mean for your team and make sure your tickets meet those standards &lt;/li&gt;
&lt;li&gt;Is totally normal that a random situation appears and blocks your intention to make your ticket accomplish the definition of done, but raising your hand as soon as possible you can mitigate risks. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>devlive</category>
      <category>career</category>
    </item>
    <item>
      <title>4 common mistakes to avoid in a  job search</title>
      <author>Leon Wei</author>
      <pubDate>Sat, 10 Jul 2021 22:23:03 +0000</pubDate>
      <link>https://dev.to/leonwei/4-common-mistakes-to-avoid-in-a-job-search-3ll2</link>
      <guid>https://dev.to/leonwei/4-common-mistakes-to-avoid-in-a-job-search-3ll2</guid>
      <description>&lt;p&gt;Common mistakes to avoid in a job search: applying for dream company too early, generic resume, unprepared on behavioral questions, missing out on good opportunities, afraid of applying for big tech.&lt;/p&gt;

&lt;p&gt;Read more:&lt;br&gt;
&lt;a href="https://instamentor.com/articles/4-common-mistakes-to-avoid-in-a-job-search"&gt;https://instamentor.com/articles/4-common-mistakes-to-avoid-in-a-job-search&lt;/a&gt;&lt;/p&gt;

</description>
      <category>jobsearch</category>
      <category>jobsearchtips</category>
      <category>interview</category>
    </item>
  </channel>
</rss>
