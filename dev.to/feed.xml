<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>üöÄ10 Trending projects on GitHub for web developers - 9th July 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 09 Jul 2021 13:49:33 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-9th-july-2021-5gl6</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-9th-july-2021-5gl6</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-machine-learning-for-beginners"&gt;
  &lt;/a&gt;
  1. Machine Learning for Beginners
&lt;/h3&gt;

&lt;p&gt;12 weeks, 24 lessons, classic Machine Learning for all.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/microsoft"&gt;
        microsoft
      &lt;/a&gt; / &lt;a href="https://github.com/microsoft/ML-For-Beginners"&gt;
        ML-For-Beginners
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      12 weeks, 24 lessons, classic Machine Learning for all
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/5de80cbb57075704e04fe747ad3ad191aa6f34c131df08e56c0d64fd87abcfe8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6963726f736f66742f4d4c2d466f722d426567696e6e6572732e737667" alt="GitHub license"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/"&gt;&lt;img src="https://camo.githubusercontent.com/5928183d1e2b214910584f0a1a33cef45a70531548904b2257343e04d0b94249/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d6963726f736f66742f4d4c2d466f722d426567696e6e6572732e737667" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/issues/"&gt;&lt;img src="https://camo.githubusercontent.com/aab9f79d64b8b1bf143c160c806b5c79f6cee50240592502c57f312113f7383f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6d6963726f736f66742f4d4c2d466f722d426567696e6e6572732e737667" alt="GitHub issues"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/pulls/"&gt;&lt;img src="https://camo.githubusercontent.com/0a604cca2c6363c6af0501543ef3a6565b7b82fd2ff894be8e417cf8db7d27c3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f6d6963726f736f66742f4d4c2d466f722d426567696e6e6572732e737667" alt="GitHub pull-requests"&gt;&lt;/a&gt;
&lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/watchers/"&gt;&lt;img src="https://camo.githubusercontent.com/de9e0a6feb4334207b106185b7867b42c3d9fc189bc4adaf0b5733c93535353d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f6d6963726f736f66742f4d4c2d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d5761746368" alt="GitHub watchers"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/network/"&gt;&lt;img src="https://camo.githubusercontent.com/fd710b83bb546a380eb15d0d154fcf63736a675d1736a3cd8825e638eb882502/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6d6963726f736f66742f4d4c2d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/stargazers/"&gt;&lt;img src="https://camo.githubusercontent.com/cfd66469d198134664186871e4dbf0d45d4c3904e9ad51f553d55080d55b5af2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d6963726f736f66742f4d4c2d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d53746172" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Machine Learning for Beginners - A Curriculum&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;üåç Travel around the world as we explore Machine Learning by means of world cultures üåç&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about &lt;strong&gt;Machine Learning&lt;/strong&gt;. In this curriculum, you will learn about what is sometimes called &lt;strong&gt;classic machine learning&lt;/strong&gt;, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our forthcoming 'Data Science for Beginners' curriculum, as well!&lt;/p&gt;
&lt;p&gt;Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;‚úçÔ∏è Hearty thanks to our&lt;/strong&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/microsoft/ML-For-Beginners"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#2-petitevue"&gt;
  &lt;/a&gt;
  2. petite-vue
&lt;/h3&gt;

&lt;p&gt;petite-vue is an 5kb subset alternative distribution of Vue optimized for progressive enhancement. It provides the same template syntax and reactivity mental model with standard Vue. However, it is specifically optimized for "sprinkling" small amount of interactions on an existing HTML page rendered by a server framework&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vuejs"&gt;
        vuejs
      &lt;/a&gt; / &lt;a href="https://github.com/vuejs/petite-vue"&gt;
        petite-vue
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      5kb subset of Vue optimized for progressive enhancement
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
petite-vue&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;petite-vue&lt;/code&gt; is an alternative distribution of Vue optimized for progressive enhancement. It provides the same template syntax and reactivity mental model with standard Vue. However, it is specifically optimized for "sprinkling" small amount of interactions on an existing HTML page rendered by a server framework. See more details in &lt;a href="https://raw.githubusercontent.com/vuejs/petite-vue/main/#comparison-with-standard-vue"&gt;how it differs from standard Vue&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only ~5.8kb&lt;/li&gt;
&lt;li&gt;Vue-compatible template syntax&lt;/li&gt;
&lt;li&gt;DOM-based, mutates in place&lt;/li&gt;
&lt;li&gt;Driven by &lt;code&gt;@vue/reactivity&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Status&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This is pretty new. There are probably bugs and there might still be API changes, so &lt;strong&gt;use at your own risk.&lt;/strong&gt; Is it usable though? Very much. Check out the &lt;a href="https://github.com/vuejs/petite-vue/tree/main/examples"&gt;examples&lt;/a&gt; to see what it's capable of.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The issue list is intentionally disabled because I have higher priority things to focus on for now and don't want to be distracted. If you found a bug, you'll have to either workaround it or submit a PR to fix it yourself. That‚Ä¶&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vuejs/petite-vue"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-milkdown"&gt;
  &lt;/a&gt;
  3. Milkdown
&lt;/h3&gt;

&lt;p&gt;Plugin driven WYSIWYG markdown editor.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Saul-Mirone"&gt;
        Saul-Mirone
      &lt;/a&gt; / &lt;a href="https://github.com/Saul-Mirone/milkdown"&gt;
        milkdown
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      üçº Plugin driven WYSIWYG  markdown editor.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/Saul-Mirone/milkdown/main//gh-pages/public/milkdown-mini.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y7TdPbuw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Saul-Mirone/milkdown/main/gh-pages/public/milkdown-mini.svg" height="30px"&gt;&lt;/a&gt; Milkdown&lt;/h1&gt;
&lt;div&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/Saul-Mirone/milkdown/main//gh-pages/public/milkdown-homepage.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJlT59_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Saul-Mirone/milkdown/main/gh-pages/public/milkdown-homepage.svg"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;A plugin-driven WYSIWYG markdown Editor, inspired by &lt;a href="https://typora.io/" rel="nofollow"&gt;Typora&lt;/a&gt;, built on top of &lt;a href="https://prosemirror.net/" rel="nofollow"&gt;prosemirror&lt;/a&gt; and &lt;a href="https://github.com/remarkjs/remark"&gt;remark&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Designed by Meo.&lt;/p&gt;
&lt;h1&gt;
Documentation&lt;/h1&gt;
&lt;p&gt;For more information, please check our &lt;a href="https://saul-mirone.github.io/milkdown/" rel="nofollow"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
What's Next&lt;/h1&gt;
&lt;p&gt;You can check our &lt;a href="https://github.com/Saul-Mirone/milkdown/projects/1"&gt;Milkdown TODO&lt;/a&gt; project page to know what's on the plan.&lt;/p&gt;
&lt;h1&gt;
Contributor&lt;/h1&gt;
&lt;p&gt;&lt;a title="Saul-Mirone" href="https://github.com/Saul-Mirone"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6040WrNP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/10047788%3Fv%3D4" width="100" alt="profile picture of Saul Mirone"&gt;&lt;/a&gt;
&lt;a title="xia" href="https://github.com/xiadd"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aw8-Kbnw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/8351437%3Fv%3D4" width="100" alt="profile picture of xiadd"&gt;&lt;/a&gt;
&lt;a title="kitty" href="https://github.com/Kitty0730"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--arMHWykr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/14139395%3Fv%3D4" width="100" alt="profile picture of kitty"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Sponsors&lt;/h1&gt;
&lt;p&gt;If you like this project, please consider fund me to help the maintenance.&lt;/p&gt;
&lt;p&gt;&lt;a title="Johno Scott" href="https://github.com/johnoscott"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WsqwT1u1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/291958%3Fv%3D4" width="100" alt="profile picture of Johno Scott"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
License&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Saul-Mirone/milkdown/main//LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Saul-Mirone/milkdown"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#4-fronts"&gt;
  &lt;/a&gt;
  4. Fronts
&lt;/h3&gt;

&lt;p&gt;Fronts is a progressive micro frontends framework for building Web applications, and it's based on the module federation of Webpack.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/unadlib"&gt;
        unadlib
      &lt;/a&gt; / &lt;a href="https://github.com/unadlib/fronts"&gt;
        fronts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A progressive  micro frontends framework for building Web applications
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://fronts.js.org/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ohJ9MZKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/unadlib/fronts/master/website/static/img/logo.svg" height="96" alt="Fronts Logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/unadlib/fronts/workflows/Node%20CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ahL3qJG8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/unadlib/fronts/workflows/Node%2520CI/badge.svg" alt="Node CI"&gt;&lt;/a&gt;
&lt;a href="http://badge.fury.io/js/fronts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/12fac87a971be32fb31ebcbeb51849a611ba78e1ee539727bf25fbb09af69739/68747470733a2f2f62616467652e667572792e696f2f6a732f66726f6e74732e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f20185893bd782736cd6c8449278ebb92616ad7d6f263c6daca900f7368309d3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f66726f6e7473"&gt;&lt;img src="https://camo.githubusercontent.com/f20185893bd782736cd6c8449278ebb92616ad7d6f263c6daca900f7368309d3/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f66726f6e7473" alt="license"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fronts is a progressive micro frontends framework for building Web applications, and it's based on the &lt;a href="https://webpack.js.org/concepts/module-federation/" rel="nofollow"&gt;module federation&lt;/a&gt; of Webpack.&lt;/p&gt;
&lt;h2&gt;
Motivation&lt;/h2&gt;
&lt;p&gt;Among the many micro frontends solutions, &lt;a href="https://github.com/single-spa/single-spa"&gt;single-spa&lt;/a&gt; and &lt;a href="https://webpack.js.org/concepts/module-federation/" rel="nofollow"&gt;Module Federation&lt;/a&gt; are the best of them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/single-spa/single-spa"&gt;single-spa&lt;/a&gt; is a micro frontends framework based on router configuration. The centralization of configuration brings some limitations, such as it is difficult to granulate nestable micro frontends, module granularity control, module sharing, and so on.&lt;/p&gt;
&lt;p&gt;In 2019, Zack Jackson proposed and implemented Module Federation. Module Federation is a completely different concept from single-spa, and allows a JavaScript application to dynamically load code from another application. It completely solves the problem of code dependency sharing and runtime modularity. The idea is true - &lt;a href="https://medium.com/swlh/webpack-5-module-federation-a-game-changer-to-javascript-architecture-bcdd30e02669" rel="nofollow"&gt;A game-changer in JavaScript architecture&lt;/a&gt; as mentioned in Zack Jackson's article. And it's currently supported by Webpack, Next.js, and Rollup.&lt;/p&gt;
&lt;p&gt;Although the Module Federation concept is so amazing, it has not yet‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/unadlib/fronts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-vscodethemegenerator"&gt;
  &lt;/a&gt;
  5. vscode-theme-generator
&lt;/h3&gt;

&lt;p&gt;Easily generate themes for VS Code with only a few colors.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Tyriar"&gt;
        Tyriar
      &lt;/a&gt; / &lt;a href="https://github.com/Tyriar/vscode-theme-generator"&gt;
        vscode-theme-generator
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Easily generate themes for VS Code with only a few colors
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
vscode-theme-generator&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Tyriar/vscode-theme-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ce59df1a4ef346bc5ba5293484f79e802d9a2fbd4998822a4381e08f58ceb64/68747470733a2f2f7472617669732d63692e6f72672f5479726961722f7673636f64652d7468656d652d67656e657261746f722e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a preview that leverages the new VS Code theming options in v1.12.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Problem&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New themes are typically forked from other themes, carrying the bugs with them&lt;/li&gt;
&lt;li&gt;.tmThemes are overly verbose and difficult to maintain&lt;/li&gt;
&lt;li&gt;Themes are difficult to write from scratch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The Solution&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What if all you needed to do to generate a theme was specify a few colors and everything else was handled for you? Well that's what this module aims to accomplish. All you need to do is specify a set of "base colors" (background, foreground and 4 accent colors) and you have a reasonably good looking theme.&lt;/p&gt;
&lt;p&gt;All other VS Code theme colors are then derived from those base colors, with the option to tweak each underlying color as well.&lt;/p&gt;
&lt;h2&gt;
Example&lt;/h2&gt;
&lt;p&gt;This is all that's needed to generate a great looking theme:&lt;/p&gt;
&lt;div class="highlight highlight-source-ts position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-s1"&gt;generateTheme&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-smi"&gt;IColorSet&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'vscode-theme-generator'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;colorSet&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Tyriar/vscode-theme-generator"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-qwik"&gt;
  &lt;/a&gt;
  6. Qwik
&lt;/h3&gt;

&lt;p&gt;An Open-Source framework designed for best possible time to interactive, by focusing on resumability of server-side-rendering of HTML, and fine-grained lazy-loading of code.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/BuilderIO"&gt;
        BuilderIO
      &lt;/a&gt; / &lt;a href="https://github.com/BuilderIO/qwik"&gt;
        qwik
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An Open-Source framework designed for best possible time to interactive, by focusing on resumability of server-side-rendering of HTML, and fine-grained lazy-loading of code.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/3518364b161ab1351455c0f3774d01973e25602a4b63a3e9129c21deddb2f223/68747470733a2f2f63646e2e6275696c6465722e696f2f6170692f76312f696d6167652f617373657473253246594a494762346930316a7677305352644c3542742532463636376162366332323833643463346438373866623930383361616363313066"&gt;&lt;img alt="Qwik Logo" width="400" src="https://camo.githubusercontent.com/3518364b161ab1351455c0f3774d01973e25602a4b63a3e9129c21deddb2f223/68747470733a2f2f63646e2e6275696c6465722e696f2f6170692f76312f696d6167652f617373657473253246594a494762346930316a7677305352644c3542742532463636376162366332323833643463346438373866623930383361616363313066"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;h1&gt;
&lt;code&gt;Qwik&lt;/code&gt; DOM-Centric, Resumable Web-App Framework&lt;/h1&gt;

&lt;p&gt;An Open-Source framework designed for best possible &lt;a href="https://web.dev/interactive/" rel="nofollow"&gt;time to interactive&lt;/a&gt;, by focusing on &lt;a href="https://github.com/BuilderIO/qwik/blob/main/docs/RESUMABLE.md"&gt;resumability&lt;/a&gt; of server-side-rendering of HTML, and &lt;a href="https://github.com/BuilderIO/qwik/blob/main/docs/LAZY_LOADING.md"&gt;fine-grained lazy-loading&lt;/a&gt; of code.&lt;/p&gt;

&lt;h2&gt;
Getting Started&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Visit &lt;a href="https://stackblitz.com/edit/qwik-todo-demo" rel="nofollow"&gt;StackBlitz&lt;/a&gt; for a simple demo you can play with.&lt;/li&gt;
&lt;li&gt;Visit &lt;a href="https://raw.githubusercontent.com/BuilderIO/qwik/main/./integration"&gt;integration&lt;/a&gt; folder for guided tours of Qwik to learn how it works.&lt;/li&gt;
&lt;li&gt;Understand the difference between &lt;a href="https://github.com/BuilderIO/qwik/blob/main/docs/RESUMABLE.md"&gt;resumable and replayable&lt;/a&gt; applications.&lt;/li&gt;
&lt;li&gt;Learn about Qwik's high level &lt;a href="https://github.com/BuilderIO/qwik/blob/main/docs/LAZY_LOADING.md"&gt;mental model&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Blog Posts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/mhevery/a-first-look-at-qwik-the-html-first-framework-af" rel="nofollow"&gt;A first look at Qwik - the HTML first framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/mhevery/death-by-closure-and-how-qwik-solves-it-44jj" rel="nofollow"&gt;Death by Closure (and how Qwik solves it)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Community&lt;/h2&gt;

&lt;p&gt;Join our &lt;a href="https://discord.gg/JHVpZmqSs4" rel="nofollow"&gt;discord&lt;/a&gt; community.&lt;/p&gt;




&lt;p&gt;
  Made with ‚ù§Ô∏è by &lt;a href="https://www.builder.io/" rel="nofollow"&gt;Builder.io&lt;/a&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/BuilderIO/qwik"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#7-captain-stack"&gt;
  &lt;/a&gt;
  7. Captain Stack
&lt;/h3&gt;

&lt;p&gt;This feature is somewhat similar to Github Copilot's code suggestion. But instead of using AI, it sends your search query to Google, then retrieves StackOverflow answers and autocompletes them for you.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hieunc229"&gt;
        hieunc229
      &lt;/a&gt; / &lt;a href="https://github.com/hieunc229/copilot-clone"&gt;
        copilot-clone
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      VSCode extension for code suggestion
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/hieunc229/copilot-clone/master/./logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HUvSv-NM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/hieunc229/copilot-clone/master/./logo.svg" alt="Captain Stack"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Captain Stack ‚Äî Code suggestion for VSCode&lt;/h1&gt;
&lt;p&gt;This feature is somewhat similar to &lt;a href="https://copilot.github.com/"&gt;Github Copilot&lt;/a&gt;'s code suggestion. But instead of using AI, it sends your search query to Google, then retrieves StackOverflow answers and autocompletes them for you.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Captain Stack is launched on Product Hunt and would appricate your support&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/captain-stack?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-captain-stack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19a33bf154dd0ecfd1b2890acd3bc7e7c3735df20f53cc94673344c6b7c510bd/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d333032343337267468656d653d6c69676874" alt="Captain Stack - An open source alternative to GitHub Copilot | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/hieunc229/copilot-clone/master/./demo.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kwl3AtOf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/hieunc229/copilot-clone/master/./demo.gif" alt="Demo Video"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Table of contents:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hieunc229/copilot-clone/master/#1-installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hieunc229/copilot-clone/master/#2-play-with-captain-stack"&gt;Play with Captain Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hieunc229/copilot-clone/master/#3-notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hieunc229/copilot-clone/master/#4-changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note: ‚ö†Ô∏è This extension uses a proposed API (inline-completion) and can only be used for extension development in &lt;a href="https://code.visualstudio.com/insiders/" rel="nofollow"&gt;VSCode Insider release&lt;/a&gt;. It's not yet available on VSCode&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
1. Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Check out the installation video: &lt;a href="https://youtu.be/MD-kzsF0Scg" rel="nofollow"&gt;https://youtu.be/MD-kzsF0Scg&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before installation, make sure you have &lt;a href="https://code.visualstudio.com/insiders/" rel="nofollow"&gt;VSCode Insider&lt;/a&gt;. You'll be using this version. To install and starting Captain Stack:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download this repository to your local machine. Unzip and open it on VSCode Insider (make sure the root directory is the same as &lt;code&gt;package.json&lt;/code&gt; file)&lt;/li&gt;
&lt;li&gt;(optional) Run &lt;code&gt;npm install&lt;/code&gt; in the terminal to‚Ä¶&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hieunc229/copilot-clone"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-vscodevim"&gt;
  &lt;/a&gt;
  8. VSCodeVim
&lt;/h3&gt;

&lt;p&gt;VSCodeVim is a Vim emulator for Visual Studio Code. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/VSCodeVim"&gt;
        VSCodeVim
      &lt;/a&gt; / &lt;a href="https://github.com/VSCodeVim/Vim"&gt;
        Vim
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ‚≠ê Vim for Visual Studio Code
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/images/icon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PaE0MnD7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/VSCodeVim/Vim/master/images/icon.png" height="128"&gt;&lt;/a&gt;&lt;br&gt;VSCodeVim&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Vim emulation for Visual Studio Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://aka.ms/vscodevim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c6562f5c7aa19673be9e5809040f90557bd451e1796d517b3c57cf754e695eff/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f76657273696f6e2f7673636f646576696d2e76696d2e737667" alt=""&gt;&lt;/a&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=vscodevim.vim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e60af83f0bde09498f3852bedd56bcb33cdac123235d8b608e3149c1500e5f0/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f696e7374616c6c732d73686f72742f7673636f646576696d2e76696d2e737667" alt=""&gt;&lt;/a&gt;
&lt;a href="https://github.com/VSCodeVim/Vim/actions?query=workflow%3Abuild+branch%3Amaster"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1XiA1c6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/VSCodeVim/Vim/workflows/build/badge.svg%3Fbranch%3Dmaster" alt=""&gt;&lt;/a&gt;
&lt;a href="https://vscodevim.herokuapp.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7666ac5c7d5b95e1f9672be8dce0621b1bbad16cfc00639bff69df625c9d8fa6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7673636f646576696d2d736c61636b2d626c75652e7376673f6c6f676f3d736c61636b" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VSCodeVim is a Vim emulator for &lt;a href="https://code.visualstudio.com/" rel="nofollow"&gt;Visual Studio Code&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
üöö For a full list of supported Vim features, please refer to our &lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/ROADMAP.md"&gt;roadmap&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
üìÉ Our &lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/CHANGELOG.md"&gt;change log&lt;/a&gt; outlines the breaking/major/minor updates between releases.&lt;/li&gt;
&lt;li&gt;
‚ùì If you need to ask any questions, join us on &lt;a href="https://vscodevim.herokuapp.com/" rel="nofollow"&gt;Slack&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Report missing features/bugs on &lt;a href="https://github.com/VSCodeVim/Vim/issues"&gt;GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

 &lt;strong&gt;Table of Contents&lt;/strong&gt; (click to expand)
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#-installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#mac"&gt;Mac setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#windows"&gt;Windows setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#linux-setup"&gt;Linux setup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#%EF%B8%8F-settings"&gt;Settings&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vscodevim-settings"&gt;VSCodeVim settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#neovim-integration"&gt;Neovim Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#key-remapping"&gt;Key remapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-settings"&gt;Vim settings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#%EF%B8%8F-multi-cursor-mode"&gt;Multi-Cursor mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#-emulated-plugins"&gt;Emulated plugins&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-airline"&gt;vim-airline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-easymotion"&gt;vim-easymotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-surround"&gt;vim-surround&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-commentary"&gt;vim-commentary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-indent-object"&gt;vim-indent-object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-sneak"&gt;vim-sneak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#camelcasemotion"&gt;CamelCaseMotion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#input-method"&gt;Input Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#replacewithregister"&gt;ReplaceWithRegister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#vim-textobj-entire"&gt;vim-textobj-entire&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#-vscodevim-tricks"&gt;VSCodeVim tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#-faq"&gt;F.A.Q / Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/VSCodeVim/Vim/master/#%EF%B8%8F-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
üíæ Installation&lt;/h2&gt;
&lt;p&gt;VSCodeVim is automatically enabled following &lt;a href="https://marketplace.visualstudio.com/items?itemName=vscodevim.vim" rel="nofollow"&gt;installation&lt;/a&gt; and reloading of VS Code.&lt;/p&gt;
&lt;h3&gt;
Mac&lt;/h3&gt;
&lt;p&gt;To enable key-repeating execute the following in your Terminal and restart VS Code:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;$ defaults write com.microsoft.VSCode ApplePressAndHoldEnabled -bool &lt;span class="pl-c1"&gt;false&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For VS Code&lt;/span&gt;
$ defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; For&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/VSCodeVim/Vim"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-didact"&gt;
  &lt;/a&gt;
  9. Didact
&lt;/h3&gt;

&lt;p&gt;A DIY guide to build your own React&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pomber"&gt;
        pomber
      &lt;/a&gt; / &lt;a href="https://github.com/pomber/didact"&gt;
        didact
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A DIY guide to build your own React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/1911623/26426031/5176c348-40ad-11e7-9f1a-1e2f8840b562.jpeg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4D4Ma4q---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/1911623/26426031/5176c348-40ad-11e7-9f1a-1e2f8840b562.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Didact&lt;/h1&gt;
&lt;h4&gt;
A DIY guide to build your own React&lt;/h4&gt;
&lt;p&gt;This repository goes together with a &lt;a href="https://engineering.hexacta.com/didact-learning-how-react-works-by-building-it-from-scratch-51007984e5c5" rel="nofollow"&gt;series of posts&lt;/a&gt; that explains how to build React from scratch step by step. &lt;strong&gt;You can jump straight to &lt;a href="https://pomb.us/build-your-own-react" rel="nofollow"&gt;the last post&lt;/a&gt; which is self-contained and includes everything.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Blog Post&lt;/th&gt;
&lt;th&gt;Code sample&lt;/th&gt;
&lt;th&gt;Commits&lt;/th&gt;
&lt;th&gt;Other languages&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://engineering.hexacta.com/didact-learning-how-react-works-by-building-it-from-scratch-51007984e5c5" rel="nofollow"&gt;Introduction&lt;/a&gt;&lt;/td&gt;



&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://engineering.hexacta.com/didact-rendering-dom-elements-91c9aa08323b" rel="nofollow"&gt;Rendering DOM elements&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codepen.io/pomber/pen/eWbwBq?editors=0010" rel="nofollow"&gt;codepen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/hexacta/didact/commit/fc4d360d91a1e68f0442d39dbce5b9cca5a08f24"&gt;diff&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chinanf-boy/didact-explain#1-%E6%B8%B2%E6%9F%93dom%E5%85%83%E7%B4%A0"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://engineering.hexacta.com/didact-element-creation-and-jsx-d05171c55c56" rel="nofollow"&gt;Element creation and JSX&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codepen.io/pomber/pen/xdmoWE?editors=0010" rel="nofollow"&gt;codepen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/hexacta/didact/commit/15010f8e7b8b54841d1e2dd9eacf7b3c06b1a24b"&gt;diff&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chinanf-boy/didact-explain#2-%E5%85%83%E7%B4%A0%E5%88%9B%E5%BB%BA%E5%92%8Cjsx"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://engineering.hexacta.com/didact-instances-reconciliation-and-virtual-dom-9316d650f1d0" rel="nofollow"&gt;Virtual DOM and reconciliation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codepen.io/pomber/pen/WjLqYW?editors=0010" rel="nofollow"&gt;codepen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://github.com/hexacta/didact/commit/8eb7ffd6f5e210526fb4c274c4f60d609fe2f810"&gt;diff&lt;/a&gt; &lt;a href="https://github.com/hexacta/didact/commit/6f5fdb7331ed77ba497fa5917d920eafe1f4c8dc"&gt;diff&lt;/a&gt; &lt;a href="https://github.com/hexacta/didact/commit/35619a039d48171a6e6c53bd433ed049f2d718cb"&gt;diff&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chinanf-boy/didact-explain#3-%E5%AE%9E%E4%BE%8B-%E5%AF%B9%E6%AF%94%E5%92%8C%E8%99%9A%E6%8B%9Fdom"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://engineering.hexacta.com/didact-components-and-state-53ab4c900e37" rel="nofollow"&gt;Components and State&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codepen.io/pomber/pen/RVqBrx" rel="nofollow"&gt;codepen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/hexacta/didact/commit/2e290ff5c486b8a3f361abcbc6e36e2c21db30b8"&gt;diff&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chinanf-boy/didact-explain#4-%E7%BB%84%E4%BB%B6%E5%92%8C%E7%8A%B6%E6%80%81"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href="https://engineering.hexacta.com/didact-fiber-incremental-reconciliation-b2fe028dcaec" rel="nofollow"&gt;Fiber: Incremental reconciliation&lt;/a&gt; (self-contained post)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codepen.io/pomber/pen/veVOdd" rel="nofollow"&gt;codepen&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href="https://github.com/hexacta/didact/commit/6174a2289e69895acd8fc85abdc3aaff1ded9011"&gt;diff&lt;/a&gt; &lt;a href="https://github.com/hexacta/didact/commit/accafb81e116a0569f8b7d70e5b233e14af999ad"&gt;diff&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/chinanf-boy/didact-explain#5-fibre-%E9%80%92%E5%A2%9E%E5%AF%B9%E6%AF%94"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;a href="https://pomb.us/build-your-own-react" rel="nofollow"&gt;The one with Hooks&lt;/a&gt; (self-contained post)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codesandbox.io/s/didact-8-21ost" rel="nofollow"&gt;codesandbox&lt;/a&gt;&lt;/td&gt;

&lt;td&gt;&lt;a href="https://www.tangdingblog.cn/blog/react/buildyourownreact-2020-09-22/" rel="nofollow"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/pomber" rel="nofollow"&gt;@pomber&lt;/a&gt; on twitter for updates.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;The MIT License (MIT)&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pomber/didact"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#10-uikit"&gt;
  &lt;/a&gt;
  10. UIkit
&lt;/h3&gt;

&lt;p&gt;A lightweight and modular front-end framework for developing fast and powerful web interfaces&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/uikit"&gt;
        uikit
      &lt;/a&gt; / &lt;a href="https://github.com/uikit/uikit"&gt;
        uikit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A lightweight and modular front-end framework for developing fast and powerful web interfaces
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://getuikit.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5GBWXrv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/321047/21769911/474d7d9e-d681-11e6-9fe0-d95f8ccfd3a9.jpg" alt="uikit banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
UIkit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://discord.gg/NEt4Pv7" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a1da00c3cbdb499d574eb6658ac513245d5ad10d87f37ed1ac112ad026d5a5f3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230646973636f72642d3732383964612e737667" alt="Discord"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UIkit is a lightweight and modular front-end framework for developing fast and powerful web interfaces.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://getuikit.com" rel="nofollow"&gt;Homepage&lt;/a&gt; - Learn more about UIkit&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/getuikit" rel="nofollow"&gt;@getuikit&lt;/a&gt; - Get the latest buzz on Twitter&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://discord.gg/NEt4Pv7" rel="nofollow"&gt;Discord Chat&lt;/a&gt; - Join our developer chat on Discord.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  &lt;b&gt;UIkit is an Open Source project developed by YOOtheme.&lt;/b&gt;
  &lt;br&gt;&lt;br&gt;
  &lt;a href="https://yootheme.com" rel="nofollow"&gt;
      &lt;img width="134" height="30" src="https://camo.githubusercontent.com/91105a50618c98176a6a52fee730351255ac9cc059b4a64072aa34a02e9e334a/687474703a2f2f796f6f7468656d652e636f6d2f736974652f696d616765732f796f6f7468656d652d6c6f676f2e737667"&gt;
  &lt;/a&gt;
&lt;/p&gt;




&lt;h2&gt;
Getting started&lt;/h2&gt;

&lt;p&gt;You have the following options to get UIkit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the &lt;a href="https://github.com/uikit/uikit/releases/latest"&gt;latest release&lt;/a&gt; with pre-built CSS and JS.&lt;/li&gt;
&lt;li&gt;Install with &lt;a href="https://npmjs.com" rel="nofollow"&gt;npm&lt;/a&gt; to get all source files as they are available on Github: &lt;code&gt;npm install uikit&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Install with &lt;a href="https://yarnpkg.com/" rel="nofollow"&gt;yarn&lt;/a&gt; to get all source files as they are available on Github: &lt;code&gt;yarn add uikit&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Directly load UIkit from &lt;a href="https://www.jsdelivr.com" rel="nofollow"&gt;jsDelivr&lt;/a&gt;: &lt;a href="https://www.jsdelivr.com/package/npm/uikit" rel="nofollow"&gt;https://www.jsdelivr.com/package/npm/uikit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Clone the repo to get all source files including build scripts: &lt;code&gt;git clone git://github.com/uikit/uikit.git&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Developers&lt;/h2&gt;

&lt;p&gt;To always have the latest development version of UIkit, even before a release, you may want to use npm or yarn with the &lt;code&gt;dev&lt;/code&gt; tag.&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Using npm‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/uikit/uikit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing üìà
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,575 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/solidjs/solid"&gt;Solid&lt;/a&gt; +1,631 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bradtraversy/50projects50days"&gt;50 Projects in 50 Days&lt;/a&gt; +1,602 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossf/scorecard"&gt;Security Scorecards&lt;/a&gt; +727 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Web Developer Roadmap&lt;/a&gt; +642 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossf/scorecard"&gt;Security Scorecards&lt;/a&gt; +97%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/netlify/framework-info"&gt;Framework Info&lt;/a&gt; +75%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bradtraversy/50projects50days"&gt;50 Projects in 50 Days&lt;/a&gt; +38%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/aidenybai/million"&gt;million&lt;/a&gt; +26%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/solidjs/solid"&gt;Solid&lt;/a&gt; +23%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +7,706 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +6,905 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trimstray/the-book-of-secret-knowledge"&gt;The Book Of Secret Knowledge&lt;/a&gt; +5,288 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Development for Beginners&lt;/a&gt; +3,554 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaslalani/slides"&gt;Slides&lt;/a&gt; +3,268 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/wellyshen/react-cool-virtual"&gt;React Virtual Cool&lt;/a&gt; +638%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/maaslalani/slides"&gt;Slides&lt;/a&gt; +305%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/aidenybai/million"&gt;million&lt;/a&gt; +160%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ossf/scorecard"&gt;Security Scorecards&lt;/a&gt; +146%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/SigNoz/signoz"&gt;SigNoz&lt;/a&gt; +37%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Learn DevOps? I give you 10 reasons¬†‚úÖ</title>
      <author>Dotnetsafer</author>
      <pubDate>Fri, 09 Jul 2021 12:48:09 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/learn-devops-i-give-you-10-reasons-1482</link>
      <guid>https://dev.to/dotnetsafer/learn-devops-i-give-you-10-reasons-1482</guid>
      <description>&lt;p&gt;Let's start by defining what DevOps means:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Dev&lt;/strong&gt; (Development)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ops&lt;/strong&gt; (Operations)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Designates the &lt;strong&gt;union of people and technology&lt;/strong&gt; to deliver value to customers on a constant basis.&lt;/p&gt;

&lt;p&gt;What DevOps allows is that the roles (development, security, IT operations‚Ä¶) can be coordinated in a simple way &lt;strong&gt;to create better products&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is how benefits are obtained such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create better products&lt;/li&gt;
&lt;li&gt;Better meet customer needs&lt;/li&gt;
&lt;li&gt;Reach goals in less time&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;That is why you are going to know the &lt;strong&gt;top 10&lt;/strong&gt; reasons to learn DevOps&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-you-will-have-a-complete-view-of-the-sdlc%C2%A0"&gt;
  &lt;/a&gt;
  1. You will have a complete view of the SDLC¬†üòé
&lt;/h2&gt;

&lt;p&gt;By getting a little familiar with &lt;em&gt;DevOps&lt;/em&gt;, you will get the concept of the &lt;strong&gt;Software Delivery Lifecycle&lt;/strong&gt; (SDLC). As a developer, you will know what is happening at all times in testing and in production.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-you-will-separate-yourself-from-the-crowd%C2%A0"&gt;
  &lt;/a&gt;
  2. You will separate yourself from the crowd¬†üîù
&lt;/h2&gt;

&lt;p&gt;DevOps will give you a huge &lt;strong&gt;advantage&lt;/strong&gt; over competitors in an interview. You can always offer something &lt;strong&gt;good&lt;/strong&gt; and &lt;strong&gt;unique&lt;/strong&gt; for any organization.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-you-will-add-a-lot-of-value-to-a-company%C2%A0"&gt;
  &lt;/a&gt;
  3. You will add a lot of value to a company¬†üë®‚Äçüíª
&lt;/h2&gt;

&lt;p&gt;All good companies look for &lt;strong&gt;quality people&lt;/strong&gt;. Even to cut costs, they look for people &lt;strong&gt;with as many skills as possible&lt;/strong&gt;. If you learn &lt;em&gt;DevOps&lt;/em&gt;, you will stand out and be a person who will add a lot of value to the company since you will know all the tools, technologies and possibilities that can be used for any purpose.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-you-will-know-the-different-existing-tools%C2%A0"&gt;
  &lt;/a&gt;
  4. You will know the different existing tools¬†üîß
&lt;/h2&gt;

&lt;p&gt;The best thing about DevOps is that you can &lt;strong&gt;work in different phases&lt;/strong&gt; and for each one there are different tools (&lt;em&gt;Jenkins, Chef, Nagios, Docker, Kubernetes, Git&lt;/em&gt;‚Ä¶) which you will learn over time and will be very useful.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-you-will-avoid-more-errors-in-the-software%C2%A0"&gt;
  &lt;/a&gt;
  5. You will avoid more errors in the software¬†üíª
&lt;/h2&gt;

&lt;p&gt;We all know that, when programming, any error can cause &lt;strong&gt;serious problems&lt;/strong&gt; even for the &lt;strong&gt;entire company&lt;/strong&gt;, indeed, for the &lt;strong&gt;entire country&lt;/strong&gt;. If we go to some extreme example (which can happen) let's imagine that in the software of an electric vehicle there is an error that makes the vehicle not accelerate correctly, that can cause very serious problems.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; makes it &lt;strong&gt;easy&lt;/strong&gt; for the entire development team to be aware of all the other &lt;em&gt;DevOps&lt;/em&gt; teams, feedback, and possibilities to improve the &lt;em&gt;Software&lt;/em&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-you-will-increase-the-speed%C2%A0"&gt;
  &lt;/a&gt;
  6. You will increase the speed¬†üèÉ‚Äç‚ôÇÔ∏è
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;SDLC&lt;/strong&gt; process will be much faster with the help of &lt;em&gt;DevOps&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It would make it easier for companies to better understand user behavior and later incorporate those changes in future versions.&lt;br&gt;
¬†&lt;br&gt;
This can be an &lt;strong&gt;advantage over the competition&lt;/strong&gt; at the same time that the user will have a better product. This is not just about continuous delivery, but also about continuous deployment. The clearest example is &lt;strong&gt;Amazon&lt;/strong&gt;, its engineers implement code &lt;strong&gt;every 12 seconds&lt;/strong&gt; on average.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#7-you-will-have-faster-professional-growth%C2%A0"&gt;
  &lt;/a&gt;
  7. You will have faster professional growth¬†‚ö°
&lt;/h2&gt;

&lt;p&gt;It is very important to improve every day and especially when you are a developer, since nowadays technology advances &lt;strong&gt;very fast&lt;/strong&gt;. You need to bring great value to the company and that's where &lt;em&gt;DevOps&lt;/em&gt; comes in. This is the best way to increase your career growth in different companies.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#8-you-will-get-a-wellpaid-job%C2%A0"&gt;
  &lt;/a&gt;
  8. You will get a well-paid job¬†ü§ë
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; professionals typically have &lt;strong&gt;high-paying&lt;/strong&gt; jobs anywhere in the world, whatever country it is.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#9-you-will-increase-the-ease-of-finding-a-job%C2%A0"&gt;
  &lt;/a&gt;
  9. You will increase the ease of finding a job¬†üî•
&lt;/h2&gt;

&lt;p&gt;The demand for &lt;em&gt;DevOps&lt;/em&gt; professionals &lt;strong&gt;is very high&lt;/strong&gt; around the world, but currently there are not enough people who meet the requirements set by companies. If you are in the development field, &lt;em&gt;DevOps&lt;/em&gt; is a &lt;strong&gt;great&lt;/strong&gt; opportunity for you.&lt;/p&gt;

&lt;p&gt;DevOps will allow you to obtain the ease you need for development since, according to the &lt;strong&gt;CIO's&lt;/strong&gt; knowledge, companies manage to increase their deployment frequency by &lt;strong&gt;50%&lt;/strong&gt; while reducing costs by up to &lt;strong&gt;45%&lt;/strong&gt;. In some cases, there has even been a &lt;strong&gt;22%&lt;/strong&gt; increase in clients, apart from increasing the chances of being hired.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#10-learning-devops-is-easy%C2%A0"&gt;
  &lt;/a&gt;
  10. Learning DevOps is easy¬†ü§ó
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; is &lt;strong&gt;easy to learn&lt;/strong&gt;, really any developer with a minimum of experience can learn &lt;em&gt;DevOps&lt;/em&gt; in a simple way, even with &lt;strong&gt;basic knowledge&lt;/strong&gt; of &lt;em&gt;Linux&lt;/em&gt; and any other programming language.&lt;/p&gt;

&lt;p&gt;By becoming a &lt;em&gt;DevOps&lt;/em&gt; engineer, you can easily understand the software development lifecycle and fully understand the different automation tools that exist for developing digital pipelines.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>csharp</category>
      <category>programming</category>
      <category>devops</category>
    </item>
    <item>
      <title>Render images with the official Notion API</title>
      <author>Twan kruiswijk</author>
      <pubDate>Fri, 09 Jul 2021 12:47:30 +0000</pubDate>
      <link>https://dev.to/twankrui/render-images-with-the-official-notion-api-3gnh</link>
      <guid>https://dev.to/twankrui/render-images-with-the-official-notion-api-3gnh</guid>
      <description>&lt;p&gt;At the time of writing this post, the official Notion API doesn't yet provide support for image blocks. Since we are building a &lt;a href="https://github.com/twankruiswijk/Blion"&gt;blog template&lt;/a&gt;, we needed to develop a temporary solution to render images for the posts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solutions-that-didnt-cut-it"&gt;
  &lt;/a&gt;
  Solutions that didn't cut it
&lt;/h2&gt;

&lt;p&gt;We've looked at multiple ways to render an image for the posts:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-wait-until-the-official-notion-api-adds-support-for-the-image-blocks"&gt;
  &lt;/a&gt;
  1. Wait until the official Notion API adds support for the image blocks
&lt;/h3&gt;

&lt;p&gt;This wasn't an option since having a blog without image support isn't appealing for many people, including myself. Also, it's been over a month, and we've had no updates on when new block types (like the image block) will get added.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-use-the-unofficial-notion-api-for-the-images"&gt;
  &lt;/a&gt;
  2. Use the unofficial notion API for the images
&lt;/h3&gt;

&lt;p&gt;We've looked into this, but we didn't want to rely on the unofficial API. We know that other platforms do, but having a mix of official and unofficial API calls would get messy and increase the complexity of the project, which we want to keep low.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-the-raw-postimagesource-endraw-array"&gt;
  &lt;/a&gt;
  Introducing the &lt;code&gt;postImageSource&lt;/code&gt; array
&lt;/h2&gt;

&lt;p&gt;Since the Notion API supports text links, we came up with the idea that the template users could specify domains that would render as an image instead of a link when added to their Notion post.&lt;/p&gt;

&lt;p&gt;Yes, this does mean that you can't use the same domain to render a text link.&lt;/p&gt;

&lt;p&gt;Since we have a configuration file, we added an array &lt;code&gt;postImageSource&lt;/code&gt; where users can specify which domains they want to render as an image when the template comes across a link with this domain.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// site.config.js&lt;/span&gt;
&lt;span class="nx"&gt;postImageSource&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;images.unsplash.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;res.cloudinary.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dl.dropboxusercontent.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To provide an upgrade path, we recommend that users still upload the image in their Notion document and place the text link below the image. This way, once the image block is ready in the official API, we can offer an option to make the &lt;code&gt;postImageSource&lt;/code&gt; work backwards, meaning that people can disable rendering text links that include domains from &lt;code&gt;postImageSource&lt;/code&gt;. Ultimately they can update all their posts and remove the &lt;code&gt;postImageSource&lt;/code&gt; permanently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-bore-us-get-to-the-chorus-code"&gt;
  &lt;/a&gt;
  Don't bore us, get to the &lt;del&gt;chorus&lt;/del&gt; code!
&lt;/h2&gt;

&lt;p&gt;So you are working on your project that utilizes the Notion API? Nice, I would love to hear about it in the comments! But I know why you are here, and you want the code. Without further ado, here is the bare minimum of code that is required to display the images.&lt;/p&gt;

&lt;p&gt;First, Add an array where you specify the domains you want to render as images&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;postImageSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;images.unsplash.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;res.cloudinary.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dl.dropboxusercontent.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Second, determine if the text object has a link property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;postImageSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;images.unsplash.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;res.cloudinary.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dl.dropboxusercontent.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="p"&gt;....&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, check if the link includes the domain and determine whether to render an image or a text link.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;postImageSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;images.unsplash.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;res.cloudinary.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dl.dropboxusercontent.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;linkUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;postImageSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;linkUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;linkUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;insert alt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// If the domain is not specified in the postImageSource, render a text link.&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;linkUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noopener noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hopefully, this guide helps you add image support to your Notion-powered website for the time being. Let's hope that the fantastic developers over at Notion crack the formula and add support for images and videos soon because that would open up a world of beautiful possibilities.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>notion</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Cloud Technology News of the Month: June 2021</title>
      <author>CAST AI</author>
      <pubDate>Fri, 09 Jul 2021 12:47:00 +0000</pubDate>
      <link>https://dev.to/castai/cloud-technology-news-of-the-month-june-2021-32d8</link>
      <guid>https://dev.to/castai/cloud-technology-news-of-the-month-june-2021-32d8</guid>
      <description>&lt;p&gt;We can‚Äôt believe the first half of 2021 is already over. Lots of interesting things have happened in the cloud space so far - but surely, there‚Äôs more to come.&lt;/p&gt;

&lt;p&gt;So, here‚Äôs another portion of fresh cloud technology news! This series brings you up to speed with the latest releases, acquisitions, research, and hidden gems in the world of cloud computing ‚Äì the stuff actually worth reading.¬†&lt;/p&gt;

&lt;p&gt;Here‚Äôs what the cloud world has been up to in June 2021.&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;Story of the month: AWS is on fire&lt;/h2&gt;

&lt;p&gt;On June 10, an availability zone in the AWS EU-Central region experienced a major outage (EUC_AZ-1).¬†&lt;/p&gt;

&lt;p&gt;At first, the breakdown caused connectivity issues for some EC2 instances. It then increased API error rates and latencies for the EC2 APIs and resulted in some further connectivity problems ‚Äúcaused by an increase in ambient temperature.‚Äù¬†&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--83a1mTxm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1403025766875422720/x4ZU04Ao_normal.jpg" alt="Corey Quinn profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Corey Quinn
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @quinnypig
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      BREAKING: There is currently a fire in a data center that's part of &lt;a href="https://twitter.com/awscloud"&gt;@awscloud&lt;/a&gt;'s eu-central-1 region. Impact limited to a single AZ, obviously. All humans reportedly safe.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      21:24 PM - 10 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1403100781646028808" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1403100781646028808" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1403100781646028808" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;At some point, temperatures fell but engineers still couldn‚Äôt enter the affected part of the AZ for safety reasons. Three hours after the breakdown, services were restored.&lt;/p&gt;

&lt;p&gt;So, what exactly made this data center dangerous to enter? The most recent update from AWS showed that the incident was caused by the "failure of a control system which disabled multiple air handlers in the affected Availability Zone," leading to a larger number of EC2 instances in this AZ to lose network connectivity.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Why risk going down when you can save your workloads using another provider?&lt;/strong&gt; This and many other incidents that happened over the last months show the pressing need for companies to invest in a multi cloud strategy.¬†&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.theregister.com/2021/06/11/aws_eu_central_1_incident/"&gt;The Register&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIBPenOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/07/image3-1200x1229.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIBPenOi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/07/image3-1200x1229.png" alt="recent cloud outages AWS Google Azure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;The Business of Cloud&lt;/h2&gt;

&lt;p&gt;Here‚Äôs one interesting acquisition: the tax and auditing giant &lt;strong&gt;Deloitte got its hands on the cloud security orchestration provider CloudQuest&lt;/strong&gt;. This is the company‚Äôs second security-related acquisition this year as Deloitte clearly aims to enhance its cybersecurity offering to help its customers in areas like CSPM and SOAR.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.zdnet.com/article/deloitte-acquires-cloud-security-orchestration-provider-cloudquest/"&gt;ZDNet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A big win for Microsoft - &lt;strong&gt;AT&amp;amp;T is moving its 5G cloud network to Azure&lt;/strong&gt;. Following a 5G partnership initiated in 2019, this deal paves the way to Microsoft eventually handling all of the wireless carrier‚Äôs 5G traffic, starting with the core software that connects customers to the internet.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.bloomberg.com/news/articles/2021-06-30/at-t-agrees-to-outsource-its-5g-network-to-microsoft-s-azure"&gt;Bloomberg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chips are still hot on the market. One of the largest chip manufacturers &lt;strong&gt;Broadcom shared an impressive forecast&lt;/strong&gt; for quarterly sales driven by the growing demand for chips used in data centers and beyond. Its revenue in Q3 is set to reach a smashing &lt;strong&gt;$6.75 billion&lt;/strong&gt;.¬†&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://finance.yahoo.com/news/broadcom-gives-bullish-forecast-persistent-203900208.html"&gt;Yahoo!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;_____&lt;/p&gt;

&lt;h2&gt;New in CAST AI&lt;/h2&gt;

&lt;h3&gt;Now available publicly: GKE Analyzer&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--amZ_0iR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/07/image2-1-1200x362.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--amZ_0iR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/07/image2-1-1200x362.png" alt="GKE cost optimization"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GKE Analyzer&lt;/strong&gt; goes through your cluster costs, pinpoints any potential savings you could achieve, and then tells you how to get there. If you‚Äôre a GKE user, connect your cluster, get your self-served savings report and &lt;a href="https://console.cast.ai/external-clusters/new"&gt;start optimizing your cloud costs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are some new product features hot off the press:¬†¬†&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;CAST AI now supports Organizations!&lt;/strong&gt; Multiple team members from a company can now join CAST AI, create an organization inside our console, and collaboratively manage K8s clusters.&lt;/li&gt;
&lt;li&gt;The connected AWS (EKS and kOps) clusters can now be &lt;strong&gt;paused and resumed&lt;/strong&gt; as easily as the clusters created in CAST AI. Functionality to pause and resume on a pre-set schedule is coming soon as well.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;node list is now accessible&lt;/strong&gt; as soon as the cluster is connected. You no longer need an onboard cluster to access this functionality.&lt;/li&gt;
&lt;li&gt;Clusters that were onboarded to CAST AI can now be &lt;strong&gt;disconnected via the UI&lt;/strong&gt;, users can delete or leave CAST AI-created nodes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;_____&lt;/p&gt;

</description>
      <category>cloudnative</category>
      <category>kubernetes</category>
      <category>devops</category>
      <category>aws</category>
    </item>
    <item>
      <title>A tech interview that doesn't suck</title>
      <author>Jacob Paris</author>
      <pubDate>Fri, 09 Jul 2021 12:09:53 +0000</pubDate>
      <link>https://dev.to/jacobmparis/a-tech-interview-that-doesn-t-suck-14o4</link>
      <guid>https://dev.to/jacobmparis/a-tech-interview-that-doesn-t-suck-14o4</guid>
      <description>&lt;p&gt;One of the many major things the tech industry is bad at is job interviews.&lt;/p&gt;

&lt;p&gt;No other profession has so little correlation between candidates who are good at interviews and good at the job they are interviewing for. Most tech interviews focus on testing skills that have nothing at all to do with the kind of work the candidate would be doing day-to-day.&lt;/p&gt;

&lt;p&gt;Good tech interviews are equally accessible to self-taught, bootcamp, or college graduates, and don't prefer developers who have enough free time to dedicate to drilling code trivia.&lt;/p&gt;

&lt;p&gt;Good tech interviews favour candidates who are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comfortable solving problems autonomously&lt;/li&gt;
&lt;li&gt;Able to recognize gaps in their knowledge&lt;/li&gt;
&lt;li&gt;Learn things as they need to know them&lt;/li&gt;
&lt;li&gt;Able to maintain their code as requirements change&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instead of white-boarding, code challenges, or testing knowledge of algorithms, I prefer to test candidates by giving them a small take-home TODO list application, written any way they want, followed by a live-coding segment where they add three small features.&lt;/p&gt;

&lt;p&gt;Writing code and then adding features to that code models exactly what developers are expected to do on the job. Developers who have the time to practice LeetCode questions aren't better at writing TODO applications than developers who don't. Stanford has a class teaching &lt;a href="https://web.stanford.edu/class/cs9/"&gt;how to pass the google exam&lt;/a&gt;, but Stanford students don't get an advantage here.&lt;/p&gt;

&lt;p&gt;TODO applications are the most common tutorial, so almost every developer has interacted with one at some point. They don't require complex algorithms which are only taught in universities, and there are so many unique ways to build them depending on the developer's preferences, skills, and choices.&lt;/p&gt;

&lt;p&gt;If you're hiring Frontend engineers, Backend engineers, DevOps engineers, or QA engineers, a TODO application can be written to stress the important skills for each role.&lt;/p&gt;

&lt;p&gt;This is the spec I've used for dozens of interviews, made generic enough to allow the candidate shape the application to best demonstrate their abilities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-take-home-project"&gt;
  &lt;/a&gt;
  The Take Home Project
&lt;/h2&gt;

&lt;p&gt;Imagine the business has asked you to build a simple todo list application for the web.&lt;/p&gt;

&lt;p&gt;Requirements&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The user should be able to view a list of tasks&lt;/li&gt;
&lt;li&gt;Each task should contain a title&lt;/li&gt;
&lt;li&gt;The user should be able to create a task&lt;/li&gt;
&lt;li&gt;The user should be able to edit a task&lt;/li&gt;
&lt;li&gt;The user should be able to mark a task completed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try to spend no more than 3 hours of work on this assignment. If some areas lack polish, it will be reviewed with the understanding that there was a narrow time constraint.&lt;/p&gt;

&lt;p&gt;Use whatever tools, frameworks, and languages that you are most comfortable with. There are no extra points for using the same tech stack that we use. The more confident you are with the tools you've chosen, the more impressive your application will be. If you excel in a particular area, choose an architecture that allows you to demonstrate that.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The application can be server side, client side, or both&lt;/li&gt;
&lt;li&gt;Data can be persisted to a database, to local storage, or not at all&lt;/li&gt;
&lt;li&gt;Tests can be end-to-end, integration, unit, or none at all&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create a repository on your preferred source control host (GitHub, Bitbucket, GitLab, etc) and commit your code to it, along with a README.md file that explains how to install and run the app. These instructions could be as simple as "clone the repo, run npm install, run npm start" but some projects take longer to set up.&lt;/p&gt;

&lt;p&gt;When you're finished, email the interviewer with a link (and invite if the repository is private).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-followup-interview"&gt;
  &lt;/a&gt;
  The Follow-Up Interview
&lt;/h2&gt;

&lt;p&gt;Most candidates are nervous in interviews regardless of their confidence level on the job. Try to understand that getting or not getting the job will change the course of their career in one direction or the other.&lt;/p&gt;

&lt;p&gt;Start the interview with a few minutes of small-talk to establish a bit of rapport and get the candidate more comfortable speaking on camera.&lt;/p&gt;

&lt;p&gt;If you haven't already confirmed whether the candidate is legally able to get the job, do that now. Even if the requirements were listed explicitly in the job posting, don't assume it's been read or understood. In general, hiring contractors, even from out-of-country, is far easier than hiring employees and you'll have fewer questions to ask.&lt;/p&gt;

&lt;p&gt;For employees, you should determine if they're legally allowed to work in your country. For example, whether or not they're a citizen or a permanent resident or if they're on a work visa. If they're on a work visa, see how long it's eligible for and when it's going to expire. If you're looking to hire someone who will last a year or more at your company but their visa is due to expire in six months, that's something you want to find out sooner rather than later.&lt;/p&gt;

&lt;p&gt;Ask where they're currently living. This may not be the city they have listed on their resum√© or online profiles or any other documentation you've seen so far. It's important to make sure that the hours they intend to work are compatible with the rest of the team. Even if you're fully asynchronous, it's good to have an idea of when they can be expected to be online.&lt;/p&gt;

&lt;p&gt;I'd also recommend you ask what timeframe they would be looking to start once hired. Some candidates will be able to start right away and others might need weeks to transition from their current job, especially if they're relocating.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-livecoding-segment"&gt;
  &lt;/a&gt;
  The Live-Coding Segment
&lt;/h2&gt;

&lt;p&gt;Being able to see how people maintain code they've written themselves is a great signal for a developer who knows what they're doing&lt;/p&gt;

&lt;p&gt;To &lt;em&gt;maintain code&lt;/em&gt; is to modify it to handle a changing set of requirements.&lt;/p&gt;

&lt;p&gt;Have the candidate share their screen as you move into the live-coding portion of the interview. It's a good idea to remind them to turn on Do not Disturb mode so that no notifications appear while they're sharing. If they have a large screen, encourage them to zoom in or increase font size so their code is legible.&lt;/p&gt;

&lt;p&gt;Be prepared to walk them through allowing screen sharing permissions if they haven't already allowed those.&lt;/p&gt;

&lt;p&gt;I start by having them walk through the code, pointing out anything notable in their implementation&lt;/p&gt;

&lt;p&gt;They may have chosen to use a simple non-scalable architecture because that's all that the requirements of this demo project demanded. They also could have chosen to over-engineer the code as a demonstration of how they would handle a more complex project. Either decision is rational&lt;/p&gt;

&lt;p&gt;Be careful about prodding these questions on your own so you don't hint at preferring one decision over the other. If the candidate feels like they've already made a mistake, they're less likely to perform as confidently in the interview as they would on the job.&lt;/p&gt;

&lt;p&gt;Time-boxing this portion of the interview is a good idea. 45 minutes for the whole segment gives 15 for each task, and you can warn them if they're spending too long on any particular one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exercise-1-permanently-delete-all-completed-tasks"&gt;
  &lt;/a&gt;
  Exercise 1: Permanently delete all completed tasks
&lt;/h3&gt;

&lt;p&gt;Add a button that deletes all the tasks that have been marked as complete.&lt;/p&gt;

&lt;p&gt;The usual solution here is to replace the list of tasks with a new array that contains only the incomplete tasks.&lt;/p&gt;

&lt;p&gt;An easy way to make the new array is using Javascript's native array filter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;incompleteTasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The candidate might prefer stepping through the list of tasks in a loop to build the new array manually.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;incompleteTasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;incompleteTasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another solution would be to remove the completed tasks directly from the list without making a new array. This can be tricky because they're stepping through the list one by one but also removing tasks from it, so it's easy to accidentally skip an item. If the candidate presses the button with two tasks in a row marked complete, and it fails to delete the second one, this is usually the reason why.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Remove task number i&lt;/span&gt;
    &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="c1"&gt;// If we deleted task 4, task 5 will slide up into its spot, so we need to check task 4 again next&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#exercise-2-sort-tasks-in-descending-order"&gt;
  &lt;/a&gt;
  Exercise 2: Sort tasks in descending order
&lt;/h3&gt;

&lt;p&gt;Sort tasks in descending order, so that new items are added to the top of the list instead of the bottom.&lt;/p&gt;

&lt;p&gt;If the candidate is not currently storing dates on each task, that's the first step, but it's up to them to determine that. They'll have to add dates to any new tasks they're adding plus any they might have stored to show up by default (if any).&lt;/p&gt;

&lt;p&gt;There are a few ways to cheat here that should be discouraged. At the moment, every new task appears at the bottom of the list. That makes it look like it's already sorted in ascending order. The candidate might be tempted to render &lt;code&gt;tasks.reverse()&lt;/code&gt; or to add new tasks to the beginning of the array instead of the end.&lt;/p&gt;

&lt;p&gt;This only works by coincidence, and as soon as it's possible to add tasks with past or future dates, this fake sorting will break.&lt;/p&gt;

&lt;p&gt;The usual solution is using javascript's native sort method. After giving this question to dozens of candidates I've concluded that no one remembers how this method works. To me, this question is an exercise on whether the candidate is able to look up documentation to patch their knowledge on anything they're missing, which is an incredibly valuable skill to screen for.&lt;/p&gt;

&lt;p&gt;Sort works by comparing two tasks (A and B) in the list and returning &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, or &lt;code&gt;0&lt;/code&gt;, depending on whether task A should be sorted before, after, or equally with B.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using ternary is common here. It's not a big deal if they don't handle the 0 case for identical dates.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the dates are stored as a number (for example, a timestamp rather than a date), they might just subtract them. I'm less fond of this but it's incredibly common.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateCreated&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When candidates implement the sort method incorrectly, common mistakes are to compare &lt;code&gt;a - b&lt;/code&gt; directly, instead of &lt;code&gt;a.dateCreated - b.dateCreated&lt;/code&gt;, or to return true or false instead of 1 or -1. Nudge them toward the documentation if they're making these sorts of mistakes. Sometimes candidates try too hard not to look anything up during the interview even if they would be quick to do so on the job, so extra encouragement can help.&lt;/p&gt;

&lt;p&gt;When candidates implement the sort method correctly, the most common mistake here is to accidentally sort the wrong way first. If their sort doesn't appear to work the first time, it might be sorting into ascending order (which looks like nothing has changed). Most candidates will test swapping the order on their own, but feel free to suggest that if they seem confused.&lt;/p&gt;

&lt;p&gt;The second most common mistake is forgetting that the sort method mutates the original array. If they've built all their code from scratch, this probably won't be an issue, but frameworks like React and Vue will throw errors if they mutate state variables. There are a few ways to clone the list of tasks before running sort, including &lt;code&gt;Array().concat(tasks).sort&lt;/code&gt;, &lt;code&gt;tasks.slice().sort&lt;/code&gt;, &lt;code&gt;[...tasks].sort&lt;/code&gt;, or by chaining sort after a map or filter operation. If they're having trouble with this one, explain the problem, but give them time to find their own solution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exercise-3-split-the-tasks-into-two-lists"&gt;
  &lt;/a&gt;
  Exercise 3: Split the tasks into two lists
&lt;/h3&gt;

&lt;p&gt;Split the tasks into two lists, with incomplete tasks on top, completed tasks on the bottom, such that marking a task as complete moves it from one list to the other.&lt;/p&gt;

&lt;p&gt;It's up to you as the interviewer whether you require the sorting to still be in effect for this exercise. It's simpler if you don't, but optional.&lt;/p&gt;

&lt;p&gt;The ideal implementation is also the simplest: keep one main array of tasks, and render two lists filtered to either complete or incomplete.&lt;/p&gt;

&lt;p&gt;That might look something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;completeTasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;incompleteTasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The more challenging implementation, which I've seen several candidates attempt but never complete within the time allowed, is to maintain two separate lists of tasks and move items from one to the other when marking as complete or incomplete. If they start to run out of time, I would suggest the simpler solution, but give them time to come to that conclusion on their own. The ability to realize when they're going down the wrong path and re-evaluate their chosen solution is a good skill to have, and this is a good place to watch for it.&lt;/p&gt;

</description>
      <category>career</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to build a React portfolio that gets you a job - Part 1</title>
      <author>Johannes Kettmann</author>
      <pubDate>Fri, 09 Jul 2021 12:09:24 +0000</pubDate>
      <link>https://dev.to/profydev/how-to-build-a-react-portfolio-that-gets-you-a-job-part-1-5fh9</link>
      <guid>https://dev.to/profydev/how-to-build-a-react-portfolio-that-gets-you-a-job-part-1-5fh9</guid>
      <description>&lt;p&gt;Let me guess: You've been learning React for a while already. Now it's time to build a portfolio of advanced React projects. And you're looking for inspiration. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The thing is you can't just build any project. Your portfolio has a purpose:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your goal is to get a job.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, you'll hit one major roadblock on your journey: the Hiring Manager (capital letters).&lt;/p&gt;

&lt;p&gt;They are the gatekeeper who makes the decisions. They invite you to an interview. Or toss your application in the trash. And believe me, they have piles of applications to trash for any entry-level job. &lt;/p&gt;

&lt;p&gt;You need to convince the hiring manager that you're ready for the job.&lt;/p&gt;

&lt;p&gt;And the best way to prove that is to &lt;strong&gt;act like a professional React developer.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Build your portfolio projects with the technologies, libraries, techniques, and workflows that are used in professional dev teams in the real world. The doors to your new career will be wide open.&lt;/p&gt;

&lt;p&gt;Simple enough. Act like a professional dev...&lt;/p&gt;

&lt;p&gt;But hold on. How should you know all this? You've never worked in a real company before, have you?&lt;/p&gt;

&lt;p&gt;No worries. I got your back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unlike other articles, I don't just hand you a list of project ideas and call it a day.&lt;/strong&gt; I want you to understand how you can tailor your projects to impress your future employer. Be it one of the ideas in this series of articles or one of your own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-youll-get-in-this-series"&gt;
  &lt;/a&gt;
  What you'll get in this series
&lt;/h2&gt;

&lt;p&gt;This guide consists of three parts. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In this first part, you'll learn how to build your projects like a pro.&lt;/strong&gt; We'll touch on topics like professional workflows, styles, and application logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The upcoming second part will be all about effectively presenting your project.&lt;/strong&gt; You've shed blood, sweat &amp;amp; tears for your portfolio project. Make sure that the hiring manager doesn't miss the important parts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In the third part, you'll get a list of three uncommon project ideas:&lt;/strong&gt; Reddit Analytics, a UI kit, and an error monitoring tool. Build any of these for an outstanding React portfolio.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'll release the two remaining parts in the next days here on dev.to. If you want to read all of them right away you can visit the original post at &lt;a href="https://profy.dev/article/react-projects-for-your-portfolio"&gt;profy.dev&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#part-1-how-to-build-your-react-portfolio-projects-like-a-pro"&gt;
  &lt;/a&gt;
  Part 1: How to build your React portfolio projects like a pro
&lt;/h2&gt;

&lt;p&gt;The idea sounds convincing: your future employer will be more likely to give you a shot if you build your portfolio projects like a pro. &lt;/p&gt;

&lt;p&gt;You'll look ambitious. You'll prove that you're eager to learn and level up. Some of the most important traits of a Junior developer.&lt;/p&gt;

&lt;p&gt;Unfortunately, this is a catch-22 situation: you don't know how to work like a pro until you've been part of a professional team.&lt;/p&gt;

&lt;p&gt;Luckily, I've been on both sides. And I'd like to share my experience with you in this chapter.&lt;/p&gt;

&lt;p&gt;We'll focus on the most important areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;working like a pro&lt;/li&gt;
&lt;li&gt;styles&lt;/li&gt;
&lt;li&gt;application logic&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#working-like-a-professional"&gt;
  &lt;/a&gt;
  Working like a professional
&lt;/h3&gt;

&lt;p&gt;There's a huge difference between working alone and on a professional team. In a team, your co-workers depend on your work the same way you depend on theirs. That's why you need to work with much more structure and transparency.&lt;/p&gt;

&lt;p&gt;But let's start with a story of a lone developer building a project. This is me at the beginning of my career in tech. Be careful, you might recognize yourself.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When I built my first projects I started with an idea. Let's say an Airbnb for pet owners (no joke, I really built this).&lt;/p&gt;

&lt;p&gt;I thought about the features it should have. The user should be able to create and update their profile. And there should be a list view that shows all the available apartments. Ideally searchable.&lt;/p&gt;

&lt;p&gt;Fair enough. Off I went into code-land. That's the fun part after all, right?&lt;/p&gt;

&lt;p&gt;Soon another interesting feature would pop into my head. I'd lose focus and start working on it straight away. Leaving me with a bunch of half-baked code. Entangled as the infamous spaghetti.&lt;/p&gt;

&lt;p&gt;The layout was another kind of problem. I'd obviously have a look at Airbnb and similar competitors to get design ideas. Then I'd start writing CSS.&lt;/p&gt;

&lt;p&gt;I'd fiddle around with my styles. I would move elements pixel by pixel. I'd change some colors here and increase some text size there. Make it bold, make it italic.&lt;/p&gt;

&lt;p&gt;Only to find out that it's actually harder than expected to make a website look good...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;You see the problem? I'd make a plan, yeah. But only a very rough one and only in my head.&lt;/strong&gt; I'd waste a lot of time with unnecessary features and fiddling around with CSS details. And the awesome web app that I had in mind looked more like... ehm...&lt;/p&gt;

&lt;p&gt;So how does working on a professional dev team compare to that?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Professional frontend developers get two things before they start coding:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tasks&lt;/li&gt;
&lt;li&gt;designs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In a real-world job, it's not the developer's responsibility to come up with features or designs. Typically a product manager decides what has to be built. And a designer prepares the designs.&lt;/p&gt;

&lt;p&gt;It's the dev's job to turn them into working code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The good news is, you can work the same way as the pros.&lt;/strong&gt; You start with designs. Then create the tasks. Only then you start to code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First, the designs.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course, you don't want to hire a designer just to build a couple of portfolio projects. And as I said, you shouldn't create the designs yourself either. That's not your responsibility on the job. &lt;/p&gt;

&lt;p&gt;So where to get designs from?&lt;/p&gt;

&lt;p&gt;A good place to start is the &lt;a href="https://www.figma.com/community/web_design"&gt;Figma Community&lt;/a&gt;. You'll find many professional designs that you can simply clone into your free Figma account. You might find a ready-made app design that you like. If not, you can use one of the UI kits to build a custom design yourself. Simply drag &amp;amp; drop the elements into place.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next, you create the tasks.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is how it works in a nutshell.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You take the designs and break them into smaller parts (aka features). &lt;/li&gt;
&lt;li&gt;For each feature, you create a task. You can use a free tool like &lt;a href="https://github.com/features/project-management/"&gt;GitHub project management&lt;/a&gt;, &lt;a href="https://clickup.com"&gt;ClickUp&lt;/a&gt;, or simply &lt;a href="https://trello.com"&gt;Trello&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For each task, you collect the requirements. What is the feature supposed to do? How can the user interact with it? Where does the data come from?&lt;/li&gt;
&lt;li&gt;If a task gets too big you can break it down into smaller subtasks.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Now you can start coding.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you structure yourself this way you'll be much closer to a real job experience. Instead of randomly writing code for different parts of your app you'll start to think and work like a professional developer. &lt;/p&gt;

&lt;p&gt;And that in turn is impressive for any employer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If this sounds like too much work&lt;/strong&gt; you can check out &lt;a href="#reddit-analytics"&gt;the Reddit Analytics app in the ideas chapter at the end of this guide&lt;/a&gt;. I've prepared this project for you including designs and tasks. But even if you put in the work yourself I'm sure it'll pay off in the long-term.&lt;/p&gt;

&lt;p&gt;Now that you know how to prepare your project and work on it like a pro let's dive into more technical topics.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#styles"&gt;
  &lt;/a&gt;
  Styles
&lt;/h3&gt;

&lt;p&gt;You might be tempted to use a UI library like Material UI or Bootstrap. And you're right, these are great libraries. They can be very valuable if you need to build an app quickly. For example, if you're working in an early-stage startup or building websites for clients as a freelancer.&lt;/p&gt;

&lt;p&gt;But most development teams work differently. &lt;/p&gt;

&lt;p&gt;Unique branding is super important for companies. That's why a designer prepares custom designs and styleguides. At least for the user-facing parts of the application.&lt;/p&gt;

&lt;p&gt;And as we mentioned in the last chapter, it's the developer's job to turn those designs into code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So to stay close to real production apps write custom CSS&lt;/strong&gt; instead of using ready-made UI libraries. Writing CSS is a much more flexible skill that you will use in any job.&lt;/p&gt;

&lt;p&gt;But UI libraries not only provide ready-made elements. They also simplify your life by taking the burden of responsiveness off your shoulders. Again, this might be good to get off the ground quickly.&lt;/p&gt;

&lt;p&gt;But you want to prove that you can work as a React developer under realistic conditions. &lt;strong&gt;And being able to build responsive layouts with CSS is very important nowadays.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In most cases, it's not very hard to make your app responsive. Let's say you have designs for desktops only. Make sure to test your app on different screen sizes e.g. using the Chrome dev tools' responsive mode.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v3yA6ejD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/IBJOfKCgTmjuk7gyjQ19" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v3yA6ejD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/IBJOfKCgTmjuk7gyjQ19" alt="Untitled.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from writing custom CSS and keeping responsiveness in mind I have one last advice regarding styles:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't use global classes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I see global CSS classes quite often when reviewing Junior React developer's portfolio projects. It makes me question the knowledge of the candidate.&lt;/p&gt;

&lt;p&gt;The problem is that global class names are not scalable. Once you have a larger application you'll run into naming conflicts. You'll have to use more specific names. Finally, you'll end up using a naming convention like &lt;a href="https://css-tricks.com/bem-101/"&gt;BEM&lt;/a&gt;. That's so 2015!&lt;/p&gt;

&lt;p&gt;Good news, this is really easy to fix. The simple solution is to use &lt;a href="https://github.com/css-modules/css-modules"&gt;CSS Modules&lt;/a&gt; which works out of the box with Create React App, Next.js, or Gatsby. If you want to take it a step further have a look at one of the modern CSS-in-JS libraries like &lt;a href="https://styled-components.com/"&gt;styled-components&lt;/a&gt;. You might need to tweak your app's setup slightly but there should be tutorials in most cases.&lt;/p&gt;

&lt;p&gt;In case you want to see an example, here you go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// don't use global classes like this&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// this will become class="box" in the HTML&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// but rather scoped classes with CSS Modules&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Box.module.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// this will become something like class="Box‚Äîbox-3MbgH"&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// or styled-components (even better imo)&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
  background: red;
`&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// this will be similar to class="Box‚Äîbox-3MbgH"&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#application-logic"&gt;
  &lt;/a&gt;
  Application logic
&lt;/h3&gt;

&lt;p&gt;Application logic (aka your JS code) is what makes the difference between a website and a web application.&lt;/p&gt;

&lt;p&gt;If you plan to become a real software developer you need to prove that you can build more than a simple static website. That's one of the reasons &lt;a href="https://jkettmann.com/dont-waste-your-time-on-a-portfolio-website/"&gt;I'd recommend not to waste a lot of time on a portfolio website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Any real-world application touches three important areas: routing, state, and data. These are also the areas you should prove your skills in. As a bonus point, let me mention automated tests since they are super important in the daily life of many developers. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Routing:&lt;/strong&gt; You can use the de facto standard &lt;a href="https://reactrouter.com/"&gt;React Router&lt;/a&gt;. A route with URL parameters would be nice to have.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;State:&lt;/strong&gt; Any dynamic app relies on state. But no need to go fancy here. Since GraphQL or &lt;a href="https://react-query.tanstack.com/reference/useQuery"&gt;React Query&lt;/a&gt; I see more and more applications move away from state management solutions like Redux. So in my opinion, the native React hooks &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useReducer&lt;/code&gt;, or &lt;code&gt;useContext&lt;/code&gt; should be sufficient.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data:&lt;/strong&gt; Your app should at least fetch some data from an API and render it. Ideally, the user can trigger requests dynamically. For example, by applying a filter or submitting a form. You can prove that you understand the data flow, that you can structure your data, and that you know the basic JS array functions like &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, or &lt;code&gt;reduce&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tests:&lt;/strong&gt; Automated tests are essential for any serious software product. And Senior developers value testing very highly. At the same time, most Junior developers have no experience in testing whatsoever. That can be your advantage. If you cover at least parts of your code with tests you'll have a huge advantage over other candidates. Take my word on it and give React Testing Library a try. Here you can find &lt;a href="https://jkettmann.com/beginners-guide-to-testing-react"&gt;a beginner's guide to testing React apps&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git
&lt;/h3&gt;

&lt;p&gt;As a software developer, you'll have to work with other developers eventually. And the one tool essential to collaboration among devs is Git.&lt;/p&gt;

&lt;p&gt;So starting to use Git in a proper way can't hurt in any case. But it might also impact your chances of getting a job.&lt;/p&gt;

&lt;p&gt;When I review a portfolio project to assess a candidate's skill level I tend to have a look at the commit history.&lt;/p&gt;

&lt;p&gt;Imagine looking at a project's Git history and seeing commits like these:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S8xwN3_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/sEIcyQ38RcW3cS86HdKu" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S8xwN3_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/sEIcyQ38RcW3cS86HdKu" alt="Untitled 1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This looks very unprofessional.&lt;/p&gt;

&lt;p&gt;I'll admit, I have commits like these in my personal projects as well. We all get tired or commit too many changes at once to find a proper name.&lt;/p&gt;

&lt;p&gt;But you want to impress potential employers with your portfolio project, right? &lt;strong&gt;So rather write concise yet descriptive commit messages.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EVfcyWs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/WKHx7EUKRQKBeAhVZmo9" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EVfcyWs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media.graphcms.com/WKHx7EUKRQKBeAhVZmo9" alt="Untitled 2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Look at this. Now it's immediately clear what this commit is about. Even though it's not proper English üôÇ&lt;/p&gt;

&lt;p&gt;If you want to take a step further consider &lt;strong&gt;working on branches and using Pull Requests&lt;/strong&gt; on GitHub to merge your branches.&lt;/p&gt;

&lt;p&gt;This will signal that you have a grasp of professional development workflows. &lt;a href="https://ooloo.io/project/github-flow"&gt;If you're interested in a professional Git workflow have a look at this free course&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-1-summary"&gt;
  &lt;/a&gt;
  Part 1: Summary
&lt;/h3&gt;

&lt;p&gt;In this part, we wanted to answer one question: How can you build your React portfolio projects like a pro? The goal is to impress your future employer and convince them that you can be a valuable member of their team. &lt;/p&gt;

&lt;p&gt;Here a short overview of the tips in this part:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Workflows: Write your code based on designs and tasks.&lt;/li&gt;
&lt;li&gt;Styles: write custom &amp;amp; responsive CSS, use styled-components or CSS Modules.&lt;/li&gt;
&lt;li&gt;Logic: your app should have multiple pages, be stateful, and fetch data from an API. I'd highly recommend covering at least part of your code with automated tests.&lt;/li&gt;
&lt;li&gt;Git: Write clear commit messages. Ideally use branches and Pull Requests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://profy.dev/article/react-projects-for-your-portfolio#nl-4385791l5b9g3"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bjqjyJA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5hi7fqeite6pv4xx91a.png" alt="checklist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'll release the two remaining parts in the next days here on dev.to. If you want to read all of them right away you can visit the original post at &lt;a href="https://profy.dev/article/react-projects-for-your-portfolio"&gt;profy.dev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Illustration based on &lt;a href="https://www.drawkit.io/"&gt;drawkit.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>career</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Keep track of your books üìöusing this template</title>
      <author>Sarthak Sharma</author>
      <pubDate>Fri, 09 Jul 2021 11:38:12 +0000</pubDate>
      <link>https://dev.to/xenoxdev/keep-track-of-your-books-using-this-template-4m14</link>
      <guid>https://dev.to/xenoxdev/keep-track-of-your-books-using-this-template-4m14</guid>
      <description>&lt;p&gt;Hey folks üëãüèº&lt;/p&gt;

&lt;p&gt;We just launched another Product on Product Hunt. It's a notion template that lets you keep track of all your awesome books in one place. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion-library-template"&gt;
  &lt;/a&gt;
  Notion Library Template
&lt;/h3&gt;

&lt;p&gt;In this template you can write summaries, prioritize text, remember your favorites, and make reading productive - like never before.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UUrIxYcX5As"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#track-your-books"&gt;
  &lt;/a&gt;
  Track your books
&lt;/h3&gt;

&lt;p&gt;Got the reading bug? This feature-rich Notion template lets you keep track of all your awesome books in one place. Write summaries, prioritize text, remember your favorites, and make reading productive - like never before.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7sZGOfED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4ckrt2jaxskocyrzp5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7sZGOfED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4ckrt2jaxskocyrzp5q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#save-and-organize-books"&gt;
  &lt;/a&gt;
  Save and organize books
&lt;/h3&gt;

&lt;p&gt;You can save your books in a section and add descriptions and genres so that you have an easier time accessing them according to your mood.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---RxVBD_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9y1jnjqoqfb9c3d12s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---RxVBD_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/og9y1jnjqoqfb9c3d12s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mark-books-as-favorite"&gt;
  &lt;/a&gt;
  Mark books as favorite
&lt;/h3&gt;

&lt;p&gt;You can mark your book as favorite So that you can track your reading pattern and understand what genre among books you really like the best&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0xPXkqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96lewr08dctocliane0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0xPXkqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96lewr08dctocliane0z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#archive-books"&gt;
  &lt;/a&gt;
  Archive books
&lt;/h3&gt;

&lt;p&gt;Remove from sight the books you have already finished reading, but still keep them safe if you ever want to access them later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sort-books-by-language"&gt;
  &lt;/a&gt;
  Sort books by language
&lt;/h3&gt;

&lt;p&gt;What better way to learn languages than by reading interesting books? Easily arrange your books according to language and access your books faster.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eh-Ly2QQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u25ysl6i1h5knjtei47q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eh-Ly2QQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u25ysl6i1h5knjtei47q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sort-books-by-status"&gt;
  &lt;/a&gt;
  Sort books by status
&lt;/h3&gt;

&lt;p&gt;Reading 10 books at a time? Always know where you left off with the in-built status tracker.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#view-owned-books"&gt;
  &lt;/a&gt;
  View owned books
&lt;/h3&gt;

&lt;p&gt;Rented a book or bought one? Keep rented ones on priority, read them faster, and save money!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-dictionary-of-unfamiliar-words"&gt;
  &lt;/a&gt;
  A dictionary of unfamiliar words
&lt;/h3&gt;

&lt;p&gt;This amazing feature is especially for those who're learning a new language. Sharpen your vocabulary while reading through juicy chapters!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l0FQTCCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckxdjpok9m8i3ig3wuxu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l0FQTCCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ckxdjpok9m8i3ig3wuxu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rate-books"&gt;
  &lt;/a&gt;
  Rate books
&lt;/h3&gt;

&lt;p&gt;Sort out which authors seem to tickle your funny bone better than the rest! Being a book critic was never easier!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-summaries"&gt;
  &lt;/a&gt;
  Add summaries
&lt;/h3&gt;

&lt;p&gt;Reading for a school project or a work-related presentation? Create summaries and refresh key points at a glance. Brush up on a topic any time you want.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crossplatform-syncs"&gt;
  &lt;/a&gt;
  Cross-platform syncs
&lt;/h3&gt;

&lt;p&gt;Sync your books with other third-party apps that you use to track your book reading progress. This library really is all-in-one!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-one"&gt;
  &lt;/a&gt;
  Want One?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cIW1XzYs2fYK5EneDA/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cIW1XzYs2fYK5EneDA/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;&lt;em&gt;Here is your link&lt;/em&gt;&lt;/strong&gt; üëâ &lt;a href="https://prototion.com/notion-dashboard/Notion-Library-5A7h4Lk3yuL08kuA"&gt;&lt;strong&gt;&lt;em&gt;Notion Library&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are on Producthunt today. Go show some love hereüî•&lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/notion-library-2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---t4FGDZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fnm5lk4b4doswq9a2iey.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Let's build an Android Quiz Application with Appwrite</title>
      <author>Damodar Lohani</author>
      <pubDate>Fri, 09 Jul 2021 11:20:45 +0000</pubDate>
      <link>https://dev.to/appwrite/let-s-build-an-android-quiz-application-with-appwrite-3kn1</link>
      <guid>https://dev.to/appwrite/let-s-build-an-android-quiz-application-with-appwrite-3kn1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-appwrite"&gt;
  &lt;/a&gt;
  ü§î What is Appwrite?
&lt;/h2&gt;

&lt;p&gt;In case you‚Äôre new to Appwrite, Appwrite is an new open-source, end-to-end, backend server for front-end and mobile developers that allows you to build apps much faster. Its goal is to abstract and simplify common development tasks behind REST APIs and tools, helping you to build advanced apps faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#appwrite-for-android"&gt;
  &lt;/a&gt;
  ü§ñ Appwrite for Android
&lt;/h2&gt;

&lt;p&gt;Appwrite provides &lt;strong&gt;sleek REST APIs&lt;/strong&gt; for various common features that are required for mobile application development such as a &lt;strong&gt;database&lt;/strong&gt;, &lt;strong&gt;storage&lt;/strong&gt;, &lt;strong&gt;cloud functions&lt;/strong&gt;, &lt;strong&gt;authentication&lt;/strong&gt; etc. so that we as a developer can focus on our application rather than on backend implementation. This makes Appwrite very suitable for those of us who want to build Android applications. And with the latest release, Appwrite now has an &lt;strong&gt;official Android SDK&lt;/strong&gt; to make it even easier to use Appwrite in our Android applications. In this tutorial we'll build a simple android quiz application using Appwrite. So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  üìù Prerequisites
&lt;/h2&gt;

&lt;p&gt;In order to continue with this tutorial, you need to have an Appwrite console that you can access and have permission to create a project or already have an existing project. If you have not already installed Appwrite, please do so. Installing Appwrite is really simple following Appwrite's official &lt;a href="https://appwrite.io/docs/installation"&gt;installation docs&lt;/a&gt;. Installation should be done in less than 2 minutes. Once installed login to your console and &lt;strong&gt;create a new Project&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-database"&gt;
  &lt;/a&gt;
  üíæ Setup Database
&lt;/h2&gt;

&lt;p&gt;In the Appwrite console, let's select the project that we will be using for our Android app. If you don't have a project yet, you can easily create one by clicking on the &lt;strong&gt;Create Project&lt;/strong&gt; button. Once inside, select &lt;strong&gt;Database&lt;/strong&gt; from the left sidebar. Once on the database page click on the &lt;strong&gt;Add Collection&lt;/strong&gt; button and inside the dialog set the collection name to &lt;strong&gt;Questions&lt;/strong&gt; and then click the &lt;strong&gt;Create&lt;/strong&gt; button. This will then create a collection and you will be redirected to the new collection's page where we can define rules for our collection. Define the following rules and click on the &lt;strong&gt;Update&lt;/strong&gt; button.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Question&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;label: Question&lt;/li&gt;
&lt;li&gt;Key: question&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Options&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;label: Options&lt;/li&gt;
&lt;li&gt;Key: options&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: true&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Answer&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;label: Answer&lt;/li&gt;
&lt;li&gt;Key: answer&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_2NDuDuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rliaqicn2z3b43afm2b1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_2NDuDuU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rliaqicn2z3b43afm2b1.png" alt="Questions Collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can navigate to the &lt;strong&gt;Documents&lt;/strong&gt; tab and using the &lt;strong&gt;Add Document&lt;/strong&gt; button, add as many questions with options and answers as you like for your quiz application. Make sure to add a few questions so that we can easily fetch and build our quiz application in Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-android-project-and-dependencies"&gt;
  &lt;/a&gt;
  ‚öôÔ∏è Setup Android Project and Dependencies
&lt;/h2&gt;

&lt;p&gt;Using Android Studio, create a new Android Application project choosing the &lt;strong&gt;Empty Activity&lt;/strong&gt; template. Once the project is created, in your app's root level &lt;code&gt;build.gradle(.kts)&lt;/code&gt; file,  add the &lt;code&gt;mavenCentral()&lt;/code&gt; repository in order to fetch the Appwrite Android SDK.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;repositories&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;      
    &lt;span class="n"&gt;mavenCentral&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, add the dependency to your app's &lt;code&gt;build.gradle(.kts)&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;implementation&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"io.appwrite:sdk-for-android:0.1.0"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-add-android-platform"&gt;
  &lt;/a&gt;
  ‚ûïÔ∏è Add Android Platform
&lt;/h2&gt;

&lt;p&gt;To initialize your SDK and start interacting with Appwrite services, you need to add a new Android platform to your project. To add a new platform, go to your Appwrite console, select your project (create one if you haven't already), and click the 'Add Platform' button on the project Dashboard.&lt;/p&gt;

&lt;p&gt;From the options, choose to add a new Android platform and add your app credentials.&lt;/p&gt;

&lt;p&gt;Add your app name and package name. Your package name is generally the &lt;code&gt;applicationId&lt;/code&gt; in your app-level &lt;code&gt;build.gradle&lt;/code&gt; file. You may also find your package name in your &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. By registering a new platform, you are allowing your app to communicate with the Appwrite API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-activity-and-layout"&gt;
  &lt;/a&gt;
  ‚öíÔ∏è Build Activity and Layout
&lt;/h2&gt;

&lt;p&gt;Add new activity by going to &lt;code&gt;File&amp;gt;New&amp;gt;Activity&amp;gt;Empty Activity&lt;/code&gt; and name it &lt;strong&gt;QuizActivity&lt;/strong&gt;. This will create &lt;code&gt;QuizActivity.kt&lt;/code&gt; and &lt;code&gt;activity_quiz.xml&lt;/code&gt; files in their respective folders.&lt;/p&gt;

&lt;p&gt;Now, open your &lt;code&gt;app/src/main/res/layout/activity_main.xml&lt;/code&gt; and update the layout as following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:tools=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/tools"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkslategray"&lt;/span&gt;
    &lt;span class="na"&gt;tools:context=&lt;/span&gt;&lt;span class="s"&gt;".MainActivity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginBottom=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:fontFamily=&lt;/span&gt;&lt;span class="s"&gt;"sans-serif-medium"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Demo Quiz With Android"&lt;/span&gt;
        &lt;span class="na"&gt;android:textColor=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkgray"&lt;/span&gt;
        &lt;span class="na"&gt;android:textSize=&lt;/span&gt;&lt;span class="s"&gt;"24sp"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnPlay"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnPlay"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Play Now"&lt;/span&gt;
        &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/buttonStyle"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintLeft_toLeftOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintRight_toRightOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, open &lt;code&gt;app/src/main/java/com/example/demoquizwithandroid/MainActivity.kt&lt;/code&gt; and update the &lt;code&gt;onCreate&lt;/code&gt; function like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nf"&gt;setContentView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activity_main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;button&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;btnPlay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;intent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;QuizActivity&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;startActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, open &lt;code&gt;app/src/main/res/layout/activity_quiz.xml&lt;/code&gt; and update the layout to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:tools=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/tools"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:padding=&lt;/span&gt;&lt;span class="s"&gt;"24dp"&lt;/span&gt;
    &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkslategray"&lt;/span&gt;
    &lt;span class="na"&gt;tools:context=&lt;/span&gt;&lt;span class="s"&gt;".QuizActivity"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/questionNumber"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Question 5/15"&lt;/span&gt;
        &lt;span class="na"&gt;android:textSize=&lt;/span&gt;&lt;span class="s"&gt;"32sp"&lt;/span&gt;
        &lt;span class="na"&gt;android:textStyle=&lt;/span&gt;&lt;span class="s"&gt;"bold"&lt;/span&gt;
        &lt;span class="na"&gt;android:textColor=&lt;/span&gt;&lt;span class="s"&gt;"@color/darkgray"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ImageView&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/dashedLine"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"4dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:src=&lt;/span&gt;&lt;span class="s"&gt;"@drawable/dashed_line"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@id/questionNumber"&lt;/span&gt;
        &lt;span class="na"&gt;android:layerType=&lt;/span&gt;&lt;span class="s"&gt;"software"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/question"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginTop=&lt;/span&gt;&lt;span class="s"&gt;"16dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Question"&lt;/span&gt;
        &lt;span class="na"&gt;android:textColor=&lt;/span&gt;&lt;span class="s"&gt;"@color/white"&lt;/span&gt;
        &lt;span class="na"&gt;android:textSize=&lt;/span&gt;&lt;span class="s"&gt;"26sp"&lt;/span&gt;
        &lt;span class="na"&gt;android:textStyle=&lt;/span&gt;&lt;span class="s"&gt;"bold"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/options"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintTop_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/dashedLine"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;RadioGroup&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/options"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"0dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginBottom=&lt;/span&gt;&lt;span class="s"&gt;"24dp"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toTopOf=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnNext"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option1"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 1"&lt;/span&gt;
            &lt;span class="na"&gt;tools:layout_editor_absoluteX=&lt;/span&gt;&lt;span class="s"&gt;"116dp"&lt;/span&gt;
            &lt;span class="na"&gt;tools:layout_editor_absoluteY=&lt;/span&gt;&lt;span class="s"&gt;"75dp"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option2"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 2"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option3"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 3"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;RadioButton&lt;/span&gt;
            &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/option4"&lt;/span&gt;
            &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/optionRadioButton"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
            &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
            &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Option 4"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/RadioGroup&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/btnNext"&lt;/span&gt;
        &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"@style/buttonStyle"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginBottom=&lt;/span&gt;&lt;span class="s"&gt;"8dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:text=&lt;/span&gt;&lt;span class="s"&gt;"Next"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintBottom_toBottomOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintEnd_toEndOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;
        &lt;span class="na"&gt;app:layout_constraintStart_toStartOf=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-view-model"&gt;
  &lt;/a&gt;
  üë©‚Äçüîß Create View Model
&lt;/h2&gt;

&lt;p&gt;Create &lt;code&gt;app/src/main/java/com/example/demoquizwithandroid/QuizViewModel.kt&lt;/code&gt; and update it with following code. Make sure to replace &lt;code&gt;YOUR_APPWRITE_ENDPOINT&lt;/code&gt;, &lt;code&gt;YOUR_PROJECT_ID&lt;/code&gt; and &lt;code&gt;YOUR_QUESTIONS_COLLECTION_ID&lt;/code&gt; with your values which can all be found in your Appwrite console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.content.Context&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;android.util.Log&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.LiveData&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.MutableLiveData&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.ViewModel&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;androidx.lifecycle.viewModelScope&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.Client&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.exceptions.AppwriteException&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io.appwrite.services.Database&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;kotlinx.coroutines.launch&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.json.JSONArray&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.json.JSONObject&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuizViewModel&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewModel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;collectionId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"YOUR_QUESTIONS_COLLECTION_ID"&lt;/span&gt; &lt;span class="c1"&gt;// Replace with your own questions collection id that we created above&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;db&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nf"&gt;lazy&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;_questions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;JSONArray&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;client&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;JSONArray&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_questions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;selectedQuestion&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;correct&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"YOUR_APPWRITE_ENDPOINT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Replace with your own endpoint&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"YOUR_PROJECT_ID"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Replace with your project id&lt;/span&gt;
        &lt;span class="nf"&gt;getQuestions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;getQuestions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;viewModelScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;collectionId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;string&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;que&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;_questions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;que&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"documents"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;JSONArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppwriteException&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nc"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Get questions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this to work you also need to add following dependencies to your &lt;code&gt;app/build.gradle&lt;/code&gt; file. These are the dependencies required for &lt;code&gt;LiveData&lt;/code&gt; and &lt;code&gt;ViewModel&lt;/code&gt; to work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'androidx.appcompat:appcompat:1.3.0'&lt;/span&gt;
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'&lt;/span&gt;
    &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally update &lt;code&gt;app/src/main/java/com/example/demoquizwithandroid/QuizActivity.kt&lt;/code&gt; with the following code and build your application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QuizActivity&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;AppCompatActivity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;QuizViewModel&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;currentQuestion&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;setContentView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;activity_quiz&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ViewModelProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;QuizViewModel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;questions&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;questions&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;questionNumber&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Question ${(index+1)}/${questions.length()}"&lt;/span&gt;
                    &lt;span class="n"&gt;currentQuestion&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;JSONObject&lt;/span&gt;

                    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;options&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currentQuestion&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;JSONArray&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TextView&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;currentQuestion&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"question"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                            &lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                        &lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;VISIBLE&lt;/span&gt;
                        &lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;VISIBLE&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;option3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;GONE&lt;/span&gt;
                        &lt;span class="n"&gt;option4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;GONE&lt;/span&gt;

                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;btnNext&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;setOnClickListener&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;onNextClicked&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onNextClicked&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentQuestion&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;rbGroup&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;RadioGroup&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;RadioGroup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;rbSelected&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;RadioButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rbGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;checkedRadioButtonId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rbSelected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;currentQuestion&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"answer"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;rbGroup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clearCheck&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;questions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//show complete dialog&lt;/span&gt;
            &lt;span class="nc"&gt;Log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Quiz complete"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Quiz complete"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;alertDialog&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;AlertDialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Builder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Quiz complete"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Score: ${viewModel.correct.value!!} / ${viewModel.questions.value!!.length()}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setNeutralButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Done"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;DialogInterface&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;OnClickListener&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
                    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;intent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;MainActivity&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addFlags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FLAG_ACTIVITY_CLEAR_TOP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addFlags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FLAG_ACTIVITY_NEW_TASK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nf"&gt;startActivity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="n"&gt;alertDialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;selectedQuestion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should now have our complete quiz application which should look as follows.&lt;/p&gt;

&lt;p&gt;
   &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NjKfi1Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlf2kxgkkvku2n0oco6l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NjKfi1Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tlf2kxgkkvku2n0oco6l.png"&gt;&lt;/a&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--57PnRnBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5h4c1pve8heu515nrc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57PnRnBd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e5h4c1pve8heu515nrc5.png"&gt;&lt;/a&gt; 
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  ü•Ç Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed building this Quiz Application with Appwrite and Android. Let's us know if you have any feedback and suggestions. Can't wait for the community to build awesome apps with Appwrite and Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  üéì Learn More
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/getting-started-with-android"&gt;Getting Started With Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite/playground-for-android"&gt;Android Playground&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite/demo-quiz-with-android"&gt;Demo Quiz Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>android</category>
      <category>opensource</category>
      <category>tutorial</category>
      <category>discuss</category>
    </item>
    <item>
      <title>The programming languages I like and why I like them</title>
      <author>Deepu K Sasidharan</author>
      <pubDate>Fri, 09 Jul 2021 11:19:06 +0000</pubDate>
      <link>https://dev.to/deepu105/the-programming-languages-i-like-and-why-i-like-them-385o</link>
      <guid>https://dev.to/deepu105/the-programming-languages-i-like-and-why-i-like-them-385o</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://deepu.tech/languages-i-like-and-why/"&gt;deepu.tech&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Being a polyglot developer is fun. You are not married to a single language/ecosystem and you have a diverse tool-belt to choose from based on the issue at hand. But still, you are going to have favorites based on your experience with different languages and their ecosystem.&lt;/p&gt;

&lt;p&gt;In my career, spanning 11+ years, I have worked with many programming languages. The first programming language I encountered was Basic when I was in school, but I won't count that since I didn't pay any attention and I didn't understand it back then.&lt;/p&gt;

&lt;p&gt;Later when I was in college I had a mandatory computer science class, I was doing Electrical and Electronic Engineering, and there I first came across C, C++, and Java. But again It was just basics and I wasn't very interested and I just studied enough to clear the paper.&lt;/p&gt;

&lt;p&gt;Later, I was running a blog about motorcycles and I started dabbling with WordPress, Flash, ActionScript, and JavaScript.&lt;/p&gt;

&lt;p&gt;I first programming language I actually learned with an interest was &lt;a href="https://en.wikipedia.org/wiki/Scheme_(programming_language)"&gt;Scheme&lt;/a&gt;, It was a training language used in my first job as an IT Intern/Trainee and that got me hooked and in few months I started learning Java and JavaScript.&lt;/p&gt;

&lt;p&gt;I became quite good at Java and JS and really was enjoying working with those and If you have asked me back then, I would have said that Java and JS were the greatest languages out there.&lt;/p&gt;

&lt;p&gt;So for a pretty good part of my career, I was coding in Java and JavaScript and later TypeScript. I did work with a bit of Groovy, Python, and Scala but I didn't like those languages much and I had no interest in learning any new languages at that point.&lt;/p&gt;

&lt;p&gt;A few years ago when Golang was all the rage, I moved to a project that was built in Go and hence started looking into Go. It was extremely easy to learn and I really liked working with it (for a while).&lt;/p&gt;

&lt;p&gt;Rust was quite new at that point and I wanted to try it out but got around to it only a year later and I was in love with it.&lt;/p&gt;

&lt;p&gt;In the past two years, I also worked with Kotlin, PHP, Ruby, and C# as well occasionally. But I wasn't very impressed with Ruby and PHP.&lt;/p&gt;

&lt;p&gt;So without further adieu, these are my favorite programming languages in order.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-rust"&gt;
  &lt;/a&gt;
  1. Rust
&lt;/h1&gt;

&lt;p&gt;Rust is currently my most favorite language. It's so much fun to work with and I love the challenge of rethinking how you write code. You know, as they say, it sparks joy when you work with it. Rust is truly a modern and powerful programming language.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XkDzhPMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1278304200947089416/XocBIsMa_normal.jpg" alt="Deepu K Sasidharan ( ‡¥¶‡µÄ‡¥™‡µÅ, ‡Æ§‡ØÄ‡Æ™‡ØÅ, ‡§¶‡•Ä‡§™‡•Ç ) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Deepu K Sasidharan ( ‡¥¶‡µÄ‡¥™‡µÅ, ‡Æ§‡ØÄ‡Æ™‡ØÅ, ‡§¶‡•Ä‡§™‡•Ç )
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/deepu105"&gt;@deepu105&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/java"&gt;#java&lt;/a&gt;: I'll provide you memory safety but you must pay performance penalty for abstractions and the runtime&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/C"&gt;#C&lt;/a&gt;++: I'll provide you zero cost abstractions, but you must pay with memory safety&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/Rust"&gt;#Rust&lt;/a&gt;: hold my üç∫
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:11 PM - 08 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1413259371472109573" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1413259371472109573" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1413259371472109573" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Rust would be my go-to for systems programming, embedded, CLIs, OS tools, WebAssembly, and so on. I guess the only place I won't use Rust would be serious monolithic web application development as the ecosystem is not mature for that yet.&lt;/p&gt;

&lt;p&gt;I wrote in detail about what I like and dislike about Rust in &lt;a href="https://deepu.tech/my-second-impression-of-rust/"&gt;this post&lt;/a&gt;, but I'll summarize it here for the casual skimmers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#safety"&gt;&lt;strong&gt;Safe by default&lt;/strong&gt;&lt;/a&gt;: Rust is memory safe, thread-safe, type-safe, and null safe&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#zero-cost-abstractions"&gt;&lt;strong&gt;Zero cost abstractions&lt;/strong&gt;&lt;/a&gt;: Write in any programming style without worrying about the added performance penalty&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#fearless-concurrency"&gt;&lt;strong&gt;Awesome concurrency&lt;/strong&gt;&lt;/a&gt;: Great support for multi-threading, parallelism, and asynchronous programming&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/my-second-impression-of-rust/#community-tooling--ecosystem"&gt;&lt;strong&gt;Great tooling out of the box&lt;/strong&gt;&lt;/a&gt;: Cargo, Clippy, Rustfmt, and so on. It's the best tooling ecosystem I have come across. Testing, building, bootstrapping, benchmarking, linting and more included out of the box.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Immutable by default&lt;/strong&gt;: You need to declare mutable operations explicitly&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Built-in functional programming abstractions&lt;/strong&gt;: Monad like iterators, optional, chaining, and so on&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/macros-in-rust-a-tutorial-with-examples/#typesofmacrosinrust"&gt;&lt;strong&gt;Macros&lt;/strong&gt;&lt;/a&gt;: Powerful metaprogramming that can be used to define custom language features, code reusability, and so on&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Excellent community&lt;/strong&gt;: Fast-growing, active, and really supportive community&lt;/li&gt;
&lt;li&gt;Superfast, as fast as or sometimes even faster than C/C++&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No heavy runtime&lt;/strong&gt;: No garbage collection and so on. There is a very small runtime for panics and stuff, but IMO it's negligible&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Excellent language features&lt;/strong&gt;: Pattern matching, generics, iterators, traits, expressions, and so on&lt;/li&gt;
&lt;li&gt;Hands down the best compiler out there. You have to try it to appreciate it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fast growing and being widely adopted&lt;/strong&gt;: Rust is going places. There are a lot of big names(Google, Microsoft, AWS, Apple, and so on) adopting it and hence cementing its place. It's also finding footing outside of systems programming like embedded, web assembly, web development, game development, and so on. Once the ecosystems for different use cases mature, I see great potential for Rust to be a great general-purpose language without any major compromise.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Native images&lt;/strong&gt;: It's so easy to build native images with Rust, no special setup required. Cargo supports building for your favorite platform out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/first-impression-of-rust/#complexity"&gt;&lt;strong&gt;Complexity&lt;/strong&gt;&lt;/a&gt;: Being an amalgamation of many languages, Rust does feel more complex than many other languages. I especially would have preferred to not have multiple ways to do the same thing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Learning curve&lt;/strong&gt;: Rust is not the easiest language to learn, especially if you are a beginner or if you are used to working only in one language like Java, C#, or Python. But if you are polyglot and already familiar with a few languages like C/C++, Java, TS, and Go, you will feel quite at home with Rust. There are some advanced concepts like borrowing and lifetimes that take some getting used to and practice to grasp.&lt;/li&gt;
&lt;li&gt;Ecosystem is not mature enough for many use cases. I would love to use Rust for web application development but the ecosystem for that is still very young and you are gonna have a hard time compared to something like Java or C#&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#2-java"&gt;
  &lt;/a&gt;
  2. Java
&lt;/h1&gt;

&lt;p&gt;Java isn't cool like Rust or feature-rich like JavaScript but it makes up for all that by having one of the most stable, battle-tested, and rich ecosystems.&lt;/p&gt;

&lt;p&gt;So if I would start my own company with a web application as the product, I would 100% go with JVM on the backend with either Java or Kotlin, and of course I will build it using &lt;a href="https://www.jhipster.tech/"&gt;JHipster&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like Java, it's hard not to like Kotlin. It feels like a modern version of Java and building Android apps using Kotlin was a nice experience. Unlike Scala, Kotlin doesn't go overboard with all the complexity and implicit stuff.&lt;/p&gt;

&lt;p&gt;I might choose Kotlin over Java if building a new web app and if the team has experience with Kotlin.&lt;/p&gt;

&lt;p&gt;Also, Java is close to my heart as it's the programming language that jump-started my career.&lt;/p&gt;

&lt;p&gt;Here is what I like and dislike about Java&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Ecosystem&lt;/strong&gt;: The biggest strength of Java is its ecosystem. There are great frameworks and libraries for everything you can think of and most of these solutions are extremely stable with a lot of community and support. In reality, the ecosystem is whats keeping Java popular and growing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Experienced community&lt;/strong&gt;: Java has a very mature and experienced community so even if you are a beginner there is a lot of resources to help you&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Great tooling&lt;/strong&gt;: There are a lot of great tools out there for Java. IDEs like IntelliJ, Eclipse, NetBeans offer some of the best developer experiences, and build tools like Gradle and Maven are so powerful and feature-rich. There are also profilers, linters, and so on.&lt;/li&gt;
&lt;li&gt;Built-in &lt;a href="https://deepu.tech/functional-programming-in-java-for-beginners/"&gt;functional programming abstractions&lt;/a&gt;: Monad like iterators, streams, optional, functional interfaces, and so on&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fairly easy to learn&lt;/strong&gt;: Java is not very complex and hence is fairly easy to learn and get started even with its boilerplate.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Boilerplate&lt;/strong&gt;: Java needs too much boilerplate. There is no nice way to say this. Compared to other languages in its league, Java feels too verbose. Lambdas have made it more digestible but there are other JVM languages like Kotlin or Scala that have got this part right. I really wish Java gets there one day where you don't have to write 20 lines of code to read a file.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Not so modern&lt;/strong&gt;: Language features in Java are, let's just say it doesn't spark joy, it's improving but if you are used to few other languages, then there is a lot to wish for, and compared to its peers Java feels old even though its just as old as JS, Ruby or Python&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Baggage&lt;/strong&gt;: Java has great backward compatibility but that also means baggage. there is a lot of such baggage in Java and it's holding the language back in my humble opinion.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Virtual machine&lt;/strong&gt;: JVM was a great idea when Java was introduced as portability was not easy back then but in today's IT landscape containers and native images have made portability easy and that makes a Java Virtual Machine redundant. JVM still provides a lot of valuable features but it also takes up resources and space whereas languages like Go or Rust can just build tiny native binaries that can be deployed using docker to get better performance with less resource usage than a Java app running on JVM.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#3-typescriptjavascript"&gt;
  &lt;/a&gt;
  3. TypeScript/JavaScript
&lt;/h1&gt;

&lt;p&gt;Most Java developers hate JavaScript but I have a &lt;a href="https://deepu.tech/reflections-on-javascript/"&gt;love-hate relationship&lt;/a&gt; with it. JavaScript is one of the quirkiest languages around and like it or not it's the de-facto for the web and it gets the job done.&lt;/p&gt;

&lt;p&gt;I like TypeScript a lot more than JavaScript and find it way nicer to work with than JS. So TS and by extension JS would tie with Java for the second spot for me.&lt;/p&gt;

&lt;p&gt;TS/JS is still my go-to for quick scripting and building client-side apps and mobile apps (ReactNative/PWA)&lt;/p&gt;

&lt;p&gt;I wrote in detail about what I like and dislike about JS in this post, here is the summary&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#dynamic--extremely-flexible"&gt;&lt;strong&gt;Flexible&lt;/strong&gt;&lt;/a&gt;: The dynamic nature of JS/TS makes it extremely flexible and powerful. It's also very forgiving language. If you know what you are doing, there is literally nothing you cant get done. Of course, the flexibility comes with its own price.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#biggest-community"&gt;&lt;strong&gt;Community&lt;/strong&gt;&lt;/a&gt;: JavaScript has the biggest community among programming languages. It's active, mature, and thriving. It's a huge strength as it helps beginners and experts alike in solving problems and improving the ecosystem on the whole.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ecosystem&lt;/strong&gt;: JS has a huge ecosystem with a lot of libraries and frameworks. You will find anything you could imagine as a library. The ecosystem is so big that it has started to become an issue in terms of "yet another framework syndrome".&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Asynchronous programming&lt;/strong&gt;: JS has one of the best ecosystems for asynchronous programming. It's so easy to write async code with Promises and async/await and it has become the de-facto way of programming in JS these days.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Great tooling&lt;/strong&gt;: JS has great tooling, thanks to NodeJS and its ecosystem. IDEs like VS Code, Atom, Webstorm, and so on provide great JS support. There are also so many wonderful tools like Webpack, Rollup, Jest, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/functional-programming-in-typescript/"&gt;&lt;strong&gt;Functional programming&lt;/strong&gt;&lt;/a&gt;: JS is multi-paradigm and has a lot of support for functional programming. It's a great fit for functional programming.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#beginner-friendly-but-also-powerful"&gt;&lt;strong&gt;Easy to learn&lt;/strong&gt;&lt;/a&gt;: JS is a simple language to learn and get started. It's one of the most beginner-friendly languages and communities out there. Of course, there is complex stuff in JS but you don't need to know that to get started.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;NodeJS&lt;/strong&gt;: NodeJS was the best thing to happen for software development. It not just revolutionized the JS world but also inspired other languages to take note and be more developer-friendly and build easy-to-use tooling and ecosystem. You can see this inspiration in Rust, Golang, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TypeScript&lt;/strong&gt;: TS is another best thing that happened to JS. It provides an answer to a lot of JS issues that bother people and makes it possible to use JS in a more developer-friendly way on a huge codebase.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#fragmentation-browser-implementations-version-compatibility"&gt;&lt;strong&gt;Fragmentation&lt;/strong&gt;&lt;/a&gt;: This is the biggest issue with JS. There are standards and there is vendors and that's the perfect recipe for disaster. Most of the time a JS developer spends used to be to make it work across different browsers and platforms. The demise of IE has made this better but hey I heard Safari is the next IE so there is that.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#error-prone-a-side-effect-of-flexibility"&gt;&lt;strong&gt;Error-prone&lt;/strong&gt;&lt;/a&gt;: This is the side effect of being too flexible. JS code is extremely error-prone and unmanageable in huge code bases. TypeScript makes this much much better but still, it's so easy to shoot in your own foot with JS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflections-on-javascript/#yet-another-framework-syndrome"&gt;&lt;strong&gt;Framework overload&lt;/strong&gt;&lt;/a&gt;: Too many frameworks for the same thing, too many libraries for the same thing, and libraries for doing extremely trivial stuff like left-padding :( Competition is good but IMO what we have in the JS ecosystem is just too much. It causes mental drain and unnecessary fragmentation in the community.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Over-engineering in the ecosystem&lt;/strong&gt;: I have been doing JS for over 11 years now and I'm noticing a clear trend of over-engineering in the ecosystem. Look at the JS build tooling for example it has been over-engineered to the extend that setting that up feels like a project in itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#4-go"&gt;
  &lt;/a&gt;
  4. Go
&lt;/h1&gt;

&lt;p&gt;Go is the simplest language I have worked with and the easiest to learn. I like Golang for quickly putting something together and Go code is quite easy to read. &lt;/p&gt;

&lt;p&gt;But I would choose Rust over go for large codebase since Go becomes annoying due to its limited features after a while especially on large codebases. IMO go is still ideal for building small system utilities and microservices.&lt;/p&gt;

&lt;p&gt;I wrote in detail about what I like and dislike about Go in &lt;a href="https://deepu.tech/reflection-on-golang/"&gt;this post&lt;/a&gt;, here is the summary&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#likes"&gt;
  &lt;/a&gt;
  üòç Likes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#simplicity"&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;&lt;/a&gt;: Go is extremely simple. You could technically learn it in a day or two. It's easy to get started and be productive in Go. It's also easy to read and debug as there is only one way of doing anything so you know what is going on without having to ask the person who wrote the code. It's the easiest language for beginners as well.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#tooling"&gt;&lt;strong&gt;Built-in tooling and style guide&lt;/strong&gt;&lt;/a&gt;: Go provides built-in tooling for all the basic stuff like dependency management, testing, build and so on. It also has an opinionated formatter that saves a lot of time.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#goroutines--channels"&gt;&lt;strong&gt;Goroutines&lt;/strong&gt;&lt;/a&gt;: Goroutines are awesome. It's so easy to use and intuitive and the best concurrency experience you can find.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Native images&lt;/strong&gt;: It's so easy to build native images with Go, no special setup required. It supports building for your favorite platform out of the box.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dislikes"&gt;
  &lt;/a&gt;
  üò© Dislikes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#simplicity-1"&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;&lt;/a&gt;: Go's simplicity is really nice when you are getting started but it starts to feel like an annoyance once you start writing more Go code. If you come from another language, you soon start to yearn for features like generics, error handling, default values, and so on. Keeping code DRY is a challenge in Go due to the lack of generics. IMO Go would be a great language if it had generics. Also, I dread writing &lt;code&gt;if err != nil&lt;/code&gt; in Go.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Boilerplate&lt;/strong&gt;: Side effect of Go being too simple. In large codebases, you would be repeating stuff like finding an item from an array or map so many times that the boilerplate is just too much after a while.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://deepu.tech/reflection-on-golang/#weird-interface-construct"&gt;&lt;strong&gt;Implicit interfaces&lt;/strong&gt;&lt;/a&gt;: May it's just me. I don't like implicit interface implementations. It just feels wrong and confusing to me.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;These are my personal favorites among programming languages and doesn't mean the likes and dislikes would apply to anyone. make your own conclusions but do use the language before making a judgment about it.&lt;/p&gt;

&lt;p&gt;In today's IT landscape, being a polyglot developer is becoming a requirement. And personally, I believe that being a polyglot makes you a better programmer and software engineer. I previously wrote about &lt;a href="https://deepu.tech/how-to-be-an-effective-polyglot-developer/"&gt;how to be an effective polyglot developer&lt;/a&gt;, do check it out if you are interested.&lt;/p&gt;




&lt;p&gt;If you like this article, please leave a like or a comment.&lt;/p&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/deepu105"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/deepu05/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@tama66"&gt;Peter Herrmann&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/old-computer"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>rust</category>
      <category>go</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Create Custom PopUp Component in React</title>
      <author>Jeetendra</author>
      <pubDate>Fri, 09 Jul 2021 10:54:49 +0000</pubDate>
      <link>https://dev.to/g10dra/create-custom-popup-component-in-react-1o18</link>
      <guid>https://dev.to/g10dra/create-custom-popup-component-in-react-1o18</guid>
      <description>&lt;p&gt;This blog is originally published at &lt;a href="https://www.w3school.info/2021/07/09/how-to-create-a-custom-popup-component-in-react/"&gt;My Blog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes we fade up with using various modal box provided by Bootstrap or material or suppose we are not using any of these frameworks. then in such case we need to create our own  component for Popups and Modal boxes, I created this for one of such requirement.&lt;/p&gt;

&lt;p&gt;This will be a fully Reusable Component that we can Invoke from any of the component entire our project.&lt;/p&gt;

&lt;p&gt;Step 1: Create a file named custom-popup.module.css with following code :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.overlay&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt; &lt;span class="m"&gt;500ms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.popup&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;5s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.popup&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Tahoma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.popup&lt;/span&gt; &lt;span class="nc"&gt;.close&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;200ms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.popup&lt;/span&gt; &lt;span class="nc"&gt;.close&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.popup&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;max-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.popup&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 2: Now create Popup Component with name CustomPopup.jsx with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;popupStyles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./custom-popup.module.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CustomPopup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setShow&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;closeHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setShow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onClose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setShow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;
      &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
        &lt;span class="na"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;visible&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;show&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;popupStyles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;overlay&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;popupStyles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;popup&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;popupStyles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;closeHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;times&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;popupStyles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;CustomPopup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;show&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;onClose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isRequired&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;CustomPopup&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This component using PropTypes, if you havent installed PropTypes in your project then do install that first using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;prop-types &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 3: Invocation from another component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CustomPopup&lt;/span&gt;
        &lt;span class="nx"&gt;onClose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;popupCloseHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello Jeetendra&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;Popup&lt;/span&gt; &lt;span class="nx"&gt;Content&lt;/span&gt; &lt;span class="nx"&gt;Area&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;lorem&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/CustomPopup&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will need 3 props :&lt;br&gt;
1: onClose ‚Äì need a handler to do some activity after close &lt;br&gt;
   click in popup itself&lt;br&gt;
2: show ‚Äì pass the visibility of popup using boolean&lt;br&gt;
3: title ‚Äì provide the popup title&lt;/p&gt;

&lt;p&gt;and Inside the you may pass any valid JSX that you want to render as content of popup&lt;/p&gt;

&lt;p&gt;If you need a complete example how can we do utilise this PopUp Component then you may look into following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;CustomPopup&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./CustomPopup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setVisibility&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;popupCloseHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setVisibility&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setVisibility&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Toggle&lt;/span&gt; &lt;span class="nx"&gt;Popup&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CustomPopup&lt;/span&gt;
        &lt;span class="nx"&gt;onClose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;popupCloseHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello Jeetendra&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;Popup&lt;/span&gt; &lt;span class="nx"&gt;Content&lt;/span&gt; &lt;span class="nx"&gt;Area&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;my&lt;/span&gt; &lt;span class="nx"&gt;lorem&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/CustomPopup&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thats it for this blog. you may reach out to me in case you have any doubts and suggestions please let me know in comments section.&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
      <category>popup</category>
      <category>hooks</category>
    </item>
    <item>
      <title>Beautiful NPM Icon packages for your next web project</title>
      <author>Yeow Zi Qin</author>
      <pubDate>Fri, 09 Jul 2021 10:45:52 +0000</pubDate>
      <link>https://dev.to/ziqinyeow/beautiful-npm-icon-packages-for-your-next-web-project-5266</link>
      <guid>https://dev.to/ziqinyeow/beautiful-npm-icon-packages-for-your-next-web-project-5266</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-favourite"&gt;
  &lt;/a&gt;
  My Favourite
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These are my favourite npm icon packages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Icon pack&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;How to install&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://boxicons.com/"&gt;Boxicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install boxicons --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://boxicons.com/usage/"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://remixicon.com/"&gt;Remix Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install remixicon --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/Remix-Design/RemixIcon"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.modulz.app/"&gt;Radix Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @modulz/radix-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/radix-ui/icons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#recommended"&gt;
  &lt;/a&gt;
  Recommended
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These are my personal recommendations of npm icon packages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Icon pack&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;How to install&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.coreui.io/icons/"&gt;CoreUI Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @coreui/icons@next --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://icons.coreui.io/docs/getting-started/introduction/"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://teenyicons.com/"&gt;Teenyicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i teenyicons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/teenyicons/teenyicons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://icons.getbootstrap.com/"&gt;Bootstrap Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i bootstrap-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://icons.getbootstrap.com/#install"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://feathericons.com/"&gt;Feather Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install feather-icons --save&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/feathericons/feather"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://primer.style/octicons/"&gt;Octicons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install @primer/octicons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://primer.style/octicons/guidelines/usage"&gt;Website&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://ikonate.com/"&gt;Ikonate&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install ikonate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/mikolajdobrucki/ikonate"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://css.gg/app"&gt;CSS.gg icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm install css.gg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/astrit/css.gg"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://phosphoricons.com/"&gt;Phosphor Icon&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;npm i phosphor-icons&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/phosphor-icons/phosphor-icons"&gt;Github&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Hope you are getting excited!üòé&lt;/p&gt;

&lt;p&gt;Further Research:&lt;br&gt;
&lt;a href="https://shapedfonts.com/iconclub/"&gt;ShapeFonts&lt;/a&gt;&lt;br&gt;
&lt;a href="https://wweb.dev/resources/free-icon-sets/"&gt;WWEB.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading, see you in the next post.&lt;/p&gt;

</description>
      <category>npm</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Reusable Collapsible Component with ReactJS</title>
      <author>Hugo Ferreira</author>
      <pubDate>Fri, 09 Jul 2021 10:35:04 +0000</pubDate>
      <link>https://dev.to/huferr/reusable-collapsible-component-with-reactjs-ao4</link>
      <guid>https://dev.to/huferr/reusable-collapsible-component-with-reactjs-ao4</guid>
      <description>&lt;p&gt;Welcome, here's a guide teaching you how to create a simple and useful Reusable Collapsible Component, with ReactJS.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Observation: I created this post considering that you know the basics of ReactJS. If you see anything wrong, please tell me!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can see it working at CodePen: &lt;a href="https://codepen.io/huferr/pen/NWjNLMy"&gt;https://codepen.io/huferr/pen/NWjNLMy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start by creating a functional component and call it &lt;code&gt;Collapsible&lt;/code&gt;. It will return some HTML elements, which will structure our layout.&lt;/p&gt;

&lt;p&gt;For this case, let's set:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;div&lt;/code&gt; element, which will keep all the elements bellow;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;button&lt;/code&gt; element, responsible for toggling the content visibility;&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;div&lt;/code&gt; element, which will handle our content.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, to make this component &lt;strong&gt;reusable&lt;/strong&gt;, we have to pass some properties to it, to make this component accept data from outside, not having to change its structure every time. &lt;/p&gt;

&lt;p&gt;For this we'll set the &lt;em&gt;props: children&lt;/em&gt; and &lt;em&gt;label&lt;/em&gt;, by doing &lt;em&gt;props destructuring&lt;/em&gt;, it means you don't have to call "props.children" or "props.label" every time you want to use these props. You only have to pass the prop names inside a curly brackets in the function.&lt;/p&gt;

&lt;p&gt;Let's see what we've done so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'toggle'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OK, we have our button, that will make the content appear and disappear and we have our div with that content.&lt;/p&gt;

&lt;p&gt;First thing, to make the content toggle, we'll need to set a CSS class (.show) to style how it's going to appear on our screen, and an other class (.content) to make it disappear:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#686868&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.show&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the magic is on the &lt;code&gt;display&lt;/code&gt; property. When the div has the &lt;code&gt;.show&lt;/code&gt; class, the content will be displayed!&lt;/p&gt;

&lt;p&gt;Now, to make the toggle effect when click on the button, let's use the useState Hook! With this, let's set isOpen and setIsOpen, initializing with &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Obs.: Do it in the same Collapsible component.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./styles.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Collapsible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsOpen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good! Now, with the &lt;code&gt;onClick&lt;/code&gt; event in the button, let's pass a simple arrow function, setting the &lt;code&gt;isOpen&lt;/code&gt; true or false, according to its previous state (if &lt;code&gt;isOpen === false&lt;/code&gt;, set to &lt;code&gt;true&lt;/code&gt; and vice-versa), using &lt;strong&gt;!&lt;/strong&gt;, the logical "not" operator in javascript. See it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'toggle'&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsOpen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, to bind this event with the content, let's use a ternary operator in the content div class. So, isOpen === true ? use 'content and show' classes (content appears), isOpen === false ? use only 'content' (content disappears). See it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content show&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we have a &lt;strong&gt;Reusable Collapsible Component&lt;/strong&gt;! You can change the label and children (content) prop, where the component will stay:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-1"&gt;
  &lt;/a&gt;
  Example 1
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Click Here'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Profile&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dashboard&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#example-2"&gt;
  &lt;/a&gt;
  Example 2
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;     &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt; &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Animals'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cat&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Dog&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Cow&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Collapsible&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8cjuo9X1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkqpwk9djozlnamheu1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8cjuo9X1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkqpwk9djozlnamheu1o.png" alt="Results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;OTHER OBSERVATION: The purpose of this post was to show the functionality, so, sorry for the bad styling haha!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Done! Thanks for reading this content, I hope it helps you in some way and, if you notice something wrong, feel free to help me leaving a comment bellow or find me on &lt;a href="https://twitter.com/thehuferr"&gt;twitter&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;You can also find me at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/huferr"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/hugo-ferreira-it/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
    </item>
  </channel>
</rss>
