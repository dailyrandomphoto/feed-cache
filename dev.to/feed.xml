<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Reactifying Custom Elements using a Custom Elements Manifest</title>
      <author>Pascal Schilp</author>
      <pubDate>Wed, 23 Jun 2021 13:08:59 +0000</pubDate>
      <link>https://dev.to/thepassle/reactifying-custom-elements-using-a-custom-elements-manifest-2e</link>
      <guid>https://dev.to/thepassle/reactifying-custom-elements-using-a-custom-elements-manifest-2e</guid>
      <description>&lt;p&gt;We finally have a stable version of the Custom Elements Manifest schema, and this means we can finally start creating some cool tooling with it. Don't know what a Custom Elements Manifest is? Read all about it in the &lt;a href="https://dev.to/open-wc/introducing-custom-elements-manifest-gkk"&gt;announcement&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; A Custom Elements Manifest is a JSON file that contains all metadata about the custom elements in your project. You can read all about it &lt;a href="https://github.com/webcomponents/custom-elements-manifest"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React is a &lt;a href="https://dev.to/bennypowers/what-s-not-new-in-react-18-45c7"&gt;bit&lt;/a&gt; of a &lt;a href="https://custom-elements-everywhere.com/#:~:text=LIBRARY-,React%2016.14.0,-SCORE"&gt;pain&lt;/a&gt; when it comes to web components, and (unlike other frameworks) requires a bunch of special handling to support HTML. The &lt;strong&gt;TL;DR:&lt;/strong&gt; here is that React passes all data to Custom Elements in the form of HTML attributes, and can't listen to DOM events due to reinventing the wheel with their own synthetic events system. &lt;/p&gt;

&lt;p&gt;For fun and science, I decided to try my hand at creating a &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt; plugin to ✨ automagically ✨ create some React wrappers for my custom elements project &lt;a href="https://github.com/thepassle/generic-components"&gt;generic-components&lt;/a&gt;, which is a collection of accessible, zero-dependency, vanilla JS web components. Do note that this is mostly a PoC, I'm sure things could be improved and edgecases were missed; this is mostly an experiment to see how we can utilize the Custom Elements Manifest. &lt;/p&gt;

&lt;p&gt;In this blog we'll walk through a couple of the steps and decisions to reactify our custom elements, and showcase how we can leverage a projects &lt;code&gt;custom-elements.json&lt;/code&gt; to achieve this goal.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can read more about &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt;s rich plugin system here: &lt;a href="https://github.com/open-wc/custom-elements-manifest/blob/master/packages/analyzer/docs/plugins.md"&gt;Plugin Authoring Handbook&lt;/a&gt;, and be sure to check out the  &lt;a href="(https://github.com/open-wc/cem-plugin-template)"&gt;cem-plugin-template&lt;/a&gt; repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to follow along, you can find the code for our &lt;code&gt;reactify&lt;/code&gt; plugin &lt;a href="https://github.com/thepassle/generic-components/blob/master/cem-plugin-reactify.js"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#custom-elements"&gt;
  &lt;/a&gt;
  Custom Elements
&lt;/h2&gt;

&lt;p&gt;First of all, we have to find all the custom elements in our Custom Elements Manifest that we want to reactify. Fortunately, classes in the Manifest that are actually custom elements are flagged with a: &lt;code&gt;"customElement": true&lt;/code&gt; flag, so we can loop through all the modules of our Manifest, and find any class declaration that has the &lt;code&gt;customElement&lt;/code&gt; flag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nx"&gt;customElementsManifest&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mod&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;mod&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dec&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have an array of all the custom elements in our project, we can start creating some React wrappers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#slots"&gt;
  &lt;/a&gt;
  Slots
&lt;/h2&gt;

&lt;p&gt;Lets start off easy; slots. Slots are a native way to provide children to your custom elements. Much like React's &lt;code&gt;children&lt;/code&gt;. Which means... we can just use &lt;code&gt;children&lt;/code&gt; to project any children of the Reactified component, straight to the Custom Element, which (if it supports slots), will correctly render them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Toggle me!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Easy peasy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#properties"&gt;
  &lt;/a&gt;
  Properties
&lt;/h2&gt;

&lt;p&gt;Next up: Properties. In React-land, everything gets passed around as a property. This is forms a bit of a problem, because in HTML-land &lt;em&gt;not&lt;/em&gt; everything is a property, we also have &lt;em&gt;attributes&lt;/em&gt;. Sometimes, an elements attributes and properties are even synced up, and this could mean that there are attributes and properties with the same name; like an element with a &lt;code&gt;disabled&lt;/code&gt; attribute/property or a &lt;code&gt;checked&lt;/code&gt; attribute/property.&lt;/p&gt;

&lt;p&gt;Fortunately, in a Custom Elements Manifest we can make a distinction between the two. If an attribute has a relation with a corresponding property, it will have a &lt;code&gt;fieldName&lt;/code&gt; property:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"attributes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"boolean"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"fieldName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that we can ignore the &lt;code&gt;checked&lt;/code&gt; &lt;em&gt;attribute&lt;/em&gt;, but interface with the &lt;code&gt;checked&lt;/code&gt; &lt;em&gt;property&lt;/em&gt; instead, and avoid having two props with the same name.&lt;/p&gt;

&lt;p&gt;Because React will set everything on a custom element as an attribute (ugh), we have to get a &lt;code&gt;ref&lt;/code&gt; for our custom element, and set the property that way. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  Attributes
&lt;/h2&gt;

&lt;p&gt;This is where things get a little bit more interesting. Again, in React-land, everything gets passed around as a property. However, it could be the case that a custom element has an &lt;em&gt;attribute name&lt;/em&gt; that is a reserved keyword in JS-land. Here's an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;generic-skiplink&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"someID"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/generic-skiplink&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In HTML, this &lt;code&gt;for&lt;/code&gt; attribute is no problem. But since we're reactifying, and everything in React-land gets passed around as a JavaScript property, we now have a problem. Can you spot what the problem is in this code?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSkiplink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Exactly. &lt;code&gt;for&lt;/code&gt; is a reserved JavaScript keyword, so this will cause an error. In order to avoid this, we'll provide an attribute mapping to avoid these kinds of clashes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;reactify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="c1"&gt;// Provide an attribute mapping to avoid clashing with React or JS reserved keywords&lt;/span&gt;
      &lt;span class="na"&gt;attributeMapping&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_for&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever we find an attribute that is a reserved keyword in JavaScript, we try to see if there was an attributeMapping for this attribute provided, and if not; we have to throw an error. Using this attributeMapping, the resulting React component now looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSkiplink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;_for&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;_for&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;skiplink&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that we don't want to change the actual attribute &lt;em&gt;name&lt;/em&gt;, because that would cause problems, we only change the &lt;em&gt;value&lt;/em&gt; that gets passed to the attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boolean-attributes"&gt;
  &lt;/a&gt;
  Boolean attributes
&lt;/h3&gt;

&lt;p&gt;Boolean attributes require some special attention here, as well. The way boolean attributes work in HTML is that the presence of them considers them as being true, and the absence of them considers them as being false. Consider the following examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;disabled=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;&amp;lt;!-- Yes, even this is considered as `true`! --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Calling &lt;code&gt;button.hasAttribute('disabled')&lt;/code&gt; on any of these will result in &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means that for boolean attributes, we can't handle them the same way as regular attributes by just calling &lt;code&gt;ref.current.setAttribute()&lt;/code&gt;, but we need some special handling. Fortunately, the Custom Elements Manifest supports types, so we can easily make a distinction between 'regular' attributes, and boolean attributes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  "attributes": [
    {
      "name": "checked",
      "type": {
&lt;span class="gi"&gt;+       "text": "boolean"
&lt;/span&gt;      },
      "fieldName": "checked"
    },
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#events"&gt;
  &lt;/a&gt;
  Events
&lt;/h2&gt;

&lt;p&gt;React has their own synthetic event system to handle events, which doesn't play nice with custom elements (read: HTML). Fortunately, we can easily reactify them. React events work with the following convention:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our Custom Elements Manifest very conveniently holds an array of Events for our custom elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nl"&gt;"events"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"checked-changed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CustomEvent"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means we can find all events for our custom element, prefix them with &lt;code&gt;on&lt;/code&gt;, and capitalize, and camelize them; &lt;code&gt;onCheckedChanged&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then we can use our &lt;code&gt;ref&lt;/code&gt; to add an event listener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;checked-changed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;generic&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="na"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#importing"&gt;
  &lt;/a&gt;
  Importing
&lt;/h2&gt;

&lt;p&gt;Finally, we just need to create the import for the actual custom element in our reactified component. Fortunately for us, if a module contains a &lt;code&gt;customElements.define()&lt;/code&gt; call, it will be present in the Manifest. This means we can loop through the Manifest, find where our custom element gets defined, and stitch together some information from the &lt;code&gt;package.json&lt;/code&gt; to create a bare module specifier:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;switch.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./generic-switch/GenericSwitch.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;generic-switch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will result in:&lt;br&gt;
&lt;code&gt;custom-elements.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"kind"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"javascript-module"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"switch.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"declarations"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"exports"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"kind"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"custom-element-definition"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"generic-switch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"declaration"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"GenericSwitch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/generic-switch/GenericSwitch.js"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By stitching together the &lt;code&gt;name&lt;/code&gt; property from the projects &lt;code&gt;package.json&lt;/code&gt;, and the &lt;code&gt;path&lt;/code&gt; from the module containing the custom element definition, we can construct a bare module specifier for the import:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@generic-components/components/switch.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-the-plugin"&gt;
  &lt;/a&gt;
  Using the plugin
&lt;/h2&gt;

&lt;p&gt;To use our &lt;a href="https://www.npmjs.com/package/@custom-elements-manifest/analyzer"&gt;@custom-elements-manifest/analyzer&lt;/a&gt; Reactify plugin, all I have to do is create a &lt;code&gt;custom-elements-manifest.config.js&lt;/code&gt; in the root of my project, import the plugin, and add it to the &lt;code&gt;plugins&lt;/code&gt; array:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;custom-elements-manifest.config.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reactify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./cem-plugin-reactify.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;reactify&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means that every time I analyze my project, it will automagically create the Reactified wrappers of my custom elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;└── legacy
    ├── GenericAccordion.jsx
    ├── GenericAlert.jsx
    ├── GenericDialog.jsx
    ├── GenericDisclosure.jsx
    ├── GenericListbox.jsx
    ├── GenericRadio.jsx
    ├── GenericSkiplink.jsx
    ├── GenericSwitch.jsx
    ├── GenericTabs.jsx
    └── GenericVisuallyHidden.jsx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;And as a final result, here's our reactified Custom Element that correctly handles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Events&lt;/li&gt;
&lt;li&gt;Properties&lt;/li&gt;
&lt;li&gt;Attributes&lt;/li&gt;
&lt;li&gt;Boolean attributes&lt;/li&gt;
&lt;li&gt;Slots
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;
  &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// boolean attribute&lt;/span&gt;
  &lt;span class="na"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// property&lt;/span&gt;
  &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// regular attribute&lt;/span&gt;
  &lt;span class="na"&gt;onCheckedChanged&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// event&lt;/span&gt;
&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  Toggle me! // slot
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;GenericSwitch&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/react-kghcjw?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concluding"&gt;
  &lt;/a&gt;
  Concluding
&lt;/h2&gt;

&lt;p&gt;While it's cool that we finally have a stable version of the Custom Elements Manifest, which allows us to automate things like this, working on this reactify plugin made me realize how backwards it even is that we need to resort to shenanigans like this, and I hope React will seriously consider supporting HTML properly in future versions.&lt;/p&gt;

</description>
      <category>react</category>
      <category>customelements</category>
      <category>webcomponents</category>
      <category>customelementsmanifest</category>
    </item>
    <item>
      <title>Understanding Network things: part 3 – DNS</title>
      <author>Aurélie Vache</author>
      <pubDate>Wed, 23 Jun 2021 12:54:10 +0000</pubDate>
      <link>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</link>
      <guid>https://dev.to/aurelievache/understanding-network-things-part-3-dns-976</guid>
      <description>&lt;p&gt;Hi,&lt;br&gt;
I've got a secret for you, since several years. I'm a developer and I'm a mess in undestanding network things! :'(&lt;/p&gt;

&lt;p&gt;It's hard to not understanding things that anyone seems to understand and understanding network concepts can be difficult or time-consuming, specially for developers. That the reason I started to create sketchnotes about Network concepts. I think it could be a good way, more visual, to explain it.&lt;/p&gt;

&lt;p&gt;In this third article, we will see DNS concepts.&lt;br&gt;
Is it always a DNS problem? ^^&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6_bucnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7j46kpsdlh9a6cwtz0s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nCFUT8Ee--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhosd1sfkrqnnuucle8u.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TP8lGHkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wrmb5npqj9e7sipymltc.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As usual, if you like theses sketchnotes, you can follow me, and tell me what do you think. I will publish others sketchs shortly :-).&lt;/p&gt;

&lt;p&gt;If you are interested, I already published sketchnotes about &lt;a href="https://gumroad.com/aurelievache"&gt;Kubernetes, Docker and Istio&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>network</category>
      <category>http</category>
      <category>beginners</category>
      <category>cloud</category>
    </item>
    <item>
      <title>10 JavaScript features that will help you adopt React faster</title>
      <author>Amel Halilović</author>
      <pubDate>Wed, 23 Jun 2021 12:52:56 +0000</pubDate>
      <link>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</link>
      <guid>https://dev.to/infobipdev/10-javascript-features-that-will-help-you-adopt-react-faster-5ggb</guid>
      <description>&lt;p&gt;Is there a better way to start a blog post than with plain and simple facts? Of course, there is but let’s do the Captain-Obvious routine anyway!&lt;/p&gt;

&lt;p&gt;We can all agree that JavaScript is the most popular programming language in the world. We could also agree on the fact that libraries and frameworks are indispensable elements of any efficient JS programming task.&lt;/p&gt;

&lt;p&gt;According to State of JS survey, the most popular JavaScript library for building frontend applications is React. And it has been for 5 consecutive years.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-is-react-so-popular-with-frontend-developers"&gt;
  &lt;/a&gt;
  WHY IS REACT SO POPULAR WITH FRONTEND DEVELOPERS?
&lt;/h4&gt;

&lt;p&gt;Since its initial release in May 2013, React has seen a steady incline, followed by an ever-growing number of job opportunities. A part of its appeal and user adoption is due to its non-complicated architecture, based on a lot of native JavaScript features.&lt;/p&gt;

&lt;p&gt;Given the fact that many companies are moving towards re-writing their frontend using it, React is likely to stay at the top of the UI library pyramid.&lt;/p&gt;

&lt;p&gt;If you are new to frontend development or you want to make a transition from another frontend technology, we’ve compiled a list of 10 JavaScript features to help you jumpstart your React basics!&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1-ecmascript-modules"&gt;
  &lt;/a&gt;
  1. ECMAScript modules
&lt;/h5&gt;

&lt;p&gt;React application is organized into multiple small files — modules which all together form a graph of dependencies. The connection between them is created by using different ways of importing the right code.&lt;/p&gt;

&lt;p&gt;ECMAScript modules (or ES modules) provide an easy way to export and import parts of the code like constants, functions, components, etc. This way we can specify exactly which part of the module should be loaded.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#2-the-document-object-model-dom"&gt;
  &lt;/a&gt;
  2. The Document Object Model — DOM
&lt;/h5&gt;

&lt;p&gt;Efficient DOM manipulation is one of the main challenges for the frontend technologies such as React. It is an expensive operation and tools are competing to develop a better solution for it and dominate the sphere of UI libraries.&lt;/p&gt;

&lt;p&gt;React is top of the game in this regard. It uses VirtualDOM, which is a “virtual” representation of a “real” DOM state. It is saved in memory and synced with the real DOM by a library such as ReactDOM. To fully understand how VirtualDOM works, one must know what is and how does the real DOM work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#3-class"&gt;
  &lt;/a&gt;
  3. Class
&lt;/h5&gt;

&lt;p&gt;One of the most popular features introduced in the ES6 version was JavaScript classes. Classes represent templates for creating objects — they define which properties and methods will the object have.&lt;/p&gt;

&lt;p&gt;In React, classes are primarily used to create stateful components. In fact, it was the only way to do it until hooks were introduced.. Since there are many developers who still prefer to use class components and many projects that haven’t migrated class components to functional, it will be useful to know how classes work.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#4-array-methods"&gt;
  &lt;/a&gt;
  4. Array methods
&lt;/h5&gt;

&lt;p&gt;Standard array methods like forEach, map, push, filter, some, etc., are widely used in React to manipulate data, so it is a good thing to be familiar with them before starting to learn and work with React. For example, map is used when we want to render multiple elements based on a collection of objects.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#5-spread-operator"&gt;
  &lt;/a&gt;
  5. Spread operator
&lt;/h5&gt;

&lt;p&gt;Spread operator takes in an iterable (e.g an array or object) and expands it into individual elements. In React it is widely used to create shallow copies of objects or to concatenate data from multiple objects or arrays. It provides a concise and readable code that enhances its use.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#6-destructuring-assignment"&gt;
  &lt;/a&gt;
  6. Destructuring assignment
&lt;/h5&gt;

&lt;p&gt;Destructuring assignment (often called just destructuring) is a JavaScript expression used for unpacking values from arrays or properties from objects into separate variables.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#7-fetch-api-promises"&gt;
  &lt;/a&gt;
  7. Fetch API /Promises
&lt;/h5&gt;

&lt;p&gt;Usually, our React applications require some data that we prepared on our backend services and exposed on RESTful APIs. To deliver that data to frontend applications we need Fetch API. Fetch API allows web-browser to make HTTP requests to web servers and fetch resources and data.&lt;/p&gt;

&lt;p&gt;Calling fetch returns a promise that resolves to a Response object holding information about the server’s response, such as its status code and its headers.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#8-bindings-and-scopes"&gt;
  &lt;/a&gt;
  8. Bindings and scopes
&lt;/h5&gt;

&lt;p&gt;When building class components, beginners usually encounter a problem — the context of the class methods is not the expected one( from the component). We need to manually bind the component’s context to the method. This is expected behavior because of JavaScript and how this is treated.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#9-arrow-functions"&gt;
  &lt;/a&gt;
  9. Arrow functions
&lt;/h5&gt;

&lt;p&gt;Arrow functions are an ES2015 feature for a simpler way of writing functions. They have some limitations so they shouldn’t be used in every situation. Despite that, they are commonly used in React to solve the problem with methods binding or to create functional components.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#10-higherorder-functions"&gt;
  &lt;/a&gt;
  10. Higher-order functions
&lt;/h5&gt;

&lt;p&gt;A function that accepts and/or returns another function is called a higher-order function. Some of the examples of higher-order functions are already mentioned array methods forEach, map, reduce, filter.&lt;/p&gt;

&lt;p&gt;Inspired by this concept, React has higher-order components (HOCs), an advanced technique for reusing component’s logic. HOCs are part of many famous libraries like react-redux, react-router, material-ui, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-shortcuts-get-to-know-javascript"&gt;
  &lt;/a&gt;
  NO SHORTCUTS — GET TO KNOW JAVASCRIPT
&lt;/h3&gt;

&lt;p&gt;These 10 features can help you fast-track your React learning curve.&lt;/p&gt;

&lt;p&gt;However, if you want to do more complex tasks, eliminate errors, and gain a better understanding of how the code works, there are no shortcuts. You’re going to have to put in the work and learn how JavaScript works, especially those tricky illogical parts.&lt;/p&gt;

&lt;p&gt;Overall, React is a friendly UI library that can help you create extensive, complex and demanding graphical interfaces. It’s backed by Facebook, has a strong developer community gathered around it and there’s no shortage of learning materials. In fact, there’s a ton of reasons for you to learn React.&lt;/p&gt;

&lt;p&gt;It’s up to you to start.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href="https://www.bitsbyamel.com"&gt;https://www.bitsbyamel.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Build a chrome extension with modern code setup</title>
      <author>Lakshmanan Arumugam</author>
      <pubDate>Wed, 23 Jun 2021 12:38:54 +0000</pubDate>
      <link>https://dev.to/lakshmananarumugam/build-a-chrome-extension-with-modern-code-setup-1ka1</link>
      <guid>https://dev.to/lakshmananarumugam/build-a-chrome-extension-with-modern-code-setup-1ka1</guid>
      <description>&lt;p&gt;In the previous article, I covered &lt;code&gt;How to set a chrome extension base code setup&lt;/code&gt;. In this article, I am going to cover &lt;code&gt;how to use test it and publish to chrome extension marketplace app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you completed the all previous article step. you will have the below folder structure in your code directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="kr"&gt;public&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Require&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt; &lt;span class="nx"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Extension&lt;/span&gt; &lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="nx"&gt;manifest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Detect&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;chrome&lt;/span&gt; &lt;span class="nx"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;assets&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vue&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="nx"&gt;UI&lt;/span&gt; &lt;span class="nx"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;   &lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="nx"&gt;JS&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;dist&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Build&lt;/span&gt; &lt;span class="nx"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;node_modules&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;README&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;md&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="kr"&gt;package&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;
&lt;span class="err"&gt;├──&lt;/span&gt; &lt;span class="nx"&gt;babel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;span class="err"&gt;└──&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gitignore&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above the folder, you don't find any &lt;code&gt;dist&lt;/code&gt; folder. please use the below command in your code main directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you find the &lt;code&gt;dist&lt;/code&gt; folder. dist folder will be the major part of the chrome extension. because we will test the app in the local port. but, we compress(.zip) and sent the dist inside code only. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTeuQ2Fr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbxwzo1o5yvthved37ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZTeuQ2Fr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xbxwzo1o5yvthved37ko.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the above screen steps and target the &lt;code&gt;dist&lt;/code&gt; to the target directory. Once you opened the chrome extension directory. &lt;/p&gt;

&lt;p&gt;you will find the chrome extension name called &lt;code&gt;Cool chrome theme&lt;/code&gt;. Then, test all features which you did in the Vue app. once done the dev testing. it's time to publish the app.&lt;/p&gt;

&lt;p&gt;Chrome already has some articles about how to publish the app. please check it out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/webstore/update/"&gt;Publish chrome extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FYI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why I used VUE for the chrome extension?&lt;/strong&gt;&lt;br&gt;
  Even though we able to develop a UI screen using plain HTML, JS, and CSS. when we build a complex screen I HTML and JS. it will take more time and complexity in development. &lt;/p&gt;

&lt;p&gt;Thanks for reading the post 😀. &lt;/p&gt;




&lt;p&gt;&lt;a href="https://github.com/lakshmanan-arumugam/cool-chrome-theme"&gt;Code URL&lt;/a&gt;&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/cool-chrome-theme/hnjfgakjgenceanlamddolhjgnmackfg"&gt;Demo extension&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to make dynamic pages for your website firebase tutorial.</title>
      <author>Techy Programmers</author>
      <pubDate>Wed, 23 Jun 2021 12:22:28 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</link>
      <guid>https://dev.to/kunaal438/how-to-make-dynamic-pages-for-your-website-firebase-tutorial-4i20</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make dynamic pages for your website.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iP9F7usZF3M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A quick and simple color palette generator for your next project.</title>
      <author>Jash Gopani</author>
      <pubDate>Wed, 23 Jun 2021 11:38:56 +0000</pubDate>
      <link>https://dev.to/jashgopani/a-quick-and-simple-color-palette-generator-for-your-next-project-40ap</link>
      <guid>https://dev.to/jashgopani/a-quick-and-simple-color-palette-generator-for-your-next-project-40ap</guid>
      <description>&lt;p&gt;Hello guys,🙋‍♂️&lt;br&gt;
this short article is about my recent side project called&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#colorinator"&gt;
  &lt;/a&gt;
  COLORINATOR
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm3W2wgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0kxc5pbe4gtnqe1v75.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wm3W2wgE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za0kxc5pbe4gtnqe1v75.png" alt="doofenshmirtz"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a quick color palette generator based on the &lt;strong&gt;60-30-10&lt;/strong&gt; rule of UI design. You can use the color palettes generated by &lt;a href="http://jashgopani.me/colorinator"&gt;this website&lt;/a&gt; for any kind of project; apps, website, ppts and almost everywhere.&lt;/p&gt;

&lt;p&gt;One of the main highlight is that you can see the real time preview of the theme colors! This will help you to get an idea of which color combination works best for your project.&lt;/p&gt;

&lt;p&gt;Because this website is responsive, you will have no trouble using it from any device.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5II9lia9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nny9whbx7jjert45w19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5II9lia9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nny9whbx7jjert45w19.png" alt="Responsive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;I used to get confused about what color scheme should I use for my projects. There are numerous colour palette generators available, but the problem is that most of those provide too many possibilities, and many of them just produce random colours that may or may not work well together.&lt;/p&gt;

&lt;p&gt;To minimize this ambiguity, I developed this simple solution, which selects a primary color based on user input or at random, and then derives secondary and accent colors depending on the contrast ratio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#603010-rule"&gt;
  &lt;/a&gt;
  60-30-10 rule
&lt;/h2&gt;

&lt;p&gt;To explain you in short, use a main/primary color on 60% of your elements as a theme color. Out of remaining 40%, you can use a secondary color on 30% elements which need user attention or provide valuable information to user. The rest 10% will be action elements which can be colored with Accent color to give them a distinct look from the rest of the elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-where-do-you-colors-from-"&gt;
  &lt;/a&gt;
  So where do you colors from ?
&lt;/h2&gt;

&lt;p&gt;The user can provide a main color which is intended to be used as a primary color for the project or the user can go for a random color as primary color using the random button. &lt;br&gt;
On getting the primary color, the app calculates the font color for the website and the secondary and accent colors that go with the primary color.&lt;br&gt;
How does it calculate secondary and accent colors ? The answer lies in &lt;a href="https://digitalsynopsis.com/design/how-to-apply-color-to-user-interface/"&gt;this article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from this, the accent color is either calculated based on the logic mentioned in the article or the color opposite to the primary color is picked from the color wheel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-this-"&gt;
  &lt;/a&gt;
  How to use this ?
&lt;/h2&gt;

&lt;p&gt;I have very well documented everything on in my &lt;a href="https://github.com/jashgopani/colorinator"&gt;github readme&lt;/a&gt;. If still you have any doubts/ suggestions you can comment them below and I'll get back to you😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-to-be-added"&gt;
  &lt;/a&gt;
  Features to be added
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Copy button on saved theme palettes, to individually copy the hex code to clipboard&lt;/li&gt;
&lt;li&gt;Import and export themes&lt;/li&gt;
&lt;li&gt;You suggest&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do use this app for your upcoming projects and let me know what better can be done. Thank you!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Why you should create a tech community</title>
      <author>Ben Amor Aymen</author>
      <pubDate>Wed, 23 Jun 2021 11:37:56 +0000</pubDate>
      <link>https://dev.to/aymenbenamor/why-you-should-create-a-tech-community-1jl9</link>
      <guid>https://dev.to/aymenbenamor/why-you-should-create-a-tech-community-1jl9</guid>
      <description>&lt;p&gt;You should probably get involved in your local dev community, or even better: CREATE ONE! Here is why...&lt;/p&gt;

&lt;p&gt;The year is 2019! I am in one of the best conferences in Europe: &lt;a href="https://2019.jsconf.eu/"&gt;JSCONF.EU&lt;/a&gt;. I mean, the opening was something to remember: The screen was almost bigger than some of the cinema screens. (&lt;a href="https://youtu.be/o1rzsna263c?t=1215"&gt;watch opening.&lt;/a&gt;) I traveled from Brussels to Berlin to enjoy the conference and apart from the TC39 panel discussion, the talk that motivated me the most to attend was a talk by: &lt;a href="https://twitter.com/roshangautam0"&gt;Roshan Gautam&lt;/a&gt; titled: &lt;a href="https://2019.jsconf.eu/roshan-gautam/you-should-start-a-tech-community-too.html"&gt;You should start a tech community too&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, to be honest, Building a tech community was an idea that I was thinking about for quite some time already... But I could not find the courage to do it. I mean when you think of it, there is so much stuff to manage if you want to create a community. How are you going to get speakers? How are you going to motivate people to come to your meetups? Who's going to pay for drinks? How to manage the big difference in people's expertise? and knowledge? so many questions and I did not know where to start but hey let's start with why you should create a community? and we will talk about the obstacles and how you can overcome them later!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-get-involved-in-your-local-tech-community"&gt;
  &lt;/a&gt;
  Why get involved in your local tech community?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-community-helps-you-grow-and-improve-yourself"&gt;
  &lt;/a&gt;
  A community helps you grow and improve yourself
&lt;/h3&gt;

&lt;p&gt;When you like coding, it is very easy to stick to your IDE and spend your entire time writing code. The problem is that if you want to progress quickly in your career, you have to know that only 25% of what companies look for in senior developers is technical skills, 75% is about soft skills and your impact on the business. Public speaking, Management skills, Leadership skills, and many more are skills that you will need if you want to grow as a developer!&lt;/p&gt;

&lt;p&gt;Being involved in a community helps your progress in these soft skills. You learn a lot from organizing events:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marketing skills:&lt;/strong&gt; When you start a community, you need to look for ways to attract people, so you learn marketing techniques. You start using different social media and platforms to bring people to your events. You experiment, try a lot of different tactics to finally find the right one for your community.&lt;br&gt;
&lt;strong&gt;Presentation and communication skills:&lt;/strong&gt; Talking at a meetup, even for presenting the speaker is quite a challenge... You have to make people excited about what's going to happen. If there are delays, you need to find a way to entertain people while they are waiting. This is all valuable for you as a person (not only as a developer). Also, reaching out to speakers helps improve your communication skills.&lt;br&gt;
&lt;strong&gt;Negotiations skills:&lt;/strong&gt; Fortunately for us, the IT sector is booming. People make a lot of money just by finding developers to hire. Companies are always looking for great developers. So when you start a tech community there are big chances that you will be contacted by few companies to collaborate. You will have to use your negotiation skills, and find ways of making the community profit from these partnerships without your community becoming a marketplace for devs and your members being harassed.&lt;br&gt;
Leadership and management skills: When organizing events you will have to work with contractors, sponsors, volunteers, other members of the community, and so on. This can improve your skills in people management and make you a better leader.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#networking"&gt;
  &lt;/a&gt;
  Networking
&lt;/h3&gt;

&lt;p&gt;I cannot stress how important it is to have a good network in your life. When you get involved in a community you get access to hundreds, sometimes thousands of people that work in the same sector as you. This is an amazing opportunity: You get to know the market in your local area, what technologies, methodologies are used? What are the current rates, salaries for developers? What technologies you should invest time in? You get to know all of this information. Having a network like this can also help you meet friends (I've personally met amazing people in BeJS meetups and some of them became friends!). You can meet business partners, investors, companies, mentors, speakers, and so on... A network like this is an outstanding resource!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-great-motivation-for-learning"&gt;
  &lt;/a&gt;
  A great motivation for learning
&lt;/h3&gt;

&lt;p&gt;When being involved in a community, there is a lot of work to do! This means that there is room for tool creation: Websites, scripts, apps, and other kinds of projects which can help you manage the community. All of these are opportunities for you to show off your skills, to learn new technologies. (I learned Gatsby, NextJS, GraphQL because I created tools for BeJS using these technologies). You get to learn to use different tools for marketing and managing campaigns on social networks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fighting-your-shyness"&gt;
  &lt;/a&gt;
  Fighting your shyness
&lt;/h3&gt;

&lt;p&gt;It might not look like it, but I am a very shy person. I am the kind of person that rarely talks to someone he does not know. I mean: Calling for a doctor's appointment on the phone used to be quite difficult to do for me. I always had a feeling of annoying people when talking to them. By starting BeJS, I had to contact sponsors, speakers, partners, contractors, and other members and it helped me a lot to overcome my shyness. I, now, don't think twice before sending a message to a speaker, or to a company asking for sponsorship. It does not mean that I get a reply every time, but I usually do and if I don't get a reply, so be it! At least I've done my part.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-challenges"&gt;
  &lt;/a&gt;
  The challenges
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#finding-a-sponsor"&gt;
  &lt;/a&gt;
  Finding a sponsor
&lt;/h3&gt;

&lt;p&gt;As you might think, finding a sponsor for your events might be quite a challenge. You need at least a venue for your events! You need food and drinks to attract people. Trust me, I cannot stress how important food is for attracting people to your events! Start with your network! If you're working within a company, ask your manager or your HR team, They might be interested. If you're a freelancer or contractor, ask your clients, or the consulting companies you work with. If they already have a place, it is not a big deal for them to let you use it once per month! It is an opportunity for them as well as it gives them visibility and they can use these events for hire. Just be sure to be clear on the collaboration so that they don't start harassing your members.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-speakers"&gt;
  &lt;/a&gt;
  Finding speakers
&lt;/h3&gt;

&lt;p&gt;This is the most important part of the meetup: I mean why would people go to a meetup if there is no interesting subject. There is no magic trick here: Ask people! For your first events, do not hesitate to contact anyone you know and ask if they will be interested in speaking. Motivate them, push them and help them if needed. Again it is your right to contact any person you want, however, you're not entitled to an answer! So if they don't respond just move on. The popular speakers out there receive hundreds or thousands of DMs so they can't answer to everyone.&lt;/p&gt;

&lt;p&gt;Publish a Call For Paper on your website. Even if someone contacts you for a talk and you're full for the next few months, It's always good to have a plan B or you can always contact them later when no one is scheduled&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#attracting-attendees"&gt;
  &lt;/a&gt;
  Attracting attendees
&lt;/h3&gt;

&lt;p&gt;Well, I'm going to be completely honest on this one: Food and drinks are your best shot at attracting more attendees! It is nice to go to meetups to listen to a talk, but it is nicer if you can listen to the talk with a beer in your hand and your stomach full, right? Ads on social networks can also help significantly to spread the word! The best social networks to use may be different from one country to another, but for us: LinkedIn and meetup are the most promising! Last but not least: believe in your community! I remember when I asked for the venue from our sponsor for the first event. I said: We're going to be 5 or so people, so all we need is a table!Two days later, I created the event on meetup and 50 people subscribed in less than 48 hours!!! I was lucky my sponsors had a big room that could fit everyone but I learned to always define a maximum amount of people.&lt;/p&gt;

&lt;p&gt;Managing the difference in knowledge and experience!&lt;br&gt;
In your community, you will get people that have been working in their field for 10 years, but you will also get students or even people that are just thinking about a career change. Therefore, it might be difficult to find subjects that are interesting to everyone. My advice for this is to try to diversify the talks you accept! Different technologies, different kinds of talks (soft skills talks, technical talks, workshops, coding competitions, Talks about personal experiences) By diversifying your talks, you attract more attendees, and make your meetups interesting for everyone!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-time"&gt;
  &lt;/a&gt;
  Finding time
&lt;/h3&gt;

&lt;p&gt;Being involved in the community is very time-consuming. Meetup which is the go-to tool for creating groups is not really a great tool (In my opinion). You lose a lot of time, sending messages, creating posts, announcing your event, reminding people about the event so that they show up, asking for feedback to improve your events, contacting speakers, managing partners, and sponsors, Creating websites, and tools, creating marketing content, etc. You add a 40h/week job next to that and people start asking if you have time to sleep between all of that. The solution:&lt;br&gt;
&lt;strong&gt;Create tools and frameworks:&lt;/strong&gt; To help you automate all of the repetitive tasks, create tools and put processes in place so that it becomes a habit. For example, I created a script to update our website when I publish a new event on meetup. I asked a friend to create a graphic I can reuse for every event announcement&lt;br&gt;
&lt;strong&gt;Delegate:&lt;/strong&gt; Find people that can help you! If you don't have volunteers to help? Fiverr is an amazing platform to get stuff done for a good price!&lt;br&gt;
&lt;strong&gt;Learn to say no:&lt;/strong&gt; If something is not going to benefit your community, say no directly. Don't do something just because you're afraid of saying no! It is a waste of time for you and the other person as well!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I created the BeJS community almost 2 years ago, and I think it's one of the biggest achievements I ever made. I learned so much... It made me happy (when an event was a success!), it made me angry (when meetup was down at the exact moment our event was scheduled and almost no one could get the link to the zoom meeting! or when some spammers joined the zoom meeting and started doing crazy shit in the chat and in the videos), it made me sad (when 45 people subscribed but only 8 showed up!). I met amazing people, Companies contact me every now and then for partnerships and sponsorships. I got to know the projects of the developers based in Belgium.&lt;/p&gt;

&lt;p&gt;So? convinced? When are you starting your own community? Are you going to get involved in an existing community? You have questions? Ideas? May be you want to get involved in the BeJS events? Feel free to talk to me on&lt;a href="https://twitter.com/intent/tweet?screen_name=Aymen_Ben_Amor&amp;amp;ref_src=twsrc%5Etfw"&gt;twitter&lt;/a&gt; or contact me &lt;a href="//mailto:contact@bejs.io"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>community</category>
      <category>belgium</category>
      <category>tech</category>
    </item>
    <item>
      <title>7 Awesome  Portfolio websites</title>
      <author>gourav majee</author>
      <pubDate>Wed, 23 Jun 2021 11:34:50 +0000</pubDate>
      <link>https://dev.to/varuogm/7-awesome-portfolio-websites-4pf7</link>
      <guid>https://dev.to/varuogm/7-awesome-portfolio-websites-4pf7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-im-gourav"&gt;
  &lt;/a&gt;
  Hello, 👋I'm Gourav,
&lt;/h2&gt;



&lt;p&gt;&lt;em&gt;Building a developer portfolio can be a cumbersome task, we have to think of a good design, best projects, blogs, and other details.&lt;/em&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#so-here-are-7-web-developer-portfolios-that-i-found-while-making-my-portfolio-website-and-also-they-will-give-you-all-the-inspiration-you-need-to-create-your-own-first-portfolio"&gt;
  &lt;/a&gt;
  &lt;em&gt;So, here are 7 web developer portfolios 🤩 that I found while making my portfolio website, and also they will give you all the inspiration you need to create your own first portfolio👌.&lt;/em&gt;
&lt;/h3&gt;



&lt;h2&gt;
  &lt;a href="#1-josh-w-comeau"&gt;
  &lt;/a&gt;
  1. Josh W Comeau
&lt;/h2&gt;

&lt;p&gt;A cool and awesome portfolio from josh . Also, Don't forget to hover around for cool effects. &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link 👉 - &lt;a href="https://www.joshwcomeau.com/"&gt;here    &lt;/a&gt;   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ChEZZw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624444116236/6Vq79DqCn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ChEZZw_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624444116236/6Vq79DqCn.png" alt="josh.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-art"&gt;
  &lt;/a&gt;
  2. ART
&lt;/h2&gt;

&lt;p&gt;A cool and awesome portfolio from Patricia Aas .this type of PF can be usful for artists for showcasing their art.&lt;/p&gt;

&lt;p&gt;Link 👉 - &lt;a href="https://patricia.no/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hW4KY2tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624301988107/_GTnwItff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hW4KY2tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624301988107/_GTnwItff.png" alt="art.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-cow"&gt;
  &lt;/a&gt;
  3. COW
&lt;/h2&gt;

&lt;p&gt;Every small minimalistic detail in it has its own uniqueness.Go check it out on your own. &lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="https://seeyouspacecow.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4lNHd_xA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302097601/RAe5ULSUt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4lNHd_xA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302097601/RAe5ULSUt.png" alt="cow.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-hack"&gt;
  &lt;/a&gt;
  4. HACK
&lt;/h2&gt;

&lt;p&gt;This is by far the most hacker-style website I've seen. you can change channels and every effect has its own unique effects. A  &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="https://kaisermann.me/websites/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6nNXfelJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307041182/pSYllnFaE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6nNXfelJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307041182/pSYllnFaE.png" alt="distirt.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-flower"&gt;
  &lt;/a&gt;
  5. FLOWER
&lt;/h2&gt;

&lt;p&gt;Again a very awesome website. minimalistic and cool hover flower effects steal everyone's Hearts. &lt;code&gt;must visit&lt;/code&gt;&lt;br&gt;
Link - &lt;a href="https://jolienhoop.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtyKzjA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302271695/c81nAwSgH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtyKzjA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302271695/c81nAwSgH.png" alt="flower.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-pixel"&gt;
  &lt;/a&gt;
  6. PIXEL
&lt;/h2&gt;

&lt;p&gt;A cool indie pixelated sword game portfolio. Every game details are present.  &lt;code&gt;must visit&lt;/code&gt;&lt;br&gt;
Link 👉 - &lt;a href="https://nachocaiafa.com.ar/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LOi5sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307101807/wc_mb4MXO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2LOi5sv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307101807/wc_mb4MXO.png" alt="picel.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-pop-shake"&gt;
  &lt;/a&gt;
  7. POP SHAKE
&lt;/h2&gt;

&lt;p&gt;As a beginner, this website could be useful as it contains many small hover things which I thought could be useful for beginners.&lt;br&gt;
Link 👉- &lt;a href="https://villivald.com/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sYSlkoAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302436328/hQGI1Tp4X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYSlkoAn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302436328/hQGI1Tp4X.png" alt="pop shake.png"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#everyone-like-a-little-extra"&gt;
  &lt;/a&gt;
  💯&lt;em&gt;(everyone like a little extra)💯😄&lt;/em&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;7+2 websites&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#8-swag"&gt;
  &lt;/a&gt;
  8. SWAG
&lt;/h2&gt;

&lt;p&gt;Another cool single-page portfolio. Also, Don't forget to hover on the Get Started and Social icons for cool effects.&lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="https://nicovanzyl.com/"&gt;here&lt;/a&gt; &lt;code&gt;must visit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bnpvj06W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302380590/NXBLOEkFH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bnpvj06W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624302380590/NXBLOEkFH.png" alt="swag.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-my-first-portfolio-"&gt;
  &lt;/a&gt;
  9. My first portfolio :
&lt;/h2&gt;

&lt;p&gt;Also, I made my simple portfolio from all the learnings I got from different creators.&lt;/p&gt;

&lt;p&gt;Link 👉- &lt;a href="//http:gouravmajee.me"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E9SJBuot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307201451/7Sf3aUrMV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E9SJBuot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624307201451/7Sf3aUrMV.png" alt="gourav.png"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 🎀
&lt;/h1&gt;

&lt;p&gt;If you found this article useful or gave you the inspiration you need to build your portfolio. Do like and share with your network.&lt;/p&gt;

&lt;p&gt;If you've enjoyed this article  &lt;code&gt;≧◠‿◠≦✌&lt;/code&gt; or You have any questions then contact me  &lt;a href="https://twitter.com/Varougm"&gt;@Varougm&lt;/a&gt;  where I'd be more than happy to answer you  💖  . I'm new to this. if you find any mistake please let me know ✌.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDdHoi2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624447964425/MBXCmRLEa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDdHoi2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624447964425/MBXCmRLEa.png" alt="Thank you so much for reading.png"&gt;&lt;/a&gt;&lt;br&gt;
Buy me my first coffee  &lt;a href="https://www.buymeacoffee.com/Gouravmajee"&gt;🥤here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PART 2  coming soon.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#portfolio-inspiration-mustread-website"&gt;
  &lt;/a&gt;
  portfolio #inspiration #mustread #website
&lt;/h1&gt;

</description>
      <category>portfolio</category>
      <category>development</category>
      <category>developer</category>
      <category>website</category>
    </item>
    <item>
      <title>Lets make an quote-of-the-day instagram bot!</title>
      <author>Ryan The Ghost</author>
      <pubDate>Wed, 23 Jun 2021 11:34:35 +0000</pubDate>
      <link>https://dev.to/ryandaghost/lets-make-an-quote-of-the-day-instagram-bot-3lbk</link>
      <guid>https://dev.to/ryandaghost/lets-make-an-quote-of-the-day-instagram-bot-3lbk</guid>
      <description>&lt;h1&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Lets get started
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  🎉 Demo
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/dailydouseofquotes/"&gt;https://www.instagram.com/dailydouseofquotes/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EU3sDxTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psuqu81mepelkebjpylr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EU3sDxTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/psuqu81mepelkebjpylr.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make a files: &lt;br&gt;
&lt;code&gt;main.py&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#starting-the-code"&gt;
  &lt;/a&gt;
  Starting the code
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#importing-the-libaries"&gt;
  &lt;/a&gt;
  🧪 Importing the libaries
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
import urllib.request
import os
from PIL import Image, ImageDraw, ImageFont, ImageOps
import requests
from instabot import Bot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#getting-an-image-and-saving-it"&gt;
  &lt;/a&gt;
  📷 Getting an image and saving it
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dl_image&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;image_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://source.unsplash.com/user/eberhardgross/1080x1080/"&lt;/span&gt;
    &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlretrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Installing image"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;The following code will get an 1080x1080 image by the author eberhardgross from unsplash, &lt;strong&gt;Why him ?&lt;/strong&gt; I haven't seen anything 18+ from this user and have seen amazing images only!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#getting-the-daily-quote"&gt;
  &lt;/a&gt;
  🙌 Getting the daily quote
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://quotes.rest/qod.json?language=en'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response_output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;response_output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;This code will get a &lt;strong&gt;json daily quote of the day&lt;/strong&gt; response from quotes.rest, as you can see we will output certain results that we from FROM the dailyquote function &lt;strong&gt;later&lt;/strong&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#putting-the-quote-and-image-in-one"&gt;
  &lt;/a&gt;
  😎 Putting the quote and image in one!!
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#%E2%80%8D-fixing-the-line-order"&gt;
  &lt;/a&gt;
  🐱‍🚀 Fixing the line order
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;We will be doing this so we can get a good word-per-line system, so we see the whole text!&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrap_by_word&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#lets-do-it-all"&gt;
  &lt;/a&gt;
  🎨 Lets do it all!
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;text_overlay_ig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wrap_by_word&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;image_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="s"&gt;'image.jpg'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;im&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Fixing the quote line order and then opening our image file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Time to put on everything!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'font.ttf'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;shadowColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thickness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"— "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#adding-a-fonttff-file"&gt;
  &lt;/a&gt;
  🌁 Adding a font.tff file!
&lt;/h5&gt;

&lt;p&gt;i'd recommend using &lt;a href="https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot/blob/master/font.ttf"&gt;https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot/blob/master/font.ttf&lt;/a&gt; just click on download and put it in your folder ! The font is easy to read so its perfect&lt;/p&gt;

&lt;p&gt;And now lets put on the quote on the image&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;shadowColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;thickness&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The x, y are the position of the text we want to put, change this but be careful this &lt;strong&gt;won't change based on the text length&lt;/strong&gt;! We could do that but lets stick with this for now&lt;/p&gt;

&lt;p&gt;Everything else is us just putting the text alongside the text shadow on the image.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Time to put the author&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;700&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"— "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;thickness&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 Same thing but we are changing the x, y positions &lt;strong&gt;AND&lt;/strong&gt; also adding — to the author username&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-steps"&gt;
  &lt;/a&gt;
  😎🙌 Final steps
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quote'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dailyquote&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'contents'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'quotes'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;dl_image&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;text_overlay_ig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ptag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ptag&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;


&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"This bot was made by ryan s.(@9ebd7134 on github), Hope you enjoyed this quote, This quote was by"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Links:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;📷Image by: https://unsplash.com/user/eberhardgross&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Tags:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;#️⃣ "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ptag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"****"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"password1234"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upload_photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caption&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
 Simply change the caption/content and then bot.login username/password details for this to fully work!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fixing-up-some-issues"&gt;
  &lt;/a&gt;
  🆘 Fixing up some issues
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;I'll be updating this and updating the github page for it, i will make an issue and a pull request talking all about the changes! If you want to fix my code i'd love to see it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#link-for-the-github"&gt;
  &lt;/a&gt;
  Link for the github:
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot"&gt;https://github.com/9ebd7134/Python-quote-of-the-day-instagram-bot&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>pythonbot</category>
      <category>automation</category>
      <category>bot</category>
    </item>
    <item>
      <title>Pourquoi les développeurs Web utilisent encore Ruby on Rails ?</title>
      <author> Eric Le Codeur</author>
      <pubDate>Wed, 23 Jun 2021 11:18:06 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/pourquoi-les-developpeurs-web-utilisent-encore-ruby-on-rails-2g4b</link>
      <guid>https://dev.to/ericlecodeur/pourquoi-les-developpeurs-web-utilisent-encore-ruby-on-rails-2g4b</guid>
      <description>&lt;p&gt;Si vous désirez plus de contenu francophone comme celui-ci, cliquer &lt;strong&gt;Follow ou &lt;a href="https://twitter.com/EricLeCodeur"&gt;suivez-moi sur Twitter&lt;/a&gt;&lt;br&gt;

&lt;br&gt;
De nombreux nouveaux développeurs Web n'ont absolument aucune idée de ce qu'est Ruby on Rails.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;J'encourage ces personnes à faire leurs recherches et à en apprendre davantage sur ce magnifique framework.&lt;/p&gt;

&lt;p&gt;Ruby est un langage de programmation et Rails est un framework pour créer des applications Web.&lt;/p&gt;

&lt;p&gt;D'autres frameworks web comme Laravel, Django, Adonis utilisent de nombreux concepts utilisés par Rails.&lt;/p&gt;

&lt;p&gt;Rails est en quelque sorte le père de ces frameworks modernes. Rails a inspiré et continu de d'inspirer de nombreux concepts de développement Web modernes.&lt;/p&gt;

&lt;p&gt;Avec Rails, vous pouvez créer une application Web fullstack. Vous pouvez aussi créer une application Web frontend (style SPA comme React et Vue) en utilisant uniquement du code html/css et ruby.&lt;/p&gt;

&lt;p&gt;Oui rails est vieux mais Rails n'est pas resté ce qu'il était lors de son introduction. Rails a évolué au cours des années pour ajouter tous les goodies modernes. Rails est présentement à la version 6 et la version 7 approche à grands pas.&lt;/p&gt;

&lt;p&gt;Alors pourquoi l'utiliser ? Pourquoi ne pas utiliser une application Node.js/Express ou tout autre framework backend plus populaire ?&lt;/p&gt;

&lt;p&gt;Je suppose que les raisons peuvent être différentes pour chaque développeurs Rails, mais pour ma part je choisis Rails lorsque j'ai besoin de vitesse et d'efficacité de développement ! Aucun autre framework ne peut créer une application Web plus rapidement que Rails.&lt;/p&gt;

&lt;p&gt;Pour cette raison spécifique, Rails est utilisé par de nombreuses startups.&lt;/p&gt;

&lt;p&gt;Ruby on Rails est également utilisé par des sociétés géantes comme Shopify, GitHub, Air B&amp;amp;B et bien d'autres.&lt;/p&gt;

&lt;p&gt;J'aime aussi beaucoup le langage Ruby. Faites-vous plaisir et découvrez vous aussi ce langage merveilleux. &lt;/p&gt;

&lt;p&gt;Rails est il les meilleurs pour tous les projets ? Bien sûr que non, mais avec le bon type de projet, c'est toujours le numéro 1 même après toutes ces années.&lt;/p&gt;

&lt;p&gt;Enfin, si vous êtes un développeur Ruby on Rails, veuillez laisser dans la section des commentaires pourquoi pour vous Rails est toujours l'un de vos frameworks préférés ?&lt;/p&gt;

</description>
      <category>french</category>
      <category>rails</category>
      <category>ruby</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Master Python Fast and Easy: A Complete Simple tutorial Based on the Official Documentation of Python</title>
      <author>Amin M. Boulouma</author>
      <pubDate>Wed, 23 Jun 2021 11:06:47 +0000</pubDate>
      <link>https://dev.to/amboulouma/how-to-master-python-fast-and-easy-a-complete-simple-tutorial-based-on-the-official-documentation-of-python-1dej</link>
      <guid>https://dev.to/amboulouma/how-to-master-python-fast-and-easy-a-complete-simple-tutorial-based-on-the-official-documentation-of-python-1dej</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t3wcmbHL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/allhtaccess.info/wp-content/uploads/2018/03/programming.gif%3Ffit%3D1281%252C716%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3wcmbHL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/allhtaccess.info/wp-content/uploads/2018/03/programming.gif%3Ffit%3D1281%252C716%26ssl%3D1" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Hey, guys! Here is the &lt;a href="https://youtu.be/ne4Xsoe5Br8"&gt;Complete Simple tutorial Based on the Official Documentation of Python&lt;/a&gt; that already helped a lot of people! These 15 episodes are very helpful if you just start coding or want to improve your skills. The information is well combined, the source code is provided for each video, a lot of practical tips and btw, the whole course takes just 5 hours to complete!&lt;br&gt;
I hope this course will be very useful for you and you will learn a lot!&lt;/p&gt;

&lt;p&gt;Github Source Code: &lt;a href="https://github.com/amboulouma/python-ultimate-tutorial"&gt;https://github.com/amboulouma/python-ultimate-tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To give you an overview, here is the table of content of the crash course:&lt;/p&gt;

&lt;p&gt;🖥️  &lt;a href="https://www.youtube.com/watch?v=vQqisFjAnsE"&gt;Introduce you the Python Official Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Get started with &lt;a href="https://www.youtube.com/watch?v=NmzIyE4wBGs&amp;amp;t=4s"&gt;Numbers, Strings and Lists in Python&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;🖥️  What are &lt;a href="https://www.youtube.com/watch?v=4-2x_zhwvSM&amp;amp;t=3s"&gt;if, for and loop statements&lt;/a&gt; and everything about &lt;a href="https://www.youtube.com/watch?v=A-JLsh38ODs&amp;amp;t=35s"&gt;Functions in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Very simple about &lt;a href="https://www.youtube.com/watch?v=6TJERSlqQIk&amp;amp;t=8s"&gt;Data Structures in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Easy explanation of &lt;a href="https://www.youtube.com/watch?v=9dukuNA2wAk&amp;amp;t=19s"&gt;Python Modules and their usages&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;🖥️  Only good stuff about &lt;a href="https://www.youtube.com/watch?v=UpIYUJgcZMU&amp;amp;t=39s"&gt;Input, Output, Files and JSON in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  Very helpful information about &lt;a href="https://www.youtube.com/watch?v=_zJzpZepIUE"&gt;Errors and Exceptions in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️  What’s the point of &lt;a href="https://www.youtube.com/watch?v=tlKBlwj375c&amp;amp;t=2s"&gt;OOP, Classes, Scopes, Iterators and Generators in Python&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;🖥️  You have just 13 minutes about &lt;a href="https://www.youtube.com/watch?v=E-jVDSRkuws&amp;amp;t=5s"&gt;Internet, Math, OS and Regex Modules in Python&lt;/a&gt; and only 6 to find out what are the &lt;a href="https://www.youtube.com/watch?v=MYGY0Siw_Zo&amp;amp;t=11s"&gt;Performance, Dates and Compression Modules in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ How to make &lt;a href="https://www.youtube.com/watch?v=R0LqfY1m1NU&amp;amp;t=6s"&gt;Tests, Templating, Multi-threading and Logging Modules in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ You will learn More on &lt;a href="https://www.youtube.com/watch?v=BUUvaOUaK2o&amp;amp;t=3s"&gt;Lists, Heaps and Decimal Precision in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ It’s time for you to know about &lt;a href="https://www.youtube.com/watch?v=yQ0A-v8ysJE&amp;amp;t=8s"&gt;Virtual Environments and Packages in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🖥️ Finally, let’s summarize what we have learned in a &lt;a href="https://www.youtube.com/watch?v=xJSWOKGfsqk&amp;amp;t=11s"&gt;Python Official Documentation Overview&lt;/a&gt;  and get the easy access to the main recourses, codes and information&lt;/p&gt;

&lt;p&gt;Handy links: &lt;br&gt;
⇨ ⇨ ⇨ Here is the link on &lt;a href="https://www.youtube.com/watch?v=ne4Xsoe5Br8&amp;amp;t=1s"&gt;Python Full Course - Complete Tutorial based on the Python Official Documentation&lt;/a&gt;  (5 hours long video)&lt;/p&gt;

&lt;p&gt;✅ And not to mix up the information and study the episodes in its order, here is the link on the playlist for you: &lt;a href="https://www.youtube.com/watch?v=vQqisFjAnsE&amp;amp;list=PLpMTHmi814W0nSToTOC0Q18kREOjcJspW"&gt;Python Ultimate Tutorial [Official Documentation]&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Top 5 Git Tips &amp; Tricks</title>
      <author>Agnieszka Stec</author>
      <pubDate>Wed, 23 Jun 2021 10:19:41 +0000</pubDate>
      <link>https://dev.to/gitlive/top-5-git-tips-tricks-8na</link>
      <guid>https://dev.to/gitlive/top-5-git-tips-tricks-8na</guid>
      <description>&lt;p&gt;Becoming a Git power-user is on the bucket list of every developer. Today we prepared 5 Git tips that will help you level up your workflow and bring you one step closer to Git mastery.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip1"&gt; Tip #1 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Modify previous commit without changing the commit message &lt;/h2&gt;
 

&lt;p&gt;You’ve just committed your changes on your local copy with a detailed and thought-through message, but the moment you hit RETURN you realised you forgot to add that one change that really belongs there. If only there was a way to update the previous commit instead of creating a new one...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command lets you modify the last commit without changing the commit message. The hash value will be updated, but there will be only one commit record leaving your local Git history nice and clean.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip2"&gt; Tip #2 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Keep your commits organised &lt;/h2&gt;
 

&lt;p&gt;You just wanted to fix that one feature, but in the meantime got into the flow, took care of a tricky bug and spotted a very annoying typo. One thing led to another, and suddenly you realised that you’ve been coding for hours without actually committing anything. Now your changes are too vast to squeeze in one commit...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nt"&gt;-p&lt;/span&gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With git &lt;code&gt;add -p&lt;/code&gt; (or &lt;code&gt;git add --patch&lt;/code&gt;) you can choose which parts of code from a file you want to include in your commit. After running the command you will get the list of the options you can add to git &lt;code&gt;add -p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;By choosing &lt;code&gt;s&lt;/code&gt; you can split the hunk into smaller pieces. From there you can simply choose the chunks you want to stage for commit (and omit those you don’t) by navigating with &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; (or go for any other option from the list).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip3"&gt; Tip #3 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Take me back to better times (when everything worked!)  &lt;/h2&gt;
 

&lt;p&gt;Not your best day. You made changes you shouldn’t have and now everything is broken… Is there a way to undo those commits?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this handy command, you can get the record of all the commits done in Git. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---08fBqr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/6033cf9dce54c65d97d57571/60d2f2e0aefc62540cefc79c_gitreflog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---08fBqr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/6033cf9dce54c65d97d57571/60d2f2e0aefc62540cefc79c_gitreflog.png" alt="termianl view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you just need to find the commit prior to the one that caused all the hassle. &lt;code&gt;HEAD@{index}&lt;/code&gt; represents the specified commit, so just replace index with the correct number and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset HEAD@&lt;span class="o"&gt;{&lt;/span&gt;index&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The default action for &lt;code&gt;git reset&lt;/code&gt; is &lt;code&gt;git reset --mixed&lt;/code&gt;. It means that the changes in your working directory will be preserved but not staged (since the index was modified to match the chosen commit, the changes are not in the index anymore).&lt;/p&gt;

&lt;p&gt;Other options are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt;
&lt;span class="c"&gt;# Doesn’t modify the index or the working tree, leaving your changes staged for commit.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt;
&lt;span class="c"&gt;# Use with caution, as it resets both the index and working tree. Uncommitted changes and all commits after will be removed.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And voilà, you can start over from the point when everything in your repository worked like a charm. Remember to use it only locally, as modifying a shared repository is considered a serious crime.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip4"&gt; Tip #4 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Let’s face those merge conflicts  &lt;/h2&gt;
 

&lt;p&gt;You're on to a hairy merge conflict, but after comparing two conflicting versions you still have no idea which one is correct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nt"&gt;--conflict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;diff3 &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resolving merge conflicts is not all fun and games, but this command can make your life a little bit easier. Often you need more context to decide which branch is correct. By default, Git shows you a version of the markers that contains versions of the two files that have a conflict. By choosing the option above you will be able to see the base version as well, which can hopefully save you some trouble. You can also set it as default with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; merge.conflictstyle diff3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;sup&gt;💡 "Resolving merge conflicts is fun!" - said no one ever. The good news is that with GitLive you can get notified of conflicts before they occur. Gutter indicators show your teammates changes in your editor in real-time. Check out &lt;a href="https://blog.git.live/gitlive-11.0-Real-time-merge-conflict-detection"&gt;this blog post &lt;/a&gt; to find out more.&lt;br&gt;
&lt;/sup&gt;&lt;/p&gt;



&lt;p&gt;
&lt;a href="#tip5"&gt; Tip #5 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Let autocorrect take care of it   &lt;/h2&gt;
 

&lt;p&gt;You’re pretty proud of your breakneck typing speed, but at the same time you can’t even remember how many times you typed “git stauts” instead of “git status” and it leaves you mildly annoyed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; help.autocorrect &amp;lt;integer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Git Autocorrect is a convenient option for all the impatient devs out there. The integer value represents a tenth of a second. Choosing 30 will give you 3 seconds to change your mind and stop the operation - otherwise Git will assume you meant the instruction most similar to the one you wrote. Don’t worry though, if you type something that is not even close to a Git command, Git will give up on guessing and print an error message instead.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading! Hope you found our Git-pick useful. Feel free to share your favorite hacks in the comments! Happy Git-ing! &lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>git</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
