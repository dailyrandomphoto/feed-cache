<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Learning Python- Intermediate course: Day 8, Summary of the week and nested Modules</title>
      <author>Aatmaj</author>
      <pubDate>Sat, 14 Aug 2021 08:05:49 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-8-summary-of-the-week-and-nested-modules-j3d</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-8-summary-of-the-week-and-nested-modules-j3d</guid>
      <description>&lt;p&gt;Hello friends, today we will summarize the learning of the week.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary-of-the-week"&gt;
  &lt;/a&gt;
  Summary of the week
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-5-exploring-the-math-module-5alo"&gt;Day 5&lt;/a&gt; We learnt that modules are a way of packaging our code which enhances flexibility and code reusability. Modules are basically python files which contain various functions. One example of which is the built in module math. The math module in Python is a very useful module. We can perform various mathematical functions using the module.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-6-math-exercises-12ge"&gt;Day 6&lt;/a&gt; In this part we solved many questions related to the math module for example Armstrong numbers, use of recursion in solving power operations, etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-7-making-python-modules-kmf"&gt;Day 7&lt;/a&gt; We saw how to make our own Python modules and how to use them in our code. We can make Python module by saving a Python file (with the &lt;code&gt;.py&lt;/code&gt; extension in the Lib folder of Python source. Then we can use the modules by using the import statement. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#using-modules-in-modules"&gt;
  &lt;/a&gt;
  Using modules in modules
&lt;/h3&gt;

&lt;p&gt;We can use a module in another module.&lt;br&gt;
 Here is a sample question-&lt;/p&gt;

&lt;p&gt;Create a module named ModuleC to calcuate the combination of two numbers. This module must import ModuleB which contains the factorial function.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ModuleB
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;ModuleC
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ModuleB&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ModuleB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModuleB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ModuleB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;main
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ModuleC&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModuleC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;What will happen if we try to call the function factorial from he main? We cannot do so as the main does not directly import ModuleB. Hence, we cannot use the factorial defined in B as ModuleC.factorial() or ModuleB.factorial()&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ModuleC&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModuleC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModuleC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10.0
Traceback (most recent call last):
  File "main.py", line 3, in &amp;lt;module&amp;gt;
    print(ModuleC.factorial(4))
AttributeError: 'module' object has no attribute 'factorial'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ModuleC&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModuleC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;moduleB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10.0
Traceback (most recent call last):
  File "main.py", line 4, in &amp;lt;module&amp;gt;
    print(moduleB.factorial(4))
NameError: name 'moduleB' is not defined

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the above code to run, we need to import the module B.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ModuleC&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ModuleB&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModuleC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModuleB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;10.0
24
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;ul&gt;
&lt;li&gt;We all know that neither me nor you have ever seen each other. Learning in remote environment is a difficult, and teaching is perhaps even more difficult. Teaching is never a one-way process.
I request everyone to participate actively in this course, either through comments below or forking on Github &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;Learning-Python repo&lt;/a&gt;
😃 😃 😃&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥&lt;br&gt;
Next day will begin from Tuesday📅&lt;/p&gt;

</description>
      <category>python</category>
      <category>learningpython</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Support for password authentication was removed </title>
      <author>Arjun Gautam</author>
      <pubDate>Sat, 14 Aug 2021 08:03:45 +0000</pubDate>
      <link>https://dev.to/arjungautam/support-for-password-authentication-was-removed-518o</link>
      <guid>https://dev.to/arjungautam/support-for-password-authentication-was-removed-518o</guid>
      <description>&lt;p&gt;Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.&lt;br&gt;
&lt;strong&gt;If you are getting this error go through this :&lt;/strong&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ytSoabxSQ6E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>arjuncodes</category>
      <category>passwordauthentication</category>
    </item>
    <item>
      <title>JS Polyfills asked in Interviews</title>
      <author>Abhishek Raj</author>
      <pubDate>Sat, 14 Aug 2021 07:44:20 +0000</pubDate>
      <link>https://dev.to/abhishekraj272/js-polyfills-asked-in-interviews-19b3</link>
      <guid>https://dev.to/abhishekraj272/js-polyfills-asked-in-interviews-19b3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;As Javascript community keeps adding new methods in Javascript, so all browsers doesn't support new JS methods.  &lt;/p&gt;

&lt;p&gt;To make your JS code run on every browser, you need to add it on your own or you can use &lt;a href="https://sotly.co/IXY6zCbd"&gt;Babel&lt;/a&gt;, &lt;a href="https://sotly.co/40bmc6Bp"&gt;CoreJS&lt;/a&gt;. Sometimes companies ask in &lt;strong&gt;interview&lt;/strong&gt; for Polyfills to know your understanding.  &lt;/p&gt;

&lt;p&gt;In this article, I will list out some Polyfills asked by companies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-array-flat"&gt;
  &lt;/a&gt;
  1. Array Flat
&lt;/h2&gt;

&lt;p&gt;This method is used to flat a nested array.&lt;/p&gt;

&lt;p&gt;In the below example, we have used &lt;a href="https://sotly.co/tSFkt02X"&gt;recursion&lt;/a&gt; to solve this problem. We have created 2 cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A base case: If depth is reached then push arr in output and return it.&lt;/li&gt;
&lt;li&gt;A recursion case: Loop over array and check if its an Array or not. If its an array flat it, else push the number in output.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag__replit"&gt;
  &lt;iframe height="550px" src="https://repl.it/@abhishekraj2721/Array-Flat-JS?lite=true"&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-array-filter"&gt;
  &lt;/a&gt;
  2. Array Filter
&lt;/h2&gt;

&lt;p&gt;This is a Higher Order Function which takes another function and filters the array on the basis of the function.&lt;/p&gt;

&lt;p&gt;In the below example, we have created a higher order function, which takes another function and calls on each element of the array. If it returns &lt;em&gt;true&lt;/em&gt; then that element is inserted into result.&lt;/p&gt;


&lt;div class="ltag__replit"&gt;
  &lt;iframe height="550px" src="https://repl.it/@abhishekraj2721/Array-Filter-JS?lite=true"&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-array-reduce"&gt;
  &lt;/a&gt;
  3. Array Reduce
&lt;/h2&gt;

&lt;p&gt;This is a Higher Order Function which takes another function and reduces the array to single value/object and returns it.&lt;/p&gt;

&lt;p&gt;In the below example, we have created a higher order function, which takes another function and calls on each element of the array. It mutates the result returned by the callback function.&lt;/p&gt;


&lt;div class="ltag__replit"&gt;
  &lt;iframe height="550px" src="https://repl.it/@abhishekraj2721/Array-Reduce-JS?lite=true"&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-function-bind"&gt;
  &lt;/a&gt;
  4. Function Bind
&lt;/h2&gt;

&lt;p&gt;The bind method is used to pass an execution context to the function.&lt;/p&gt;

&lt;p&gt;In the below example, the custom Bind function takes the context and uses apply method to bind the function with the given context.&lt;/p&gt;


&lt;div class="ltag__replit"&gt;
  &lt;iframe height="550px" src="https://repl.it/@abhishekraj2721/Func-Bind-JS?lite=true"&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;h5&gt;
  &lt;a href="#for-more-awesome-polyfills-asked-in-interviews-check-out-jsvault"&gt;
  &lt;/a&gt;
  For more Awesome polyfills asked in interviews, check out &lt;a href="https://sotly.co/2_Dz2uUf"&gt;JSVault&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;Connect Me @ &lt;a href="https://www.linkedin.com/in/abhishekraj272/"&gt;Linkedin&lt;/a&gt;, &lt;a href="https://github.com/abhishekraj272"&gt;Github&lt;/a&gt;, &lt;a href="https://twitter.com/abhishekraj272"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCvHn2T8DSJzEWzYDdK3Dt8A"&gt;Youtube&lt;/a&gt; 😇&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: I have written all the methods as pure functions, as I have only wanted to show the code. We can also use Prototypal Inheritance.  &lt;/p&gt;

&lt;p&gt;All the URLs in this post are powered by &lt;a href="https://app.sotly.co/"&gt;Sotly.co&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>career</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Magical JavaScript Tips For Every Web Developer</title>
      <author>Google</author>
      <pubDate>Sat, 14 Aug 2021 07:10:28 +0000</pubDate>
      <link>https://dev.to/inncodez/10-magical-javascript-tips-for-every-web-developer-3904</link>
      <guid>https://dev.to/inncodez/10-magical-javascript-tips-for-every-web-developer-3904</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;— Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using &lt;code&gt;Infinity&lt;/code&gt; in &lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable &lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
    </item>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency</title>
      <author>Google</author>
      <pubDate>Sat, 14 Aug 2021 06:32:57 +0000</pubDate>
      <link>https://dev.to/inncodez/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-fpo</link>
      <guid>https://dev.to/inncodez/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-fpo</guid>
      <description>&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!✌🏻&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome language💛 to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.🚀&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.⏱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>C# For Beginners - Lesson 9: Arrays</title>
      <author>Coding Mama</author>
      <pubDate>Sat, 14 Aug 2021 05:36:33 +0000</pubDate>
      <link>https://dev.to/coding_mama/c-for-beginners-lesson-9-arrays-1bh0</link>
      <guid>https://dev.to/coding_mama/c-for-beginners-lesson-9-arrays-1bh0</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;At the end of this lesson, you should be able to answer the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is an array?&lt;/li&gt;
&lt;li&gt;What is an element? What is an index?&lt;/li&gt;
&lt;li&gt;How do I declare an array in C#?&lt;/li&gt;
&lt;li&gt;How do I access the values in an array?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;p&gt;So far, we have been storing single values in our variables. But in some situations, we need variables that store more than one value.&lt;/p&gt;

&lt;p&gt;An array is a data structure that holds multiple values of the same type. It's denoted by the square brackets at the end of the type name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above we have declared an array of integers. Because we have not initialised it yet, its value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To be able to use the array, we need to initialise it first by allocating how many values we need. This number determines the &lt;strong&gt;size&lt;/strong&gt; of the array. Note that the size of the array is &lt;strong&gt;fixed&lt;/strong&gt; and cannot be changed once it's allocated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To initialise the array, we use the &lt;em&gt;new&lt;/em&gt; keyword, followed by the type of the array, and the number of values we want in the square brackets. Line 2 shows another way of declaring and initialising an array, using the var keyword that we learned in &lt;a href="https://dev.to/coding_mama/c-for-beginners-lesson-5-variables-1pi4"&gt;Lesson 5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can access the values in the array by their position using the square brackets. Each value is called an &lt;em&gt;element&lt;/em&gt; and its position is its &lt;em&gt;index&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let's try printing some values. Type the following in your code box and run the program.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The array is initialised, but the elements in the array are still the &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/default-values"&gt;default values&lt;/a&gt; of each type. That's why &lt;code&gt;scores[1]&lt;/code&gt; prints &lt;code&gt;0&lt;/code&gt;, the default value for &lt;code&gt;int&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Try accessing the last element of the array. Do you know which index to use?&lt;/p&gt;

&lt;p&gt;Since we have 10 elements, wouldn't the last element be the 10th one? If you tried to run the code below, you might get a surprise!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An error happens because &lt;code&gt;10&lt;/code&gt; is not the index of the last element! Arrays in C# are &lt;em&gt;zero-based&lt;/em&gt;, meaning the index starts at &lt;code&gt;0&lt;/code&gt;. So an array of 10 elements would have indexes from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UiodJ3i5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir2dc436dno99vo1e158.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UiodJ3i5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir2dc436dno99vo1e158.png" alt="An error happens because 10 is not the index of the last element!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To demonstrate this more clearly, let's first put some actual values into our array. We can do this during our array declaration. The following are all valid ways to declare and initialise an array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt; 
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;arr3&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can declare the array elements inside curly brackets next to the type. &lt;/p&gt;

&lt;p&gt;For Lines 1 and 2, we can also replace the first &lt;code&gt;int[]&lt;/code&gt; in Lines 1 and 2 with a &lt;code&gt;var&lt;/code&gt; keyword and the syntax will be valid. We can't do the same with Line 3, though.&lt;/p&gt;

&lt;p&gt;For Lines 2 and 3, the size of the array is inferred by C# from the number of values.&lt;/p&gt;

&lt;p&gt;Use one of the ways above to declare a &lt;code&gt;scores&lt;/code&gt; array with some values. Then print the first and last element by accessing the elements with the index &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; respectively.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Declare an array with 10 elements&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;93&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;99&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Print the first element&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="c1"&gt;// Print the last element&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the program. The first element is &lt;code&gt;100&lt;/code&gt;, and the last element is &lt;code&gt;99&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can get the total number of elements in an array using the &lt;code&gt;Length&lt;/code&gt; property. Add the following to the code above and run the program. The output should be &lt;code&gt;10&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRe12PYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/690m79534n0oga9umkt6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRe12PYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/690m79534n0oga9umkt6.png" alt="Total number of elements in an array using the  raw `Length` endraw  property"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Can you recall where we used a &lt;code&gt;Length&lt;/code&gt; property before? In &lt;a href="https://dev.to/coding_mama/c-for-beginners-lesson-6-strings-2n6h"&gt;Lesson 6&lt;/a&gt; we learned that strings have a &lt;code&gt;Length&lt;/code&gt; property that returns the number of characters in the string. Coincidence?&lt;/p&gt;

&lt;p&gt;No, because strings are actually arrays of &lt;code&gt;char&lt;/code&gt; values! You can do the following with a string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"consecutive normal punches"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"The 4th character of '&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;' is '&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s"&gt;'."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ahtLqpdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdud8yp0ilfkpv8ri3t8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ahtLqpdh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdud8yp0ilfkpv8ri3t8.png" alt="A string is an array of characters"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Questions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;True or False:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once allocated, the size of an array is fixed and cannot change.&lt;/li&gt;
&lt;li&gt;You can have both &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;string&lt;/code&gt; values in one array.&lt;/li&gt;
&lt;li&gt;The first element of an array&lt;code&gt;arr&lt;/code&gt; is in &lt;code&gt;arr[0]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The last element of an array &lt;code&gt;arr2&lt;/code&gt; is in &lt;code&gt;arr2[arr2.Length-1]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This is a valid array declaration: &lt;code&gt;int[] arr3 = new int[];&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;string&lt;/code&gt; array with your desired number of elements. Populate it using one of the initialisation expressions shown in the lesson. Then print the first element, last element, and the total number of elements in the array. Use &lt;a href="https://dev.to/coding_mama/c-for-beginners-lesson-6-strings-2n6h"&gt;string interpolation&lt;/a&gt; to make the output like this:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;First element:
Last element:
Total number of elements:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using the &lt;code&gt;string&lt;/code&gt; array in the previous challenge, print out all the elements in the array. (Hint: You can use a &lt;a href="https://dev.to/coding_mama/c-for-beginners-lesson-8-loops-3mf0"&gt;for loop&lt;/a&gt;!)&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Database Management System: Data Models</title>
      <author>Kathan Vakharia</author>
      <pubDate>Sat, 14 Aug 2021 05:19:53 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/database-management-system-data-models-335a</link>
      <guid>https://dev.to/kathanvakharia/database-management-system-data-models-335a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-only-theory-you-need"&gt;
  &lt;/a&gt;
  The ONLY Theory You Need 📚
&lt;/h2&gt;

&lt;p&gt;Data Model is a collection of &lt;strong&gt;concepts&lt;/strong&gt; (fundamental building blocks or general notions) that can be used to describe the &lt;em&gt;structure&lt;/em&gt; of a database. Thus, it provides necessary means(ways) to achieve &lt;em&gt;data abstraction&lt;/em&gt; (easy to understand for different classes of peoples: naive users, query executors, etc.)&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;structure&lt;/em&gt; of a database implies &lt;em&gt;data types&lt;/em&gt;, &lt;em&gt;relationships&lt;/em&gt;, and &lt;em&gt;constraints&lt;/em&gt;(restrictions) that apply to data that is stored.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIQU1dVB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99r805sfktgiendfx1wc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIQU1dVB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99r805sfktgiendfx1wc.jpg" alt="Image 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🗯 In simple words, a data model helps us represent data using simple concepts( say objects, attributes, tables, etc.) so that the intended audience can work on it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#types-of-data-models"&gt;
  &lt;/a&gt;
  Types of data models
&lt;/h2&gt;

&lt;p&gt;Depending on the audience, we may need a different level of abstractions. Let me give you a real-world scenario,&lt;/p&gt;

&lt;p&gt;Say you are hired as a database designer for your nearest shopping mall. Now you are going to perform &lt;em&gt;requirement analysis&lt;/em&gt; to determine the structure of the database. After all the hardship, you will be needed to explain your database to the manager of the mall right? To him, you cannot talk about how SQL works, neither you can talk about how the data is stored physically! He will be flabbergasted.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9QAMFByI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdhccy13k2nasqqf03tk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9QAMFByI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdhccy13k2nasqqf03tk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;⛑ To avoid the above situation, a better thing would be to explain to him in form of some diagrams/pictures so that he can understand and provide feedback for further iterations of the design.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Depending on the type of the audience, we can model the data into 3 different ways,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KrW14CMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jyb009d7a508h9b8fce.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KrW14CMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jyb009d7a508h9b8fce.jpg" alt="Image 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hight Level or Conceptual Model 

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;highest&lt;/strong&gt; level of abstraction is provided.&lt;/li&gt;
&lt;li&gt;Used for modeling data for naive users.&lt;/li&gt;
&lt;li&gt;we use &lt;em&gt;diagrams&lt;/em&gt; or &lt;em&gt;visuals&lt;/em&gt; to explain our database.&lt;/li&gt;
&lt;li&gt;Example: Entity-Relationship(ER) model.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Representational/Implementation/Logical Model

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Less&lt;/strong&gt; abstraction compared to Conceptual Model.&lt;/li&gt;
&lt;li&gt;To execute &lt;em&gt;queries&lt;/em&gt;, we need to understand this model.&lt;/li&gt;
&lt;li&gt;Intended for programmers who are query executors.&lt;/li&gt;
&lt;li&gt;Example: Relational Model, Object-Oriented Model.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Physical Model

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;lowest&lt;/strong&gt; level of abstraction.&lt;/li&gt;
&lt;li&gt;To understand how the data is stored in the memory, we need to understand this model.&lt;/li&gt;
&lt;li&gt;Intended for computer specialists as it talks about low-level details.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>computerscience</category>
      <category>tutorial</category>
      <category>dbms</category>
    </item>
    <item>
      <title>Dashboard simple en NodeJS x ExpressJS 🍋</title>
      <author>José Antonio Fernández</author>
      <pubDate>Sat, 14 Aug 2021 05:03:42 +0000</pubDate>
      <link>https://dev.to/syntaxter/dashboard-simple-en-nodejs-x-expressjs-57a7</link>
      <guid>https://dev.to/syntaxter/dashboard-simple-en-nodejs-x-expressjs-57a7</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iqQE-MsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628822848/IMAGENES/GITHUB/header-jordan-animation_c1is5k.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iqQE-MsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628822848/IMAGENES/GITHUB/header-jordan-animation_c1is5k.svg" alt="Portada del post"&gt;&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Este fue uno de mis primeros diseños enfocados en el aprovechamiento de un backend que gestionaba el envío masivo a través de un hosting basado en PHP para obtener un archivo CSV, transformarlo a JSON y luego decodificarlo.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Abajo te explico como utilizar este diseño en tu web o relacionarlo con otros mencionandote las clases principales.&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#veamos-como-se-ve-el-dise%C3%B1o-final"&gt;
  &lt;/a&gt;
  Veamos como se ve el diseño final 🍋
&lt;/h3&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K2_h6yXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628914206/IMAGENES/GITHUB/DASHVOARD-ENVIOS-MASIVOS/github-preview-mini-dashboard-twilio_qmfo9u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K2_h6yXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628914206/IMAGENES/GITHUB/DASHVOARD-ENVIOS-MASIVOS/github-preview-mini-dashboard-twilio_qmfo9u.png" alt="Diseño UI de Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#y-tambi%C3%A9n-tiene-un-campo-para-introducci%C3%B3n-de-datos"&gt;
  &lt;/a&gt;
  🍋 Y también tiene un campo para introducción de datos
&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Esto lo puedes reciclar como un componente para un framework o simplemente usarlo como JS simple para gestionar peticiones para almacenar datos en una db, json o cualquier lugar donde lo utilices de forma recurrente. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n8eNrFJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628914558/IMAGENES/GITHUB/DASHVOARD-ENVIOS-MASIVOS/github-preview-mini-dashboard-form_ine9lk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n8eNrFJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628914558/IMAGENES/GITHUB/DASHVOARD-ENVIOS-MASIVOS/github-preview-mini-dashboard-form_ine9lk.png" alt="Segunda imagen de Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conocimiento-importantes-para-el-desarrollo"&gt;
  &lt;/a&gt;
  ¿Conocimiento importantes para el desarrollo?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CSS / Variables
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
    --main-bg-color: #0E0E0E;
    --secondary-bg-color: #161616;
    --blue-color: #4E54FF;
    --yellow-color: #F4E236;
    --bg-cards: rgba(255, 255, 255, 0.103);
}
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CSS / Display grid
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;element {
    display: grid;
    grid-template-columns: 30% 70%;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CSS / Display Flex
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.contenedorLogo {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    padding-left: 20px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CSS / Mixing CSS Hover Parent to Child
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.contenedorPerfil img:hover~span {
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    transform: translateX(7px);
    background: var(--blue-color);
    transition: 0.5s;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CSS / Postion Fixed
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.pencil {
    position: fixed;
    width: 75px;
    height: 75px;
    background-color: var(--yellow-color);
    left: 50px;
    bottom: 30px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CSS / Postion reset styles (inputs)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.formularioArchivo input {
    width: 80%;
    height: 40px;
    border: none;
    border-bottom: 3px solid var(--yellow-color);
    margin: 20px;
    padding: 10px;
    background: transparent;
    outline: none;
    font-size: 1.3rem;
    color: #fff;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CSS / Microinteraction for close button
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#closeOpen::after {
    content: "";
    position: absolute;
    width: 25px;
    height: 2px;
    background-color: var(--yellow-color);
    transform: rotate(45deg);
    transition: .4s;
}

#closeOpen:hover::after {
    transform: rotate(0deg);
    transition: .4s;
}

#closeOpen::before {
    content: "";
    position: absolute;
    width: 25px;
    height: 2px;
    background-color: var(--yellow-color);
    transform: rotate(-45deg);
    transition: .4s;
}

#closeOpen:hover::before {
    transform: rotate(0deg);
    transition: .4s;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;blockquote&gt;
&lt;p&gt;Sí no conoces CSS te costará mil veces .&lt;/p&gt;
&lt;/blockquote&gt;



&lt;h2&gt;
  &lt;a href="#el-c%C3%B3digo-en-javascript-que-permite-mostrarocultar-el-formulario-de-carga-de-contenido"&gt;
  &lt;/a&gt;
  El código en Javascript que permite mostrar/ocultar el formulario de carga de contenido
&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Este formulario solo contiene datos importantes para completar la funcionalidad de carga del elemento principal, este elemento permite que puedas enviar una petición, put, post, delete, get para renderizar los datos desde el servidor tienes el botón principal para procesar todos estos.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Código en js / Frontend
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;closeOpen.addEventListener('click', () =&amp;gt; {
    contenedorPopUp.style.display = "none";
})

pencil.addEventListener('click', () =&amp;gt; {
    contenedorPopUp.style.display = "grid";
})

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Es el encarga de cambiar la propiedad de display none a block y viceversa, puedes animar la transición del elemento contenedor como práctica o simplemente dejarlo como está actualmente.&lt;/p&gt;



&lt;p&gt;Este es mi correo profesional &lt;strong&gt;&lt;em&gt;&lt;a href="mailto:jose@joseamaya.tech"&gt;jose@joseamaya.tech&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;, si me escribes te aseguro que tendrás una respuesta.&lt;/p&gt;

&lt;p&gt;Atentamente, &lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a href="https://github.com/syntaxter/node-dashboard-campaigns"&gt;Link al repo&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://syntaxter.github.io/node-dashboard-campaigns/"&gt;Link a la demo&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/syntaxter/"&gt;Siguemente en las redes como @syntaxter&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PxYjJ4TF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628821040/IMAGENES/GITHUB/profile_qcrojr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PxYjJ4TF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/www-ismyt-com/image/upload/v1628821040/IMAGENES/GITHUB/profile_qcrojr.png" alt="Perfil"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;José A. Amaya&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>expressjs</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>🚀20 Best CSS3 Library For Developers.</title>
      <author>Google</author>
      <pubDate>Sat, 14 Aug 2021 04:19:37 +0000</pubDate>
      <link>https://dev.to/inncodez/20-best-css3-library-for-developers-49jl</link>
      <guid>https://dev.to/inncodez/20-best-css3-library-for-developers-49jl</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;🤔 How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together &lt;span&gt;20 best CSS libraries.&lt;/span&gt; We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#lets-go"&gt;&lt;/a&gt;Let's go....🤩&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;🚀20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>Web Designer Complete Roadmap</title>
      <author>Google</author>
      <pubDate>Sat, 14 Aug 2021 04:11:20 +0000</pubDate>
      <link>https://dev.to/inncodez/web-designer-complete-roadmap-9a2</link>
      <guid>https://dev.to/inncodez/web-designer-complete-roadmap-9a2</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>Frontend Developer Project For Beginners</title>
      <author>Google</author>
      <pubDate>Sat, 14 Aug 2021 04:06:07 +0000</pubDate>
      <link>https://dev.to/inncodez/frontend-developer-project-for-beginners-4jag</link>
      <guid>https://dev.to/inncodez/frontend-developer-project-for-beginners-4jag</guid>
      <description>&lt;p&gt;&lt;span&gt; &lt;span&gt;There's nothing quite like building projects to grow as a developer. Tutorials are a brilliant learning tool. But at some point, the training wheels need to come off and you need to start building.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The problem is, as developers, we're often not the best at making things look great ourselves 😅&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I wouldn't even know where to begin if someone asked me to create something beautiful from scratch! But, if a designer hands me a design I'll more than happily code it up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you're in the same boat, we've got some great projects for you at Frontend Mentor. Each one includes mobile &amp;amp; desktop designs, a front-end style guide (for fonts, colors, etc) and a basic brief. The assets are all provided and pre-optimized meaning all you need to focus on is writing the code!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;You can use any tools you like while building each project. So if you're wanting to practice things like React, Vue, Sass, Tailwind you get to choose your setup.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So, without further ado let's get started on the first challenge:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;a href="https://www.codelivly.com/frontend-developer-beginners-project-idea-for-developers-2021/"&gt;Frontend Developer Project For Beginners&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top magical Python Tips For Developer</title>
      <author>Google</author>
      <pubDate>Sat, 14 Aug 2021 04:00:16 +0000</pubDate>
      <link>https://dev.to/inncodez/top-magical-python-tips-for-developer-2fdk</link>
      <guid>https://dev.to/inncodez/top-magical-python-tips-for-developer-2fdk</guid>
      <description>&lt;p&gt;This resource contains a collection of Python best practices and Python tips provided by our team network members.&lt;/p&gt;
&lt;p&gt;This resource contains a collection of Python best practices and Python tips provided by our team network members. As such, this page will be updated on a regular basis to include additional information and cover emerging Python techniques. This is a community driven project, so you are encouraged to contribute as well, and we are counting on your feedback.&lt;/p&gt;
&lt;p&gt;Python is a high level language used in many development areas, like web development (Django, Flask), data analysis (SciPy, scikit-learn), desktop UI (wxWidgets, PyQt) and system administration (Ansible, OpenStack). The main advantage of Python is development speed. Python comes with rich standard library, a lot of 3rd party libraries and clean syntax. All this allows a developer to focus on the problem they want to solve, and not on the language details or reinventing the wheel.&lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/10-magical-python-tips-for-every-developer/"&gt;Python magical tips for every developer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;




</description>
    </item>
  </channel>
</rss>
