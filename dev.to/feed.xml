<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>I analyzed my six years of food deliveries</title>
      <author>Shubham Jain</author>
      <pubDate>Sat, 17 Apr 2021 10:25:36 +0000</pubDate>
      <link>https://dev.to/shubhamjain/i-analyzed-my-six-years-of-food-deliveries-5fp4</link>
      <guid>https://dev.to/shubhamjain/i-analyzed-my-six-years-of-food-deliveries-5fp4</guid>
      <description>&lt;p&gt;Before food delivery apps came along, ordering food online was a pain. I started using &lt;a href="https://swiggy.com/"&gt;Swiggy&lt;/a&gt;, the Indian food delivery app, in 2016 and because it made it way too easy to get food delivered, my orders just went through the roof. I thought it will be fun to analyze how much and what have I ordered. &lt;/p&gt;

&lt;p&gt;There are two sections of this post: a) How I did it? b) The numbers and my analysis. Depending on your interest, you can skip either.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-did-it"&gt;
  &lt;/a&gt;
  How I did it?
&lt;/h2&gt;

&lt;p&gt;Swiggy doesn't have an API to get your personal data. However, it has a page where it lists your past orders. Trouble is, it will only show five orders at once, and you have to click "Show more orders" to go further back. Naturally, you have to automate it somehow. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#figuring-out-the-source-of-data"&gt;
  &lt;/a&gt;
  Figuring out the source of data
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i_Mdr4cU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115105274-85d42a00-9f7b-11eb-9858-48fe58a2251d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i_Mdr4cU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115105274-85d42a00-9f7b-11eb-9858-48fe58a2251d.png" alt="Order Page XHR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Order Page XHR&lt;/p&gt;

&lt;p&gt;I first logged in to the web version of the app since it will be comparatively easier to analyze the requests there. It seems the orders page makes an XHR request to the URL &lt;code&gt;/dapi/order/all?order_id=$$ORDER_ID$$&lt;/code&gt; to fetch the orders where &lt;code&gt;$$ORDER_ID$$&lt;/code&gt; is used for pagination.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0m4vMTsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115106229-2c6ef980-9f81-11eb-98c7-a4555fcdfbb2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0m4vMTsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115106229-2c6ef980-9f81-11eb-98c7-a4555fcdfbb2.png" alt="Order Page Response"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Order Page Response&lt;/p&gt;

&lt;p&gt;The response is an array of JSON objects with a lot of fields.&lt;/p&gt;

&lt;p&gt;We don't need to figure out which parts of response we need to use, because we can store it all and see to that later.  &lt;/p&gt;

&lt;p&gt;I will use Postgres to store this data because a) it just works and b) has great support for querying JSON. Installing Postgres locally is really simple on Macs via the &lt;a href="https://postgresapp.com/"&gt;Postgres app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the schema I will use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;swiggy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;order_id&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;jsonb&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why do we just need two columns? Because &lt;code&gt;order_id&lt;/code&gt; is enough to uniquely identify every order and in the &lt;code&gt;data&lt;/code&gt; column we can dump the whole object. As I said earlier, Postgres makes it really easy to query JSON.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-the-data"&gt;
  &lt;/a&gt;
  Getting the data
&lt;/h3&gt;

&lt;p&gt;Let's get the data! I will be using bash for this. "BASH???? ARGHHH. WHY???", you may ask. I used to have a similar aversion towards bash, but in the past year, I have realized it makes it really easy to do certain things once you get the hang of it. &lt;/p&gt;

&lt;p&gt;It's perfectly fine if you want to use a different approach as the basic ideas would be very much portable. Like, using &lt;code&gt;axios&lt;/code&gt; instead of &lt;code&gt;cURL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, the basic request. We need to figure out if a simple request for getting orders would work at all. The easiest way to do that is to "Copy as cURL" the request from the developer's console and run it in your terminal.&lt;/p&gt;

&lt;p&gt;If it works, that's great! You can start removing the unneeded parameters, like headers, user agent, and tracking cookies. After I did the trimming, the basic request to get orders boiled down to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-sL&lt;/span&gt; &lt;span class="s2"&gt;"https://www.swiggy.com/dapi/order/all?order_id=&lt;/span&gt;&lt;span class="nv"&gt;$next_order_id&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
     &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"cookie: _session_tid=&lt;/span&gt;&lt;span class="nv"&gt;$SESSION_ID&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where &lt;code&gt;$SESSION_ID&lt;/code&gt; is the long parameter visible in the first screenshot. &lt;/p&gt;

&lt;p&gt;Once the request works, we can parse the JSON and iterate over the objects using &lt;a href="https://stedolan.github.io/jq/"&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;order &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$all_orders&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'.data.orders[]'&lt;/span&gt; &lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$order&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why do we use &lt;code&gt;IFS=$'\n'&lt;/code&gt;? Because by default bash will split tabs and spaces too, and various names in the response (like restaurant, delivery person) can have spaces.&lt;/p&gt;

&lt;p&gt;Now, we just need to store it in the DB. And write code to fetch the next orders. In all, the whole script will be like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# Your Swiggy Session ID, check screenshot #1 &lt;/span&gt;
&lt;span class="nv"&gt;SESSION_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"__SESSION_ID__"&lt;/span&gt;

&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nv"&gt;all_orders&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;curl &lt;span class="nt"&gt;-sL&lt;/span&gt; &lt;span class="s2"&gt;"https://www.swiggy.com/dapi/order/all?order_id=&lt;/span&gt;&lt;span class="nv"&gt;$next_order_id&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"cookie: _session_tid=&lt;/span&gt;&lt;span class="nv"&gt;$SESSION_ID&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;

    &lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;for &lt;/span&gt;order &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$all_orders&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'.data.orders[]'&lt;/span&gt; &lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="c"&gt;# We use $$ to wrap $order because it takes cares spaces in the data&lt;/span&gt;
        psql &lt;span class="s2"&gt;"postgres://shubhamjain@localhost/stats"&lt;/span&gt; &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"
            INSERT INTO swiggy (order_id, data) VALUES (
               '&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$order&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s1"&gt;'.order_id'&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;',
                &lt;/span&gt;&lt;span class="se"&gt;\$\$&lt;/span&gt;&lt;span class="nv"&gt;$order&lt;/span&gt;&lt;span class="se"&gt;\$\$&lt;/span&gt;&lt;span class="s2"&gt;
            );
        "&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;# Next order id would be order id of the last object in array&lt;/span&gt;
    &lt;span class="nv"&gt;next_order_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$all_orders&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="s1"&gt;'.[-1].order_id'&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running this, you should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0yT9QtG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqxe8krjenmw6wkj5g59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0yT9QtG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqxe8krjenmw6wkj5g59.png" alt="Shell Script Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At some point, it will start failing, which means it has reached the end and you can quit the script then. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: None of this is the ideal way to do things. I wasn't interested in programming properly, only hacking together something cool. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#six-years-in-numbers"&gt;
  &lt;/a&gt;
  Six years in numbers
&lt;/h2&gt;

&lt;p&gt;Cool! Now we have the data. Let's jump to answering questions.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q1-how-much-i-have-ordered"&gt;
  &lt;/a&gt;
  Q.1: How much I have ordered?
&lt;/h4&gt;

&lt;p&gt;A LOT! I knew I was ordering a ton of times, but I never put a number on it. Actually doing that, with this project, I was taken aback realizing the number of orders I have made and the money I have spent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;EXTRACT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'year'&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'order_time'&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;year&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;swiggy&lt;/span&gt; &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Total orders&lt;/strong&gt;: 915&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bv3fHrTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gshrkscp80qersip6f6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bv3fHrTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gshrkscp80qersip6f6h.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Year vs. # of orders&lt;/p&gt;

&lt;p&gt;How much I have spent?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;CAST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'order_total_with_tip'&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="nb"&gt;DOUBLE&lt;/span&gt; &lt;span class="nb"&gt;PRECISION&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
   &lt;span class="k"&gt;EXTRACT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'year'&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="nb"&gt;DATE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'order_time'&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;swiggy&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Total spent&lt;/strong&gt;: ₹1,84,329&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMdFOXZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jdr3dwapzlubtc5zcp9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMdFOXZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jdr3dwapzlubtc5zcp9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Restaurant vs. # of orders&lt;/p&gt;

&lt;p&gt;That seems to a lot of money. Enough to buy a decent second-hand car, at least.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q2-where-do-i-order-from"&gt;
  &lt;/a&gt;
  Q.2: Where do I order from?
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Pareto_principle"&gt;Pareto Principle&lt;/a&gt; seems to apply very well here. Most of my orders are for a cafe called &lt;em&gt;Chai Shai&lt;/em&gt;. I love ordering from there—it has good snacks and everything is well-packaged.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'restaurant_name'&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;swiggy&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt; 
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KnSbWFit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nntbi6flenj7eszaaeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnSbWFit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nntbi6flenj7eszaaeg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Restaurant vs. money spent on orders&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q3-when-do-i-order"&gt;
  &lt;/a&gt;
  Q.3: When do I order?
&lt;/h4&gt;

&lt;p&gt;It seems I order more during the morning and afternoon than in the evening. That can be explained by the fact that I often don't feel that hungry in the evening and I prefer something light for dinner.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="k"&gt;EXTRACT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hour'&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;TO_TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'order_time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'YYYY-MM-DD hh24:mi:ss'&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;swiggy&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RlAKta9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h5tz1b8epij7u17e3oh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RlAKta9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h5tz1b8epij7u17e3oh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hour of the day vs. # of orders&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q4-what-do-i-order"&gt;
  &lt;/a&gt;
  Q.4 What do I order?
&lt;/h4&gt;

&lt;p&gt;It seems I am fond of ordering for a quick bite and desserts than a full meal. Desserts are something I should definitely cut down on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="n"&gt;cuisine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;SELECT&lt;/span&gt;
         &lt;span class="n"&gt;JSONB_ARRAY_ELEMENTS_TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'restaurant_cuisine'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;cuisine&lt;/span&gt; 
      &lt;span class="k"&gt;FROM&lt;/span&gt;
         &lt;span class="n"&gt;swiggy&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;1&lt;/span&gt; 
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mS8xdj6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c246ro5rw9gn6h0utgss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mS8xdj6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c246ro5rw9gn6h0utgss.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cuisine vs. # of orders&lt;/p&gt;
 

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It was an interesting exercise to understand my habits over the years. There are tons of ways I can dig more into the data but for now, I will stop here. Insight fatigue isn't great either.&lt;/p&gt;

&lt;p&gt;I don't think ordering is necessarily bad but it's lazy. Knowing the scale of my habit, I know it would help me to make a little conscious effort to order less. &lt;/p&gt;

</description>
      <category>coding</category>
      <category>bash</category>
      <category>data</category>
      <category>sql</category>
    </item>
    <item>
      <title>Introducing fcd: "faster cding"</title>
      <author>Siddharth</author>
      <pubDate>Sat, 17 Apr 2021 10:13:05 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/introducing-fcd-faster-cding-4k63</link>
      <guid>https://dev.to/siddharthshyniben/introducing-fcd-faster-cding-4k63</guid>
      <description>&lt;p&gt;Ever had to type out a long &lt;code&gt;cd ~/Sites/Projects/project&lt;/code&gt;, find out the path is wrong, rewrite it to &lt;code&gt;cd ~/Sites/Sandbox/project&lt;/code&gt;? You just wasted a minute or two. This inspired me to create a tool: &lt;code&gt;fcd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fcd&lt;/code&gt; is a utility which helps you &lt;code&gt;cd&lt;/code&gt; faster on macOS.&lt;/p&gt;

&lt;p&gt;You can directly use it in place of &lt;code&gt;cd&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fcd /some/path/here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And what happens is the path to any folder with the same name as the &lt;code&gt;basename&lt;/code&gt; of the input in the &lt;code&gt;dirname&lt;/code&gt; of the input (basically, &lt;code&gt;/some/path/here&lt;/code&gt; =&amp;gt; &lt;code&gt;/some/path/**/here&lt;/code&gt;) gets copied to your clipboard.&lt;/p&gt;

&lt;p&gt;If this is confusing, then just read the README of the repo. And please leave a star if you find this useful!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SiddharthShyniben"&gt;
        SiddharthShyniben
      &lt;/a&gt; / &lt;a href="https://github.com/SiddharthShyniben/fcd"&gt;
        fcd
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Faster cd-ing.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>terminal</category>
      <category>showdev</category>
      <category>package</category>
      <category>npm</category>
    </item>
    <item>
      <title>Day 2 - 100daysofcode Webserver basics</title>
      <author>Prasham Ashesh</author>
      <pubDate>Sat, 17 Apr 2021 09:49:28 +0000</pubDate>
      <link>https://dev.to/pracoon/day-2-100daysofcode-4jdg</link>
      <guid>https://dev.to/pracoon/day-2-100daysofcode-4jdg</guid>
      <description>&lt;p&gt;I have covid and Day 2 was the day when my body begged me to get some rest and I had to give into it. Reminded me of a quote.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhorBQyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1yqdjp4k629xnxwwhzs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhorBQyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1yqdjp4k629xnxwwhzs.jpg" alt="A healthy man wants a thousand things, a sick man only wants one."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since it's been ~12 days since my first symptom and I am on a road to recovery, I think besides the coronavirus it might have to do something with the new syrup I had yesterday 😅&lt;/p&gt;

&lt;p&gt;But, any way I am glad that I did at least a part of what I promised, I read a few articles from &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Front-end_web_developer"&gt;MDN frontend guide&lt;/a&gt; and did 4-5 questions from &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures"&gt;FCC JS DS Algo course&lt;/a&gt;&lt;br&gt;
I couldn't however post an article, unlike reading tech and coding for years now, writing is something that I am relatively new with. I still occasionally have to run a compiler inside my brain converting Hindi (my first language) to English. 😄 And who knows what all I'd have ended up publishing in my sleepy state.&lt;br&gt;
I'd say it was a good decision because now as I am writing this article I have the opportunity to recall all that I had read in my sleepy state plus some extra time to reflect on what happened and how it could be avoided in future.&lt;/p&gt;

&lt;p&gt;Also, I thought maybe I could start my articles in a 3-2-1 format that James Clear's newsletters come in. His are 3 ideas, 2 quotes, and 1 question. I was thinking of 3 discoveries that day, 2 realizations/quotes, and 1 question. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#articles-covered"&gt;
  &lt;/a&gt;
  Articles Covered
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_web_server"&gt;What is a web server?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines"&gt;What is the difference between webpage, website, web server, and search engine?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics"&gt;CSS Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-web-server"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_web_server"&gt;What is a web server?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I really like how they explicitly mentioned and differentiated between the &lt;em&gt;hardware web server&lt;/em&gt; and the &lt;em&gt;software web server&lt;/em&gt;. And the roles each play while serving a request.&lt;br&gt;
&lt;em&gt;A good point&lt;/em&gt; - The web server must answer every HTTP request, at least with an error message. (This very line sets up the foundation for HTTP response codes and why)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--30X4NNQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihol5eh3isi8wd5jo2lq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30X4NNQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihol5eh3isi8wd5jo2lq.PNG" alt="Web Server"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-difference-between-webpage-website-web-server-and-search-engine"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines"&gt;What is the difference between webpage, website, web server, and search engine?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This article certainly clears out the confusion I once had in my early days of the internet, I thought the browser and search engines were one and the same, and that when we type something into the browser it would be the browser that would scout the net and provide me with the results, I was so wrong 😅 With these articles, I certainly am getting nostalgic. 😄&lt;br&gt;
This also addresses some of the terminologies that is often use by clients or non-technical people. e.g. I have often heard some of my clients addressing the pdf they received via mail as web docs, Web Documents or Web pages. But the above article clarifies it well. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Browsers can also display other documents such as PDF files or images, but the term web page specifically refers to HTML documents. Otherwise, we only use the term document.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another such confusion that's addressed is between a website and web server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don't confuse websites and web servers. For example, if you hear someone say, "My website is not responding", it actually means that the web server is not responding and therefore the website is not available. More importantly, since a web server can host multiple websites, the term web server is never used to designate a website, as it could cause great confusion. In our previous example, if we said, "My web server is not responding", it means that multiple websites on that web server are not available.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Stumbled upon a gold mine of internet terms. See them here &lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary"&gt;MDN Web Docs Glossary: Definitions of Web-related terms&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-basics"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics"&gt;CSS Basics&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This article covered the very basics of CSS and I was glad they were able to showcase CSS with such simplicity.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS is a stylesheet language&lt;/li&gt;
&lt;li&gt;Anatomy of CSS Ruleset
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2eSnH6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0bdgozx0d9b84ieifad.png" alt="Anatomy of CSS Ruleset"&gt;
&lt;/li&gt;
&lt;li&gt;Box model
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1EjcdxT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u03wa8boql2g8we2g1t9.png" alt="Box model"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all, it was not much but fits very well in the Two-Minute Rule which states &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“When you start a new habit, it should take less than two minutes to do.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From the &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures"&gt;FCC JS DS Algo course&lt;/a&gt; I attempted just 5 questions there wasn't much new to learn except one.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most modern programming languages, like JavaScript, don't start counting at 1 like humans do. They start at 0. This is referred to as &lt;em&gt;Zero-based indexing&lt;/em&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9P_7qMMs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgf95z72hvzxl64ivo0r.PNG" alt="Day-2 FCC progress 32%"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#comments-and-conclusion"&gt;
  &lt;/a&gt;
  Comments and Conclusion
&lt;/h2&gt;

&lt;p&gt;Well, day-2 was pretty close to being a failure, but the least we can do right now is to make sure it is not repeated again. And that the 2-minute rule is just a worst case scenario and should not become an everyday reality.&lt;/p&gt;

&lt;p&gt;On &lt;a href="https://dev.to/pracoon/day-1-100daysofcode-32hn"&gt;Day-1&lt;/a&gt; I wrote "I will continue with the 100daysofcode challenge, at 2:00pm in the morning right after my lunch every day without fail"&lt;br&gt;
I think I didn't give enough thought to the 2pm I thought I'd be simply able to stack it to after my lunch, while totally forgetting about the &lt;a href="https://www.huffingtonpost.com.au/2016/08/31/sleepy-after-lunch-we-found-out-exactly-why-it-happens_a_21463330/"&gt;After Lunch Fatigue&lt;/a&gt; which was only enhanced by my medicines.&lt;/p&gt;

&lt;p&gt;Hence I think a better time would be 7pm, I am done with all my fatigues and would be able to close the deal before dinner.&lt;/p&gt;

&lt;p&gt;Hence the new statement is &lt;br&gt;
"I will continue ith the 100daysofcode challenge, at 7 pm every day in the evening after gym, every day"&lt;/p&gt;

&lt;p&gt;I'll leave you with a song I find motivational and energizing at times, and pretty sure would be an all-time favourite for many &lt;a href="https://www.youtube.com/watch?v=ktvTqknDobU"&gt;Imagine Dragons - Radioactive&lt;/a&gt; 🥂😄&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l48bMFq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9x056sk7koxgqtfv92v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l48bMFq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9x056sk7koxgqtfv92v.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Build Your Own Voice Call API in Android?</title>
      <author>Deepika Manoharan</author>
      <pubDate>Sat, 17 Apr 2021 08:42:09 +0000</pubDate>
      <link>https://dev.to/deepikamanoharan/how-to-build-your-own-voice-call-api-in-android-33ac</link>
      <guid>https://dev.to/deepikamanoharan/how-to-build-your-own-voice-call-api-in-android-33ac</guid>
      <description>&lt;p&gt;&lt;strong&gt;Let’s Explore!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Do you desire to build a voice call application in android?&lt;/p&gt;

&lt;p&gt;Peeking around but still confused! Come on, Don’t lose hope!&lt;/p&gt;

&lt;p&gt;This is your place to explore for the exceptional. Let’s dive deep and know how to build a simple android Voice calling app?&lt;/p&gt;

&lt;p&gt;Before getting into this exciting journey, it’s salient to have some understanding about what the Voice Calling API is all about?&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;What is Voice Call API and How Does it Works?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBvyTQSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pnpln9bgl44g8wkq3km.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBvyTQSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pnpln9bgl44g8wkq3km.png" alt="voice call api diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well to start with, voice calling api is a tool that is used by the software developers to make and receive phone calls easily. In other words can say that it's the voice API that bridges the Public Switched Telephone Network (PSTN) and the applications get connected to the internet.&lt;/p&gt;

&lt;p&gt;This API permits the software to be built into any existing application that includes iOS, Android, and web applications, easily.&lt;/p&gt;

&lt;p&gt;Moving ahead as to how the task is being performed by this voice calling API. It is much essential to know about VoIP (Voice over internet protocol), to have a better understanding. &lt;/p&gt;

&lt;p&gt;VoIP is a feature whose functionality is when added to an application, you can make and receive calls over the internet alone without interfacing with the PSTN. &lt;/p&gt;

&lt;p&gt;Voice API has been built for a variety of uses from basic phone to phone calling, app to phone calling, conference calling, and much more. It is mainly to provide the developers a programmatic control over the calls.&lt;/p&gt;

&lt;h2&gt;
&lt;strong&gt;Broad Vision on Building a Voice Call API&lt;/strong&gt; &amp;amp; SDK&lt;/h2&gt;

&lt;p&gt;As we have already discussed about &lt;a href="https://www.mirrorfly.com/voice-call-solution.php"&gt;&lt;span&gt;voice call API&lt;/span&gt;&lt;/a&gt;, Android places the calls via built-in applications that are easy to make and receive calls anywhere around. Even it allows us to place calls through the app. &lt;/p&gt;

&lt;p&gt;While working in the way at the back of the screen everything is about programming. This is called the action intended to proceed further, which is nonetheless &lt;span&gt;&lt;strong&gt;ACTION_CALL&lt;/strong&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The intent object &lt;span&gt;&lt;strong&gt;ACTION_CALL&lt;/strong&gt;&lt;/span&gt; is when used and passed over proper data. It helps to launch the build-in phone call application to make the phone call. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's know how?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1: Action intent to Make a call &lt;/strong&gt; - To execute this process of calling the action used here is &lt;strong&gt;&lt;span&gt;ACTION_CALL&lt;/span&gt;&lt;/strong&gt;. And the syntax used over here to add action call:&lt;/p&gt;

&lt;pre&gt;Intent myIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_CALL); // this is for Action_call&lt;/pre&gt;

&lt;p&gt;Other than this for the same process you can also make use of &lt;strong&gt;&lt;span&gt;ACTION_DIAL&lt;/span&gt;&lt;/strong&gt;,&lt;/p&gt;

&lt;pre&gt;Intent myDialIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_DIAL); // this is for Action_Dial&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; &lt;strong&gt;Data Intent to Make a call &lt;/strong&gt;- For instance, if there is a need to make a call let us say -91-1234234679. We need to set the number using&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;setData&lt;/span&gt;&lt;/strong&gt; in tel, this is the URL as been given below:&lt;/p&gt;

&lt;pre&gt;myIntent.setData(Uri.parse("tel:91-123-456-7890"));&lt;/pre&gt;

&lt;p&gt;And in case if we want to use take the number from the user, then the &lt;strong&gt;&lt;span&gt;getData&lt;/span&gt;&lt;/strong&gt; would be something like the below from the user:&lt;/p&gt;

&lt;pre&gt;myIntent.setData(Uri.parse("tel:"+text_Phone.getText().toString()));startActivity(myIntent);&lt;/pre&gt;

&lt;h2&gt;&lt;strong&gt;Explore Voice Calling APIs Most Common Calling Scenarios&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Let's have a look at some of the common scenarios, How does &lt;a href="https://blog.contus.com/clubhouse-drop-in-audio-chat-app"&gt;&lt;span&gt;voice call apps&lt;/span&gt;&lt;/a&gt; use the API and have control over them? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These three scenarios can get the most&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Answer the call&lt;/li&gt;
&lt;li&gt;Accommodating a call&lt;/li&gt;
&lt;li&gt;Ending a Call&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;1.&lt;strong&gt;Answer the Call&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Before making a call from your android mobile you must ensure that there is no call being executed at that particular moment. &lt;/p&gt;

&lt;p&gt;This is so as because the telecom subsystem provides certain constraints when it comes to active calls in other apps. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's consider the two cases:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I. No other app are actively on call:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once your App receives a call&lt;/li&gt;
&lt;li&gt;Call notification will be sent via &lt;strong&gt;&lt;span&gt;addNewIncomingCall(PhoneAccountHandle, Bundle)&lt;/span&gt;&lt;/strong&gt; to the telecom subsystem.&lt;/li&gt;
&lt;li&gt;This subsystem will then bind to your app's &lt;strong&gt;&lt;span&gt;ConnectionService&lt;/span&gt;&lt;/strong&gt; implementation. With that a new instance of Connection class takes place using &lt;span&gt;&lt;strong&gt;onCreateIncomingConnection&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Later on this telecom subsystem informs the app and shows the incoming calls to users &lt;strong&gt;&lt;span&gt;onShowIncomingCallUi()&lt;/span&gt;.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Once the user accepts the incoming call, it gets set to &lt;strong&gt;&lt;span&gt;setActive()&lt;/span&gt;&lt;/strong&gt;. If not, then get &lt;strong&gt;&lt;span&gt;REJECTED&lt;/span&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;span&gt;setDisconnected(DisconnectCause)&lt;/span&gt;&lt;/strong&gt; execution, followed by the &lt;span&gt;&lt;strong&gt;Destroy()&lt;/strong&gt; &lt;/span&gt;method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;II. Active Calls that other App has can't be kept on Hold:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sometimes, it does happen that some important call needs to be attended and can't be put on hold. In such cases the things are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As soon as an incoming call receives a new call over the voice call app.&lt;/li&gt;
&lt;li&gt;The notification will be sent to the telecom subsystem as Call &lt;strong&gt;a&lt;span&gt;ddNewIncomingCall&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, Bundle)&lt;/span&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;This subsystem binds to your app's &lt;strong&gt;&lt;span&gt;ConnectionService&lt;/span&gt;&lt;/strong&gt; implementation. It later on requests a new instance over the connecting objects that have been used, &lt;strong&gt;&lt;span&gt;onCreateIncomingConnection&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Now, it's the telecom subsystem that displays the incoming call on UI.&lt;/li&gt;
&lt;li&gt;If the user tends to accept the call, this subsystem calls upon &lt;span&gt;&lt;strong&gt;onAnswer()&lt;/strong&gt; &lt;/span&gt;method. Thus, indicates the telecom subsystem as the setted  call is as &lt;strong&gt;&lt;span&gt;setActive()&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If in turn the user rejects the call, this subsystem calls upon the &lt;span&gt;&lt;strong&gt;onReject()&lt;/strong&gt; &lt;/span&gt;method. Then passes on the message as &lt;strong&gt;&lt;span&gt;REJECTED&lt;/span&gt;&lt;/strong&gt; by setting the call as &lt;strong&gt;&lt;span&gt;setDisconnected&lt;/span&gt;&lt;span&gt;(DisconnectCause)&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;And the later will be called as &lt;strong&gt;&lt;span&gt;Destroy()&lt;/span&gt;&lt;/strong&gt; method&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, accommodating a call or placing a call is all about something that we are supposed to handle when the call cannot be connected due to some constraints that are imposed by the &lt;a href="https://en.wikipedia.org/wiki/Business_Process_Framework_(eTOM)"&gt;telecom framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In general, if we want to place a call we must follow the below things&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First must initiate the call via application.&lt;/li&gt;
&lt;li&gt;Use the method &lt;strong&gt;&lt;span&gt;placeCall&lt;/span&gt;&lt;span&gt;(call, bundle)&lt;/span&gt;&lt;/strong&gt; and then intimate the telecom subsystem about the new call. Now the rest of parameter would be as follows:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Here, the &lt;strong&gt;Uri&lt;/strong&gt; parameter represents the address of the callee. For numbers must use &lt;strong&gt;tel:&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Well, the parameters give information about the application. All this is done by adding the &lt;strong&gt;&lt;span&gt;phoneAccountHandle&lt;/span&gt; &lt;/strong&gt;object of the app to &lt;strong&gt;&lt;span&gt;EXTRA_PHONE_ACCOUNT_HANDLE&lt;/span&gt;&lt;/strong&gt; extra.&lt;/li&gt;
&lt;li&gt;These parameters can also specify if the bundle includes video by executing &lt;strong&gt;&lt;span&gt;EXTRA_START_CALL_WITH_VIDEO_STATE &lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;On the whole, this telecom subsystem binds to the voice call app's &lt;strong&gt;ConnectService&lt;/strong&gt; implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;i) If in case the app is unable to call, the subsystem invokes: &lt;span&gt;onCreateOutgoingConnectionFailed&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt;. It generates a message to the application as the call can't be set.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ii) But if the app is able to make a call, then it will invoke: &lt;span&gt;onCreateOutgoingConnectionFailed&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt; specifying the application as the call can't be set at the first place instantly make the update by activating the call, invoke &lt;strong&gt;setActive()&lt;/strong&gt; to inform telecom subsystem about the same.&lt;/p&gt;

&lt;p&gt;Once the call get connected, we would need to end the call at some stage, in that place to end the session, we need to do the following,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Call the method &lt;strong&gt;&lt;span&gt;setDisconnected&lt;/span&gt;&lt;span&gt;(DisconnectCause)&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If in case the call gets terminated by the user &lt;strong&gt;&lt;span&gt;LOCAL&lt;/span&gt; &lt;/strong&gt;parameter will be executed. Similarly, the parameter &lt;strong&gt;&lt;span&gt;REMOTE&lt;/span&gt; &lt;/strong&gt;will be executed on if the call is disconnected by a third party.&lt;/li&gt;
&lt;li&gt;Once done the entire process is followed by the parameter &lt;strong&gt;&lt;span&gt;destroy()&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;strong&gt;Steps to Build Your Voice Call API in Android&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1 : &lt;/strong&gt;We have to begin with creating a new project by filling in the details. Then that needs to be opened by &lt;strong&gt;&lt;span&gt;activity_main,xml file&lt;/span&gt;&lt;/strong&gt;, and thus defines the layout as given below:&lt;/p&gt;

&lt;pre&gt;
xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:tools="http://schemas.android.com/tools"
  android:orientation="vertical"    android:layout_width="match_parent"
  android:layout_height="match_parent"&amp;gt;
      android:id="@+id/textView2"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_centerHorizontal="true"
      android:layout_marginLeft="100dp"
      android:layout_marginTop="100dp"
      android:fontFamily="@font/aclonica"
      android:text="DataFlair "
      android:textColor="@color/colorPrimaryDark"
      android:textSize="50dp" /&amp;gt;
      android:id="@+id/fstTxt"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginLeft="100dp"
      android:layout_marginTop="100dp"
      android:fontFamily="@font/acme"
      android:text="Please Enter the Mobile No"
      android:textColor="#0F8B80"
      android:textSize="20dp" /&amp;gt;
      android:id="@+id/mblTxt"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginLeft="100dp"
      android:ems="10"
      android:hint="Enter the number here"
      android:textColor="#84E2DB"
      tools:layout_marginTop="20dp"&amp;gt;
      android:id="@+id/btnCall"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginLeft="150dp"
      android:layout_marginTop="20dp"
      android:text="Dial" /&amp;gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step 2: &lt;/strong&gt;Now this is followed by coding as in &lt;strong&gt;&lt;span&gt;mainActivity.java file&lt;/span&gt;&lt;/strong&gt;. Thus follows:&lt;/p&gt;

&lt;pre&gt;
package com.DataFlair.callexample;
import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
public &lt;strong&gt;class&lt;/strong&gt; MainActivity &lt;strong&gt;extends&lt;/strong&gt; AppCompatActivity {
  private EditText text_Phone;
  private Button b_utton;
  @Override
  protected &lt;strong&gt;void&lt;/strong&gt; onCreate(Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      setContentView(R.layout.activity_main);
      text_Phone = (EditText) findViewById(R.id.mblTxt);
     mybutton = (Button) findViewById(R.id.btnCall);
     mybutton.setOnClickListener(&lt;strong&gt;new&lt;/strong&gt; View.OnClickListener() {
          @Override
          public &lt;strong&gt;void&lt;/strong&gt; onClick(View v) {
              callPhoneNumber();
          }
      });
  }
  @Override
  public &lt;strong&gt;void&lt;/strong&gt; onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
      &lt;strong&gt;if&lt;/strong&gt; (requestCode == 101) {
          &lt;strong&gt;if&lt;/strong&gt; (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
              callPhoneNumber();
          }
      }
  }
  public &lt;strong&gt;void&lt;/strong&gt; callPhoneNumber() {
      &lt;strong&gt;try&lt;/strong&gt; {
          &lt;strong&gt;if&lt;/strong&gt; (Build.VERSION.SDK_INT &amp;gt; 22) {
              &lt;strong&gt;if&lt;/strong&gt; (ActivityCompat.checkSelfPermission(&lt;strong&gt;this&lt;/strong&gt;, Manifest.permission.CALL_PHONE) !=PackageManager.PERMISSION_GRANTED) {
                  ActivityCompat.requestPermissions(MainActivity.this, &lt;strong&gt;new&lt;/strong&gt; String[]{
                  Manifest.permission.CALL_PHONE}, 101);
                  &lt;strong&gt;return&lt;/strong&gt;;
              }
              Intent callIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_CALL);
              callIntent.setData(Uri.parse("tel:" + text_Phone.getText().toString()));
              startActivity(callIntent);
          } &lt;strong&gt;else&lt;/strong&gt; {
              Intent callIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_CALL);
              callIntent.setData(Uri.parse("tel:" + text_Phone.getText().toString()));
              startActivity(callIntent);
          }
      } &lt;strong&gt;catch&lt;/strong&gt; (Exception ex) {
          ex.printStackTrace();
      }
  }
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; This is followed by &lt;span&gt;&lt;strong&gt;Manifest.xml&lt;/strong&gt;&lt;/span&gt; file:&lt;/p&gt;

&lt;pre&gt; 

  uses-permission android:name="android.permission.CALL_PHONE" /&amp;gt;
  application
      android:allowBackup="true"
      android:icon="@mipmap/ic_launcher"
      android:label="@string/app_name"
      android:roundIcon="@mipmap/ic_launcher_round"
      android:supportsRtl="true"
      android:theme="@style/AppTheme"&amp;gt;
      activity android:name=".MainActivity"&amp;gt;
          intent-filter
              action android:name="android.intent.action.MAIN" 
              category android:name="android.intent.category.LAUNCHER" 
         intent-filter
      activity
      meta-data
          android:name="preloaded_fonts"
          android:resource="@array/preloaded_fonts" 
  application
manifest
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step 4: &lt;/strong&gt;As the final step, the application needs to be commanded as &lt;strong&gt;“&lt;span&gt;run.”&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a) The outcome of the application will be somewhat like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xc97wTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3qak0rh0ggwg909cfyn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xc97wTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3qak0rh0ggwg909cfyn.jpg" alt="build a voice call api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;b) Once done, need to enter the phone number&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WIgJ5IjV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4e9z1guofz0yirrfyqwy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WIgJ5IjV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4e9z1guofz0yirrfyqwy.jpg" alt="voice calling api &amp;amp;amp; sdk"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;c) As soon as the phone number has been entered, it will ask for the permission to move forward&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42303f7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gndrxsya2jnugps6uuph.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42303f7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gndrxsya2jnugps6uuph.jpg" alt="voice call api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;d) Once, the above steps are completed automatically the call would be placed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a9RypLXE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qcekg5fme35bii3gnynq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a9RypLXE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qcekg5fme35bii3gnynq.jpg" alt="voice api for android"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Epilogue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now you must have gotten a better insight about the entire process with a detailed explanation as how to build a voice call API for any Android studio. With this now it's your turn to implement the same and get to explore the outcome with flying colors.&lt;/p&gt;

&lt;p&gt;But still, if you think you need some clarification over the same. Let us know in the comment section to guide you further with pleasure! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Code &amp;amp; Image References Taken From:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1. &lt;a href="https://data-flair.training/blogs/calling-app-in-android/"&gt;Data Flair.Training&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;2. &lt;a href="https://www.c-sharpcorner.com/article/how-to-create-a-calling-application-in-android-using-android-studio/"&gt;C Sharpcorner.com&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;3. &lt;a href="https://developer.android.com/guide/topics/connectivity/telecom/selfManaged"&gt;Developer Android.com&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;4. &lt;a href="https://www.dbswebsite.com/blog/trends-in-voice-search/#:~:text=Current%20statistics%20show%20that%2041,voice%20technology%20on%20their%20device&amp;amp;text=."&gt;DBS Website.com &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5. &lt;a href="https://professional-blogger.medium.com/integrate-a-voice-call-api-in-various-industries-in-app-communication-system-e3f2a1ffcc7"&gt;Integrate Voice Call API &amp;amp; SDK&lt;/a&gt;&lt;/p&gt;

</description>
      <category>voicecallapi</category>
      <category>buildvoicecallapi</category>
      <category>apivoicecall</category>
      <category>voicecallapiandsdk</category>
    </item>
    <item>
      <title>Understanding the React useState() Hook</title>
      <author>Raunaq </author>
      <pubDate>Sat, 17 Apr 2021 07:22:43 +0000</pubDate>
      <link>https://dev.to/raunaqchawhan/understanding-the-react-usestate-hook-4d2d</link>
      <guid>https://dev.to/raunaqchawhan/understanding-the-react-usestate-hook-4d2d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;Hooks&lt;/a&gt; were introduced in React &lt;strong&gt;v16.8.0&lt;/strong&gt;. Prior to that, if we had written a functional component and wanted to add &lt;code&gt;state&lt;/code&gt; or make use of &lt;code&gt;lifecycle&lt;/code&gt; methods to perform operations such as data fetching and manual DOM manipulation, the functional component had to be converted into class based component.&lt;/p&gt;

&lt;p&gt;However, introduction of Hooks made adding state and performing those operations in functional component possible. It also helped in keeping the mutually related code together rather than splitting the code based on lifecycle methods. Hooks don't work inside classes rather they let us work with React without the need for class.&lt;/p&gt;

&lt;p&gt;In this post, we will learn about the built-in &lt;strong&gt;useState()&lt;/strong&gt; Hook and how to use it in a functional component. We will also understand the difference in initializing, updating and accessing the state in class component as compared to functional component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rules-of-hooks"&gt;
  &lt;/a&gt;
  Rules of Hooks
&lt;/h2&gt;

&lt;p&gt;Following are the two rules of Hooks that needs to be followed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hooks should always be called at the top level of the React function which means it shouldn't be called inside loops, conditionals or nested functions. This is done to ensure that Hooks are called in the same order each time a component renders.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Never call Hooks from regular JavaScript functions. Instead, call it from React function components or &lt;a href="https://reactjs.org/docs/hooks-custom.html"&gt;custom Hooks&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#usestate-hook"&gt;
  &lt;/a&gt;
  useState() Hook
&lt;/h2&gt;

&lt;p&gt;As the name suggests, &lt;code&gt;useState&lt;/code&gt; Hook is used to add state to function components.&lt;/p&gt;

&lt;p&gt;The syntax for useState is as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// assigns initialState to state&lt;/span&gt;
&lt;span class="c1"&gt;// setState function is used to update the state&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;useState() returns an &lt;code&gt;array&lt;/code&gt; with exact two values. Array destructuring can be used to store these values in different variables.&lt;/p&gt;

&lt;p&gt;The first value returned represents the state and the second value returned is a function that can be used to update the state. You can give any name to these two variables. For our understanding, we'll name the state variable as &lt;code&gt;state&lt;/code&gt; and the function that updates it as &lt;code&gt;setState&lt;/code&gt;. You can follow this convention of assigning any name to state variable and then prefixing it with 'set' to form the function name.&lt;/p&gt;

&lt;p&gt;The 'initialState' argument passed to useState sets the initial state. On subsequent re-renders, state is updated through the &lt;code&gt;setState&lt;/code&gt; function returned from the &lt;code&gt;useState&lt;/code&gt; Hook.&lt;/p&gt;

&lt;p&gt;Now, let's take a look at the following code block which represents a &lt;strong&gt;class component&lt;/strong&gt; with state&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; 
            &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cloudy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; 
            &lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above class component gets rendered to the screen, you get a paragraph &lt;code&gt;The weather is hot&lt;/code&gt; with a 'Change weather' button below it.&lt;/p&gt;

&lt;p&gt;On clicking the button, the component re-renders and output changes to &lt;code&gt;The weather is cloudy&lt;/code&gt; with the button getting disabled.&lt;/p&gt;

&lt;p&gt;In a class component, you can initialize state in the constructor by using &lt;code&gt;this.state&lt;/code&gt;. In the above example, it is initialized to &lt;code&gt;{weather: 'hot', disabled: false}&lt;/code&gt;. Any update to state is done through &lt;code&gt;this.setState&lt;/code&gt; and respective values can be accessed using &lt;code&gt;this.state.weather&lt;/code&gt; and &lt;code&gt;this.state.disabled&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The state is defined as an object and all the state updates done through &lt;code&gt;this.setState&lt;/code&gt; is merged into that object as class component can have a single state object only. Therefore, &lt;code&gt;{weather: 'cloudy', disabled: !this.state.disabled}&lt;/code&gt; gets merged with the previous value and state is updated. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;In order to initialize, update or access any value from state in a class component, you always need to use &lt;code&gt;this&lt;/code&gt; keyword.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, let's take a look at the following &lt;strong&gt;functional component&lt;/strong&gt; using the &lt;strong&gt;State Hook&lt;/strong&gt; that works the same way as the earlier class component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import useState Hook from "react" package&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setWeather&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// "weather" value initialized to "hot"&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDisabled&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// "disabled" value initialized to "false" &lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setWeather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cloudy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// setWeather('cloudy') updates the "weather" to "cloudy"&lt;/span&gt;
        &lt;span class="nx"&gt;setDisabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// setDisabled(!disabled) updates the "disabled" to "true"&lt;/span&gt;
      &lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In order to use state in functional component, you first need to import &lt;code&gt;useState&lt;/code&gt; Hook from React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unlike class component where you can have a single state object only, functional component allows you to have multiple state variables. Here, &lt;code&gt;weather&lt;/code&gt; and &lt;code&gt;disabled&lt;/code&gt; state variables are initialized to the argument passed to &lt;code&gt;useState&lt;/code&gt; Hook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This argument can be of any type such as number, string, array or object unlike class component where state is initialized to object only.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On clicking the button, &lt;code&gt;setWeather&lt;/code&gt; and &lt;code&gt;setDisabled&lt;/code&gt; functions are called with new state values passed to it. React will then re-render the component by passing the new &lt;code&gt;weather&lt;/code&gt; and &lt;code&gt;disabled&lt;/code&gt; values to it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a functional component, updating a state value always replaces the previous value unlike class component where state updates are merged.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the above example, new state values are not dependent on previous state values. Therefore, we directly pass new value to state update function. In scenarios where new state value depends on previous state value, you can use the following functional update format to update the state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousStateValue&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// newStateValue determined using previousStateValue&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newStateValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This functional update format is used to update the state depending on the previous state value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, you learnt about the &lt;strong&gt;useState()&lt;/strong&gt; Hook that makes it possible to use state in a functional component without transforming it into a class component. You learnt how to initialize, update and access the state variables in a functional component using Hooks.&lt;/p&gt;




&lt;p&gt;Thank you for taking the time to read this post 😊&lt;br&gt;
Hope this post helped you!! &lt;strong&gt;Please share&lt;/strong&gt; if you liked it.&lt;/p&gt;

&lt;p&gt;I would love to connect with you on &lt;a href="https://twitter.com/_raunaq_"&gt;Twitter&lt;/a&gt;.&lt;br&gt;
Do share your valuable feedback and suggestions you have for me 👋&lt;/p&gt;

</description>
      <category>react</category>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>TDD debugging</title>
      <author>Eder Díaz</author>
      <pubDate>Sat, 17 Apr 2021 06:30:22 +0000</pubDate>
      <link>https://dev.to/ederchrono/tdd-debugging-37hb</link>
      <guid>https://dev.to/ederchrono/tdd-debugging-37hb</guid>
      <description>&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@bartchristiaanse?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Bart Christiaanse&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/bug-red?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We all have been through the following scenario: you are getting the first sip of your coffee when someone reports a bug. Your first reaction is probably to run the project and type some logs to see some data and try to understand what's happening.&lt;/p&gt;

&lt;p&gt;If you are like the 80% of developers (I made up this number), you don't have any kind of tests and you are basically making tweaks "hoping" that nothing else breaks while you fix the problem, and if that happens you end up spending way more time than you expected fixing these chained bugs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W9jYmOVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9lp8r55vfrgfdjjpl2b.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9jYmOVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9lp8r55vfrgfdjjpl2b.jpeg" alt="let's go into a 20 minute adventure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's be clear, I'm not here to tell you that you must have tests and great code coverage, every project is different and you could have more than one reason to not have tests. Probably you didn't work on that functionality, you thought that the behavior was so simple that tests were overkill or you had to rush to make it before the end of the sprint.&lt;/p&gt;

&lt;p&gt;Whatever is the reason, this problem is giving you a second chance to add tests that will save you and future developers a lot of time. I like to think of tests as &lt;strong&gt;smoke detectors&lt;/strong&gt; in a house and the bug is a fire that appeared, you might be able to put out the fire but if you don't have enough smoke detectors, you won't know if other fires are cooking somewhere else until is too late.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bxcHg6DG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/980h8l1l9mxwmhd6xxu9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxcHg6DG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/980h8l1l9mxwmhd6xxu9.jpg" alt="fire"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@fourcolourblack?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Adam Wilson&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fire?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#a-realworld-example"&gt;
  &lt;/a&gt;
  A real-world example
&lt;/h1&gt;

&lt;p&gt;A teammate reported that URL inputs in our forms where accepting strings that weren't a valid URL. Basically you could type something like &lt;code&gt;foobarhttps://google.com,fizbuzz&lt;/code&gt; and validation passed. We managed to identify the culprit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;^$&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;|&lt;/span&gt;&lt;span class="se"&gt;((&lt;/span&gt;&lt;span class="sr"&gt;http&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;s&lt;/span&gt;&lt;span class="se"&gt;)?&lt;/span&gt;&lt;span class="sr"&gt;:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="sr"&gt;.&lt;/span&gt;&lt;span class="se"&gt;)?(&lt;/span&gt;&lt;span class="sr"&gt;www&lt;/span&gt;&lt;span class="se"&gt;\.)?[&lt;/span&gt;&lt;span class="sr"&gt;-a-zA-Z0-9@:%._+~#=&lt;/span&gt;&lt;span class="se"&gt;]{2,256}\.[&lt;/span&gt;&lt;span class="sr"&gt;a-z&lt;/span&gt;&lt;span class="se"&gt;]{2,6}\b([&lt;/span&gt;&lt;span class="sr"&gt;-a-zA-Z0-9@:%_+.~#?&amp;amp;&lt;/span&gt;&lt;span class="se"&gt;/&lt;/span&gt;&lt;span class="sr"&gt;=&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;))&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Someone basically copy/pasted a regex from somewhere, tested it against some URLs and non URLs, and thought it worked. After punching that regex into &lt;a href="https://www.regextester.com/"&gt;regextester.com&lt;/a&gt;, it's clear that the pattern is not strict and it's kind of an &lt;em&gt;includes&lt;/em&gt; pattern.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G3k6r6Zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssjqlfes75jh0qefqmwu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G3k6r6Zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssjqlfes75jh0qefqmwu.png" alt="regex are hard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After some regex tweaking we figured out a way to make it more strict and ended up like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/(^((http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&amp;amp;/=]*))$)/g&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We tested it on the regex tool and seems to work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gJp4TdaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v26fx3ww5pa2oko5ngrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJp4TdaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v26fx3ww5pa2oko5ngrg.png" alt="solution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we just replace that line of code and ship it right? &lt;strong&gt;WRONG!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before making any code change we write some tests for the scenarios that we know should be working:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;validUrl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should not return errors with an empty string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should not return errors with a well formed URL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://google.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should return an error with something that is not a url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;not-a-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should return an error if empty spaces ares used&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don't want to read/understand that code basically we are checking that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When it receives an empty string it's valid (we have a requiredValidUrl function for when it should not)&lt;/li&gt;
&lt;li&gt;A well-formed URLs is valid&lt;/li&gt;
&lt;li&gt;Something that is not a URL should return false&lt;/li&gt;
&lt;li&gt;Using spaces isn't allowed either&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we add the new failing test case, a URL with extra text should fail:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should return an error when a url has extra text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;somethinghttp://google.com,other-thing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Here's a &lt;a href="https://codepen.io/ederdiaz/pen/XWpBpNr?editors=0010"&gt;codepen&lt;/a&gt; so that you can follow along&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then we run the tests, they all pass except the last one because we haven't changed the regex and that's great because we confirmed our assumptions and we are now in RED on the TDD cycle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmqQ3N_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uk6otzis6g384cf8doy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmqQ3N_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uk6otzis6g384cf8doy.png" alt="Red"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;failing test as expected&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2bUj5oX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26tdj40bmlnmw09fb27h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bUj5oX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26tdj40bmlnmw09fb27h.png" alt="TDD cycle"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;TDD cycle&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We replace the regex with the new one &lt;code&gt;/(^((http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&amp;amp;/=]*))$)/g&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Remember this was the only thing we thought we needed to fix the bug, and then we run the tests again expecting that all pass, except they don't.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rvGbo-Yr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek2rlx2arf2yv936c8u5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rvGbo-Yr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek2rlx2arf2yv936c8u5.png" alt="Red again"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Surprisingly our regex is now so strict that it doesn't allow for empty strings, but our &lt;strong&gt;smoke detector&lt;/strong&gt; prevented us from sending this fire we hadn't noticed. This would have been a waste of time for us, testers, project manager and in a worst case scenario could have prevented a launch or caused a catastrophic problem if it deployed.&lt;br&gt;
Since we need to take care of an edge case we decide to short circuit it from the start instead of keep tweaking the regex:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// empty string should be valid&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OteWx0ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4pec2ntqu2vc1a4kunh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OteWx0ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4pec2ntqu2vc1a4kunh.png" alt="Green"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we are green! We can continue with the refactoring and send our change more confidently.&lt;/p&gt;

&lt;p&gt;Of course, this isn't a silver bullet, there might be more edge cases or changes of requirements. The advantage is that when that happens, you or any other dev that needs to maintain the project can keep adding &lt;strong&gt;smoke detectors&lt;/strong&gt; and be confident that their changes are putting out fires and not reigniting old ones.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>javascript</category>
      <category>testing</category>
    </item>
    <item>
      <title>Use Reseter.css Instead Of Normalize and Reset.css. To Improve Cross Browser Experience.</title>
      <author>Krish Dev DB</author>
      <pubDate>Sat, 17 Apr 2021 06:26:17 +0000</pubDate>
      <link>https://dev.to/krishdevdb/use-reseter-css-instead-of-normalize-and-reset-css-to-improve-cross-browser-experience-4113</link>
      <guid>https://dev.to/krishdevdb/use-reseter-css-instead-of-normalize-and-reset-css-to-improve-cross-browser-experience-4113</guid>
      <description>&lt;p&gt;With the current web production, I think that the existing Reset.css and Normalize.css have fewer features and lack many things. I am introducing you to a new CSS Normalizer created as a futuristic alternative to normalize.css and reset.css.&lt;/p&gt;

&lt;p&gt;Reseter.css has customizable browser support, which is by default all not dead browsers. It has also taken accessibility into concern. It's also packed with modern CSS techniques.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-resetercss"&gt;
  &lt;/a&gt;
  Features of Reseter.css
&lt;/h2&gt;

&lt;p&gt;It unifies all of your browser default styles by redefining premade styles. That's a big difference where normalize tries to preserve and reseter.css redefines for even more browser support. Normalize works with the browsers kept in mind while building it. Reseter.css supports every single browser. Reseter.css improves cross-browser support. &lt;/p&gt;

&lt;p&gt;Fixed bugs and browser inconsistencies&lt;br&gt;
Reboots various element styles&lt;br&gt;
Available in Sass, Scss, Less, Stylus, Styled Components (js, mjs, ts)&lt;br&gt;
The file size is 2.59Kb&lt;br&gt;
Includes normalization of all elements&lt;br&gt;
box-sizing: border-box; set&lt;br&gt;
Validated on all browsers using BrowserStack&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eG4oCAIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639406018/tPvFRnOBQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eG4oCAIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639406018/tPvFRnOBQ.png" alt="Reseter.css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BPEuf5Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639508069/PKzGVnzNE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BPEuf5Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639508069/PKzGVnzNE.png" alt="Reseter.css Compared To Other CSS Reset"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Down is the result of the same HTML file of 3 browsers. All of the chrome's headings are bolded nicely. Firefox ones are also bolded, but IE ones are bolded too much. The font on paragraphs is also bolded in IE. The border of the button is blue in IE. There's A little thinner border on buttons in Firefox. Below are only &lt;strong&gt;three browsers&lt;/strong&gt; and &lt;strong&gt;5 HTML tags&lt;/strong&gt;. There are more than 100 browsers available to the public. There are plenty of tags there too. No one knows how many of them are not public. 1000's versions of these 100's of browsers are available. How to keep us with these browsers? The answer is &lt;strong&gt;Reseter.css&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6sVmL9X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639682600/4T-OtBk37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6sVmL9X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639682600/4T-OtBk37.png" alt="Difference In Browsers"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/gh/krishdevdb/reseter.css/css/reseter.min.css&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Unpkg, CDNJS, Github, and many more CDNs are also available. Check the &lt;a href="https://github.com/krishdevdb/reseter.css"&gt;GitHub Repository&lt;/a&gt;. Of course, the files can also be downloaded and used, and package managers such as NPM, Yarn, PNPM, and Bower are also available.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# NPM&lt;/span&gt;
npm &lt;span class="nb"&gt;install &lt;/span&gt;reseter.css
&lt;span class="c"&gt;# YARN&lt;/span&gt;
yarn add reseter.css
&lt;span class="c"&gt;# PNPM&lt;/span&gt;
pnpm &lt;span class="nb"&gt;install &lt;/span&gt;reseter.css
&lt;span class="c"&gt;# Bower&lt;/span&gt;
bower &lt;span class="nb"&gt;install &lt;/span&gt;krishdevdb/reseter.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Go Check The GitHub&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/krishdevdb"&gt;
        krishdevdb
      &lt;/a&gt; / &lt;a href="https://github.com/krishdevdb/reseter.css"&gt;
        reseter.css
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Reseter.css - A Futuristic Alternative To Normalize.css And CSS Resets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://www.codefactor.io/repository/github/krishdevdb/reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2fede2b44501f497a2691de3b8b7b11ebf8f7a9c9ea66f61947dd77dec7701f/68747470733a2f2f696d672e736869656c64732e696f2f636f6465666163746f722f67726164652f6769746875622f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d636f6465666163746f72"&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29b708c0ed8384ab58d50b884ff2ccef2b5ecf575ed0175efbe548d6c6caef16/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f726573657465722e6373733f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt; &lt;a href="https://github.com/krishdevdb/reseter.css/commits/master"&gt;&lt;img src="https://camo.githubusercontent.com/05c44c52429302f7c2f40cf932851f8fe0830c287db702e040dabe4d61e57c6c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d676974"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/5a8ea4a11056968ed6325b3b97e4321f6d02243c0f3aacfb6285d3bcac5451d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616c6c2d636f6e7472696275746f72732f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d676974687562"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.com/github/krishdevdb/reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d17ce4977c6410fd6461d2c3ae1b5d32c82992515d6c1ad70fe284d5af69f10d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d7472617669732d6369"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/xqh38kb6sv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/14a89e119890ee2da249d6c8b202ea235f8da094ffb3c0dd3e257cadb7f0de00/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3831343730313738363932303931303930393f7374796c653d666c61742d737175617265266c6f676f3d646973636f7264"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/krishdevdb/reseter.css/raw/master/logo.png"&gt;&lt;img height="100px" width="100px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LERtZEbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/krishdevdb/reseter.css/raw/master/logo.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;h1&gt;
Reseter.css&lt;/h1&gt;
&lt;h5&gt;
A CSS Reset/Normalizer&lt;/h5&gt;
   &lt;p&gt;&lt;b&gt;Reseter.css&lt;/b&gt; is an awesome CSS reset for a website. It is a great tool for any web designer. Reseter.css resets all the premade styles by the browser. It normalizes the browser's stylesheet for a better cross-browser experience.&lt;/p&gt;
   &lt;a href="https://twitter.com/intent/tweet?url=https://github.com/krishdevdb/reseter.css&amp;amp;text=Reseter.css%20helped%20me%20out%20in%20my%20website%20by%20normalizing%20everything.%20And%20Reseting%20The%20Browser%20Default%20Styles.%20Now%20My%20Website%20Looks%20The%20Same%20Across%20All%20Browsers" rel="nofollow"&gt;&lt;img alt="Twitter URL" src="https://camo.githubusercontent.com/7324ebbea2468b0720e11275d57bbce60155f408873d8ba7b0b29adc71b1c35a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f636f6c6f723d2532336666666666663030266c6f676f3d74776974746572267374796c653d666f722d7468652d62616467652675726c3d68747470732533412532462532466769746875622e636f6d2532466b726973686465766462253246726573657465722e637373"&gt;&lt;/a&gt;
&lt;a href="https://github.com/krishdevdb/reseter.css/stargazers"&gt;&lt;img alt="GitHub Repo stars" src="https://camo.githubusercontent.com/71f4e7fb710e6ac587c58ac7bb7c8a906b5cbe0370c982e314eaadd08d5c1a1c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6b7269736864657664622f726573657465722e6373733f6c6f676f3d476974687562267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#quick-start"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;br&gt;
Join 25k People Already Using Reseter.css&lt;/h3&gt;


Table Of Contents
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#features"&gt;Features&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#resetercss-vs-normalizecss-vs-sanitizecss-vs-resetcss"&gt;&lt;em&gt;Reseter.css&lt;/em&gt; vs &lt;em&gt;Normalize.css&lt;/em&gt; vs &lt;em&gt;Sanitize.css&lt;/em&gt; vs &lt;em&gt;Reset.css&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#why-use-resetercss-must-read"&gt;Why Use Reseter.css (Must Read)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#manual"&gt;Manual&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#codepen"&gt;CodePen&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#codesandbox"&gt;CodeSandBox&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#installation"&gt;Installation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#package-managers"&gt;Package Managers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#cdn"&gt;CDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#downloads"&gt;Downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#clone-repository"&gt;Clone Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#usage"&gt;Usage&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#import-in-css"&gt;Import In CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#link-tag"&gt;Link Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#styled-components"&gt;Styled-Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#vue"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#nextjs"&gt;Next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#get-support"&gt;Get Support&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#support-us"&gt;Support Us&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#review"&gt;Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#spread"&gt;Spread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#sponsor"&gt;Sponsor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#authors"&gt;Authors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#contributors"&gt;Contributors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#supporters"&gt;Supporters&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#stargazers"&gt;Stargazers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#forks"&gt;Forks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#special-mentions"&gt;Special Mentions&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#stars"&gt;Stars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#license"&gt;License&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#status"&gt;Status&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Adds New Better Styles For Elements&lt;/li&gt;
&lt;li&gt;Source In 4 Different Formats&lt;/li&gt;
&lt;li&gt;Reboots styles for a wide range of elements.&lt;/li&gt;
&lt;li&gt;Corrects bugs and browser inconsistencies.&lt;/li&gt;
&lt;li&gt;Sized 2.6kb&lt;/li&gt;
&lt;li&gt;Includes all normalizations&lt;/li&gt;
&lt;li&gt;Sets `box-sizing: border-box&lt;/li&gt;
&lt;li&gt;Fully tested&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#resetercss"&gt;Back To Top&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;em&gt;Reseter.css&lt;/em&gt; vs &lt;em&gt;Normalize.css&lt;/em&gt; vs &lt;em&gt;Sanitize.css&lt;/em&gt; vs &lt;em&gt;Reset.css&lt;/em&gt;
&lt;/h2&gt;


&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;br&gt;
&lt;thead&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Reseter.css&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Normalize.css&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Sanitize.css&lt;/th&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;/thead&gt;
&lt;br&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/krishdevdb/reseter.css"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>webdev</category>
      <category>css</category>
      <category>showdev</category>
      <category>githunt</category>
    </item>
    <item>
      <title>How to Hide your React Source Code from Chrome Dev Tools when Deployed to Production</title>
      <author>Yogesh Chavan</author>
      <pubDate>Sat, 17 Apr 2021 05:43:05 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/how-to-hide-your-react-source-code-from-getting-displayed-in-chrome-dev-tools-when-deployed-to-production-41j7</link>
      <guid>https://dev.to/myogeshchavan97/how-to-hide-your-react-source-code-from-getting-displayed-in-chrome-dev-tools-when-deployed-to-production-41j7</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RX4xpYwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618637975081/Dz77njUmE.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RX4xpYwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618637975081/Dz77njUmE.jpeg" alt="source_code.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you know that when you deploy your React application which is created using &lt;a href="https://create-react-app.dev/"&gt;create-react-app&lt;/a&gt; or your own webpack configuration to a live website like Netlify, Vercel, Heroku etc,&lt;/p&gt;

&lt;p&gt;your entire source code is visible to everyone from the sources tab of the dev tools.&lt;/p&gt;

&lt;p&gt;This is not an issue with the &lt;code&gt;create-react-app&lt;/code&gt; but all of the source code is added because of the source map which helps to easily identify the source of the bug that will occur on the live site in the future.&lt;/p&gt;

&lt;p&gt;This is fine If the website source code is publicly available on GitHub.&lt;/p&gt;

&lt;p&gt;But you definitely don't want everyone to see your entire source code If it's a private repository or you're working on a client project.&lt;/p&gt;

&lt;p&gt;There is an easy way to fix it.&lt;/p&gt;

&lt;p&gt;Create a file with the name &lt;code&gt;.env&lt;/code&gt; in your project folder with the below code inside it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;GENERATE_SOURCEMAP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, when you run 𝗻𝗽𝗺 𝗿𝘂𝗻 𝗯𝘂𝗶𝗹𝗱 or 𝘆𝗮𝗿𝗻 𝗿𝘂𝗻 𝗯𝘂𝗶𝗹𝗱 command from the terminal, It will generate a 𝗯𝘂𝗶𝗹𝗱 folder with minified files without a source map that you can deploy to the production.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out my &lt;a href="https://javascript.plainenglish.io/how-to-optimize-react-app-for-production-and-deploy-it-to-heroku-498fbf222de?source=friends_link&amp;amp;sk=9a2b48e4cafe7aaeca2cbd6f398d4f5d"&gt;this article&lt;/a&gt; to understand how to hide source map when using custom webpack configuration&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Removing the source map also decreases the final bundle size of your application and so your application will load faster.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Want to learn all ES6+ features in detail including let and const, promises, various promise methods, array and object destructuring, arrow functions, async/await, import and export and a whole lot more from scratch?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out my &lt;a href="https://modernjavascript.yogeshchavan.dev/"&gt;Mastering Modern JavaScript&lt;/a&gt; book. This book covers all the pre-requisites for learning React and helps you to become better at JavaScript and React.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out free preview contents of the book &lt;a href="https://www.freecodecamp.org/news/learn-modern-javascript/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, you can check out my &lt;strong&gt;free&lt;/strong&gt; &lt;a href="https://yogeshchavan.podia.com/react-router-introduction"&gt;Introduction to React Router&lt;/a&gt; course to learn React Router from scratch.&lt;/p&gt;

&lt;p&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>20+ Awesome CSS Code Generators</title>
      <author>Kiran Raj R</author>
      <pubDate>Sat, 17 Apr 2021 05:39:20 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/20-awesome-css-code-generators-27gp</link>
      <guid>https://dev.to/kiranrajvjd/20-awesome-css-code-generators-27gp</guid>
      <description>&lt;p&gt;Hey here is the list of some awesome CSS code generators, I am not going to explain what each sites do, explore these sites you can find many useful resources from these sites.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.cssportal.com/css3-flip-switch/"&gt;Flip Switch Generator: CSSportal.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ccBUbOZs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6r3u9lfh48jr4xj84k9i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ccBUbOZs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6r3u9lfh48jr4xj84k9i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.cssportal.com/style-input-range/"&gt;Input Range Generator : CSSportal.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xGZMZKjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/keti1ogjqff91ntwsnys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xGZMZKjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/keti1ogjqff91ntwsnys.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.cssportal.com/css-ribbon-generator/"&gt;CSS Ribbon Generator: CSSportal.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mwm2RiSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/juubdd19e3apkodstlib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mwm2RiSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/juubdd19e3apkodstlib.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://shadows.brumm.af/"&gt;Shadow Generator : shadows.brumm.af&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YmeLUFx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3j1dl1ml3glj6jds4fg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YmeLUFx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3j1dl1ml3glj6jds4fg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.internetmarketingninjas.com/tools/free-tools/favicon-tool/"&gt;Favicon Generator: internetmarketingninjas.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FFughcqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfqq48ivtmi7wfefxa6p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FFughcqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfqq48ivtmi7wfefxa6p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.internetmarketingninjas.com/tools/free-tools/pop-up-window-generator/"&gt;Pop Up Window Generator: internetmarketingninjas.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HyRWkQwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmoztjy7oa97b4mg35ai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HyRWkQwR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmoztjy7oa97b4mg35ai.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.internetmarketingninjas.com/tools/free-tools/floating-layer/?tool=59"&gt;Floating Layer Generator: internetmarketingninjas.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SM1YgU0J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkvo9hw1d8u2c0bhxvsn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SM1YgU0J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nkvo9hw1d8u2c0bhxvsn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://9elements.github.io/fancy-border-radius/#30.30.0.33--."&gt;Fancy Border&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CrLWGaD8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yfipiizult6jv693qzj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CrLWGaD8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7yfipiizult6jv693qzj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#css-button-code-generator"&gt;
  &lt;/a&gt;
  CSS Button Code Generator
&lt;/h4&gt;

&lt;p&gt;The below mentioned links will help you to generate and design CSS3 Buttons, definitely a time saver. Almost all sites have same functionality, some do have collections to choose from, bookmark which you like the most. You can learn from playing with the parameters.&lt;/p&gt;

&lt;p&gt;1.&lt;a href="https://www.cssportal.com/css3-button-generator/"&gt;CSSportal.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GQ_YVjso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/105j0556kclu3by49zme.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GQ_YVjso--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/105j0556kclu3by49zme.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;a href="https://css3buttongenerator.com/"&gt;Css3buttongenerator.com &lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jypl6MOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6nmou1nn187dpoh3uwv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jypl6MOq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6nmou1nn187dpoh3uwv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;a href="https://www.bestcssbuttongenerator.com/"&gt;Bestcssbuttongenerator.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7D2b_p_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dz8sqpilxhrehagkwwid.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7D2b_p_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dz8sqpilxhrehagkwwid.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;a href="https://cssbuttoncreator.com/"&gt;Cssbuttoncreator.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--07owsCSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gojk98cj4apy6o7ijm5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--07owsCSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gojk98cj4apy6o7ijm5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;a href="https://loading.io/button/generator/"&gt;Loading.io&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a3PFQ-F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgyi7qo7bz96y96yn93h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a3PFQ-F6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgyi7qo7bz96y96yn93h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css-spinner"&gt;
  &lt;/a&gt;
  CSS Spinner
&lt;/h4&gt;

&lt;p&gt;Here is the short list of spinners I found useful.&lt;/p&gt;

&lt;p&gt;1.&lt;a href="https://loading.io/spinner/"&gt;Loading.io&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7aRwDan4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j06twllkcwff89luwhcp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7aRwDan4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j06twllkcwff89luwhcp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;a href="https://tobiasahlin.com/spinkit/"&gt;Tobiashlin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LVzgADLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyp7omgtqi84sw48helr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LVzgADLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyp7omgtqi84sw48helr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;a href="https://icons8.com/cssload/en/spinners"&gt;Icons8.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fyS1q3np--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3umvfe4dnze7z5nb6g0m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fyS1q3np--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3umvfe4dnze7z5nb6g0m.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-gradient-generators"&gt;
  &lt;/a&gt;
  Color Gradient Generators
&lt;/h3&gt;

&lt;p&gt;Here is a list of useful CSS color gradient generators.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.colorzilla.com/gradient-editor/"&gt;Colorzilla&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xs20HmL9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dohzuiqz241ucechow44.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mycolor.space/gradient"&gt;Mycolor&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bJSOvrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jbiv0u9v5g21r6bgp8q.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cssgradient.io/"&gt;Cssgradient&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RQBgWZ2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fql45u41258ut2aug4ku.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://uigradients.com/#LearningandLeading"&gt;UIgradient&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BNozCskd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yj6f4kcim49br4vkb3n.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mybrandnewlogo.com/color-gradient-generator"&gt;Mybrandnewlogo&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmVjEWEL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1yt4cpquh2rzoyfyhrkl.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learnui.design/tools/gradient-generator.html"&gt;Learnui.design&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnCJbWEj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42a203ru8flckkegq9o1.png" alt="Alt Text"&gt;
You can find 40+ awesome SVG resources &lt;a href="https://dev.to/kiranrajvjd/awesome-35-svg-resources-for-your-next-web-project-5c15"&gt;here&lt;/a&gt;. Please share your favorite resources and also if there is any mistakes or areas need improvement, point it out. Thank you and happy coding :)
&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    <item>
      <title>Visualisation Libraries - JavaScript, Python and More</title>
      <author>Siddharth Chandra</author>
      <pubDate>Sat, 17 Apr 2021 05:15:04 +0000</pubDate>
      <link>https://dev.to/siddharth2016/visualisation-libraries-javascript-python-and-more-31am</link>
      <guid>https://dev.to/siddharth2016/visualisation-libraries-javascript-python-and-more-31am</guid>
      <description>&lt;p&gt;The libraries and toolkits discussed in this article can be used for rendering dynamic plot on desktop, mobile and web-based platforms so that a quick summary of results can be presented. These tools can be used by data scientists and researchers for an effective analysis of dynamic data.&lt;/p&gt;

&lt;p&gt;But, before moving on to these tools/libraries, let's look at some obvious points!&lt;/p&gt;

&lt;p&gt;The key features and characteristics that are directly related to effective visualisation and plotting cab be as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free and Open Source without any licensing issues.&lt;/li&gt;
&lt;li&gt;Support for assorted web standards.&lt;/li&gt;
&lt;li&gt;Animated charts and plots for better analysis of data.&lt;/li&gt;
&lt;li&gt;Integrated wizards and template.&lt;/li&gt;
&lt;li&gt;Data imports from multiple sources.&lt;/li&gt;
&lt;li&gt;Integration of APIs to 3rd party channels.&lt;/li&gt;
&lt;li&gt;Responsive outputs.&lt;/li&gt;
&lt;li&gt;Multi-color plots with multiple dimensional views.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The real-world scenarios of desktop and web-based applications need different types of visual components so that the application can be built with a user-friendly interface.&lt;/p&gt;

&lt;p&gt;A few scenarios where the need comes up for plotting, visualisation and dynamic graphs in software applications can be as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Real-time maps and street views for mobile app-based delivery systems.&lt;/li&gt;
&lt;li&gt;Dynamic graphs and plots for predictions (for stock-market, e-governance and weather forecasting).&lt;/li&gt;
&lt;li&gt;Knowledge discovery and predictive mining (for learning time series).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The hunt for data visualisation tools that can present huge data sets on web-based platforms can be tedious since a number of software frameworks and tools are available for plotting data and for the dynamic graph generation.&lt;/p&gt;

&lt;p&gt;In this article, we will cover the free and open-source resources that can be used for the visualisation of big data sets.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#candela"&gt;
  &lt;/a&gt;
  &lt;a href="https://candela.readthedocs.io/en/latest/"&gt;Candela&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDdvk09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500219315/mLUN_n9PO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDdvk09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500219315/mLUN_n9PO.png" alt="candela.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Candela is certainly one of the best free and open-source visualisation packages. It can be integrated into data science tasks for visualisation using multiple programming interfaces, including JavaScript, Python and R.&lt;/p&gt;

&lt;p&gt;Candela supports assorted plots and graphical segments, including &lt;code&gt;BoxPlot&lt;/code&gt;, &lt;code&gt;BarChart&lt;/code&gt;, &lt;code&gt;GanttChart&lt;/code&gt;, &lt;code&gt;Geo&lt;/code&gt;, &lt;code&gt;Histogram&lt;/code&gt;, &lt;code&gt;GLO&lt;/code&gt;, &lt;code&gt;GeoDots&lt;/code&gt;, &lt;code&gt;TreeHeatMap&lt;/code&gt;, &lt;code&gt;OnSet&lt;/code&gt;, &lt;code&gt;ScatterPlotMatrix&lt;/code&gt; and many more, using which easily understandable plots can be generated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#d3js"&gt;
  &lt;/a&gt;
  &lt;a href="https://d3js.org/"&gt;D3.js&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EkaQOyTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500237608/OpwpqFCB3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EkaQOyTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500237608/OpwpqFCB3.png" alt="d3js.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D3.js is a free and open-source JavaScript library distribution that is used to manage data of multiple dimensions - even big data sets can be plotted. The library supports data visualisation through web-based standards, including HTML, SVG and CSS.&lt;/p&gt;

&lt;p&gt;The key goal of this platform is to provide the maximum capability of the current browser, including strong viewing components and an approach focused on the DOM without a proprietary system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datawrapper"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.datawrapper.de/"&gt;DataWrapper&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9yaUOtcO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500258351/YyjgRRFbd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9yaUOtcO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500258351/YyjgRRFbd.png" alt="datawrapper.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Datawrapper is an open-source data visualisation tool for anyone to create easy, realistic and embeddable charts quickly. This platform is available in both free and premium segments. The free version of Datawrapper is very powerful and has a huge number of features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dygraphs"&gt;
  &lt;/a&gt;
  &lt;a href="https://dygraphs.com/"&gt;Dygraphs&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QCh-eyqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500275349/lrNP3nIL2K.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QCh-eyqK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500275349/lrNP3nIL2K.png" alt="dygraphs.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dygraphs is a flexible and fast library written in JavaScript and is friendly with assorted web browsers. The charts and plots can be generated with a high resolution. On mouseover, the individual points of the graphs, the values and data points can be analysed, which is useful for data analytics and knowledge discovery.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leaflet"&gt;
  &lt;/a&gt;
  &lt;a href="https://leafletjs.com/"&gt;Leaflet&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MOddjEjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500299893/hwKb8husx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOddjEjZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500299893/hwKb8husx.png" alt="leaflet.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The leaflet library is built to be quick, powerful and user-friendly for data scientists and researchers. It runs easily across all major desktop and mobile platforms and can be expanded with several plugins. It has an easy-to-use and well-documented API and easy-to-read source code so that advanced data science applications can be worked out.&lt;/p&gt;

&lt;p&gt;The leaflet is a collaborative and open-source charts library written in JavaScript. It is also very lightweight for the deployment of real-world applications and operates effectively on computer, mobile and tablet devices.&lt;/p&gt;

&lt;p&gt;A number of dynamic graphs and maps can be generated by the leaflet with the &lt;a href="https://www.openstreetmap.org/"&gt;OpenStreetMap&lt;/a&gt; so that real-time locations and positions can be plotted on different types of display devices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flotcharts"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flotcharts.org/"&gt;FlotCharts&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RuNBTwQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500320666/skxoOqGfe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RuNBTwQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500320666/skxoOqGfe.png" alt="flot.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flot is a plotting library developed with the integration of jQuery and JavaScript to focus on the generation of high performance and interactive plots. Dynamic graphs that have powerful features like planning, zooming, redraw, tick labels, log scales, etc, can be generated using FlotCharts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sigmajs"&gt;
  &lt;/a&gt;
  &lt;a href="http://sigmajs.org/"&gt;Sigma.js&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrqraBt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500337442/JacpLY2sa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrqraBt0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618500337442/JacpLY2sa.png" alt="sigma.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sigma is a free and open-source JavaScript-based library for the drawing of graphs, networks and dynamic plots. It allows networks to be published on websites and lets developers integrate network searching into rich web applications.&lt;/p&gt;

&lt;p&gt;Sigma works as a rendering engine in which the data sets can be linked and real-time graphs and networks can be plotted for multiple applications, including social network analysis, wireless networks, street maps and many others.&lt;/p&gt;




&lt;p&gt;Well, that's it from me.&lt;/p&gt;

&lt;p&gt;Let me know in the comments, what are all the libraries you have used and which is your favourite.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Just starting your Open Source Journey? Don't forget to check &lt;a href="https://github.com/siddharth2016/hello-open-source"&gt;Hello Open Source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Need inspiration or a different perspective on the Python projects or just out there to explore? Check &lt;a href="https://github.com/siddharth2016/awesome-python-repos"&gt;Awesome Python Repos&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to make a simple and awesome game from scratch? Check out &lt;a href="https://github.com/siddharth2016/PongPong"&gt;PongPong&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to &lt;code&gt;++&lt;/code&gt; your GitHub Profile README? Check out &lt;a href="https://github.com/marketplace/actions/quote-readme"&gt;Quote - README&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Till next time!&lt;/p&gt;

&lt;p&gt;Namaste 🙏&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>python</category>
      <category>visualisation</category>
      <category>tools</category>
    </item>
    <item>
      <title>Save Time And Money with Appointment Scheduling Tools</title>
      <author>Spurwing</author>
      <pubDate>Sat, 17 Apr 2021 05:04:21 +0000</pubDate>
      <link>https://dev.to/spurwing/save-time-and-money-with-appointment-scheduling-tools-6kd</link>
      <guid>https://dev.to/spurwing/save-time-and-money-with-appointment-scheduling-tools-6kd</guid>
      <description>&lt;p&gt;&lt;strong&gt;Appointment scheduling tools&lt;/strong&gt; are not simply built for convenience, they also offer the benefit of saved time and money which ultimately &lt;strong&gt;improve business efficiency&lt;/strong&gt;. How Does An Appointment Scheduling Tool actually Save You Time and Money?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#higher-job-satisfaction"&gt;
  &lt;/a&gt;
  Higher job satisfaction
&lt;/h2&gt;

&lt;p&gt;A reliable appointment scheduling software helps your company to save money by reducing the need for front desk staff 24/7. An appointment scheduling software can eliminate the need for an answering service and free up more of your front desk staff’s time on more profitable work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PPvXidA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gnf93mkeeaditzuend00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PPvXidA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gnf93mkeeaditzuend00.png" alt="scheduling tools for receptionists"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Staff members can focus on more quality and important work, such as, things that cannot be automated or replaced by technology: &lt;strong&gt;excellent customer service&lt;/strong&gt;. As for scheduling and booking you'll only pay a single monthly fee for a frequently updated software that provides unlimited service.&lt;/p&gt;

&lt;p&gt;Scheduling software integrates seamlessly with your company website and allows patients and clients to request and reserve appointment times based on your availability. This is often a more preferable method of making appointments for patients and clients too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#appointment-confirmations-and-reminders"&gt;
  &lt;/a&gt;
  Appointment Confirmations and Reminders
&lt;/h2&gt;

&lt;p&gt;Good quality appointment scheduling tools allow business owners to set &lt;strong&gt;automated reminders&lt;/strong&gt; and confirmation requests for appointments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ALPfYNzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0pmm8haod9z6kzuphso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ALPfYNzy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0pmm8haod9z6kzuphso.png" alt="appointment notifications"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both reminders and confirmation requests save your business money by reducing the number of missed appointments. These notifications also provide customers and patients with additional prompts for convenience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#managed-availability"&gt;
  &lt;/a&gt;
  Managed Availability
&lt;/h2&gt;

&lt;p&gt;Utilizing an appointment scheduling tool allows individual employees and staff members to set their schedule availability. By &lt;strong&gt;automating availability&lt;/strong&gt; there are less likely to be scheduling mistakes where clients or patients show up when a provider has a scheduling conflict.&lt;/p&gt;

&lt;p&gt;Allowing staff and employees to set their availability also offers a degree of freedom over scheduling which is ideal for companies that share office space or have multiple providers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#convenient-calendar-syncing"&gt;
  &lt;/a&gt;
  Convenient Calendar Syncing
&lt;/h2&gt;

&lt;p&gt;Appointment scheduling software also makes it much easier for providers to maintain an up-to-date schedule across &lt;strong&gt;multiple platforms&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b4B0v-ql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cenad1jdpg1awjwqzpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b4B0v-ql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5cenad1jdpg1awjwqzpv.png" alt="appointment tool syncing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, an appointment scheduling service like &lt;a href="https://www.spurwing.io/"&gt;Spurwing&lt;/a&gt; uses two-way syncing with external calendars. Two-way syncing ensures that no matter what calendar a provider uses, they see an up-to-date schedule of appointments.&lt;/p&gt;

&lt;p&gt;Calendar syncing is more than convenient for providers, though, it is convenient for patients and clients too. Providers are much less likely to experience scheduling mix-ups, double-booking, or overlook last-minute appointments with cross-calendar syncing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternate-appointment-mode-support"&gt;
  &lt;/a&gt;
  Alternate Appointment Mode Support
&lt;/h2&gt;

&lt;p&gt;An added benefit of modern appointment scheduling software is that it gives you the option of supporting alternative appointment styles, for example, &lt;strong&gt;telehealth appointments&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iZJsv1fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ups8t1q5oemj0zg0aah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iZJsv1fu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ups8t1q5oemj0zg0aah.png" alt="healthcare appointment scheduling"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The current pandemic has driven up the need for &lt;strong&gt;video appointments&lt;/strong&gt; and many businesses are having difficulty synchronizing traditional calendars with video appointment software. This causes appointments where providers are unavailable and missing reminders where patients end up not showing up and both of these problems cause lost revenue for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#appointment-scheduling-software-supports-your-business"&gt;
  &lt;/a&gt;
  Appointment Scheduling Software Supports Your Business
&lt;/h2&gt;

&lt;p&gt;A good appointment scheduling software cannot solve all business shortcomings, but it can dramatically &lt;strong&gt;improve business efficiency&lt;/strong&gt;. Streamlining the appointment process means fewer unnecessary staff, more organized clients and patients, more organized providers, fewer schedule conflicts, and better support for alternate appointment styles like video meetings.&lt;/p&gt;

&lt;p&gt;There exist several scheduling and booking services. However not all of them allow for &lt;strong&gt;full customization&lt;/strong&gt; of the entire process, design and &lt;strong&gt;white label&lt;/strong&gt; solutions. At Spurwing however this is exactly our goal and vision for clients.&lt;/p&gt;

&lt;p&gt;Subscribe to our blog for more tools and resources. Visit our website to learn more &lt;a href="https://www.spurwing.io/"&gt;https://www.spurwing.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epyGJe6F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofdynn15xz0xvfu3jsmy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epyGJe6F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofdynn15xz0xvfu3jsmy.png" alt="appointment scheduling api architecture"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>writing</category>
    </item>
    <item>
      <title>Why Tailwind JIT compiler is amazing</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 17 Apr 2021 05:00:43 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/why-tailwind-jit-compiler-is-amazing-44mb</link>
      <guid>https://dev.to/dailydevtips1/why-tailwind-jit-compiler-is-amazing-44mb</guid>
      <description>&lt;p&gt;I only found out about this JIT Compiler a few days ago, during my Livestream with &lt;a href="https://www.youtube.com/watch?v=YA1hzqfv2i8"&gt;Stefan Natter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During this Livestream, we got to use the JIT compiler, and I was super amazed by the speed, but more than that, the customization option!&lt;/p&gt;

&lt;p&gt;I have been waiting for something like that, and it's spot on what you would expect.&lt;/p&gt;

&lt;p&gt;Today I'll show you how to enable the JIT compiler and how you can leverage this custom CSS.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tb_hkHvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EwiPW5RWQAgIEpD.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgkE9rA5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1362367807887974401/kuJ1OFT1_normal.jpg" alt="Adam Wathan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Adam Wathan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @adamwathan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🚀 Excited to share the biggest advancement we've made with Tailwind CSS since the first release back in 2017!&lt;br&gt;&lt;br&gt;⚡️ A lightning fast JIT compiler&lt;br&gt;🧁 Never configure variants again&lt;br&gt;🤸 Write less custom CSS than ever&lt;br&gt;&lt;br&gt;Watch the announcement 👉&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/VWuTNZRnxj"&gt;youtube.com/watch?v=3O_3X7…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:58 PM - 15 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1371505992840663051" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1371505992840663051" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1371505992840663051" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#adding-the-tailwind-jit-compiler"&gt;
  &lt;/a&gt;
  Adding the Tailwind JIT Compiler
&lt;/h2&gt;

&lt;p&gt;For this article, I'm going to use my simple HTML Tailwind starter project.&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://github.com/rebelchris/HTML-Tailwind-Starter"&gt;find the project on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first step is to add the JIT Compiler. We can do so by running the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; @tailwindcss/jit tailwindcss postcss autoprefixer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next up, we need to make sure this compiler is used.&lt;br&gt;
For our project, we can open up the &lt;code&gt;postcss.config.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Adjust the file to look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/jit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="na"&gt;autoprefixer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that is all there is to it!&lt;br&gt;
Already amazing, right?&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-tailwind-jit-compiler-to-generate-custom-styles"&gt;
  &lt;/a&gt;
  Using Tailwind JIT Compiler to generate custom styles
&lt;/h2&gt;

&lt;p&gt;I'm sure every one of us ever needed a custom style.&lt;br&gt;
Perhaps you needed a fixed-width element, a custom size border, or translate, perhaps.&lt;/p&gt;

&lt;p&gt;With the new JIT Compiler, we can do this in a breeze.&lt;/p&gt;

&lt;p&gt;Imagine we need to create a fixed-width box.&lt;br&gt;
The box needs to be exactly 300x300px. We could, of course, extend Tailwind, but we can now even do this easier!&lt;/p&gt;

&lt;p&gt;Simply add classnames like such:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-[300px] h-[300px]"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Tailwind JIT Compiler
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is so cool!&lt;br&gt;
Start the script with &lt;code&gt;npm run dev&lt;/code&gt; and check out what's happening in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88C6Y4FD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618380362939/ber12VU9F.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88C6Y4FD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618380362939/ber12VU9F.png" alt="Tailwind JIT Compiler custom size"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you go, a square box and the classes are already reflecting in our CSS file!&lt;/p&gt;

&lt;p&gt;You can find this project on the following &lt;a href="https://github.com/rebelchris/HTML-Tailwind-Starter/tree/JIT-compiler"&gt;GitHub link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This stuff is next level,&lt;br&gt;
Thank you, Tailwind!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>css</category>
    </item>
  </channel>
</rss>
