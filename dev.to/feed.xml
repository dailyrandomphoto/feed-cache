<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Fre-2.1 has been pulished</title>
      <author>Yisar</author>
      <pubDate>Fri, 11 Jun 2021 06:10:36 +0000</pubDate>
      <link>https://dev.to/132/fre-2-1-and-react-18-have-been-pulished-what-s-the-difference-between-them-22o8</link>
      <guid>https://dev.to/132/fre-2-1-and-react-18-have-been-pulished-what-s-the-difference-between-them-22o8</guid>
      <description>&lt;p&gt;I announce that fre2 is officially released, which is a major breakthrough version. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#offscreen-rendering"&gt;
  &lt;/a&gt;
  Offscreen rendering
&lt;/h3&gt;

&lt;p&gt;The bigist breakthrough is offscreen rendering, a core algorithm refactor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yisar/fre/releases/tag/2.1.0-alpha"&gt;https://github.com/yisar/fre/releases/tag/2.1.0-alpha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;before: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tXQBdAa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9901lyz1u8jf3fdxjnnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tXQBdAa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9901lyz1u8jf3fdxjnnu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;after:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ww8PlvvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4t64ak13u5epdhqmcal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ww8PlvvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4t64ak13u5epdhqmcal.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Offscreen rendering is an algorithm level optimization, it traverses vdom in reverse order, from bottom to top, from right to left, to ensure that the front DOM pointer is in memory, and finally it is drawn to the screen at one time.&lt;/p&gt;

&lt;p&gt;With off screen rendering, fre has become the best performance frameworks in vdom world, not one of.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CIlxP6j6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x013ik3ur173xn41pu4q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CIlxP6j6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x013ik3ur173xn41pu4q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just as react 18 also released alpha version, fre 2.1 also tried to be compatible with them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#createroot"&gt;
  &lt;/a&gt;
  CreateRoot
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fre&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;+&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;createRoot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This API is more ergonomic, and for the callback, you can do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;createRoot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;renderered&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#starttransiton"&gt;
  &lt;/a&gt;
  startTransiton
&lt;/h3&gt;

&lt;p&gt;This is an API for lowering priority, which is very useful, so I decide to build it in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1 2&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;startTransition&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;+&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It works can be understood as &lt;code&gt;setTimeout (cb, 0)&lt;/code&gt;, but the callback function is executed synchronously, and the update is delayed asynchronously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#autoupdates"&gt;
  &lt;/a&gt;
  auto-updates
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/yisar/fre/blob/master/demo/src/auto-batch.tsx"&gt;https://github.com/yisar/fre/blob/master/demo/src/auto-batch.tsx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fre has always been supportive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#suspense-ssr"&gt;
  &lt;/a&gt;
  Suspense SSR
&lt;/h3&gt;

&lt;p&gt;This is the only breakthrough of react 18. I like it very much, but fre doesn't support it now. &lt;/p&gt;

&lt;p&gt;I need to spend some time to study it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Fre2 has also been released. If you are interested in the front-end framework, you can jump to GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/yisar/fre"&gt;https://github.com/yisar/fre&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It has all the advanced features of react 18, but only 400 lines of code, and its performance is much better than react.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>react</category>
      <category>fre</category>
      <category>preact</category>
    </item>
    <item>
      <title>My Secret Design Resources</title>
      <author>Innocent Coder</author>
      <pubDate>Fri, 11 Jun 2021 05:47:35 +0000</pubDate>
      <link>https://dev.to/innocentcoder/my-secret-design-resources-27f4</link>
      <guid>https://dev.to/innocentcoder/my-secret-design-resources-27f4</guid>
      <description>&lt;p&gt;Hey Everyone! &lt;br&gt;
here i have awesome design resources i use in day-to-day life.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#colors"&gt;
  &lt;/a&gt;
  Colors
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n7fELXpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1lo9tb5dp4pzag6kgni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n7fELXpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1lo9tb5dp4pzag6kgni.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Color Hunt&lt;br&gt;
Link- &lt;a href="https://colorhunt.co/"&gt;https://colorhunt.co/&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B2BJQXzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrlctj5wvgpxsz11tsgi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B2BJQXzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rrlctj5wvgpxsz11tsgi.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Coolors&lt;br&gt;
Link- &lt;a href="https://coolors.co/"&gt;https://coolors.co/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LZr-Vb6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ejdxzrexknnh50icxu6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LZr-Vb6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ejdxzrexknnh50icxu6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Muzli Colors&lt;br&gt;
link- &lt;a href="https://colors.muz.li/"&gt;https://colors.muz.li/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wH3dEUDd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw0kc7xc818ttqyod2ir.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wH3dEUDd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jw0kc7xc818ttqyod2ir.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Ui.Colour&lt;br&gt;
link- &lt;a href="https://www.instagram.com/ui.colour"&gt;https://www.instagram.com/ui.colour&lt;/a&gt;   &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fonts"&gt;
  &lt;/a&gt;
  Fonts
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p4oaq2TU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j491xan835rfladp2frx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p4oaq2TU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j491xan835rfladp2frx.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Google Fonts&lt;br&gt;
link- &lt;a href="https://fonts.google.com/"&gt;https://fonts.google.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SoLQH9SR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1y8y6li33268f7tkzk9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SoLQH9SR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1y8y6li33268f7tkzk9.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Fontshare&lt;br&gt;
link- &lt;a href="https://www.fontshare.com/"&gt;https://www.fontshare.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fvOnhxpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ainxo5w59u27mtxjx4tt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fvOnhxpT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ainxo5w59u27mtxjx4tt.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Fontspark&lt;br&gt;
link- &lt;a href="https://fontspark.app/"&gt;https://fontspark.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--snO9kF2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijdszrhrp4djfmylylwi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--snO9kF2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ijdszrhrp4djfmylylwi.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Fontesk&lt;br&gt;
link- &lt;a href="https://fontesk.com/"&gt;https://fontesk.com/&lt;/a&gt;    &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#icons"&gt;
  &lt;/a&gt;
  Icons
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UxCplDyz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zklfnjtl6dgyllpjo2s2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UxCplDyz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zklfnjtl6dgyllpjo2s2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Flaticon&lt;br&gt;
link- &lt;a href="https://www.flaticon.com/"&gt;https://www.flaticon.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xeZI92a2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ecox8uq1tw8viplmhzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeZI92a2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ecox8uq1tw8viplmhzw.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Unicons&lt;br&gt;
link- &lt;a href="https://iconscout.com/unicons"&gt;https://iconscout.com/unicons&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HM9Uju7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5awz92j4ec6wc6l7sch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HM9Uju7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5awz92j4ec6wc6l7sch.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Feather Icons&lt;br&gt;
link- &lt;a href="https://feathericons.com/"&gt;https://feathericons.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RXQuSmcF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wcl59klji6oczf9n28y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RXQuSmcF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wcl59klji6oczf9n28y.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Material Icons&lt;br&gt;
link- &lt;a href="https://fonts.google.com/icons"&gt;https://fonts.google.com/icons&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#illustrations"&gt;
  &lt;/a&gt;
  Illustrations
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gzEIbcaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kits982z70k6gzxwpzhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gzEIbcaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kits982z70k6gzxwpzhi.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Illu-Station&lt;br&gt;
link- &lt;a href="https://illustation.io/"&gt;https://illustation.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udrqbrX3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5i4x47s7r2ygfrqc60v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udrqbrX3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5i4x47s7r2ygfrqc60v.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Undraw&lt;br&gt;
link- &lt;a href="https://undraw.co/"&gt;https://undraw.co/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMfsWPfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jztn62osf31w26kq0hw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMfsWPfT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jztn62osf31w26kq0hw.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
IRA Design&lt;br&gt;
link- &lt;a href="https://iradesign.io/"&gt;https://iradesign.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wfdn01-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxfubpajsdn66u3yuaz5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wfdn01-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxfubpajsdn66u3yuaz5.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Drawkit&lt;br&gt;
link- &lt;a href="https://www.drawkit.io/"&gt;https://www.drawkit.io/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#inspirations"&gt;
  &lt;/a&gt;
  Inspirations
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LQO51k8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ld8gt0b0g5vs3zf45hh6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LQO51k8a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ld8gt0b0g5vs3zf45hh6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Dribbble&lt;br&gt;
link- &lt;a href="https://dribbble.com/"&gt;https://dribbble.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qHlY3X98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85v4nblvxlugr744e53b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHlY3X98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85v4nblvxlugr744e53b.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Behance&lt;br&gt;
link- &lt;a href="https://www.behance.net/"&gt;https://www.behance.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s8Unw8Hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wwvjxx7c5wcicwpykf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s8Unw8Hg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wwvjxx7c5wcicwpykf2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Awwwards&lt;br&gt;
link- &lt;a href="https://www.awwwards.com/"&gt;https://www.awwwards.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bihUSNjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/muvncgtj12a0sv76zoc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bihUSNjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/muvncgtj12a0sv76zoc8.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Mobbin&lt;br&gt;
link- &lt;a href="https://mobbin.design/"&gt;https://mobbin.design/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#blog"&gt;
  &lt;/a&gt;
  Blog
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BU8PsiTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfplmmverk0o3of3q2ir.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BU8PsiTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfplmmverk0o3of3q2ir.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Blogger&lt;br&gt;
link- &lt;a href="https://www.blogger.com/"&gt;https://www.blogger.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k7Om4MGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyj6hr738aob26w10qfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k7Om4MGt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyj6hr738aob26w10qfl.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Dev.To&lt;br&gt;
link- &lt;a href="https://dev.to/"&gt;https://dev.to/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kFDYIDuC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mpc1u6w2ji17aji3lf97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kFDYIDuC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mpc1u6w2ji17aji3lf97.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Medium&lt;br&gt;
link- &lt;a href="https://medium.com/"&gt;https://medium.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mGnf474o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z83tbzedberiht20t2n8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mGnf474o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z83tbzedberiht20t2n8.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Hashnode&lt;br&gt;
link- &lt;a href="https://hashnode.com/"&gt;https://hashnode.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/call-screen-glass-ui-using-html-css-1ifl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Call Screen Glass UI Using HTML &amp;amp; CSS&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ May 17 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
       

</description>
      <category>webdev</category>
      <category>design</category>
      <category>javascript</category>
      <category>discuss</category>
    </item>
    <item>
      <title>useDialog - Vue.js snippets</title>
      <author>Mykolas Mankevicius</author>
      <pubDate>Fri, 11 Jun 2021 05:27:47 +0000</pubDate>
      <link>https://dev.to/neophen/usedialog-vue-js-snippets-20j0</link>
      <guid>https://dev.to/neophen/usedialog-vue-js-snippets-20j0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR;
&lt;/h2&gt;

&lt;p&gt;Here's the &lt;a href="https://gist.github.com/Neophen/877f8662cfe46f39cfb6f6393a6fff4a"&gt;link to the gist&lt;/a&gt; use/change/modify it.&lt;/p&gt;

&lt;p&gt;Have you ever wanted a simple dialog, which is completely custom, but you didn't want to pull in a package.&lt;/p&gt;

&lt;p&gt;But it always looks like a mess to make?&lt;/p&gt;

&lt;p&gt;Well worry no more! In todays Vue.js snippets post we'll make just that! Don't believe me? Have a look at the finished result!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/FdG0zBa6Sj4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;And this is the API for it:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ia34Upus--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2stxmb88k5ot9j63840.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ia34Upus--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2stxmb88k5ot9j63840.png" alt="the api of using dialogs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like it here's the explanation on how to write one yourself.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-raw-usedialogjs-endraw-"&gt;
  &lt;/a&gt;
  The &lt;code&gt;useDialog.js&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The basic premise is, we want a nice api to use dialogs right?&lt;/p&gt;

&lt;p&gt;Something that has an expresive api with autocompletion if possible. Something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Dialog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myCustomType&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onConfirm&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//do something })&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a bit of a whopper of a class, but it's easy to write test for. I've written the basic api. You can change/modify this to your liking.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thing-to-improve"&gt;
  &lt;/a&gt;
  Thing to improve?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Allow multiple onConfirm/onCancel callbacks
Quite simple just change the &lt;code&gt;onConfirmCallback&lt;/code&gt; to &lt;code&gt;onConfirmCallbacks = []&lt;/code&gt;
And then on each call of &lt;code&gt;onConfirm&lt;/code&gt;, just push the callback into the stack, and &lt;code&gt;onResolve&lt;/code&gt; await all of the callbacks&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>compositionapi</category>
      <category>hooks</category>
    </item>
    <item>
      <title>Create dreamy fused-glass overlay effect with Yogurt CSS</title>
      <author>Loouis Low</author>
      <pubDate>Fri, 11 Jun 2021 05:15:57 +0000</pubDate>
      <link>https://dev.to/loouislow/create-dreamy-fused-glass-overlay-effect-with-yogurt-css-54jj</link>
      <guid>https://dev.to/loouislow/create-dreamy-fused-glass-overlay-effect-with-yogurt-css-54jj</guid>
      <description>&lt;p&gt;&lt;a href="https://yogurtcss.netlify.app"&gt;Full Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/loouislow81/embed/XWMPZXG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?
&lt;/h2&gt;

&lt;p&gt;Create a two empty elements stacked together with &lt;a href="https://yogurtcss.netlify.app/position/"&gt;Position&lt;/a&gt; and &lt;a href="https://yogurtcss.netlify.app/top-bottom-left-right/"&gt;Top/Bottom/Left/Right&lt;/a&gt; utilities.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Background Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute top-0 left-0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Foreground Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set up &lt;code&gt;Background Layer&lt;/code&gt; image to spread across the screen with &lt;a href="https://yogurtcss.netlify.app/height/"&gt;Height&lt;/a&gt; and &lt;a href="https://yogurtcss.netlify.app/width/"&gt;Width&lt;/a&gt; utilities. &lt;/p&gt;

&lt;p&gt;Set focus on the center of the image with &lt;a href="https://yogurtcss.netlify.app/object-fit/"&gt;Object Fit&lt;/a&gt; and set the alignment to top (optional) with &lt;a href="https://yogurtcss.netlify.app/object-position/"&gt;Object Position&lt;/a&gt; utilities.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Background Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute top-0 left-0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-screen w-screen ... object-cover object-top"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Foreground Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use &lt;a href="https://yogurtcss.netlify.app/overflow/"&gt;Overflow&lt;/a&gt; utilities to prevent any element overflowing the screen edge to hide the scrollbars.&lt;/p&gt;

&lt;p&gt;Center for the &lt;code&gt;Foreground Layer&lt;/code&gt; with &lt;a href="https://yogurtcss.netlify.app/flex/"&gt;Flex&lt;/a&gt;, &lt;a href="https://yogurtcss.netlify.app/justify-content/"&gt;Justify-Content&lt;/a&gt; and &lt;a href="https://yogurtcss.netlify.app/align-items/"&gt;Align Items&lt;/a&gt; utilities.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative ... h-screen ... flex justify-center items-center ... overflow-hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Background Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute top-0 left-0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-screen w-screen ... object-cover object-top"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Foreground Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At &lt;code&gt;Foreground Layer&lt;/code&gt;, set the element to &lt;code&gt;bg-transparent&lt;/code&gt; with &lt;a href="https://yogurtcss.netlify.app/background-color/"&gt;Background Color&lt;/a&gt; and add blur effect with &lt;a href="https://yogurtcss.netlify.app/filter-backdrop-blur/"&gt;Backdrop Blur&lt;/a&gt; utilities. Final touch up to add a dreamy shadow with &lt;a href="https://yogurtcss.netlify.app/box-shadow/"&gt;Box Shadow&lt;/a&gt; utilities.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative ... h-screen ... flex justify-center items-center ... overflow-hidden"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Background Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute top-0 left-0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-screen w-screen ... object-cover object-top"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Foreground Layer --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-72 w-72 ... bg-transparent ... backdrop-filter blur-6 ... shadow-dreamy-md"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Visit &lt;a href="https://yogurtcss.netlify.app/playground/"&gt;Yogurt Playground&lt;/a&gt; to have experience of the Yogurt CSS with fullness.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy then!&lt;/p&gt;

</description>
      <category>css</category>
      <category>yogurtcss</category>
    </item>
    <item>
      <title>How to install ImageMagick?</title>
      <author>Lucia Stanley</author>
      <pubDate>Fri, 11 Jun 2021 05:08:05 +0000</pubDate>
      <link>https://dev.to/luciastanley/top-5-cua-hang-mua-son-ysl-chinh-hang-o-ha-noi-uy-tin-3p6h</link>
      <guid>https://dev.to/luciastanley/top-5-cua-hang-mua-son-ysl-chinh-hang-o-ha-noi-uy-tin-3p6h</guid>
      <description>&lt;p&gt;I've recently picked up interest in contributing to this platform (forem/dev.to) so I've been reading the documentation.&lt;/p&gt;

&lt;p&gt;I'm now stuck on the installation of ImageMagick. I run on Windows OS so im not sure if i'm to install ImageMagick on WSL or on my machine itself.&lt;/p&gt;

&lt;p&gt;Please help clarify. Thanks!&lt;/p&gt;

</description>
      <category>help</category>
    </item>
    <item>
      <title>The Best Python Libraries for Data Science in 2021</title>
      <author>Le Truong</author>
      <pubDate>Fri, 11 Jun 2021 04:39:03 +0000</pubDate>
      <link>https://dev.to/letruong/the-best-python-libraries-for-data-science-in-2021-4am3</link>
      <guid>https://dev.to/letruong/the-best-python-libraries-for-data-science-in-2021-4am3</guid>
      <description>&lt;p&gt;Python is a high-level programming language that is interpreted, interactive, portable, and object-oriented. This free and open-source general-purpose language is compatible with a wide variety of Unix variants, including Linux and macOS, and Windows.&lt;/p&gt;

&lt;p&gt;Python is used in hacking, computer vision, data visualization, 3D machine learning, and robotics and is a popular programming language among developers worldwide.&lt;br&gt;&lt;br&gt;The following table summarizes the ten most frequently used Python libraries for data science:&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;TensorFlow is an open-source library for deep learning applications developed by the Google Brain Team.&lt;/p&gt;

&lt;p&gt;Initially designed for numerical compilations, it now includes a robust and flexible ecosystem of tools, libraries, and community resources that enables developers to build and deploy machine learning-based applications.&lt;/p&gt;

&lt;p&gt;TensorFlow was initially released in 2015, but the Google Brain team recently released its latest version, TensorFlow 2.5.0, which includes additional features. It is Python 3.9 compatible.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;NumPy&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;NumPy, or Numerical Python, was created in 2015 by Travis Oliphant. It is a foundational library for mathematical and scientific computations.&lt;/p&gt;

&lt;p&gt;The open-source software includes linear algebra, Fourier transform, and matrix computation functions and is primarily used for applications that require high performance and resource efficiency. NumPy aims to provide 50x faster array objects than traditional Python lists.&lt;/p&gt;

&lt;p&gt;NumPy is the foundation for data science libraries such as SciPy, Matplotlib, Pandas, Scikit-Learn, and Statsmodels.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;SciPy&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;SciPy, or Scientific Python, is a programming language used to solve complex mathematics, science, and engineering problems. It is based on the NumPy extension and enables data manipulation and visualization.&lt;br&gt;&lt;br&gt;SciPy is a Python package that contains user-friendly and efficient numerical routines for linear algebra, statistics, integration, and optimization. Its applications include the processing of multidimensional images, the solution of Fourier transforms, and the solution of differential equations.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Matplotlib&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Matplotlib, created by John Hunter, is one of the most widely used libraries in the Python community. It can generate static, animated, and interactive data visualizations. Matplotlib enables a plethora of customizations and charts.&lt;/p&gt;

&lt;p&gt;It enables developers to scatter, customize, and configure plots using histograms. The open-source library incorporates plots into applications via an object-oriented API.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Pandas&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Pandas were created by Wes McKinney and are used to manipulate and analyze data. It provides fast, flexible, and expressive data structures and features such as data alignment and handling of missing data.&lt;/p&gt;

&lt;p&gt;Pandas provide fast, flexible, and expressive data structures for working with labeled and relational data. It is built on the foundation of two primary data structures: Series and Frames.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Keras&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Keras is a free and open-source software library. Keras provides an interface to the TensorFlow library, allowing for rapid prototyping of deep neural networks. It was created by Francois Chollet and debuted in 2015.&lt;/p&gt;

&lt;p&gt;Keras includes utilities for model compilation, graph visualization, and data analysis. Additionally, it provides prelabeled datasets that can be directly imported and loaded. It is user-friendly, adaptable, and well-suited for exploratory research.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;SciKit-Learn&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;SciKit-Learn incorporates algorithms for classification, regression, and clusterings, such as DBSCAN, gradient boosting, support vector machines, and random forests.&lt;/p&gt;

&lt;p&gt;David Cournapeau developed the library on top of SciPy, NumPy, and Matplotlib to handle everyday machine learning and data mining tasks.&lt;/p&gt;

&lt;p&gt;SciKit-Learn is a powerful tool for analyzing predictive data.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Statsmodels&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Statsmodels is a Python scientific library that focuses on data science, data analysis, and statistics. It is based on NumPy and SciPy and integrates data handling with Pandas. Statsmodels enables users to perform data exploration, statistical model estimation, and statistical testing.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Plotly&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Plotly is collaborative analytics and graphing platform built on the web. It is one of the most potent libraries available for machine learning, data science, and AI operations. Plotly is a publication-ready and immersive data visualization tool.&lt;/p&gt;

&lt;p&gt;Plotly makes it simple to import data into charts, allowing developers to create slide decks and dashboards quickly. It is used to create tools such as Dash and Chart Studio.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Seaborn&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Seaborn is the most frequently used statistical data visualization library in Python, used to create heatmaps and other visualizations that summarize data and depict distributions. It is built on top of Matplotlib and supports both data frames and arrays.&lt;/p&gt;

&lt;p&gt;Seaborn is used to creating simple plots such as bar graphs, line graphs, and pie charts.&lt;/p&gt;

</description>
      <category>python</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Crack Software 2021 Free Download</title>
      <author>Angel</author>
      <pubDate>Fri, 11 Jun 2021 04:32:52 +0000</pubDate>
      <link>https://dev.to/angel70900297/crack-software-2021-free-download-5g0h</link>
      <guid>https://dev.to/angel70900297/crack-software-2021-free-download-5g0h</guid>
      <description>&lt;p&gt;&lt;a href="https://wellscrack.com/"&gt;https://wellscrack.com/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The Complete Guide to Data Science, Big Data, and Data Analytics</title>
      <author>Le Truong</author>
      <pubDate>Fri, 11 Jun 2021 04:22:35 +0000</pubDate>
      <link>https://dev.to/letruong/the-complete-guide-to-data-science-big-data-and-data-analytics-3ne3</link>
      <guid>https://dev.to/letruong/the-complete-guide-to-data-science-big-data-and-data-analytics-3ne3</guid>
      <description>&lt;p&gt;With colossal data serving as the lifeblood of organizations, the value placed on data cannot be adequately expressed in words. Data has risen to prominence in virtually every field imaginable over the years.&lt;/p&gt;

&lt;p&gt;This is why everyone aspires to work in this field. However, becoming perplexed about what data science, big data, and data analytics are and how they differ is natural. These three terms are critical in the enchanted world of data.&lt;/p&gt;

&lt;p&gt;They are similar in some ways and dissimilar in others. They were having a clear picture of all of them in mind will ultimately result in you making a better career choice. This section contains all of the information you need to get started with data science, big data, and data analytics.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Data science&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Data science is concerned with filtering data so that information can be extracted and meaningful insights are drawn from it. This field encompasses both structured and unstructured data.&lt;/p&gt;

&lt;h3&gt;The skills necessary to succeed as a data scientist&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;Programming languages such as R, Python, Java, and C/C++.&lt;/li&gt;
    &lt;li&gt;Capable of working with both structured and unstructured data.&lt;/li&gt;
    &lt;li&gt;Mathematics and statistics.&lt;/li&gt;
    &lt;li&gt;Recognize the business issue and objective.&lt;/li&gt;
    &lt;li&gt;Solving problems&lt;/li&gt;
    &lt;li&gt;Consideration for others.&lt;/li&gt;
    &lt;li&gt;Excellent communication abilities.&lt;/li&gt;
    &lt;li&gt;Possess a working knowledge of Hadoop and SQL.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Data science applications&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;One of the most critical data science applications is in making recommendations to users based on their past behavior. This is a technique that is widely used in the e-commerce industry.&lt;/li&gt;
    &lt;li&gt;Digital Marketing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;strong&gt;Data analytics&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Data analytics is nothing more than analyzing raw data in order to conclude. This also assists management in making more informed decisions. The primary goal of data analytics is to take actions that will result in the organization's growth.&lt;/p&gt;

&lt;p&gt;The management team makes decisions solely based on data analytics, rejecting specific ideas and even reworking previously made decisions. Ultimately, what it boils down to is that the organization should be in a position to make decisions that address the organization's issues, if any, and catapult it to a new level entirely.&lt;/p&gt;

&lt;h3&gt;The skills necessary to succeed as a data analyst&lt;/h3&gt;

&lt;p&gt;Programming languages are required to work as a data analyst. R and Python are the two most in-demand programming languages among recruiters.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;The capacity for data visualization.&lt;/li&gt;
    &lt;li&gt;Excellent communication abilities.&lt;/li&gt;
    &lt;li&gt;Proficiency in statistics and mathematics.&lt;/li&gt;
    &lt;li&gt;The capacity to transform raw data into a form that enables better decision-making.&lt;/li&gt;
    &lt;li&gt;Artificial intelligence. This is another critical aspect that should not be overlooked when aspiring to be a data analyst.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Data analytics applications&lt;/h3&gt;

&lt;p&gt;Data analytics applies to a wide variety of situations. Several of them are as follows:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Playing games&lt;/li&gt;
    &lt;li&gt;Tourism and travel.&lt;/li&gt;
    &lt;li&gt;The Healthcare sector.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;strong&gt;Big data&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The term "big data" sheds light on what it could be. Big data refers to massive amounts of data that cannot be effectively processed using conventional methods. The first step is to process the unstructured data that cannot be stored in any established systems. With the exponential growth of data, the term "big data" fits perfectly.&lt;/p&gt;

&lt;p&gt;According to Gartner, "big data" refers to "high-volume, high-velocity, or diverse information assets that require cost-effective, innovative methods of information processing to enable enhanced insight, decision-making, and process automation."&lt;/p&gt;

&lt;h3&gt;The skills necessary to succeed as a prominent data specialist&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;The capacity to determine which data is pertinent.&lt;/li&gt;
    &lt;li&gt;The capacity to develop novel methods for collecting, interpreting, and analyzing data&lt;/li&gt;
    &lt;li&gt;Skills in statistics and mathematics.&lt;/li&gt;
    &lt;li&gt;Crunching the numbers.&lt;/li&gt;
    &lt;li&gt;Recognize the business's objectives.&lt;/li&gt;
    &lt;li&gt;The ability to create algorithms for data processing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Big data applications&lt;/h3&gt;

&lt;p&gt;Big data has a plethora of applications. Several notable examples include the following:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Analyses of fraud.&lt;/li&gt;
    &lt;li&gt;Sector of telecommunications&lt;/li&gt;
    &lt;li&gt;Analyses of customers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whichever career path you choose, your career prospects are bright because data is here to stay! It will continue to have a significant impact on our lives for years to come.&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>bigdata</category>
    </item>
    <item>
      <title>An Engineer’s take on “Company Culture”</title>
      <author>Michael Landry</author>
      <pubDate>Fri, 11 Jun 2021 03:20:50 +0000</pubDate>
      <link>https://dev.to/milandry/an-engineer-s-take-on-company-culture-3802</link>
      <guid>https://dev.to/milandry/an-engineer-s-take-on-company-culture-3802</guid>
      <description>&lt;p&gt;The "Company Culture" topic comes up quite often, and for good reason. The culture of a company is a chief driver in the success of the company. Despite of its profound impact in both the operation of a company as well as the interview process, I feel that most discussions revolving around it are often nebulous, almost always devolving to mentioning something about having a ping pong table in the break room. Having been bewildered by such discussions in the interview process, I decided I at least needed to come up with some sort of take on it of my own, or at least forming a definition that that makes sense to me:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;"The company culture is the set of principles and values that drive the ideas and actions of a company. "&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;After spending some amount of time researching, and interviewing with a variety of companies, what turns out to be a nebulous and expansive topic actually turns out to be the same usual concepts rehashed in different forms. This topic is very important, but it need not be daunting or confusing.  Whether the discussion is about the success of the company in general, seeing if a team is a good fit, or tackling the issue in an interview, maintaining a straightforward understanding of the concept is key.  I myself, in subscribing to my usual Rule of Three to keep things simple yet sufficient, subscribe to the three following principles that I adhere to when I need to be productive. I find that these three principles compliment and synergize with each other, and that these principles can be easily extended to encompass all sorts of different virtues of productivity:&lt;/p&gt;

&lt;h2&gt;Be results driven&lt;/h2&gt;

&lt;p&gt;I start with this one, it's the most important. When I view a company as a whole, we can ascertain on of this principle is important or not based on one simple criterion, do the actions of the company aide in providing a better good or service to its customers, which in turn drive profits to the stakeholders of a company? It seems obvious that this is what a company should be doing, but quite often I observe companies spending a lot of effort on extra curriculars, be it maintaining its image, fudging markets, hamstringing competition, or tilting the scales of one social issue or another.  Some of these things can be important, but CEOs that get caught up in everything except improving the good or service of their business will keep like-minded individuals employed underneath them. It is important for teams to be aware of objectives, that each individual has a goal, and the team has a goal, and that the company has a goal. Only when goals and results are clearly stated, understandable and communicated throughout the entire company (specifically, that means that something was written down and not just allegedly declared in a meeting you may or may not have attended) will an organization enjoy measurable success, and be able to recognize and reward good and strong effort.&lt;/p&gt;

&lt;p&gt;Good teams:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Favor results over processes.&lt;/li&gt;
&lt;li&gt;Clearly communicate objectives&lt;/li&gt;
&lt;li&gt;Recognize good effort and work&lt;/li&gt;
&lt;li&gt;Focus more on finding solutions and less on finding excuses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bad teams:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Drown in bureaucracy and process&lt;span&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Lose focus&lt;/li&gt;
&lt;li&gt;Spend a lot of effort on making (bad) policy &lt;/li&gt;
&lt;li&gt;Love having meetings, with many people, for long periods of time, while never encouraging anyone to withdraw if they are wasting their time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Meaningful and impactful ideas and actions&lt;/h2&gt;

&lt;p&gt;If one assumes that a company then is doing everything it can to achieve some goal, then the next sensible question is whether or not the objective is worth pursuing, or if there is something better. This principle can be expanded into many important values. A team can only know what is meaningful and impactful if they can 'see the big picture.' The big picture  exists not within a single team but across an organization. &lt;/p&gt;

&lt;p&gt;Good teams:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are capable of prioritizing important and urgent tasks over other tasks.&lt;/li&gt;
&lt;li&gt;Rigorously vet any new ideas and initiatives through an appropriate amount of cost/benefit analysis.&lt;/li&gt;
&lt;li&gt;Constantly reflect on existing practices and can change, expand, or discard practices as necessary.&lt;/li&gt;
&lt;li&gt;Can be agile and change as needed.&lt;/li&gt;
&lt;li&gt;Can see the big picture&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bad teams:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tend to have many people who are always 'too busy', often indicating the lack of ability to manage and prioritize.&lt;span&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Defend bad ideas based on custom and seniority over merit. &lt;/li&gt;
&lt;li&gt;Adhere to ritualistic activities that do not have any meaningful value or relevance to the present situation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Communication and collaboration&lt;/h2&gt;

&lt;p&gt;This principle is rapidly being recognized as critical to modern software engineering efforts. The days of the brooding programmer hunched over a keyboard pecking away in solitude are long over.  The Software Development Lifecycle is much more well understood, and in order to execute, all team members must be in communication and work together to be successful.&lt;/p&gt;

&lt;p&gt;Good teams:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Understand that all members will succeed, or all will fail, as a team.&lt;/li&gt;
&lt;li&gt;Focus on the success of the team over promoting oneself&lt;/li&gt;
&lt;li&gt;Maintain regular feedback from management to team members, including and especially good feedback.&lt;/li&gt;
&lt;li&gt;Respect and trust all teammates&lt;/li&gt;
&lt;li&gt;Stay openminded to new ideas and approaches&lt;/li&gt;
&lt;li&gt;Promote the spread of ideas and knowledge throughout the team&lt;/li&gt;
&lt;li&gt;Find time to ensure that individuals are set up for success&lt;/li&gt;
&lt;li&gt;Recognize the value of constant improvement, and are eager to invest in, train, and support all team members. &lt;span&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bad teams:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tend to have many people who are always 'too busy', often a 'clever' tactic to appear important, disregard the team, and refuse to take any responsibility.&lt;/li&gt;
&lt;li&gt;Conceal, hide, and mislead key information&lt;/li&gt;
&lt;li&gt;make it very difficult to have conversations with key teammates on other teams.&lt;span&gt;&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;A few case studies&lt;/h2&gt;

&lt;p&gt;As I mentioned previously, the best practices and values for every company are pretty much universal. Let's view a few company cultural declarations and map them back to one of these core principles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/careers/culture/"&gt;Amazon&lt;/a&gt;: &lt;/p&gt;

&lt;p&gt;Results Driven:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deliver Results&lt;/li&gt;
&lt;li&gt;Dive deep&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meaningful and impactful actions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Customer obsession&lt;/li&gt;
&lt;li&gt;Think big&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Communication and Collaboration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Have Backbone; Disagree and Commit&lt;/li&gt;
&lt;li&gt;Earn Trust&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And another to establish a trend, here is &lt;a href="https://www.myrocketcareer.com/About-Us/Our-Philosophies"&gt;Rocket Mortgage&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Results Driven:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ignore the noise&lt;/li&gt;
&lt;li&gt;Numbers and money follow; they do not lead.&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meaningful and impactful actions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Obsessed with finding a better way.&lt;/li&gt;
&lt;li&gt;Every client. Every time. No exceptions. No excuses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Communication and Collaboration:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It’s not about WHO is right; it’s about WHAT is right.&lt;/li&gt;
&lt;li&gt;We are the “they.”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my take on company culture. While many might like to make it that their team or company is very unique in terms of their culture, I find that defining a set of values that apply universally goes a long way in simplifying the concept, and will help people understand what distinguishes the great companies from the rest.  Oh yeah, and be wary of people who are busy all the time.&lt;/p&gt;

</description>
      <category>culture</category>
      <category>career</category>
      <category>leadership</category>
    </item>
    <item>
      <title>How To Use Vim Mode On The Command Line In Bash</title>
      <author>brandon_wallace</author>
      <pubDate>Fri, 11 Jun 2021 03:02:33 +0000</pubDate>
      <link>https://dev.to/brandonwallace/how-to-use-vim-mode-on-the-command-line-in-bash-fnn</link>
      <guid>https://dev.to/brandonwallace/how-to-use-vim-mode-on-the-command-line-in-bash-fnn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Learn how to use Vi mode on the command line in Bash.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vim-lovers-rejoice"&gt;
  &lt;/a&gt;
  Vim lovers rejoice.
&lt;/h2&gt;

&lt;p&gt;Did you know you can use Vim mode on the command line?&lt;/p&gt;

&lt;p&gt;After I found out you could enable Vim mode in bash &lt;br&gt;
&lt;code&gt;set -o vi&lt;/code&gt; is always the first line I add to by .bashrc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4t41gHk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRqkxcbS/set-o-vi-screenshot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4t41gHk---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRqkxcbS/set-o-vi-screenshot.png" alt="set-o-vi-screenshot.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article I will go over &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Movement &lt;/li&gt;
&lt;li&gt;Editing&lt;/li&gt;
&lt;li&gt;Searching&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, the Bash command line uses Emacs style keyboard shortcuts, such as CTRL+A and CTRL+E. &lt;br&gt;
Here is a small table that shows a comparison of the Emacs style keyboard shortcuts and the Vim equivalent on the command line.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Emacs&lt;/th&gt;
&lt;th&gt;Vim&lt;/th&gt;
&lt;th&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+A&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Move cursor to beginning of line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+E&lt;/td&gt;
&lt;td&gt;$&lt;/td&gt;
&lt;td&gt;Move cursor to end of line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt+B&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;Move cursor back one word.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt+F&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;Move cursor right one word.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+B&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;Move cursor back one character.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+F&lt;/td&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td&gt;Move cursor right one character.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Add this line to the bottom of your .vimrc file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; vi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Source your .bashrc file to make the changes take effect.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After adding that line and sourcing the .bashrc file, you now have Vim commands available on the Bash command line.&lt;/p&gt;

&lt;p&gt;You can perform a variety of commands Vim users are used to on the command line. &lt;/p&gt;

&lt;p&gt;If you are a Vim user already you know about command mode and insert mode. By default, in the Bash command line you are in insert mode.&lt;/p&gt;

&lt;p&gt;You must press &lt;code&gt;ESC&lt;/code&gt; to enter command mode.&lt;/p&gt;

&lt;p&gt;By the way, I am currently using Bash version 5.0.3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;bash &lt;span class="nt"&gt;--version&lt;/span&gt; | &lt;span class="nb"&gt;head&lt;/span&gt; &lt;span class="nt"&gt;-1&lt;/span&gt;
GNU bash, version 5.0.3&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nt"&gt;-release&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;x86_64-pc-linux-gnu&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#movement"&gt;
  &lt;/a&gt;
  Movement
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#this-is-how-you-move-around"&gt;
  &lt;/a&gt;
  This is how you move around.
&lt;/h3&gt;

&lt;p&gt;Out of the four Vim  movement keys &lt;code&gt;h j k l&lt;/code&gt; only &lt;code&gt;h&lt;/code&gt; and &lt;code&gt;l&lt;/code&gt; work to move the cursor left and right.&lt;br&gt;
There is no up and down on the command line so &lt;code&gt;j&lt;/code&gt; and &lt;code&gt;k&lt;/code&gt; don't do anything.&lt;/p&gt;

&lt;p&gt;First press the &lt;code&gt;ESC&lt;/code&gt; key to make sure you are in command mode.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt; Move the cursor to the end of the line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;0&lt;/code&gt; Move the cursor to the beginning of the line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gS5nqCaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/B6v7J6X8/move-to-end-of-line.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gS5nqCaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/B6v7J6X8/move-to-end-of-line.gif" alt="move-to-end-of-line.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;W&lt;/code&gt; Move to the next word using space character as the delimiter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5Q0bKOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/PqdspBf1/move-to-next-word.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5Q0bKOG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/PqdspBf1/move-to-next-word.gif" alt="move-to-next-word.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;w&lt;/code&gt; Move to the next word or special character.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;B&lt;/code&gt; Move back one word using space character as the delimiter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_tRQAtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/c4T5krdt/move-back-one-word.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_tRQAtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/c4T5krdt/move-back-one-word.gif" alt="move-back-one-word.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;b&lt;/code&gt; Move back one word or special character.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;^&lt;/code&gt; Move to the first non-blank character at the beginning of the line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;f&amp;lt;character&amp;gt;&lt;/code&gt; Find occurrence of the next character. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Examples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;ft&lt;/code&gt; finds the next occurrence of the letter &lt;code&gt;t&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6VBs1QQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/dDMLqhtw/find-letter-t.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6VBs1QQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/dDMLqhtw/find-letter-t.gif" alt="find-letter-t.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;f"&lt;/code&gt; finds the next occurrence of the double quote character &lt;code&gt;"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;;&lt;/code&gt; Press semi-colon to move to the next occurrence of the character.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;F&amp;lt;character&amp;gt;&lt;/code&gt; Performs a backward search for a character.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Examples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;Ft&lt;/code&gt; finds the next occurrence of the letter &lt;code&gt;t&lt;/code&gt; backward search.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3xq-Dcm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/d1kCwPmR/find-letter-t-backwards.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3xq-Dcm8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/d1kCwPmR/find-letter-t-backwards.gif" alt="find-letter-t-backwards.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;F"&lt;/code&gt; finds the next occurrence of the double quote character &lt;code&gt;"&lt;/code&gt; backward search.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;;&lt;/code&gt; Press semi-colon to move to the next occurrence of the character.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#editing"&gt;
  &lt;/a&gt;
  Editing
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#this-is-how-you-edit-text"&gt;
  &lt;/a&gt;
  This is how you edit text.
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;x&lt;/code&gt; Delete a single character under cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;X&lt;/code&gt; Delete the previous character.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DMlSXrkf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/FFykhZXL/delete-previous-character.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DMlSXrkf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/FFykhZXL/delete-previous-character.gif" alt="delete-previous-character.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;I&lt;/code&gt; Enter insert mode with the cursor at the start of the line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;A&lt;/code&gt; Enter insert mode at the end of the line to append text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--46Y-X0yA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/02GYHvyh/append-to-end-of-line.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--46Y-X0yA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/02GYHvyh/append-to-end-of-line.gif" alt="append-to-end-of-line.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cc&lt;/code&gt; Change the whole line. The whole line is deleted and puts you in insert mode.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C&lt;/code&gt; Change text from the cursor to the end of the line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ea&lt;/code&gt; Move cursor to the end of the word and enter insert mode to append text.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;y&lt;/code&gt; Yank (copy) word under cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Y&lt;/code&gt; Yank (copy) from the cursor to the end of the line.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;p&lt;/code&gt; or &lt;code&gt;P&lt;/code&gt; Paste the text you copied.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;r&lt;/code&gt; Replace the single character under the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;R&lt;/code&gt; Replace the characters under the cursor as you type. &lt;br&gt;
This is like pressing the insert key on the keyboard while in a document editing program such as Libreoffice or Microsoft word.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBWZnsvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/Pq0hGmFV/replace-text.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBWZnsvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/Pq0hGmFV/replace-text.gif" alt="replace-text.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.&lt;/code&gt; Repeat the last command by pressing the period character. This is one of the most useful commands in Vim.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;u&lt;/code&gt; Undo last command. You can press this key multiple times to go back in time.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~&lt;/code&gt; Toggle the case of the letter under the cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dd&lt;/code&gt; or &lt;code&gt;D&lt;/code&gt; To delete the whole line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--edw14fN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/KjCJxDMj/delete-whole-line.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--edw14fN3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/KjCJxDMj/delete-whole-line.gif" alt="delete-whole-line.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dw&lt;/code&gt; Delete current word under cursor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;d3w&lt;/code&gt; Delete three words.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;c2w&lt;/code&gt; Change two words. This deletes two words and puts you in insert mode.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;y2w&lt;/code&gt; Yank (copy) two words.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;xp&lt;/code&gt; Transpose letters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vhFA8ZJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/Kzmf8WV1/transpose-letters.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vhFA8ZJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/Kzmf8WV1/transpose-letters.gif" alt="transpose-letters.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#searching"&gt;
  &lt;/a&gt;
  Searching
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#this-is-how-you-search-for-a-previous-run-command"&gt;
  &lt;/a&gt;
  This is how you search for a previous run command.
&lt;/h3&gt;

&lt;p&gt;You can search for commands by pressing forward slash &lt;code&gt;/&lt;/code&gt; and typing a part of a command you ran.&lt;br&gt;
It will find the last command you ran with the matching string.&lt;/p&gt;

&lt;p&gt;I want to search for the last gunicorn command so I type &lt;code&gt;/gunicorn&lt;/code&gt; and press ENTER.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NzHOZ9GP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/VLLYC9pp/vim-search.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NzHOZ9GP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.postimg.cc/VLLYC9pp/vim-search.gif" alt="vim-search.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you enjoy using the Vim text editor you will be happy to know that you can also use a few Vim commands on the command line.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://github.com/brandon-wallace"&gt;Github&lt;/a&gt; and &lt;a href="https://dev.to/brandonwallace"&gt;DEV.to&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>vim</category>
      <category>bash</category>
      <category>linux</category>
    </item>
    <item>
      <title>Useful Git commands that may save your life</title>
      <author>Pratap Sharma</author>
      <pubDate>Fri, 11 Jun 2021 02:41:30 +0000</pubDate>
      <link>https://dev.to/pratap2210/useful-git-commands-that-may-save-your-life-3mg</link>
      <guid>https://dev.to/pratap2210/useful-git-commands-that-may-save-your-life-3mg</guid>
      <description>&lt;p&gt;Git commands aren't always easy. If they were, we would have these commands at our disposal. They would be super helpful for performing everyday tasks like creating or renaming a git branch, removing files, and undoing changes.&lt;/p&gt;

&lt;p&gt;In this post, I’m focusing on major git commands that gets all (almost) your work fulfilled.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-undo-the-most-recent-local-commits-in-git"&gt;
  &lt;/a&gt;
  How to undo the most recent local commits in Git?
&lt;/h2&gt;

&lt;p&gt;You can run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset HEAD~1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can even undo your commit but leave your files and your index:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt; HEAD~1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to permanently undo the commit and you have cloned some repository:&lt;br&gt;
To get commit id:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt; &amp;lt;commit_id&amp;gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin &amp;lt;branch_name&amp;gt; &lt;span class="nt"&gt;-f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-undo-a-public-commit"&gt;
  &lt;/a&gt;
  How to undo a public commit?
&lt;/h2&gt;

&lt;p&gt;You can just run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git revert HEAD
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-delete-a-git-branch-locally-and-remotely"&gt;
  &lt;/a&gt;
  How to delete a Git branch locally and remotely?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Deleting local branch
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch &lt;span class="nt"&gt;-d&lt;/span&gt; &amp;lt;branchname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Deleting remote branch
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin &lt;span class="nt"&gt;--delete&lt;/span&gt; &amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-revert-to-a-particular-commit"&gt;
  &lt;/a&gt;
  How to revert to a particular commit?
&lt;/h2&gt;

&lt;p&gt;To revert to a particular commit you'll need a commit id. To get a commit id just run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then copy the commit id you want to rever back to. And then run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git revert &amp;lt;commit-id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-undo-a-git-stash"&gt;
  &lt;/a&gt;
  How Undo a git stash?
&lt;/h2&gt;

&lt;p&gt;You can just run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash pop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and it will unstash your changes.&lt;/p&gt;

&lt;p&gt;In case you want to preserve the state of files (staged vs. working), use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git stash apply &lt;span class="nt"&gt;--index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-undo-git-add-before-commit"&gt;
  &lt;/a&gt;
  How to undo 'git add' before commit?
&lt;/h2&gt;

&lt;p&gt;You can undo &lt;code&gt;git add&lt;/code&gt; before commit with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;To unstage all due changes&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-rename-a-local-git-branch"&gt;
  &lt;/a&gt;
  How to rename a local Git branch?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch &lt;span class="nt"&gt;-m&lt;/span&gt; &amp;lt;oldname&amp;gt; &amp;lt;newname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To rename current branch
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git branch &lt;span class="nt"&gt;-m&lt;/span&gt; &amp;lt;newname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#how-to-discard-unstaged-changes-in-git"&gt;
  &lt;/a&gt;
  How to discard unstaged changes in Git?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;For all unstaged files
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;For a specific file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;--&lt;/span&gt; path/to/file/to/revert
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: -- here to remove argument ambiguation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-delete-all-tags-from-a-git-repository"&gt;
  &lt;/a&gt;
  How to delete all tags from a Git repository?
&lt;/h2&gt;

&lt;p&gt;To delete remote tags simply do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git tag &lt;span class="nt"&gt;-l&lt;/span&gt; | xargs &lt;span class="nt"&gt;-n&lt;/span&gt; 1 git push &lt;span class="nt"&gt;--delete&lt;/span&gt; origin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then delete the local copies of tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git tag | xargs git tag &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this post saved your time and life. If you liked the post, feel free to share it to help others find it!&lt;/p&gt;

&lt;p&gt;You may also want to read &lt;a href="https://pratapsharma.in/getting-started-with-git/"&gt;Getting Started with Git - A beginner's guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may also follow me on &lt;a href="https://www.linkedin.com/in/prataps22/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/Pratap2210"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;💌 If you’d like to receive more tutorials in your inbox, you can sign up for the newsletter &lt;a href="https://pratap.substack.com"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>git</category>
      <category>command</category>
      <category>guthub</category>
      <category>useful</category>
    </item>
    <item>
      <title>Top 5 DEV Comments from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 11 Jun 2021 02:25:46 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-from-the-past-week-3g38</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-from-the-past-week-3g38</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/krowser/how-to-become-a-successful-developer-4h2g"&gt;Becoming a successful developer&lt;/a&gt; is a long, complicated process. Thanks for adding to the conversation, &lt;a class="mentioned-user" href="https://dev.to/valeriavg"&gt;@valeriavg&lt;/a&gt;
 !&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/valeriavg"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--z3PT5xl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2fSvzvbJ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/473770/aad0a38a-ce60-457f-942d-1699421a16ef.jpeg" alt="valeriavg profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/valeriavg"&gt;
        &lt;span class="comment-username"&gt;Valeria&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/valeriavg/comment/1f71g" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 7
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I'd like to add one more advice: when asked to estimate how long would development take, always add enough time for testing and refining the solution. From my experience this takes more time than coding itself, unless you're making a prototype.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;No one's a fan of &lt;a href="https://dev.to/dragosgn/7-steps-to-become-an-expert-software-engineer-without-endless-online-courses-or-waiting-for-years-m8j"&gt;endless online courses&lt;/a&gt;, and neither is &lt;a class="mentioned-user" href="https://dev.to/keskyle17"&gt;@keskyle17&lt;/a&gt;
 ! Thanks for the tip, here!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/keskyle17"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2p6uwyp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lyIl8BN4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/617699/7169c190-6f91-4a0c-af57-b6e90ce6e295.jpeg" alt="keskyle17 profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/keskyle17"&gt;
        &lt;span class="comment-username"&gt;Chris Briggs&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/keskyle17/comment/1f57c" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 4
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Thanks. My one-liner advice:&lt;/p&gt;

&lt;p&gt;Get a personal project like a website underway, and build on it.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This is a great post on &lt;a href="https://dev.to/codewell/7-websites-to-practice-your-frontend-development-skills-54de"&gt;websites to practice frontend skills&lt;/a&gt; - thanks &lt;a class="mentioned-user" href="https://dev.to/lostgirljourney"&gt;@lostgirljourney&lt;/a&gt;
 for adding another to the list!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/lostgirljourney"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gOxqnr67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WAWdyBVc--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/447793/d0964699-6311-4bec-b59b-c3a13767dbc2.jpeg" alt="lostgirljourney profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/lostgirljourney"&gt;
        &lt;span class="comment-username"&gt;Falguni Sarkar&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/lostgirljourney/comment/1f62m" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 5
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;&lt;a href="https://devchallenges.io/" rel="nofollow"&gt;devChallenges.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is also one of the best platform to practice.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;A &lt;a href="https://dev.to/sbrevolution5/creating-a-toggleable-dark-mode-theme-ned"&gt;togglable dark mode theme&lt;/a&gt; is such a cool feature. Thanks to &lt;a class="mentioned-user" href="https://dev.to/ianwijma"&gt;@ianwijma&lt;/a&gt;
 for helping make the idea a reality!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/ianwijma"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OYs2v38f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GTRXwmMn--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/236705/64fcf45a-c90d-44d8-9f93-246e5a783cea.jpeg" alt="ianwijma profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/ianwijma"&gt;
        &lt;span class="comment-username"&gt;Ian Wijma&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/ianwijma/comment/1f4l5" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 4
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Hey, curious why you use jQuery for one piece of the code, where the rest of the code is just vanilla JS :D&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;loadDark&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;br&gt;

&lt;/div&gt;

&lt;p&gt;Could be replaced with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loadDark&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;br&gt;

&lt;/div&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://dev.to/techygeeky/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-283g"&gt;JavaScript tip&lt;/a&gt; fans, this article is for you!! Thanks for the additional bit of insight here, &lt;a class="mentioned-user" href="https://dev.to/martinmuzatko"&gt;@martinmuzatko&lt;/a&gt;
!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/martinmuzatko"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8W9aGmlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7J7sm3R4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/32434/4562fd0b-02e3-4748-ba61-dcba9e7e7eb8.jpeg" alt="martinmuzatko profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/martinmuzatko"&gt;
        &lt;span class="comment-username"&gt;Martin Muzatko&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/martinmuzatko/comment/1f7oh" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Jun 8
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;min: &lt;code&gt;Math.min(...numbers)&lt;/code&gt;&lt;br&gt;
max: &lt;code&gt;Math.max(...numbers)&lt;/code&gt;&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ✌&lt;/p&gt;
&lt;/div&gt;

</description>
      <category>bestofdev</category>
    </item>
  </channel>
</rss>
