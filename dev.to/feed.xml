<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React Hooks calling child component method from parent</title>
      <author>Asif Vora</author>
      <pubDate>Wed, 25 Aug 2021 11:13:49 +0000</pubDate>
      <link>https://dev.to/007_dark_shadow/react-hooks-calling-child-component-method-from-parent-144p</link>
      <guid>https://dev.to/007_dark_shadow/react-hooks-calling-child-component-method-from-parent-144p</guid>
      <description>&lt;p&gt;For calling Child Component method from parent component in hooks we are using &lt;a href="https://reactjs.org/docs/react-api.html#reactforwardref"&gt;React.forwardRef&lt;/a&gt; and  &lt;a href="https://reactjs.org/docs/hooks-reference.html#useimperativehandle"&gt;React.useImperativeHandle&lt;/a&gt; hooks from React.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reactforwardref"&gt;
  &lt;/a&gt;
  React.forwardRef
&lt;/h1&gt;

&lt;p&gt;React.forwardRef creates a React component that forwards the ref attribute it receives to another component below in the tree. This technique is not very common but is particularly useful in two scenarios:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components"&gt;Forwarding refs to DOM components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-in-higher-order-components"&gt;Forwarding refs in higher-order-components&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;React.forwardRef accepts a rendering function as an argument. React will call this function with props and ref as two arguments. This function should return a React node.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hp6ZlWpI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxmcadgo0wpdk28z25h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hp6ZlWpI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxmcadgo0wpdk28z25h.png" alt="Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more information, see &lt;a href="https://reactjs.org/docs/forwarding-refs.html"&gt;forwarding refs&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reactuseimperativehandle"&gt;
  &lt;/a&gt;
  React.useImperativeHandle
&lt;/h1&gt;

&lt;p&gt;useImperativeHandle customizes the instance value that is exposed to parent components when using ref. As always, imperative code using refs should be avoided in most cases. useImperativeHandle should be used with &lt;a href="https://reactjs.org/docs/react-api.html#reactforwardref"&gt;forwardRef&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6aBiFr_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6bgjjb1e6dymi7rvpp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6aBiFr_Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6bgjjb1e6dymi7rvpp4.png" alt="Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#here-comes-the-important-part-to-call-the-child-method"&gt;
  &lt;/a&gt;
  Here comes the important part to call the child method.
&lt;/h1&gt;

&lt;p&gt;Now we will just render the child component in the parent and create a ref using &lt;a href="https://reactjs.org/docs/hooks-reference.html#useref"&gt;React.useRef&lt;/a&gt; with that the getAlert() function will be called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useImperativeHandle&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// We need to wrap component in `forwardRef` in order to gain&lt;/span&gt;
&lt;span class="c1"&gt;// access to the ref object that is assigned using the `ref` prop.&lt;/span&gt;
&lt;span class="c1"&gt;// This ref is passed as the second parameter to the function component.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;forwardRef&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getAlert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;getAlert from Child&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="c1"&gt;// The component instance will be extended&lt;/span&gt;
  &lt;span class="c1"&gt;// with whatever you return from the callback passed&lt;/span&gt;
  &lt;span class="c1"&gt;// as the second argument&lt;/span&gt;
  &lt;span class="nx"&gt;useImperativeHandle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;getAlert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Count&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getAlert&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// In order to gain access to the child component instance,&lt;/span&gt;
  &lt;span class="c1"&gt;// you need to assign it to a `ref`, so we call `useRef()` to get one&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;childRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Child&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;childRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;childRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAlert&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;Parent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Child component is rendered and a ref is created using &lt;a href="https://reactjs.org/docs/hooks-reference.html#useref"&gt;React.useRef&lt;/a&gt; named childRef. The button we created in parent component is now used to call the child component function childRef.current.getAlert();&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvJolyi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqj4fhltc07zz7aylye6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvJolyi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tqj4fhltc07zz7aylye6.png" alt="Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;https://reactjs.org/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://stackoverflow.com/"&gt;https://stackoverflow.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>functional</category>
    </item>
    <item>
      <title>Best VS Code extensions for Front End Dev</title>
      <author>Asif</author>
      <pubDate>Wed, 25 Aug 2021 10:57:17 +0000</pubDate>
      <link>https://dev.to/labib/best-vs-code-extension-for-front-end-dev-dj4</link>
      <guid>https://dev.to/labib/best-vs-code-extension-for-front-end-dev-dj4</guid>
      <description>&lt;p&gt;VsCode extensions are the backbone on the text editor. You can add language, keymaps, plugins, debuggers and many other tools by the help of extension. Here are some useful or "Must have" extensions for front end dev like me :) &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-code-snippet"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets"&gt;Javascript Code Snippet&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zrB0HabK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fish276qkuv7zes1093r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zrB0HabK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fish276qkuv7zes1093r.png" alt="JS SNIPPET"&gt;&lt;/a&gt;&lt;br&gt;
This extension contains code snippets for JavaScript in ES6 syntax for Vs Code editor (supports both JavaScript and TypeScript).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#polacode"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=pnp.polacode"&gt;Polacode&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Need asthetic screenshots of your code like this one ? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lryco-mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbvfhbd6oz7jxv59ud93.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lryco-mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbvfhbd6oz7jxv59ud93.gif" alt="Polacode GIf"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Polacode is here for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_cMr-RmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9v43gfw1hfp0wgcivkbe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_cMr-RmE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9v43gfw1hfp0wgcivkbe.png" alt="Polacode sample"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#all-autocomplete"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=Atishay-Jain.All-Autocomplete"&gt;All Autocomplete&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BHnYzMn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo6bt6wlbm28trvjv78b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BHnYzMn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo6bt6wlbm28trvjv78b.gif" alt="All autocomplete GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best autocomplete to save your time ! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#better-comments"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;Better Comments&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--74KdG1UT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9h69fjioomsgccsktvn1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--74KdG1UT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9h69fjioomsgccsktvn1.jpg" alt="Better comments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make more human friendly and readable comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#auto-import-es6-ts-jsx-tsx"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=NuclleaR.vscode-extension-auto-import"&gt;Auto Import - ES6, TS, JSX, TSX&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X9aTS9q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxekhfk43s7mjogv26k5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X9aTS9q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rxekhfk43s7mjogv26k5.gif" alt="Auto import GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Automatically finds, parses and provides code actions and code completion for all available imports. Works with JavaScript (ES6) and TypeScript (TS)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#auto-rename-tag"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;Auto Rename Tag&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thie6hPw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dl65z9dcun6ygplnkl3f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thie6hPw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dl65z9dcun6ygplnkl3f.png" alt="auto rename tags"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Automatically rename HTML tags. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bracket-pair-colorizer-2"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?"&gt;Bracket Pair Colorizer 2&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tveNT8S---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bx4o2r1gks8c09ltk18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tveNT8S---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bx4o2r1gks8c09ltk18.png" alt="Bracket colorizor "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This indetifies the matching brackets and colorizing to identify easily. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code-runner"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner"&gt;Code Runner&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PzQpNCwV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b5x102tbz5g9sbawxo4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PzQpNCwV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b5x102tbz5g9sbawxo4.jpg" alt="Code runner"&gt;&lt;/a&gt;&lt;br&gt;
Runs any code !&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code-spell-checker"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker"&gt;Code Spell Checker&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3IzRZQWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz7wnyuhtrs6g2vk2ge4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3IzRZQWF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz7wnyuhtrs6g2vk2ge4.gif" alt="Spell checker gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;check your english spellings in the code&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#es7-reactreduxgraphqlreactnative-snippets"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=dsznajder.es7-react-js-snippets"&gt;ES7 React/Redux/GraphQL/React-Native snippets&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IU3AMXk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a5m61k9ut1tt9zzqaiw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IU3AMXk3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4a5m61k9ut1tt9zzqaiw.gif" alt="React snippet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JavaScript and React/Redux snippets in ES7+ with Babel plugin features for VS Code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#google-fonts"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=lior-chamla.google-fonts"&gt;Google Fonts&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6pzf5S2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gcjd426xgk9pfxge6r3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6pzf5S2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gcjd426xgk9pfxge6r3.gif" alt="Google fonts gif"&gt;&lt;/a&gt;&lt;br&gt;
Browse google fonts from VSCode and also get the CSS &lt;code&gt;import&lt;/code&gt; instantly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#live-server"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OqX_bnS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2fihvspq4f8u6hg3z5d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OqX_bnS5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2fihvspq4f8u6hg3z5d.gif" alt="Live server GIF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This browser add-on is an extension for a developer tool in VS Code editor (Live Server). With this add-on installed, along with the VS Code extension, it gives you a functionality to automatically update your website on save; for other files than just &lt;code&gt;.htm&lt;/code&gt; and &lt;code&gt;.html&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#import-cost"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost"&gt;Import Cost&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BLa5riOd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk3ut41pu5vn9t6bcl5t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BLa5riOd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk3ut41pu5vn9t6bcl5t.jpg" alt="Import Cost"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This extension will display inline in the editor the size of the imported package. The extension utilizes webpack with babili-webpack-plugin in order to detect the imported size&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tokyo-night-theme"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=enkia.tokyo-night"&gt;Tokyo night (theme)&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--daosynV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lgncuupwtfg1frwkn28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--daosynV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lgncuupwtfg1frwkn28.png" alt="Tokyo nights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My favourite syntax theme in vscode. :3 :3&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  🎶🎶 THE END 🎶🎶
&lt;/h3&gt;

</description>
      <category>webdev</category>
      <category>vscode</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Various methods in Python to check the type of an object</title>
      <author>hrishikesh1990</author>
      <pubDate>Wed, 25 Aug 2021 10:54:51 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/various-methods-in-python-to-check-the-type-of-an-object-4jcc</link>
      <guid>https://dev.to/hrishikesh1990/various-methods-in-python-to-check-the-type-of-an-object-4jcc</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how to use Python to check the type of objects. We take a look at all the various methods that can be used.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-check-type"&gt;Python check type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-the-raw-type-endraw-function"&gt;Using the type() function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-raw-isinstance-endraw-"&gt;Using isinstance()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr-how-to-check-the-type-of-an-object-in-python"&gt;
  &lt;/a&gt;
  TL;DR - How to check the type of an object in Python?
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;type()&lt;/code&gt; function takes in an argument and returns the type of the object. Apart from this method the &lt;code&gt;isinstance()&lt;/code&gt; function can check if an argument is an instance of a particular class or type. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-check-type"&gt;
  &lt;/a&gt;
  Python check type:
&lt;/h2&gt;

&lt;p&gt;Unlike most programming languages Python does not require you to specify the data type of a particular object. Python assigns them during compilation. Experienced developers may not have a problem identifying data type, however, beginners might find this a little tricky. &lt;/p&gt;

&lt;p&gt;Python facilitates this with the help of two in-built functions. We have explained both these methods in detail below. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-raw-type-endraw-function"&gt;
  &lt;/a&gt;
  Using the &lt;code&gt;type()&lt;/code&gt; function:
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;type()&lt;/code&gt; is used to check the type of an object. This function exists for this exact purpose and is the most commonly used method. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;type()&lt;/code&gt; method takes in an argument (object) and returns the class type assigned to the particular object. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-syntax-of-raw-type-endraw-is-as-follows"&gt;
  &lt;/a&gt;
  The Syntax of &lt;code&gt;type()&lt;/code&gt; is as follows:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code-to-check-type-using-type"&gt;
  &lt;/a&gt;
  Code to check type using type()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;

&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mi"&gt;1991&lt;/span&gt;

&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.9&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s"&gt;'&amp;gt;
&amp;lt;class '&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="s"&gt;'&amp;gt;
&amp;lt;class '&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="s"&gt;'&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how we use &lt;code&gt;type()&lt;/code&gt; to check the type of an object. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-raw-isinstance-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;isinstance()&lt;/code&gt;:
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Isinstance()&lt;/code&gt; can also be used to check type. However, unlike the &lt;code&gt;type()&lt;/code&gt; function here we pass the classinfo along with the object the function returns a boolean value. &lt;/p&gt;

&lt;p&gt;This will be true if the object belongs to a particular class and vice versa. However, do keep in mind that it only returns a boolean value in case it’s true and would not return the correct type in case it is false. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-raw-isinstance-endraw-"&gt;
  &lt;/a&gt;
  Syntax of &lt;code&gt;isinstance()&lt;/code&gt;:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code-using-isinstance"&gt;
  &lt;/a&gt;
  Code using isinstance():
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Python"&lt;/span&gt;
&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="mi"&gt;1991&lt;/span&gt;
&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.9&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As the classinfo for version was passed as int, the isinstance method returns a false. This is how you use the &lt;code&gt;isinstance()&lt;/code&gt; method. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;type()&lt;/code&gt; method is the most recommended method to check the type of an object. The &lt;code&gt;isinstance()&lt;/code&gt; method stands out as it can be used to check if an object is part of a class as well. &lt;/p&gt;

&lt;p&gt;Hence, I would always recommend using the &lt;code&gt;type()&lt;/code&gt; method to check the type of an object. &lt;/p&gt;

&lt;p&gt;Do let me know your thoughts in the comments section below. :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to protect your time at work?</title>
      <author>Neha Sharma </author>
      <pubDate>Wed, 25 Aug 2021 10:38:36 +0000</pubDate>
      <link>https://dev.to/hellonehha/how-to-protect-your-time-at-work-1n1</link>
      <guid>https://dev.to/hellonehha/how-to-protect-your-time-at-work-1n1</guid>
      <description>&lt;p&gt;Time management and being productive is a trait everyone wants to excel in. Since the pandemic, this is one of the challenging skills as now everyone is just one ping or call away. The line between work and personal is no longer the same with the weekend and weekdays.&lt;/p&gt;

&lt;p&gt;As an Engineering manager, it is a constant battle to manage my time to get more time to do work beyond meetings and calls. &lt;/p&gt;

&lt;p&gt;There are a few hacks I learned in 2 years. I will give credit to my ex-manager. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-block-calendar-live-by-calendar"&gt;
  &lt;/a&gt;
  1. Block Calendar (live by calendar)
&lt;/h1&gt;

&lt;p&gt;At work, I live by the calendar. One skill I used to take it lightly. &lt;em&gt;Eg: I never bother to block time to have a discussion with a fellow teammate or for lunch or to request to block my time for any discussion.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My ex-manager taught me that how to live by a calendar and plan it (pre-pandemic). I started blocking my calendar for commute time (morning and evening), lunchtime, focus time, code reviews, etc., and requesting everyone to block my calendar prior.   &lt;/p&gt;

&lt;p&gt;It helped me in planning the week, and days prior. It saved me from ad-hoc meetings, calls. As a result, I was able to save time for myself by planning my week/day. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Eg: I used to push all my meetings to Mon-Wed. I keep my Thursday and Friday free from meetings. It helped me to focus on my work.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-agendadriven-meetings"&gt;
  &lt;/a&gt;
  2.  Agenda-driven meetings
&lt;/h1&gt;

&lt;p&gt;I always request an agenda with the meetings invites. If I am sending an invite then I make sure :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clear agenda is mentioned&lt;/li&gt;
&lt;li&gt;Approx time to be spent on each topic is allocated&lt;/li&gt;
&lt;li&gt;There are host(s) names against each topic&lt;/li&gt;
&lt;li&gt;Any pre-research etc. is added.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It helped not just me but attendees also to have productive meetings and close the next step. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Always respond to the meeting invite. I have observed that a lot of folks don't respond to the meeting invite ever. If you decline, add the reason also.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#3-moms-minute-of-meetings"&gt;
  &lt;/a&gt;
  3.  MOMs (Minute of Meetings)
&lt;/h1&gt;

&lt;p&gt;I always take MOM (minutes of meetings) or I request someone to do and share. These are my cheat notes of the meeting. Even if I am not in the meeting, I know what happened. I saved the time of asking around and everyone is on the same page too.  It is important for all meetings. As a developer, I found the value of this in the tech discussions a lot.&lt;/p&gt;

&lt;p&gt;E.g., of MOM:&lt;/p&gt;

&lt;p&gt;Attendees: XXX, XXX, XXXX&lt;br&gt;
MOM by: YYY&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cannot take &lt;em&gt;A approach&lt;/em&gt; as this could hamper the performance&lt;/li&gt;
&lt;li&gt;*B approach *would require more time &lt;/li&gt;
&lt;li&gt;XXX to share the metric of performance&lt;/li&gt;
&lt;li&gt;All agreed to meet again after 2 weeks with the numbers - performance score, the time we have to release at UAT.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#4-am-i-required"&gt;
  &lt;/a&gt;
  4. Am I required?
&lt;/h1&gt;

&lt;p&gt;If I get a meeting invite which I feel I might not require I always ask the host - "Am I required"?&lt;/p&gt;

&lt;p&gt;If someone else can cover on my behalf, or it could be just an email. If yes, then you know what to do :) &lt;/p&gt;

&lt;p&gt;It is crucial to protect your time, and calendar (just like a baby) 😂.&lt;/p&gt;

&lt;p&gt;Cancel the meeting with the reason and send the email with the details/discussion.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Add optional guests to meetings. so they know their presence is not mandatory&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#5-identify-your-focus-time"&gt;
  &lt;/a&gt;
  5. Identify your '&lt;em&gt;focus&lt;/em&gt;' time
&lt;/h1&gt;

&lt;p&gt;Another hack for me to identify my preferred time for '&lt;em&gt;focus&lt;/em&gt;'. I call it my '&lt;em&gt;focus time&lt;/em&gt;'. I keep that free from every commitment and work without distractions. I keep that time blocked in my calendar and out myself into DND.&lt;/p&gt;

&lt;p&gt;I prefer working in the early morning and that time is booked for me. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-use-dnd-mode-do-not-disturb"&gt;
  &lt;/a&gt;
  6. Use DND mode (Do Not Disturb)
&lt;/h1&gt;

&lt;p&gt;It is hard to focus on the work when pings are coming non-stop. &lt;em&gt;Async communication&lt;/em&gt; is a blessing. Still, constant pings are distracting. &lt;/p&gt;

&lt;p&gt;So, moving to DND mode while working is a good hack to focus and finish the work. Thanks to the messenger app(s) for introducing this. It lets me focus on my task without distractions 🥳.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Use DND mode at your focus time (which we discussed at #5)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#7-follow-your-todo-list-and-priority"&gt;
  &lt;/a&gt;
  7. Follow your to-do list and priority
&lt;/h1&gt;

&lt;p&gt;I always make my to-do list with priority. &lt;/p&gt;

&lt;p&gt;1) Batch similar tasks. &lt;em&gt;Eg: sending emails to XYZ&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2) Strike out the tasks finished&lt;/p&gt;

&lt;p&gt;3) Put priority against every to-do. It helps in clarity to what is urgent and what is not&lt;/p&gt;

&lt;p&gt;4) If anything is left. You can track the spillovers. More spillovers mean the need to change the strategy of managing time.&lt;/p&gt;

&lt;p&gt;5) Any task I can delegate to someone? &lt;/p&gt;

&lt;p&gt;Again with this list, I have clarity of the work I have on my plate, what is the priority, what can be a push towards the end of the week, if any tasks/item has dependency then I try to close that ASAP.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🤩 Writing down things is a great hack to let go of the task of 'remembering' something.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#8-take-breaks"&gt;
  &lt;/a&gt;
  8. Take breaks
&lt;/h1&gt;

&lt;p&gt;Taking breaks between the meetings is very essential. How does it help in time management? Well, it helps me not to get burnout. The worst thing I can do to myself is getting stressed and burnt out. It is crucial to take small breaks between the meetings and work. Having a 5 mins break and walking around is a no-cost and highly effective. &lt;/p&gt;

&lt;p&gt;Try it 😊&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-1-day-no-meeting"&gt;
  &lt;/a&gt;
  9. 1 day no meeting
&lt;/h1&gt;

&lt;p&gt;As I told you in point 1, I keep my meetings from Mon-Wed and focus on the tasks that do not require meetings such as coding. &lt;/p&gt;

&lt;p&gt;My Friday is a no-meeting day to finish all pending work. I focus on the non-meetings tasks such as coding, doing code reviews, working on new features, etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Focus-time and DND come here in handy. I also get myself ready for the next week before logging off for the day.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#10-timebound-tasks"&gt;
  &lt;/a&gt;
  10.  Time-bound tasks
&lt;/h1&gt;

&lt;p&gt;One of my problem areas is spending endless time on 1 task and end up with a pile of unfinished work. I started time-bounding all my tasks. I just put a 25 min clock and focus to finish the task. If after 25 mins I am not able to then I take a call should I spend the next 25 mins to finish it or what should be my next step?&lt;/p&gt;

&lt;p&gt;It helps me in:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Avoiding endless time on my task&lt;/li&gt;
&lt;li&gt;Understand how much time I am spending on every task&lt;/li&gt;
&lt;li&gt;Take the call should I keep going on or ask for help&lt;/li&gt;
&lt;li&gt;Most importantly at the end of the day I know where my 8-9 hours went :D &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;** 📝 Quick Summary:**&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Block calendar&lt;/li&gt;
&lt;li&gt;Agenda driven meetings&lt;/li&gt;
&lt;li&gt;MOMs&lt;/li&gt;
&lt;li&gt;Am I required?&lt;/li&gt;
&lt;li&gt;Identify your 'focus' time&lt;/li&gt;
&lt;li&gt;Use DND mode&lt;/li&gt;
&lt;li&gt;Follow your to-do list and priority&lt;/li&gt;
&lt;li&gt;Take breaks&lt;/li&gt;
&lt;li&gt;1 day no meeting - Meeting free workday&lt;/li&gt;
&lt;li&gt;Time-bound tasks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;If you have noticed I don't use any app or extension to increase my productivity. If you are using any such app/extension do share the name and how it helps you?&lt;/p&gt;

&lt;p&gt;❤️ Thank you for reviewing it   &lt;a href="https://twitter.com/nchiarora"&gt;@nchiarora&lt;/a&gt;  ,  &lt;a href="https://twitter.com/sureshdsk"&gt;@sureshdsk&lt;/a&gt; ,  &lt;a href="https://twitter.com/jain_harshit"&gt;@jain_harshit&lt;/a&gt; , and  &lt;a href="https://twitter.com/RawHeatG"&gt;@RawHeatG&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Happy Working!!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Best Design Agency Landing page</title>
      <author>Md Abu Taher</author>
      <pubDate>Wed, 25 Aug 2021 10:28:08 +0000</pubDate>
      <link>https://dev.to/helloabutaher/best-design-agency-landing-page-3pog</link>
      <guid>https://dev.to/helloabutaher/best-design-agency-landing-page-3pog</guid>
      <description>&lt;p&gt;Hello Everyone&lt;br&gt;
Here we come with another design.&lt;br&gt;
Design Agency Landing page❤️&lt;/p&gt;

&lt;p&gt;Your feedback will be appreciated❤️.&lt;/p&gt;

&lt;p&gt;Find it on here 👇&lt;br&gt;
&lt;a href="https://www.uihut.com/web-template/template"&gt;UIHUT&lt;/a&gt;&lt;br&gt;
Download over 12000+ premium resources &lt;br&gt;
On: &lt;a href="http://www.uihut.com"&gt;www.uihut.com&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to contribute blog posts for LitmusChaos?</title>
      <author>Prithvi</author>
      <pubDate>Wed, 25 Aug 2021 10:26:03 +0000</pubDate>
      <link>https://dev.to/prithvi1307/how-to-contribute-blog-posts-for-litmuschaos-3cnp</link>
      <guid>https://dev.to/prithvi1307/how-to-contribute-blog-posts-for-litmuschaos-3cnp</guid>
      <description>&lt;p&gt;As the LitmusChaos community continues to grow and recently celebrated completing the milestone of 50 blog posts on its &lt;a href="https://dev.to/t/litmuschaos/latest"&gt;DEV.to blog page&lt;/a&gt;, I would like to congratulate the community for helping Chaos Engineering reach more and more people out there with their smallest of contributions in the form of blog posts, tweets, videos, and other community content.&lt;br&gt;
&lt;a href="https://github.com/litmuschaos/litmus/releases/tag/2.0.0"&gt;LitmusChaos 2.0&lt;/a&gt; is out now with a lot more new features, experiments, enhancements and bug fixes to make your Chaos Engineering journey easier and better. Induce Chaos Engineering tests in a simpler, easier, &amp;amp; faster way with LitmusChaos 2.0!&lt;br&gt;
Don't forget to write down your experience or about a feature through a blog to let the community know!&lt;/p&gt;

&lt;p&gt;While most of the present blogs published on LitmusChaos have been by the maintainers and the contributors, it is the need of the hour for the community to come forward and contribute learnings, ideas, features, and principles of LitmusChaos for the betterment of the project as well as the overall Chaos Community.&lt;br&gt;
If you are interested in contributing a blog for the LitmusChaos project, do read the blog find out how you can contribute a blog post for LitmusChaos…&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#topics-to-cover"&gt;
  &lt;/a&gt;
  Topics to cover
&lt;/h1&gt;

&lt;p&gt;There are various topics and ideas one can consider to write a blog post on. As the center of interest is on Litmus and Chaos Engineering as a value, hence, the ideations should focus on the above before anything else. There are plenty of topics that can be covered as blogs regarding the LitmusChaos project. Let us take a look at some of the potential topics that can be covered as blogs and the questions that can be answered:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#features-of-litmuschaos"&gt;
  &lt;/a&gt;
  Features of LitmusChaos
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;How has the Litmus ChaosHub eased your experience?&lt;/li&gt;
&lt;li&gt;What role does GitOps play in the Chaos Engineering ecosystem?&lt;/li&gt;
&lt;li&gt;How has the LitmusChaos SDK helped you Bring your own Chaos to your infrastructure?&lt;/li&gt;
&lt;li&gt;Chaos Workflows have helped ease inducing Chaos Engineering use cases.&lt;/li&gt;
&lt;li&gt;What are the benefits of LitmusChaos being multi-tenant?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#your-experience-using-litmuschaos"&gt;
  &lt;/a&gt;
  Your Experience using LitmusChaos
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;How You configured LitmusChaos in your environment?&lt;/li&gt;
&lt;li&gt;How does LitmusChaos fit in your architecture?&lt;/li&gt;
&lt;li&gt;How does LitmusChaos fit in your use case?&lt;/li&gt;
&lt;li&gt;What can be improved with LitmusChaos?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-litmuschaos-community"&gt;
  &lt;/a&gt;
  The LitmusChaos Community
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Translate a meetup/webinar on Litmus into a blog&lt;/li&gt;
&lt;li&gt;Why is community support vital in making an open source/ cloud-native project successful?&lt;/li&gt;
&lt;li&gt;What makes the LitmusChaos community amazing and what could be done better?&lt;/li&gt;
&lt;li&gt;Things to look forward to with LitmusChaos 2.0&lt;/li&gt;
&lt;li&gt;What should be the roadmap ahead for Chaos Engineering and LitmusChaos?&lt;/li&gt;
&lt;li&gt;Cover a LitmusChaos experiment or a Chaos Engineering scenario built using Litmus&lt;/li&gt;
&lt;li&gt;Cover a Gameday you ran using LitmusChaos&lt;/li&gt;
&lt;li&gt;Jot down your encounter of running Chaos in production with LitmusChaos. The pros and cons of it.&lt;/li&gt;
&lt;li&gt;Comparison blog on LitmusChaos with other toolsets. Pros &amp;amp; Cons.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#running-litmuschaos-on-different-infrastructures"&gt;
  &lt;/a&gt;
  Running LitmusChaos on different infrastructures
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Running LitmusChaos on Kubernetes infrastructures&lt;/li&gt;
&lt;li&gt;Running LitmusChaos on AWS, Azure, GCP-based infrastructures&lt;/li&gt;
&lt;li&gt;Running LitmusChaos on VMs&lt;/li&gt;
&lt;li&gt;Running Litmus on Baremetals&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#integration-with-different-projects"&gt;
  &lt;/a&gt;
  Integration with different projects
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;How did you run chaos and validate SLOs with Litmus &amp;amp; Keptn?&lt;/li&gt;
&lt;li&gt;Your experience of running LitmusChaos GitHub Actions or GitLab templates.&lt;/li&gt;
&lt;li&gt;Ideas on integrating Litmus with other CNCF or Cloud-Native projects&lt;/li&gt;
&lt;li&gt;A deep-dive, tutorial, or guide on using LitmusChaos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other than the topics stated above, there are many permutations and combinations which can form a blog. You can author mini-blogs covering a particular sub-topic or feature or can curate a series of blogs followed by a meta-blog which will be of interest to the Litmus community as well as to folks practicing or looking forward to Chaos Engineering.&lt;br&gt;
Check out the LitmusChaos blog page to grab an idea of the blogs already published and find the topic you can cover.&lt;/p&gt;

&lt;p&gt;In case you are not sure about the topic, feel free to reach out on Slack (We are on the #litmus channel of the Kubernetes slack) or you can tag &lt;a href="https://twitter.com/LitmusChaos"&gt;@LitmusChaos on Twitter&lt;/a&gt; and ask. Worst case scenario, you can &lt;a href="https://www.linkedin.com/in/prithvi1307/"&gt;DM me on LinkedIn&lt;/a&gt;! :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-contribute"&gt;
  &lt;/a&gt;
  How to contribute?
&lt;/h1&gt;

&lt;p&gt;You can contribute blogs on both DEV.to as well as Medium as both the blog platforms feature Litmus blogs.&lt;br&gt;
Majorly, Litmus-related blogs are hosted on DEV.to. &lt;br&gt;
You can find the previously published articles here: &lt;a href="https://dev.to/t/litmuschaos/latest"&gt;https://dev.to/t/litmuschaos/latest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E1De05mX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6ryfv94pnxb74f2cs8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E1De05mX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6ryfv94pnxb74f2cs8u.png" alt="LitmusChaos on DEV"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the image above, the blogs have been published using the tag: #litmuschaos. And most of them also lie under the LitmusChaos publication. Let’s find out how you can publish on DEV first.&lt;/p&gt;

&lt;p&gt;Start by creating a new post by clicking the “Create Post” button on the top-right corner of the page. You will be redirected to a new blog draft where you can add a title, up to 4 tags, and then the blog content.&lt;br&gt;
In the tags section add one of the tags as “litmuschaos”. This ensures that your blog is published under the Litmus blogs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lg4Tduhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19nho8w7dzmkdxvc96n7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lg4Tduhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19nho8w7dzmkdxvc96n7.png" alt="LitmusChaos Tag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once published, the blog can be added under the LitmusChaos DEV publication&lt;br&gt;
&lt;a href="https://dev.to/litmus-chaos"&gt;https://dev.to/litmus-chaos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z16aZhHg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k27h96t17hu3ilalgo8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z16aZhHg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k27h96t17hu3ilalgo8u.png" alt="Chaos Engineering tool"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Further you can also contribute blogs on the Medium platform as many of you prefer writing blogs on Medium!&lt;br&gt;
On Medium, one can contribute blogs under the LitmusChaos Medium Publication.&lt;br&gt;
&lt;a href="https://medium.com/litmus-chaos"&gt;https://medium.com/litmus-chaos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sGSTU76H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdtssitgogsyq04zr3nh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sGSTU76H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdtssitgogsyq04zr3nh.png" alt="LitmusChaos on Medium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case you are are contributing blogs on any other platforms other than DEV.to or Medium, feel free to share the same with us on the Slack channel or tag us on Twitter with your blog!&lt;/p&gt;

&lt;p&gt;Once you are finished with the draft, you can share the draft with maintainers or the community leaders of the project to confirm facts and then can go ahead publishing the blog post. As the next steps, we will promote it on our Slack channel and other social media platforms and communities.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In an open source community, contributing blogs is an important aspect and as a matter of fact is absolutely counted as a major contribution. As a community lead of the LitmusChaos CNCF project, I invite you to write blogs for the project to put forward your understandings and learning and further help it grow. Chaos Engineering is growing everyday and such blogs help the Chaos Engineering technology further reach the community!&lt;/p&gt;

&lt;p&gt;Join the &lt;strong&gt;#litmus&lt;/strong&gt; slack channel on the &lt;a href="https://slack.k8s.io/"&gt;Kubernetes Slack Space&lt;/a&gt; to be a part of the community!&lt;/p&gt;

&lt;p&gt;Don't forget to check out the &lt;a href="https://github.com/litmuschaos/litmus"&gt;LitmusChaos GitHub repo&lt;/a&gt; and drop a star and add it to your watch list to stay connected on GitHub! Happy Contributing! :)&lt;br&gt;
Below are some links to important resources to get started with Litmus:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://litmuschaos.io/"&gt;LitmusChaos Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.litmuschaos.io/"&gt;LitmusChaos Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCa57PMqmz_j0wnteRa9nCaw"&gt;LitmusChaos on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>litmuschaos</category>
      <category>kubernetes</category>
      <category>cloudnative</category>
      <category>devops</category>
    </item>
    <item>
      <title>Creating The Sign Up Page Part I</title>
      <author>Hannah</author>
      <pubDate>Wed, 25 Aug 2021 10:03:13 +0000</pubDate>
      <link>https://dev.to/earthcomfy/creating-a-django-registration-login-app-part-ii-3k6</link>
      <guid>https://dev.to/earthcomfy/creating-a-django-registration-login-app-part-ii-3k6</guid>
      <description>&lt;p&gt;Hello, glad to see you here again. In today's part of the series, we are going to create the sign up page.&lt;/p&gt;




&lt;p&gt;Okay to create users we need a model right, we need to define what kind of attributes users should have. Django comes with a built in User model whose primary attributes are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;username&lt;/li&gt;
&lt;li&gt;password&lt;/li&gt;
&lt;li&gt;email&lt;/li&gt;
&lt;li&gt;first_name&lt;/li&gt;
&lt;li&gt;last_name&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we want our users to have more attributes than this built in model gives us, there are a couple of ways to do that and we will see one way in the future when we create a user profile. But for now we are using the Django User model as it is so we should be fine.&lt;/p&gt;

&lt;p&gt;Next, we need a form that will be displayed to the users, validate the data and save it to the database. Luckily we don't have to reinvent the wheel because Django has a built in easy to use UserCreationForm. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;UserCreationForm is a form that creates a user, with no privileges, from the given username and password. - &lt;a href="https://docs.djangoproject.com/en/1.8/_modules/django/contrib/auth/forms/"&gt;docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Looks good, but what if we want to include extra fields in our form and get other information about the user upon sign up? &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For that, we can just simply extend the built in model form and add more fields. I'm going to add email, firstname, and lastname of the user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't forget that the fields am adding are already in the User model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create forms.py module inside the users app and first let's import the necessary dependencies.&lt;/p&gt;

&lt;p&gt;forms.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UserCreationForm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Forms in Django is a class whose fields map to HTML form elements. &lt;/li&gt;
&lt;li&gt;forms class has different fields for handling different types of data. For example, CharField, DateField... Check out the &lt;a href="https://docs.djangoproject.com/en/3.2/ref/forms/fields/#built-in-field-classes"&gt;docs&lt;/a&gt; here to look at more of these fields. &lt;/li&gt;
&lt;li&gt;These form fields are represented to the user as an HTML widget (Widgets render HTML form elements) therefore unless we explicitly specify the widget for our form field, Django will use default widgets which may not look that good.&lt;/li&gt;
&lt;li&gt;By overriding the default widget for the form field, we can bootstrapify our form fields.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;forms.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UserCreationForm&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserCreationForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# fields we want to include and customize in our form
&lt;/span&gt;    &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                 &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                 &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'First Name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                               &lt;span class="s"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'form-control'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                               &lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="n"&gt;last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Last Name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                              &lt;span class="s"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'form-control'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                              &lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                               &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                               &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                             &lt;span class="s"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'form-control'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                             &lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EmailField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                             &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                           &lt;span class="s"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'form-control'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                           &lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="n"&gt;password1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'form-control'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s"&gt;'data-toggle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="n"&gt;password2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Confirm Password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'form-control'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s"&gt;'data-toggle'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="p"&gt;}))&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'first_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'last_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'password1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'password2'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;I added an id for the password fields because we are gonna use a plugin that shows password hide/show icon - you know that weird looking eye icon. But more on that later when we create the template.&lt;/li&gt;
&lt;li&gt;Under Meta class we can create the link between our model's fields and the different fields we want to have in our form(order matters).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alright! Let's head over to &lt;em&gt;views.py&lt;/em&gt; and use the form we just created.&lt;/p&gt;

&lt;p&gt;Here I'm using class-based view to handle the register form. Check the &lt;a href="https://docs.djangoproject.com/en/3.2/topics/class-based-views/intro/"&gt;docs&lt;/a&gt; for more info about what am using.&lt;/p&gt;

&lt;p&gt;views.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt; 
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RegisterForm&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;form_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RegisterForm&lt;/span&gt;
    &lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'key'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'value'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'users/register.html'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form_class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form_class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

            &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'Account created for &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;First by overriding the &lt;code&gt;form_class&lt;/code&gt; attribute, we are able to tell django which form to use, &lt;code&gt;template_name&lt;/code&gt; -&amp;gt; the template we want django to look for&lt;/li&gt;
&lt;li&gt;If the request is get, it creates a new instance of an empty form.&lt;/li&gt;
&lt;li&gt;If the request is post, 
-- It creates a new instance of the form with the post data. Then checks if the form is valid or not by calling the &lt;a href="https://docs.djangoproject.com/en/3.2/ref/forms/api/"&gt;&lt;code&gt;form.is_valid()&lt;/code&gt;&lt;/a&gt; method.
-- Then if the form is valid, process the cleaned form data and save the user to our database.&lt;/li&gt;
&lt;li&gt;To let the user know that his/her account is successfully created, we can generate a flash message and display his/her username to the page they are getting redirected to(home page).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next let's map our urlpatterns to our register view.&lt;/p&gt;

&lt;p&gt;users/urls.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RegisterView&lt;/span&gt;  &lt;span class="c1"&gt;# Import the view here
&lt;/span&gt;
&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'users-home'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'register/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RegisterView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'users-register'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# This is what we added
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is getting kinda long so, we will create the template in the next series.&lt;/p&gt;

&lt;p&gt;Thanks for your time, you can find the finished app in &lt;a href="https://github.com/earthcomfy/Django-registration-and-login-system"&gt;github&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Feel free to ask, and any suggestions are welcome. See ya!&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>পাইথন প্রোগ্রামিং এ ভেরিয়েবল এবং ডাটাটাইপ</title>
      <author>Moniruzzaman Saikat</author>
      <pubDate>Wed, 25 Aug 2021 09:39:39 +0000</pubDate>
      <link>https://dev.to/moniruzzamansaikat/-20he</link>
      <guid>https://dev.to/moniruzzamansaikat/-20he</guid>
      <description>&lt;p&gt;variable শব্দটার বাংলা অর্থ হচ্ছে চলক। তার মানে এই জিনিসটা পরিবর্তিত হতে পারবে। অন্যকথায়, ভেরিয়েবল হচ্ছে ধারক বা container বা placeholder. অর্থাৎ, ভেরিয়েবলের মধ্যে তুমি কোন একটা ডাটা রেখে দিতে পার, যা পরে তুমি তোমার প্রোগ্রামে ব্যাবহার করতে পারবে। &lt;/p&gt;

&lt;p&gt;তো, এই variable এর মধ্যে তুমি যেকোন ডাটাই রেখে দিতে পার। এইটা হতে পারে তোমার নাম(string), তোমার বয়স(number) অথবা কোন একটা একটা কথা সত্যি নাকি মিথ্যা(boolean). তো এই যে ডাটাগুলা তুমি কোন একটা container বা variable এর মধ্যে রাখতেছ, তো ঐ variable এর একটা নাম দিতে হবে না 🤨? তাহলেই তো তুমি ঐ নামের মাধ্যমে ডাটা টাকে অ্যাক্সেস করতে পারবা। &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;নোটঃ পাইথন প্রোগ্রামিং এ তোমাকে নির্দিষ্ট করে বলে দিতে হবে না যে, তুমি কি ধরনের ডাটা তোমার ভেরিয়েবলের মধ্যে রাখতেছ। তুমি just একটা variable এর নাম দিয়েই এর মধ্যে ডাটা টাকে রেখে দিতে পারবা।&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#%E0%A6%95%E0%A6%BF%E0%A6%AD%E0%A6%BE%E0%A6%AC%E0%A7%87-%E0%A6%8F%E0%A6%95%E0%A6%9F%E0%A6%BF-%E0%A6%AD%E0%A7%87%E0%A6%B0%E0%A6%BF%E0%A7%9F%E0%A7%87%E0%A6%AC%E0%A6%B2-declare%E0%A6%A4%E0%A7%88%E0%A6%B0%E0%A6%BF-%E0%A6%95%E0%A6%B0%E0%A7%87-%E0%A6%AE%E0%A6%BE%E0%A6%A8-%E0%A6%A8%E0%A6%BF%E0%A6%B0%E0%A7%8D%E0%A6%A7%E0%A6%BE%E0%A6%B0%E0%A6%A8assign-%E0%A6%95%E0%A6%B0%E0%A7%87-%E0%A6%A6%E0%A6%BF%E0%A6%A4%E0%A7%87-%E0%A6%B9%E0%A7%9F"&gt;
  &lt;/a&gt;
  কিভাবে একটি ভেরিয়েবল Declare(তৈরি) করে মান নির্ধারন(assign) করে দিতে হয় 🤔
&lt;/h3&gt;

&lt;p&gt;তো মনে কর, তুমি একটা প্রোগ্রাম লিখছ । যেখানে তোমাকে একজন user এর নাম মনে(contain) রাখতে হবে। তো তাহলে তোমাকে প্রথমেই একটা ভেরিয়েবলের নাম declare করতে হবে, তারপর &lt;code&gt;=&lt;/code&gt; (সমান) এর মাধ্যমে তোমাকে একটা মান assign করে দিতে হবে। একটা জিনিস মনে রাখতে হবে, তুমি কিন্তু চাইলেই যেকোন কিছু নাম দিতে পারবে না। ভেরিয়েবলের নাম কিভাবে নির্ধারণ করতে হয়, তা নিচে বিস্তারিত ভাবে দেয়া আছে। &lt;/p&gt;

&lt;p&gt;আপাতত দেখ, নিচে আমি &lt;code&gt;user_name&lt;/code&gt; নামে একটা ভেরিয়েবল তৈরী করছি। যার মধ্যে &lt;code&gt;zuck123&lt;/code&gt; নামে একটা মান দিয়ে দিছি। একটা জিনিস খেয়াল করছ, আমি কী ধরণের মান assign করছি ? এইটা একটা স্ট্রিং(string) . তুমি চাইলে অন্য কিছুও ব্যাবহার করতে পারবে। যেটা আমরা &lt;code&gt;Data Type&lt;/code&gt; সেকশনে দেখব।&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;user_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'zuck123'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;এখন তুমি একটা জিনিস খেয়াল করো, উপরের যে ভেরিয়েবলটা তুমি create করছ, ঐ মানটা কী সব সময়ই একই থাকবে । না, থাকবে না । কারণ , তুমি তো আগেই জান যে variable মানে হচ্ছে চলক অর্থাৎ যার মান চলতে চলতেই পরিবর্তিত হতে পারবে । এর নিচের লাইনে এসে যদি তুমি বলে দাও &lt;code&gt;user_name&lt;/code&gt; ভেরিয়েবলটিতে অন্য কোন মান রাখ, তাহলে কিন্তু কম্পিউটার ওইখানে অন্য একটা মানই রাখবে। নিচে দেখ 👇🏼&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;user_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'zuck123'&lt;/span&gt;
&lt;span class="n"&gt;user_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mark Zuckerburg'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;দেখছ, প্রথম লাইনে আমরা বলে দিলাম &lt;code&gt;user_name&lt;/code&gt; ভেরিয়েবলটিতে &lt;code&gt;zuck123&lt;/code&gt; মানটা রাখ। কিন্তু ২ নম্বর লাইনে এসে আমরা আবার বলে দিলাম যে, &lt;code&gt;user_name&lt;/code&gt; এর মধ্যে তুমি &lt;code&gt;Mark Zuckerburg&lt;/code&gt; এই মান টা রেখে দাও । তো এই জিনিসটিকেই আসলে বলা হয় &lt;strong&gt;Variable re-assign&lt;/strong&gt; করা। &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E0%A6%AD%E0%A7%87%E0%A6%B0%E0%A6%BF%E0%A7%9F%E0%A7%87%E0%A6%AC%E0%A6%B2-%E0%A6%A8%E0%A6%BE%E0%A6%AE-%E0%A6%A8%E0%A6%BF%E0%A6%B0%E0%A7%8D%E0%A6%A7%E0%A6%BE%E0%A6%B0%E0%A6%A3-%E0%A6%95%E0%A6%B0%E0%A6%BE%E0%A6%B0-%E0%A6%95%E0%A6%BF%E0%A6%9B%E0%A7%81-%E0%A6%B6%E0%A6%B0%E0%A7%8D%E0%A6%A4-"&gt;
  &lt;/a&gt;
  ভেরিয়েবল নাম নির্ধারণ করার কিছু শর্ত 🧐:
&lt;/h3&gt;

&lt;p&gt;☑ ভেরিয়েবলটার নাম কেবলমাত্র &lt;code&gt;(a-z/A-Z)&lt;/code&gt; অথবা &lt;code&gt;_&lt;/code&gt; দিয়ে শুরু হতে পারবে।&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mr Bean'&lt;/span&gt;                &lt;span class="c1"&gt;# Right
&lt;/span&gt;&lt;span class="n"&gt;_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Ami'&lt;/span&gt;                 &lt;span class="c1"&gt;# Right
&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Amar name a vul ace '&lt;/span&gt; &lt;span class="c1"&gt;# Wrong 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;☑ ভেরিয়েবল নামের শুরু হওয়া ব্যাতিত অন্য যেকোন জায়গায় &lt;code&gt;(a-b/A-B)&lt;/code&gt; বা &lt;code&gt;numbers&lt;/code&gt; বা &lt;code&gt;underscores&lt;/code&gt; থাকতে পারে।&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;ten10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;                  &lt;span class="c1"&gt;# Right
&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;ten&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;                  &lt;span class="c1"&gt;# Wrong
&lt;/span&gt;&lt;span class="n"&gt;amar_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mr Zuckerburg'&lt;/span&gt; &lt;span class="c1"&gt;# Right
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;☑ ভেরিয়েবল নামের মাঝখানে কোন ফাকা জায়গা(space) রাখা যাবে না।&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;amar_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mr Zuckerburg'&lt;/span&gt;           &lt;span class="c1"&gt;# Right
&lt;/span&gt;&lt;span class="n"&gt;amar&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Amar name vul ache :)'&lt;/span&gt;  &lt;span class="c1"&gt;# Wrong
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;☑ পাইথনে ভেরিয়েবল নামগুলো &lt;code&gt;case-sensitive&lt;/code&gt; হয়ে থাকে । অর্থাৎ ছোট হাতের অক্ষর দিয়ে কোন ভেরিয়েবলের নাম আর বড় হাতের অক্ষর দিয়ে ঐ সেইম name কিন্তু একই না :)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;AmarName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Mr Zuckerburg'&lt;/span&gt;          &lt;span class="c1"&gt;# এইটা আলাদা
&lt;/span&gt;&lt;span class="n"&gt;amarName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Amio Mr Zuckerburg'&lt;/span&gt;  &lt;span class="c1"&gt;# এইটা আলাদা
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;☑ পাইথনে কিছু &lt;code&gt;reserved&lt;/code&gt; বা নিজস্ব কিওয়ার্ড আছে। তুমি ঐ কিওয়ার্ডগুলোও ভেরিয়েবল নাম হিসেবে ব্যবহার করতে পারবে না। নিচে কিওয়ার্ডগুলো দিয়ে দেয়া হলঃ&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keywords&lt;/th&gt;
&lt;th&gt;Keywords&lt;/th&gt;
&lt;th&gt;Keywords&lt;/th&gt;
&lt;th&gt;Keywords&lt;/th&gt;
&lt;th&gt;Keywords&lt;/th&gt;
&lt;th&gt;Keywords&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;and&lt;/td&gt;
&lt;td&gt;def&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;import&lt;/td&gt;
&lt;td&gt;not&lt;/td&gt;
&lt;td&gt;True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;as&lt;/td&gt;
&lt;td&gt;del&lt;/td&gt;
&lt;td&gt;finally&lt;/td&gt;
&lt;td&gt;while&lt;/td&gt;
&lt;td&gt;in&lt;/td&gt;
&lt;td&gt;or&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;assert&lt;/td&gt;
&lt;td&gt;elif&lt;/td&gt;
&lt;td&gt;try&lt;/td&gt;
&lt;td&gt;for&lt;/td&gt;
&lt;td&gt;is&lt;/td&gt;
&lt;td&gt;pass&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;break&lt;/td&gt;
&lt;td&gt;else&lt;/td&gt;
&lt;td&gt;with&lt;/td&gt;
&lt;td&gt;from&lt;/td&gt;
&lt;td&gt;lambda&lt;/td&gt;
&lt;td&gt;print&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;class&lt;/td&gt;
&lt;td&gt;except&lt;/td&gt;
&lt;td&gt;yield&lt;/td&gt;
&lt;td&gt;global&lt;/td&gt;
&lt;td&gt;raise&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;continue&lt;/td&gt;
&lt;td&gt;exec&lt;/td&gt;
&lt;td&gt;if&lt;/td&gt;
&lt;td&gt;nonlocal&lt;/td&gt;
&lt;td&gt;return&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#%E0%A6%AA%E0%A6%BE%E0%A6%87%E0%A6%A5%E0%A6%A8-%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82-%E0%A6%8F-%E0%A6%A1%E0%A6%BE%E0%A6%9F%E0%A6%BE-%E0%A6%9F%E0%A6%BE%E0%A6%87%E0%A6%AAdata-type"&gt;
  &lt;/a&gt;
  পাইথন প্রোগ্রামিং এ ডাটা টাইপ(Data Type):
&lt;/h3&gt;

&lt;p&gt;পাইথন কিন্তু Dynamically typed একটা প্রোগ্রামিং ভাষা। অর্থাৎ,ভেরিয়েবল তৈরী করার সময় তোমাকে এর টাইপ বলে দিতে হবে না । মানে কী 🤨 ? &lt;/p&gt;

&lt;p&gt;এর মানে হচ্ছে, তুমি যখন একটা ভেরিয়েবল Decalare করতেছ, তখন তোমাকে বলে দিতে হবে না যে, তুমি কী ধরণের মান assign করতেছ, পাইথন নিজে নিজেই বুঝে যাবে যে তুমি কী &lt;code&gt;string&lt;/code&gt; assign করতেছ নাকি &lt;code&gt;number&lt;/code&gt; নাকি অন্য কিছু। &lt;/p&gt;

&lt;p&gt;কিন্তু প্রোগ্রামিং করার সময় তোমাকে অবশ্যই জানতে হবে যে তুমি কোন ধরণের ডাটার সাথে কাজ করতেছ । তাহলে, প্রোগ্রামিং করার সময় তোমার কোডগুলা অনেক efficient হবে পাশাপাশি তোমার লাইফটাও অনেক সহজ হয়ে যাবে 😊 &lt;/p&gt;

&lt;p&gt;নিচে কিছু বেসিক (basic) ডাটাটাইপ সম্পর্কে আলোচনা করা হল, যেগুলা তোমাকে অবশ্যই অবশ্যই জানতে হবে। &lt;br&gt;
✅ &lt;a href="#string"&gt;String or text based Data Type&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="#number"&gt;Numeric Data type&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="#bool"&gt;Boolean or (True-False) Data Type&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="#list"&gt;List Data Type&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#string-data-type"&gt;
  &lt;/a&gt;
  &lt;a href="#string"&gt;String Data Type&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;তোমার প্রোগ্রামে বিভিন্ন সময় বিভিন্ন রকমের শব্দ,বাক্য, প্যারাগ্রাফ নিয়ে কাজ করতে হতে পারে। তো এই ক্ষেত্রে তোমাকে এই string ডাটা টাইপ ব্যাবহার করতে হবে। তো পাইথনে তুমি দুইভাবে string টাইপের ভেরিয়েবল ব্যাবহার করতে পার। সিংগেল কোটেশন(Single Quote)[&lt;code&gt;''&lt;/code&gt;] অথবা ডাবল কোটেশন(Double qutation)[&lt;code&gt;""&lt;/code&gt;]. নিচের উদাহরণ দেখ👇🏼&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;variabl1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Ami thik aci'&lt;/span&gt;
&lt;span class="n"&gt;variabl2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Amio thik aci:)"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;উপরের দুইটা ভেরিয়েবলই ঠিক আছে। কিন্তু তুমি যখন একটা paragraph লিখতে যাবে, তখন কিন্তু তুমি উপরের নিয়মে লিখতে পারবে না। অর্থাৎ single quote বা double quote দিয়ে যখন তুমি কোন string বানাবা , তখন যদি তুমি নতুন লাইনে চলে আসতে চাও তাহলে তুমি একটা এরর(error) খাবা 😥। তাহলে কী করতে হবে 🤔? তাহলে, তুমি যদি পাইথনে এমন একটা স্ট্রিং বানাইতে চাও যা কিনা multiline এর হতে পারে বা একটা paragraph হতে পারে তখন তোমাকে নিচের মত করে string declare করতে হবে 👇🏼&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;gorur_rocona&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#numeric-data-type"&gt;
  &lt;/a&gt;
  &lt;a href="#number"&gt;Numeric Data Type&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;তোমাকে বিভিন্ন সময় বিভিন্ন রকম নাম্বার নিয়ে কাজ করতে হতে পারে। বিভিন্ন রকম নাম্বার বলতে &lt;code&gt;float&lt;/code&gt;(দশমিক) নাম্বার, &lt;code&gt;integer&lt;/code&gt;(পূর্ণসংখ্যা)। তো পাইথনে আসলে তিন ধরণের নাম্বার আছে। &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;int (Integer বা পূর্ণসংখ্যা)&lt;/li&gt;
&lt;li&gt;float (Floating point number বা দশমিক সংখ্যা)&lt;/li&gt;
&lt;li&gt;Complex (Complex বা জটিল সংখ্যা)
নাম্বার পজিটিভ বা নেগেটিভ হতে পারবে। নিচে কয়েকটি উদাহরণ দেয়া হল 👇🏼
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;age&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;         &lt;span class="c1"&gt;# Integer Number
&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.6&lt;/span&gt;        &lt;span class="c1"&gt;# Float Number
&lt;/span&gt;&lt;span class="nb"&gt;complex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;87.7e100&lt;/span&gt;  &lt;span class="c1"&gt;# Complex Number
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#boolean-data-type"&gt;
  &lt;/a&gt;
  &lt;a href="#bool"&gt;Boolean Data Type&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;ধর কোন একটা ঘটনা ঘটছে । তো, তোমাকে আমি বললাম যে তুমি শুধু বল যে ঘটনাটা আসলে ঘটছে কী না । তো তুমি একটা variable এ এই মান টা কিভাবে রাখবে ? নিচে দেখে ফেল 👇🏼&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;ghotona_ghotce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;  &lt;span class="c1"&gt;# এইখানে তুমি True অথবা False লিখতে পার 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;তো এই হচ্ছে boolean. তুমি একটা ভেরিয়বলে &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; রাখতে পারতেছ। &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#list-data-type"&gt;
  &lt;/a&gt;
  &lt;a href="#list"&gt;List Data Type&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;এখন তুমি তো &lt;code&gt;string&lt;/code&gt; বা &lt;code&gt;number&lt;/code&gt; ডাটা টাইপ নিয়ে কিভাবে কাজ করতে হয় শিখে ফেলছ। তাই না ? আচ্ছা, এখন যদি আমি তোমাকে বলি তোমার বেশ কয়েকজনের বন্ধুর নামের একটা লিস্ট বানিয়ে ফেল । তখন তুমি কই করবে ? তো প্রথমেই চিন্তা কর যে, একেকটা নাম কিন্তু একেকটা &lt;code&gt;string&lt;/code&gt; । এখন এরকম অনেকগুলো string নিয়েই আমাদের একটা লিস্ট বানিয়ে ফেলতে হবে। নিচে দেখ 👇🏼&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;friends&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Rakib'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Sakib'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Wakib'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;তাহলে, অনেক গুলো item নিয়ে একটা লিস্ট হয়ে থাকে । তুমি উপরের লিস্টটাতে যেকোন রকমের value ই রাখতে পারবে। সেটা হতে পারে কোন নাম্বারের লিস্ট বা স্ট্রিং এর লিস্ট । যেমন তোমাকে যদি বলা হয় একটা নাম্বারের লিস্ট বানিয়ে ফেল। তুমি কিন্তু পারবে । কীভাবে ? &lt;code&gt;[1,2,3,4]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;তো আচ্ছা, এই যে লিস্টটা আছে । এর প্রত্যেকটি item কে বলা হয় একেকটা &lt;code&gt;element&lt;/code&gt; বা উপাদান । তো, তোমাকে আমি যদি বলি &lt;code&gt;Sakib&lt;/code&gt; নামের string টা তুমি আমাকে দাও, অথবা শুধুমাত্র ঐ string টাকে অন্য একটা variable এ রেখে দাও। এই কাজটা করার আগে একটা জিনিস জেনে রাখ, পাইথনে কিন্তু list কিন্তু 0 index based. মানে হচ্ছে, 0 তম index এ আছে Rakib, 1 তম index এ আছে Sakib আর 3 তম index এ আছে Wakib. বুঝছ, এইভাবেই চলতে থাকবে। মানে তুমি দেখেতেছ যে একটা element ১০০ তম জায়গায় আছে, তাহলে ঐ element টাকে অ্যাক্সেস করতে হলে তোমাকে কিন্তু ৯৯ তম index এ access করতে হবে। &lt;/p&gt;

&lt;p&gt;নিচের উদাহরণ টা দেখ 👇🏼&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;friends&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Rakib'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Sakib'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Wakib'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="n"&gt;ami_sakib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;      &lt;span class="c1"&gt;# এর মান হল Rakib
&lt;/span&gt;&lt;span class="n"&gt;ami_rakib&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;friends&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;      &lt;span class="c1"&gt;# এর মান হল Sakib
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;এই ব্লগে আমরা পাইথনের বেসিক কিছু ডাটা টাইপ এবং ভেরিয়েবল নিয়ে কিভাবে কাজ করতে হয় , এগুলা শিখছি। এর পরবর্তি ব্লগে আমরা String নিয়ে বিস্তারিত ভাবে জানতে পারব 🤟🏼&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Nobody Cares About Your Programming Experience</title>
      <author>Fagner Brack</author>
      <pubDate>Wed, 25 Aug 2021 09:16:34 +0000</pubDate>
      <link>https://dev.to/fagnerbrack/nobody-cares-about-your-programming-experience-2jkf</link>
      <guid>https://dev.to/fagnerbrack/nobody-cares-about-your-programming-experience-2jkf</guid>
      <description>&lt;h3&gt;
  &lt;a href="#avoid-disregard-an-argument-based-on-the-author"&gt;
  &lt;/a&gt;
  Avoid disregard an argument based on the author
&lt;/h3&gt;




&lt;p&gt;In &lt;a href="https://en.wikipedia.org/wiki/Argumentation_theory"&gt;Argumentation Theory&lt;/a&gt;, there are concepts called &lt;a href="https://en.wikipedia.org/wiki/Fallacy"&gt;fallacies&lt;/a&gt;. They are mistakes of reasoning, discovered and elaborated by scholars over the ages, known to have been used in discussions and debates as an attempt to support an incorrect claim.&lt;/p&gt;

&lt;p&gt;One of these fallacies is the &lt;a href="https://en.wikipedia.org/wiki/Ad_hominem"&gt;Ad hominem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is usually used in discussions where the counterargument is not correctly addressed, which can cause a cascading effect that might wreck the discussion, like what you can see at the bottom of &lt;a href="http://paulgraham.com/disagree.html"&gt;Paul Graham's Hierarchy of Disagreement&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2cm377i6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no5p3kgynhv4zc9u3yde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2cm377i6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no5p3kgynhv4zc9u3yde.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most people believe that ad-hominem is just about attacking the physical characteristics or the authority of the author instead of focusing on the argument. However, ad-hominem can manifest itself in many subtle ways.&lt;/p&gt;

&lt;p&gt;For example, in software engineering, teams argue about abstract technical decisions all the time. Eventually, a situation might come up where someone provides an idea or argument that is contradictory because that person is known to belong to a group that has made many mistakes in the past or is a junior developer. The instinct is to ignore that person's ideas merely because of those past experiences, arguing that the idea is irrelevant based on the credibility of the person that is making it, questioning his or her capability of delivering a correct answer.&lt;/p&gt;

&lt;p&gt;That is ad-hominem.&lt;/p&gt;

&lt;p&gt;More specifically, a &lt;em&gt;Tu quoque&lt;/em&gt; if the focus is on a single person, or a &lt;em&gt;Guilt by association&lt;/em&gt; if the focus is on the group that person belongs to.&lt;/p&gt;

&lt;p&gt;Ad-hominem is when somebody tries to criticize the argument but instead criticizes the person. Whether the attacker is correct in criticizing the person is irrelevant, for the point of ad-hominem is focusing on the person, not the argument.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#adhominem-is-to-ignore-somebody-elses-argument-or-idea-because-of-the-person-that-is-making-it-instead-of-the-content-of-that-argument-or-idea"&gt;
  &lt;/a&gt;
  Ad-hominem is to ignore somebody else's argument or idea because of the person that is making it, instead of the content of that argument or idea.
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this case, it is the responsibility of all parties to put the arguments or ideas on the table and argue against the content of those, not against who is defending or attacking it.&lt;/p&gt;




&lt;p&gt;There is also another fallacy, called &lt;a href="https://en.wikipedia.org/wiki/Argument_from_authority"&gt;Argument from Authority&lt;/a&gt;. It happens when an argument is ignored in favor of an authority's opinions. "Authority" in this context can be a person, an organization, a methodology… anything, it doesn't even need to be famous.&lt;/p&gt;

&lt;p&gt;In software engineering, the classic usage of this fallacy is when a suggested practice is ignored just because somebody else already tried it and it didn't work at the time, therefore it is assumed that it doesn't work, no matter the circumstances.&lt;/p&gt;

&lt;p&gt;The problem with that reasoning, which usually comes with expressions like "&lt;em&gt;I have used in many projects and it didn’t work&lt;/em&gt;", is that instead of providing evidence of why that practice doesn't work, one tries to disregard the argument using the personal experience as a self-entitled authority.&lt;/p&gt;

&lt;p&gt;Personal experience is mostly irrelevant, ideally, arguments should contain evidence backed up by a measurable, independent and &lt;a href="https://en.wikipedia.org/wiki/Scientific_method"&gt;scientific study&lt;/a&gt;, for the experience might be different, either by a &lt;strong&gt;&lt;a href="https://fagnerbrack.com/wittgenstein-s-beetle-in-software-engineering-dcea89a5db92"&gt;different execution&lt;/a&gt;&lt;/strong&gt; or a &lt;strong&gt;wrong execution&lt;/strong&gt;. Besides, there is the human factor, where emotions can cloud the judgment of individuals when disagreements take into account matters of personal experience.&lt;/p&gt;

&lt;p&gt;However, there are kinds of complex systems where such evidence is impossible to get, either by the lack of resources or for the lack of time. Imagine an ordinary team in an ordinary company; you don't always have the time and knowledge to run controlled experiments. Therefore, you may delegate debatable decisions to the most experienced person in the room in that subject; not because they're right, only that they're the ones most likely to be. A good example is a doctor, you can't expect to run a controlled experiment in order to treat a disease that it's going to kill you tomorrow, you have to act now.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#the-argument-of-personal-experience-is-weak-because-it-relies-on-an-experience-that-might-be-different-either-by-a-different-execution-or-a-wrong-execution"&gt;
  &lt;/a&gt;
  The argument of personal experience is weak because it relies on an experience that might be different, either by a different execution or a wrong execution.
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, the relationship between the perceived and real knowledge may differ, either because of the &lt;a href="https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect"&gt;Dunning-Kruger Effect&lt;/a&gt; or the &lt;a href="https://en.wikipedia.org/wiki/Impostor_syndrome"&gt;Impostor Syndrome&lt;/a&gt;. The image below shows a transition of mindset from the Impostor Syndrome to reality:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCfIClYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g430c0x84t5eqwb7gyaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCfIClYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g430c0x84t5eqwb7gyaw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every individual has the potential to come up with great ideas and arguments. One doesn’t have more or less knowledge than the other. Everyone has different pieces of knowledge. It doesn’t make any sense ignoring every argument or idea because of the person that is making it. Something important might be missed.&lt;/p&gt;

&lt;p&gt;Personal experience is a self-entitled authority. It relies on the belief that one person has executed something the exact same way as somebody else did, which is rarely the case.&lt;/p&gt;

&lt;p&gt;Ad-hominem is arguing against the author, not the argument. When anyone tries to use the argument of personal experience, that person is arguing against the author (his or her experience), not the content.&lt;/p&gt;

&lt;p&gt;Do not judge the person by experience. Instead, judge the argument by the content.&lt;/p&gt;

&lt;p&gt;Unless you're dying tomorrow.&lt;/p&gt;




&lt;p&gt;Thanks for reading. If you have some feedback, reach out to me on &lt;a href="https://twitter.com/FagnerBrack"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/fagner.brack"&gt;Facebook&lt;/a&gt; or &lt;a href="http://github.com/FagnerMartinsBrack"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>coding</category>
      <category>dev</category>
    </item>
    <item>
      <title>8 reasons why having a blog is as important as having a GitHub</title>
      <author>Andrew Baisden</author>
      <pubDate>Wed, 25 Aug 2021 09:11:51 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/8-reasons-why-having-a-blog-is-as-important-as-having-a-github-28ac</link>
      <guid>https://dev.to/andrewbaisden/8-reasons-why-having-a-blog-is-as-important-as-having-a-github-28ac</guid>
      <description>&lt;p&gt;Blogging and Technical Writing has become extremely popular these days. I think it's one of the few great things that emerged from this global pandemic. We had an almost infinite amount of time at home to do anything that we wanted to do. It created a new generation of aspiring developers and writers. We all know the importance of having a GitHub account to show your work. It is one of the best ways for a company to see your coding style. Furthermore it gives other developers an insight into the projects that you are working on.&lt;/p&gt;

&lt;p&gt;Nonetheless blogging is seeing significant growth right now and this has opened up a new path for developers to get into the industry. Here are 8 reason why having a blog is as important as having a GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-it-is-an-insight-into-your-personality"&gt;
  &lt;/a&gt;
  1. It is an insight into your personality
&lt;/h2&gt;

&lt;p&gt;When you write you are projecting your thoughts and opinions into the world. In doing so it is quite easy for someone to understand your personality and what makes you unique. One of the main interview stages that a candidate has to get through is the culture fit interview. They company and your potential team wants to know what you would be like to work with. Blogging is an amazing way for you to show to the world what type of person you are.&lt;/p&gt;

&lt;p&gt;And as a bonus every person that you engage with shows how good you are when it comes to connecting with other people and getting your point across. These are skills that every great developer should have.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-can-learn-about-someones-coding-style"&gt;
  &lt;/a&gt;
  2. You can learn about someones coding style
&lt;/h2&gt;

&lt;p&gt;This point is more applicable if you are writing tutorials or courses with lots of code snippets. Something that you need to realise is that usually when you are on the job market it is recruiters and hiring managers that will be approaching you. Unless they are a developer or have that type of background then they won't really understand how you created the projects on your GitHub.&lt;/p&gt;

&lt;p&gt;However most people know how to read so it would be significantly easier for them to read through an article that you have written instead. Even if they don't understand it 100% it is still far simpler to digest. And if they do happen to be a developer then reading through something that you have written which relates to the job you are applying for will score you bonus points.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-the-bar-to-entry-is-super-low"&gt;
  &lt;/a&gt;
  3. The bar to entry is super low
&lt;/h2&gt;

&lt;p&gt;If you are a beginner when it comes to programming then creating apps that go beyond the simple generic to do app could be quite challenging. Whereas writing an article requires little more than words. We are all used to typing, talking over IM or even writing tweets. So we have the skills to be a writer already.&lt;/p&gt;

&lt;p&gt;If you are able to get your point across well in something you write then it will make it easy for people to understand you. Putting together a few articles requires less effort than creating some apps from scratch. In this fast moving world speed matters and the more of your content you get out there the more opportunities that will come your way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-the-appeal-is-significantly-wider"&gt;
  &lt;/a&gt;
  4. The appeal is significantly wider
&lt;/h2&gt;

&lt;p&gt;Let's face it not everyone is tech savvy and you can't expect everyone to understand work that you are doing. This is extremely true with GitHub if you are not working in the tech industry then it does not really resonate with you. It's the complete opposite when it comes to writing. So long as you are writing articles that cater to a larger audience pool then you are likely to get more attention.&lt;/p&gt;

&lt;p&gt;Not all articles need to be about programming. You can write about personal development and motivation too for example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-the-community-is-super-active"&gt;
  &lt;/a&gt;
  5. The community is super active
&lt;/h2&gt;

&lt;p&gt;There are blogging communities everywhere these days. &lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt;, &lt;a href="https://dev.to/"&gt;DEV&lt;/a&gt; and &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt; are probably three of the most popular ones right now. This is a really fast way to get into the industry and connect with likeminded people.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-it-can-be-a-passive-income-stream"&gt;
  &lt;/a&gt;
  6. It can be a passive income stream
&lt;/h2&gt;

&lt;p&gt;Getting paid to write is an amazing feeling. Just knowing that your words are heard by hundreds or thousands of people really can be life changing. Check out this article &lt;a href="https://blog.idrisolubisi.com/get-paid-to-write-for-these-45-websites"&gt;Get Paid to Write for These 45+ Websites&lt;/a&gt; by @&lt;a href="https://dev.to@olanetsoft"&gt;Olubisi Idris Ayinde&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-you-get-better-at-writing-documentation"&gt;
  &lt;/a&gt;
  7. You get better at writing documentation
&lt;/h2&gt;

&lt;p&gt;Reading and writing documentation is a skill that really levels up your coding game. The ability to create something that other people can follow and learn from is a gift that has no end. It also has the added bonus of giving you another soft skill that increases your chances of getting hired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-it-shows-a-timeline-of-progression"&gt;
  &lt;/a&gt;
  8. It shows a timeline of progression
&lt;/h2&gt;

&lt;p&gt;On GitHub you can see how active someone has been and how many projects they have on their GitHub sorted by date. With this information you can see a timeline of how they have developed and honed their skills over the years. The same rule can applying to blogging as well.&lt;/p&gt;

&lt;p&gt;For example in my case my articles started off simple as I was still learning my way and figuring out the best way to code. My most recent articles are much clearer and I have refined the way that I write tutorials and guides.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>4 Useful Django Packages</title>
      <author>Ramkumar</author>
      <pubDate>Wed, 25 Aug 2021 09:00:45 +0000</pubDate>
      <link>https://dev.to/ramkumarm15/4-useful-django-packages-29gk</link>
      <guid>https://dev.to/ramkumarm15/4-useful-django-packages-29gk</guid>
      <description>&lt;p&gt;&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; is the most popular Python framework, which you can build a robust web application. Django gives more features out of the box other than there are more 3rd party packages which are helpful to make Django application more efficient. So, here is the list of packages I came across and used.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.django-rest-framework.org/"&gt;Django REST Framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for developing a REST API using Django, then definitely &lt;strong&gt;DRF&lt;/strong&gt; is the best and most powerful toolkit for building Web API.&lt;br&gt;
A small amount of code is enough to transform the existing Django project into a &lt;strong&gt;REST API&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://djoser.readthedocs.io/en/latest/index.html"&gt;Djoser&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Recently, I work on REST API and thought of re-creating &lt;strong&gt;USER MODEL&lt;/strong&gt; function  like login, logout, reset-password and other stuffs for every project  is tedious process.  So, I searched for some alternatives and then came across with Djoser package. The Djoser package is an REST implementation of Django authentication system. It provides set of Django REST Framework that handles a basic actions like &lt;strong&gt;login, logout, reset-password, account activation&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Djoser allows you to create an user account with CUSTOM_USER_MODEL and social accounts like Google, Facebook. Authentication process is done by using token based authentication and JSON Web Token Authentication.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/python-decouple/"&gt;python-decouple&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Confidential information should be placed in Environment variables, not in source code. Python Decouple helps you to organize your settings confidential information. It helps us to access that info in environment variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/klis87/django-cloudinary-storage"&gt;django-cloudinary-storage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Django Cloudinary storage provides Cloudinary storage for media and static files. A quick and small amount of line of configuration you can start using Cloudinary, so you can serve your static and media files of Django by Cloudinary&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>django</category>
      <category>webdev</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>Git Undo Merge: The Final Guide</title>
      <author>ZigRazor</author>
      <pubDate>Wed, 25 Aug 2021 08:48:51 +0000</pubDate>
      <link>https://dev.to/zigrazor/git-undo-merge-the-final-guide-4bj9</link>
      <guid>https://dev.to/zigrazor/git-undo-merge-the-final-guide-4bj9</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nuHZEKo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vk5tncsobn2wdioa7i2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nuHZEKo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vk5tncsobn2wdioa7i2.png" alt="Git Undo Merge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;You can undo a &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; merge using the &lt;code&gt;git reset –merge&lt;/code&gt; command. This command changes all files that are different between your current repository and a particular commit. There is no “git undo merge” command but the git reset command works well to undo a merge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-undo-a-git-merge"&gt;
  &lt;/a&gt;
  How to Undo a Git Merge
&lt;/h2&gt;

&lt;p&gt;Have you just merged two branches that you’re not ready to merge? Not to worry, Git has a solution for you. Developers merge branches all the time that should not be branched, so you’re definitely not alone in experiencing this issue.&lt;/p&gt;

&lt;p&gt;In this tutorial, we’re going to talk about git merges and how to undo a git merge. We’ll walk through an example of two approaches you can use to undo a git merge. Let’s begin!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-merges"&gt;
  &lt;/a&gt;
  Git Merges
&lt;/h2&gt;

&lt;p&gt;Git relies heavily on branches. These are used to maintain separate lines of development inside a project. Branches allow you to work on multiple different versions of a repository at once. Merging combines two branches into one.&lt;/p&gt;

&lt;p&gt;You can merge a branch into another branch whenever you are ready. This means that you can develop a feature or a bug fix on a separate branch. Then, you can make it part of your main project later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-undo-merge"&gt;
  &lt;/a&gt;
  Git Undo Merge
&lt;/h2&gt;

&lt;p&gt;To undo a git merge, you need to find the commit ID of your last commit. Then, you need to use the git reset command to reset your repository to its state in that commit. There is no “git revert merge” command.&lt;/p&gt;

&lt;p&gt;The steps to revert a merge, in order, are:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git log&lt;/code&gt; OR &lt;code&gt;git reflog&lt;/code&gt; (to find the last commit ID)&lt;br&gt;
&lt;code&gt;git reset –merge&lt;/code&gt; (to revert to the commit you specify)&lt;/p&gt;

&lt;p&gt;Say we have accidentally merged two branches that should not be merged. We can undo these changes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#undo-merge-git-example"&gt;
  &lt;/a&gt;
  Undo Merge Git Example
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#find-the-commit-id"&gt;
  &lt;/a&gt;
  Find the Commit ID
&lt;/h3&gt;

&lt;p&gt;To start, we need to find out the commit ID of the commit before our merge on our remote repository. You can do this using &lt;em&gt;git reflog&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s run this command on a Git repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ac7188c HEAD@{6}: commit: feat: Push example code for innerText and innerHTML tutorial
a9fdeb5 HEAD@{7}: commit (initial): feat: Merge dev-fix-7 into master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command tells us that the last commit has the hash &lt;code&gt;a9fdeb5&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alternatively, you can use the &lt;code&gt;git log&lt;/code&gt; command. But, the &lt;code&gt;reflog&lt;/code&gt; command returns an output that is easier to read. This is why we opted to use &lt;code&gt;reflog&lt;/code&gt; instead of the &lt;code&gt;log&lt;/code&gt; command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#revert-to-the-commit"&gt;
  &lt;/a&gt;
  Revert to the Commit
&lt;/h2&gt;

&lt;p&gt;We can use this hash to revert the merge commit with the git reset –merge command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git reset --merge a9fdeb5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command resets our repository to the state it was at in the &lt;code&gt;a9fdeb5&lt;/code&gt; commit on the master branch.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;–merge&lt;/code&gt; flag resets an index and updates all the files that are different between the current state of your repository and the HEAD.&lt;/p&gt;

&lt;p&gt;This flag does not reset files with changes that have not been added to a commit. This makes it safer than using the oft-recommended &lt;code&gt;git reset –hard&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Once we have reset our repository, we can make the relevant changes to our code. Then, we can push them to a remote branch using the &lt;code&gt;git push&lt;/code&gt; command.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-head-shorthand"&gt;
  &lt;/a&gt;
  The HEAD Shorthand
&lt;/h2&gt;

&lt;p&gt;The Git &lt;code&gt;HEAD&lt;/code&gt; keyword refers to the latest commit in your repository. You can use the Git HEAD shorthand to undo a merge:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git reset --merge HEAD~1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command reverts our repository to the last commit. &lt;code&gt;HEAD&lt;/code&gt; refers to the current state of your repository; &lt;code&gt;HEAD~1&lt;/code&gt; is the last commit in your repository.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#additional-notes"&gt;
  &lt;/a&gt;
  Additional Notes
&lt;/h2&gt;

&lt;p&gt;If you need to push the branch to the remote, and you have already pushed the merge, you need to use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -f origin myBranch 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to let Git force the push and overwrite the history of the branch.&lt;br&gt;
&lt;strong&gt;PAY ATTENTION&lt;/strong&gt;: this can be dangerous if &lt;code&gt;myBranch&lt;/code&gt; was already fetched by others in their own repo. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The git reset command undoes a merge. The –merge flag resets a repository but keeps files to which changes have been made that have not been added to your repository.&lt;/p&gt;

</description>
      <category>git</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
