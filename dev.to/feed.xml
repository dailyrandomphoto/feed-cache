<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Getting started with Terraform: Remote Backend</title>
      <author>Daniel Huerta</author>
      <pubDate>Fri, 16 Jul 2021 21:22:15 +0000</pubDate>
      <link>https://dev.to/danihuerta/getting-started-with-terraform-remote-backend-4092</link>
      <guid>https://dev.to/danihuerta/getting-started-with-terraform-remote-backend-4092</guid>
      <description>&lt;p&gt;In the previous post we talked about how does Terraform manages the resources in the cloud using the local &lt;a href="https://dev.to/danihuerta/getting-started-with-terraform-state-file-1l2f"&gt;state&lt;/a&gt; file, however in the real world we will have to collaborate with other members of the team, it is to say that not only one person is going to modify the Terraform files.&lt;/p&gt;

&lt;p&gt;In this scenario, does the entire team have to modify  the &lt;em&gt;local state file&lt;/em&gt; manually in their machine to be all synchronized? ü§î.&lt;/p&gt;

&lt;p&gt;Well, it does not sound so practical. When we work in a collaborative workflow it is necessary to use a &lt;strong&gt;remote backend&lt;/strong&gt; which is the same as a &lt;strong&gt;remote state file&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remote-backend"&gt;
  &lt;/a&gt;
  Remote Backend
&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;Remote Backend&lt;/em&gt; is the resource in Terraform that will allows us to store the &lt;a href="https://dev.to/danihuerta/getting-started-with-terraform-state-file-1l2f"&gt;state file&lt;/a&gt; in a remote location, not locally as it occurs in TF by default.&lt;/p&gt;

&lt;p&gt;Doing this, all the team members that are working with the Terraform files will be able to do it in a synchronized way, there will be a unique shared state file for the project placed in a remote location which can be an AWS S3 Bucket, Consul, AzureRM, etc. In this post we are going to use an AWS S3 Bucket as our remote backend.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-backend"&gt;
  &lt;/a&gt;
  S3 Backend
&lt;/h2&gt;

&lt;p&gt;If any backend is specified in the code, the state will be stored locally. Keeping that in mind, let's define our first remote backend üë®üèΩ‚Äçüíª.&lt;/p&gt;

&lt;p&gt;To keep our code in a good structure, we need to create a file named &lt;strong&gt;backend.tf&lt;/strong&gt; (you can name it as whatever you want, it is just to follow the standard). Inside of it we are going to use the next code and then configure it with the command &lt;em&gt;terraform init&lt;/em&gt; in the terminal:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4UswvuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siqqno6srkb7e72sgusy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4UswvuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siqqno6srkb7e72sgusy.png" alt="Screen Shot 2021-07-16 at 16.09.37"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that the AWS S3 Bucket needs to be created in the cloud before running "terraform apply", otherwise it will show an error because there will not be a bucket to store the remote state file.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once the code has been applied, you will see that inside of the &lt;em&gt;.terraform&lt;/em&gt; folder there is a &lt;em&gt;terraform.tfstate&lt;/em&gt; file. However, the information about the created resources are not stored there, it only specifies that the &lt;strong&gt;backend&lt;/strong&gt; is an S3 Bucket.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#state-locking"&gt;
  &lt;/a&gt;
  State Locking
&lt;/h2&gt;

&lt;p&gt;Now we are able to work in the same Terraform infrastructure file in a collaborative way, however, what if while I'm modifying a specific resource in the code, another member of the team modify the same part as well? What changes are the ones that will remain? üò£.&lt;/p&gt;

&lt;p&gt;This is a common problem when a team works in the same code, the solution of it is the &lt;strong&gt;state locking&lt;/strong&gt;. As its name says, it is going to block the state during the &lt;em&gt;applying operations&lt;/em&gt; such as &lt;em&gt;terraform plan&lt;/em&gt; or &lt;em&gt;terraform apply&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Once we have added the state locking (which is also included by default when we use the local state but not in a remote backend) if a user is running a &lt;em&gt;terraform apply&lt;/em&gt; command for example, and another one tries to do it as well at the same time, TF will show him an error specifying that the state is currently locked by the changes of a different user, avoiding inconveniences in the code.&lt;/p&gt;

&lt;p&gt;To create the state locking with the S3 Bucket, it is necessary to create a &lt;strong&gt;DynamoDB&lt;/strong&gt; and add &lt;em&gt;LockID&lt;/em&gt; as primary key:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jRlMg8aj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0imwo71do6u70k1hbc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jRlMg8aj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0imwo71do6u70k1hbc2.png" alt="Screen Shot 2021-07-16 at 16.13.18"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's specify to the backend that we are going to use a DynamoDB for our State Locking. It is very simple, we just need to add the &lt;em&gt;dynamodb_table&lt;/em&gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5MDEL19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih8y733y1ollfmbnto0x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5MDEL19--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih8y733y1ollfmbnto0x.png" alt="Screen Shot 2021-07-16 at 16.16.09"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To apply this configuration let's run the command &lt;em&gt;terraform init&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now we can work with the TF files within the team with the best practices üòâ.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closure"&gt;
  &lt;/a&gt;
  Closure
&lt;/h2&gt;

&lt;p&gt;This topic can be a little tricky to understand, mainly because there are many resources that can be used as &lt;strong&gt;Remote Backends&lt;/strong&gt;, however, you don't have to be an expert implementing all of them. In my case, AWS is the CP that I mostly use in my job, that's why I'm using its resources with Terraform.&lt;/p&gt;

&lt;p&gt;If you have any doubt or comments about it let's discuss it, remember we are here to help each other üòâüíô.&lt;/p&gt;

</description>
      <category>terraform</category>
      <category>aws</category>
      <category>devops</category>
      <category>cloud</category>
    </item>
    <item>
      <title>JavaScript Demystified: The execution context and the call stack</title>
      <author>Saran Chakravarthi</author>
      <pubDate>Fri, 16 Jul 2021 21:02:01 +0000</pubDate>
      <link>https://dev.to/saran_chakravarthi/javascript-demystified-the-execution-context-and-the-call-stack-2gka</link>
      <guid>https://dev.to/saran_chakravarthi/javascript-demystified-the-execution-context-and-the-call-stack-2gka</guid>
      <description>&lt;p&gt;Hello Devs, "JavaScript demystified" is going to be a series of blogs. And this is the first one. I will try to cover the important yet not well-known javascript concepts in this blog series. I would like to start off the series by explaining the execution context and the call stack.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#execution-context"&gt;
  &lt;/a&gt;
  Execution context:
&lt;/h1&gt;

&lt;p&gt;Execution context may be defined as the environment in which the code gets executed. Everything in JavaScript happens inside the execution context&lt;/p&gt;

&lt;p&gt;It is composed of two components, the memory component and the code component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-memory-component"&gt;
  &lt;/a&gt;
  The memory component:
&lt;/h2&gt;

&lt;p&gt;The memory component, also known as the variable environment, stores the variable, functions and their values as key-value pairs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code-component"&gt;
  &lt;/a&gt;
  The code component:
&lt;/h2&gt;

&lt;p&gt;It is also known as the thread of execution. Inside the code component, the code is executed one line at a time.&lt;/p&gt;

&lt;p&gt;Execution context is created in two phases. The first one is memory creation phase, in this phase the interpreter skims through the whole program and allocates memory to the variables and functions. The second phase is called the code execution phase, the code gets executed in this phase.&lt;/p&gt;

&lt;p&gt;Let's visualize this with an example. Consider the following program:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var n = 10;

function double(num){
    return num*2;
}

a = double(n);
b = double(7);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the program starts to execute, a new execution context will be created, since we are dealing with global level, it is called the global execution context.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#memory-allocation-phase"&gt;
  &lt;/a&gt;
  Memory allocation phase:
&lt;/h2&gt;

&lt;p&gt;On line number one, memory is allocated for the variable n, and it is assigned with the value "undefined". You can think of "undefined" as a special placeholder keyword (we will learn more about it in the upcoming blogs).&lt;/p&gt;

&lt;p&gt;Then memory is allocated for double function, the whole function is assigned to it as its value.&lt;/p&gt;

&lt;p&gt;Similar to variable n, memory is allocated for variables a and b, and they are assigned with the value "undefined"&lt;/p&gt;

&lt;p&gt;This how the execution context will look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VlT1368u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvmsxu55hhbhyys1484o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VlT1368u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvmsxu55hhbhyys1484o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-execution-phase"&gt;
  &lt;/a&gt;
  Code execution phase:
&lt;/h2&gt;

&lt;p&gt;Code is executed line by line, firstly the value of n will be replaced with 10. The function definition of double will be skipped, as it is just a definition, there is nothing to be executed. Then we reach the function invocation where double function is called. Now something interesting happens, a new execution context will be created inside the global execution context's thread of execution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJIp3rRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pm6hq99nrdjam6ecel0o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJIp3rRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pm6hq99nrdjam6ecel0o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The same process will happen to this new execution context as well.&lt;/p&gt;

&lt;p&gt;During the memory creation phase, memory will be allocated for num and will be assigned with undefined.&lt;/p&gt;

&lt;p&gt;During the code execution phase the value of num will be replaced by 10. &lt;/p&gt;

&lt;p&gt;When the program reaches "return" keyword, the control is returned to the function caller, along with value specified after the return keyword.  Then that particular execution context is deleted. In our case, execution context of &lt;code&gt;double(n)&lt;/code&gt; will be deleted.&lt;/p&gt;

&lt;p&gt;similarly &lt;code&gt;double(7)&lt;/code&gt; will also be executed.&lt;/p&gt;

&lt;p&gt;Once the program reaches the end of the file, the global execution context will also be deleted.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-call-stack"&gt;
  &lt;/a&gt;
  The call stack:
&lt;/h1&gt;

&lt;p&gt;The example we saw was pretty simple. But what if we have multiple function invocations inside a function, how will JavaScript handle it? The answer is call stack.&lt;/p&gt;

&lt;p&gt;It is similar to the stack data structure. It follows the LIFO(Last In First Out) principal.&lt;/p&gt;

&lt;p&gt;Whenever we start a program, the global execution context is pushed into to the stack. After that if we call a function it is pushed into the stack. Once the code reaches the return statement, the function gets popped off the stack. The global execution context will be popped off when we reach the end of the file.&lt;/p&gt;

&lt;p&gt;As we saw, JavaScript has only one call stack, hence it is &lt;strong&gt;single threaded&lt;/strong&gt;. And it executes the code line by line, so it is &lt;strong&gt;synchronous&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But you might say, "I have used AJAX, JavaScript is asynchronous". No, JavaScript is not asynchronous. We will see how javascript handles asynchronous code in the upcoming blogs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next:
&lt;/h3&gt;

&lt;p&gt;I hope you liked this blog, In the next blog, I will cover the concept of hoisting. Follow me to receive the notification.&lt;/p&gt;

&lt;p&gt;Want to connect with me? You can DM on Dev.to and &lt;a href="https://twitter.com/SaranChakravar3"&gt;twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Laravel Deploy Script</title>
      <author>Alexandre Freire</author>
      <pubDate>Fri, 16 Jul 2021 20:14:15 +0000</pubDate>
      <link>https://dev.to/alexandrefreire/laravel-deploy-script-3ob6</link>
      <guid>https://dev.to/alexandrefreire/laravel-deploy-script-3ob6</guid>
      <description>&lt;p&gt;I found this example on gists page of Github. Was writed by github.com/BenSampo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Change to the project directory&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$FORGE_SITE_PATH&lt;/span&gt;

&lt;span class="c"&gt;# Turn on maintenance mode&lt;/span&gt;
php artisan down &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;

&lt;span class="c"&gt;# Pull the latest changes from the git repository&lt;/span&gt;
&lt;span class="c"&gt;# git reset --hard&lt;/span&gt;
&lt;span class="c"&gt;# git clean -df&lt;/span&gt;
git pull origin &lt;span class="nv"&gt;$FORGE_SITE_BRANCH&lt;/span&gt;

&lt;span class="c"&gt;# Install/update composer dependecies&lt;/span&gt;
composer &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--no-interaction&lt;/span&gt; &lt;span class="nt"&gt;--prefer-dist&lt;/span&gt; &lt;span class="nt"&gt;--optimize-autoloader&lt;/span&gt; &lt;span class="nt"&gt;--no-dev&lt;/span&gt;

&lt;span class="c"&gt;# Restart FPM&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt; flock &lt;span class="nt"&gt;-w&lt;/span&gt; 10 9 &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'Restarting FPM...'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;sudo&lt;/span&gt; &lt;span class="nt"&gt;-S&lt;/span&gt; service &lt;span class="nv"&gt;$FORGE_PHP_FPM&lt;/span&gt; reload &lt;span class="o"&gt;)&lt;/span&gt; 9&amp;gt;/tmp/fpmlock

&lt;span class="c"&gt;# Run database migrations&lt;/span&gt;
php artisan migrate &lt;span class="nt"&gt;--force&lt;/span&gt;

&lt;span class="c"&gt;# Clear caches&lt;/span&gt;
php artisan cache:clear

&lt;span class="c"&gt;# Clear expired password reset tokens&lt;/span&gt;
php artisan auth:clear-resets

&lt;span class="c"&gt;# Clear and cache routes&lt;/span&gt;
php artisan route:cache

&lt;span class="c"&gt;# Clear and cache config&lt;/span&gt;
php artisan config:cache

&lt;span class="c"&gt;# Clear and cache views&lt;/span&gt;
php artisan view:cache

&lt;span class="c"&gt;# Install node modules&lt;/span&gt;
&lt;span class="c"&gt;# npm install&lt;/span&gt;

&lt;span class="c"&gt;# Build assets using Laravel Mix&lt;/span&gt;
&lt;span class="c"&gt;# npm run production&lt;/span&gt;

&lt;span class="c"&gt;# Turn off maintenance mode&lt;/span&gt;
php artisan up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>laravel</category>
    </item>
    <item>
      <title>CSS Structure</title>
      <author>Alex Salgado</author>
      <pubDate>Fri, 16 Jul 2021 20:06:09 +0000</pubDate>
      <link>https://dev.to/alextsalg/css-structure-160e</link>
      <guid>https://dev.to/alextsalg/css-structure-160e</guid>
      <description>&lt;h1&gt;
  &lt;a href="#write-css-that-is-easy-to-read-and-everyone-can-understand"&gt;
  &lt;/a&gt;
  Write CSS that is easy to read and everyone can understand
&lt;/h1&gt;

&lt;p&gt;One of the struggles developers encounters while writing CSS is the fact that the property you are looking for can be in any line inside a class selector. To help to solve that problem I thought about a structure to organize the styles so you can know where to write and search the properties you need.&lt;/p&gt;

&lt;p&gt;I have a way of writing my CSS codes that makes people think I have some kind of OCD, but the truth is I have dyslexia so reviewing code or hunting down some CSS property in a class selector is a big challenge so right at the beginning of my career I ‚Äúcreated‚Äù an organized structure to write CSS that changed the whole experience.&lt;/p&gt;

&lt;p&gt;This structure consists of splitting properties of a class selector into blocks so you know where to look for properties by going straight to their corresponding block.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-structure"&gt;
  &lt;/a&gt;
  The Structure
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Positioning Block&lt;/li&gt;
&lt;li&gt;Structure Block&lt;/li&gt;
&lt;li&gt;Typography Block&lt;/li&gt;
&lt;li&gt;Modifier Block&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vQmlm-vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6ta8facji6vzsx8m8h7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vQmlm-vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6ta8facji6vzsx8m8h7.png" alt="css-structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#positioning-block"&gt;
  &lt;/a&gt;
  Positioning Block
&lt;/h3&gt;

&lt;p&gt;Properties that change the absolute positioning of the element on the page like &lt;em&gt;position&lt;/em&gt;, &lt;em&gt;top&lt;/em&gt;, &lt;em&gt;right&lt;/em&gt;, &lt;em&gt;bottom&lt;/em&gt;, &lt;em&gt;left&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ozPgu67e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tch4xm72tg3eyuuqf17h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ozPgu67e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tch4xm72tg3eyuuqf17h.png" alt="position-block"&gt;&lt;/a&gt;&lt;br&gt;
\&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#structure-block"&gt;
  &lt;/a&gt;
  Structure Block
&lt;/h3&gt;

&lt;p&gt;Properties that modifies the structure, shape, size and details of the element like &lt;em&gt;display&lt;/em&gt;, &lt;em&gt;flex and grid properties&lt;/em&gt;, &lt;em&gt;margin&lt;/em&gt;, &lt;em&gt;padding&lt;/em&gt;, &lt;em&gt;background&lt;/em&gt;, &lt;em&gt;border&lt;/em&gt;...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TAFS_xoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12wrl36jyim66fw9z2vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TAFS_xoZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/12wrl36jyim66fw9z2vb.png" alt="structure-block"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typography-block"&gt;
  &lt;/a&gt;
  Typography Block
&lt;/h3&gt;

&lt;p&gt;Everything relate to the lettering in general, text and font properties like &lt;em&gt;font&lt;/em&gt;, &lt;em&gt;text-align&lt;/em&gt;, &lt;em&gt;color&lt;/em&gt;, &lt;em&gt;text-decoration&lt;/em&gt;, &lt;em&gt;text-transform&lt;/em&gt;...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IYhOmgIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzl2821qs7dmpozz3mj8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IYhOmgIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzl2821qs7dmpozz3mj8.png" alt="typography-block"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#modifier-block"&gt;
  &lt;/a&gt;
  Modifier Block
&lt;/h3&gt;

&lt;p&gt;CSS Properties that change the element in any way or add some detail to it and you can't fit in the other blocks. In my case, I put usually properties like &lt;em&gt;transition&lt;/em&gt;, &lt;em&gt;transform&lt;/em&gt;, &lt;em&gt;box-shadow&lt;/em&gt;, &lt;em&gt;cursor&lt;/em&gt;, &lt;em&gt;animation&lt;/em&gt;...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hjhHOTMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dprpkfy1wrj8omzso6qt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjhHOTMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dprpkfy1wrj8omzso6qt.png" alt="modifier-block"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>productivity</category>
      <category>sass</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Cleaner code in Flutter:Getting Started</title>
      <author>Brian Mwangi</author>
      <pubDate>Fri, 16 Jul 2021 19:42:03 +0000</pubDate>
      <link>https://dev.to/brianmwangi/cleaner-code-in-flutter-getting-started-58ff</link>
      <guid>https://dev.to/brianmwangi/cleaner-code-in-flutter-getting-started-58ff</guid>
      <description>&lt;p&gt;Learn how to improve your code quality in flutter by defining how flutter analyzes your code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h3&gt;

&lt;p&gt;Flutter is built on dart which is a statically typed language and now only a few months ago, allows null safety.But even with null safety in place bugs and small annoying problems will easily erupt so Dart has an inbuilt tool, the Dart Analysis Server, built on top of the analyzer package used to detect errors even before any line of code is run. This helps improve your code and reduces chances of bugs.But it does not provide enough flexibility and that‚Äôs where Analysis options come in.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-analysis-options"&gt;
  &lt;/a&gt;
  What are analysis Options
&lt;/h3&gt;

&lt;p&gt;So what are analysis options? Analysis options is a set of rules which help customize the dart analysis. The rules are written in a file, analysis_options in the project‚Äôs root folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h3&gt;

&lt;p&gt;Create a new project by opening your terminal in any folder and enter the following command &lt;strong&gt;flutter create new_project_name&lt;/strong&gt;. Open the project once it is done generating using your latest favorite IDE. If you have an existing project and open it using the preferred IDE also.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#analysis-options-adding-options"&gt;
  &lt;/a&gt;
  Analysis Options - Adding Options
&lt;/h3&gt;

&lt;p&gt;Create a new file in the lib folder called &lt;strong&gt;analysis_options.yaml&lt;/strong&gt; and add the following rules. We will go through them to get a better understanding of what they mean.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#exclude"&gt;
  &lt;/a&gt;
  Exclude
&lt;/h4&gt;

&lt;p&gt;The exclude rule is meant to instruct the analyzer not to check anything within the folder or any file that ends with a certain pattern.For example the rules shown above show two lines one with build and the other with an asterisk ending &lt;strong&gt;(*.g.dart)&lt;/strong&gt;. This means that the analyzer will skip any file within the lib folder that has the extension: .g.dart.This makes it really convenient because you won't have to write multiple files in case you have more than one file with the given extension.In this case the build/** means the analyzer will skip all files within the build folder. This is where our flutter app is compiled to a bundle that can run on a device.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#errors"&gt;
  &lt;/a&gt;
  Errors
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;missing_return:&lt;/strong&gt;&lt;br&gt;
Produce an error everytime there‚Äôs a function that does not return its type.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;dead_code&lt;/strong&gt;&lt;br&gt;
This is a mistake we overlook especially when writing if statements with multiple else if. This rule will produce an error for unreachable code.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;always_declare_return_types&lt;/strong&gt;&lt;br&gt;
Will check for return types on all functions. In case of new updates it will prevent a miss in case of a change.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;avoid_web_libraries_in_flutter&lt;/strong&gt;&lt;br&gt;
Prevent installs of libraries that are meant for the web. Only allow libraries and plugins that are meant for android and IOS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;missing_required_param&lt;/strong&gt;&lt;br&gt;
Ensure that all function and method parameters are added otherwise pop error.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;file_names&lt;/strong&gt;&lt;br&gt;
Dart has a preferred naming system called the snake case system. This rule will give an error if a file created does not follow this naming system. The files are named with underscores as separators and all letters in lowercase.&lt;br&gt;
Other naming systems include Kebab, Pascal case and Camel Case. You can read more &lt;a href="https://en.wikipedia.org/wiki/Naming_convention_(programming)"&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;empty_statements&lt;/strong&gt;&lt;br&gt;
View the following code to get a better understanding.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;iterable_contains_unrelated_type&lt;/strong&gt;&lt;br&gt;
Invoke an error if a list or any class that extends the iterable to accept only a certain type any other unrelated to fail.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;list_remove_unrelated_type&lt;/strong&gt;&lt;br&gt;
This checks for type before removing an item. Works on iterable.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;no_duplicate_case_values&lt;/strong&gt;&lt;br&gt;
This means if there are more than one return which would lead to dead code, the analyzer shows it as an error.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;unrelated_type_equality_checks&lt;/strong&gt;&lt;br&gt;
This will show an error when trying to compare two values of different type.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;lines_longer_than_80_chars&lt;/strong&gt;&lt;br&gt;
This rule ensures that there isn‚Äôt a line of code that is longer than 80 characters long. The code will need to be wrapped to the next line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;prefer_single_quotes:&lt;/strong&gt;&lt;br&gt;
Ensures that only single quotes are used from importing files to initializing String properties.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Dart checks for the analysis options but you can also get analyzer to run by running the following command from the terminal within the project's directory &lt;strong&gt;dart analyzer .&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>codequality</category>
    </item>
    <item>
      <title>HOCs vs Hooks. What to use and why?</title>
      <author>Leo Cu√©llar</author>
      <pubDate>Fri, 16 Jul 2021 19:29:21 +0000</pubDate>
      <link>https://dev.to/devcore/hocs-vs-hooks-what-to-use-and-why-nnb</link>
      <guid>https://dev.to/devcore/hocs-vs-hooks-what-to-use-and-why-nnb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#quick-summary"&gt;
  &lt;/a&gt;
  Quick summary
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will see how to refactor a higher order component into a custom hook and the main benefits and caveats of using one over the other.&lt;/p&gt;




&lt;p&gt;Recently I published a little tutorial about &lt;a href="https://dev.to/react/what-is-a-higher-order-component/"&gt;Higher Order Components&lt;/a&gt;. I consider that an important topic since it's widely asked in job interviews and is still used in many applications.&lt;/p&gt;

&lt;p&gt;A fellow developer read the article and kindly suggested I talk about the pros and cons of using them and how hooks replace the need for HOCs, so here we go!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-little-talk-about-hooks"&gt;
  &lt;/a&gt;
  A little talk about hooks
&lt;/h2&gt;

&lt;p&gt;On February 16, 2019, React 16.8 was released to the public. &lt;a href="https://es.reactjs.org/blog/2019/02/06/react-v16.8.0.html"&gt;The one with hooks&lt;/a&gt; was the main description given to that release.&lt;/p&gt;

&lt;p&gt;Since then, an extensive discussion has arisen about whether or not hooks will replace common React patterns.&lt;/p&gt;

&lt;p&gt;It was a relief for many since we already preferred to use functional components over class components. It allowed for the development of easier to read, easier to write, and easier to test components, and many of us switched to that pattern in no time. &lt;/p&gt;

&lt;p&gt;Since then, I haven't touched a class component, and honestly, I'm very glad.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-higher-order-components"&gt;
  &lt;/a&gt;
  What are higher order components?
&lt;/h2&gt;

&lt;p&gt;A HOC is a component that takes one or more components as props and returns new components.&lt;/p&gt;

&lt;p&gt;HOCs can easily allow you to reduce the amount of duplicate logic on your application. Let me show you an example:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/cool-dawn-39m12"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you don't understand what's happening there I really encourage you to check my tutorial about &lt;a href="https://dev.to/react/what-is-a-higher-order-component/"&gt;Higher Order Components&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Anyway, let's break out that code to understand it.&lt;/p&gt;

&lt;p&gt;You can see that I created a HOC called &lt;code&gt;withData&lt;/code&gt;, which accepts a child component. &lt;/p&gt;

&lt;p&gt;When the HOC mounts, it fetches data from the pokemon API and returns the child component with an appended prop containing the fetching results.&lt;/p&gt;

&lt;p&gt;Then we have the &lt;code&gt;ListResults&lt;/code&gt; component, which takes a &lt;code&gt;results&lt;/code&gt; prop and renders an unordered list with it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#refactoring-into-a-custom-hook"&gt;
  &lt;/a&gt;
  Refactoring into a custom hook
&lt;/h2&gt;

&lt;p&gt;Look at this code:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/fast-framework-69pct"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So here, you can see that we created a custom hook called &lt;code&gt;useData&lt;/code&gt;, which fetches from the API and returns the results.&lt;/p&gt;

&lt;p&gt;Our &lt;code&gt;ListResults&lt;/code&gt; component can then use it to get some data and render it in a list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;I like to keep my articles simple to help new developers understand concepts like this. This could involve deeper topics, patterns, and principles that we can cover if you want, but for the sake of simplicity, allow me to conclude.&lt;/p&gt;

&lt;p&gt;HOC is just a pattern, which means that it's not written in stone that you have to use class components to write them.&lt;/p&gt;

&lt;p&gt;Hooks give us the ability to handle state and side effects in our functional components and our functional-based HOCs, but if you're like me and prefer to use functional components and your HOC uses hooks to work, why not create a custom hook instead?&lt;/p&gt;

&lt;p&gt;This will not be the case every time, but hopefully, this tutorial gives more clarity when deciding if you need a HOC or a custom hook.&lt;/p&gt;




&lt;p&gt;This article was first published on &lt;a href="https://devcore.io"&gt;devcore.io&lt;/a&gt;. go check it out!&lt;/p&gt;

</description>
      <category>react</category>
      <category>hooks</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Tips for creating a good post</title>
      <author>Walter Nascimento</author>
      <pubDate>Fri, 16 Jul 2021 19:25:44 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/tips-for-creating-a-good-post-2bd6</link>
      <guid>https://dev.to/walternascimentobarroso/tips-for-creating-a-good-post-2bd6</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/walternascimentobarroso-pt/dicas-para-criar-um-bom-post-a5c69143f3d"&gt;[Clique aqui para ler em portugu√™s]&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#title"&gt;
  &lt;/a&gt;
  TITLE
&lt;/h2&gt;

&lt;p&gt;Write an attention-grabbing headline that will draw an audience to your text.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  IMAGES
&lt;/h2&gt;

&lt;p&gt;Use an image to reflect what your post means.&lt;br&gt;
some sites with free images:&lt;br&gt;
&lt;a href="https://stocksnap.io/"&gt;https://stocksnap.io/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.pexels.com/"&gt;https://www.pexels.com/&lt;/a&gt;&lt;br&gt;
Website that searches for free images on other websites &lt;a href="https://farejadordeimagens.com.br/"&gt;https://farejadordeimagens.com.br/&lt;/a&gt;&lt;br&gt;
Site to change image dimension&lt;br&gt;
&lt;a href="https://www.easy-resize.com/"&gt;https://www.easy-resize.com/&lt;/a&gt;&lt;br&gt;
Website to reduce image weight&lt;br&gt;
&lt;a href="https://compressor.io/"&gt;https://compressor.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tables"&gt;
  &lt;/a&gt;
  TABLES
&lt;/h2&gt;

&lt;p&gt;Whenever possible, adjust your content in tables, so the information is more organized, by comparison tables.&lt;/p&gt;

&lt;p&gt;To help assemble the tables, use the website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ozh.github.io/ascii-tables/"&gt;https://ozh.github.io/ascii-tables/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codes"&gt;
  &lt;/a&gt;
  CODES
&lt;/h2&gt;

&lt;p&gt;Whenever you need to put in some code that is too extensive, use some of the tools below:&lt;br&gt;
&lt;a href="https://carbon.now.sh/"&gt;https://carbon.now.sh/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codepen.io/"&gt;https://codepen.io/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://gist.github.com/"&gt;https://gist.github.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tags"&gt;
  &lt;/a&gt;
  TAGS
&lt;/h2&gt;

&lt;p&gt;Always add tags to your post, so it‚Äôs easier to find&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#emojis"&gt;
  &lt;/a&gt;
  EMOJIS
&lt;/h2&gt;

&lt;p&gt;To convey more feelings and expressions in your posts, use &lt;br&gt;
emojis&lt;br&gt;
&lt;a href="http://emojipedia.org/"&gt;http://emojipedia.org/&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.iemoji.com/"&gt;http://www.iemoji.com/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;üòäüòäSee you! üòäüòä&lt;/p&gt;

</description>
      <category>post</category>
      <category>content</category>
      <category>tips</category>
      <category>article</category>
    </item>
    <item>
      <title>¬øQu√© necesito saber antes de iniciar con Redux ?</title>
      <author>Billi Ramirez</author>
      <pubDate>Fri, 16 Jul 2021 19:24:05 +0000</pubDate>
      <link>https://dev.to/billiramirez/que-necesito-saber-antes-de-iniciar-con-redux-31n1</link>
      <guid>https://dev.to/billiramirez/que-necesito-saber-antes-de-iniciar-con-redux-31n1</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eF6qVjfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnqxxcr143jjn6rojvjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eF6qVjfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnqxxcr143jjn6rojvjn.png" alt="Redux Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;al construir aplicaciones web con React, te encontrar√°s con la necesidad de manejar el estado de tu aplicaci√≥n, ya sea de forma local (componentes) o global (√∫nica fuente de la verdad). Si bien podr√≠as administrarlo con las distintas formas que React te ofrece (useState, setState, ContextAPI, etc) con el tiempo se volver√≠a un poco tedioso tener que recordar las decisiones arquitect√≥nicas que tomaste en cada componente para manejar el estado de tu app.&lt;/p&gt;

&lt;p&gt;Redux ya te ofrece una arquitectura para manejar el estado de tu app, basada en Flux, sin embargo entrar a esto sin tomar el tiempo para comprender como funciona realmente, es decir, los fundamentos, ser√° sumamente dolorosa la curva de aprendizaje para incorporar Redux en tus proyectos.&lt;/p&gt;

&lt;p&gt;En este post, tratar√© de trasmitirte de la mejor manera algunos de esos conceptos para que sean f√°ciles de comprender para ti. Algunos t√©rminos los dejar√© en ingles porque es mejor quedarse en una misma nomenclatura y evitar confundirnos en sus traducciones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#state-management-manejo-del-estado"&gt;
  &lt;/a&gt;
  State Management ‚Äî Manejo del Estado
&lt;/h2&gt;

&lt;p&gt;Podr√≠amos decir que el manejo del estado de un aplicaci√≥n com√∫n est√° conformado por:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;State (estado) :&lt;/strong&gt; Unica fuente de verdad&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;View (vista):&lt;/strong&gt; Una declarativa (como deseo que se vea) descripci√≥n de la UI, basada en tu state actual.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Actions:&lt;/strong&gt; Son los distintos eventos que suceden cuando el usuario realiza una acci√≥n en nuestra aplicaci√≥n, por ende actualiza nuestro estado y nuestras vistas se actualizan tambi√©n.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CpEgpir5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dl92skorgyisgon7ba6t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CpEgpir5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dl92skorgyisgon7ba6t.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Localmente esta soluci√≥n pareciera funcionar, pero ¬øQu√© sucede cuando necesitamos propagar esos cambios del estado a distintas parte de nuestra aplicaci√≥n? Pasando props de componentes padres a componentes hijos, pudiera ser una soluci√≥n, la cual no la veo muy eficiente, m√°s cuando son componentes sumamente anidados. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6t1zBubT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pocwcm1tkbkcscogsjz6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6t1zBubT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pocwcm1tkbkcscogsjz6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬øQu√© pasa con componentes que est√°n en distintas partes de nuestra aplicaci√≥n? Ya nuestra soluci√≥n local no podr√≠a solventarla.&lt;/p&gt;

&lt;p&gt;Una manera de solucionar esto es centralizando nuestro estado y permitiendo que los componentes tomen las piezas que necesitan para mostrar en la UI, o actualizar el estado. Esto nos permite tener un c√≥digo m√°s estructurado y mantenible, independencia entre &lt;strong&gt;views&lt;/strong&gt; y &lt;strong&gt;states&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--daCYtfOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qde8ce5itmuvcm265p6m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--daCYtfOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qde8ce5itmuvcm265p6m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esto vendr√≠a siendo lo b√°sico detr√°s Redux, tener un punto centralizado de nuestro estado, un patr√≥n definido para actualizar nuestro estado, haciendo nuestro c√≥digo m√°s predecible, de manera que cualquier desarrollador que entre al proyecto pueda entender de que se trata y poder integrarse f√°cilmente. &lt;/p&gt;

</description>
      <category>redux</category>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 6 cryptocurrency exchange development company in turkey</title>
      <author>Radin Dev</author>
      <pubDate>Fri, 16 Jul 2021 19:00:06 +0000</pubDate>
      <link>https://dev.to/radindev/top-6-cryptocurrency-exchange-development-company-in-turkey-2dkd</link>
      <guid>https://dev.to/radindev/top-6-cryptocurrency-exchange-development-company-in-turkey-2dkd</guid>
      <description>&lt;p&gt;With the ever-expanding realm of digital or cryptocurrencies globally, especially in Turkey, and its considerable impact on other financial markets, many individuals and legal entities are considering developing a crypto exchange platform to make good profits from this young and vast market.&lt;br&gt;
To ease your mind about developing this advanced software, you need to hire a super capable team or sign a contract with a &lt;a href="https://radindev.com/cryptocurrency-exchange-development-in-turkey/"&gt;cryptocurrency exchange development company in Turkey&lt;/a&gt;. In the following, we will review the list of the top 6 companies developing cryptocurrency exchange sites in Turkey and compare their strengths and weaknesses.&lt;br&gt;
Factors that you should know before choosing a crypto exchange development company are:&lt;br&gt;
‚Ä¢ Number of Employees&lt;br&gt;
‚Ä¢ Contact details of the company&lt;br&gt;
‚Ä¢ Successful portfolio&lt;br&gt;
‚Ä¢ Customer Satisfaction&lt;br&gt;
‚Ä¢ Experience in this field&lt;/p&gt;

&lt;p&gt;Now let's compare the top companies:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-radindev"&gt;
  &lt;/a&gt;
  1. Radindev
&lt;/h2&gt;

&lt;p&gt;Radindev Web Development Company is one of the best and most dedicated companies in blockchain development.&lt;br&gt;
The main goal of radindev software development company is to reduce the risks in crypto transactions like bitcoin and to encourage new cryptocurrency exchange start-ups by providing a bitcoin or other crypto exchange script. radindev is a provider of crypto-exchange software that covers more than 60 countries.&lt;br&gt;
According to their assertion, they offer a more secure crypto exchange platform than others. Even their platform panel admin is fully customizable, and in the best possible way, is user-friendly.&lt;br&gt;
During their five years of activity, they have served more than 500 happy customers from all over the world.&lt;br&gt;
Radindev also has more than 100 loyal and committed employees, which is unique.&lt;br&gt;
Their services include &lt;a href="https://radindev.com/white-label-crypto-exchange-software/"&gt;developing white label crypto exchange software&lt;/a&gt;, p2p crypto exchange platform development, cryptocurrency MLM software development, and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0FrtJIbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bygal1ea2acfmbc1jj40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0FrtJIbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bygal1ea2acfmbc1jj40.png" alt="p2p crypto exchange platform development in turkey"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-bitdeal"&gt;
  &lt;/a&gt;
  2. Bitdeal
&lt;/h2&gt;

&lt;p&gt;One of the best companies in this field is bitdeal company which is headquartered in India. With several years of experience in web development, bitdeal has become a giant in the development of cryptocurrency trading platforms, which has completed many projects so far.&lt;br&gt;
While they offer high quality, reliability, and capability, their dedication, patience, and honesty with their customers are exemplary.&lt;br&gt;
Bitdeal is also known for providing complete blockchain solutions that include smart contract development, private blockchain technology integration, Ethereum token creation, digital tokens creation, ICOs, and bitcoin mining solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-blockchainappsdeveloper"&gt;
  &lt;/a&gt;
  3. Blockchainappsdeveloper
&lt;/h2&gt;

&lt;p&gt;Blockchain apps developer is another leading active and influential company in this field that operates in India and offers its services to various countries, including Turkey, Germany, the USA, and Canada. They provide several blockchain technologies called white labels to start-ups active in this field. They have a dedicated team of developers with extensive knowledge of blockchain technology and offer the best solutions.&lt;br&gt;
You can hire a full-time blockchain developer with Blockchain apps developer company.&lt;br&gt;
They offer various services that can be mention as follows:&lt;br&gt;
‚Ä¢ Blockchain development services&lt;br&gt;
‚Ä¢ Cryptocurrency exchange script&lt;br&gt;
‚Ä¢ Decentralized exchange script&lt;br&gt;
‚Ä¢ Crypto exchange clone development&lt;br&gt;
‚Ä¢ Crypto wallet development services&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-nadcab"&gt;
  &lt;/a&gt;
  4. Nadcab
&lt;/h2&gt;

&lt;p&gt;When you need to develop blockchain and currency codes, Nadcab technology is one of the best choices you can make. They started their business in 2015 and founded this company. Over time, they also specialized in developing software solutions.&lt;br&gt;
Now they have more than 30 committed, dedicated, and patient employees. Using the latest technologies they have experienced has enabled them to utilize their innovative information in different areas and convey a lot of added value to their customers. They claim that they can combine their creative concepts to make their services more advanced and accessible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-zabtechnologis"&gt;
  &lt;/a&gt;
  5. Zabtechnologis
&lt;/h2&gt;

&lt;p&gt;Today, blockchain and cryptocurrencies are considered a revolution in security for storage and trading. As one of the leading cryptocurrency software companies, Zab technologies make great efforts to provide blockchain development services.&lt;br&gt;
They have a rich and expert team that is still adapting their knowledge to the latest technologies. Their end-to-end services have so far helped many new customers and start-ups to make huge profits. The reliable and cost-effective results of Zab are pretty obvious and based on team initiative and customer needs.&lt;br&gt;
Enthusiasts in this field are constantly understanding new market technologies and implementing them in their potential products. With their exceptionally high success rate, they offer first-class Blockchain by-products and ultimately go with lots of benefits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-osiztechnologiescom"&gt;
  &lt;/a&gt;
  6. osiztechnologies.com
&lt;/h2&gt;

&lt;p&gt;Osiz Software Company is a provider and developer of various web, mobile, and blockchain applications and is one of the leaders in this field. This large company is determined to provide utterly innovative software solutions for companies and start-ups, and entrepreneurs. Osiz company is constantly researching and reviewing the latest technologies to keep itself and its technologies updated every day. These technologies include artificial intelligence, blockchain, cryptocurrency, IoT, and many more.&lt;br&gt;
They are a team of +100 experts fluent in several programming languages, which paves the way for this innovative path.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The Organization Behind Chaos Engineering w/ Matt Fornaciari of Gremlin</title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 16 Jul 2021 18:57:17 +0000</pubDate>
      <link>https://dev.to/linearb/the-organization-behind-chaos-engineering-w-matt-fornaciari-of-gremlin-3cp5</link>
      <guid>https://dev.to/linearb/the-organization-behind-chaos-engineering-w-matt-fornaciari-of-gremlin-3cp5</guid>
      <description>&lt;p&gt;Is Chaos Engineering really chaos? Or is there a method to the madness?&lt;/p&gt;

&lt;p&gt;On this week's episode of &lt;a href="https://devinterrupted.com/podcast/chaos-engineering/"&gt;Dev Interrupted&lt;/a&gt;, Matthew Fornaciari, CTO at Gremlin, talks about Chaos Engineering. Matthew details the history of Chaos Engineering, why its name may be a misnomer, and why continuous chaos is a good thing.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2xwZ0IxHB5fvljUEf9EpNi"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;What is Chaos Engineering?&lt;/li&gt;
&lt;li&gt;The benefits of Chaos Engineering&lt;/li&gt;
&lt;li&gt;Where Chaos engineering can be implemented within an organization&lt;/li&gt;
&lt;li&gt;Should your organization consider using Chaos Engineering?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-O0vjlejc6U"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>chaosengineering</category>
      <category>engineering</category>
      <category>organization</category>
      <category>implementation</category>
    </item>
    <item>
      <title>JavaScript : Variables &amp; Scope</title>
      <author>Vivek Alhat</author>
      <pubDate>Fri, 16 Jul 2021 18:51:59 +0000</pubDate>
      <link>https://dev.to/vivekalhat/javascript-variables-scope-3jhg</link>
      <guid>https://dev.to/vivekalhat/javascript-variables-scope-3jhg</guid>
      <description>&lt;p&gt;Variable is a fundamental concept of programming. A variable is a container that stores a value or data. It is a named unit of data that is assigned a value.&lt;/p&gt;

&lt;p&gt;Variables in JavaScript are different compared to other programming languages such as C and C++.&lt;/p&gt;

&lt;p&gt;JavaScript is a &lt;strong&gt;&lt;em&gt;weakly typed language&lt;/em&gt;&lt;/strong&gt;. It means that you do not have to specify the type for a variable declaration.&lt;/p&gt;

&lt;p&gt;The scope is a policy that manages the availability of variables throughout the program.&lt;/p&gt;

&lt;p&gt;In JavaScript, variables can be created in three ways, these are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;var&lt;/li&gt;
&lt;li&gt;let&lt;/li&gt;
&lt;li&gt;const&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#var"&gt;
  &lt;/a&gt;
  var
&lt;/h2&gt;

&lt;p&gt;Before let and const were introduced there was only one method for variable declarations i.e var. Var is a keyword that is used to declare or &lt;em&gt;optionally&lt;/em&gt; initialize a variable.&lt;/p&gt;

&lt;p&gt;e.g: &lt;code&gt;var name;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When a variable is &lt;strong&gt;declared&lt;/strong&gt; using var then by default &lt;em&gt;undefined&lt;/em&gt; is assigned to that variable. In this case, the name contains a value undefined. If you initialize a variable then it will contain the assigned value.&lt;/p&gt;

&lt;p&gt;e.g: &lt;code&gt;var character = "Joseph Joestar"&lt;/code&gt;&lt;br&gt;
In the above example, the variable character contains a string value i.e &lt;em&gt;"Joseph Joestar"&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Var statement declares a &lt;strong&gt;globally scoped variable&lt;/strong&gt;. This means that a variable declared using var is available in the global context i.e throughout the program.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9DzX2lQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6qa9ch2kmz6yclybpn5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DzX2lQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6qa9ch2kmz6yclybpn5.png" alt="var"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above example, we initialized the var variable with value as &lt;em&gt;Joseph Joestar&lt;/em&gt;. This variable is now available in the global context of the program. We have also created a function &lt;em&gt;changeCharacter&lt;/em&gt; that reassigns the value to the variable and then outputs it to the console. After executing the function, the value that will be printed to the console is &lt;em&gt;Dio Brando&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now, if we print the variable outside the function, it will still print &lt;em&gt;Dio Brando&lt;/em&gt; instead of &lt;em&gt;Joseph Joestar&lt;/em&gt;. Even though we have changed the value &lt;strong&gt;only inside the function&lt;/strong&gt; still is printing the same value &lt;strong&gt;outside the function scope&lt;/strong&gt;. This happens because &lt;strong&gt;var creates a globally scoped variable&lt;/strong&gt;. The change is reflected globally thus we get this output.&lt;/p&gt;

&lt;p&gt;This type of situation may create confusion while writing large components so you should avoid using var as much as possible. So what should we use instead of var?&lt;br&gt;
ES6 introduced two new ways to create variables i.e using let and const.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let-amp-const"&gt;
  &lt;/a&gt;
  let &amp;amp; const
&lt;/h2&gt;

&lt;p&gt;As we saw earlier that var declares globally scoped variables which may lead to issues if not used properly. This problem can be solved using &lt;em&gt;let&lt;/em&gt; &amp;amp; &lt;em&gt;const&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The variables created using let and const are &lt;strong&gt;block-scoped&lt;/strong&gt;. A block is everything inside two curly braces i.e {}.&lt;/p&gt;

&lt;p&gt;e.g: &lt;code&gt;let name&lt;/code&gt; or &lt;code&gt;let name = "JOJO"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70-cPu5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv438byprxkwhzegukeh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70-cPu5_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv438byprxkwhzegukeh.png" alt="let"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above example, we have created a new variable inside a function using the let keyword. This &lt;strong&gt;name&lt;/strong&gt; variable is now block-scoped hence exists only inside that function. If we print it outside the function it will output &lt;strong&gt;Reference Error: name not defined&lt;/strong&gt; to the console because name variable is not present in the global scope.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;const&lt;/strong&gt; is similar to let. It creates a block-scoped variable. The only difference is that you cannot reassign a new value to the const variable. The variable declared using const has a constant value. You cannot re-assign or re-declare value to the const variable, otherwise, it will throw &lt;strong&gt;Type Error: assignment to constant variable&lt;/strong&gt; error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sYX-o7od--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j309yiyiwz29bl87ys19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sYX-o7od--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j309yiyiwz29bl87ys19.png" alt="const"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;var is always hoisted in JavaScript. You can use the variable declared using var before its actual declaration.&lt;/p&gt;

&lt;p&gt;let and const are also hoisted but they are not initialized.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create (passwordless) Login Links for users in Laravel</title>
      <author>koost89</author>
      <pubDate>Fri, 16 Jul 2021 18:29:45 +0000</pubDate>
      <link>https://dev.to/koost89/login-links-for-laravel-580e</link>
      <guid>https://dev.to/koost89/login-links-for-laravel-580e</guid>
      <description>&lt;p&gt;As I was looking for a functionality that lets authenticatables log in in my Laravel applications with a simple click of a link, I came across a few packages already developed for Laravel, these packages did not what I specifically needed (namely give me full control over the expiration time and at the same time the amount of requests the URL would accept, a command as well as a way to generate them in my application‚Äôs codebase and have tested support for all current PHP and Laravel versions). Therefore I set out to create my own package, named Login Links for Laravel. In this post I will show you step by step how to use this in your own Laravel 6, 7 or 8 application.&lt;/p&gt;

&lt;p&gt;Lets go!&lt;/p&gt;

&lt;p&gt;Now I am not going to show you how to create a new Laravel application as there are tons of resources for that online.&lt;/p&gt;

&lt;p&gt;We start by requiring this package in our existing application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require koost89/laravel-login-links
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once composer is happy with our decision to install the package, we can go ahead and publish the vendor files that come with Login Links for Laravel.&lt;br&gt;
First off: the migration, this is publishable by running the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan vendor:publish --provider="Koost89\LoginLinks\LoginLinkServiceProvider" --tag="login-links-migrations"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will publish the migrations needed for the package to operate. To give a bit of information as to why we need a table for the login links, its fairly simple. We need a way to store the URL, so we can monitor the amount of visits the URL has gotten (and dispose of it once it reaches it‚Äôs maximum amount of allowed clicks).&lt;/p&gt;

&lt;p&gt;Next up we need to actually execute the migration, this is done by running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create the &lt;code&gt;login_link_tokens&lt;/code&gt; table which we use to store the URL‚Äôs.&lt;/p&gt;

&lt;p&gt;After this we can (and you probably would want to) publish the config file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan vendor:publish --provider="Koost89\LoginLinks\LoginLinkServiceProvider" --tag="login-links-config"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The config file that was published in config/login-links.php contains a few niceties for you to configure, I‚Äôd suggest you take a look at them and edit them however you seem fit, but the default config should work just fine with one more step.&lt;/p&gt;

&lt;p&gt;In your &lt;code&gt;App\Models\User&lt;/code&gt; class or any other class that extends the Authenticatable contract you can add the trait: &lt;code&gt;Koost89\LoginLinks\Traits\CanLoginWithLink;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Your user (or other authenticatable) should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use Koost89\LoginLinks\Traits\CanLoginWithLink;
use Illuminate\Foundation\Auth\User as Authenticatable;

class User extends Authenticatable
{
    use CanLoginWithLink;    // the rest of your class
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this, you should be all set to start generating login links! Easy right?&lt;/p&gt;

&lt;p&gt;So lets start creating some links!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$user = User::first();
$url = $user-&amp;gt;generateLoginLink(); 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which should output the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://yourdomain.tld/uli?auth_id=1&amp;amp;auth_type=QXBwX01vZGVsc19Vc2Vy&amp;amp;expires=1626433419&amp;amp;signature=ce35c6244683813273382c151cb83fa1937b2c2be4e2e5cef3af486889ba5b16
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The URL contains a couple of key parts we need to identify the user type and identifier.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;auth_id&lt;/code&gt; is ofcourse our autenticatables identifier. This is what we use to fetch the instance of our authenticatable.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;auth_type&lt;/code&gt; is a base64-encoded string of our autenticatable classname. As in the example above the auth_type would decode to App_Models_User. By adding this to our URL we can get the correct guard from the given model, giving us great flexibility to create multiple authenticatable models with each having their own guard, while still being able to login with those guards.&lt;/p&gt;

&lt;p&gt;The expires and signature are generated by the temporarySignedUrl method provided by Laravel. To read more about SignedURL‚Äôs and how they protect against manipulation, please make sure to check out &lt;a href="https://laravel.com/docs/8.x/urls#signed-urls"&gt;Laravel‚Äôs documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ok back to the main course.&lt;/p&gt;

&lt;p&gt;There are alternative ways to generate a login URL, for example you can use the provided facade:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use Koost89\LoginLinks\Facades\LoginLink;

$user = User::first();
$link = LoginLink::generate($user);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or even with a console command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan login-links:generate 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the console command you can specify the identifier of your App\Models\User class or when you need a different authenticatable, you can specify that with the &lt;code&gt;--class=&lt;/code&gt; option&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan login-links:generate 1 --class=App\Models\Team
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you have visited the URL, you should log in as the specified user. If you haven‚Äôt changed any configuration, the URL is removed after the first login with that link. By default the URL expires after 120 seconds (2 minutes), but you can simply edit that in the config.&lt;/p&gt;

&lt;p&gt;When a URL is not clicked and expires, it isn‚Äôt automatically deleted from the database. To make sure your database stays nice and clean Laravel Login Links comes with a command you can run in your scheduler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan login-links:cleanup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command deletes all the existing and expired URL‚Äôs from your database and if you combine this with Laravel‚Äôs scheduler, it helps keeping things clean!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;protected function schedule(Schedule $schedule)
{
    $schedule-&amp;gt;command('login-links:cleanup')-&amp;gt;hourly();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now an additional wish for me was events, I‚Äôd like to know when links were being generated but also when they were used. To facilitate this I added both those events in this package.&lt;/p&gt;

&lt;p&gt;When you generate a URL, we fire the &lt;code&gt;LoginLinkGenerated&lt;/code&gt; event for you to listen to. This event receives the id and the class data for the user it was generated for.&lt;/p&gt;

&lt;p&gt;When you click the generated URL, the &lt;code&gt;LoginLinkUsed&lt;/code&gt; event is fired which contains the same id and class data. This way we can easily log the flows of our generated URL‚Äôs.&lt;/p&gt;

&lt;p&gt;While there are great alternatives to this package, I created this because I had very specific wishes for it and creating my own package worked out wonderfully. If you‚Äôd wish to read more about it, check it out on github: &lt;a href="https://github.com/koost89/laravel-login-links"&gt;Login Links for Laravel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for taking your time to read this post!&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>tutorial</category>
      <category>login</category>
    </item>
  </channel>
</rss>
