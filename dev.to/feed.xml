<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Monitoring Performance </title>
      <author>Bernd Wechner</author>
      <pubDate>Mon, 13 Dec 2021 07:56:26 +0000</pubDate>
      <link>https://dev.to/thumbone/monitoring-performance-1l7i</link>
      <guid>https://dev.to/thumbone/monitoring-performance-1l7i</guid>
      <description>&lt;h2&gt;
  &lt;a href="#aka-how-often-shall-we-defer-to-the-ui"&gt;
  &lt;/a&gt;
  (a.k.a. How often shall we defer to the UI?)
&lt;/h2&gt;

&lt;p&gt;In my effort to build a simple &lt;a href="https://dev.to/thumbone/copy-to-clipboard-first-cut-1j5j"&gt;clipboard copy button&lt;/a&gt;, I found the need to &lt;a href="https://dev.to/thumbone/in-lining-styles-client-side-9oi"&gt;in-line styles&lt;/a&gt; if they are to survive emailing, and that in-lining could, for very large elements be &lt;a href="https://dev.to/thumbone/html-style-in-lining-performance-and-what-to-about-it-4a55"&gt;rather costly&lt;/a&gt; (in time), of which was born a need to let UI events happen while doing the job. &lt;/p&gt;

&lt;p&gt;With all that under my belt, knowing how long it was likely to take would also be nice, a bit of UI feedback on progress of the style in-lining operation. Basically, a progress bar ...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USwsFglW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45rgp3d3h4itz35orh8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USwsFglW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/45rgp3d3h4itz35orh8t.png" alt="Progress Bar" width="880" height="234"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Progress bars were once a problem in JavaScript, with lots of tips, tricks and 3rd party solutions. But no more, we now have the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"&gt;progress&lt;/a&gt; element and it's a breeze. We can just add: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;progress value="0"/&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;to a button, or elsewhere, and style it as we wish, display it as needed and update it's &lt;code&gt;max&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; to suit. The default width, it seems, when we put I  on my page was around the 150 pixels mark, but it can be styled as desired.&lt;/p&gt;

&lt;p&gt;And that answers our "How often shall we defer to the UI?" question implicitly. While not a fault-free, universally-suitable answer, it's not a bad start to update no more often than it takes to advance that progress bar by one pixel (i.e to make a visible change to it). &lt;/p&gt;

&lt;p&gt;For 100,000 elements say and a 150 pixel bar that's an ominous &lt;a href="https://en.wikipedia.org/wiki/666_%28number%29"&gt;666&lt;/a&gt; elements per pixel. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DDkZBRX4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq37izkf5p784xhr355x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DDkZBRX4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq37izkf5p784xhr355x.jpg" alt="666" width="600" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we drop the frequency of deferrals to the UI to once every 666 elements they are in-lined in &lt;a href="https://en.wikipedia.org/wiki/Phrases_from_The_Hitchhiker%27s_Guide_to_the_Galaxy#The_Answer_to_the_Ultimate_Question_of_Life,_the_Universe,_and_Everything_is_42"&gt;42&lt;/a&gt; seconds (an auspicious figure). Much improved performance.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ESBkhf1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/377av6uykw2oz2y4ui4s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ESBkhf1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/377av6uykw2oz2y4ui4s.jpg" alt="42" width="400" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To recap: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;30 seconds with a locked UI, &lt;/li&gt;
&lt;li&gt;11 minutes if we defer to the UI after ever element (~100,000 times - i.e. 30 seconds of style processing an 10+minutes of promise management), and &lt;/li&gt;
&lt;li&gt;42 seconds if we temper the UI deferrals to 150 times over the duration of in-lining (for a 150pixel progress bar). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Empirical tests confirm that, during those 42 seconds, the UI is admirably responsive, no noticeable lag and so we're content!&lt;/p&gt;

&lt;p&gt;But still, in 42 seconds the element being copied might change! That is, because we are deferring to the UI and maintaining responsive UI while in-lining styles, user events processed can change the element that we're copying! So we need to both know something has changed and start again if it has, but that is another chapter of &lt;a href="https://dev.to/thumbone/the-thing-is-on-awesomeness-and-motivation-2i0j"&gt;The Thing Is ...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Bypassing CORS via custom proxy backend</title>
      <author>Alen Duda</author>
      <pubDate>Mon, 13 Dec 2021 07:53:07 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/bypassing-cors-via-custom-proxy-backend-2po</link>
      <guid>https://dev.to/bornfightcompany/bypassing-cors-via-custom-proxy-backend-2po</guid>
      <description>&lt;p&gt;As a frontend developer, sooner or later you will encounter a CORS error, something like this:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Access to XMLHttpRequest at 'https://...' from origin 'https://...' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WRxBh1KO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu6jrxx4qxwmart8xf7i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WRxBh1KO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu6jrxx4qxwmart8xf7i.jpg" alt="CORS error in console" width="880" height="60"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cors-intro"&gt;
  &lt;/a&gt;
  CORS intro
&lt;/h2&gt;

&lt;p&gt;Plainly, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;Cross-Origin Resource Sharing&lt;/a&gt; is a security mechanism which enables web browsers to access data from &lt;em&gt;domain2.com&lt;/em&gt; while browsing &lt;em&gt;domain1.com&lt;/em&gt;. It can also be used to restrict access only to predefined domains. Basically, it requires the backend and frontend to be on the same server or to specifically set allowed origins which can access the backend.&lt;/p&gt;

&lt;p&gt;CORS is disabled by default and, if you have access to the server-side code, there are &lt;a href="https://enable-cors.org/server.html"&gt;ways to enable it&lt;/a&gt;. If you are in a school group project with a backend dev, be sure to remind him/her to enable CORS or you might be stuck with mock data (speaking from experience).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inspiration"&gt;
  &lt;/a&gt;
  Inspiration
&lt;/h2&gt;

&lt;p&gt;I first encountered the red CORS error in the browser console on a university project one saturday night when I tried to connect to our Java Spring backend and couldn't get it to work, even though it worked from Postman. Since Java (and specifically Spring) was (and is) almost as Ancient Greek to me, I wanted to try a way to bypass this error. Since CORS is on the browser level, an idea popped up: why not build a simple(r) JS backend which does the same API request, but has CORS enabled so I could connect to it instead of the original Java backend.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#express-backend"&gt;
  &lt;/a&gt;
  Express backend
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://expressjs.com/"&gt;Express.js&lt;/a&gt; is the first node.js web framework I encountered and is well-suited for this task. We will create a minimal node/express backend application which uses &lt;a href="https://axios-http.com/docs/intro"&gt;axios &lt;/a&gt;as the http library and the &lt;a href="https://www.npmjs.com/package/cors"&gt;cors&lt;/a&gt; package to enable CORS on our server (otherwise this whole ordeal would be pointless).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-setup-and-package-installation"&gt;
  &lt;/a&gt;
  Project setup and package installation
&lt;/h3&gt;

&lt;p&gt;After creating a folder for our project, open a terminal and navigate to it. We initialize the most basic package.json file with&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once done, we install the required packages:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm i express cors axios&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before starting to code, we need a file which will be run. Common names are &lt;code&gt;server.js&lt;/code&gt; or &lt;code&gt;app.js&lt;/code&gt;. Since this project will have all the code in a single file (not the best practice, but for demonstration purposes), we can simply use &lt;code&gt;index.js&lt;/code&gt;. Create that file and modify the package.json file so the scripts key looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node index"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#coding-time"&gt;
  &lt;/a&gt;
  Coding time
&lt;/h3&gt;

&lt;p&gt;Finally, time to code! Open &lt;code&gt;index.js&lt;/code&gt; (or whatever you called it in the previous step) so we can create our server. I will copy all the code required here, along with the comments for (almost) each line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// packages import&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// enable CORS&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// set the port on which our app wil run&lt;/span&gt;
&lt;span class="c1"&gt;// important to read from environment variable if deploying&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// basic string route to prevent Glitch error&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// the route we're working with&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// replace with a custom URL as required&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;backendUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// return the data without modification&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;backendUrl&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// console text when app is running&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server listening at http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that is it! You can use the above code and upload it to &lt;a href="https://glitch.com"&gt;Glitch&lt;/a&gt;, for example, so it can be hosted and accessed if you deploy your frontend app. That's why we require reading the PORT from environment variable (if available) and set a root route to return a simple string, otherwise Glitch would belive the app has an error since nothing is returned.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;"/users"&lt;/code&gt; route contains the main code we need to connect to the backend which doesn't have CORS access enabled and returns the same, unmodified data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-bonus-data-modification"&gt;
  &lt;/a&gt;
  Additional bonus: data modification
&lt;/h3&gt;

&lt;p&gt;While you can return the data as-is, nothing stops you from modifying the original response to be more adapted to your frontend app's needs. If there is a lot of data and modifications required, that could improve the frontend app's performance on lower-end devices and slower connections, since less &lt;em&gt;noise&lt;/em&gt; data will be received and less modifications are required client-side.&lt;/p&gt;

&lt;p&gt;Example response from original backend API:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dD3AA9ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blit2ijzl5etd0vdqn43.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dD3AA9ug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blit2ijzl5etd0vdqn43.jpg" alt="Original API response" width="750" height="1026"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code snippet for modifying this is pretty straightforward (assuming the response has the same data structure as above):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;backendUrl&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastEpisodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastAvailableEpisodes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lastEpisodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;episode&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;episode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contentItemId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;episode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;caption&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;audioFile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;episode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;
        &lt;span class="p"&gt;}));&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shows&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example custom API response after modification:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm5a-kYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjapn34f0kzbp7ztpsav.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rm5a-kYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjapn34f0kzbp7ztpsav.jpg" alt="Custom API response" width="803" height="257"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe you agree that the second response is much cleaner and easier to follow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This was a very basic example of using a custom, bare-bones backend as a proxy to bypass CORS-restricted content you would generally have access to. It also follows a so-called &lt;em&gt;happy path&lt;/em&gt;, meaning there is no error handling, but that would detract from the topic. The whole process from creating the project, modifying the response and deployment to Glitch can take less than 10 minutes, which is much quicker than waiting for your backend-dev colleague to wake up the next morning when the inspiration is gone.&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>cors</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>HTML tags (and last) | embed</title>
      <author>Carlos Espada</author>
      <pubDate>Mon, 13 Dec 2021 07:33:28 +0000</pubDate>
      <link>https://dev.to/carlosespada/html-tags-and-last-embed-36o4</link>
      <guid>https://dev.to/carlosespada/html-tags-and-last-embed-36o4</guid>
      <description>&lt;p&gt;It is used to &lt;strong&gt;embed external content&lt;/strong&gt; at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.&lt;/p&gt;

&lt;p&gt;Keep in mind that most modern browsers have deprecated and removed support for browser plug-ins, so relying upon &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; &lt;strong&gt;is generally not wise&lt;/strong&gt; if you want your site to be operable on the average user's browser.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To &lt;strong&gt;embed a picture&lt;/strong&gt;, it is better to use the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;To &lt;strong&gt;embed HTML&lt;/strong&gt;, it is better to use the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;To &lt;strong&gt;embed video or audio&lt;/strong&gt;, it is better to use the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; tags.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It can have some &lt;strong&gt;implicit ARIA roles&lt;/strong&gt;: &lt;code&gt;application&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt;, &lt;code&gt;img&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt; or &lt;code&gt;presentation&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  Attributes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#height"&gt;
  &lt;/a&gt;
  height
&lt;/h3&gt;

&lt;p&gt;The displayed height of the resource, in CSS pixels (absolute values only. NO percentages).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#src"&gt;
  &lt;/a&gt;
  src
&lt;/h3&gt;

&lt;p&gt;The URL of the resource being embedded.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type"&gt;
  &lt;/a&gt;
  type
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/MIME_type"&gt;MIME type&lt;/a&gt; to use to select the plug-in to instantiate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#width"&gt;
  &lt;/a&gt;
  width
&lt;/h3&gt;

&lt;p&gt;The displayed width of the resource, in CSS pixels (absolute values only. NO percentages).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling"&gt;
  &lt;/a&gt;
  Styling
&lt;/h2&gt;

&lt;p&gt;You can use the &lt;code&gt;object-position&lt;/code&gt; property to adjust the positioning of the embedded object within the element's frame, and the &lt;code&gt;object-fit&lt;/code&gt; property to control how the object's size is adjusted to fit within the frame.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  Accessibility
&lt;/h2&gt;

&lt;p&gt;Use the &lt;code&gt;title&lt;/code&gt; attribute on an embed element to &lt;strong&gt;label its content&lt;/strong&gt; so that people navigating with assistive technology such as a screen reader &lt;strong&gt;can understand what it contains&lt;/strong&gt;. The title's value should concisely describe the embedded content. &lt;strong&gt;Without a title, they may not be able to determine what its embedded content is&lt;/strong&gt;. This context shift can be confusing and time-consuming, especially if the embed element contains interactive content like video or audio.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type: &lt;em&gt;-&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Self-closing: &lt;em&gt;Yes&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Semantic value: &lt;em&gt;No&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.w3schools.com/tags/tag_embed.asp"&gt;Definition&lt;/a&gt; | &lt;a href="https://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_embed"&gt;Example&lt;/a&gt; | &lt;a href="https://caniuse.com/mdn-html_elements_embed"&gt;Support&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>tags</category>
      <category>embed</category>
    </item>
    <item>
      <title>Strategy Pattern | Design Patterns in Java</title>
      <author>coder4life</author>
      <pubDate>Mon, 13 Dec 2021 07:33:17 +0000</pubDate>
      <link>https://dev.to/coder4_life/strategy-pattern-design-patterns-in-java-me</link>
      <guid>https://dev.to/coder4_life/strategy-pattern-design-patterns-in-java-me</guid>
      <description>&lt;p&gt;Behavioral design pattern: Watch a Java implementation of the Strategy Pattern which allows us to change the behavior of an algorithm at runtime. In this example there are different payment methods - strategies - for a certain amount. The context processes the payment differently depending on the payment method. A client would at runtime be able to select between the payment methods. The implementation in Main would thereby be more dynamic in a real usecase.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GJs2Dxzvugs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Advanced TypeScript With Code Challenges: Type Guards</title>
      <author>Marius Bongarts</author>
      <pubDate>Mon, 13 Dec 2021 07:29:27 +0000</pubDate>
      <link>https://dev.to/mariusbongarts/advanced-typescript-with-code-challenges-type-guards-14lp</link>
      <guid>https://dev.to/mariusbongarts/advanced-typescript-with-code-challenges-type-guards-14lp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqaEaSyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AjUBpz0DE_5DSUvDOk_3ZJg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqaEaSyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AjUBpz0DE_5DSUvDOk_3ZJg.png" alt="Big elephant stating Typescript, small elephant stating Javascript" width="880" height="640"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Type guards allow us to guarantee types during runtime. Learn the concept of Type Guards and apply them to practical code exercises in this article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="https://medium.com/@mariusbongarts11/advanced-typescript-with-code-challenges-type-guards-a5b24bb6d46b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJGecUaa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/438/1%2A_3t5KaAhKLNq04FSGYPy9w.png" alt="Marius Bongarts"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="https://medium.com/@mariusbongarts11/advanced-typescript-with-code-challenges-type-guards-a5b24bb6d46b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Advanced TypeScript With Code Challenges: Type Guards | by Marius Bongarts | Dec, 2021 | Medium&lt;/h2&gt;
      &lt;h3&gt;Marius Bongarts ・ &lt;time&gt;Dec 13, 2021&lt;/time&gt; ・ 
      &lt;div class="ltag__link__servicename"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnDHPsJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/medium-f709f79cf29704f9f4c2a83f950b2964e95007a3e311b77f686915c71574fef2.svg" alt="Medium Logo"&gt;
        Medium
      &lt;/div&gt;
    &lt;/h3&gt;
&lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>6 Best Practices to secure your Continuous Deployment pipeline</title>
      <author>CloudNow Technologies</author>
      <pubDate>Mon, 13 Dec 2021 07:29:21 +0000</pubDate>
      <link>https://dev.to/cloudnowtech/6-best-practices-to-secure-your-continuous-deployment-pipeline-47o2</link>
      <guid>https://dev.to/cloudnowtech/6-best-practices-to-secure-your-continuous-deployment-pipeline-47o2</guid>
      <description>&lt;p&gt;&lt;a href="https://www.cloudnowtech.com/application-development-services.html"&gt;Continuous Integration and Continuous Deployment (CI/CD)&lt;/a&gt; is a fast, efficient iterative process. This means that, without a concentrated focus on security, there simply isn’t enough time to build in security checks and balances before go-live.&lt;/p&gt;

&lt;p&gt;A traditional &lt;a href="https://www.cloudnowtech.com/application-development-services.html"&gt;Continuous Integration and Continuous Deployment (CI/CD)&lt;/a&gt; pipeline uses a large number of tech tools. Each stage of the pipeline must be closely monitored at all times, to ensure that any irregularities are swiftly identified and addressed. &lt;/p&gt;

&lt;p&gt;Using the right code analysis tools, it's possible to automate the process of monitoring the code used at every stage of the pipeline. This guards against the possibility of vulnerabilities potentially creeping in and giving malicious actors a way into your system.&lt;/p&gt;

&lt;p&gt;To further secure your system, it is important to prevent misuse or improper access to key data like passwords, API, GitHub tokens, SSH keys, private certificates for secure communication, transmitting and receiving of data (TLS, SSL, and so on), private encryption keys for systems like PGP, and other application keys/credentials. Eliminate hard-coded credentials in &lt;a href="https://www.cloudnowtech.com/application-development-services.html"&gt;containerized applications&lt;/a&gt; and minimize broad access to credentials, data and systems.&lt;/p&gt;

&lt;p&gt;In addition to automated system security, conduct regular comprehensive audits on system and code to maintain high-level security and reduce risk of cyberattack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are 6 best practices that could help you improve security in your CI/CD processes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Remove hardcoded credentials from tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With automation, storing and keeping track of these credentials is no longer the responsibility of your team. By default, some of this data is hardcoded into Jenkins, GitHub and other &lt;a href="https://www.cloudnowtech.com/application-development-services.html"&gt;CI/CD tools&lt;/a&gt;. Remove the hardcoding from your tools before getting started, or the information could be misused.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Don’t concentrate data into a single location&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Distribute sensitive data as much as possible across a large number of Jenkinsfiles. This reduces the potential attack value of each file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Minimize access permitted to team members&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Maintain highly granular access management, following the principle of ‘least privilege’. A large number of people work concurrently on each project, making access management fundamental to CI/CD security. Undertake segmentation by role, task and category to restrict access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Restrict access to non-humans as well&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once a container’s machine identity is authenticated by the system, it can access multiple resources based on defined access control policy. To secure against non-human access, destroy containers and virtual machines after use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Apply rigorous security parameters&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use password managers and frequently change passwords. Verify the identity of individuals accessing resources with &lt;a href="https://www.akku.work/product/multi-factor-authentication.html"&gt;multi-factor authentication&lt;/a&gt; and OTPs to restrict access to the most sensitive tools and data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Safeguard credentials from excessive automation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ensure keys and secrets are not inadvertently passed on by default, during builds for pull requests via your &lt;a href="https://www.cloudnowtech.com/application-development-services.html"&gt;CI/CD pipelines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Remember, the goal of CI/CD is not just to make communication between team members seamless and effective, but safe as well. Follow these simple steps and best practices to optimize safety, speed and quality.&lt;/p&gt;

&lt;p&gt;CloudNow brings you a cutting-edge technology stack that enables single-click deployment, &lt;a href="https://www.cloudnowtech.com/application-development-services.html"&gt;continuous integration&lt;/a&gt;, automated security alerts, easy code management and review, and on-premise, public, or hybrid cloud deployment. &lt;a href="https://www.cloudnowtech.com/contact-us.html"&gt;Contact us&lt;/a&gt; today to know more.&lt;/p&gt;

&lt;p&gt;This blog originally published at &lt;a href="https://www.cloudnowtech.com/blog/"&gt;CloudNow Blog&lt;/a&gt;. Link to the &lt;a href="https://www.cloudnowtech.com/blog/6-best-practices-to-secure-your-continuous-deployment-pipeline/"&gt;original blog&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>An introduction to React Hooks</title>
      <author>ashikarose</author>
      <pubDate>Mon, 13 Dec 2021 07:13:56 +0000</pubDate>
      <link>https://dev.to/ashikarose/an-introduction-to-react-hooks-3f58</link>
      <guid>https://dev.to/ashikarose/an-introduction-to-react-hooks-3f58</guid>
      <description>&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;Hooks &lt;/a&gt;are here to aid you if you don't like lessons. Hooks are methods that let you leverage React's state and lifecycle capabilities without having to use classes. It allows you to connect into React state and lifecycle features from function components, as the name implies.&lt;br&gt;
Hooks don't work inside classes and are backwards compatible, which means they don't introduce any new features. So it's entirely up to you whether you want to use them or not. This new functionality allows you to leverage all of React's features, including function components.&lt;br&gt;
Make sure your hooks are written in standard follow format. To ensure that hooks are called in the same sequence every time, call them at the top level of React functions. Avoid calling them from inside loops, nested functions, or conditions. Also, make sure you're calling them from a React function component rather than a JavaScript function. If you don't follow that guideline, you can end up with some unusual behaviours. To ensure that these rules are applied automatically, React includes a linter plugin.&lt;br&gt;
To use hooks, you don't need to install anything. They're included with React starting with version 16.8.&lt;br&gt;
To set up the React development environment (you'll need the newest version of Node.js to run npx), follow these steps:&lt;/p&gt;

&lt;p&gt;npx create-react-app exploring-hooks&lt;/p&gt;

&lt;p&gt;React hooks have rendered render props and HOCs (Higher-Order Components) practically unnecessary, making sharing stateful code much more pleasant.&lt;/p&gt;

&lt;p&gt;React comes with a number of hooks pre-installed. The most important are useState and useEffect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Need for React Hooks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To reuse stateful logices: The render props pattern and higher-order components (HOC) are two advanced React ideas. It is not possible to reuse stateful component logic in React in any way. Although the use of HOC and render properties patterns can solve this problem, it makes the code base inefficient and harder to understand because components are wrapped in a slew of others to share functionality. Hooks allow us to exchange stateful functionality in a much better and cleaner way without altering the component hierarchy.&lt;br&gt;
‘This’ keyword :The keyword 'this' is used for two reasons. The first has nothing to do with React and everything to do with javascript. To work with classes, we must first understand how the javascript 'this' keyword works, which is rather different from other languages. Although the principles of props, state, and unidirectional data flow are simple to grasp, using the 'this' keyword when implementing class components might be challenging. Event handlers must also be bound to the class components. Classes have been discovered to not concise efficiently, leading in unreliable hot reloading, which can be remedied with Hooks.&lt;br&gt;
Simplifying challenging scenarios: When designing components for complicated scenarios like data fetching and event subscription, all relevant code is likely to be scattered throughout multiple life cycle methods.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Effect Hook&lt;/strong&gt;&lt;br&gt;
We use the &lt;a href="https://reactjs.org/docs/hooks-effect.html"&gt;Effect hook&lt;/a&gt;, i.e. useEffect, from React function components to conduct side effects tasks like modifying the DOM, data fetching, and so on. These actions are so named because they can have an impact on other components and aren't possible to perform during rendering.  componentDidMount, componentDidUpdate, and componentWillUnmount are all powered by the UseEffect hook. Because the components require access to their state and props, UseEffect is declared inside them. UseEffect can be called at the beginning of a render, at the end of each render, or to specify clean up depending on how we express them. They run by default after every render, including the first one.&lt;/p&gt;

&lt;p&gt;import React, {&lt;br&gt;
  useState,&lt;br&gt;
  useEffect&lt;br&gt;
} from 'react';&lt;/p&gt;

&lt;p&gt;function usingEffect() {&lt;br&gt;
  const [count, setCount] = useState(0);&lt;/p&gt;

&lt;p&gt;/* default behaviour is similar to componentDidMount and componentDidUpdate: */&lt;br&gt;
  useEffect(() =&amp;gt; {&lt;br&gt;
    // Change document title&lt;br&gt;
    document.title = &lt;code&gt;Clicked {count} times&lt;/code&gt;;&lt;br&gt;
  });&lt;/p&gt;

&lt;p&gt;return (&lt;br&gt;
    &lt;/p&gt;
&lt;br&gt;
      &lt;p&gt;Clicked count = {count}&lt;/p&gt;
&lt;br&gt;
       setCount(count + 1)}&amp;gt;&lt;br&gt;
        Button&lt;br&gt;
      &lt;br&gt;
    &lt;br&gt;
  );&lt;br&gt;
}&lt;br&gt;
The document title is updated every time the count is updated in the example above. Because it runs at the first render and after every update, useEffect works similarly to componentDidMount and componentDidUpdate combined. This is useEffect's default behaviour, although it can be altered. Let's have a look at how.&lt;br&gt;
If you want to use useEffect as componentDidMount then you can pass an empty array [] in the second argument to useEffect as in the below example:&lt;br&gt;
import React, {&lt;br&gt;
  useState,&lt;br&gt;
  useEffect&lt;br&gt;
} from 'react';

&lt;p&gt;function usingEffect() {&lt;br&gt;
  const [count, setCount] = useState(0);&lt;/p&gt;

&lt;p&gt;// Similar to componentDidMount&lt;br&gt;
  useEffect(() =&amp;gt; {&lt;br&gt;
    // Only update when component mount &lt;br&gt;
    document.title = &lt;code&gt;You clicked {count} times&lt;/code&gt;;&lt;br&gt;
  }, []);&lt;/p&gt;

&lt;p&gt;return (&lt;br&gt;
    &lt;/p&gt;
&lt;br&gt;
      &lt;p&gt;Your click count is {count}&lt;/p&gt;
&lt;br&gt;
       setCount(count + 1)}&amp;gt;&lt;br&gt;
        Button&lt;br&gt;
      &lt;br&gt;
    &lt;br&gt;
  );&lt;br&gt;
}&lt;br&gt;
&lt;strong&gt;Hooks State&lt;/strong&gt;&lt;br&gt;
The useState() function component is used to define, alter, and use states using hooks. The current state and a function to update the state are returned as two value pairs. It's something along these lines. This is not the same as setState in a class. The fact that setState does not merge the old and new states distinguishes it. UseState() is a function component that can be called from within a function component or from an event handler. The initial state is supplied as an input to useState(), and it is used on the first render. There are no restrictions on the number of state hooks that can be used in a single component; we can use as many as we wish.&lt;br&gt;
import React, {&lt;br&gt;
  useState&lt;br&gt;
} from 'react';

&lt;p&gt;function usingStateHook() {&lt;br&gt;
  // use useState() to declare state variable count&lt;br&gt;
  const [count, setCount] = useState(0);&lt;/p&gt;

&lt;p&gt;return (&lt;br&gt;
    &lt;/p&gt;
&lt;br&gt;
      {/* display count value &lt;em&gt;/}&lt;br&gt;
      &lt;p&gt;Your click count is {count}&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
      {/&lt;/p&gt;&lt;/em&gt; on click update count value using setCount */}&lt;br&gt;&lt;br&gt;
       setCount(count + 1)}&amp;gt;&lt;br&gt;&lt;br&gt;
        Button&lt;br&gt;&lt;br&gt;
      &lt;br&gt;&lt;br&gt;
    &lt;br&gt;&lt;br&gt;
  );&lt;br&gt;&lt;br&gt;
}&lt;br&gt;&lt;br&gt;
In the above example, we've included a counter that keeps track of how many times the button has been pressed. In this case, useState(0) sets the count to '0' and returns the setCount function, which can be used to update the count. In the onClick event handler, we call setCount with the value 'count+1'. Here, count is the previous count value; for example, if the count was two before, setCount will increase it by one to three.&lt;br&gt;&lt;br&gt;
&lt;a href="https://reactjs.org/docs/hooks-custom.html"&gt;&lt;strong&gt;Custom Hooks&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
React also allows us to create our own hook, which is a javaScript function with the word 'use' at the beginning of its name and can call other hooks. When we have parts that can be reused in our project, we normally develop custom hooks. We must first define them, which may include the use of other hooks, before we can refer to them as other hooks.&lt;br&gt;&lt;br&gt;
function FriendStatus(props) {

&lt;p&gt;const isOnline = useFriendStatus(props.friend.id);&lt;/p&gt;

&lt;p&gt;if (isOnline === null) {&lt;br&gt;
    return 'Loading...';&lt;br&gt;
  }&lt;br&gt;
  return isOnline ? 'Online' : 'Offline';&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;function FriendListItem(props) {&lt;/p&gt;

&lt;p&gt;const isOnline = useFriendStatus(props.friend.id);&lt;/p&gt;

&lt;p&gt;return (&lt;br&gt;
    &lt;/p&gt;
&lt;li&gt;

      {props.friend.name}
    &lt;/li&gt;
&lt;br&gt;
  );&lt;br&gt;
}

&lt;p&gt;&lt;strong&gt;Wrapping Up&lt;/strong&gt;&lt;br&gt;
Hooks allow us to leverage different functionalities, such as lifeCycle functions, without having to develop classes. Get assistance from the best &lt;a href="https://www.cronj.com/react/react-development-agency"&gt;react development agency&lt;/a&gt; Hooks come in a variety of shapes and sizes, each with its own set of functions. The useState and useEffect hooks are the most popular among them.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>8 Ways to Create a Successful Mobile Application</title>
      <author>Bhavik Sadhu</author>
      <pubDate>Mon, 13 Dec 2021 07:06:26 +0000</pubDate>
      <link>https://dev.to/bhaviksadhu/8-ways-to-create-a-successful-mobile-application-3kja</link>
      <guid>https://dev.to/bhaviksadhu/8-ways-to-create-a-successful-mobile-application-3kja</guid>
      <description>&lt;p&gt;Asking you to name some of the most popular and successful mobile apps you use every day, you'd probably be able to give me a list. What if I stated that there are numerous applications that have a comparable method to development however do not carry out properly at the market?&lt;/p&gt;

&lt;p&gt;What is the most important thing for app marketers and developers? There are millions of apps out there vying for user attention. The question is how do you get noticed? App Store searches are used to find apps that meet their daily needs. Users would only download and install those apps.&lt;/p&gt;

&lt;p&gt;The question is: Why are there only a few? Ever wonder what made some mobile apps so popular? It all boils down to the ideas, efforts, and techniques that went into &lt;a href="https://www.techavidus.com/blogs/how-to-create-an-application"&gt;developing an app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This article will answer all your questions about mobile app development. Here's the definitive guide to "How to make a successful mobile app" and the best practices to ensure that your app is reaching its target market in a quality way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let’s get started!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-sure-that-your-app-solves-a-problem"&gt;
  &lt;/a&gt;
  Make sure that your app solves a problem
&lt;/h2&gt;

&lt;p&gt;It is a tough challenge to develop an app. There are such a lot of sources and money invested. The app should have its very own particular promoting factors that enchantment to its target audience. You can argue that not all apps are the same. One can draw USPs from different parameters, such as demographics, pricing, and marketing strategy. These are the four Ps of marketing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#beat-the-crowd"&gt;
  &lt;/a&gt;
  Beat the crowd
&lt;/h2&gt;

&lt;p&gt;A Nielsen survey of Indian consumers on mobile apps and mobile sites found that Indians are more inclined to use apps that are personal to them. These apps include news apps, messenger apps, emails, and popular social networks. There is plenty of room for app discovery. App developers must keep their unique USPs in mind and communicate them on the right platforms.  This will allow them to stand out from the crowd and reach a wider audience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brands-must-be-more-relevant-on-mobile"&gt;
  &lt;/a&gt;
  Brands must be more relevant on mobile
&lt;/h2&gt;

&lt;p&gt;Marketers must realize that downloading doesn't always translate into active users. While a few apps can be downloaded by users, there's an excessive chance that they'll never use them. App marketers don't take the time to properly segment their audience before bringing them onboard. App advertisers don't consider context and user behavior when promoting apps. This is the most common practice. These campaigns nearly usually give up with an inactive or inappropriate audience group.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#human-conversations-are-the-future"&gt;
  &lt;/a&gt;
  Human conversations are the future
&lt;/h2&gt;

&lt;p&gt;Why conversation? Because conversations eventually lead to an installation, download, and transaction. This is where the next generation is talking about everything and making key decisions. It is possible to be a part of the daily conversations of mobile users. Mobile marketers have a completely unique possibility to study users' intentions, goals, motivations, actions, and goals through human textual content input. Mobile apps will soon need to be able to understand human intent and expressions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#language-is-an-essential-element"&gt;
  &lt;/a&gt;
  Language is an essential element
&lt;/h2&gt;

&lt;p&gt;Nearly 117 languages are currently being used around the globe. All languages have different mobile communication styles among smartphone users. Multitasking is a common feature of smartphones today. Users prefer to use their phone's language input over voice for any activity they wish to do on their phones. This trend is generating many new ideas that will play a major role in the future of the mobile language. An app that supports multiple languages is a win-win scenario.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#app-design-should-win"&gt;
  &lt;/a&gt;
  App Design should win
&lt;/h2&gt;

&lt;p&gt;Mobile app success is dependent on the design of the application. Bad UI/UX design is the main reason for drop-offs following a download. Before you publish your app to the market, make sure that you have thought through the design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#develop-a-powerful-appmonetization-strategy"&gt;
  &lt;/a&gt;
  Develop a powerful app-monetization strategy
&lt;/h2&gt;

&lt;p&gt;Mobile app monetization is essential for many mobile apps today, given the size of the market. There is very little chance of every app being monetized because of the fierce competition. App monetization strategies should be in place before any app development begins.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#innovation-is-key"&gt;
  &lt;/a&gt;
  Innovation is key
&lt;/h2&gt;

&lt;p&gt;Innovation is key to any app's success. App developers and product managers must continue to innovate and scale up apps after they have been successful. Technology stagnancy will eventually lead to death. If you have a popular app and don't innovate over time, it can cause your app to go into reverse.&lt;/p&gt;

</description>
      <category>app</category>
      <category>mobile</category>
      <category>android</category>
    </item>
    <item>
      <title>Bootstrap 5 - Free Django Templates</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 13 Dec 2021 06:53:46 +0000</pubDate>
      <link>https://dev.to/sm0ke/bootstrap-5-free-django-templates-4pi0</link>
      <guid>https://dev.to/sm0ke/bootstrap-5-free-django-templates-4pi0</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;Hello! This article presents a curated list with &lt;code&gt;open-source&lt;/code&gt; &lt;a href="https://appseed.us/django"&gt;Django Templates&lt;/a&gt; styled with &lt;strong&gt;Bootstrap 5&lt;/strong&gt;, a popular CSS/JS framework. All mentioned projects are available for download directly from Github and based on the permissive license the source code can be used for unlimited hobby &amp;amp; commercial projects. For newcomers, &lt;strong&gt;Django&lt;/strong&gt; is a leading web framework actively versioned by programming experts and open-source enthusiasts. Thanks for reading!&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Django Bootstrap 5 Soft UI&lt;/a&gt; - free product &lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-material-kit"&gt;Django Bootstrap 5 Material Kit&lt;/a&gt; - free product&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Bootstrap 5 Pixel&lt;/a&gt; - free product&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;All starters provide the bare minimum essentials to start fast a new website powered by &lt;strong&gt;Django&lt;/strong&gt;: authentication, database, Docker support, and up-to-date dependencies. Here is the full list with features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Up-to-date dependencies&lt;/code&gt;: &lt;strong&gt;Django 3.2.6 LTS&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SCSS compilation&lt;/code&gt; via Gulp&lt;/li&gt;
&lt;li&gt;UI: &lt;strong&gt;Bootstrap 5&lt;/strong&gt; design&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DB Tools&lt;/code&gt;: SQLite, Django Native ORM&lt;/li&gt;
&lt;li&gt;Session-Based Authentication, Forms validation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Deployment&lt;/code&gt;: &lt;strong&gt;Docker&lt;/strong&gt;, Gunicorn / Nginx&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Support&lt;/code&gt; via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#django-template-soft"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Django Template Soft&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Soft UI Design System is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using SASS files and classes.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Soft UI Design Django&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-soft-ui-free.appseed-srv1.com/"&gt;Soft UI Design Django&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Probably the most easier way to compile and start the product locally is to use the Docker setup.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;✨ Step #1 - Clone sources from the public repository&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-soft-ui-design.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-soft-ui-design
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;✨ Step #2 - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, we should see the Soft UI Design App running in the browser.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SRKlswzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57ook8718i7xaft577sg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRKlswzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57ook8718i7xaft577sg.png" alt="Django Bootstrap 5 - Soft UI Design (open-source starter)" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-template-material"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/product/django-material-kit"&gt;Django Template Material&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Designed for those who like bold elements and beautiful websites, Material Kit 2 is ready to help you create stunning websites and web apps. Material Kit 2 is built with over 60 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, which you can easily modify using SASS files and classes.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-material-kit"&gt;Django Material Kit&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-material-kit.appseed-srv1.com/"&gt;Django Material Kit&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--koZp4Wei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tikclrqio9bfycik2zdu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--koZp4Wei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tikclrqio9bfycik2zdu.png" alt="Django Bootstrap 5 - Material Kit 2 (open-source project)." width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-template-pixel"&gt;
  &lt;/a&gt;
  ✨ &lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Template Pixel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Pixel is a free and open-source Bootstrap 5 based user interface kit featuring over 80 fully coded UI elements and example pages that will help you prototype and build a website for your next project.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/django/django-pixel-bootstrap-uikit"&gt;Django Pixel Lite&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-pixel.appseed-srv1.com/"&gt;Django Pixel Lite&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;This project also comes with Sass source files, making it easy to customize the colors, fonts, and other styling properties. Using the gulp commands you can also easily work with the project and generate minified production code.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1SB1F8Kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doj01rq43nb5t6e2jjww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SB1F8Kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/doj01rq43nb5t6e2jjww.png" alt="Django Bootstrap 5 - Pixel Lite (open-source project)." width="880" height="436"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/django"&gt;Django Templates&lt;/a&gt; - provided by AppSeed&lt;/li&gt;
&lt;li&gt;✨ More &lt;a href="https://appseed.us/admin-dashboards/django"&gt;Django Dashboards&lt;/a&gt; - open-source and commercial starters &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>boostrap5</category>
      <category>django</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Blob Animation with shadow</title>
      <author>Payman Valizadeh</author>
      <pubDate>Mon, 13 Dec 2021 06:44:11 +0000</pubDate>
      <link>https://dev.to/paymanvl/blob-animation-with-shadow-1p50</link>
      <guid>https://dev.to/paymanvl/blob-animation-with-shadow-1p50</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/PaymanVal/embed/QWqGrdd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Advent of Code 2021 Python Solution: Day 13</title>
      <author>Viper</author>
      <pubDate>Mon, 13 Dec 2021 06:28:00 +0000</pubDate>
      <link>https://dev.to/qviper/advent-of-code-2021-python-solution-day-13-5227</link>
      <guid>https://dev.to/qviper/advent-of-code-2021-python-solution-day-13-5227</guid>
      <description>&lt;p&gt;Today's challenge was fun to do and it was not that hard as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="n"&gt;data1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;dots&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;","&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)]]&lt;/span&gt;
&lt;span class="n"&gt;folds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;span class="n"&gt;folds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"along "&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"="&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;folds&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;folds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;folds&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;dots&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dots&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dots&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;


&lt;span class="n"&gt;tw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# print(tw)
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;folds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
    &lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;#fold y axis
&lt;/span&gt;        &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="c1"&gt;# print(value-crs,chunk.shape, chunk)
&lt;/span&gt;        &lt;span class="n"&gt;crs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ccs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
        &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;crs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;[::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;tw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;tw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])),&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;#break
&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# fold x axis
&lt;/span&gt;        &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;crs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ccs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;crs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ccs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt;&lt;span class="p"&gt;[:,::&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;tw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;tw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Dots: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array2string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tw&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;separator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;formatter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'bool'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;' █'&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]}))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My answer was:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="err"&gt;██&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;███&lt;/span&gt;  &lt;span class="err"&gt;███&lt;/span&gt;  &lt;span class="err"&gt;███&lt;/span&gt;   &lt;span class="err"&gt;██&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;████&lt;/span&gt;   &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;    &lt;span class="err"&gt;█&lt;/span&gt;   &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;████&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;   &lt;span class="err"&gt;█&lt;/span&gt;    &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;████&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;███&lt;/span&gt;  &lt;span class="err"&gt;███&lt;/span&gt;  &lt;span class="err"&gt;███&lt;/span&gt;  &lt;span class="err"&gt;████&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;     &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;    &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;    &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;      &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;    &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt; &lt;span class="err"&gt;█&lt;/span&gt;    &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;█&lt;/span&gt;  &lt;span class="err"&gt;██&lt;/span&gt;  &lt;span class="err"&gt;████&lt;/span&gt;   &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;                                          &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;                                          &lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I write blogs about Basic of Machine Learning and related stuffs, you can find it on &lt;a href="https://q-viper.github.io"&gt;q-viper.github.io&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-not-read-more"&gt;
  &lt;/a&gt;
  Why not read more?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/01/gesture-based-visually-writing-system-using-opencv-and-python/"&gt;Gesture Based Visually Writing System Using OpenCV and Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/11/gesture-based-visually-writing-system-make-a-visual-user-interface/"&gt;Gesture Based Visually Writing System: Adding Visual User Interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/14/gesture-based-visually-writing-system-adding-virtual-animation-new-mode-and-new-vui/"&gt;Gesture Based Visually Writing System: Adding Virtual Animationn, New Mode and New VUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/21/gesture-based-visually-writing-system-add-slider-more-colors-and-optimized-code/"&gt;Gesture Based Visually Writing System: Add Slider, More Colors and Optimized OOP code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/29/gesture-based-visually-writing-system-web-app/"&gt;Gesture Based Visually Writing System: A Web App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/16/contour-based-game-break-the-bricks/"&gt;Contour Based Game: Break The Bricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/07/writing-a-linear-regression-class-from-scratch-using-python/"&gt;Linear Regression from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/06/05/writing-popular-machine-learning-optimizers-from-scratch-on-python/"&gt;Writing Popular ML Optimizers from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/05/30/writing-a-deep-neural-network-from-scratch-on-python/"&gt;Feed Forward Neural Network from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/06/05/convolutional-neural-networks-from-scratch-on-python/"&gt;Convolutional Neural Networks from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/05/30/image-processing-class-from-scratch-on-python/"&gt;Writing a Simple Image Processing Class from Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/08/04/deploying-a-simple-rasa-chatbot-on-unity3d-project-to-make-a-chatbot-for-android-devices/"&gt;Deploying a RASA Chatbot on Android using Unity3d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/03/04/text-classification-using-naive-bayes-scratch-to-the-framework/"&gt;Naive Bayes for text classifications: Scratch to Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://q-viper.github.io/2020/02/25/building-ocr-for-devanagari-handwritten-character/"&gt;Simple OCR for Devanagari Handwritten Text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>adventofcode</category>
      <category>python</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>The Easiest Way to Create a Resume - Use a Resume Builder</title>
      <author>Iskandar Ali</author>
      <pubDate>Mon, 13 Dec 2021 06:22:26 +0000</pubDate>
      <link>https://dev.to/iskandaralica/the-easiest-way-to-create-a-resume-use-a-resume-builder-1gnf</link>
      <guid>https://dev.to/iskandaralica/the-easiest-way-to-create-a-resume-use-a-resume-builder-1gnf</guid>
      <description>&lt;p&gt;Resumes are a very important part of one's career. If you want to get a job, you need to make a powerful resume to win the hiring manager's attention and interest. You must know that creating a resume is not an easy job, requiring proper formatting skills. You have to fit and highlight all your personal and professional information on just one page, which can be a real pain in the bum; if you are a new applicant, you might not even know what to write in a resume or how to format it.&lt;br&gt;
If you want to know about the easiest way to create a resume, we suggest you read this post. In this brief guide, you will get information about the modern resume builder tools that can help you generate an award-winning resume by providing best resume templates.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h7DLXTK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xieu6oc26q1dm2u61gq6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h7DLXTK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xieu6oc26q1dm2u61gq6.png" alt="Image description" width="880" height="394"&gt;&lt;/a&gt;&lt;br&gt;
What is the easiest way to create a resume?&lt;br&gt;
As we have told you before, a resume summarizes your career that highlights all kinds of information that shows that you are the perfect candidate for the job. Resume is generally a one-page document. You must know that one-page resumes are more appreciated than lengthy ones. On this one-page document, you have to provide your personal contact information, your past job experiences, skills, and of course, education &amp;amp; certifications. &lt;br&gt;
To create a resume without any complications on your first go is not an easy job. It can be very difficult for you to add all your information on one page as on your first time, you might want to be extra expressive. We would suggest you take help from the modern cloud-based resume builders if you are creating your CV for the first time. The resume is the first impression you will put on the hiring managers' minds, so you don't have much space to make a blunder and ruin all your chances to get called for an interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-an-online-resume-builder-for-ease"&gt;
  &lt;/a&gt;
  Use an online resume builder for ease!
&lt;/h2&gt;

&lt;p&gt;If you want to create a professional resume without any expertise, you should probably go for an online &lt;a href="https://smallseotools.com/resume-builder/"&gt;resume builder&lt;/a&gt;. Resume maker tools are cloud-based programs that can provide you with dozens of predesigned free resume templates. These resume-generating tools have made your work a lot easier. Today, you have to simply open the resume maker on your browser and select the template that suits your application the most. &lt;br&gt;
The template designs offered by resume builders would have prewritten text in different sections, which can help you understand what you have to write on those particular sections. You can change the text and format and adjust the template as per your requirements and fill it with your information. Within less than three to five minutes, you can create an appealing resume for your job application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-rely-on-the-templates-offered-by-resume-builders"&gt;
  &lt;/a&gt;
  Can you rely on the templates offered by resume builders?
&lt;/h2&gt;

&lt;p&gt;Of course! The purpose of a resume maker tool is to automate your work and provide you ease in creating a powerful CV. Resume builders today use artificial intelligence and collaborate with different job posting agencies, so the &lt;a href="https://designstudio.smallseotools.com/resume-templates"&gt;resume templates free&lt;/a&gt; offered to you are the ones that the recruiters most appreciate.&lt;br&gt;
Using a free resume builder can reduce your workload and provide you with an error-free document that highlights you. There is a ten times more chance that you would end up having your dream job with a powerful resume created by an online tool instead of wasting time in creating manually written and formatted resume templates on word which probably would have tons of errors.&lt;br&gt;
We would recommend that you try the best resume maker tools indexed on the web when they are free to use. If you don’t want to use them, you would still get unique ideas and know about the right way to present information in your resume!&lt;/p&gt;

</description>
      <category>resumebuilder</category>
      <category>resume</category>
      <category>resumemaker</category>
      <category>smallseotoolsresumebuilder</category>
    </item>
  </channel>
</rss>
