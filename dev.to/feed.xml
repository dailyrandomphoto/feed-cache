<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>An Overview of CSS Positioning Schemes</title>
      <author>Zach Snoek</author>
      <pubDate>Mon, 17 Jan 2022 16:30:02 +0000</pubDate>
      <link>https://dev.to/zachsnoek/an-overview-of-css-positioning-schemes-59bo</link>
      <guid>https://dev.to/zachsnoek/an-overview-of-css-positioning-schemes-59bo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this post, we’ll learn about positioning schemes, which we can use to change an element’s position.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a post in a series about topics covered in Josh Comeau's &lt;a href="https://css-for-js.dev/"&gt;CSS for JavaScript Developers&lt;/a&gt; course. These posts will be brief, polished versions of my notes, and I'll write about new things I learned or deepen my understanding of something already familiar to me.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-reference"&gt;
  &lt;/a&gt;
  Quick reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#static"&gt;Static&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#relative"&gt;Relative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#absolute"&gt;Absolute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fixed"&gt;Fixed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sticky"&gt;Sticky&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-position-property"&gt;
  &lt;/a&gt;
  The position property
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;position&lt;/code&gt; property allows us to specify a positioning scheme. It accepts the values: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;relative&lt;/code&gt;, &lt;code&gt;absolute&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, and &lt;code&gt;sticky&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;static&lt;/code&gt; is the default value; an element with this value set is called a statically-positioned or non-positioned element. An element using a value other than &lt;code&gt;static&lt;/code&gt; is called a positioned element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#inset-properties"&gt;
  &lt;/a&gt;
  Inset properties
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;position&lt;/code&gt; works with the &lt;a href="https://www.w3.org/TR/css-position-3/#coords"&gt;inset properties&lt;/a&gt; &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;left&lt;/code&gt; to control the precise location of a positioned element.&lt;/p&gt;

&lt;p&gt;Let’s take a closer look at each of these positioning scheme values.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static"&gt;
  &lt;/a&gt;
  Static
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;static&lt;/code&gt; is the default value for &lt;code&gt;position&lt;/code&gt;, and it places the element in the normal flow of the document. Inset properties do not affect the element’s position.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/PoJdRBp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#relative"&gt;
  &lt;/a&gt;
  Relative
&lt;/h2&gt;

&lt;p&gt;The element gets placed in the normal flow of the document like &lt;code&gt;static&lt;/code&gt; and inset properties offset it relative to itself. This offset does not affect the layout of other elements, and the element takes up space as if it were statically positioned. The offset acts as a cosmetic effect.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/LYzJdaV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#absolute"&gt;
  &lt;/a&gt;
  Absolute
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;absolute&lt;/code&gt; removes the element from the normal document flow and positions it relative to its nearest positioned ancestor. If there is no positioned ancestor, the element gets positioned relative to the &lt;a href="https://www.w3.org/TR/css-display-3/#initial-containing-block"&gt;initial containing block&lt;/a&gt; (the containing block of the root &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element, a box the size and position of the viewport).&lt;/p&gt;

&lt;p&gt;No space gets made for absolutely-positioned elements in the page layout; other elements act as if they do not exist.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/ZEXMxZw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fixed"&gt;
  &lt;/a&gt;
  Fixed
&lt;/h2&gt;

&lt;p&gt;Fixed elements behave similarly to absolutely-positioned elements, but they are always positioned relative to the initial containing block. This causes the element to appear fixed on the page, regardless of scrolling.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/ExweEqY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Note that an element using the &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;perspective&lt;/code&gt;, and &lt;code&gt;transform&lt;/code&gt; properties or the &lt;code&gt;will-change: transform&lt;/code&gt; declaration becomes the containing block of any &lt;code&gt;fixed&lt;/code&gt; descendants, causing the &lt;code&gt;fixed&lt;/code&gt; elements to act absolutely-positioned. In other words, elements with these properties cannot have &lt;code&gt;fixed&lt;/code&gt; descendants.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sticky"&gt;
  &lt;/a&gt;
  Sticky
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sticky&lt;/code&gt; causes the element to act like a relatively-positioned element until it reaches a threshold, at which point it becomes fixed relative to its &lt;a href="https://www.w3.org/TR/css-overflow-3/#scrollport"&gt;nearest scrollport&lt;/a&gt; (i.e., the closest ancestor that manages overflow) until its container goes out of view. Space is made for the element in the layout, even when it acts fixed.&lt;/p&gt;

&lt;p&gt;The threshold is specified by the inset properties: for example, a &lt;code&gt;sticky&lt;/code&gt; element with &lt;code&gt;top: 10px&lt;/code&gt; would be relatively-positioned until the element is 10 pixels from the top of its nearest scrollport. Once that threshold is met, the element is fixed 10 pixels from the top of its nearest scrollport.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/vYezjyZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this example, the box sticks to the viewport but is only sticky while its container is in view:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/zachsnoek/embed/QWqVrpz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#positioning-in-the-wild"&gt;
  &lt;/a&gt;
  Positioning in the wild
&lt;/h2&gt;

&lt;p&gt;I found it helpful to understand positioning by seeing its use in the real world. Here are a few examples of positioning types that I found.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#absolute-facebook-notification-badge"&gt;
  &lt;/a&gt;
  Absolute: Facebook notification badge
&lt;/h3&gt;

&lt;p&gt;This notification badge on Facebook uses absolute positioning to appear above the news icon:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pPZ41pkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg4yb1e9r4rjyh6k8tv2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pPZ41pkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dg4yb1e9r4rjyh6k8tv2.png" alt="Facebook notification badge" width="45" height="43"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fixed-stackoverflow-header"&gt;
  &lt;/a&gt;
  Fixed: StackOverflow header
&lt;/h3&gt;

&lt;p&gt;Headers commonly use fixed positioning to stick to the top of the page when the user scrolls:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4zbtf3Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41gw0533h0jzmo7bpyyh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4zbtf3Xw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41gw0533h0jzmo7bpyyh.gif" alt="Stack Overflow header" width="600" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sticky-iphone-product-page"&gt;
  &lt;/a&gt;
  Sticky: iPhone product page
&lt;/h3&gt;

&lt;p&gt;Both the white “iPhone 13” header and product image on this page are sticky:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SGZEAdnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6gycnn533xqgvgr95cj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SGZEAdnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6gycnn533xqgvgr95cj.gif" alt="iPhone 13 product page" width="600" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relative"&gt;
  &lt;/a&gt;
  Relative
&lt;/h3&gt;

&lt;p&gt;I couldn’t find a good example for relative positioning. Please suggest one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect
&lt;/h2&gt;

&lt;p&gt;If you enjoyed this post, connect with me on &lt;a href="https://www.linkedin.com/in/zach-snoek-5b327b179/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://github.com/zachsnoek"&gt;GitHub&lt;/a&gt;, and &lt;a href="https://twitter.com/zach_snoek"&gt;Twitter&lt;/a&gt;! You can also &lt;a href="https://mailchi.mp/2df4b6d5458f/signup-page"&gt;subscribe to my mailing list&lt;/a&gt; to get the latest content and news from me.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bJMEpL4rxAQ"&gt;Chris Coyier | Sticky Positioning in CSS: How it Works, What Can Break It, and Dumb Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/almanac/properties/p/position/"&gt;CSS-Tricks | position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-for-js.dev/"&gt;Josh Comeau | CSS for JavaScript Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position"&gt;MDN | position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning"&gt;MDN | Positioning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/TR/css-position-3/"&gt;W3C | CSS Positioned Layout Module Level 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cover photo by &lt;a href="https://unsplash.com/@__itsflores?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Omar Flores&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Free Django v4 Starter - Soft UI Dashboard</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 17 Jan 2022 16:12:15 +0000</pubDate>
      <link>https://dev.to/sm0ke/free-django-v5-starter-soft-ui-dashboard-o9e</link>
      <guid>https://dev.to/sm0ke/free-django-v5-starter-soft-ui-dashboard-o9e</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article presents an &lt;code&gt;open-source dashboard&lt;/code&gt; starter recently updated to work with the latest &lt;strong&gt;Django&lt;/strong&gt; version. For newcomers, &lt;code&gt;Django&lt;/code&gt; is a leading web framework powered by Python, updated in December 2021 to version 4. &lt;a href="https://appseed.us/product/django-soft-ui-dashboard"&gt;Soft UI Dashboard Django&lt;/a&gt; can be downloaded under the MIT license directly from Github and used for unlimited commercial end products or simply for eLearning activities. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://django-soft-ui-dashboard.appseed-srv1.com/"&gt;Soft UI Dashboard Django&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/django-soft-ui-dashboard"&gt;Soft UI Dashboard Django&lt;/a&gt; - sources (published on GH)&lt;/li&gt;
&lt;li&gt;✨ Get &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Designed for those who like bold elements and beautiful dashboards, &lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; is ready to help you create stunning websites and web apps. This pixel-perfect &lt;strong&gt;Bootstrap 5&lt;/strong&gt; design is provided by &lt;code&gt;Creative-Tim&lt;/code&gt; agency.&lt;/p&gt;




&lt;p&gt;The product can be compiled and used in a local environment via the Docker setup shipped with the sources.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; -  Clone source code (from Github)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-soft-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-soft-ui-dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the above commands are executed, we should be able to visit the app in the browser, register new users, and authenticate.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0VSbyw21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48y17u2feirj4t9fj7qo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0VSbyw21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48y17u2feirj4t9fj7qo.png" alt="Django 4 Soft UI Dashboard - Login Page." width="880" height="463"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-4-updates"&gt;
  &lt;/a&gt;
  ✨ Django 4 Updates
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://blog.appseed.us/django-v4-release/"&gt;Django framework got an update&lt;/a&gt; in December from version v3.2.6 to v4.0 with a few improvements and breaking changes highlighted below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;zoneInfo&lt;/code&gt; becomes the default time zone&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Template-based&lt;/code&gt; form rendering&lt;/li&gt;
&lt;li&gt;Built-in &lt;code&gt;RedisCache&lt;/code&gt; backend powered by redis-py&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;scrypt&lt;/code&gt; password hasher (more powerful than PBKDF2)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Deprecated support&lt;/code&gt; for PostgreSQL v9.6 and Oracle v12.2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information feel free to access the official &lt;a href="https://docs.djangoproject.com/en/4.0/releases/4.0/"&gt;Django v4.x release page&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#soft-ui-design"&gt;
  &lt;/a&gt;
  ✨ Soft UI Design
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining.&lt;/p&gt;

&lt;p&gt;You will save a lot of time going from prototyping to full-functional code because all elements are implemented. This Free Bootstrap 5 Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sE2Fu9uh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzxutago0fb245uf3z57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sE2Fu9uh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzxutago0fb245uf3z57.png" alt="Django 4 Soft UI Dashboard - User Profile Page" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Django 4 Soft Dashboard - Billing Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EsFkr-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40lebx8uj3ccehrzuczn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EsFkr-Rl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40lebx8uj3ccehrzuczn.png" alt="Django 4 Soft UI Dashboard - Billing Page." width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, feel free to acess:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;🎁 More &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Dashboards&lt;/a&gt; crafted in &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;Flask&lt;/code&gt;, and &lt;strong&gt;Django&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;🎁 Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - curated list published on Dev.to
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>django</category>
      <category>python</category>
      <category>opensource</category>
    </item>
    <item>
      <title>iOS Code Review Checklist</title>
      <author>ivcelic</author>
      <pubDate>Mon, 17 Jan 2022 16:11:36 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/ios-code-review-checklist-53ia</link>
      <guid>https://dev.to/bornfightcompany/ios-code-review-checklist-53ia</guid>
      <description>&lt;p&gt;To encourage iOS developers to approach code review more throughly we've built a simple check list that should be followed when going through an iOS pull request. &lt;/p&gt;

&lt;p&gt;Of course we do not go through it and add checkmarks on every PR but we use it to remind us from time to time what should we look for when code reviewing. This is also a good start for someone who is new in iOS development or code reviewing in general.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C9DwGASO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wawzhxix6mpkdti6hg2d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C9DwGASO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wawzhxix6mpkdti6hg2d.png" alt="Image description" width="880" height="948"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Are there any merge conflicts in the PR?&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If yes - return to assignee before looking further into code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. Did the static analysis check run?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eg. for checking the Swift code style we use Swift Lint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3. Check the architecture&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eg. data should not be fetched or processed in presenters or in views&lt;/li&gt;
&lt;li&gt;eg. views should not be modified in view models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;4. Is the code consistent with the agreed coding guidelines?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Are there any new Xcode warnings introduced?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4-B4j15Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxzq48w4w2qgfnz8asl2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4-B4j15Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jxzq48w4w2qgfnz8asl2.png" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Prefer static constants over computed properties&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prefer&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;static let c: Int = 1234
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Over&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;static var d: Int { return 1234 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;7. Check single source of truth principle&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eg. don’t preserve the same information in multiple places in the code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;8. Avoid singletons&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use dependency injection instead&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;9.Look for force unwrapping&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;force unwrap should be avoided (use in &amp;lt; 1% of the cases)&lt;/li&gt;
&lt;li&gt;Using ! should always be a red flag!&lt;/li&gt;
&lt;li&gt;Check if early return from functions (eg. guard) is used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;10.Constants&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract constant to a struct&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;11.Check for magic numbers&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoid harcoding, avoid magic numbers, if needed extract into a constant&lt;/li&gt;
&lt;li&gt;If added, magic numbers should be commented&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cVBSqxE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3jyv7h8w0webggpx6hg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cVBSqxE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3jyv7h8w0webggpx6hg.png" alt="Image description" width="880" height="644"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12.Check encapsulation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check if public variable or function can be private or private(set)?&lt;/li&gt;
&lt;li&gt;If a class won’t be ever instantiated - use enum instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;13.Check polymorphism&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Should we mark the class final?&lt;/li&gt;
&lt;li&gt;Should we use class or static keyword for a function/variable.&lt;/li&gt;
&lt;li&gt;Prefer composition with protocols over inheritance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;14.Check for single responsability&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The function should have one purpose! Split it in two if makes sense.&lt;/li&gt;
&lt;li&gt;The class should not have too many responsabilities - split if needed.&lt;/li&gt;
&lt;li&gt;Avoid massive view controller, add managers, helpers, utils instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3UF4Ckvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydli4fgvwxzdf2pih7b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3UF4Ckvk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydli4fgvwxzdf2pih7b7.png" alt="Image description" width="880" height="602"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15.Check for explicit use of self keyword&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explicit (unneeded) use of self should be avoided
because it makes the capturing semantics of self stand out more in closures, and prevents verbosity elsewhere&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;16.Performance check&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use strings concatenation with /() instead of +&lt;/li&gt;
&lt;li&gt;use isEmpty instead of == nil&lt;/li&gt;
&lt;li&gt;use ! instead of == false&lt;/li&gt;
&lt;li&gt;instantiate DateFormatter only once&lt;/li&gt;
&lt;li&gt;reuse cells&lt;/li&gt;
&lt;li&gt;use image caching &lt;/li&gt;
&lt;li&gt;use background threads where needed&lt;/li&gt;
&lt;li&gt;etc…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;17.Error handling&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are all the errors cases handled in code? Log the error, notify the user, retry, fail safely…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;18.Check security vulnerabilities&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are there any user passwords or other secrets stored as plain text?&lt;/li&gt;
&lt;li&gt;Is there any sensitive data being logged?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;19.Check naming&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is naming clear and consistent. The naming is important for writing self-documenting code!&lt;/li&gt;
&lt;li&gt;Boolean values should start with is, can, should, will…&lt;/li&gt;
&lt;li&gt;When in doubt - use longer names (adds more information) over shorter names (can bring confusion).&lt;/li&gt;
&lt;li&gt;Use UpperCamelCase for types and protocols, lowerCamelCase for everything else.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oHhAeMsB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1dzcry28pfy1tocflb8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oHhAeMsB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1dzcry28pfy1tocflb8.png" alt="Image description" width="830" height="898"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;20.Check duplicate code&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Duplicate code is a big no no and should be extracted and reused!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;21.Remove unnecessary code&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remove commented code. You can always get it back with git.&lt;/li&gt;
&lt;li&gt;Remove empty and/or unused variables, functions, imports…&lt;/li&gt;
&lt;li&gt;No need to add explicit init for structs if using only the default initialiser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;22.Memory leaks&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Closures should use weak self&lt;/li&gt;
&lt;li&gt;Delegates should be weak&lt;/li&gt;
&lt;li&gt;Check if unowned is misused&lt;/li&gt;
&lt;li&gt;Check for any retain cycles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;23.Check if all strings are localised&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;24.Is the code covered with logs?&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every important event in the app should be logged.&lt;/li&gt;
&lt;li&gt;The logs should contain enough information (class, function, parameters, severity).&lt;/li&gt;
&lt;li&gt;Repeating information can pollute the log.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;25.Is the code well documented?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does every public function contain a comment?&lt;/li&gt;
&lt;li&gt;Does the code contain a comment for every specific part of the code?&lt;/li&gt;
&lt;li&gt;Does every specific class (manager, service, script…) contain a comment about their purpose?&lt;/li&gt;
&lt;li&gt;Does every file contain a copyright?&lt;/li&gt;
&lt;li&gt;Should the README be updated?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_tkmeWSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzmqqyyif76p1kmspny8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_tkmeWSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzmqqyyif76p1kmspny8.png" alt="Image description" width="880" height="675"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As mention before, we use this checklist as a reminder and a motivation for doing better code reviews. Thus, we are adding bullets to our checklist and improving it over time. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What would you add to the list?&lt;/strong&gt; 🙂&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>ios</category>
      <category>codereview</category>
      <category>swift</category>
    </item>
    <item>
      <title>Paracetamol.js💊| #14: ¿Qué imprime este código JavaScript? </title>
      <author>Cristian Fernando </author>
      <pubDate>Mon, 17 Jan 2022 16:04:47 +0000</pubDate>
      <link>https://dev.to/duxtech/paracetamoljs-14-que-imprime-este-codigo-javascript-cb1</link>
      <guid>https://dev.to/duxtech/paracetamoljs-14-que-imprime-este-codigo-javascript-cb1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#qu%C3%A9-imprime-este-c%C3%B3digo-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;¿Qué imprime este código JavaScript?&lt;/strong&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;([]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;[]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A. &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B. &lt;code&gt;number&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C. &lt;code&gt;object&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D. &lt;code&gt;string&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Respuesta en el primer comentario.&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>spanish</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to create a simple event streaming in Laravel?</title>
      <author>Bobby Iliev</author>
      <pubDate>Mon, 17 Jan 2022 15:55:48 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/how-to-create-a-simple-event-streaming-in-laravel-4pia</link>
      <guid>https://dev.to/bobbyiliev/how-to-create-a-simple-event-streaming-in-laravel-4pia</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Event streams provide you with a way to send events to the client without having to reload the page. This is useful for things like updating the user interface in real-time changes are made to the database.&lt;/p&gt;

&lt;p&gt;Unlike traditional Long-polling using AJAX requests, where multiple requests are sent to the server and a new connection is established each time, event streams are sent to the client in real-time in a single request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6NpD6Rw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/51pLy3q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6NpD6Rw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/51pLy3q.png" alt="Server sent events" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, I will show you how to create a simple event streaming in Laravel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before you start, you need to have Laravel installed on your machine.&lt;/p&gt;

&lt;p&gt;I will be using a DigitalOcean Ubuntu Droplet for this demo. If you wish, you can use my affiliate code to get &lt;a href="https://m.do.co/c/2a9bba940f39"&gt;free $100 DigitalOcean credit&lt;/a&gt; to spin up your own servers!&lt;/p&gt;

&lt;p&gt;If you do not have that yet, you can follow the steps from this tutorial on how to do that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click"&gt;How to Install Laravel on DigitalOcean with 1-Click&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or you could use this awesome script to do the installation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/episode/laravel-on-digital-ocean-with-larasail"&gt;LaraSail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-controller"&gt;
  &lt;/a&gt;
  Creating a controller
&lt;/h2&gt;

&lt;p&gt;Let's start by creating a controller that will handle the event stream.&lt;/p&gt;

&lt;p&gt;To do so, we will use the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan make:controller EventStreamController
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a new controller in the &lt;code&gt;App\Http\Controllers&lt;/code&gt; directory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-event-stream-method"&gt;
  &lt;/a&gt;
  Adding the event stream method
&lt;/h2&gt;

&lt;p&gt;Once we have our controller created, we need to add the &lt;code&gt;stream&lt;/code&gt; method to it. The method will be used to send the event stream.&lt;/p&gt;

&lt;p&gt;Open the &lt;code&gt;EventStreamController.php&lt;/code&gt; file and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Http\Controllers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Carbon\Carbon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Models\Trade&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StreamsController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Controller&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * The stream source.
     *
     * @return \Illuminate\Http\Response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;response&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"event: ping&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$curDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;DATE_ISO8601&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'data: {"time": "'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$curDate&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'"}'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="nv"&gt;$trades&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Trade&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'data: {"total_trades":'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$trades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'}'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="nv"&gt;$latestTrades&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Trade&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'stock'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'data: {"latest_trade_user":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_stock":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;symbol&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_volume":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_price":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'", "latest_trade_type":"'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$latestTrades&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'"}'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;

                &lt;span class="nb"&gt;ob_flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="nb"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

                &lt;span class="c1"&gt;// Break the loop if the client aborted the connection (closed the page)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;connection_aborted&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
                &lt;span class="nb"&gt;usleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 50ms&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s1"&gt;'Cache-Control'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'no-cache'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'Content-Type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'text/event-stream'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main things to note here are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We are using the &lt;code&gt;response()-&amp;gt;stream()&lt;/code&gt; method to create the event stream.&lt;/li&gt;
&lt;li&gt;Then we have an infinite loop that sends the event stream every 50ms.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;ob_flush()&lt;/code&gt; and &lt;code&gt;flush()&lt;/code&gt; methods to send the event stream.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;sleep()&lt;/code&gt; method to wait for 50ms before sending the next event.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;connection_aborted()&lt;/code&gt; method to break the loop if the client aborted the connection.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;Carbon\Carbon&lt;/code&gt; class to get the current date.&lt;/li&gt;
&lt;li&gt;We are using the &lt;code&gt;App\Models\Trade&lt;/code&gt; model to get the latest trades. This is just for the demo, you can use any model you want.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;code&gt;text/event-stream&lt;/code&gt; to tell the browser that the response is an event stream.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#enable-output-buffering"&gt;
  &lt;/a&gt;
  Enable output buffering
&lt;/h2&gt;

&lt;p&gt;For the above code to work, we need to enable output buffering in your PHP.ini file. This is done by adding the following line to the &lt;code&gt;php.ini&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;output_buffering = On
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You may need to reload the PHP-FPM service after making this change. Or if you are using Apache, you can restart Apache.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-routes"&gt;
  &lt;/a&gt;
  Adding the routes
&lt;/h2&gt;

&lt;p&gt;We would like to call the &lt;code&gt;stream&lt;/code&gt; method when the &lt;code&gt;/stream&lt;/code&gt; route is requested.&lt;/p&gt;

&lt;p&gt;The route will be added to the &lt;code&gt;routes/web.php&lt;/code&gt; file and will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;App\Http\Controllers\StreamsController&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;Route&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/stream'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;StreamsController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'stream'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#working-with-the-event-stream-on-the-frontend"&gt;
  &lt;/a&gt;
  Working with the event stream on the frontend
&lt;/h2&gt;

&lt;p&gt;You could use a frontend framework like &lt;a href="https://vuejs.org/"&gt;Vue.js&lt;/a&gt; to handle the event stream. But for this demo, I will use pure Javascript.&lt;/p&gt;

&lt;p&gt;The JavaScript snippet that I will add to my blade template will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;eventSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;time&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eventList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;newElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;eventList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newElement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see this in action, you can try the following demo!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo-project"&gt;
  &lt;/a&gt;
  Demo project
&lt;/h2&gt;

&lt;p&gt;If you want to see how the event stream works, you can check out the demo project I created:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bobbyiliev/materialize-tutorials/tree/main/laravel-eventstreams"&gt;Laravel EventStream: Real-time stock trades dashboard with Laravel and Materialize&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The demo project does not only show the event stream but also has a simple frontend dashboard and uses &lt;a href="https://materialize.com"&gt;Materialize&lt;/a&gt; as a streaming database.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eFJ9iGv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/21223421/149408173-7a76c837-314b-419a-a589-d6867fc55c99.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFJ9iGv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/21223421/149408173-7a76c837-314b-419a-a589-d6867fc55c99.gif" alt="Laravel EventStream" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sse-vs-websockets"&gt;
  &lt;/a&gt;
  SSE vs WebSockets
&lt;/h2&gt;

&lt;p&gt;Event streams are great and easy to use, but there are some pros and cons when compared to other streaming protocols like &lt;a href="https://en.wikipedia.org/wiki/WebSocket"&gt;WebSockets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example, SSE is unidirectional, meaning that once the connection is established the server will only send data to the client, but the client can't send data back to the server.&lt;/p&gt;

&lt;p&gt;Unlike long-polling, with WebSockets you only have a single connection to the server similar to SSE (Server-Sent Events). The connection is duplex, meaning you can send and receive data from the server.&lt;/p&gt;

&lt;p&gt;If you want to learn more about the differences between SSE and WebSockets, check out this great video by Martin Chaov:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/n9mRjkQg3VE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;For more information about event streams, check out this documentation here by Mozilla:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events"&gt;Event streams in the Web Platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There you would find a more in-depth explanation of the event streams and how they work.&lt;/p&gt;

&lt;p&gt;For more information about Materialize, check out this video here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WVORbibyFGA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hope you enjoyed this tutorial!&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>materialize</category>
      <category>database</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Windows 10 PuTTY Kurulumu</title>
      <author>Fatih Arslan Tugay</author>
      <pubDate>Mon, 17 Jan 2022 15:37:23 +0000</pubDate>
      <link>https://dev.to/aciklab/windows-10-putty-kurulumu-3691</link>
      <guid>https://dev.to/aciklab/windows-10-putty-kurulumu-3691</guid>
      <description>&lt;p&gt;Bu yazımızda Windows 10 işletim sistemi üzerinde PuTTY programının kurulumunu anlatacağız.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#putty-nedir"&gt;
  &lt;/a&gt;
  PuTTY Nedir?
&lt;/h2&gt;

&lt;p&gt;PuTTY, SSH bağlantısı ile birlikte uzak bir sunucuya bağlantı kurmamızı sağlayan bir yazılımdır. PuTTY ile birlikte sunucularınıza SSH/Telnet bağlantısı gerçekleştirerek erişim sağlayabilirsiniz. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kurulum"&gt;
  &lt;/a&gt;
  Kurulum
&lt;/h2&gt;

&lt;p&gt;Öncelikle programın yükleme dosyasını indirmemiz gerekmektedir. &lt;a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"&gt;Linke&lt;/a&gt; tıklayarak ilgili siteye gidelim. Direkt .msi uzantılı kurulum dosyası indireceğimizden Package files kısmından işlemcimize uyumlu pakete tıklayarak indirelim.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wM2QFcZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68rsbiilhi3kktcfm6hm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wM2QFcZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68rsbiilhi3kktcfm6hm.png" alt="1" width="880" height="662"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;İlk önce Next diyerek kuruluma başlıyoruz. İlk gelen kısımda programın kurulacağı yeri seçiyoruz. Default olarak gelen yeri değiştirmeden Next diyerek devam edebiliriz. Daha sonra gelen ekranda ise istediğimiz özellikleri seçtiğimiz ekran geliyor. İşaretli yerdeki simgelerin hepsini resimdeki hale getirerek Install diyelim ve kuruluma başlayalım.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---VZKjX_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gojrr1w4ukwdxgr9cin.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---VZKjX_V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gojrr1w4ukwdxgr9cin.png" alt="2" width="440" height="346"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kurulum tamamlandıktan sonra kurulum sihirbazını kapatarak masaüstüne gidelim. PuTTY simgesine tıklayarak programı kullanmaya başlayabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T1dv5LtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we1wc0xsj9h59gwp2cm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T1dv5LtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/we1wc0xsj9h59gwp2cm6.png" alt="3" width="400" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>putty</category>
      <category>ssh</category>
      <category>telnet</category>
      <category>windows</category>
    </item>
    <item>
      <title>Know Bunzz, a game changer blockchain startup for DApp Development with No Code</title>
      <author>Bunzz</author>
      <pubDate>Mon, 17 Jan 2022 15:35:29 +0000</pubDate>
      <link>https://dev.to/bunzzdev/know-bunzz-a-game-changer-blockchain-startup-for-dapp-development-with-no-code-3ml0</link>
      <guid>https://dev.to/bunzzdev/know-bunzz-a-game-changer-blockchain-startup-for-dapp-development-with-no-code-3ml0</guid>
      <description>&lt;p&gt;In a world where businesses are starting to shift into blockchain solutions to adapt to upcoming new standards in tech and user experience, the path to that goal has been very complicated, complex and costly until the appearance of Bunzz on the scene. Bunzz is the world's first platform that allows software developers and businesses to develop DApps (Decentralized Applications) in a few minutes without knowing how to code nor any prior knowledge of blockchain and Web3.   &lt;/p&gt;

&lt;p&gt;Landing Page: &lt;a href="https://bunzz.dev"&gt;bunzz.dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bunzz is the second service and new business fully dedicated to Dapp development provided and developed by the blockchain startup LasTrust, that also has been up in the worldwide tech market providing other services such as CloudCerts.&lt;/p&gt;

&lt;p&gt;Technically, Bunzz functions like Firebase but for Dapps development, being a Blockchain Backend as a Service (BC BaaS) that lets developers create DApps without coding but combining smart contracts by selecting Modules and after that integrating them to a front-end via a Bubble plug-in, while at the same time Bunzz provides the automatic back-end solutions for them, all in one platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AHOyWaGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5834uj7vpyytgm9nxay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AHOyWaGw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w5834uj7vpyytgm9nxay.png" alt="Image description" width="880" height="443"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this way, Bunzz provides a service that eliminates the need for back-end coding in DApp development, while also providing an environment where front-end development can be done without the need to write any code.&lt;/p&gt;

&lt;p&gt;This unique modular structure as User Interface enables smart contracts to be combined swiftly and smoothly, almost as easy as drag and drop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUoql5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gs62a4kn75rctv47mgyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vkUoql5h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gs62a4kn75rctv47mgyk.png" alt="Image description" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, it’s possible to combine a module that generates NFTs (ERC721) with a module that trades NFTs to develop an NFT marketplace. Alternatively, a module that generates a ERC20 token and a lending function module and using them to develop a "lending DeFi service. Among other use cases and new combinations to come in the coming months, meeting the needs of each user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQPv3ET3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs6stex7la1sm3nyv5h1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQPv3ET3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs6stex7la1sm3nyv5h1.png" alt="Image description" width="512" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2zNymFqYXOY"&gt;https://www.youtube.com/watch?v=2zNymFqYXOY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to these most frequently used ready-made modules of smart contracts that have been prepared in advance upon launch, in Q1 2022, Bunzz plans to implement an Explorer and Repository, which will allow users to use their own uploaded smart contracts, extending the functionality of the DApps that can be built by importing and using other smart contracts that are external to Bunzz.&lt;/p&gt;

&lt;p&gt;For a depiction of what is possible with Bunzz, we invite you to watch this brief video with a walkthrough of Bunzz dashboard and the creation of a cryptocurrency as a sample of how the platform works. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/2zNymFqYXOY"&gt;https://youtu.be/2zNymFqYXOY&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Apps based on blockchain technology, such as NFT and DeFi, have attracted the attention of numerous developers and investors. However, new companies and entry-level developers have found it hard to dive into blockchain because it requires a high level of expertise. &lt;/p&gt;

&lt;p&gt;The name "Bunzz" is derived from the bun part of a hamburger, likening the development of a DApp to the process of making a hamburger. The concept of Bunzz is to provide a high-quality bun (backend) that allows users to deploy their original burgers (DApps) by selecting their favorite ingredients (smart contracts) and to use any ingredient as a product.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImjQ6Eew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emomk0zc6icborb5ekpz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImjQ6Eew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emomk0zc6icborb5ekpz.png" alt="Image description" width="880" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The platform allows users to complete the entire process from DApp configuration to deployment using only a graphical user interface (GUI), thus greatly reducing the cost of learning blockchain and smart contracts to build a DApp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nW37NJhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmr3j54w1nrczreknvpx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nW37NJhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmr3j54w1nrczreknvpx.png" alt="Image description" width="880" height="364"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check the latest updates of Bunzz on &lt;a href="https://twitter.com/BunzzDev"&gt;Twitter&lt;/a&gt;, &lt;a href="https://discord.gg/DtXHMX76"&gt;Discord &lt;/a&gt;and our &lt;a href="http://www.bunzz.dev"&gt;Website&lt;/a&gt;. We offer continuous support to developers and any help needed by business owners, artists and any user throughout the process of creating your Dapps in Bunzz platform, simply jump in to our Discord and let us know your questions and what you intend to build.&lt;/p&gt;

&lt;p&gt;We are excited to have you all trying our top-notch platform and creating your own Dapps fast and easy, and maybe for some expanding and shifting your regular businesses and art works into blockchain allowing your clients and/or followers to buy your products/services using cryptocurrencies.&lt;/p&gt;

&lt;p&gt;Sign Up to Bunzz platform here: &lt;a href="https://app.bunzz.dev/signup"&gt;app.bunzz.dev/signup&lt;/a&gt; and start building your Dapps for free!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GquSupil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct6xko4oay21ft5ea2zz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GquSupil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct6xko4oay21ft5ea2zz.png" alt="Image description" width="300" height="44"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>dappdevelopment</category>
      <category>dapps</category>
      <category>nocodeplatform</category>
    </item>
    <item>
      <title>6 Amazing Algorithms For Detecting Faces In Images With Python Code References</title>
      <author>Yaniv Noema</author>
      <pubDate>Mon, 17 Jan 2022 15:30:45 +0000</pubDate>
      <link>https://dev.to/yanivnoema/6-amazing-algorithms-for-detecting-faces-in-images-with-python-code-references-50je</link>
      <guid>https://dev.to/yanivnoema/6-amazing-algorithms-for-detecting-faces-in-images-with-python-code-references-50je</guid>
      <description>&lt;p&gt;Did you know that there are many different algorithms for detecting faces in images?&lt;br&gt;
The most popular of these is the Viola-Jones algorithm, but it’s not perfect. There are plenty of other great options out there like the Haar Cascades and Fisherfaces which you can use to detect faces on your own computer or mobile device.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://ersanpreet.wordpress.com/2020/03/10/face-and-eyes-detection-with-viola-jones-along-with-python-code/"&gt;1. Viola-Jones Algorithm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This algorithm works very quickly and with a good degree of accuracy. It was created by Paul Viola and Michael Jones in 2001. The algorithm has been successfully applied to many different fields, including ATM machines that can detect a user’s face to authorize a transaction.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/python-haar-cascades-for-object-detection/"&gt;2. Haar Cascade Algorithm&lt;/a&gt;&lt;br&gt;
This algorithm was created by Paul Viola and Michael Jones in 2003. The algorithm works very quickly and is simple to apply, which makes it perfect for mobile devices.&lt;br&gt;
It is also very accurate and can be used to detect a wide variety of objects, not just faces.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://scipy-lectures.org/packages/scikit-learn/auto_examples/plot_eigenfaces.html"&gt;3. Eigenfaces&lt;/a&gt;&lt;br&gt;
This algorithm was created in 1992 by Feng Huang and Peter J. Rousseeuw in their paper “Finding Groups of Data-Points in Data-Space”. The algorithm is simple to apply and very accurate. However, it can be slow when applied to large images.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://iq.opengenus.org/face-recognition-using-fisherfaces/"&gt;4. Fisherfaces&lt;/a&gt;&lt;br&gt;
This algorithm was created in 1999 by Vladimir I. Ivkovic, Sebastian Thrun, and Berthold K. P. Horn. The algorithm is very accurate and fast, making it a good choice for applications that require real-time detection.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/07/understanding-face-recognition-using-lbph-algorithm/"&gt;5. Local Binary Patterns Histogram Algorithm (LBPH)&lt;/a&gt;&lt;br&gt;
This algorithm was created by Matthew O’Toole, Andrea Vacchi, and Andrew Zisserman in their paper “A Local Geometric Model for Face Detection.”&lt;br&gt;
The algorithm is very accurate and can be applied to a wide variety of images. However, it is slow when applied to large images.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://docs.opencv.org/4.x/d1/d89/tutorial_py_orb.html"&gt;6. Oriented FAST and Rotated BRIEF (ORB)&lt;/a&gt;&lt;br&gt;
This algorithm was created by Piotr Dollár and Richard Szeliski in their paper “A Fast Approximate Energy Minimization Algorithm for the Simultaneous Detection and Pose Estimation of Human Faces.”&lt;br&gt;
This algorithm is very accurate but is slow when applied to large images.&lt;/p&gt;




&lt;p&gt;The algorithms described in this blog post will help you identify faces and other objects automatically. This is a great way to make your life easier by automating the tedious task of identifying things that are hard to see, such as people’s faces or parts of an animal’s body. You can also use these algorithms for more advanced tasks like detecting whether someone has emotions on their face (e.g., happy, angry) and even predicting how old they appear!&lt;/p&gt;




&lt;p&gt;&lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; provide you with an easy way to build image datasets.&lt;br&gt;
15K+ categories to choose from&lt;br&gt;
Consistent folders structure for easy parsing&lt;br&gt;
Advanced tools for dataset pre-processing: image format, data split, image size and data augmentation.&lt;/p&gt;

&lt;p&gt;👉Visit &lt;a href="https://images.cv/"&gt;images.cv&lt;/a&gt; to learn more&lt;br&gt;
imagescv&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>python</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>The 3 Short Frontend tips for January</title>
      <author>Stas Melnikov</author>
      <pubDate>Mon, 17 Jan 2022 15:21:22 +0000</pubDate>
      <link>https://dev.to/melnik909/the-3-short-frontend-tips-for-january-4e79</link>
      <guid>https://dev.to/melnik909/the-3-short-frontend-tips-for-january-4e79</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-esc-key-is-a-very-useful-pattern"&gt;
  &lt;/a&gt;
  The Esc key is a very useful pattern!
&lt;/h2&gt;

&lt;p&gt;Folks I have pain!😑 I'm a user who tries to use a keyboard most as it's possible. I don't like additional actions. In this post I'd like to tell about the pattern of using the Esc key when we design web interfaces.&lt;/p&gt;

&lt;p&gt;Unfortunately, when I use web interfaces I meet that I can't use the Esc key for canceling my action. For example, I showed the Pinterest solution when users login. &lt;/p&gt;

&lt;p&gt;After when users push the log in button they see a modal with the login form. But if we push the Esc key it doesn't close. So if users push this button by mistake they have to use a mouse for closing the form. That's sad! 😥&lt;/p&gt;

&lt;p&gt;I made research and came across a Booking solution. When users select an interface's language they can push the Esc key and the modal will close. So users don't have to do additional actions with a mouse. Just one push and the action is canceled!😍&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Tf6yl7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1100%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F74b33d33-8780-43b9-9d73-6be675a2c1b0_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Tf6yl7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1100%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F74b33d33-8780-43b9-9d73-6be675a2c1b0_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ya-ZUPWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F459291f2-bd40-4ec9-8165-2d2525048c7d_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ya-ZUPWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F459291f2-bd40-4ec9-8165-2d2525048c7d_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-make-users-switch-caps-letters-to-lowercase"&gt;
  &lt;/a&gt;
  Don't make users switch caps letters to lowercase
&lt;/h2&gt;

&lt;p&gt;Folks, have you noticed that when you fill in an email you have to switch caps letters to lowercase? 🙄&lt;/p&gt;

&lt;p&gt;The typical example is the login form on iHerb. If we push on the email input field we see a keyboard with caps letter. And we have to switch it to lowercase for starting filling in 😥&lt;/p&gt;

&lt;p&gt;But most emails start in lowercase letters. So showing a keyboard with lowercase letters is more user-friendly because that doesn't make users do additional actions.&lt;/p&gt;

&lt;p&gt;And what's awesome is that might be done just adding autocapitalize="off" to an input element. And a browser will display a keyboard with lowercase letters 🤩 And it's all! Just a simple trick!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uFmBUzRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Ff174359e-f0ab-4b16-927f-e6d757ba529b_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uFmBUzRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Ff174359e-f0ab-4b16-927f-e6d757ba529b_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tfNn1wMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fca12b268-d821-42b5-afd8-37ceebe5243e_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tfNn1wMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fca12b268-d821-42b5-afd8-37ceebe5243e_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-digital-keyboard-make-code-entering-easier"&gt;
  &lt;/a&gt;
  A digital keyboard make code entering easier
&lt;/h2&gt;

&lt;p&gt;Folks, there is a practice to show a keyboard for entering a telephone number always when users need to enter digital type data. For example, that is when users log in Telegram on the website.&lt;/p&gt;

&lt;p&gt;When users enter code they might be confused because they don't expect these symbols such as #, *, etc. So they might make mistakes 😒😒😒&lt;/p&gt;

&lt;p&gt;I solve this problem using the inputmode attribute. The numeric value allows showing a keyboard with the digits without special symbols for entering a telephone number. I hope that helps users avoid mistakes 🙂🙂🙂&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C7SavWFw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1100%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F14f21248-0491-4b37-9477-0e58211c9fb6_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C7SavWFw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1100%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F14f21248-0491-4b37-9477-0e58211c9fb6_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUJNjmFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F0ec231ac-fe3f-4eae-b809-145eaa106646_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUJNjmFN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/f_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F0ec231ac-fe3f-4eae-b809-145eaa106646_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
❤ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten&lt;/p&gt;

&lt;p&gt;💪 Get more free tips &lt;a href="https://uxa11y.substack.com"&gt;directly to your inbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👀 Also check &lt;a href="https://linktr.ee/melnik909"&gt;my things&lt;/a&gt; out that I make for the community&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Situational Leadership: A Developer's Business</title>
      <author>Kevin Murphy</author>
      <pubDate>Mon, 17 Jan 2022 15:16:39 +0000</pubDate>
      <link>https://dev.to/kevin_j_m/situational-leadership-a-developers-business-4eo8</link>
      <guid>https://dev.to/kevin_j_m/situational-leadership-a-developers-business-4eo8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#a-developers-business"&gt;
  &lt;/a&gt;
  A Developer's Business
&lt;/h2&gt;

&lt;p&gt;Knowing a thing or two about the mindset of someone on the "business" side of your company can be very valuable. That doesn't mean you need to spend two years of your life getting a &lt;a href="https://kevinjmurphy.com/posts/engineering-mba/"&gt;MBA&lt;/a&gt; to learn about this (but don't let me stop you).&lt;/p&gt;

&lt;p&gt;This post won't be about accounting or marketing or entrepreneurship or making quarterly revenue projections. However, it will focus on a concept I learned in business school that helps me in my day to day as a developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leadership"&gt;
  &lt;/a&gt;
  Leadership
&lt;/h2&gt;

&lt;p&gt;I know, you're a developer. You want to write code, not lead people. You're not a manager and maybe you're not in a "leadership" position as an individual contributor either. However, for the betterment of yourself and your team, it helps to study leadership.&lt;/p&gt;

&lt;p&gt;Presumably you have people leading you. It can help to know how they think about different situations, or what training they might have at their disposal. You may not do the leading, but wouldn't it be great if you could help your leadership by letting them know what they could do to best support you?&lt;/p&gt;

&lt;p&gt;Even without the "right" title, everyone in a team still has opportunities to lead. It can mean ownership over a piece of functionality. It can be assisting new members of your team acclimate to your codebase or processes. It can come in when mentoring other people on your team, formally or not. Situations to practice leadership skills are likely frequently presenting themselves to you. You may be doing it without thinking about it or knowing it!&lt;/p&gt;

&lt;p&gt;One model of leadership that I find valuable to keep in mind is Situational Leadership. Let's learn what it is and talk about how we can use it in our jobs as developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#situational-leadership"&gt;
  &lt;/a&gt;
  Situational Leadership
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/Situational_leadership_theory"&gt;Situational Leadership Model&lt;/a&gt; posits that there are four different styles of leadership.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#directing"&gt;
  &lt;/a&gt;
  Directing
&lt;/h3&gt;

&lt;p&gt;In the directing style, the leader provides close, detailed supervision with clear instructions and expectations. The team's role in this style is in executing the task. This style is effective when someone is unfamiliar with the work, or needs to be retrained on an activity. Crises and emergencies are other places where the directing style may be necessary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coaching"&gt;
  &lt;/a&gt;
  Coaching
&lt;/h3&gt;

&lt;p&gt;A leader using the coaching style still has ownership over the decision-making process, much like in the directing style. However, more of their time should be spent getting buy-in from the team on why decisions are made the way they are. Employ this approach when the team is comfortable with the individual mechanics of performing the tasks, can provide input on the process, and can be motivated by understanding the goal or end-state that performing the work should deliver.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supporting"&gt;
  &lt;/a&gt;
  Supporting
&lt;/h3&gt;

&lt;p&gt;With the supporting style, ownership on decision-making is shifted from the leader and moved to the team. The leader's role is to facilitate discussion within the team to reach decisions, to introduce them to the people and tools that will aid in their success, to be a sounding board as they make decisions, and to encourage them to take action on their own.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#delegating"&gt;
  &lt;/a&gt;
  Delegating
&lt;/h3&gt;

&lt;p&gt;A leader using the delegating style provides and trusts the team with autonomy on day-to-day decision-making. The leader's energy is focused on the overall vision and strategy for the organization they lead. They provide the team with the tools to execute those high-level concepts and translate them into tactical decisions and tasks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leading-situation-by-situation"&gt;
  &lt;/a&gt;
  Leading Situation By Situation
&lt;/h2&gt;

&lt;p&gt;A leader must be able to exhibit all of these styles. Otherwise, they'll only be effective in very specific scenarios with a very specific group of people at a given time. The authors of this framework acknowledge that by &lt;a href="https://blogs.umass.edu/shabazz/2014/08/"&gt;saying&lt;/a&gt; that Situational Leadership is about&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Choosing the right leadership style for the right people.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In order to determine which style to use at a given time, consider how much relationship and task behavior is required by the individual or team at the moment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jxnEZ5ty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kevinjmurphy.com/img/situational-leadership.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jxnEZ5ty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kevinjmurphy.com/img/situational-leadership.png" alt="Situational Leadership relationship and task behavior" width="880" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The more assistance a person needs in understanding the mechanisms needed to complete the work, the higher the amount of task behavior is needed. The more the person needs to understand the background, or business value, of an item of work, or help navigating the political or social pressures involved in completing the work, the higher amount of relationship behavior the leader needs to provide.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sprint-planning-with-situational-leadership"&gt;
  &lt;/a&gt;
  Sprint Planning With Situational Leadership
&lt;/h2&gt;

&lt;p&gt;One scenario where Situational Leadership can be helpful to us and our team as developers is in Sprint Planning. When reviewing the units of work that we're preparing to work on, we can identify what level of support and leadership people in the team will need to succeed in completing the tickets.&lt;/p&gt;

&lt;p&gt;If you have a task where people have no familiarity with what is being asked of them and they'll be working on it, then the &lt;em&gt;directing&lt;/em&gt; style may be appropriate. Make sure that the ticket has clearly defined instructions and acceptance criteria. Also, consider adding a second member of the team to the ticket so they can pair and have someone else who will be directly accountable for helping see the work through to completion.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;coaching&lt;/em&gt; style may be used in supporting a teammate on a task where they have some understanding of the mechanics needed to complete the ticket. I find this can be most effectively done when you can draw a parallel or analogy to similar work. Link to a branch, or a pull request, or a commit that's similar, and explain how this ticket will be the same and different from what's done there. The person is still provided clear direction on what to do, but is given more room to complete it in their own way, with more information about &lt;strong&gt;why&lt;/strong&gt; something is done and how it's similar to other work.&lt;/p&gt;

&lt;p&gt;Use the &lt;em&gt;supporting&lt;/em&gt; style on a task that will be familiar to the person doing it. You may perhaps organize a quick chat with stakeholders to make sure everyone is aligned and let this person ask any questions they might have. Check in with the person individually to see what they need, find out if they want to bounce any ideas off of you, or if they have suggestions for what others can do to help them complete their work.&lt;/p&gt;

&lt;p&gt;Is there a rote task or something done time after time that a team member is working on? &lt;em&gt;Delegate&lt;/em&gt; the work to them entirely and allow them the space and respect to get in there and execute on their own. However, if you are the person taking on this rote task, or you identify that happening with someone else, consider speaking up to add someone else to the ticket as well so they can learn from your experience and get more familiar with the actions needed to complete it. It's now your responsibility to help bring everyone else on the team up to speed in your area of expertise, for the benefit of us all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#leading-to-a-conclusion"&gt;
  &lt;/a&gt;
  Leading To A Conclusion
&lt;/h2&gt;

&lt;p&gt;Exercising leadership skills is something we can all find opportunities to practice, regardless of our expertise, title, or role in our teams. Situational Leadership is a framework you can use to consider what concrete actions you can model in a given scenario to provide the most effective leadership for yourself and your team.&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>management</category>
      <category>productivity</category>
      <category>career</category>
    </item>
    <item>
      <title>Get Signup Notifications In Telegram Using Auth0 Actions.</title>
      <author>Adithya Sreyaj</author>
      <pubDate>Mon, 17 Jan 2022 15:12:05 +0000</pubDate>
      <link>https://dev.to/adisreyaj/get-signup-notifications-in-telegram-using-auth0-actions-3gc9</link>
      <guid>https://dev.to/adisreyaj/get-signup-notifications-in-telegram-using-auth0-actions-3gc9</guid>
      <description>&lt;p&gt;Auth0 actions are so powerful that they can be used to do a lot of cool things. Here's how you can send notifications to Telegram whenever a new user signs up. &lt;/p&gt;

&lt;p&gt;I recently worked on a small project which is a small e-commerce application built using Angular and NestJs. Auth0 is used for authenticating the users. I had a very interesting thought of adding notifications when a new user signs up. The easiest way for me was to use Auth0 Actions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#auth0-actions"&gt;
  &lt;/a&gt;
  Auth0 Actions
&lt;/h2&gt;

&lt;p&gt;Actions are one of the coolest features of Auth0. I personally love it and have used it for multiple scenarios. Actions are custom Node.js functions that get executed during certain points like User Login, Registration, etc.&lt;/p&gt;

&lt;p&gt;Here's a definition from the docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Actions are functional services that fire during specific events across multiple identity flows.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Auth0 hooks&lt;/strong&gt; allowed us to add custom logic that gets triggered when certain events happen. Actions are a more advanced version of hooks that provides more extensibility.&lt;/p&gt;

&lt;p&gt;Official docs: &lt;a href="https://auth0.com/docs/customize/actions"&gt;https://auth0.com/docs/customize/actions&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#action-triggers"&gt;
  &lt;/a&gt;
  Action Triggers
&lt;/h3&gt;

&lt;p&gt;The custom functions that we write are called by certain events. Here are the supported triggers:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VXBepngC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642323501366/zq800xdZ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VXBepngC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642323501366/zq800xdZ8.png" alt="Action triggers" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are more details of when exactly these actions are triggered:&lt;br&gt;
&lt;a href="https://auth0.com/docs/customize/actions/triggers"&gt;https://auth0.com/docs/customize/actions/triggers&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#implementing-the-action"&gt;
  &lt;/a&gt;
  Implementing the Action
&lt;/h2&gt;

&lt;p&gt;For our use case, we need the notification to be sent when a new user signs up. So we could use the &lt;strong&gt;Post User Registration&lt;/strong&gt; trigger for our action.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-create-a-custom-action"&gt;
  &lt;/a&gt;
  1. Create a custom action
&lt;/h3&gt;

&lt;p&gt;The first step is to create a new custom Action. We do that by navigating to &lt;code&gt;Actions &amp;gt; Custom&lt;/code&gt; and then clicking on the &lt;strong&gt;Build Custom&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6a4KIZlm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642324835222/9LKAt5nwl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6a4KIZlm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642324835222/9LKAt5nwl.png" alt="Actions" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We get a modal asking to give the Action a name and also select a Trigger and the Environment.&lt;/p&gt;

&lt;p&gt;You can fill the form up with the following details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Name&lt;/em&gt;: &lt;strong&gt;New User Notifications&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Trigger&lt;/em&gt;: &lt;strong&gt;Post User Registration&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Runtime&lt;/em&gt;: &lt;strong&gt;Node 16 (Recommended)&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#2-setting-up-prerequisites"&gt;
  &lt;/a&gt;
  2. Setting up pre-requisites
&lt;/h3&gt;

&lt;p&gt;Once the action is created, you can see the list of the Actions under &lt;strong&gt;Custom&lt;/strong&gt; tab on the Actions Library page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ux1SDKj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642324644640/8-U_hk8WF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ux1SDKj3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642324644640/8-U_hk8WF.png" alt="Custom Actions Page" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are a few things that we need to do before we can start writing the actual logic.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#creating-a-telegram-bot"&gt;
  &lt;/a&gt;
  Creating a Telegram Bot
&lt;/h4&gt;

&lt;p&gt;Telegram is a really powerful messaging platform that can do a lot of stuff. One of the best things about it is that we can create bots and also send messages using the &lt;a href="https://core.telegram.org/bots/api"&gt;Telegram Bots API&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Put a message to  &lt;a href="https://t.me/botfather"&gt;BotFather&lt;/a&gt; on Telegram&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/newbot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will prompt to you give a name. Give a name and then you'll be given the &lt;strong&gt;Bot Token&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uqKjP7L_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642327890346/DXu0QEak1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uqKjP7L_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642327890346/DXu0QEak1.png" alt="telegram bot.png" width="880" height="571"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we have the bot token, we can make API calls using the Telegram Bot API.&lt;/p&gt;

&lt;p&gt;Ref: &lt;a href="https://core.telegram.org/bots#3-how-do-i-create-a-bot"&gt;https://core.telegram.org/bots#3-how-do-i-create-a-bot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we can send a message to the Bot, we need to get the &lt;strong&gt;Channel Id&lt;/strong&gt;. For that send a message to the bot and then just paste the following URL in the browser (replace the  with yours):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.telegram.org/bot&amp;lt;bot-token&amp;gt;/getUpdates
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be able to see the message details that was sent to the bot:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"ok"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"result"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"update_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;723563447&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"message_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"from"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;627445600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;--&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;Id&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"is_bot"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"John Doe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"johndoe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"language_code"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"chat"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;627445600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"first_name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Jane Doe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"janedoe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"private"&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1642266764&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Test"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; is the &lt;code&gt;channel_id&lt;/code&gt; that we are going to use for sending messages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-writing-the-action-logic"&gt;
  &lt;/a&gt;
  3. Writing the Action Logic
&lt;/h3&gt;

&lt;p&gt;Now that we have the things needed, let's start writing the logic. So here are the things that need to be set up in the actions.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#installing-dependencies"&gt;
  &lt;/a&gt;
  Installing Dependencies
&lt;/h4&gt;

&lt;p&gt;Actions allow us to install packages that we can use inside the function, in our case we need to make API requests to the Telegram Bot API to send messages. For that, we can install a library called &lt;code&gt;node-fetch&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;To do so, go to your newly created action and click on the &lt;strong&gt;Modules&lt;/strong&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P8S_HO-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642328919220/kcxIDQv9K.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P8S_HO-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642328919220/kcxIDQv9K.png" alt="Actions Modules" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We install &lt;code&gt;node-fetch@2&lt;/code&gt; explicitly because we want the &lt;code&gt;CommonJs&lt;/code&gt; version of the library.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adding-env-variables"&gt;
  &lt;/a&gt;
  Adding Env Variables
&lt;/h4&gt;

&lt;p&gt;Actions also have a way to keep our environment variables a secret. This is where we are going to save the &lt;strong&gt;Bot Token&lt;/strong&gt; and the &lt;strong&gt;Channel id&lt;/strong&gt; that we will use in the code. It's not a good idea to put them in the code as they are sensitive information.&lt;/p&gt;

&lt;p&gt;There is a &lt;strong&gt;Secrets&lt;/strong&gt; section under which we can save them. Create a secret for the token and the channel id.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZObG_vRO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642329296076/ZqDEWKjrK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZObG_vRO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642329296076/ZqDEWKjrK.png" alt="Actions Secrets" width="880" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#writing-the-actual-logic"&gt;
  &lt;/a&gt;
  Writing the actual logic
&lt;/h4&gt;

&lt;p&gt;Now you can use &lt;code&gt;node-fetch&lt;/code&gt; to make a post request to the &lt;code&gt;/sendMessage&lt;/code&gt; API endpoint.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;node-fetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;-- require the library&lt;/span&gt;

&lt;span class="cm"&gt;/**
* Handler that will be called during the execution of a PostUserRegistration flow.
*
* @param {Event} event - Details about the context and user that has registered.
*/&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onExecutePostUserRegistration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;family_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;given_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://api.telegram.org/bot&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BOT_TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/sendMessage`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;chat_id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;secrets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TELEGRAM_CHAT_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;`New User Signed up: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;given_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;family_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="p"&gt;}),&lt;/span&gt;
        &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content-type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Failed to notify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the action can be deployed.&lt;/p&gt;

&lt;p&gt;Ref: &lt;a href="https://core.telegram.org/bots/api#sendmessage"&gt;https://core.telegram.org/bots/api#sendmessage&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-using-the-action"&gt;
  &lt;/a&gt;
  4. Using the Action
&lt;/h3&gt;

&lt;p&gt;Once the action is deployed, we can use it in a flow. To do so, navigate to the &lt;code&gt;Actions &amp;gt; Flows&lt;/code&gt; Page and select &lt;strong&gt;Post User Registration&lt;/strong&gt; flow from the cards.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--La4WkNKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642330322367/5kzrptgw-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--La4WkNKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642330322367/5kzrptgw-.png" alt="Auth0 flow" width="880" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can find the action that we built under that &lt;strong&gt;Custom&lt;/strong&gt; tab. Dragging and dropping the action to the flow does the job of activating it. The only thing left now is to just &lt;strong&gt;Apply&lt;/strong&gt; the flow.&lt;/p&gt;

&lt;p&gt;We are done setting up.&lt;/p&gt;

&lt;p&gt;So now whenever someone signs up, you get a message in Telegram.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KG4IWAax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642330497846/LSvxZsnUp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KG4IWAax--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642330497846/LSvxZsnUp.png" alt="Notification" width="880" height="883"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are tons of cool use-cases for Actions. If you would like to see more blogs on it, do let me know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/AdiSreyaj"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adisreyaj"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/adithyasreyaj/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cardify.adi.so"&gt;Cardify&lt;/a&gt; - Dynamic SVG Images for Github Readmes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do add your thoughts in the comments section.&lt;br&gt;
Stay Safe ❤️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/adisreyaj"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EerhkLKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639498527478/IA3aJ9R0J.png" alt="Buy me a pizza" width="880" height="91"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>authentication</category>
      <category>auth0</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Simple web scraper that reads all the links to JSON files in JS</title>
      <author>Midhun</author>
      <pubDate>Mon, 17 Jan 2022 15:10:35 +0000</pubDate>
      <link>https://dev.to/midhunz/simple-web-scraper-that-reads-all-the-links-to-json-files-in-js-51en</link>
      <guid>https://dev.to/midhunz/simple-web-scraper-that-reads-all-the-links-to-json-files-in-js-51en</guid>
      <description>&lt;p&gt;I had to get a list of all links on a webpage for a task I was working on. here I am sharing the snippet of code that I used. Let's discuss how to improve it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var tag = document.querySelectorAll("a");
var myarray = []
for (var i = 0; i &amp;lt; tag.length; i++) {
    var nametext = tag[i].textContent;
    var cleantext = nametext.replace(/\s+/g, ' ').trim();
    var cleanlink = tag[i].href;
    myarray.push([cleantext, cleanlink]);
};
function generateJson() {
    var hrefArray = [];
    for (var i = 0; i &amp;lt; myarray.length; i++) {
        let t = {}
        t.n = myarray[i][0]; t.m = myarray[i][1];
        hrefArray.push(t);
    };
    var win = window.open("Json");
    win.document.write(JSON.stringify(hrefArray));
}
generateJson()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You will need to open the website in your browser to get all links&lt;/li&gt;
&lt;li&gt;Go to the console tab in Inspect element&lt;/li&gt;
&lt;li&gt;Please paste the above code and press enter. A json file will open in a new window&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to Run&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6srDjSpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m75evb6s2ejsos33w2hb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6srDjSpo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m75evb6s2ejsos33w2hb.png" alt="Image description" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Result &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qz2Xs0kG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f43iibom3mlhe52dx47a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qz2Xs0kG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f43iibom3mlhe52dx47a.png" alt="Image description" width="880" height="538"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please let me know your thoughts after reading  &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
