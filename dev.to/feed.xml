<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 33 JavaScript Projects on GitHub (November 2021)</title>
      <author>Oleksii Trekhleb</author>
      <pubDate>Sat, 13 Nov 2021 15:23:08 +0000</pubDate>
      <link>https://dev.to/trekhleb/top-33-javascript-projects-on-github-november-2021-41d4</link>
      <guid>https://dev.to/trekhleb/top-33-javascript-projects-on-github-november-2021-41d4</guid>
      <description>&lt;p&gt;2021 is coming to its end, and we may do another snapshot of &lt;strong&gt;33 most starred open-sourced JavaScript repositories&lt;/strong&gt; on GitHub &lt;strong&gt;as of November 13th, 2021&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Previous snapshots: &lt;a href="https://trekhleb.dev/blog/2018/top-33-javascript-projects-on-github-august-2018/"&gt;2018&lt;/a&gt;, &lt;a href="https://trekhleb.dev/blog/2020/top-33-javascript-projects-on-github-december/"&gt;2020&lt;/a&gt;, &lt;a href="http://localhost:8000/blog/2021/top-33-javascript-projects-on-github/"&gt;2021&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You may also &lt;a href="https://github.com/search?l=&amp;amp;o=desc&amp;amp;q=stars%3A%3E1+language%3AJavaScript&amp;amp;s=stars&amp;amp;type=Repositories"&gt;query the GitHub&lt;/a&gt; to fetch the latest results.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1-freecodecampfreecodecamp"&gt;
  &lt;/a&gt;
  #1 &lt;a href="https://github.com/freeCodeCamp/freeCodeCamp"&gt;freeCodeCamp/freeCodeCamp&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;freeCodeCamp.org's open-source codebase and curriculum. Learn to code for free.&lt;br&gt;
&lt;em&gt;★ 335k&lt;/em&gt; &lt;em&gt;(+18k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-vuejsvue"&gt;
  &lt;/a&gt;
  #2 &lt;a href="https://github.com/vuejs/vue"&gt;vuejs/vue&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.&lt;br&gt;
&lt;em&gt;★ 190k&lt;/em&gt; &lt;em&gt;(+14k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-facebookreact"&gt;
  &lt;/a&gt;
  #3 &lt;a href="https://github.com/facebook/react"&gt;facebook/react&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;br&gt;
&lt;em&gt;★ 177k&lt;/em&gt; &lt;em&gt;(+17k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-twbsbootstrap"&gt;
  &lt;/a&gt;
  #4 &lt;a href="https://github.com/twbs/bootstrap"&gt;twbs/bootstrap&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.&lt;br&gt;
&lt;em&gt;★ 154k&lt;/em&gt; &lt;em&gt;(+8k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-trekhlebjavascriptalgorithms"&gt;
  &lt;/a&gt;
  #5 &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;trekhleb/javascript-algorithms&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;br&gt;
&lt;em&gt;★ 126k&lt;/em&gt; &lt;em&gt;(+37k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-airbnbjavascript"&gt;
  &lt;/a&gt;
  #6 &lt;a href="https://github.com/airbnb/javascript"&gt;airbnb/javascript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;JavaScript Style Guide&lt;br&gt;
&lt;em&gt;★ 116k&lt;/em&gt; &lt;em&gt;(+13k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-facebookreactnative"&gt;
  &lt;/a&gt;
  #7 &lt;a href="https://github.com/facebook/react-native"&gt;facebook/react-native&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A framework for building native applications using React&lt;br&gt;
&lt;em&gt;★ 99k&lt;/em&gt; &lt;em&gt;(+7k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-d3d3"&gt;
  &lt;/a&gt;
  #8 &lt;a href="https://github.com/d3/d3"&gt;d3/d3&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Bring data to life with SVG, Canvas and HTML.&lt;br&gt;
&lt;em&gt;★ 99k&lt;/em&gt; &lt;em&gt;(+4k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-facebookcreatereactapp"&gt;
  &lt;/a&gt;
  #9 &lt;a href="https://github.com/facebook/create-react-app"&gt;facebook/create-react-app&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Set up a modern web app by running one command.&lt;br&gt;
&lt;em&gt;★ 91k&lt;/em&gt; &lt;em&gt;(+7k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-axiosaxios"&gt;
  &lt;/a&gt;
  #10 &lt;a href="https://github.com/axios/axios"&gt;axios/axios&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Promise based HTTP client for the browser and node.js&lt;br&gt;
&lt;em&gt;★ 89k&lt;/em&gt; &lt;em&gt;(+9k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-30seconds30secondsofcode"&gt;
  &lt;/a&gt;
  #11 &lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;30-seconds/30-seconds-of-code&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;br&gt;
&lt;em&gt;★ 88k&lt;/em&gt; &lt;em&gt;(+22k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-nodejsnode"&gt;
  &lt;/a&gt;
  #12 &lt;a href="https://github.com/nodejs/node"&gt;nodejs/node&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Node.js JavaScript runtime&lt;br&gt;
&lt;em&gt;★ 83k&lt;/em&gt; &lt;em&gt;(+7k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-vercelnextjs"&gt;
  &lt;/a&gt;
  #13 &lt;a href="https://github.com/vercel/next.js"&gt;vercel/next.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The React Framework&lt;br&gt;
&lt;em&gt;★ 76k&lt;/em&gt; &lt;em&gt;(+18k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-mrdoobthreejs"&gt;
  &lt;/a&gt;
  #14 &lt;a href="https://github.com/mrdoob/three.js"&gt;mrdoob/three.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;JavaScript 3D Library.&lt;br&gt;
&lt;em&gt;★ 75k&lt;/em&gt; &lt;em&gt;(+10k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-muiorgmaterialui"&gt;
  &lt;/a&gt;
  #15 &lt;a href="https://github.com/mui-org/material-ui"&gt;mui-org/material-ui&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;MUI (formerly Material-UI) is the React UI library you always wanted. Follow your own design system, or start with Material Design.&lt;br&gt;
&lt;em&gt;★ 72k&lt;/em&gt; &lt;em&gt;(+9k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-goldbergyoninodebestpractices"&gt;
  &lt;/a&gt;
  #16 &lt;a href="https://github.com/goldbergyoni/nodebestpractices"&gt;goldbergyoni/nodebestpractices&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Node.js best practices list (October 2021)&lt;br&gt;
&lt;em&gt;★ 72k&lt;/em&gt; &lt;em&gt;(+15k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-awesomeselfhostedawesomeselfhosted"&gt;
  &lt;/a&gt;
  #17 &lt;a href="https://github.com/awesome-selfhosted/awesome-selfhosted"&gt;awesome-selfhosted/awesome-selfhosted&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A list of Free Software network services and web applications which can be hosted on your own servers&lt;br&gt;
&lt;em&gt;★ 67k&lt;/em&gt; &lt;em&gt;(+16k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-fortawesomefontawesome"&gt;
  &lt;/a&gt;
  #18 &lt;a href="https://github.com/FortAwesome/Font-Awesome"&gt;FortAwesome/Font-Awesome&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The iconic SVG, font, and CSS toolkit&lt;br&gt;
&lt;em&gt;★ 66k&lt;/em&gt; &lt;em&gt;(+1k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-yangshuntechinterviewhandbook"&gt;
  &lt;/a&gt;
  #19 &lt;a href="https://github.com/yangshun/tech-interview-handbook"&gt;yangshun/tech-interview-handbook&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Curated interview preparation materials for busy engineers&lt;br&gt;
&lt;em&gt;★ 60k&lt;/em&gt; &lt;em&gt;(+60k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-ryanmcdermottcleancodejavascript"&gt;
  &lt;/a&gt;
  #20 &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;ryanmcdermott/clean-code-javascript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Clean Code concepts adapted for JavaScript&lt;br&gt;
&lt;em&gt;★ 59k&lt;/em&gt; &lt;em&gt;(+59k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-webpackwebpack"&gt;
  &lt;/a&gt;
  #21 &lt;a href="https://github.com/webpack/webpack"&gt;webpack/webpack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows for loading parts of the application on demand. Through "loaders", modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.&lt;br&gt;
&lt;em&gt;★ 59k&lt;/em&gt; &lt;em&gt;(+3k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-angularangularjs"&gt;
  &lt;/a&gt;
  #22 &lt;a href="https://github.com/angular/angular.js"&gt;angular/angular.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;AngularJS - HTML enhanced for web apps!&lt;br&gt;
&lt;em&gt;★ 59k&lt;/em&gt; &lt;em&gt;(+0k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-hakimelrevealjs"&gt;
  &lt;/a&gt;
  #23 &lt;a href="https://github.com/hakimel/reveal.js"&gt;hakimel/reveal.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The HTML Presentation Framework&lt;br&gt;
&lt;em&gt;★ 57k&lt;/em&gt; &lt;em&gt;(+2k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-typicodejsonserver"&gt;
  &lt;/a&gt;
  #24 &lt;a href="https://github.com/typicode/json-server"&gt;typicode/json-server&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Get a full fake REST API with zero coding in less than 30 seconds (seriously)&lt;br&gt;
&lt;em&gt;★ 57k&lt;/em&gt; &lt;em&gt;(+6k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-atomatom"&gt;
  &lt;/a&gt;
  #25 &lt;a href="https://github.com/atom/atom"&gt;atom/atom&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The hackable text editor&lt;br&gt;
&lt;em&gt;★ 56k&lt;/em&gt; &lt;em&gt;(+2k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#26-jqueryjquery"&gt;
  &lt;/a&gt;
  #26 &lt;a href="https://github.com/jquery/jquery"&gt;jquery/jquery&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;jQuery JavaScript Library&lt;br&gt;
&lt;em&gt;★ 55k&lt;/em&gt; &lt;em&gt;(+1k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#27-chartjschartjs"&gt;
  &lt;/a&gt;
  #27 &lt;a href="https://github.com/chartjs/Chart.js"&gt;chartjs/Chart.js&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Simple HTML5 Charts using the canvas tag&lt;br&gt;
&lt;em&gt;★ 55k&lt;/em&gt; &lt;em&gt;(+4k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#28-expressjsexpress"&gt;
  &lt;/a&gt;
  #28 &lt;a href="https://github.com/expressjs/express"&gt;expressjs/express&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Fast, unopinionated, minimalist web framework for node.&lt;br&gt;
&lt;em&gt;★ 54k&lt;/em&gt; &lt;em&gt;(+3k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#29-adampmarkdownhere"&gt;
  &lt;/a&gt;
  #29 &lt;a href="https://github.com/adam-p/markdown-here"&gt;adam-p/markdown-here&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Google Chrome, Firefox, and Thunderbird extension that lets you write email in Markdown and render it before sending.&lt;br&gt;
&lt;em&gt;★ 53k&lt;/em&gt; &lt;em&gt;(+4k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#30-h5bphtml5boilerplate"&gt;
  &lt;/a&gt;
  #30 &lt;a href="https://github.com/h5bp/html5-boilerplate"&gt;h5bp/html5-boilerplate&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A professional front-end template for building fast, robust, and adaptable web apps or sites.&lt;br&gt;
&lt;em&gt;★ 51k&lt;/em&gt; &lt;em&gt;(+51k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#31-gatsbyjsgatsby"&gt;
  &lt;/a&gt;
  #31 &lt;a href="https://github.com/gatsbyjs/gatsby"&gt;gatsbyjs/gatsby&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Build blazing fast, modern apps and websites with React&lt;br&gt;
&lt;em&gt;★ 51k&lt;/em&gt; &lt;em&gt;(+3k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#32-lodashlodash"&gt;
  &lt;/a&gt;
  #32 &lt;a href="https://github.com/lodash/lodash"&gt;lodash/lodash&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A modern JavaScript utility library delivering modularity, performance, and extras.&lt;br&gt;
&lt;em&gt;★ 51k&lt;/em&gt; &lt;em&gt;(+3k)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#33-resumeresumegithubcom"&gt;
  &lt;/a&gt;
  #33 &lt;a href="https://github.com/resume/resume.github.com"&gt;resume/resume.github.com&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Resumes generated using the GitHub informations&lt;br&gt;
&lt;em&gt;★ 50k&lt;/em&gt; &lt;em&gt;(+3k)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>8 Most Common Type Of Cyber Attacks</title>
      <author>Prajwol Shrestha</author>
      <pubDate>Sat, 13 Nov 2021 14:43:43 +0000</pubDate>
      <link>https://dev.to/prajwolshrestha/8-most-common-type-of-cyber-attacks-2be5</link>
      <guid>https://dev.to/prajwolshrestha/8-most-common-type-of-cyber-attacks-2be5</guid>
      <description>&lt;p&gt;Before learning about types of cyber attacks, you must know what a cyber attack is. Basically, it is an attack performed by a group or an individual to gain unauthorized access to a system with the intent to harm the victim.&lt;/p&gt;

&lt;p&gt;In this article, we will briefly learn about some of the most common types of cyber attacks  and how to protect yourself from them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-phishing"&gt;
  &lt;/a&gt;
  1. Phishing:
&lt;/h3&gt;

&lt;p&gt;Phishing involves sending emails that appear to be from trusted sources. The goal is to make the victim click on the link and trick them into giving their login credentials or spreading malware.&lt;/p&gt;

&lt;p&gt;Spear phishing is carried out in the same way, except it is more focused on particular people. The attacker has to do some research on the victim before sending them the malicious link. For example, with a little research an attacker can find your friend’s email and send you the malicious link which might appear to be a legitimate email from your friend. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Protect yourself:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Think before you click.&lt;/li&gt;
&lt;li&gt;Verify a site’s security.&lt;/li&gt;
&lt;li&gt;Never give out personal information.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-password-attack-amp-credential-reuse"&gt;
  &lt;/a&gt;
  2. Password Attack &amp;amp; Credential Reuse:
&lt;/h3&gt;

&lt;p&gt;The attacker will use an array of password hacking techniques. The attacker might use a list of common ‘weak’ passwords, to sophisticated ‘Rainbow table’ attacks using previously hacked/cracked passwords.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to protect yourself:&lt;/strong&gt;&lt;br&gt;
*Use a strong password.&lt;br&gt;
*Don’t use the same password on different platforms.&lt;br&gt;
*Use two-factor authentication (2FA).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-dos-and-ddos"&gt;
  &lt;/a&gt;
  3. DOS and DDOS:
&lt;/h3&gt;

&lt;p&gt;It stands for Denial Of Service and Distributed Denial Of Service respectively. The difference between them is that DOS is an attack mode between a single machine and a single machine, whereas a DDOS attack is a large-scale attack mode based on DOS. DDOS uses a group of controlled computers (Botnets) to attack a host. &lt;br&gt;
The idea of both these attacks is to send a high volume of data or traffic through a network that is making a lot of connection requests until the server becomes overloaded and can no longer function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to prevent DDOS attacks:&lt;/strong&gt;&lt;br&gt;
*Protect your DNS Servers.&lt;br&gt;
*Configure your network hardware against DDOS attacks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-driveby-downloads"&gt;
  &lt;/a&gt;
  4. Drive-By Downloads:
&lt;/h3&gt;

&lt;p&gt;Unlike other cyber attacks, you don’t have to open an email attachment or download anything. You will get infected simply by viewing an email or by visiting a website that will automatically download malware.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to protect yourself:&lt;/strong&gt;&lt;br&gt;
*Keep your OS and browsers updated.&lt;br&gt;
*Only keep the programs you need, the more plug-ins you have, the more vulnerable you are.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-man-in-the-middlemitm"&gt;
  &lt;/a&gt;
  5. Man In The Middle(MitM):
&lt;/h3&gt;

&lt;p&gt;The hacker places himself between two communicating hosts and listens to their information. &lt;br&gt;
This attack is similar to the Eavesdropping attack but is much more dangerous. The attacker can not only listen to their information but can also impersonate one of them or change the context of the information being sent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Protect Yourself:&lt;/strong&gt;&lt;br&gt;
*Make sure you use SSL certificates (HTTPS, not just HTTP) to enhance security.&lt;br&gt;
*Use VPN to enhance security when using untrusted networks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-malvertising"&gt;
  &lt;/a&gt;
  6. Malvertising:
&lt;/h3&gt;

&lt;p&gt;This attack will compromise your system with malicious code that is automatically downloaded to your system when you click on an infected advertisement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to protect yourself:&lt;/strong&gt;&lt;br&gt;
*Don’t click on advertisements just because they look appealing.&lt;br&gt;
*Keep your OS, browsers, and plug-in updated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-sql-injection"&gt;
  &lt;/a&gt;
  7. SQL Injection:
&lt;/h3&gt;

&lt;p&gt;It stands for Structured Query Language Injection. The attacker inserts malicious SQL code into the website’s search box or input box. Once the code has been deployed, it might delete or modify data on the database and even copy the whole database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to protect yourself:&lt;/strong&gt;&lt;br&gt;
*Use input validation on input fields.&lt;br&gt;
*Update and patch your software and database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-zeroday-exploit"&gt;
  &lt;/a&gt;
  8. Zero-Day Exploit:
&lt;/h3&gt;

&lt;p&gt;A Zero-Day exploit is an attack that occurs on the same day a weakness is discovered on software. This type of attack is usually hard to defend against since the precise nature of the attack is only known after it has happened. When a person discovers a vulnerability on software instead of directly reporting to the creators of the software, he decides to share this vulnerability on the internet. The hackers then exploit this vulnerability before the creators of the software could patch the vulnerability. &lt;br&gt;
&lt;strong&gt;How to protect yourself:&lt;/strong&gt;&lt;br&gt;
*Keep your OS and software up-to-date.&lt;br&gt;
*Only use SSL certified websites.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>beginners</category>
      <category>security</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Create a Nexus Repository with Windows Containers</title>
      <author>Federico Navarrete</author>
      <pubDate>Sat, 13 Nov 2021 14:09:01 +0000</pubDate>
      <link>https://dev.to/fanmixco/how-to-create-a-nexus-repository-with-windows-containers-e0p</link>
      <guid>https://dev.to/fanmixco/how-to-create-a-nexus-repository-with-windows-containers-e0p</guid>
      <description>&lt;p&gt;Docker is an extremely powerful tool. You often build your own image using X image or X Linux distros like Ubuntu or Debian.&lt;/p&gt;

&lt;p&gt;In our case, we have a Nexus repository running in Windows but we started to move everything to AWS. The greatest challenge happened when we were not able to migrate the DB. Regardless, the configuration we chose, the repo started to crash over and over again. The only option was to move the old VM as a new EC2 which was a bad deal since this would be our only EC2 because the rest was running in containers in ECS.&lt;/p&gt;

&lt;p&gt;After a while, we thought of a new solution, we had heard about Windows Containers, something that is not so well-known. And this is the solution that we came with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM mcr.microsoft.com/windows/nanoserver:1809
RUN mkdir "c:\\nexus"
WORKDIR c:/nexus
RUN mkdir sonatype-work
RUN mkdir nexus-3.36.0-01
COPY nexus-3.36.0-01 .
COPY sonatype-work .
WORKDIR c:/nexus/nexus-3.36.0-01/bin
EXPOSE 8081
CMD ["nexus.exe /run"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first line downloads a copy of &lt;strong&gt;Windows Nano Server&lt;/strong&gt;, which has the smallest footprint. And later, we configured the location that we wanted.&lt;/p&gt;

&lt;p&gt;The number &lt;strong&gt;3.36.0-01&lt;/strong&gt; represents our current version of the Nexus repo, it can change over the years.&lt;/p&gt;

&lt;p&gt;And that's all that you need.&lt;/p&gt;

&lt;p&gt;Now, something important to highlight, this solution doesn't show any logs for any reason and takes some time to run it the first time. So, if you start hitting: &lt;code&gt;http://localhost:8081&lt;/code&gt; in minute one, it might not work, it takes a while maybe 3 to 5 minutes.&lt;/p&gt;

</description>
      <category>windows</category>
      <category>containers</category>
      <category>docker</category>
      <category>nexus</category>
    </item>
    <item>
      <title>Typing speed project for beginners</title>
      <author>Lucifer25x</author>
      <pubDate>Sat, 13 Nov 2021 13:47:35 +0000</pubDate>
      <link>https://dev.to/lucifer25x/typing-speed-project-for-beginners-4g1m</link>
      <guid>https://dev.to/lucifer25x/typing-speed-project-for-beginners-4g1m</guid>
      <description>&lt;p&gt;&lt;strong&gt;Added some functions:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keystroke Counter (False/True)&lt;/li&gt;
&lt;li&gt;Word counter (False/True)&lt;/li&gt;
&lt;li&gt;More detailed finish window.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Fixed textarea problem.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Source Code: &lt;a href="https://github.com/Lucifer25x/typing-test"&gt;https://github.com/Lucifer25x/typing-test&lt;/a&gt;&lt;br&gt;
Online version: &lt;a href="https://lucifer25x.github.io/typing-test/"&gt;https://lucifer25x.github.io/typing-test/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>node</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>photoshop photo editing service </title>
      <author>Mutkisa </author>
      <pubDate>Sat, 13 Nov 2021 13:20:11 +0000</pubDate>
      <link>https://dev.to/mutkisa/photoshop-photo-editing-570j</link>
      <guid>https://dev.to/mutkisa/photoshop-photo-editing-570j</guid>
      <description>&lt;p&gt;We got the idea to create an internet studio in 2012. Then we were a small group of people united by a common love for work and an inexhaustible desire to create. Over time, the small group was replenished with new faces and turned into a close-knit team of specialists with extensive experience.&lt;/p&gt;

&lt;p&gt;Now we offer a full range of Photoshop services related to the processing and retouching of any photos, images, scans and documents. Moreover, we do word and pdf editing, as well as render in a vector.&lt;/p&gt;

&lt;p&gt;We work with both individuals and advertising agencies, photographers and online stores.&lt;/p&gt;

&lt;p&gt;Studio "Photo for processing!" works remotely via the Internet. It is convenient - you do not need to waste time on the road, and you can leave applications on the site around the clock. It doesn't matter where you are in our country or the world - you can use our services from anywhere!&lt;/p&gt;

&lt;p&gt;How are we different from others?&lt;br&gt;
We are not just another agency with a standard set of Photoshop services. "Photo for processing!" is a full-fledged photo processing service. Here's what we can offer you:&lt;/p&gt;

&lt;p&gt;7 years of work behind our shoulders. During this time, we have accumulated really impressive experience and processed more than 100 thousand photos.&lt;br&gt;
more than 20 experienced professionals. The staff is constantly growing. At the same time, each candidate undergoes a strict test for the level of skill and is assessed according to several parameters.&lt;br&gt;
communication with the master directly in the chat mode. For the convenience of our clients, we have developed a special chat where you can discuss in detail the work with the contractor right on the site and track progress.&lt;br&gt;
favorable discounts for regular customers. You can read about them here .&lt;br&gt;
detailed consultations. For any questions regarding professional photo processing, call the phones listed in the header of the screen - we will be happy to advise you.&lt;br&gt;
a large and regularly updated portfolio . The best proof of our craftsmanship.&lt;br&gt;
Our photoshop services&lt;br&gt;
The main list of our services includes:&lt;/p&gt;

&lt;p&gt;photo retouching - elimination of skin defects, body shaping, hair and eye color changes, teeth whitening, rejuvenation, etc.;&lt;br&gt;
retouching of wedding photos;&lt;br&gt;
restoration and coloring of old photos;&lt;br&gt;
photo retouching for monuments;&lt;br&gt;
clipping, advertising retouching and design;&lt;br&gt;
retouching of jewelry;&lt;br&gt;
drawing from a photo;&lt;br&gt;
artistic processing (stylization), photomontage and photo collage;&lt;br&gt;
editing documents and much more.&lt;/p&gt;

</description>
      <category>news</category>
    </item>
    <item>
      <title>What is Git? How will it help you?</title>
      <author>Sushrut Mishra</author>
      <pubDate>Sat, 13 Nov 2021 13:07:09 +0000</pubDate>
      <link>https://dev.to/sushrutkm/what-is-git-how-will-it-help-you-4m5k</link>
      <guid>https://dev.to/sushrutkm/what-is-git-how-will-it-help-you-4m5k</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqwTtpA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vq45tzju4l6m3aijeoq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqwTtpA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6vq45tzju4l6m3aijeoq.png" alt="git" width="876" height="430"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is Git?
&lt;/h2&gt;

&lt;p&gt;Git is a version control system that helps you keep track of changes in your project. It is &lt;strong&gt;open source and distributed&lt;/strong&gt;. Git can keep track of the smallest of changes, no matter how large your project is.&lt;/p&gt;

&lt;p&gt;But hey, what do you mean by keep track of changes? What does a version control system mean? Don't worry, let me form words in a beginner-friendly way -&lt;/p&gt;

&lt;p&gt;A version control system is basically a tool that helps you manage all sorts of changes to your software code. Since, Git is a version control system, it allows you to - &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Store all your code&lt;/li&gt;
&lt;li&gt;Manage &amp;amp; Track changes&lt;/li&gt;
&lt;li&gt;Makes it available for others to use&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Git is a distributed version control system&lt;/strong&gt; which makes the third point valid. This feature allows other people to access, save, and modify the source code as per their requirements. However, this doesn't affect your personal project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-will-you-benefit-from-git"&gt;
  &lt;/a&gt;
  How will you benefit from Git?
&lt;/h2&gt;

&lt;p&gt;Now you know that Git helps you manage your code. Moreover, it also helps you upload, outsource, or store your code. There are a few cloud-based hosting services that let you do that. &lt;/p&gt;

&lt;p&gt;GitHub! You must have heard about it. GitHub is the most popular hosting service that lets you store your personal projects, code, and open-source projects.&lt;/p&gt;

&lt;p&gt;If you are a developer, in most cases, GitHub ends up as your portfolio. A great GitHub profile allows clients &amp;amp; recruiters to look at the projects you've worked on, how often you contribute, and all those metrics.&lt;/p&gt;

&lt;p&gt;Git &amp;amp; GitHub combined help you -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Save your code for life.&lt;/li&gt;
&lt;li&gt;Collaborate with other developers and work together.&lt;/li&gt;
&lt;li&gt;Track changes of the project since its inception!&lt;/li&gt;
&lt;li&gt;Find people working on similar projects&lt;/li&gt;
&lt;li&gt;Build your Public Portfolio! C'mon!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Now that you know what Git is and how it can benefit you, I recommend you start using Git &amp;amp; GitHub. Whether you write a one-liner or end up making a whole project, upload every one of it on GitHub. &lt;/p&gt;

&lt;p&gt;Climb your way up the ladder. One by One. Happy Coding! Happy Git-ting! xD.&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>My Journey From Nothing to Game Designer</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Sat, 13 Nov 2021 12:48:03 +0000</pubDate>
      <link>https://dev.to/unitybuddy/my-journey-from-nothing-to-game-designer-487k</link>
      <guid>https://dev.to/unitybuddy/my-journey-from-nothing-to-game-designer-487k</guid>
      <description>&lt;p&gt;Hello, buddies!! Today is something special for me, it's my Birthday 🙈🙈  So, I was thinking about what should I write on this day and someone from myself told me "Why don't you write about your first &lt;code&gt;Hello, World&lt;/code&gt;?" &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3eXJUyrk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635961918664/NNWNFF53l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3eXJUyrk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635961918664/NNWNFF53l.png" alt="image.png" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#30-mpd-gaming"&gt;
  &lt;/a&gt;
  30 MPD Gaming 🥴
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NYEp6RJq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635959981605/y1J1PiIXE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYEp6RJq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635959981605/y1J1PiIXE.png" alt="image.png" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Almost every game designer is a Gamer(It's a must!). So it was the same with me but I played games only for 30 minutes, maximumly, 1 hour. I know, I know a normal person plays a video game for at least 2 hours. The reason with me wasn't that I'm not interested in Gaming, but I had a lot, I mean a really lot of studies and work to do. Besides, I can't play well-performing games on my old windows 8 laptop.&lt;/p&gt;

&lt;p&gt;But I never wanted to be a Game Designer, even though I love video games. I was just a simple buddy who have never heard of C#, Game Engines, Github, etc. One day, everything was changed. I can't remember why I was forced to watch Brackey's Cube Run tutorial, maybe I watched it for fun. But that's the day my real-life got started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-the-first-ever-game"&gt;
  &lt;/a&gt;
  Making the First ever Game
&lt;/h2&gt;

&lt;p&gt;On the same day that I watched Brackey's tutorial, I got a Unity ID and installed Unity and other stuff. Must say that it took me a day to set up Projects with my Old windows 8. But I still wonder that how I was able to install Unity on my machine. &lt;/p&gt;

&lt;p&gt;To be honest, my first piece of code wasn't &lt;code&gt;Hello, World&lt;/code&gt;; it was &lt;code&gt;public Rigidbody Rb;&lt;/code&gt; 😋&lt;/p&gt;

&lt;p&gt;I started to make an actual copy of the Cube Run game but I changes the concept a little bit, actually a lot in the middle of the project. &lt;br&gt;
This is a very, very simple game that can be made in a day. But trust me, it took me 2 months to finish this. I learned so many things and I still believe that it wasn't a waste of time, never! I found a community, I learned how to get used to resources around me, and most importantly, a bug that wasted your day may get fixed on the next day without any effort! 🐛&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-ontriggerenter-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;OnTriggerEnter&lt;/code&gt; 😆
&lt;/h3&gt;

&lt;p&gt;I often experience this so I never forgot this &lt;strong&gt;bug&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OnTriggerEnter&lt;/code&gt; function is used to do something when the Player passes through a trigger. So simply, it was not working. I put Debug.Logs,  used similar somewhat similar functions to see whether it is a problem with physics or something. And tried to get help from experts even. &lt;/p&gt;

&lt;p&gt;They told me different things like "you might as well check the collision matrix", "You should first put a debug.log outside of the if so you know if the problem is with the od part or the ontriggrenter part" and so many things!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sh-THzfo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635786271590/REdy6NlWb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sh-THzfo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635786271590/REdy6NlWb.png" alt="image.png" width="880" height="87"&gt;&lt;/a&gt;&lt;br&gt;
Bruh 😑&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;None of them suggested turning on Mesh Renderer :(&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mMbQ1N_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635785716120/HCtXI2dsZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mMbQ1N_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635785716120/HCtXI2dsZ.png" alt="image.png" width="880" height="553"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yeah, it can't collide with the Trigger if it is above the Player 😏&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-niche"&gt;
  &lt;/a&gt;
  Finding a Niche
&lt;/h2&gt;

&lt;p&gt;As a typical absolute beginner, I wanted to make a game that will become a trend and have Millions of downloads! So, I thought that a game like a COD will help me. &lt;/p&gt;

&lt;p&gt;I tried to make a simple FPS game from a Unity Template. After 2 or 3 days of playing with it, I realized that FPS isn't for me. &lt;/p&gt;

&lt;p&gt;By those days, I attended Unity's Create with Code live sessions and they taught me to make a good RPG game. Wow, that's so easy! I will make this for sure.&lt;/p&gt;

&lt;p&gt;So I played some time with RPG games as well. Though they are easy to understand than FPS games, I found that was Boring for me and I don't have a passion for RPG.&lt;/p&gt;

&lt;p&gt;Meanwhile, my first game has been played by near about 200 Unity devs and I got good feedback as it was my first ever game. And One day, A Hyper-casual game studio asked me to join their team as a 1st Tier Developer. And boom, they said my game has a good Hyper-casual look. Why didn't I think about Hyper-Casual!!&lt;/p&gt;

&lt;p&gt;It was only about 2 and a half months I have started with Unity but I didn't want to miss this chance 🤓&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#firstever-colloboration"&gt;
  &lt;/a&gt;
  First-ever Colloboration
&lt;/h2&gt;

&lt;p&gt;They were using Github for collab as usual but I was troubling what an erratic thing is this! Of course, they got confused when I said I don't know Github but I just told them that I have only used Unity's itself Collab feature and it went OK.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDaf4pJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635783563093/1WzERPiKa.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDaf4pJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635783563093/1WzERPiKa.gif" alt="hammaya-relaxed.gif" width="220" height="249"&gt;&lt;/a&gt;&lt;br&gt;
Phew!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fortunately, the team lead was kind enough to teach me about this and how to set it up. Although I didn't understand how it exactly works, I got it after a few days!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-game"&gt;
  &lt;/a&gt;
  The Game
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sEfXbH1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635960453902/OxSMQH__c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sEfXbH1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635960453902/OxSMQH__c.png" width="249" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was half-made a one. We had to do a lot of things, Shop, Leaderboard, Power-ups, Bug fixes, and a lot! But I didn't find it stressful just because our team had at least 2 people in almost every role! Head Programmers, 1st Tier Devs, 2nd Tier Devs, 3D modelers, Sound artists, Testers, etc. Every task is divided and it was my baby steps to Project Management and Marketing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jXUtEpLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635784731119/3u1yuJw0q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jXUtEpLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635784731119/3u1yuJw0q.png" alt="image.png" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the time that we finished and published the game, I left them because it didn't seem official anymore. A few members were joined and they are thinking everyone is the same as them or something and the real-talented people left the team. I didn't think that I should be there anymore.&lt;/p&gt;

&lt;p&gt;Fortunately, I got another offer from a Great team to work with them as a Content Creator! I hope this is gonna be better than before 🤞&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goodbye-unity-will-see-you-again"&gt;
  &lt;/a&gt;
  Good-Bye, Unity, will see you again! 👋
&lt;/h2&gt;

&lt;p&gt;And yeah, I'm gonna take a little break from the game design, just because I got a new role to work with I think this is gonna be the same with writing future but I try my best to manage them all. Just don't think I'm giving up haha ✌&lt;/p&gt;

&lt;p&gt;And that's all for now. Thanks a lot for reading this self-centered article. Goodbye and happy coding! See you soon 😉&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>programming</category>
      <category>career</category>
      <category>showdev</category>
    </item>
    <item>
      <title>An Example Shopping App Built with ReactJS, MongoDB, ExpressJS</title>
      <author>Linh Truong Cong Hong</author>
      <pubDate>Sat, 13 Nov 2021 12:40:08 +0000</pubDate>
      <link>https://dev.to/linhtch90/an-example-shopping-app-built-with-reactjs-mongodb-expressjs-1h55</link>
      <guid>https://dev.to/linhtch90/an-example-shopping-app-built-with-reactjs-mongodb-expressjs-1h55</guid>
      <description>&lt;p&gt;I want to share with the community the source code of a fullstack web application that I have just developed using MERN (MongoDB, ExpressJS, ReactJS, NodeJS) stack demonstrating basic features of a bookstore.&lt;/p&gt;

&lt;p&gt;I hope this would be a good resource for anyone who enjoys learning Javascript in general and MERN stack in particular.&lt;/p&gt;

&lt;p&gt;The live demo is accessible at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bn-bookstore.herokuapp.com/#/"&gt;https://bn-bookstore.herokuapp.com/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Frontend and Backend source code is available at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/linhtch90/bn_bookstore_public_source"&gt;https://github.com/linhtch90/bn_bookstore_public_source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy coding and if this is useful for you, please give me a Github star for encouragement!&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Flutter tips - season 2 - part 2/10</title>
      <author>Tomic Riedel 💙</author>
      <pubDate>Sat, 13 Nov 2021 12:39:02 +0000</pubDate>
      <link>https://dev.to/tomicriedel/10-flutter-tips-season-2-part-210-2572</link>
      <guid>https://dev.to/tomicriedel/10-flutter-tips-season-2-part-210-2572</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZdEf0VF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bloggu.io/ipfs/bafkreicpusdeyfvebxv5cequx2s5jkngqn4qzsj2njrycpgdfwg5pqi3n4" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZdEf0VF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.bloggu.io/ipfs/bafkreicpusdeyfvebxv5cequx2s5jkngqn4qzsj2njrycpgdfwg5pqi3n4" alt="10 Flutter tips cover image" width="880" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we are already at the 2nd part of the 2nd season of this wonderful format.&lt;/p&gt;

&lt;p&gt;Today we are dealing with packages again. We mainly deal with packages over databases, so... Let's go and &lt;strong&gt;Happy reading!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hive"&gt;
  &lt;/a&gt;
  Hive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://pub.dev/packages/hive"&gt;Hive&lt;/a&gt; is one of the best database packages out there. It offers so many possibilities that help you a lot as a developer. One of the most important points to know is that Hive is a NoSQL database. Another very important point is that you have very strong encryption built in. Not many database packages have this and it makes Hive even more special. Oh, and forgot to mention: It has great documentation. Bottom line: for your next app where you need a NoSQL database, Hive should definitely be included! You can learn Hive with the help of a tutorial from Reso Coder or Johannes Milke:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reso Coder - Hive (Flutter Tutorial) - Lightweight &amp;amp; Fast NoSQL Database in Pure Dart:&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=R1GSrrItqUs"&gt;https://www.youtube.com/watch?v=R1GSrrItqUs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Johannes Milke - Flutter Tutorial - Hive NoSQL Database In 16 Minutes &amp;amp; Hive CRUD | Android, iOS &amp;amp; Web:&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=w8cZKm9s228"&gt;https://www.youtube.com/watch?v=w8cZKm9s228&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sqflite"&gt;
  &lt;/a&gt;
  sqflite
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://pub.dev/packages/sqflite"&gt;sqflite&lt;/a&gt; is a database system for Android, iOS and macOS that is built on the principle of SQLite. So simply put, this is the right package if you want to store data in SQL tables. &lt;/p&gt;

&lt;p&gt;You can learn how to use this package with a tutorial by Johannes Milke or with a tutorial by Flutter in the Package of the Week series:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Johannes Milke - Flutter Tutorial - SQL Database Storage Using Sqlite &amp;amp; Sqflite CRUD | Android &amp;amp; iOS:&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=UpKrhZ0Hppk"&gt;https://www.youtube.com/watch?v=UpKrhZ0Hppk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flutter - sqflite (Flutter Package of the Week):&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=HefHf5B1YM0"&gt;https://www.youtube.com/watch?v=HefHf5B1YM0&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moor"&gt;
  &lt;/a&gt;
  Moor
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://pub.dev/packages/moor"&gt;Moor&lt;/a&gt; is a database system based on SQLite and written natively in Dart, making it work on any platform. It has many advantages over the better known sqflite package. However, since it is relatively unknown, it is harder to find solutions to problems. You can learn Moor using Reso Coder's tutorial series:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reso Coder - Moor - Fluent SQLite for Flutter:&lt;/strong&gt; &lt;a href="https://www.youtube.com/playlist?list=PLB6lc7nQ1n4glsY1J0R6jWirqtURKClz7"&gt;https://www.youtube.com/playlist?list=PLB6lc7nQ1n4glsY1J0R6jWirqtURKClz7&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutter-slidable"&gt;
  &lt;/a&gt;
  Flutter Slidable
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://pub.dev/packages/flutter_slidable"&gt;Flutter Slidable&lt;/a&gt; is a package that allows you to create slidable list items. This is also possible with Flutter without a package, but this package offers a nice animation selection. Let's have a look at the animations:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Behind Motion&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T26rA7MW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/behind_motion.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T26rA7MW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/behind_motion.gif" alt="https://raw.githubusercontent.com/letsar/flutter_slidable/assets/behind_motion.gif" width="664" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drawer Motion&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vJTU0xa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/drawer_motion.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJTU0xa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/drawer_motion.gif" alt="https://raw.githubusercontent.com/letsar/flutter_slidable/assets/drawer_motion.gif" width="664" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scoll Motion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_Ylgiga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/scroll_motion.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_Ylgiga--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/scroll_motion.gif" alt="https://raw.githubusercontent.com/letsar/flutter_slidable/assets/scroll_motion.gif" width="664" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stretch Motion&lt;/strong&gt; !&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LJmZSbn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/stretch_motion.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJmZSbn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/letsar/flutter_slidable/assets/stretch_motion.gif" alt="https://raw.githubusercontent.com/letsar/flutter_slidable/assets/stretch_motion.gif" width="664" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's be honest: this looks really good already. The nice thing is that you don't even have to learn much to implement this package into your app. You can easily learn how to include these widgets in the README.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#just-audio"&gt;
  &lt;/a&gt;
  Just Audio
&lt;/h3&gt;

&lt;p&gt;You've always wanted to build a music app. Then &lt;a href="http://pub.dev/packages/just_audio"&gt;just_audio&lt;/a&gt; is just the thing for you. I think this picture says it all about what this package can do:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DS65LQzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/19899190/125459608-e89cd6d4-9f09-426c-abcc-ed7513d9acfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DS65LQzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/19899190/125459608-e89cd6d4-9f09-426c-abcc-ed7513d9acfc.png" alt="https://user-images.githubusercontent.com/19899190/125459608-e89cd6d4-9f09-426c-abcc-ed7513d9acfc.png" width="880" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the following code example we only look at how you can load an audio file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;player&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AudioPlayer&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setUrl&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'https://foo.com/bar.mp3'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setFilePath&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/path/to/file.mp3'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;player&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAsset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'path/to/asset.mp3'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is a Medium article that will surely help you implement Just Audio properly:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://suragch.medium.com/steaming-audio-in-flutter-with-just-audio-7435fcf672bf"&gt;https://suragch.medium.com/steaming-audio-in-flutter-with-just-audio-7435fcf672bf&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#agora-rtc-engine"&gt;
  &lt;/a&gt;
  Agora RTC Engine
&lt;/h3&gt;

&lt;p&gt;Maybe some of you have heard of Agora before, but I will still explain what you can use Agora for in your app. Maybe you want to make a messenger app with video functionality or a pure video call app. You will quickly run into a problem. It's very hard to make video calls yourself, without other help. That's where Agora comes in. You can use Agora to easily create video calls without knowing much about the backend. The whole thing is made easy by the &lt;a href="https://pub.dev/packages/agora_rtc_engine"&gt;agora_rtc_enginge&lt;/a&gt; package.&lt;/p&gt;

&lt;p&gt;Now you surely want to know how to actually implement this into your app. Tadas Petra has created a very good video about this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tadas Petra - Video Call with Flutter and Agora:&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=l5Kt03x_lD0"&gt;https://www.youtube.com/watch?v=l5Kt03x_lD0&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-typeahead"&gt;
  &lt;/a&gt;
  Flutter Typeahead
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://pub.dev/packages/flutter_typeahead"&gt;package&lt;/a&gt; gives you a simple autocomplete widget for Flutter, which again is not hard to implement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;TypeAheadField&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;textFieldConfiguration:&lt;/span&gt; &lt;span class="n"&gt;TextFieldConfiguration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;autofocus:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;DefaultTextStyle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;copyWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;fontStyle:&lt;/span&gt; &lt;span class="n"&gt;FontStyle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;italic&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nl"&gt;decoration:&lt;/span&gt; &lt;span class="n"&gt;InputDecoration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;border:&lt;/span&gt; &lt;span class="n"&gt;OutlineInputBorder&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="nl"&gt;suggestionsCallback:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;returnawait&lt;/span&gt; &lt;span class="n"&gt;BackendService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSuggestions&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
  &lt;span class="nl"&gt;itemBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;suggestion&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;ListTile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;leading:&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shopping_cart&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;suggestion&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
      &lt;span class="nl"&gt;subtitle:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="si"&gt;${suggestion['price']}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
  &lt;span class="nl"&gt;onSuggestionSelected:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;suggestion&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MaterialPageRoute&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ProductPage&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;product:&lt;/span&gt; &lt;span class="n"&gt;suggestion&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;));&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is an example of what it might look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rSBe_AOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AbdulRahmanAlHamali/flutter_typeahead/master/flutter_typeahead.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rSBe_AOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AbdulRahmanAlHamali/flutter_typeahead/master/flutter_typeahead.gif" alt="https://raw.githubusercontent.com/AbdulRahmanAlHamali/flutter_typeahead/master/flutter_typeahead.gif" width="400" height="711"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sliding-up-panel"&gt;
  &lt;/a&gt;
  Sliding up panel
&lt;/h3&gt;

&lt;p&gt;The package &lt;a href="https://pub.dev/packages/sliding_up_panel"&gt;sliding_up_panel&lt;/a&gt; makes it easy to implement a SlidingUpPanel. Here is a good example of what this looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6VS4Fqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/akshathjain/sliding_up_panel/master/screenshots/example.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6VS4Fqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/akshathjain/sliding_up_panel/master/screenshots/example.gif" alt="https://raw.githubusercontent.com/akshathjain/sliding_up_panel/master/screenshots/example.gif" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example of how you can implement the panel. You will surely notice that it is very easy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;Scaffold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SlidingUpPanelExample"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;SlidingUpPanel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;panel:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is the sliding Widget"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is the Widget behind the sliding panel"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pull-to-refresh"&gt;
  &lt;/a&gt;
  Pull to Refresh
&lt;/h3&gt;

&lt;p&gt;in your app data that can change at any time? Or you are building a social media app and simply want to refresh the user's feed? Then the package &lt;a href="https://pub.dev/packages/pull_to_refresh"&gt;pull_to_refresh&lt;/a&gt; should help you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gMrG4-hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/peng8350/flutter_pulltorefresh/raw/master/arts/example1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gMrG4-hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/peng8350/flutter_pulltorefresh/raw/master/arts/example1.gif" alt="https://github.com/peng8350/flutter_pulltorefresh/raw/master/arts/example1.gif" width="572" height="999"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see there are many uses for this package. &lt;/p&gt;

&lt;p&gt;The README is very detailed, so you will easily understand how to implement this package.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#convex-bottom-bar"&gt;
  &lt;/a&gt;
  Convex Bottom Bar
&lt;/h3&gt;

&lt;p&gt;Once again it's time to introduce a bottom bar. This time it's &lt;a href="http://pub.dev/packages/convex_bottom_bar"&gt;convex_bottom_bar&lt;/a&gt;. With this package you can create impressive bottom bars that will surely catch users' eyes!&lt;/p&gt;

&lt;p&gt;Just take a look at how many ways there are to implement this bottom bar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R7GXlO6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hacktons/convex_bottom_bar/raw/master/doc/preview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R7GXlO6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/hacktons/convex_bottom_bar/raw/master/doc/preview.png" alt="https://github.com/hacktons/convex_bottom_bar/raw/master/doc/preview.png" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Now we have come to the end of another episode of 10 Flutter tips. &lt;/p&gt;

&lt;p&gt;I really hope you enjoyed it! If so, I would be very happy if you could give this post some &lt;strong&gt;claps&lt;/strong&gt; and &lt;strong&gt;follow&lt;/strong&gt; me if you don't want to miss any more posts!&lt;/p&gt;

&lt;p&gt;Want to check out some more quality content from me? Then I recommend you check out my &lt;strong&gt;&lt;a href="http://twitter.com/tomicriedel"&gt;Twitter&lt;/a&gt;&lt;/strong&gt; account and follow me there too! You'll get daily motivation there and find great threads about programming and productivity!&lt;/p&gt;

&lt;p&gt;Bye and &lt;strong&gt;have a great day!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
    </item>
    <item>
      <title>React Loading State Pattern using Toast &amp; SWR</title>
      <author>Theodorus Clarence</author>
      <pubDate>Sat, 13 Nov 2021 12:28:49 +0000</pubDate>
      <link>https://dev.to/theodorusclarence/react-loading-state-pattern-using-toast-swr-hkn</link>
      <guid>https://dev.to/theodorusclarence/react-loading-state-pattern-using-toast-swr-hkn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Managing the react loading state can be a bit annoying, we need to set it to isLoading before fetching, then set it back to false after it is done. Then we also need to set it up to the button so we can show the loading state, or give some text as an indicator.&lt;/p&gt;

&lt;p&gt;Here is what it looks like with the common loading pattern:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pokemon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setPokemon&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Pokemon&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setIsLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;axios&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PokemonList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;('https://pokeapi.co/api/v2/pokemon?limit=20')
    .then((res) =&amp;gt; &lt;span class="si"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setPokemon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="si"&gt;}&lt;/span&gt;)
    .finally(() =&amp;gt; setIsLoading(false));
};

return &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it is annoying to do, and we didn't even cover error state yet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-we-manage-in-a-loading-process"&gt;
  &lt;/a&gt;
  What should we manage in a loading process?
&lt;/h2&gt;

&lt;p&gt;When we are fetching data, we need to do some things so the waiting experience can be more bearable. Here are some things that we can do:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loading-indicator"&gt;
  &lt;/a&gt;
  Loading indicator
&lt;/h3&gt;

&lt;p&gt;Users need to know when their application is in a loading state. This is important so they are not blankly waiting, and get the mindset that they should wait for a bit.&lt;/p&gt;

&lt;p&gt;Loading indicator can be a spinner, normal text, some animations, or toast.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#success-indicator"&gt;
  &lt;/a&gt;
  Success indicator
&lt;/h3&gt;

&lt;p&gt;We need to tell the user if the loading has succeeded, so they can continue with their work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#error-indicator"&gt;
  &lt;/a&gt;
  Error indicator
&lt;/h3&gt;

&lt;p&gt;When the data fetching goes wrong, we have to let the user know about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blocking-action"&gt;
  &lt;/a&gt;
  Blocking action
&lt;/h3&gt;

&lt;p&gt;A common example is when we are submitting a form, we don't want the user to submit twice. We can do that by disabling the button when there is a loading state going on.&lt;/p&gt;

&lt;p&gt;Another example is blocking the modal close button when loading, so the user doesn't accidentally close it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-easy-way"&gt;
  &lt;/a&gt;
  The easy way
&lt;/h2&gt;

&lt;p&gt;I found that this pattern is the most hassle-free, and we can use custom hooks to grab the loading state.&lt;/p&gt;

&lt;p&gt;Here is what we are going to build:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PG05lNIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xirmhf1edqxcqy4fio1u.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PG05lNIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xirmhf1edqxcqy4fio1u.gif" alt="normal fetch using axios" width="800" height="515"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video Description:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;getData button is clicked, then there is a loading toast showing.&lt;/li&gt;
&lt;li&gt;When it is loading, the button is disabled and showing a loading spinner&lt;/li&gt;
&lt;li&gt;After 2 seconds, the loading toast turns into an error toast&lt;/li&gt;
&lt;li&gt;getData button is clicked again, then there is a loading toast showing&lt;/li&gt;
&lt;li&gt;After 2 seconds, the loading toast turns into a success toast, then all the data loads correctly&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ps: the wait cursor is kind of weird in the recording.&lt;/p&gt;

&lt;p&gt;With this pattern, we get all 4 things covered, &lt;strong&gt;easily&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We get the loading state using toast&lt;/li&gt;
&lt;li&gt;We can show error indicator and show the error message from the API&lt;/li&gt;
&lt;li&gt;We can show success indicator&lt;/li&gt;
&lt;li&gt;Last, all buttons are disabled.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We are using &lt;strong&gt;React Hot Toast&lt;/strong&gt; for the loading, success, and error indicator. All of it are managed only using 1 wrapper function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;axios&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PokemonList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;('https://pokeapi.co/api/v2/pokemon?limit=20')
    .then((res) =&amp;gt; &lt;span class="si"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setPokemon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="si"&gt;}&lt;/span&gt;),
  &lt;span class="si"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Loading...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Data fetched successfully&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Something is wrong, please try again&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="si"&gt;}&lt;/span&gt;
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h2&gt;

&lt;p&gt;First, we need to install the react-hot-toast&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;hot&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm using Next.js for the demo, but the config for CRA is basically the same. Add this to the &lt;code&gt;_app.tsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AppProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next/app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/styles/globals.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;DismissableToast&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/components/DismissableToast&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pageProps&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;AppProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;DismissableToast&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;pageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I added a dismiss button because it doesn't have it by default, you can grab the &lt;code&gt;DismissableToast&lt;/code&gt; code from &lt;a href="https://theodorusclarence.com/library/toast#dismissabletoast"&gt;my library&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;Let's say we want to fetch data on mount from an external API using Axios.&lt;/p&gt;

&lt;p&gt;We just need to wrap the axios call with the toast function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;PokemonList&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;('https://pokeapi.co/api/v2/pokemon?limit=20')
      .then((res) =&amp;gt; &lt;span class="si"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setPokemon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="si"&gt;}&lt;/span&gt;),
    &lt;span class="si"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Loading...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Data fetched successfully&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Something is wrong, please try again&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="si"&gt;}&lt;/span&gt;
  );
}, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! The toast will show status when loading, and when it is a success or an error.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#further-reusablity"&gt;
  &lt;/a&gt;
  Further Reusablity
&lt;/h3&gt;

&lt;p&gt;You can compose it even more by declaring the &lt;code&gt;defaultToastMessage&lt;/code&gt;, then overriding it if you need to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultToastMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Loading...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Data fetched successfully&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// you can type this with axios error&lt;/span&gt;
  &lt;span class="c1"&gt;// eslint-disable-next-line @typescript-eslint/no-explicit-any&lt;/span&gt;
  &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Something is wrong, please try again&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaultToastMessage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Override loading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#accessing-loading-state"&gt;
  &lt;/a&gt;
  Accessing loading state
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Now, what if we want to get that loading state to disable a button?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can do that with toast API that I wrapped in a custom hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useToasterStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-hot-toast&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * Hook to get information whether something is loading
 * @returns true if there is a loading toast
 * @example const isLoading = useLoadingToast();
 */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useLoadingToast&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;toasts&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useToasterStore&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toasts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we can use it just like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useLoadingToast&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the &lt;code&gt;isLoading&lt;/code&gt; state, the rest is all your creativity, you can show some skeleton, change the loading text, give loading spinners, anything you like.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gotcha-2-axios-calls"&gt;
  &lt;/a&gt;
  Gotcha: 2 Axios Calls
&lt;/h3&gt;

&lt;p&gt;If you got 2 axios calls, you can chain the next axios call, and add another &lt;code&gt;then&lt;/code&gt; to get the value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;axios&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/user/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;tempToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="c1"&gt;// chaining axios in 1 promise&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/user/get-user-info&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user_role&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LOGIN&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tempToken&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

      &lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaultToastMessage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#swr-integration"&gt;
  &lt;/a&gt;
  SWR Integration
&lt;/h2&gt;

&lt;p&gt;Using SWR to fetch data is even more awesome because we only need to show the loading state on the first fetch. Here is the demo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jNCKUE7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00sy6u2owzjduns0juj4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNCKUE7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/00sy6u2owzjduns0juj4.gif" alt="toast-using-swr-fetch" width="800" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video Description:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First time visited, a loading toast is shown then turns into success toast.&lt;/li&gt;
&lt;li&gt;When visited for the second time, there is no loading toast and the data is prefilled with cache.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is the syntax of SWR:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useSWR&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PokemonList&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pokeapi.co/api/v2/pokemon?limit=20&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Hmm, this is not a promise, how do we use the toast then?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can use another custom hook ✨&lt;/p&gt;

&lt;p&gt;I made this hook so we can wrap the &lt;code&gt;useSWR&lt;/code&gt; just like the &lt;code&gt;toast.promise&lt;/code&gt; function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usewithtoast-for-swr"&gt;
  &lt;/a&gt;
  useWithToast for SWR
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;toast&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-hot-toast&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SWRResponse&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swr&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defaultToastMessage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/lib/helper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useLoadingToast&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/hooks/useLoadingToast&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;OptionType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;runCondition&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;success&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;error&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useWithToast&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;swr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SWRResponse&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;runCondition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;customMessages&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;OptionType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;swr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toastStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;done&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;idle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toastMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaultToastMessage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;customMessages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;runCondition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// if toastStatus is done,&lt;/span&gt;
    &lt;span class="c1"&gt;// then it is not the first render or the data is already cached&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toastStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;done&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;toastStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;toastStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;done&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;toastStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;toastStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;done&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;toastStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dismiss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toastStatus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;runCondition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;toastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;toastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;toastMessage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;swr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;useLoadingToast&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In addition, I added the isLoading to the return so we don't need to call the &lt;code&gt;useLoadingToast&lt;/code&gt; hooks anymore&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pokemonData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWithToast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;useSWR&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PokemonList&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pokeapi.co/api/v2/pokemon?limit=20&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome, it's looking good and clean.&lt;/p&gt;

&lt;p&gt;You can still override the toast messages just like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pokemonData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWithToast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;useSWR&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PokemonList&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://pokeapi.co/api/v2/pokemon?limit=20&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Override Loading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope this can add to your pattern collection.&lt;/p&gt;

&lt;p&gt;You can look at the demo source code on &lt;a href="https://github.com/theodorusclarence/react-async-pattern"&gt;github&lt;/a&gt;, but keep in mind there is additional promise to delay the loading time.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Originally posted on &lt;a href="https://theodorusclarence.com/?ref=devto"&gt;my personal site&lt;/a&gt;, find more &lt;a href="https://theodorusclarence.com/blog?ref=devto"&gt;blog posts&lt;/a&gt; and &lt;a href="https://theodorusclarence.com/library?ref=devto"&gt;code snippets library&lt;/a&gt; I put up for easy access on my site 🚀&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>nextjs</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Do you have "passion" for coding?</title>
      <author>Lamy Fafa</author>
      <pubDate>Sat, 13 Nov 2021 12:12:38 +0000</pubDate>
      <link>https://dev.to/lamy_fafa_f3cc85ee84f4cd6/do-you-have-passion-for-coding-6cj</link>
      <guid>https://dev.to/lamy_fafa_f3cc85ee84f4cd6/do-you-have-passion-for-coding-6cj</guid>
      <description>&lt;p&gt;I just had to make a rant about this, because I am so utterly tired of employers talking about passion.&lt;/p&gt;

&lt;p&gt;It's like it's a special thing in this industry, that developers are supposed to have all the time.&lt;/p&gt;

&lt;p&gt;It's the subtle expectatation that you will work overtime whenever they want, that you are so interested in coding that you just wanna work 12 hours a day. And when you get off work&lt;a href="https://www.slideshare.net/FunwithGirlsatNight/dubai-call-girls-number-0529557133-jumairah-dubai-call-girls"&gt;,&lt;/a&gt; you wanna code some more.&lt;/p&gt;

&lt;p&gt;It's also the worst excuse in the world for an employer to implant an sick mentality in the minds of their employees&lt;a href="https://www.cybo.com/US-biz/dubai-call-girls-service-call-girls"&gt;,&lt;/a&gt; making them feel coeerced to not going home when their shift is technically over.&lt;/p&gt;

&lt;p&gt;If I hear one more potential employer asking me if I'm passionate at a job interview I might throw up.&lt;/p&gt;

&lt;p&gt;Yes I'm passionate, passionate enough to come in when I need to work and to leave when my shift is over. And hey once in a while if you ask nicely and it's really needed I might do some overtime. That's the extent of my passion.&lt;/p&gt;

&lt;p&gt;I once had an employer (for a job I turned down) tell me that he was looking for someone with passion&lt;a href="https://www.cybo.com/AE-biz/dubai-call-girls"&gt;,&lt;/a&gt; he elaborated on what that meant. It meant someone who didn't just leave when their shift is over (basically guilt tripping me in advance if I didn't wanna work more than my contract says).&lt;/p&gt;

&lt;p&gt;So are you a passionate developer? Or are you tired of being expected to be "passionate"?&lt;/p&gt;

&lt;p&gt;I'm tired of people talking about passion in this industry.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Update WordPress URL easily using MySQL</title>
      <author>Amer Sikira</author>
      <pubDate>Sat, 13 Nov 2021 12:11:24 +0000</pubDate>
      <link>https://dev.to/amersikira/update-wordpress-url-easily-using-mysql-1c5f</link>
      <guid>https://dev.to/amersikira/update-wordpress-url-easily-using-mysql-1c5f</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was originally published at &lt;a href="https://webinuse.com/update-wordpress-url-after-migration-using-mysql/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After we migrate to a new URL we need to update &lt;a href="https://wordpress.org/"&gt;WordPress&lt;/a&gt; URL. We can use plugins for migration, or we can use Export/Import option from WordPress. Yet, the most straightforward way is to just update the URL using MySQL. Especially if the site stays on the same host.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to learn more about WordPress you can check this awesome course &lt;a href="https://gumroad.com/a/882791539/kSrqD"&gt;Building websites with WordPress&lt;/a&gt; by &lt;a href="https://twitter.com/natmiletic"&gt;Nat Miletic&lt;/a&gt;. This course is excellent for those who want to start with WordPress. But it is also for those who have experience, and this course can be used as a reminder of some WordPress functionalities.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;Affiliated link&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most of the websites that are using WordPress are on shared hosting, and a large number of hosting companies are offering PHPMyAdmin for administering databases. So, all of our examples will be using PHPMyAdmin, plus shell access.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-create-backup-of-your-database"&gt;
  &lt;/a&gt;
  1. Create backup of your database
&lt;/h3&gt;

&lt;p&gt;The first thing when changing a database is always to make a backup. If we make any mistake during the database update, we can easily restore it to the previous state.&lt;/p&gt;

&lt;p&gt;Also, we should never do the update on the live site. Especially if we work with a larger database, or with slower connections. It can take a few minutes, even more, to restore the database to the desired state.&lt;/p&gt;

&lt;p&gt;In order to back up the database, we should open PHPMyAdmin, select the database that we want to backup, and select the “Export” option. After we select the “Export” option, we can leave everything on default and just click on the “Go”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ocqI5qF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14e51dchsk0ax88pahcl.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ocqI5qF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14e51dchsk0ax88pahcl.jpeg" alt="Image of PhpMyAdmin Export option interface" width="800" height="348"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we are changing the hosting/server, we must do the same thing. We have to export the database in order to import it to another host/server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-import-database"&gt;
  &lt;/a&gt;
  1.1 Import database
&lt;/h3&gt;

&lt;p&gt;If we are changing the host once we exported the database, we need to import it. We need to create a new database on a new host/server and open PHPMyAdmin. After we’ve done it, we select the database we’ve created, and then we select the “Import” option. Then, we select the file from our computer (the one we exported) and click the “Go”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--agI7SSHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9j4wj8egvbadwvj8her.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--agI7SSHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9j4wj8egvbadwvj8her.jpeg" alt="Image of PhpMyAdmin Import option interface" width="800" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-update-wordpress-url"&gt;
  &lt;/a&gt;
  2. Update WordPress URL
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EEQkTDz_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ouv5fvrs6dfol7487nm8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EEQkTDz_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ouv5fvrs6dfol7487nm8.png" alt="Image of pasted code for changing WordPress URL in PhpMyAdmin SQL's option" width="880" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we are ready for the new URL we select the “SQL” option in the menu and paste the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;wp_options&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;option_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;option_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;option_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'home'&lt;/span&gt; &lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="n"&gt;option_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'siteurl'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;wp_posts&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;guid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;guid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;wp_posts&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;post_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;post_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;wp_postmeta&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;meta_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;meta_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Four queries above update WordPress URL in four different tables, respectively. Usually, that is all we need to change. If we use some plugins that are storing our URL in their tables, we should change those.&lt;/p&gt;

&lt;p&gt;We can use the command line to update WordPress URL. Please check the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
username@[~/Desktop]: mysql &lt;span class="nt"&gt;-u&lt;/span&gt; root &lt;span class="nt"&gt;-p&lt;/span&gt; databasename
Enter password:

Type &lt;span class="s1"&gt;'help;'&lt;/span&gt; or &lt;span class="s1"&gt;'h'&lt;/span&gt; &lt;span class="k"&gt;for &lt;/span&gt;help. Type &lt;span class="s1"&gt;'c'&lt;/span&gt; to clear the current input statement.

mysql&amp;gt; UPDATE wp_options SET option_value &lt;span class="o"&gt;=&lt;/span&gt; replace&lt;span class="o"&gt;(&lt;/span&gt;option_value, &lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;, &lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; WHERE option_name &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'home'&lt;/span&gt; OR option_name &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'siteurl'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Query OK, 2 rows affected &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
Rows matched: 2 Changed: 0 Warnings: 0

mysql&amp;gt; UPDATE wp_posts SET guid &lt;span class="o"&gt;=&lt;/span&gt; replace&lt;span class="o"&gt;(&lt;/span&gt;guid, &lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;,&lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Query OK, 1236 rows affected &lt;span class="o"&gt;(&lt;/span&gt;0.01 sec&lt;span class="o"&gt;)&lt;/span&gt;
Rows matched: 1236 Changed: 0 Warnings: 0

mysql&amp;gt; UPDATE wp_posts SET post_content &lt;span class="o"&gt;=&lt;/span&gt; replace&lt;span class="o"&gt;(&lt;/span&gt;post_content, &lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;, &lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Query OK, 1236 rows affected &lt;span class="o"&gt;(&lt;/span&gt;0.05 sec&lt;span class="o"&gt;)&lt;/span&gt;
Rows matched: 1236 Changed: 0 Warnings: 0

mysql&amp;gt; UPDATE wp_postmeta SET meta_value &lt;span class="o"&gt;=&lt;/span&gt; replace&lt;span class="o"&gt;(&lt;/span&gt;meta_value,&lt;span class="s1"&gt;'https://www.oldurl'&lt;/span&gt;,&lt;span class="s1"&gt;'https://www.newurl'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;g
Query OK, 999 rows affected &lt;span class="o"&gt;(&lt;/span&gt;0.01 sec&lt;span class="o"&gt;)&lt;/span&gt;
Rows matched: 999 Changed: 0 Warnings: 0

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-finish"&gt;
  &lt;/a&gt;
  3. Finish
&lt;/h3&gt;

&lt;p&gt;If we used the same hosting provider and the same database, our site should now work on the new URL.&lt;/p&gt;

&lt;p&gt;If we migrated to the new hosting/server we may have to change our wp-config.php file.&lt;/p&gt;

&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="https://twitter.com/AmerSikira"&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/arrow-functions-in-javascript/"&gt;Arrow functions in JavaScript. How to easily implement them?&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>sql</category>
      <category>database</category>
      <category>migration</category>
    </item>
  </channel>
</rss>
