<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Could Aleph.js be the next big React Framework?</title>
      <author>Saji Wang</author>
      <pubDate>Mon, 31 May 2021 14:03:13 +0000</pubDate>
      <link>https://dev.to/codesphere/could-aleph-js-be-the-next-big-react-framework-2cgb</link>
      <guid>https://dev.to/codesphere/could-aleph-js-be-the-next-big-react-framework-2cgb</guid>
      <description>&lt;p&gt;A couple of months ago we covered Deno, a new Javascript runtime that is attempting to dethrone &lt;code&gt;Node.js&lt;/code&gt; as the de facto runtime for executing Javascript. Ironically, Deno is being developed by Ryan Dahl, the same developer who made &lt;code&gt;Node.js&lt;/code&gt; back in 2009. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here’s that article if you're looking to learn more about our take on Deno:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://codesphere.com/articles/say-yes-to-deno-23fa587e3877"&gt;https://codesphere.com/articles/say-yes-to-deno-23fa587e3877&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While Deno has a lot to offer, such as built-in Typescript support and a simpler dependency system, the biggest hurdle to its adoption is the plethora of dev tools and frameworks that are dependent on &lt;code&gt;Node.js&lt;/code&gt;. As Deno gains traction, however, developers have begun creating new frameworks that rely on Deno instead of &lt;code&gt;Node.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is where &lt;code&gt;Aleph.js&lt;/code&gt; comes in. The two most popular React frameworks for creating production-ready apps are undeniably &lt;code&gt;Next.js&lt;/code&gt; and Gatsby; Both of which are dependent on &lt;code&gt;Node.js&lt;/code&gt; &lt;code&gt;Aleph.js&lt;/code&gt; attempts to create an equivalent React framework that is fast for users and convenient for developers. In their own words:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Aleph.js&lt;/code&gt; gives you the best developer experience for building modern web applications:&lt;br&gt;
TypeScript in Deno, ES module imports, file-system routing, SSR &amp;amp; SSG, HMR with Fast Refresh, and more. No config needed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’d like to hear about &lt;code&gt;Aleph.js&lt;/code&gt; straight from the horse's mouth, you can check out their documentation here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://alephjs.org/"&gt;https://alephjs.org/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-alephjs-make-react-denofriendly"&gt;
  &lt;/a&gt;
  How Aleph.js make React Deno-friendly
&lt;/h3&gt;

&lt;p&gt;While it is technically possible to create a React application using Deno instead of &lt;code&gt;Node.js&lt;/code&gt;, create-react-app by default is going to use NPM. &lt;code&gt;Aleph.js&lt;/code&gt; offers that same sort of quick-start as CRA but allows you to have your React application already set up with Deno.&lt;/p&gt;

&lt;p&gt;In fact, all it takes is a few command lines to have your &lt;code&gt;Aleph.js&lt;/code&gt; app up and running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;deno install --unstable -A -f -n aleph https://deno.land/x/aleph@v0.2.28/cli.ts
aleph init my-app
cd my-app &amp;amp;&amp;amp; aleph dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this respect, &lt;code&gt;Aleph.js&lt;/code&gt; is paving the way for Deno to become beginner-friendly and not just a niche runtime for early adopters.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alephjs-is-essentially-just-nextjs-built-on-deno"&gt;
  &lt;/a&gt;
  Aleph.js is essentially just Next.js built on Deno
&lt;/h3&gt;

&lt;p&gt;In order to make React more SEO-friendly, &lt;code&gt;Next.js&lt;/code&gt; was released in 2016 as a React framework that enables server-side rendering(SSR) and static-site generation(SSG). Both of these tools allow pages to be rendered relatively quickly for search engine crawlers meaning your page will rank higher.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Aleph.js&lt;/code&gt; seems to be open that they are essentially Next.JS for Deno. They say themselves:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Aleph.js&lt;/code&gt; (or Aleph or א, /ˈɑːlɛf/) is a React Framework for Deno, inspired by &lt;code&gt;Next.js&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Just like Next.js, Aleph provides SSR and SSG out of the box in order to allow developers to create SEO-friendly apps. In addition, Aleph provides some other built-in features that don’t come out of the box in Next.js, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hot Reloading (Using React Fast Refresh)&lt;/li&gt;
&lt;li&gt;ESM Import Syntax (No need for webpack)&lt;/li&gt;
&lt;li&gt;Typescript-Ready&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obviously, the main differentiating factor between &lt;code&gt;Next.js&lt;/code&gt; and &lt;code&gt;Aleph.js&lt;/code&gt; is Deno. Since Aleph is built on Deno, you have access to all the benefits of the runtime, however, you may not be able to easily use every NPM package that you want. While many packages are compatible(See here how to use them in Aleph), &lt;strong&gt;many packages rely on Node-specific functions, meaning they will not work in &lt;code&gt;Aleph.js&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-whats-our-verdict"&gt;
  &lt;/a&gt;
  So, What’s Our Verdict?
&lt;/h3&gt;

&lt;p&gt;So, what’s our verdict? Well, &lt;code&gt;Aleph.js&lt;/code&gt; seems like a great framework, but you shouldn’t quite bet the farm on it yet. As with any early adoption, there’s going to be a lack of documentation and compatible libraries that is going to make it hard for you to do everything you need to do. Most of these issues we think you’ll encounter however are not because &lt;code&gt;Aleph.js&lt;/code&gt; is new, but because Deno is. &lt;strong&gt;If Deno succeeds in becoming an industry standard, however, then &lt;code&gt;Aleph.js&lt;/code&gt; could be the next big React framework.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In other words, we’re all for giving &lt;code&gt;Aleph.js&lt;/code&gt; a try for your next pet project. If you’re deciding on your company's tech stack, however, Deno probably isn’t where it needs to be yet in order to suit all your needs.&lt;/p&gt;

</description>
      <category>react</category>
      <category>alephjs</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>DNS prefetch:  A Web Performance Trick</title>
      <author>Alpha Olomi</author>
      <pubDate>Mon, 31 May 2021 13:44:54 +0000</pubDate>
      <link>https://dev.to/alphaolomi/dns-prefetch-a-web-performance-trick-k5i</link>
      <guid>https://dev.to/alphaolomi/dns-prefetch-a-web-performance-trick-k5i</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Web performance is the objective measurements and the perceived user experience of load time and runtime. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;DNS-prefetch&lt;/code&gt; is an attempt to resolve domain names before resources get requested. This could be a file loaded later or link target a user tries to follow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-dnsprefetch"&gt;
  &lt;/a&gt;
  Why use dns-prefetch?
&lt;/h2&gt;

&lt;p&gt;When a browser requests a resource from a (third party) server, that cross-origin’s domain name must be resolved to an IP address before the browser can issue the request. This process is known as DNS resolution. While DNS caching can help to reduce this latency, DNS resolution can add significant latency to requests. For websites that open connections to many third parties, this latency can significantly reduce loading performance.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dns-prefetch&lt;/code&gt; helps developers mask DNS resolution latency. The HTML  element offers this functionality by way of a rel attribute value of dns-prefetch. The cross-origin domain is then specified in the href attribute:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"dns-prefetch"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"//example.com"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  Examples
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"dns-prefetch"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- and all other head elements --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- your page content --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should place &lt;code&gt;dns-prefetch&lt;/code&gt; hints in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; any time your site references resources on cross-origin domains, but there are some things to keep in mind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-best-practices"&gt;
  &lt;/a&gt;
  How to use: Best practices
&lt;/h2&gt;

&lt;p&gt;There are 3 main things to keep in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;dns-prefetch&lt;/code&gt; is only effective for DNS lookups on cross-origin domains, so avoid using it to point to your site or domain. This is because the IP behind your site's domain will have already been resolved by the time the browser sees the hint.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's also possible to specify &lt;code&gt;dns-prefetch&lt;/code&gt; (and other resources hints) as an HTTP header by using the HTTP Link field&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Link: &amp;lt;https://fonts.gstatic.com/&amp;gt;; rel=dns-prefetch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Consider pairing &lt;code&gt;dns-prefetch&lt;/code&gt; with the &lt;code&gt;preconnect&lt;/code&gt; hint. While &lt;code&gt;dns-prefetch&lt;/code&gt; only performs a DNS lookup, &lt;code&gt;preconnect&lt;/code&gt; establishes a connection to a server. This process includes DNS resolution, as well as establishing the TCP connection, and performing the TLS handshake if a site is served over HTTPS. Combining the two provides an opportunity to further reduce the perceived latency of cross-origin requests. You can safely use them together like so:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com/"&lt;/span&gt; &lt;span class="na"&gt;crossorigin&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"dns-prefetch"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If a page needs to make connections to many third-party domains, preconnecting them all is counter productive. The &lt;code&gt;preconnect&lt;/code&gt; hint is best used for only the most critical connections. For the others, just use&lt;code&gt;&amp;lt;link rel="dns-prefetch"&amp;gt;&lt;/code&gt; to save time on the first step, the DNS lookup.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#see-also"&gt;
  &lt;/a&gt;
  See also
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel"&gt;HTML attribute: rel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/prefetching-preloading-prebrowsing/"&gt;Prefetching, Preloading and Pre-browsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link"&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Try to avoid comments (most of the time)</title>
      <author>Davor Tvorić</author>
      <pubDate>Mon, 31 May 2021 13:36:50 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/try-to-avoid-comments-most-of-the-time-2f6a</link>
      <guid>https://dev.to/bornfightcompany/try-to-avoid-comments-most-of-the-time-2f6a</guid>
      <description>&lt;p&gt;Writing down a comment when you're coding might seem like you're going to help yourself or someone that might stumble upon your code, but, in reality, it might cause confusion and make your code less readable. If you're just starting out with coding, you sometimes feel that you need to comment every line to get your point across. That's probably not the case most of the time and you're probably just adding unnecessary noise to your code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-explanation"&gt;
  &lt;/a&gt;
  Code explanation
&lt;/h2&gt;

&lt;p&gt;If possible, try to use the time you would spend on writing a comment on coming up with better naming or clearer code structures. Take a look at this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// check if employee can receive overtime pay
if (employee.isFullTime &amp;amp;&amp;amp; employee.workHours &amp;gt; 160)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of relying on the comment to explain the condition, it would be much wiser to create a function with a clear name that does this check&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const isEmployeeEligibleForOvertimePay = (employee) =&amp;gt; {
    return employee.isFullTime &amp;amp;&amp;amp; employee.workHours &amp;gt; 160;
}

if (isEmployeeEligibleForOvertimePay(employee))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's now possible to reuse this small piece of code, as well as not have any doubts what this condition does. This might be a much larger condition, but a name might be sufficient enough to be aware what it's doing.&lt;/p&gt;

&lt;p&gt;Of course, there is a case where it's very difficult to come up with a meaningful name or it's just not possible. In that case a comment would be helpful, but you should have that as a last resort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outdated-comments"&gt;
  &lt;/a&gt;
  Outdated comments
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function insertData(data) {
    store.user.insert(data); // updates the current user data
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you've been working on some older projects, something like this might've popped up. You can see that some data is being inserted, but the comment says otherwise. The comment might be right, although someone could have forgotten to delete it. This causes you to doubt the code and you're forced to check what's really going on in the insert method.&lt;/p&gt;

&lt;p&gt;To prevent this, it's probably better to rename the functions to better represent their functionality and delete the unnecessary comment.&lt;br&gt;
This is something that might happen with any comment. If someone forgets to update the comment after a couple of changes, another person can't be sure what's right or not. It's not a critical mistake and nothing will break because of this, but you might spend a couple of minutes/hours until you find out the truth.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#redundant-comments"&gt;
  &lt;/a&gt;
  Redundant comments
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// checks whether the student lives in a dorm
if (student.livesInDorm)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I think we can all agree that these kinds of comments are totally unnecessary. You might feel better that you've written a couple lines of comments, but this doesn't help anyone when it's obvious what's happening&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#separators"&gt;
  &lt;/a&gt;
  Separators
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// ---------------
// VARIABLES
// ---------------
$blue: #1257ab;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This could be debated, but I think that the file structure should mandate where something belongs. By having these kinds of comments, you're just breaking up the flow of the code and not adding much value. If this is something that occurs a lot, having a defined standard with vertical formatting might have a much more appealing look.&lt;/p&gt;

&lt;p&gt;Some people are more of a visual type, so separators can come in handy to visualize the various parts of a file, but I would still stay away from them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#commented-code"&gt;
  &lt;/a&gt;
  Commented code
&lt;/h2&gt;

&lt;p&gt;Nowadays, there's probably very little reason to keep commented out code in your codebase, especially if you're using a version control system. Anyone that will come upon the commented code won't be bothered to delete it because they haven't written in in the first place.&lt;br&gt;
That will just perpetuate the old code into newer versions until it won't even work if you comment it out.&lt;/p&gt;

&lt;p&gt;Do yourself a favour and delete the commented code. If you'll really need it, you can get it from your VCS' history.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Having comments in your codebase is something that requires constant attention. When you update a function, you must make sure you've updated its comment as well. That's why most of the comments you write go stale and just confuse you next time you bump into them.&lt;br&gt;
By spending more time on naming your variables and functions, extracting a piece of code and adding vertical or horizontal formatting, you might even avoid the need for comments.&lt;/p&gt;

&lt;p&gt;Even though I've shown the types of comments you should avoid, there are cases where it's a good idea to leave a comment (but not that many!). &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;leaving a warning on a complicated feature that can't be managed with proper names is always a good idea&lt;/li&gt;
&lt;li&gt;documentation/legal comments in public code&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>engineeringmonday</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Day 12/30 : Responsive Pricing Card tables using HTML and CSS</title>
      <author>Somanath Goudar</author>
      <pubDate>Mon, 31 May 2021 12:53:00 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/day-12-30-responsive-pricing-card-tables-using-html-and-css-308e</link>
      <guid>https://dev.to/somanathgoudar/day-12-30-responsive-pricing-card-tables-using-html-and-css-308e</guid>
      <description>&lt;p&gt;Welcome to Day 12 of this &lt;a href="https://dev.to/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1"&gt;Challenge&lt;/a&gt;. This is what I created today. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜ Here is the Demo :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qbNj5iWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://1.bp.blogspot.com/-CdRBDVK0QGI/YKijanRy2CI/AAAAAAAAAEk/rZkyLmWSRd4qJ6tv6qMkGn_td86ZGRelgCLcBGAsYHQ/s600/12.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qbNj5iWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://1.bp.blogspot.com/-CdRBDVK0QGI/YKijanRy2CI/AAAAAAAAAEk/rZkyLmWSRd4qJ6tv6qMkGn_td86ZGRelgCLcBGAsYHQ/s600/12.gif" alt="Responsive Pricing Card tables"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜ Video Tutorial :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3no4wrHP2Ek"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;strong&gt;➜ Source Code :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.mrwebwolf.com/2021/05/responsive-pricing-card-tables-using.html"&gt;https://www.mrwebwolf.com/2021/05/responsive-pricing-card-tables-using.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;➜ Instagram Post and Reel for Day 12 :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/future_coderss/"&gt;See Post and Reel&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Hey, If You don't know what is happening here. Don't Worry, I am doing a crazy challenge 😅. Read More about it from the post below.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/30dayschallenge-30-days-extreme-html-css-challenge-50k1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🤯 30DaysChallenge - 30 Days Extreme HTML &amp;amp; CSS CHALLENGE 🤯&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 19 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#30daysofcode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Support Me :&lt;/strong&gt;&lt;br&gt;
👉 Buy me a Coffee: &lt;a href="https://www.buymeacoffee.com/somanathgoudar"&gt;https://www.buymeacoffee.com/somanathgoudar&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.instagram.com/somanath_goudar/"&gt;Follow Me on Instagram&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.instagram.com/future_coderss/"&gt;Follow Future Coders on Instagram&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;Subscribe to My Main Channel&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://www.youtube.com/channel/UCzGSyMOf2jPt1MkNBB3SJ3g"&gt;Subscribe to Channel Created for this Challenge&lt;/a&gt;&lt;/p&gt;




</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top Tips for Using Colour in Web Design</title>
      <author>Alex</author>
      <pubDate>Mon, 31 May 2021 12:49:26 +0000</pubDate>
      <link>https://dev.to/alexanderkdev/top-tips-for-using-colour-in-web-design-45ed</link>
      <guid>https://dev.to/alexanderkdev/top-tips-for-using-colour-in-web-design-45ed</guid>
      <description>&lt;p&gt;Web design is quite a creative pursuit, particularly when it comes time to pick a colour palette. Playing around with colour is something that a lot of people enjoy, and developing a cohesive colour scheme goes a long way in conveying a sense of professionalism to potential clients.&lt;/p&gt;

&lt;p&gt;However, deciding upon a scheme is not as simple as picking a few colours that you are fond of and hoping that the background matches the heading. In reality, it takes a lot of skill and knowledge to create beautiful, engaging web pages, which is why many businesses opt to use a web design company in Melbourne when it comes time to build or upgrade a site.&lt;/p&gt;

&lt;p&gt;The science of colour&lt;/p&gt;

&lt;p&gt;The science behind colour is actually quite complex, which makes sense given the level of influence it has over us. Colour has long been used as a tool by marketing professionals to convey certain emotions and sway the opinions of consumers one way or the other.&lt;/p&gt;

&lt;p&gt;When describing colour, we typically use three different terms known as hue, value, and chroma. Hue is simply the name that we give a specific colour. Red for example, is a different hue to green. Value is used to describe the lightness or darkness, for example light blue or dark purple. Finally, chroma is a term used to describe the purity, or vividness of a colour. Saturation and brightness are often terms used interchangeably when describing chroma.&lt;/p&gt;

&lt;p&gt;You’ve probably seen a colour wheel before and maybe even used one in a high school art class. The colour wheel is an easy way of organising hues in a harmonious, practical way. Colour wheels typically feature 12 colours, although this number can go up to as many as 96!&lt;/p&gt;

&lt;p&gt;At its core, the colour wheel consists of the three primary colours — red, blue, and yellow. When these colours are mixed they produce what is known as secondary colours — green, orange, and purple. Finally, the combination of these six colours produces the tertiary colours — red-orange, yellow-orange, yellow-green, blue-green, blue-violet, and red-violet.&lt;/p&gt;

&lt;p&gt;These twelve colours can be further subdivided into what is known as ‘cool colours’ and ‘warm colours’. As the term suggests, cool colours are the shades of blue, green, and purple, while warm colours include any tint that is predominantly red, orange, or yellow.&lt;/p&gt;

&lt;p&gt;Finally there are the colour schemes. These schemes provide designers and marketers with a practical means of conveying meaning and emotion. A complementary colour scheme is one that features colours from opposite sides of the colour wheel. A monochromatic colour scheme is one built from a single hue, featuring a variety of saturations of that colour. An analogous colour scheme uses colours that sit side by side. And a triadic colour scheme requires three colours that sit equally spaced around the colour wheel.&lt;/p&gt;

&lt;p&gt;The last thing you need to know about colour? That it’s a little bit different depending on whether you are designing for print or screen. Web designers will use a colour system known as RGB while print designers work with the CMYK model.&lt;/p&gt;

&lt;p&gt;Colour on Screen&lt;/p&gt;

&lt;p&gt;Colour is a simple way that web designers can convey meaning without using words. The fact that colours are able to convey meaning can be put down to a combination of psychology and conditioning. One of the reasons that red, for example, is commonly associated with warmth is the fact that fire is red.&lt;/p&gt;

&lt;p&gt;It is the role of a web designer to understand these connotations between colour, mood, and meaning, and make smart decisions that convey their client’s business.&lt;/p&gt;

&lt;p&gt;Colour is also important from an accessibility perspective. The Web Content Accessibility Guidelines dictates that “colours must have sufficient contrast between text colour and its background…this includes text on images, icons, and buttons”. This section of the Guidelines are specifically designed to assist those with low contrast sensitivity and individuals who suffer from colour blindness.&lt;/p&gt;

&lt;p&gt;There are many tools available on the web which can assist web developers select appropriate colours that will ensure content is accessible to all.&lt;/p&gt;

&lt;p&gt;Web developers also have to keep in mind the fact that their chosen colour palette will form a significant part of their client’s branding. As such, the client should ensure they are an active part of any discussions surrounding potential colour schemes.&lt;/p&gt;

&lt;p&gt;Colour your site with a Web Design Professional&lt;/p&gt;

&lt;p&gt;Given the significant impact that colour can have on the mood and preferences of potential customers, it pays to invest in the services of a professional web design company in Melbourne when it comes time to build or update your website.&lt;/p&gt;

&lt;p&gt;By employing a professional, you can be sure that your website palette reflects your brand, products, and services, conveying a sense of cohesion and professionalism.&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdesign</category>
      <category>webdev</category>
      <category>development</category>
    </item>
    <item>
      <title>3 ways to clone in JS</title>
      <author>Rupak Dey</author>
      <pubDate>Mon, 31 May 2021 12:42:22 +0000</pubDate>
      <link>https://dev.to/deyrupak/3-ways-to-clone-in-js-36cp</link>
      <guid>https://dev.to/deyrupak/3-ways-to-clone-in-js-36cp</guid>
      <description>&lt;p&gt;Objects in JavaScript are reference values, you can't simply just copy using the '='&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Save It For Later!&lt;/em&gt; Let's begin...&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const food = {a : 'apple', b : 'burger'}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#1-spread"&gt;
  &lt;/a&gt;
  &lt;br&gt;1. Spread
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{...food}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-objectassign"&gt;
  &lt;/a&gt;
  &lt;br&gt;2. Object.assign
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Object.assign({}, food)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-json"&gt;
  &lt;/a&gt;
  &lt;br&gt;3. JSON
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;JSON.parse(JSON.stringify(food))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  &lt;br&gt;Result
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{a : 'apple', b : 'burger'}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;&lt;em&gt;Do you know the difference between these 3 ways?&lt;/em&gt; Comment down below!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to make an awesome card hover effect</title>
      <author>Techy Programmers</author>
      <pubDate>Mon, 31 May 2021 12:41:20 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-an-awesome-card-hover-effect-45j5</link>
      <guid>https://dev.to/kunaal438/how-to-make-an-awesome-card-hover-effect-45j5</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make an awesome 3d card hover effect. You can see demo below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/JjWOgby?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial-"&gt;
  &lt;/a&gt;
  Video Tutorial -
&lt;/h1&gt;

&lt;p&gt;If you find this article hard or for better explanation. You can watch video tutorial.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/b2jsWL1cDKE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you like the video tutorial. Please consider subscribing my youtube channel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#lets-code"&gt;
  &lt;/a&gt;
  Let's code
&lt;/h1&gt;

&lt;p&gt;Inside HTML file under &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag write&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card-img"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card-body"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;card 01&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"para"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Non aperiam fugiat eos odit numquam vitae facere dolore id libero sit!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that we only have to add CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'roboto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;162&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;perspective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;450px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;preserve-3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(img.jpg)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateZ&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate3d&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-40px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;rotateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;180deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;85%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;87%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;180deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-body&lt;/span&gt; &lt;span class="nc"&gt;.bg&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-body&lt;/span&gt; &lt;span class="nc"&gt;.bg&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-10deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-body&lt;/span&gt; &lt;span class="nc"&gt;.bg&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-10deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card-body&lt;/span&gt; &lt;span class="nc"&gt;.bg&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform-origin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-10deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.card-body&lt;/span&gt; &lt;span class="nc"&gt;.bg&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.card-body&lt;/span&gt; &lt;span class="nc"&gt;.bg&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.card-body&lt;/span&gt; &lt;span class="nc"&gt;.bg&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.title&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#292929&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.card&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition-delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/kunaal438/card-hover"&gt;Source Code&lt;/a&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Learning Web Dev on the Web</title>
      <author>Nukala Suraj</author>
      <pubDate>Mon, 31 May 2021 12:32:56 +0000</pubDate>
      <link>https://dev.to/lucidmach/learning-web-dev-on-the-web-ifp</link>
      <guid>https://dev.to/lucidmach/learning-web-dev-on-the-web-ifp</guid>
      <description>&lt;p&gt;They say the best place to learn &lt;em&gt;football&lt;/em&gt; is on a &lt;em&gt;football field&lt;/em&gt;,&lt;br&gt;
likewise the best place to learn &lt;strong&gt;web dev&lt;/strong&gt; is the &lt;strong&gt;web&lt;/strong&gt;.&lt;br&gt;
😝&lt;/p&gt;

&lt;p&gt;There are a lot of places on the web from where you can learn (for &lt;strong&gt;&lt;em&gt;free&lt;/em&gt;&lt;/strong&gt;).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;YouTube&lt;/li&gt;
&lt;li&gt;Udemy&lt;/li&gt;
&lt;li&gt;DEV/Medium&lt;/li&gt;
&lt;li&gt;Twitter (yes, a lot of people tweet about web dev😂)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But as a beginner, it's very likely that you'd prolly choose YouTube and since YouTube has &lt;strong&gt;a hell lot of channels to choose from&lt;/strong&gt;, &lt;em&gt;finding a channel that has a style you really enjoy&lt;/em&gt; would play a major role in learning journey.&lt;/p&gt;

&lt;p&gt;Here's a list of my fav channels(and soon enough even yours 🤞)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg"&gt;Net Ninja&lt;/a&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TD1T8coB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghbygqmfhlwbglct61t1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TD1T8coB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghbygqmfhlwbglct61t1.png" alt="Net Ninja's Channel Page on YouTube"&gt;&lt;/a&gt;&lt;br&gt;
This is my go-to channel for literally anything web.&lt;br&gt;
Shaun has this tendency to &lt;strong&gt;&lt;em&gt;super-simplify any concept&lt;/em&gt;&lt;/strong&gt; to a form that literally a 5yo can understand.&lt;br&gt;
He has playlist on topics, in which he explains concepts as we build a project.&lt;br&gt;
However, Shaun likes to take his time so &lt;strong&gt;&lt;em&gt;if you've some dead-lines to meet&lt;/em&gt;&lt;/strong&gt;. This is definitely &lt;strong&gt;not the right channel for the situation&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/user/TechGuyWeb"&gt;Traversy Media&lt;/a&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f14DFnR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vhsxcujjuft9uzx0kbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f14DFnR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8vhsxcujjuft9uzx0kbf.png" alt="Traversy Media's Channel Page on YouTube"&gt;&lt;/a&gt;&lt;br&gt;
Brad Traversy is the &lt;strong&gt;&lt;em&gt;OG web dev youtuber&lt;/em&gt;&lt;/strong&gt;.&lt;br&gt;
A lot of people who make web dev tutorials on YouTube have claimed to have learnt from his videos. &lt;br&gt;
His videos have this &lt;strong&gt;&lt;em&gt;natural style&lt;/em&gt;&lt;/strong&gt; that makes it seem like you're &lt;strong&gt;&lt;em&gt;learning from a actual teacher in person&lt;/em&gt;&lt;/strong&gt;. &lt;br&gt;
He teaches you all the essentials (the &lt;strong&gt;&lt;em&gt;20%&lt;/em&gt;&lt;/strong&gt; with which you can get &lt;strong&gt;&lt;em&gt;80% of the work&lt;/em&gt;&lt;/strong&gt; done)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw"&gt;WebDevSimplified&lt;/a&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJl4gtW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6qr0mu2ydv09ap6dvyu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJl4gtW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6qr0mu2ydv09ap6dvyu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Kyle is an kinda like the best of both worlds from Net Ninja and Traversy Media.&lt;br&gt;
His goal as a YouTuber is "&lt;code&gt;simplifying the web, so you can build your dream projects sooner&lt;/code&gt;" which he absolutely aces.&lt;br&gt;
His videos tend to be crisp and to the point, so if you &lt;strong&gt;&lt;em&gt;want a fundamental understanding of concepts&lt;/em&gt;&lt;/strong&gt; while &lt;strong&gt;&lt;em&gt;killing your dead-lines, this is the best channel&lt;/em&gt;&lt;/strong&gt; for the situation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q"&gt;Dev Ed&lt;/a&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YE8cGyql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7a8tbbrp45lrd5tkcgu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YE8cGyql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7a8tbbrp45lrd5tkcgu.png" alt="Dev Ed's Channel Page on YouTube"&gt;&lt;/a&gt;&lt;br&gt;
This is the YouTuber I personally best relate to.&lt;br&gt;
His videos focus on showing you &lt;strong&gt;&lt;em&gt;how to think&lt;/em&gt;&lt;/strong&gt; (in terms of both &lt;strong&gt;design&lt;/strong&gt; and &lt;strong&gt;development&lt;/strong&gt;).&lt;br&gt;
His videos are absolutely delightful and fun to watch.&lt;br&gt;
He is the &lt;strong&gt;&lt;em&gt;PewDiePie of Web Dev YouTube&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/user/99baddawg"&gt;Ben Awad&lt;/a&gt; :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJBNEh8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/946ta027ul4um5luiyhj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJBNEh8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/946ta027ul4um5luiyhj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Ben has been an inspirational figure/role model to me.&lt;br&gt;
He &lt;strong&gt;&lt;em&gt;builds real-projects&lt;/em&gt;&lt;/strong&gt; that he deploys and monetizes right in front of us.&lt;br&gt;
He's also &lt;strong&gt;&lt;em&gt;THE YouTuber to learn React.JS, graphQl and TypeScript&lt;/em&gt;&lt;/strong&gt; from.&lt;br&gt;
His content is filled with wit and dark humor (kinda) and is absolutely fun to watch&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you ❤️ this post,&lt;br&gt;
Do hit me up on Twitter &lt;a href="https://twitter.com/LucidMach"&gt;@LucidMach&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For The Read,&lt;br&gt;
✌️&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/lucidmach"&gt;@lucidmach&lt;/a&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Easily animate DOM elements entering the viewport</title>
      <author>Benjamin Réthoré</author>
      <pubDate>Mon, 31 May 2021 12:25:29 +0000</pubDate>
      <link>https://dev.to/bnthor/easily-animate-dom-elements-entering-the-viewport-1fd3</link>
      <guid>https://dev.to/bnthor/easily-animate-dom-elements-entering-the-viewport-1fd3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#animon"&gt;
  &lt;/a&gt;
  Animon
&lt;/h1&gt;

&lt;p&gt;I tried to create a JS package as simple as possible to animate DOM elements when they get into the viewport.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bnthor/animon"&gt;Package's repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bnthor.github.io/animon-site/"&gt;Demo site&lt;/a&gt; showing the animations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;The installation and initialisation is pretty simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; animon
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the default styles to your HTML page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/animon/dist/animon.css"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you can import animon and launch it. By default it animates all the elements that has an &lt;code&gt;animonItem&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;animon&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;animon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;animon&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#custom-selector"&gt;
  &lt;/a&gt;
  Custom selector
&lt;/h2&gt;

&lt;p&gt;You can target any element, passing a CSS selector to the animon function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;animon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dom-syntax"&gt;
  &lt;/a&gt;
  DOM syntax
&lt;/h3&gt;

&lt;p&gt;Animon will detect all elements that has a 'animonItem' classname, for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animonItem"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello World&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animonItem"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, tu quoque mi filii.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In addition, animon also detects three data-attributes that gives you more control:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#dataeffect"&gt;
  &lt;/a&gt;
  Data-effect
&lt;/h4&gt;

&lt;p&gt;This is the easing function that will be used on the element entrance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animonItem"&lt;/span&gt; &lt;span class="na"&gt;data-effect=&lt;/span&gt;&lt;span class="s"&gt;"fadeInUp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hey yah!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's a few effects available at the moment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fadeIn&lt;/li&gt;
&lt;li&gt;fadeInLeft (default)&lt;/li&gt;
&lt;li&gt;fadeInRight&lt;/li&gt;
&lt;li&gt;fadeInDown&lt;/li&gt;
&lt;li&gt;fadeInUp&lt;/li&gt;
&lt;li&gt;scaleUp&lt;/li&gt;
&lt;li&gt;scaleDown&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#datadelay"&gt;
  &lt;/a&gt;
  Data-delay
&lt;/h4&gt;

&lt;p&gt;Delays the entrace by &lt;code&gt;x&lt;/code&gt; milliseconds:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animonItem"&lt;/span&gt; &lt;span class="na"&gt;data-delay=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#dataduration"&gt;
  &lt;/a&gt;
  Data-duration
&lt;/h4&gt;

&lt;p&gt;The transition duration, it must be expressed as a CSS "transition-duration" value (120ms, 2s etc...).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animonItem"&lt;/span&gt; &lt;span class="na"&gt;data-duration=&lt;/span&gt;&lt;span class="s"&gt;"4s"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#custom-effects"&gt;
  &lt;/a&gt;
  Custom effects
&lt;/h3&gt;

&lt;p&gt;You can skip importing the default stylesheet entirely and create your own effects. All you have to do is declare a default state and its &lt;code&gt;.is-visible&lt;/code&gt; CSS properties.&lt;/p&gt;

&lt;p&gt;You may want to start with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Base */&lt;/span&gt;
&lt;span class="nc"&gt;.animonItem&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;will-change&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;opacity&lt;/span&gt; &lt;span class="m"&gt;640ms&lt;/span&gt; &lt;span class="m"&gt;400ms&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;transform&lt;/span&gt; &lt;span class="m"&gt;640ms&lt;/span&gt; &lt;span class="m"&gt;400ms&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.animonItem.is-visible&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Custom effect */&lt;/span&gt;
&lt;span class="nc"&gt;.animonItem&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-effect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"myEffect"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;20rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.animonItem&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-effect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"myEffect"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nc"&gt;.is-visible&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>css</category>
      <category>javascript</category>
      <category>html</category>
      <category>animation</category>
    </item>
    <item>
      <title>From Junior to Senior Software Engineer at Klarna in 2.5 years</title>
      <author>Kevin Peters</author>
      <pubDate>Mon, 31 May 2021 12:23:50 +0000</pubDate>
      <link>https://dev.to/getworkrecognized/from-junior-to-senior-software-engineer-at-klarna-in-2-5-years-267</link>
      <guid>https://dev.to/getworkrecognized/from-junior-to-senior-software-engineer-at-klarna-in-2-5-years-267</guid>
      <description>&lt;p&gt;A promotion to senior level in a software engineering career brings many benefits: More compensation, more responsibilities, and a better position in your career progression. Getting promoted is difficult though. But let me tell you how I have applied simple tips and tricks to get promoted to senior-level at &lt;a href="https://www.klarna.com/"&gt;Klarna, one of the technology companies in Europe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After graduating from university in 2017 in Germany, I found a job based on an internship done during graduation. A small startup. But after 1.5 years I could not see my career progressing so quickly and growth opportunities were rare. So I decided to look around and after many rejections, I got an interview at Klarna. I do not know how but I completed the interview and got an offer and was hired as a Junior Software Engineer.&lt;/p&gt;

&lt;p&gt;A reason I wanted to join Klarna was that finally, I would have many other software engineers around me that would teach me how to build products at scale. In startups, the requirements for a software engineer are completely different from what big companies want. You need to focus more on the product. Have to tinker with marketing and work closely with Sales. It is a great opportunity for most people since you will learn a variety of skills. In the end, the dream of most software engineers is to work at a big company. You will have more dedicated time to actually focus on engineering and of course, the money is better as well.&lt;/p&gt;

&lt;p&gt;So let us look at what my progression at Klarna has been like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#career-levels-at-klarna"&gt;
  &lt;/a&gt;
  Career Levels at Klarna
&lt;/h2&gt;

&lt;p&gt;Klarna is really good at telling at which stage in your career you really are. They have a detailed career ladder based on different metrics. &lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer/klarna-2020"&gt;These metrics are symbolized through 8 Leadership Principles&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Customer obsession&lt;/li&gt;
&lt;li&gt;Deliver results&lt;/li&gt;
&lt;li&gt;Let the team shine&lt;/li&gt;
&lt;li&gt;Challenge the status quo&lt;/li&gt;
&lt;li&gt;Start small and learn fast&lt;/li&gt;
&lt;li&gt;Courage&lt;/li&gt;
&lt;li&gt;Hire and develop exceptional talent&lt;/li&gt;
&lt;li&gt;Detailed thinkers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on these leadership principles there is a matrix that is built up similar to something like this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level 1 - Customer obsession:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An employee can put themself into the shoes of the customer&lt;/li&gt;
&lt;li&gt;An employee understands how working on specific tasks helps customers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Level 2 - Customer obsession:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An employee is able to create tickets based on customer’s needs&lt;/li&gt;
&lt;li&gt;An employee deeply cares for the customer and builds features that overdeliver on the scope of the ticket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are of course a lot more levels for employees at Klarna. Currently, employees range from Level 1 to Level 8, where for Software Engineers level 1 is Junior and level 3 is senior. Further levels are harder to achieve and split up into an Individual contributor or management path which will be discussed later.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initial-rating-during-the-hiring-process"&gt;
  &lt;/a&gt;
  Initial rating during the hiring process
&lt;/h3&gt;

&lt;p&gt;During your interviews with Klarna, you will get rated against these principles. Klarna’s interview process is quite standard in the technology industry and is built similar to this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Recruiter call&lt;/li&gt;
&lt;li&gt;Homework task, Leetcode-style questions&lt;/li&gt;
&lt;li&gt;On-Site, normally a review of the homework task + additional whiteboarding problem&lt;/li&gt;
&lt;li&gt;System Design&lt;/li&gt;
&lt;li&gt;Behavioral Interview with the hiring manager&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;During this process and based on your resume you will get rated. Is this process fair? Might be, but you always have the option to negotiate your level at that stage. Especially the round about system design will decide how you get leveled.&lt;/p&gt;

&lt;p&gt;Personally, I had little to no experience with system design tasks before since working in a startup did not expose me to such things. Luckily the system-design-primer guide exists that you can learn with and excel at those tasks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promotion-rounds"&gt;
  &lt;/a&gt;
  Promotion rounds
&lt;/h3&gt;

&lt;p&gt;As within every bigger company, there is a promotion window at Klarna. It appears to happen once to twice per year, even though the process is currently changing. But the windows are build up the same. Normally you start a conversation with your manager first when the promotion window is coming up (1-2 months before) and in that conversation, you have to feel if your manager is willing to put in your promotion request. Once this is validated you can ask them in the same meeting if it would be ok to send out feedback for a 360-degree review. This means that you send out a form to all your colleagues and they rate you. Of course against the leadership principles. This can take some time!&lt;/p&gt;

&lt;p&gt;Once you have received all the feedback you gather and &lt;a href="https://getworkrecognized.com/blog/how-to-write-the-perfect-self-review"&gt;summarize it and present it to your manager&lt;/a&gt;. Your manager then has to decide if they put you forward to the next round of the promotion process. If they decide on it, then you have to basically write a short elevator pitch on why you should get promoted. That should be really short and be readable within a minute. Once that is done, the control is out of your hand. The promotion case will be discussed in a bigger group of engineering managers and stakeholders. Once approved you will receive your promotion.&lt;/p&gt;

&lt;p&gt;I went through that process twice and what really helped me was reminding my colleagues of what I have done in the past 6 months or year. Most of the employees forget what they have done themself in the past period so they will definitely not remember what you have achieved. For this, I track my work on a daily basis, and before sending out the form to collect feedback I am summarizing my achievements in a small brag document. 1 to 2 pages long. This will help my colleagues to remind them of where we actually worked together. This brag document I will attach to the form to collect feedback so the colleagues have an easy way to fill out the form.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-career-path-for-a-software-engineer-at-klarna"&gt;
  &lt;/a&gt;
  The career path for a software engineer at Klarna
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NtJvsJyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmn9eg21bqqyse7d82rx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NtJvsJyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmn9eg21bqqyse7d82rx.png" alt="A graph showing the usual career path at Klarna"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The engineering paths in Klarna are described quite clearly. As a software engineer, you will rise through the ranks from junior to senior normally with a focus on management but also contributing characteristics. Once reaching the senior level you will have to learn what you want to do in the future life. Stay on the individual contributor path or go into management. Both paths are valid approaches. Up to senior-level, it will not really make a difference on what you focus on, you need to have a substantial amount of skills within core engineering but also management.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opportunities-i-took"&gt;
  &lt;/a&gt;
  Opportunities I took
&lt;/h2&gt;

&lt;p&gt;So how did I rise through the ranks? As there is a system with rising through the ranks, you can game the system of course. There are different parameters that you will work on during the promotion process but it is, of course, an individual approach.&lt;/p&gt;

&lt;p&gt;Once I landed at Klarna, I realized people give a lot of thought to leadership principles. If it is about product decisions or just how to implement a new feature. The leadership principles should be applied. A good way to see that is in the discussion. If someone’s decision is violating the leadership principles a lot of people will argue against that decision. In general, it is driving the development at Klarna forward. So make use of these leadership principles in discussions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#follow-the-career-ladder"&gt;
  &lt;/a&gt;
  Follow the career ladder
&lt;/h3&gt;

&lt;p&gt;As said before, Klarna focuses a lot on Leadership Principles. In my first promotion/feedback round I got a lot of stellar feedback, but also a lot of points on what to improve on. I had a lot of 1-on-1’s with my manager to focus on my growth goals. For example, we discussed what I could do within the next month regarding development work that will help me. At the beginning at Klarna, I struggled with the “Let the team shine” principle a lot. I did not had ideas on how to present the team. So my manager proposed different things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Join a group outside of the team for voluntarily work like maintaining third-party libraries used by the team within Klarna&lt;/li&gt;
&lt;li&gt;Or joining the engineering blogging or open-source group&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I decided on the second step and quickly checked what is needed to get to the next level to fulfill these requirements. I represented my team within those meetings, but also myself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wud4ToHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yoqkknsv9ak4ir072vg6.gif" alt="Promotional banner for getworkrecognized"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But also on the team side, I got assigned to interesting tasks that helped me to grow. Working on creating new services and making sure they are scalable to millions of requests. I got put together with more senior engineers to do pair coding with them, but we also include mob programming within our team, a technique where the whole team gets together and codes something.&lt;/p&gt;

&lt;p&gt;These things really helped me to go from level 1 to level 2. For the transition from level 2 to level 3 the circumstances are a bit different. You have to work on different categories that are mentioned now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lead-the-team"&gt;
  &lt;/a&gt;
  Lead the Team
&lt;/h2&gt;

&lt;p&gt;When reaching level 2 and trying to get to level 3 another skill is getting a lot more important: Leadership. What does this mean? As a senior engineer Klarna expects from you two important things basically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Can you influence the product and lead implementations that your team creates or you come up with?&lt;/li&gt;
&lt;li&gt;Are you teaching people to code in a well way and can make developers at Klarna more efficient?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these things can be tackled and be focused on. Once I reached level 2 I put a lot of focus on that. I introduced the technique of creating technical design documents in our team. These are documents that sketch out the feature and architecture. They also lead the conversation about trade-offs of implementations and are living documents for taking decisions with the product manager. It helps us to get a clear mind about a feature. Once that is done it is collaboration time with your product owner on creating JIRA tickets for that feature. Once tickets are estimated and assigned, maybe go over them with the assigned person to help them understand each part of the ticket. Be descriptive in the ticket descriptions and help to give pointers on what to look out for. This is especially useful for team members that are new to the team. What I always like to do is pasting the paths of the core files that would need to be touched for the files. Based on that even junior developers would be able to code the feature mostly independently.&lt;/p&gt;

&lt;p&gt;This gets us to the next point as well: Leading developers. To get to level 3 at Klarna you have to support the engineers in your team. It is more a job of educating and pair coding with them. Give them space and the right tips and the right time. This is important for your team level. But it can get even more important outside of the team.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#opportunities-outside-of-your-team"&gt;
  &lt;/a&gt;
  Opportunities outside of your team
&lt;/h3&gt;

&lt;p&gt;As mentioned before, teaching developers to be more efficient outside of your team is also a huge priority to get promoted to level 3. Next to it, it becomes important that you work together with people outside of your team. This will eventually bobble up to other engineering managers that you are doing good work with their engineers. There are different activities like changing code for other teams and so on. Just receiving recognition. I did it a bit differently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#within-the-domain"&gt;
  &lt;/a&gt;
  Within the Domain
&lt;/h3&gt;

&lt;p&gt;At Klarna, we have a concept called domains. Domains are small subsections of the business. For example, we have a merchant domain that just deals with the merchant-aspect of the business but also a domain for the Klarna app. Some are more B2B focused, some more on the B2C side. Overall you can say the teams work closely together but each team has its own KPIs. But what becomes more important are the domain KPIs. Your team’s KPIs will be looked at by some people but if you made larger contributions to the domain’s KPIs people will start recognizing you.&lt;/p&gt;

&lt;p&gt;For example, in our domain, we are using a monorepo. A big repository that holds almost all services used in our domain. Improving this monorepo helps everyone in your domain to build better products and focus on features and implementation rather than infrastructure. I found many tasks like that, like creating a project to automatically update package dependencies throughout the monorepo. This will give you exposure to a wide audience and will make your case for promotions stronger.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h3&gt;

&lt;p&gt;Most of the technology companies promote open source in one way or the other. For Klarna it was always the plan to open source part of the software to give back to a community of developers. The process was not there, so the company initiated a group regarding open source at Klarna. This group was the catalysator to set up a workflow, make sure legal requirements are met, and promoting open source when possible. I joined that group initially and build up the processes and many more things regarding the topic. For example, we wanted to have an incubator set up where projects live in private first before getting open-sourced. This and many other smaller projects helped me work with various other engineers and get recognition. I even presented the results of a hackathon during an engineering all-hands meeting in front of the hundreds of engineers working at Klarna, challenging but rewarding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blogging"&gt;
  &lt;/a&gt;
  Blogging
&lt;/h3&gt;

&lt;p&gt;Branding is really important for Klarna. It blends in with their leadership principle called “Hire and develop exceptional talent”. Blogging about the technology used at Klarna will help with hiring in the long term because it will create some kind of trust in people applying. The biggest companies blogging about their technology are probably:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering"&gt;Airbnb Engineeering &amp;amp; Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://netflixtechblog.com/"&gt;The Netflix Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eng.uber.com/"&gt;Uber Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering"&gt;Pinterest Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eng.lyft.com/"&gt;Lyft Engineering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of them succeed because of great engineers that get hired. And part of the reason might be the blog as well. By sharing technological information you can create an environment of learning and discovering new things.&lt;/p&gt;

&lt;p&gt;I helped authors within Klarna to create blog articles. I found ideas and asked if people would be willing to create a blog article regarding some interesting topics. I helped them with graphics, copywriting, proofreading, and many other things. And here is the important part again: I worked with other engineers. They will know about me and their manager will most likely also know about me by then. A better standing for me in the company.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#be-proactive-think-ahead"&gt;
  &lt;/a&gt;
  Be proactive, Think ahead
&lt;/h3&gt;

&lt;p&gt;A big part of my promotion rounds was that I was proactive in my action, plans, and projects. It all starts with asking for feedback. I prepare other people to remember what I have done so they can give me feedback in an easier way. I focus on my weaknesses and try to improve them actively.&lt;/p&gt;

&lt;p&gt;In general, I was also looking at what the company’s or domain’s KPIs were and how they played with the KPIs of our team. I challenged my product owner a lot and made it clear that I want to work on certain things because it will help the company in the long term. I also had the opportunity to join a temporary team dealing with major support problems that were brought up at the domain level. It was great exposure to a new development space, I worked again with many new people, but most importantly, we solved the domain’s problems in record time. It was stressful but rewarding and the promotion was part of it. Look out for teams or projects that will help the company grow. Do not just sit there and grind the tickets you are assigned to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-up-your-achievements"&gt;
  &lt;/a&gt;
  Write up your achievements
&lt;/h2&gt;

&lt;p&gt;An important part of my journey was gathering feedback and having strong evidence of my achievements. How have I made this possible? I wrote it down.&lt;/p&gt;

&lt;p&gt;Writing is an essential skill in your career but keeping a work diary is not difficult. Just at the end of every day write up what you have done throughout the day. Remind yourself of your weaknesses and how you improved them. Keeping these notes will be super important. With getworkrecognized, I tracked more than a year of work notes and it helped me to write my self-review but also receive stellar performance reviews from my peers.&lt;/p&gt;

&lt;p&gt;A simple system I have used is to track all work but tag the notes. Assign them to the leadership principles Klarna has, and you will see where you have to grow or where you need to focus on in the next weeks a bit more. Make a plan and put some tasks around that into the sprint or your upcoming weeks.&lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>Menu / Sidebar toggle functionality with pure CSS and no JavaScript.</title>
      <author>Swastik Yadav</author>
      <pubDate>Mon, 31 May 2021 12:11:39 +0000</pubDate>
      <link>https://dev.to/swastikyadav/menu-sidebar-toggle-functionality-with-pure-css-and-no-javascript-1je6</link>
      <guid>https://dev.to/swastikyadav/menu-sidebar-toggle-functionality-with-pure-css-and-no-javascript-1je6</guid>
      <description>&lt;p&gt;In this post we will explore how we can create a toggle functionality for Menu / SideBar with pure CSS and no JavaScript.&lt;/p&gt;

&lt;p&gt;Toggle functionality is often built with JavaScript because it requires handling the click event.&lt;/p&gt;

&lt;p&gt;But it can be built with pure CSS and no JavaScript.&lt;/p&gt;

&lt;p&gt;Here is how.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-markup"&gt;
  &lt;/a&gt;
  1 - The Markup
&lt;/h2&gt;

&lt;p&gt;Let's start with a simple  tag for the sidebar.&lt;/p&gt;

&lt;p&gt;HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;aside&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"aside-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Qpay&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-bars sidebar-toggle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-home"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Home&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-building"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Company&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-dollar-sign"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Perks&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-file-contract"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Legal&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-credit-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Payments&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-headset"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Get Help&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-comment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; Chat With Us&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-add-input-type-checkbox"&gt;
  &lt;/a&gt;
  2 - Add input type checkbox
&lt;/h2&gt;

&lt;p&gt;Just above the aside tag add an input type checkbox.&lt;/p&gt;

&lt;p&gt;HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toggler"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;aside&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"aside-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Qpay&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-bars sidebar-toggle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

  ...
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-toggle-sidebar"&gt;
  &lt;/a&gt;
  3 - Toggle Sidebar
&lt;/h2&gt;

&lt;p&gt;Now based on the checked / Unchecked state of the input, we can show and hide the sidebar in CSS.&lt;/p&gt;

&lt;p&gt;The below code snippet says: If the input is checked, move the sidebar to the left by 250px. (250px is the width of the sidebar.)&lt;/p&gt;

&lt;p&gt;CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Toggler Functionality */&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:checked&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nt"&gt;aside&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-250px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now toggling the checkbox will show and hide the sidebar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-hamburger-menu"&gt;
  &lt;/a&gt;
  4 - Hamburger Menu
&lt;/h2&gt;

&lt;p&gt;But we want this to work when we click on the hamburger, not on the checkbox.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hide the input. (display: none)&lt;/li&gt;
&lt;li&gt;Wrap the hamburger menu in a label tag with the "for" attribute.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Id&lt;/code&gt;&lt;/strong&gt; of input checkbox and &lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt; attribute for the label should be the same. (This will trigger the checkbox when we click on hamburger icon.)&lt;/p&gt;

&lt;p&gt;HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Input checkbox "ID" = "toggler" --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"toggler"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;aside&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"aside-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Qpay&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Label "FOR" = "toggler" --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"toggler"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-bars sidebar-toggle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

  ...
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;And that's it. We created a toggle functionality without JavaScript.&lt;/p&gt;

&lt;p&gt;Here is a complete live demo with the codebase: &lt;a href="https://codepen.io/swastikyadav/pen/zYZPyrN"&gt;https://codepen.io/swastikyadav/pen/zYZPyrN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you enjoyed this post, found it useful, or felt happy please consider subscribing to my Weekly NewsLetter: &lt;a href="https://swastikyadav.com/subscribe"&gt;https://swastikyadav.com/subscribe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank You!&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
      <category>ux</category>
    </item>
    <item>
      <title>Twitter bot in Node.Js</title>
      <author>Neeraj Sewani</author>
      <pubDate>Mon, 31 May 2021 12:06:03 +0000</pubDate>
      <link>https://dev.to/neer17/twitter-bot-in-node-js-329</link>
      <guid>https://dev.to/neer17/twitter-bot-in-node-js-329</guid>
      <description>&lt;h4&gt;
  &lt;a href="#i-bet-you-have-wondered-to-automate-some-stuff-on-your-social-media-lets-do-some-then"&gt;
  &lt;/a&gt;
  I bet you have wondered to automate some stuff on your social media, let's do some then.
&lt;/h4&gt;

&lt;p&gt;With this bot we are going to DM anyone who follows us or likes our tweet. Here we are going to make use of the &lt;a href="https://developer.twitter.com/en/docs/twitter-api/enterprise/account-activity-api/overview"&gt;Account Activity API&lt;/a&gt; in order to consume &lt;em&gt;follow&lt;/em&gt; and &lt;em&gt;like&lt;/em&gt; events from our account.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#section0-environment-setup"&gt;
  &lt;/a&gt;
  Section-0: Environment Setup
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;STEP-0:&lt;/strong&gt; Make a Twitter account( or use an existing one) and add an app to that by going to the following &lt;a href="https://developer.twitter.com/en/portal/projects-and-apps"&gt;URL&lt;/a&gt;&lt;br&gt;
&lt;em&gt;P.S. I would recommend to make a separate account to deploy the bot on.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP-1:&lt;/strong&gt; Go to app and get following from &lt;em&gt;keys and tokens&lt;/em&gt; section.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;API key, secret, Bearer Token, Access token and secret.&lt;/li&gt;
&lt;li&gt;Enable 3 legged authentications to add &lt;em&gt;callback URL&lt;/em&gt; for &lt;em&gt;webhook&lt;/em&gt;.
(A &lt;em&gt;callback URL&lt;/em&gt; is required to register a webhook in order to consume events that would happen on our app, read more about it &lt;a href="https://developer.twitter.com/en/docs/twitter-api/enterprise/account-activity-api/overview"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Set up the dev environment by going to &lt;em&gt;Products -&amp;gt; Dev Environments&lt;/em&gt; form the sidebar and name all of them &lt;strong&gt;dev&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Give &lt;em&gt;Read, Write, and Direct Messages&lt;/em&gt; permissions form the &lt;strong&gt;App permissions&lt;/strong&gt; section.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;STEP-2:&lt;/strong&gt; Install the following dependencies to use the Twitter APIs in Node.js&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;twitter-lite&lt;/li&gt;
&lt;li&gt;dot-env&lt;/li&gt;
&lt;li&gt;twitter-webhook&lt;/li&gt;
&lt;li&gt;express&lt;/li&gt;
&lt;li&gt;body-parser&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;STEP-3:&lt;/strong&gt; Download and install &lt;code&gt;ngrok&lt;/code&gt; to get a HTTPS URL for our local ports and to check the bot working before deploying it to Heroku.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#section1-securing-api-keys"&gt;
  &lt;/a&gt;
  Section-1: Securing API keys
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;STEP-0:&lt;/strong&gt; First, make &lt;em&gt;bot.js&lt;/em&gt; file as entry point to our app. Then, by making use of &lt;code&gt;twitter-lite&lt;/code&gt; npm package we would interact with Twitter endpoints.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP-1:&lt;/strong&gt; Now, open &lt;code&gt;ngrok&lt;/code&gt; and get a HTTPS URL for the local port 3004 and paste the URL in the &lt;strong&gt;.env&lt;/strong&gt; file along with the tokens obtained in &lt;strong&gt;Section 1&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP-2:&lt;/strong&gt; Make a &lt;em&gt;.env&lt;/em&gt; file to put all the sensitive info form &lt;em&gt;Section-0&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;API_KEY=xIrIqvysinxgrSPm0Ir1D0cIF
API_SECRET_KEY=DjIMhoxJlRCxbgtw1zXdiGuKE4IjmjlAmnvB6orus24jbzmNof
ACCESS_TOKEN=1017764619337646080-3FrdsqhBLgVGDRAPEiy2a3fI7bY8Tv
ACCESS_TOKEN_SECRET=sRRfI6osPcvnwoHTY8UIA8y2hsI40kMltauL4xspAuMfr
ENVIRONMENT=dev
ROUTE=/callback-url
BEARER_TOKEN=AAAAAAAAAAAAAAAAAAAAACXW7gAAAAAA%2BbYioHfLTHR7Mf%2FnkpApHx1%2B%2FH0%3D5I7kLqCm5ejYNp5XoG8SbR96YoWxP3Po1J1RhyHwgPwj8E4rr8
SERVER_URL=https://fbc5f7e2c77f.ngrok.io
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;P.S. This makes the heading of the section ironic but anyway move ahead, there is lots to cover. Have already changed the tokens BTW.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP-3:&lt;/strong&gt; Make a &lt;strong&gt;config.js&lt;/strong&gt; for reading environment variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;twitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;consumer_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;consumer_secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;access_token_key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCESS_TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;access_token_secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCESS_TOKEN_SECRET&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webhooks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;serverUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SERVER_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;route&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ROUTE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;consumerKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;consumerSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCESS_TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;accessTokenSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCESS_TOKEN_SECRET&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ENVIRONMENT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;webhooksUserActivity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCESS_TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;accessTokenSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCESS_TOKEN_SECRET&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#section2-code"&gt;
  &lt;/a&gt;
  Section-2: Code
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;STEP-0:&lt;/strong&gt; In the following code we get the &lt;em&gt;user id&lt;/em&gt; of our account and then register a webhook using &lt;code&gt;twitter-webhooks&lt;/code&gt; package to receive &lt;em&gt;follow&lt;/em&gt; and _ favorite tweet_ events on our account. Paste the following code in &lt;strong&gt;bot.js&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Twitter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;twitter-lite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterWebhooks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;twitter-webhooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;twitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;webhooks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;webhooksUserActivity&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./config&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterLiteClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Twitter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;twitter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userActivityWebhook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;twitterWebhooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userActivity&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;webhooks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//  get user id&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;twitterLiteClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;users/lookup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;screen_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;twitter id of your app&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id_str&lt;/span&gt;

  &lt;span class="c1"&gt;//     get webhooks&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webhooksResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;userActivityWebhook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWebhooks&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webhooksResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;environments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;webhooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//  unregister earlier webhook&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webhookId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;webhooksResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;environments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;webhooks&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;userActivityWebhook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unregister&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="nx"&gt;webhookId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;//Register your webhook url - just needed once per URL&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;userActivityWebhook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="c1"&gt;//Subscribe for a particular user activity&lt;/span&gt;
  &lt;span class="nx"&gt;userActivityWebhook&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;webhooksUserActivity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userActivity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;userActivity&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;follow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userActivity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; - follow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;favourite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userActivity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;favourite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3004&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;STEP-1:&lt;/strong&gt; Now, once we have attached the webhooks and started listening for the events, let's do some activity on our account using the &lt;code&gt;twitter-lite&lt;/code&gt; package. Here I am greeting the new follower or the user who like a tweet by sending them a DM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;userActivityWebhook&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;webhooksUserActivity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userActivity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;userActivity&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;follow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;followerName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;screen_name&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;followerId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;

          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`\n &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;followerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; followed you \n`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;twitterLiteClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direct_messages/events/new&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message_create&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message_create&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;recipient_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;followerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="p"&gt;},&lt;/span&gt;
                  &lt;span class="na"&gt;message_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Hey &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;followerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;! Thanks for following. You are awesome`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;favorite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;followerName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;screen_name&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;followerId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id_str&lt;/span&gt;

          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`\n &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;followerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; liked a tweet\n`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

          &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;twitterLiteClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;direct_messages/events/new&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message_create&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;message_create&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;recipient_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;followerId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="p"&gt;},&lt;/span&gt;
                  &lt;span class="na"&gt;message_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Hey &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;followerName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;! Thanks for liking the tweet`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;STEP-3:&lt;/strong&gt; Run &lt;code&gt;node bot.js&lt;/code&gt; to run it locally and do follow the bot from your personal account and you would get a DM form the bot.&lt;/p&gt;

&lt;p&gt;P.S.: Sad part is that with a free account only 5 DMs can be sent in a 24 hour window. But a plethora of other things can be done with a much larger cap, here is the &lt;a href="https://developer.twitter.com/en/docs/twitter-api/api-reference-index"&gt;API reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;High five on getting it this far.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/6q29hxDKvJvPy/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/6q29hxDKvJvPy/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://dev.to/neer17/deploy-twitter-bot-on-heroku-gnk"&gt;Follow part 2 of the tutorial&lt;/a&gt; to deploy it on Heroku.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>twitter</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
