<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Messaging Web App UI Kit</title>
      <author>Mahfuzul Islam Nabil</author>
      <pubDate>Tue, 05 Oct 2021 14:12:53 +0000</pubDate>
      <link>https://dev.to/mahfuzulnabil/messaging-web-app-ui-kit-3728</link>
      <guid>https://dev.to/mahfuzulnabil/messaging-web-app-ui-kit-3728</guid>
      <description>&lt;p&gt;Hello, Design Lovers. Hope you are Well!&lt;br&gt;
This is a Social Media Messaging Web App UI Kit.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v_17nBCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb3gsgo4xlx1sirbub6w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v_17nBCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb3gsgo4xlx1sirbub6w.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Best UI Kit for Messaging Web App. This UI Kit is designed for an integrated messaging platform. If you are building a messaging platform, it will be very useful for you. This UI Kit is designed for web, web app, mobile app.&lt;/p&gt;

&lt;p&gt;We think this might be the best UI Kit for messaging we have ever seen. It is simple, creative, and unique. The design is well thought out and put together. It’s creative and usable. The designers seemed to have really thought about what a messaging app should look like and how it should function. They used a lot of creative interactive components in their interactive mockups that show off the flow and ease of interaction with those elements. This is an impressive UI Kit that we would highly recommend you try out. UIHUT  &lt;/p&gt;

&lt;p&gt;Fully customizable design file. This Screens &amp;amp; components are designed in high-quality details in Figma, XD, Sketch.&lt;/p&gt;

&lt;p&gt;UIHUT is a design resources platform for UX/UI designers, developers, and founders. Our high-quality design resources will help you to speed up the design process. Resources:&lt;/p&gt;

&lt;p&gt;Have 14,000+ Best UI Design (Free/Premium)&lt;br&gt;
(web templates, web app, mobile app, illustrations, icons)&lt;br&gt;
( Codes Also Available)&lt;br&gt;
From 👉 &lt;a href="http://www.uihut.com"&gt;www.uihut.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[📢 Lifetime PLAN: $99]&lt;br&gt;
📌Offer,&lt;br&gt;
CODE: nab10&lt;br&gt;
(10% DISCOUNT OFF)&lt;/p&gt;

</description>
      <category>messagingwebapp</category>
      <category>webapp</category>
      <category>messageui</category>
      <category>messsengeruikit</category>
    </item>
    <item>
      <title>[Part 1] A proactive approach to handling application errors</title>
      <author>Mohammed Ali Chherawalla (MAC)</author>
      <pubDate>Tue, 05 Oct 2021 14:12:01 +0000</pubDate>
      <link>https://dev.to/alichherawalla/part-1-a-proactive-approach-to-handling-application-errors-5h3m</link>
      <guid>https://dev.to/alichherawalla/part-1-a-proactive-approach-to-handling-application-errors-5h3m</guid>
      <description>&lt;p&gt;&lt;b&gt;NOTE: You will need slack access for this tutorial.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;This is Part-1 of a 3 part series on how to proactively handle errors in your application across the stack.&lt;/p&gt;

&lt;p&gt;As engineers, we toil all day, write tests, test our APIs manually, work through various scenarios and user flows before we raise a PR to get our code merged in. Peer Pull Request reviews - one of the best forms of collaboration, act as an extra set of eyes that help identify missing conventions and use cases. This helps build a more stable product. All these things are done to reduce the risk of failure. However, as all of you know, and have very well experienced, there will be unanticipated issues in production. Could be related to a third-party service malfunctioning,  or a system failure. Yes,  AWS goes down too!&lt;/p&gt;

&lt;p&gt;One out of two things can happen in this case.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A disgruntled customer can inform you about inconsistencies or failures in your system.&lt;/li&gt;
&lt;li&gt;Or, we could put processes in place that proactively alert us if there are issues and we can tackle them head-on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's say that you do get informed proactively. You need to now search through hundreds of GBs of data in the application logs to be able to root cause and fix the issues.&lt;/p&gt;

&lt;p&gt;In this tutorial, I will take you through how to integrate slack alerts for failures in your application. We will also go over how to associate an ID for each incoming request to the server. We will use the requestID in the slack alerts for easy debugging.&lt;/p&gt;

&lt;p&gt;This tutorial assumes that you have a good understanding of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/docs/"&gt;NodeJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://graphql.org/learn/"&gt;GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In case you are not familiar with the above please take some time to go through the documentation&lt;/p&gt;

&lt;p&gt;In this tutorial, you will&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a logger middleware that associates a request ID with each incoming request&lt;/li&gt;
&lt;li&gt;Create a slack webhook&lt;/li&gt;
&lt;li&gt;Create a slack service that will send messages to different channels for dev and production.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#starter-project"&gt;
  &lt;/a&gt;
  Starter Project
&lt;/h2&gt;

&lt;p&gt;Please clone the following repository: &lt;a href="https://github.com/wednesday-solutions/node-express-slack-alert"&gt;https://github.com/wednesday-solutions/node-express-slack-alert&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-logger-middleware"&gt;
  &lt;/a&gt;
  Create a logger middleware
&lt;/h2&gt;

&lt;p&gt;We will now add a middleware that will be run for each incoming request. This middleware will generate a UUID and associate it with all logs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Add the following dependencies&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;winston&lt;/li&gt;
&lt;li&gt;cls-rtracer
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add cls-rtracer winston
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;Register the middleware in the &lt;code&gt;server/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import rTracer from 'cls-rtracer';
...
export const init = () =&amp;gt; {
...
  app.use(rTracer.expressMiddleware());
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This ensures that for ever request we are getting a new &lt;code&gt;request-id&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;Log the request-id in the health-check API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    console.log(rTracer.id(), message);
    res.json(message);
  });
  ...

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the application using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn start:local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The application starts running on port 9000. Go to &lt;a href="http://localhost:9000"&gt;http://localhost:9000&lt;/a&gt; in the browser to hit the health-check API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X_-wU4lS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eplj1sgfz3t2l5f1a2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_-wU4lS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4eplj1sgfz3t2l5f1a2m.png" alt="614318280520094624ee5f02_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Refresh the page a few times and watch the logs.&lt;/p&gt;

&lt;p&gt;For each request you have a new request-id now.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLimY7oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsdkq65oacmfvu5j8xxo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLimY7oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsdkq65oacmfvu5j8xxo.png" alt="6143183e09997c6a689a79e1_2 (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a final check lets now add multiple console logs and ensure that the request-id for a single request is constant.&lt;/p&gt;

&lt;p&gt;Add this snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    console.log(rTracer.id(), message);
    console.log(rTracer.id(), Date());
    res.json(message);
  });
  ...

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will console log the request-id and the time when the log was printed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CTzzkwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rx30dr5fqtlhg735cn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTzzkwjx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rx30dr5fqtlhg735cn8.png" alt="6143187f842440aa70930a12_3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4
&lt;/h3&gt;

&lt;p&gt;Create a logger function that combines winston and cls-rtacer&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;utils/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { createLogger, format, transports } from 'winston';
import rTracer from 'cls-rtracer';
....

const { combine, timestamp, printf } = format;
...

export const logger = () =&amp;gt; {
  const rTracerFormat = printf(info =&amp;gt; {
    const rid = rTracer.id();
    return rid ? `${info.timestamp} [request-id:${rid}]: ${info.message}` : `${info.timestamp}: ${info.message}`;
  });
  return createLogger({
    format: combine(timestamp(), rTracerFormat),
    transports: [new transports.Console()]
  });
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Logger will remove the need to invoke &lt;b&gt;rTracer.id&lt;/b&gt; manually. Whenever &lt;b&gt;logger.info&lt;/b&gt; is invoked the message is prefixed with the &lt;b&gt;timestamp&lt;/b&gt; and the &lt;b&gt;request-id&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Let's use logger in the health check API&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { isTestEnv, logger, unless } from '@utils';
...

export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    logger().info(message);
    res.json(message);
  });
  ...

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the app using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; yarn start:local
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hit the health check API and let the magic unfurl!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OirS7CAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igin5uv5iqrrh2cuwjj8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OirS7CAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igin5uv5iqrrh2cuwjj8.png" alt="6143191cfde001c2abfc4922_4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We now have a framework that allows us to attribute logs to a particular request.&lt;/p&gt;

&lt;p&gt;The slack alerts sent in case of failures will contain the request-id in question. This will help filter through the logs and only retrieve relevant information.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-slack-webhook"&gt;
  &lt;/a&gt;
  Create a slack webhook
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Install the &lt;b&gt;slack-notify&lt;/b&gt; dependency&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add slack-notify
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;We will now create an incoming webhook&lt;/p&gt;

&lt;p&gt;Go to &lt;b&gt;https://&amp;lt;your-domain-name&amp;gt;.slack.com/apps/manage/custom-integrations&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;b&gt;Incoming WebHooks&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--953IEqOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u8wys7yektwrahn67n9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--953IEqOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9u8wys7yektwrahn67n9.png" alt="614319772735d677d0cbc889_5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;b&gt;Add to Slack&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s6jsuseu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sz4ms0gjlu6l0v3iorq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s6jsuseu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sz4ms0gjlu6l0v3iorq.png" alt="61431af5c46a7ef8ea489663_6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose or create a new channel&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aFIqKgPA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwb53j4zuiqsr4arz6cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aFIqKgPA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwb53j4zuiqsr4arz6cw.png" alt="61431b081eb086ba0e32f4f4_7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I typically create 2 channels. One for non-production errors and one for production errors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;node-express-slack-alerts-dev&lt;/li&gt;
&lt;li&gt;node-express-slack-alerts-production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can change the name, and icon if you like.&lt;/p&gt;

&lt;p&gt;I now have 2 integrations and I will integrate them into my app. We will add them to the &lt;b&gt;.env.development&lt;/b&gt; and &lt;b&gt;.env&lt;/b&gt; files&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_WbMPGeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3n3hnp20mkuh30jix9az.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_WbMPGeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3n3hnp20mkuh30jix9az.png" alt="61431b2bfbdf0feee8121d72_8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;Create a slack service&lt;/p&gt;

&lt;p&gt;Create a file for the slack service using the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir server/services
vi server/services/slack.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the following snippet in the slack.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import slackNotify from 'slack-notify';
import rTracer from 'cls-rtracer';

let slack;
function getSlackInstance() {
  if (!slack) {
    slack = slackNotify(process.env.SLACK_WEBHOOK_URL);
  }
  return slack;
}
export async function sendMessage(text) {
  // 1
  if (['production', 'development', 
         'qa'].includes(process.env.ENVIRONMENT_NAME)) {
    getSlackInstance().send({
      text: JSON.stringify(text),
      username: 'node-express-alerts'
    });
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Change the &lt;b&gt;if&lt;/b&gt; condition in order to test the integration locally.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; if (true || 
       ['production', 'development', 
          'qa'].includes(process.env.ENVIRONMENT_NAME)) {
   ...
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now import &lt;b&gt;sendMessage&lt;/b&gt; in the &lt;b&gt;server/index&lt;/b&gt; and invoke it when the health-check api is invoked as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { sendMessage } from './services/slack';
...

export const init = () =&amp;gt; {
  ...
  app.use('/', (req, res) =&amp;gt; {
    const message = 'Service up and running!';
    logger().info(message);
    sendMessage(message);
    res.json(message);
  });
  ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hit the health check API and you should start seeing slack alerts!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dekl9hCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx1p6gvexd84n4s9w4ih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dekl9hCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mx1p6gvexd84n4s9w4ih.png" alt="614320ede1400e797e367575_9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#send-the-requestid-as-part-of-slack-alerts"&gt;
  &lt;/a&gt;
  Send the request-id as part of slack alerts
&lt;/h2&gt;

&lt;p&gt;Copy the following snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
export async function sendMessage(text) {
  if (['production', 'development', 'qa'].includes(process.env.ENVIRONMENT_NAME)) {
    getSlackInstance().send({
      text: JSON.stringify({ requestId: rTracer.id(), error: text, env: process.env.ENVIRONMENT_NAME }),
      username: 'node-express-alerts'
    });
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make the change to the if condition so that you can test out your integration locally.&lt;/p&gt;

&lt;p&gt;Hit the health-check API&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-go-from-here"&gt;
  &lt;/a&gt;
  Where to go from here
&lt;/h2&gt;

&lt;p&gt;You now have the ability to proactively handle errors on the backend. Use the &lt;b&gt;sendMessage&lt;/b&gt; function to capture and report errors to slack. Pull only the relevant logs using the request-id as a filter.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading this article as much as I enjoyed writing it. If this peaked your interest stay tuned for the next article in the series where I will take you through how to proactively report frontend errors using Sentry.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please join the forum discussion below.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>Announcing Cube Cloud: Managed hosting of Cube applications</title>
      <author>Artyom Keydunov</author>
      <pubDate>Tue, 05 Oct 2021 13:55:43 +0000</pubDate>
      <link>https://dev.to/cubejs/announcing-cube-cloud-managed-hosting-of-cube-applications-342e</link>
      <guid>https://dev.to/cubejs/announcing-cube-cloud-managed-hosting-of-cube-applications-342e</guid>
      <description>&lt;p&gt;&lt;em&gt;TL;DR: Cube is an open-source API layer for building modern data apps. Here's a &lt;a href="https://dev.to/cubejs/building-clickhouse-dashboard-and-crunching-wallstreetbets-data-14ao"&gt;step-by-step tutorial&lt;/a&gt; that shows how Cube shines. Now Cube can be run on a fully managed platform — Cube Cloud. It's a small step for the Cube team, but a giant leap for the developers: Cube Cloud has a free tier so everyone can start building with Cube right away. Read more below...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today, we’re excited to announce general availability of Cube Cloud, a fully managed service for running Cube applications in the cloud of your choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can try it out for free at &lt;a href="https://cube.dev/cloud"&gt;cube.dev/cloud&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The launch follows more than two years of collecting community feedback about running Cube in production, which started with my cofounder Pavel and me helping community members manage Cube under load. We learned a lot about different load footprints, use cases, and patterns of how to scale Cube to match different use cases, and began work on what later became Cube Cloud.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Our mission:&lt;/strong&gt; to help developers focus on building data applications with Cube, not on running, monitoring, and scaling Cube infrastructure.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Our plan:&lt;/strong&gt; a platform purpose-built to run Cube applications, smart enough to autoscale to accommodate usage growth, and rich with controls to trace queries, inspect load, and work with Cube pre-aggregations.&lt;/p&gt;

&lt;p&gt;I’m excited to share what we’ve built. Let’s take a look at some important new features:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#autoscale-cube-api-instances"&gt;
  &lt;/a&gt;
  Auto-scale Cube API instances
&lt;/h2&gt;

&lt;p&gt;Cube API instances are designed to be scaled horizontally, but it’s hard to say at what CPU, memory, or requests threshold you need to scale, since this depends on a variety of factors, including your schema structure and footprint, API workload patterns, and database resources.&lt;/p&gt;

&lt;p&gt;In Cube Cloud, you don't need to worry about any of it—how many instances to run, how much memory to allocate, etc. Cube Cloud knows how to autoscale your deployment based on API workloads and a multi-tenancy structure to load-balance schemas per API instance.&lt;/p&gt;

&lt;p&gt;Cube Cloud also auto-scales pre-aggregations of the Cube relational caching layer. Auto-scaling ingestion helps to keep cache refresh time constant even when the underlying data grows, and the same is true for the querying side: Cube Cloud takes care of bringing more Cube Store workers to process all the incoming requests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_bqY9up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/9c62128c-195a-4ddf-b887-f63e61eb2033.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_bqY9up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/9c62128c-195a-4ddf-b887-f63e61eb2033.png" alt="autoscale.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cache-and-preaggregations-warmup"&gt;
  &lt;/a&gt;
  Cache and pre-aggregations warm-up
&lt;/h2&gt;

&lt;p&gt;To ensure a good user experience, we recommend pre-compiling your schema and warming up both in-memory and pre-aggregations caches before serving user requests. It usually happens during the rollout of updates to the data schema. When building multitenant applications and load balancing different schema versions across API instances, it is important to pre-compile versions of the schema per serving API instance, especially for dynamic schemas that make third-party requests.&lt;/p&gt;

&lt;p&gt;Cube Cloud takes care of schema pre-compilations and cache warm-ups for you, including balancing multi-tenant schema versions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--13VzDtRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/148c34dd-1367-4e35-8d28-d5936f23dcc7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--13VzDtRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/148c34dd-1367-4e35-8d28-d5936f23dcc7.png" alt="multi-tenant-schema.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-integration-and-collaborative-schema-editing"&gt;
  &lt;/a&gt;
  GitHub integration and collaborative schema editing
&lt;/h2&gt;

&lt;p&gt;Cube Cloud integrates with GitHub to streamline the process of developing and testing schema edits with your team.&lt;/p&gt;

&lt;p&gt;First, Cube Cloud can automatically deploy changes from a connected GitHub repository. Simply commit and git push to trigger a deployment.&lt;/p&gt;

&lt;p&gt;Additionally, if you want to edit and test your schema directly in Cube Cloud, you can do so via Development Mode, which deploys your own personal API endpoint to test out via Playground as you edit the schema. When you’re happy with your updates, you can commit and push your changes via the git integration, then share these updates with the rest of your team or push them to a production environment in Cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0yRJ8vYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/7da053d1-21d4-46e1-bb63-372ef3e08eed.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0yRJ8vYU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/7da053d1-21d4-46e1-bb63-372ef3e08eed.png" alt="schema_editing.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’re now actively working on some neat features to support staging environments and more collaborative workflows. For example, multiple branches on each deployment will soon allow you to set up multiple environments with the same backend data source and caches, while using different schema versions and resource configurations. We’ll also enable you to open pull requests and merge branches directly from Cube Cloud. Watch this space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#monitoring"&gt;
  &lt;/a&gt;
  Monitoring
&lt;/h2&gt;

&lt;p&gt;Cube Cloud provides performance monitoring for API instances and your source database. Use this tool to monitor overall load, and spot slow queries to optimize.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V65AJjE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/6f0b86f3-6952-4460-aa82-168b306c2e97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V65AJjE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/6f0b86f3-6952-4460-aa82-168b306c2e97.png" alt="monitoring.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, we're working on integrations with third-party alerting and APM tools like Datadog and PagerDuty, so you can export metrics and logs of your Cube Cloud deployment to these tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#query-tracing"&gt;
  &lt;/a&gt;
  Query Tracing
&lt;/h2&gt;

&lt;p&gt;Query tracing provides a historical view of all your Cube API and database queries. This can be very helpful both during development and in production to find slow queries, understand the lifecycle of each query, and optimize performance and caching configuration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7TjvZmvU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2c985fed-e80c-4a70-be8a-9f43bfb42372.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7TjvZmvU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/2c985fed-e80c-4a70-be8a-9f43bfb42372.png" alt="query_tracing.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preaggregations-management"&gt;
  &lt;/a&gt;
  Pre-aggregations management
&lt;/h2&gt;

&lt;p&gt;Cube can accelerate a query by utilizing pre-aggregations—aggregated and optimized representations of source data—instead of processing raw data. In Cube Cloud, it’s easier to create and configure pre-aggregations during development and maintain them in production. We've built a control panel to view all your pre-aggregations in one place.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kwpeQKZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/6b07ade3-5246-40cc-a033-47c94389bcde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwpeQKZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/6b07ade3-5246-40cc-a033-47c94389bcde.png" alt="pre-aggregations.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This tool lets you view build history, partitions, build times, refresh times, and much more. You can also build pre-aggregations manually with the &lt;code&gt;Build All&lt;/code&gt; button, or select individual partitions to build.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jgfxnsOa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/db60d2cd-d8ff-45a3-8891-49d6729627ad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jgfxnsOa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/db60d2cd-d8ff-45a3-8891-49d6729627ad.png" alt="pre-aggregations-3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To track the history of pre-aggregations over time, Cube Cloud provides a list of every build that happened.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c0RkJJXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/45bac091-e3f4-4dc8-b235-f40f7724e3df.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c0RkJJXv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/45bac091-e3f4-4dc8-b235-f40f7724e3df.png" alt="pre-aggregations-2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;Cube Cloud is not just the fastest way to run Cube; we aim for it to be the most secure.&lt;/p&gt;

&lt;p&gt;For starters, all communications between Cube Cloud and your databases can be encrypted. In addition, it’s possible to run Cube Cloud in an isolated, dedicated VPC that can be peered to your database's VPC.&lt;/p&gt;

&lt;p&gt;Encryption at rest for pre-aggregations using Customer Key Management is available for dedicated VPC instances.&lt;/p&gt;

&lt;p&gt;To make it easier to use Cube Cloud in large enterprise environments, we’re actively in the process of earning our SOC-2 certification. If you’d like to be updated on our progress with this certification, please let us know.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-price-0"&gt;
  &lt;/a&gt;
  Starting price: $0
&lt;/h2&gt;

&lt;p&gt;We’re so confident that Cube Cloud is the superior way to develop and run Cube, and proud of the features that we’ve added, that we encourage every developer to use it.&lt;/p&gt;

&lt;p&gt;Cube Cloud is totally free for up to 1GB/month of processed data—with no limitations on access to the Cube Cloud IDE and no cap on the number of data stores you connect or API instances you create. &lt;a href="https://cubecloud.dev/auth/signup"&gt;Give it a try now&lt;/a&gt;. (For additional data as well as auto-scaling and high availability, pricing starts at just $99/month. &lt;a href="https://cube.dev/pricing"&gt;Learn more about Cube Cloud pricing here&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;If your team requires dedicated infrastructure, support and training, SLAs, or other custom enterprise features, &lt;a href="https://cube.dev/contact"&gt;get in touch&lt;/a&gt;: we’re happy to help.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-just-the-beginning"&gt;
  &lt;/a&gt;
  This is just the beginning
&lt;/h2&gt;

&lt;p&gt;More is definitely in store! We will continue to build more tools in Cube Cloud to ensure smooth development, staging, and production for Cube-powered data applications. We also hope you’ll share your feedback and feature requests by &lt;a href="//mailto:hello@cube.dev"&gt;dropping us an email&lt;/a&gt;, &lt;a href="https://twitter.com/thecubejs"&gt;finding us on Twitter&lt;/a&gt;, or &lt;a href="https://slack.cube.dev"&gt;participating in our Slack community&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Nvim Remaps Like a Boss</title>
      <author>Waylon Walker</author>
      <pubDate>Tue, 05 Oct 2021 13:33:11 +0000</pubDate>
      <link>https://dev.to/waylonwalker/i-made-a-neovim-plugin-4pid</link>
      <guid>https://dev.to/waylonwalker/i-made-a-neovim-plugin-4pid</guid>
      <description>&lt;p&gt;I've slowly adding more and more lua functions into my neovim configuration,&lt;br&gt;
and recently I noticed a pattern for a class of functions that reach out to run&lt;br&gt;
shell commands that can be abstracted away.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8m5ipBuopPU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#telegraphnvim"&gt;
  &lt;/a&gt;
  Telegraph.nvim
&lt;/h2&gt;

&lt;p&gt;Check out the project &lt;a href="https://github.com/WaylonWalker/Telegraph.nvim"&gt;readme&lt;/a&gt;&lt;br&gt;
for the most up to date details on the plugin itself.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;I want a simple way to make remaps into shell commands that can open new tmux&lt;br&gt;
windows, popups, or just run a command with context from the editor.&lt;/p&gt;

&lt;p&gt;For example I want to make remaps to do things like open the current file in lookatme.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight viml"&gt;&lt;code&gt;# &lt;span class="k"&gt;vim&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;terminal&lt;/span&gt;
nnoremap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Telegraph pipx run lookatme &lt;span class="p"&gt;{&lt;/span&gt;filepath&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;--&lt;/span&gt;live&lt;span class="p"&gt;-&lt;/span&gt;reload &lt;span class="p"&gt;--&lt;/span&gt;style gruvbox&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

# tmux session
nnoremap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;'telegraph'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;telegraph&lt;span class="p"&gt;({&lt;/span&gt;cmd&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'pipx run lookatme {filepath} --live-reload --style gruvbox-dark'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; how&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'tmux'&lt;/span&gt;&lt;span class="p"&gt;})&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

# tmux &lt;span class="k"&gt;popup&lt;/span&gt;
nnoremap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;S &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;'telegraph'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;telegraph&lt;span class="p"&gt;({&lt;/span&gt;cmd&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'pipx run lookatme {filepath} --live-reload --style gruvbox-dark'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; how&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'tmux_popup'&lt;/span&gt;&lt;span class="p"&gt;})&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main goal here is that remaps become one liners that can just be put&lt;br&gt;
directly in my &lt;code&gt;init.vim&lt;/code&gt; without creating a whole new lua module for each&lt;br&gt;
shell command I want to bind.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  how
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;telegraph&lt;/code&gt; takes in a &lt;code&gt;how&lt;/code&gt; argument to determine where to tun the command.j&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;term&lt;/code&gt;(default) runs command in the built in terminal&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;tmux&lt;/code&gt; runs command in a new tmux session and joins it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;tmux_popup&lt;/code&gt; runs command in a tmux popup window.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;tmux_popup_session&lt;/code&gt; runs command in a tmux session and displays it in a popup&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;subprocess&lt;/code&gt; runs command in a subprocess&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#format-strings"&gt;
  &lt;/a&gt;
  Format strings
&lt;/h2&gt;

&lt;p&gt;The current set of format strings that can be used with telegraph.  Placing&lt;br&gt;
these in braces &lt;code&gt;{}&lt;/code&gt; within your command will get rendered into something with&lt;br&gt;
context from the editor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;cword&lt;/code&gt; - the current word under the cursor&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cWORD&lt;/code&gt; - the current BIG Word under the cursor&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cline&lt;/code&gt; - the current line under the cursor&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;filepath&lt;/code&gt; - the filepath of the current file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;filename&lt;/code&gt; - the filename of the current file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;parent&lt;/code&gt; - the parent directory of the current file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;current_session_name&lt;/code&gt; - name of the current tmux session&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cwd&lt;/code&gt; - the current working directory&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#give-it-a"&gt;
  &lt;/a&gt;
  Give it a ⭐
&lt;/h2&gt;

&lt;p&gt;Check out the &lt;a href="https://github.com/WaylonWalker/Telegraph.nvim"&gt;repo&lt;/a&gt; and give&lt;br&gt;
it a star if its something that interests you.&lt;/p&gt;

</description>
      <category>vim</category>
      <category>linux</category>
    </item>
    <item>
      <title>What is useMemo hook in React.. </title>
      <author>NasreenKhalid</author>
      <pubDate>Tue, 05 Oct 2021 13:14:16 +0000</pubDate>
      <link>https://dev.to/nasreenkhalid/what-is-usememo-hook-in-react-2ppm</link>
      <guid>https://dev.to/nasreenkhalid/what-is-usememo-hook-in-react-2ppm</guid>
      <description>&lt;p&gt;Hooks are relatively new feature of react, they were introduced in React 16.8, they help us make use of state and react features from a function based component, for example useState, useEffect, useHistory and many others. Hooks help us to avoid the complexities of classes and make our code simpler to read and understand.&lt;br&gt;
In this article, we will go about the useMemo hook in React. In addition to understanding the functionality of this hook, it is also important to note that this hook has its importance from react interview perspective since many interviewers like to ask questions related to useMemo hook.&lt;/p&gt;

&lt;p&gt;Now let's start learning the useMemo hook:&lt;/p&gt;

&lt;p&gt;From the definition point of view, useMemo is a hook that is used in the functional component of React that returns a memoized value, for details &lt;a href="https://www.geeksforgeeks.org/react-js-usememo-hook/#:~:text=The%20useMemo%20is%20a%20hook,it%20returns%20the%20cached%20result."&gt;read here&lt;/a&gt;&lt;br&gt;
The basic purpose of useMemo hook is related to the fact that we try to avoid the unnecessary re-rendering of components and props in our program, so we make sure that only those components are re-rendered which witness a change in their values otherwise no need to re-render the component and slow down the performance, this will make your program efficient and improves the overall performance of your React app.&lt;br&gt;
Now let's make a simple application to demonstrate the use of useMemo hook. This program has the following components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increment button: starts from 0 and increase the count by 1&lt;/li&gt;
&lt;li&gt;Even num button: starts from 2 and returns even numbers going forward&lt;/li&gt;
&lt;li&gt;Also an evenNumDoouble() function which will return the twice value of the even number
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;evenNum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setEvenNum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;evenNumDouble&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;double&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;evenNum&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Even&lt;/span&gt; &lt;span class="nx"&gt;Numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;evenNum&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;even&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt; &lt;span class="nx"&gt;Double&lt;/span&gt; &lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;evenNumDouble&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;setEvenNum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evenNum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Even&lt;/span&gt; &lt;span class="nx"&gt;Numbers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the above code we will find out the below points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When we click the button 'Even Numbers' then the function evenNumDouble() is called since the state of 'evenNum' is changed&lt;/li&gt;
&lt;li&gt;But clicking the button 'Increment' also renders the evenNumDouble() function although the 'count' state is not changing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that every time the evenNumDouble() function is rendered unnecessarily on the page which reflects a less efficient code, we will fix this through the useMemo hook below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;evenNum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;setEvenNum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;memoHook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMemo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;evenNumDouble&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;double&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;evenNum&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},[&lt;/span&gt;&lt;span class="nx"&gt;evenNum&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Even&lt;/span&gt; &lt;span class="nx"&gt;Numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;evenNum&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;even&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt; &lt;span class="nx"&gt;Double&lt;/span&gt; &lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;memoHook&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;setCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;setEvenNum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evenNum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Even&lt;/span&gt; &lt;span class="nx"&gt;Numbers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Counter&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we have set the output of evenNumDouble() function into a constant  memoHook which will filter the function through the useMemo hook to check only if the specified variable (which is evenNum in this case) has changed then this function will be rendered otherwise not. Notice that the changing state variable is specified in square brackets at the end of useMemo hook similar to the useEffect hook.&lt;br&gt;
Now, if we run the above code then we will find out that our code runs the evenNumDouble() function only as required and not unnecessarily.&lt;/p&gt;

&lt;p&gt;In the same manner, if you have a large code base and your application is running slow then you can check whether there are any unnecessary renders on the page and restrict them using the useMemo hook, this definitely speeds up your app and makes it more efficient.&lt;/p&gt;

&lt;p&gt;That's all for today.&lt;br&gt;
Happy coding...&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>hooks</category>
      <category>webdev</category>
    </item>
    <item>
      <title>E-commerce website - adding/deleting product from database. Part 3</title>
      <author>Modern Web</author>
      <pubDate>Tue, 05 Oct 2021 13:11:54 +0000</pubDate>
      <link>https://dev.to/kunaal438/e-commerce-website-adding-deleting-product-from-database-part-3-18np</link>
      <guid>https://dev.to/kunaal438/e-commerce-website-adding-deleting-product-from-database-part-3-18np</guid>
      <description>&lt;p&gt;Hello, hope you'll are good. In previous part, we have made login/log out feature and a seller dashboard, where user can apply as a seller and can get his/her dashboard to manage his products. In today's blog, we'll make a product adding feature, which is very big feature. We'll see how to validate forms before storing to database, we'll see how to upload image on aws from front end, and we also add delete product, edit product, and much more.&lt;/p&gt;

&lt;p&gt;If you haven't watched previous parts. &lt;a href="https://www.youtube.com/playlist?list=PLqm86YkewF6S45smPYeNv01aFFKWZSgYD"&gt;Watch now&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To see demo or you want full coding tutorial video for better understanding. You can watch the tutorial below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/V9lxabUi4Xo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I appreciate if you can support me by subscribing my youtube channel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLqm86YkewF6S45smPYeNv01aFFKWZSgYD"&gt;Access Full Fullstack E-com Website video series&lt;/a&gt;, &lt;a href="https://www.patreon.com/posts/56979686"&gt;Source Code&lt;/a&gt;, &lt;a href="https://drive.google.com/drive/folders/1eIWchzFD2XELCwTwztOvYLYJsDDNvCQb?usp=sharing"&gt;Download Images&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h1&gt;

&lt;p&gt;Before start coding, you can see the folder structure, as we have a lot, a lot of code files, that I can't even make a file structure design as I do in my blogs. But you can see the screenshots below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZV23pGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zpdw0t38whgfxu0a9dh.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZV23pGB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zpdw0t38whgfxu0a9dh.PNG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pMi-QIDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5gjc2epeb7y5spook7l.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pMi-QIDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5gjc2epeb7y5spook7l.PNG" alt="Capture2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u2IJC3Ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvol0il2kervmfhlyp16.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u2IJC3Ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvol0il2kervmfhlyp16.PNG" alt="Capture3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWEAYohB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sadp41sr4hym7q2b231q.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWEAYohB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sadp41sr4hym7q2b231q.PNG" alt="Capture4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let, start coding. Let's first make &lt;code&gt;/add-product&lt;/code&gt; route to serve &lt;code&gt;addProduct.html&lt;/code&gt; page.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#serverjs"&gt;
  &lt;/a&gt;
  Server.js
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// add product&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/add-product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;staticPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;addProduct.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Make sure you add this route before &lt;code&gt;404&lt;/code&gt; route, as I said earlier, if you add any route after &lt;code&gt;404&lt;/code&gt; route, you'll always get &lt;code&gt;404&lt;/code&gt;page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After that, let's make add product page, where we can fill the product details.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-product-page-design"&gt;
  &lt;/a&gt;
  Add Product Page - Design
&lt;/h3&gt;

&lt;p&gt;First, start with HTML 5 template and make &lt;code&gt;loader&lt;/code&gt;, &lt;code&gt;alert&lt;/code&gt; element, &lt;code&gt;link&lt;/code&gt; all the CSS and JS files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    // other head tags
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"css/signup.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"css/addProduct.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/loader.gif"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"loader"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/error.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert-img"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert-msg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"js/token.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"js/addProduct.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After done with basic structure make form, of course.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/dark-logo.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"logo"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"product-name"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"product name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"short-des"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"short line about the product"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"des"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"detail description"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- product image --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"product-info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"product-image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;product image&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"upload-image-sec"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="c"&gt;&amp;lt;!-- upload inputs --&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/camera.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;upload image&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"upload-catalouge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fileupload"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"first-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;hidden&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"first-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"upload-image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fileupload"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"second-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;hidden&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"second-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"upload-image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fileupload"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"third-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;hidden&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"third-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"upload-image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"file"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fileupload"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"fourth-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;hidden&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"fourth-file-upload-btn"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"upload-image"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"select-sizes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;size available&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sizes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"size-checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"xs"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"xs"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"size-checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"s"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"s"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"size-checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"m"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"m"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"size-checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"l"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"l"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"size-checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"xl"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"size-checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"xxl"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"xxl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"size-checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"xxxl"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"xxxl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"product-price"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"actual-price"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"actual price"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"discount"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"discount percentage"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sell-price"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"selling price"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"stock"&lt;/span&gt; &lt;span class="na"&gt;min=&lt;/span&gt;&lt;span class="s"&gt;"20"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"item in sstocks (minimum 20)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tags"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter categories here, for example - Men, Jeans, Blue Jeans, Rough jeans (you sholud add men or women at start)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"checkbox"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tac"&lt;/span&gt; &lt;span class="na"&gt;checked&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"tac"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;clothing take 30% from your total sell&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"buttons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"add-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;add product&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"save-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;save draft&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's a lot of HTML at once, you can refer video for step by step guide, as we mainly focus on Javascript in the blog, but if you have any doubt with the any part feel free to ask me in discussions.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#addproductcss"&gt;
  &lt;/a&gt;
  addProduct.css
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.logo&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"checkbox"&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;270px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.product-info&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.75&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1.25&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="py"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.product-image&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#383838&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.upload-image-sec&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.select-sizes&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.upload-catalouge&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="py"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.upload-image&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f5f5f5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.upload-image&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nc"&gt;.sizes&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.size-checkbox&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-appearance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#383838&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#383838&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.size-checkbox&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.size-checkbox&lt;/span&gt;&lt;span class="nd"&gt;:checked&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#383838&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::-webkit-outer-spin-button&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::-webkit-inner-spin-button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-appearance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.product-price&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="py"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.product-price&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.buttons&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#383838&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;#save-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#a9a9a9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You maybe notice one new CSS selector &lt;code&gt;input::-webkit-outer-spin-button&lt;/code&gt;. If so, then this is simply select inputs arrow buttons, in this case, we want to hide our &lt;code&gt;number&lt;/code&gt; input's arrows. That's why I used this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::-webkit-outer-spin-button&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::-webkit-inner-spin-button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-appearance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And if you are following the series from the start, make to make a little change in &lt;code&gt;signpu.css&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text"&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"password"&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"email"&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt;
&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"number"&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;add&lt;/span&gt; &lt;span class="nt"&gt;this&lt;/span&gt; &lt;span class="nt"&gt;new&lt;/span&gt; &lt;span class="nt"&gt;line&lt;/span&gt;
&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;properties&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or you can simply replace whole selector with this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"checkbox"&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;properties&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1BYPkwwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxr20lqam5nic7ecpz61.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1BYPkwwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cxr20lqam5nic7ecpz61.png" alt="screenshot-localhost_3000-2021.10.04-19_18_16"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Great! Now, make form functional.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#form-submission"&gt;
  &lt;/a&gt;
  Form Submission
&lt;/h3&gt;

&lt;p&gt;Before submitting form to backend, we have to lot of JS to validate the form and to add specific triggers to the elements. &lt;/p&gt;

&lt;p&gt;So first, as this is for only sellers, first check whether user is logged in or not on accessing the page. And of course if he/she is not logged in then redirect user to login page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sessionStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// checknig user is logged in or not&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;compareToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;authToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
            &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;accessing user from &lt;code&gt;sessionStorage&lt;/code&gt; as I am storing user there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After done with this, let's start with adding dynamic pricing. What do I mean? Means let's add the feature where user add &lt;code&gt;actual price&lt;/code&gt; and a &lt;code&gt;discounted price&lt;/code&gt; and automatically we fill the &lt;code&gt;selling price&lt;/code&gt; with the exact discount. And also reversible.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#addproductjs"&gt;
  &lt;/a&gt;
  addProduct.js
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// price inputs&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actualPrice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#actual-price&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;discountPercentage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#discount&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sellingPrice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#sell-price&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Select all three inputs first, then add &lt;code&gt;click&lt;/code&gt; event to &lt;code&gt;discountPercentage&lt;/code&gt; and there perform calculation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;discountPercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;discountPercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;discountPercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;discount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;discountPercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;sellingPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;discount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above, code i am just checking if discount percentage is more then 100 then set that to 90, as nobody really want to sell free product, right? And after that just doing simple percentage to value calculation and setting up the &lt;code&gt;sellingPrice&lt;/code&gt; value.&lt;/p&gt;

&lt;p&gt;After that add reverse for &lt;code&gt;sellingPrice&lt;/code&gt; also&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;sellingPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;discount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sellingPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;discountPercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;discount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great! We got the feature working. After done with this. Let's work with aws to store uploaded image online. To see the aws setup refer tutorial from this &lt;a href="https://youtu.be/V9lxabUi4Xo?t=2061"&gt;point&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well we'll just see here, how to config it in server side. Before that let's understand what we'll exactly do.&lt;/p&gt;

&lt;p&gt;First we config the aws in our server, then we make request to aws to give us a secure link. After we got the link, we'll send that link to front end. From front end, when user upload image using &lt;code&gt;file&lt;/code&gt; input. He/she make &lt;code&gt;PUT&lt;/code&gt; request to the generated link we got from the server to upload the image.And at last, we store that link in an array, to keep track.&lt;/p&gt;

&lt;p&gt;So, install these two packages first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i aws-sdk dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;aws-sdk&lt;/code&gt; - for aws of course&lt;br&gt;
&lt;code&gt;dotenv&lt;/code&gt; - for environment variables to secure your credentials.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#serverjs"&gt;
  &lt;/a&gt;
  Server.js
&lt;/h6&gt;

&lt;p&gt;AWS Config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// aws config&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;aws&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-sdk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// aws parameters&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ap-south-1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucketName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ecom-website-tutorial-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;accessKeyId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AWS_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;secretAccessKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AWS_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;region&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="nx"&gt;accessKeyId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="nx"&gt;secretAccessKey&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// init s3&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;aws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;S3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;S3&lt;/code&gt; is the aws service which we use to store the files.&lt;br&gt;
After this, make a generate link function to generate a link.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// generate image upload link&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateUrl&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10000000000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;.jpg`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;imageName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;Expires&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//300 ms&lt;/span&gt;
        &lt;span class="na"&gt;ContentType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image/jpeg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uploadUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSignedUrlPromise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;putObject&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;uploadUrl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make a &lt;code&gt;async&lt;/code&gt; function, as we don;t know how much time it will take to get the response, and our other codes are dependent on this. And &lt;code&gt;getSignedUrlPromise&lt;/code&gt; is a aws method to get a &lt;code&gt;put&lt;/code&gt; link. You can refer their documentation also.&lt;/p&gt;

&lt;p&gt;Now just make a &lt;code&gt;/s3url&lt;/code&gt; route, which will deliver the link to frontend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// get the upload link&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/s3url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;generateUrl&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great! Now we have to access this in frontend. So, let's do it.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#addproductjs"&gt;
  &lt;/a&gt;
  addProduct.js
&lt;/h6&gt;

&lt;p&gt;Select upload inputs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// upload image handle&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;uploadImages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.fileupload&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imagePaths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt; &lt;span class="c1"&gt;// will store all uploaded images paths;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now loo through each upload button and add change event to them. And access the uploaded file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;uploadImages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;fileupload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fileupload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fileupload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
            &lt;span class="c1"&gt;// means user uploaded an image&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;upload image only&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this just use &lt;code&gt;fetch&lt;/code&gt; to get the url from server, and then again use &lt;code&gt;fetch&lt;/code&gt; make &lt;code&gt;PUT&lt;/code&gt; request to upload the image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="c1"&gt;// means user uploaded an image&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/s3url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PUT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;multipart/form-data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;
        &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are done, we have successfully uploaded image. Now to make it visible to user. Just use &lt;code&gt;style&lt;/code&gt; attribute to set element's &lt;code&gt;background-image&lt;/code&gt;,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="c1"&gt;// means user uploaded an image&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/s3url&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PUT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;multipart/form-data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;
        &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;imageUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;imagePaths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`label[for=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileupload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;]`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`url(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;productImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.product-image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;productImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`url(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;imageUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jZQFKhvt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqjxfj9mvmnum8prvvth.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jZQFKhvt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqjxfj9mvmnum8prvvth.PNG" alt="Capture5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, whats left? I know a lot of things XD Now, make as we have custom checkbox, to track size stores, we have to make a function to keep track of it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// store size function&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;storeSizes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sizes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sizeCheckBox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.size-checkbox&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;sizeCheckBox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above code is very simple, I guess you got it. So now let's select all the form element which left.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// form submission&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;productName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#product-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;shortLine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#short-des&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;des&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#des&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sizes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt; &lt;span class="c1"&gt;// will store all the sizes&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#stock&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#tags&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#tac&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// buttons&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addProductBtn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#add-btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveDraft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#save-btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add &lt;code&gt;click&lt;/code&gt; event to &lt;code&gt;addProductBtn&lt;/code&gt; and class &lt;code&gt;storeSizes&lt;/code&gt; function to store the size.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;addProductBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;storeSizes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// validate form&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good, and to validate the form, we'll use separate function. But the function return true or false base on the validation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;validateForm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;productName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enter product name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shortLine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;shortLine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;short description must be between 10 to 100 letters long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;des&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enter detail description about the product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;imagePaths&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;// image link array&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;upload atleast one product image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;// size array&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;select at least one size&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;discount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;sellingPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you must add pricings&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you should have at least 20 items in stock&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enter few tags to help ranking your product in search&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;tac&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you must agree to our terms and conditions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;addProductBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;storeSizes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// validate form&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;validateForm&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt; &lt;span class="c1"&gt;// validateForm return true or false while doing validation&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you notice, in &lt;code&gt;validateForm&lt;/code&gt; instead of returning &lt;code&gt;false&lt;/code&gt;. I am returning &lt;code&gt;showAlert&lt;/code&gt;, why is that, as I don't want to write &lt;code&gt;return false&lt;/code&gt; in each &lt;code&gt;if else&lt;/code&gt; So I just wrote it inside &lt;code&gt;showAlert&lt;/code&gt; function.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#tokenjs"&gt;
  &lt;/a&gt;
  Token.js
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// alert function&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;showAlert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// previous code&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run the code, you'll get the alert. But, there is an issue. We'll get the alert on the top of the page. When submitting the form from the bottom, because I didn't set its position to &lt;code&gt;fixed&lt;/code&gt;.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#signupcss"&gt;
  &lt;/a&gt;
  Signup.css
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* alert */&lt;/span&gt;
&lt;span class="nc"&gt;.alert-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;previous&lt;/span&gt; &lt;span class="err"&gt;code&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The same i did with &lt;code&gt;loader&lt;/code&gt;.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#signupcss"&gt;
  &lt;/a&gt;
  Signup.css
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.loader&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, doing so far, we are also done, with validations. So now, just submit the data. But to submit the data, first we need the data, right? For that make another function &lt;code&gt;productData()&lt;/code&gt; which will return the data.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#addproductjs"&gt;
  &lt;/a&gt;
  addProduct.js
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;productData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;productName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;shortDes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;shortLine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;des&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;des&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;imagePaths&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;discount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;discountPercentage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;sellPrice&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sellingPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;tac&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;tac&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now once we got the data in front end, let's submit it using our &lt;code&gt;sendData()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;addProductBtn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;storeSizes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// validate form&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;validateForm&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt; &lt;span class="c1"&gt;// validateForm return true or false while doing validation&lt;/span&gt;
        &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;block&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;productData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;sendData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/add-product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's great. But do we have a &lt;code&gt;/add-product&lt;/code&gt; POST route in our server. I don't think so, let's make that.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#serverjs"&gt;
  &lt;/a&gt;
  server.js
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// add product&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/add-product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;shortDes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;des&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;discount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sellPrice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;stock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// validation&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enter product name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shortDes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;shortDes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;short description must be between 10 to 100 letters long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;des&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enter detail description about the product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;// image link array&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;upload atleast one product image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;// size array&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;select at least one size&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;actualPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;discount&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;sellPrice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you must add pricings&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you should have at least 20 items in stock&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enter few tags to help ranking your product in search&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;tac&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;you must agree to our terms and conditions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// add product&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;docName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;;
    db.collection('products').doc(docName).set(req.body)
    .then(data =&amp;gt; {
        res.json({'product': name});
    })
    .catch(err =&amp;gt; {
        return res.json({'alert': 'some error occurred. Try again'});
    })
})
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above route, I am just simply accessing the variables from the request, and performing validations on the data. Validation are same as front end, the difference is we were returning &lt;code&gt;showAlert&lt;/code&gt; there, ans here we are returning &lt;code&gt;JSON&lt;/code&gt;. And at last I am generating a random doc name following product's name. and adding the data to the firestore.&lt;/p&gt;

&lt;p&gt;Now just to receive the confirmation of product add, we can edit the &lt;code&gt;processData()&lt;/code&gt; little bit in &lt;code&gt;token.js&lt;/code&gt; file.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#tokenjs"&gt;
  &lt;/a&gt;
  token.js
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;processData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// previous conditions&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/seller&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, we are officially done, with doing validations to adding the product to the firsbase. Great job. Sing the blog is begin to be lengthy. I think that's enough for today guys. But of course to make &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;edit&lt;/code&gt;, and other features. Refer &lt;a href="https://youtu.be/V9lxabUi4Xo"&gt;video tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope you understood each and everything. If you have doubt or I missed something let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#articles-you-may-find-useful"&gt;
  &lt;/a&gt;
  Articles you may find Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-the-best-css-effects-of-all-time-most-underrated-web-ux-2chj"&gt;Best CSS Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/quick-css-make-infinity-loading-animation-for-your-next-website-187k"&gt;Infinte CSS loader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/how-to-create-disney-plus-clone-for-beginner-in-2021-html-css-js-m3p"&gt;Disney+ Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/create-working-youtube-clone-with-search-box-youtube-api-2a6e"&gt;Youtube API - Youtube Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/how-to-create-netflix-clone-netflix-clone-with-hmtl-css-js-989"&gt;TMDB - Netflix Clone&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I really appreciate if you can subscribe my youtube channel. I create awesome web contents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gs5zBA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jeitpawvax07cx7r9yoa.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/posts/56979686"&gt;Source Code&lt;/a&gt;, &lt;a href="https://paypal.me/modernwebchannel"&gt;Donate me on Paypal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your donation really motivates me to do more amazing tutorials like this. Support me on &lt;a href="https://www.patreon.com/modernweb"&gt;patreon&lt;/a&gt;, &lt;a href="https://ko-fi.com/modernweb"&gt;Buy me a coffee&lt;/a&gt;, &lt;a href="https://paypal.me/modernwebchannel"&gt;Donate me on paypal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For reading. &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Latest top 21 APM tools [open-source included] 🧑‍💻🚀</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Tue, 05 Oct 2021 12:58:54 +0000</pubDate>
      <link>https://dev.to/signoz/latest-top-21-apm-tools-open-source-included-3da8</link>
      <guid>https://dev.to/signoz/latest-top-21-apm-tools-open-source-included-3da8</guid>
      <description>&lt;p&gt;Application Performance Monitoring (APM) tools are a critical component of distributed applications now. But choosing the right APM tool can be tricky. In this article, we go through a list of the top 21 APM tools including open-source APM tools which can help monitor and improve your application performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-application-performance-monitoringapm"&gt;
  &lt;/a&gt;
  What is application performance monitoring(APM)?
&lt;/h2&gt;

&lt;p&gt;Application performance monitoring is the process of keeping your application's health in check by tracking key performance metrics. APM tools enable you to be proactive about meeting the demands of your customers. With distributed systems, performance metrics can be gathered from various components of your application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Services&lt;/li&gt;
&lt;li&gt;Infrastructure&lt;/li&gt;
&lt;li&gt;Network&lt;/li&gt;
&lt;li&gt;Hosts and containers&lt;/li&gt;
&lt;li&gt;Third-party APIs&lt;/li&gt;
&lt;li&gt;User Interactions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Performance monitoring enables engineering and IT teams to resolve issues quickly and ensure system availability, maintain SLAs, optimize service performance and improve response times for a better user experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-are-apm-tools-needed"&gt;
  &lt;/a&gt;
  Why are APM tools needed?
&lt;/h2&gt;

&lt;p&gt;A robust APM tool can provide your engineering teams the much-needed visibility and context into the inner workings of your application. Modern distributed systems have enabled scale at a global scale but at the same time have increased the complexity of an application.&lt;/p&gt;

&lt;p&gt;A few essential APM benefits in solving performance issues are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gives a &lt;strong&gt;centralized context and visibility&lt;/strong&gt; into the app's inner workings across a distributed system&lt;/li&gt;
&lt;li&gt;Allows you to &lt;strong&gt;proactively identify issues&lt;/strong&gt; that can cause breakdown and solves latency issues&lt;/li&gt;
&lt;li&gt;Helps you to &lt;strong&gt;meet end-user expectations&lt;/strong&gt; and demands&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Increase revenue&lt;/strong&gt; by protecting against downtime and user churn&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Saves engineering bandwidth&lt;/strong&gt; in debugging and troubleshooting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;List of latest top 21 APM tools:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#signoz"&gt;SigNoz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dynatrace"&gt;Dynatrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#new-relic"&gt;New Relic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#appdynamics"&gt;AppDynamics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#jaeger"&gt;Jaeger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#instana"&gt;Instana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#datadog"&gt;DataDog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prometheus"&gt;Prometheus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#honeycomb"&gt;Honeycomb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lightstep"&gt;Lightstep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zipkin"&gt;Zipkin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#graphite"&gt;Graphite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splunk"&gt;Splunk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#grafana-labs"&gt;Grafana Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#elastic-apm"&gt;Elastic APM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pinpoint"&gt;Pinpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apache-skywalking"&gt;Apache Skywalking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#appoptics-solarwinds"&gt;AppOptics(Solarwinds)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#aws-x-ray"&gt;AWS X-Ray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logicmonitor"&gt;LogicMonitor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stackify-retrace"&gt;Stackify Retrace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#top-21-apm-tools-opensource-included"&gt;
  &lt;/a&gt;
  Top 21 APM tools [open-source included]
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#signoz"&gt;
  &lt;/a&gt;
  SigNoz
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;&lt;/strong&gt; is a full-stack open-source APM and observability tool. It provides a unified UI for application metrics and traces so that there is no need to switch between different tools like Jaeger and Prometheus. It also provides infrastructure metrics like &lt;/p&gt;

&lt;p&gt;Using SigNoz, you can track things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User requests per second&lt;/li&gt;
&lt;li&gt;50th, 90th, and 99th percentile latencies of microservices in your application&lt;/li&gt;
&lt;li&gt;Error-rate of requests to your services&lt;/li&gt;
&lt;li&gt;Slow endpoints in your application&lt;/li&gt;
&lt;li&gt;Infrastructure metrics like CPU load average, system memory usage&lt;/li&gt;
&lt;li&gt;User requests across different microservices using distributed tracing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An open-source tool with the capabilities of SaaS vendors, SigNoz is a great choice for a robust application performance monitoring tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKFqZ_PP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_charts_application_metrics.png" alt="SigNoz dashboard showing popular RED metrics"&gt;&lt;/a&gt;SigNoz UI showing application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOoIlefK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/common/signoz_flamegraphs.png" alt="Detailed Flamegraphs &amp;amp; Gantt charts"&gt;&lt;/a&gt;Spans of a trace visualized with the help of flamegraphs and gantt charts in SigNoz dashboard&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JZFv-FZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/signoz_custom_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JZFv-FZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/signoz_custom_dashboard-min.jpg" alt="Custom metrics dashboard to monitor infratrusture metrics"&gt;&lt;/a&gt;Custom metrics dashboard where you can monitor popular metrics like CPU Load Average, CPU Utilization, System Memory Usage&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynatrace"&gt;
  &lt;/a&gt;
  Dynatrace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.dynatrace.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Dynatrace&lt;/b&gt;&lt;/a&gt; is an extensive SaaS enterprise APM tool targeting a broad spectrum of monitoring needs of large-scale enterprises. It provides an AI engine called Davis to automate things like root cause analysis and anomaly detection.&lt;/p&gt;

&lt;p&gt;Dynatrace also provides a different solution for infrastructure monitoring, application security, and cloud automation. The pricing depends on the product you want to opt for.&lt;/p&gt;

&lt;p&gt;Full-stack monitoring, the product aimed to provide observability for apps, is priced at $69 per month for 8 GB per host if billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3-qIUKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_dynatrace-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z3-qIUKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_dynatrace-min.png" alt="Dynatrace dashboard"&gt;&lt;/a&gt;Dynatrace dashboard (Source: Dynatrace website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-relic"&gt;
  &lt;/a&gt;
  New Relic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://newrelic.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;New Relic&lt;/b&gt;&lt;/a&gt; is one of the oldest companies in the application performance monitoring domain. It offers multiple solutions to enterprises for performance monitoring. &lt;/p&gt;

&lt;p&gt;Some of the key features of the New Relic APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Language support for  Java, .NET, Node.js, PHP, Python, Go and Ruby&lt;/li&gt;
&lt;li&gt;Distributed tracing and sampling options for a wide range of technology stack&lt;/li&gt;
&lt;li&gt;Correlation of tracing data with other aspects of application infrastructure and user monitoring&lt;/li&gt;
&lt;li&gt;Fully managed cloud-native experience with on-demand scalability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tkfu2Hx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/new_relic_apm-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tkfu2Hx6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/new_relic_apm-min.jpg" alt="New Relic dashboard"&gt;&lt;/a&gt;New Relic APM summary page (Source: New Relic website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#appdynamics"&gt;
  &lt;/a&gt;
  AppDynamics
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.appdynamics.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;AppDynamics&lt;/b&gt;&lt;/a&gt; is an extensive SaaS tool that promises to correlate business metrics and application performance metrics. Its platform includes an APM tool that provides code-level observability.&lt;/p&gt;

&lt;p&gt;Some of the key features of the AppDynamics APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Language support for Java, .NET, Node.js, PHP, Python, C/C++ and more&lt;/li&gt;
&lt;li&gt;Troubleshoot issues like slow response times and application errors&lt;/li&gt;
&lt;li&gt;Discover application topology automatically&lt;/li&gt;
&lt;li&gt;An alert system to alert you to issues in the context of business transactions&lt;/li&gt;
&lt;li&gt;Pricing starts at $60/month per CPU core&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SdvcWnNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_appdynamics-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SdvcWnNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_appdynamics-min.jpg" alt="Appdynamics dashboard"&gt;&lt;/a&gt;A Sample AppDynamics targeted primarily for Development teams (Source: AppDynamics documentation)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jaeger"&gt;
  &lt;/a&gt;
  Jaeger
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.jaegertracing.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Jaeger&lt;/b&gt;&lt;/a&gt; is an open-source APM tool developed at Uber, which was later donated to Cloud Native Computing Foundation(CNCF). Inspired by Google's Dapper, Jaeger is a distributed tracing system.&lt;/p&gt;

&lt;p&gt;It is used for monitoring and troubleshooting microservices-based distributed systems. Some of its key features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Distributed context propagation&lt;/li&gt;
&lt;li&gt;Distributed transaction monitoring&lt;/li&gt;
&lt;li&gt;Root cause analysis&lt;/li&gt;
&lt;li&gt;Service dependency analysis&lt;/li&gt;
&lt;li&gt;Performance / latency optimization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PBiBbLYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/jaeger_ui-min.png" alt="Jaeger dashboard"&gt;&lt;/a&gt;Jaeger UI showing services and corresponding traces&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instana"&gt;
  &lt;/a&gt;
  Instana
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.instana.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Instana&lt;/b&gt;&lt;/a&gt; is an enterprise observability and automated APM tool. It uses an agent to discover and monitor components. This agent needs to be installed on every host that is to be monitored.&lt;/p&gt;

&lt;p&gt;The agents deploy sensors crafted to capture data from different technologies. Sensors automatically collect configuration, changes, metrics, and events.&lt;/p&gt;

&lt;p&gt;Instana charges $75 per host/per month if billed annually. It also supports open standards like Prometheus, StatsD, OpenTracing, and Opencensus.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5nFx2rJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_instana-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5nFx2rJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_instana-min.png" alt="Instana dashboard"&gt;&lt;/a&gt;Instana Dashboard (Source: Instana Docs)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datadog"&gt;
  &lt;/a&gt;
  DataDog
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.datadoghq.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;DataDog&lt;/b&gt;&lt;/a&gt; is an enterprise APM tool that provides monitoring products ranging from infrastructure monitoring, log management, network monitoring to security monitoring. Its application performance monitoring tool provides end-to-end distributed tracing from frontend devices to databases.&lt;/p&gt;

&lt;p&gt;Some of the key features of the DataDog APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Out of box performance dashboards for web services, queues, and databases to monitor requests, errors, and latency&lt;/li&gt;
&lt;li&gt;Correlation of distributed tracing to browser sessions, logs, profiles, network, processes, and infrastructure metrics&lt;/li&gt;
&lt;li&gt;Can ingest 50 traces per second per APM host&lt;/li&gt;
&lt;li&gt;Service maps to understand service dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pricing starts at $31 per host per month if billed annually. It also has an on-demand option which starts at $36.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iklAHOcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_datadog-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iklAHOcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_datadog-min.jpg" alt="DataDog dashboard"&gt;&lt;/a&gt;DataDog APM tool dashboard (Source: DataDog website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prometheus"&gt;
  &lt;/a&gt;
  Prometheus
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://prometheus.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Prometheus&lt;/b&gt;&lt;/a&gt; is an open-source tool used to capture time-series data as metrics. These metrics can be aggregated to give insights into the behavior of our systems.&lt;/p&gt;

&lt;p&gt;It was initially developed at SoundCloud in 2012 before being released as an open-source project. It was the second project to graduate from CNCF after Kubernetes. Prometheus can only be used to capture metrics, and nothing else.&lt;/p&gt;

&lt;p&gt;Prometheus monitoring stack includes the following components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prometheus server&lt;/li&gt;
&lt;li&gt;Client Libraries &amp;amp; Exporters&lt;/li&gt;
&lt;li&gt;Push Gateway&lt;/li&gt;
&lt;li&gt;Alertmanager&lt;/li&gt;
&lt;li&gt;Visualization Layer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The visualization layer of Prometheus is basic, but it is generally used with Grafana, a visualization tool to create charts and graphs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G78Ot-YT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_prometheus_grafana-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G78Ot-YT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_prometheus_grafana-min.jpg" alt="Prometheus dashboard"&gt;&lt;/a&gt;Grafana used for visualization with Prometheus&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#honeycomb"&gt;
  &lt;/a&gt;
  Honeycomb
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.honeycomb.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Honeycomb&lt;/b&gt;&lt;/a&gt; is a cloud-based APM tool with support for events, logs, and traces. Honeycomb provides an easy-to-use performance monitoring tracing solution.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Honeycomb APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quickly diagnose bottlenecks and optimize performance with a waterfall view to understand how your system is processing service requests&lt;/li&gt;
&lt;li&gt;Full-text search over trace spans and toggle to collapse and expand sections of trace waterfalls&lt;/li&gt;
&lt;li&gt;Provides Honeycomb beelines to automatically define key pieces of trace data like serviceName, name, timestamp, duration, traceID, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BedXJ_5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/honeycomb_tracing_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BedXJ_5J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/honeycomb_tracing_dashboard-min.jpg" alt="Honeycomb APM dashboard (Source: Honeycomb website)"&gt;&lt;/a&gt;Grafana used for visualization with Prometheus&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lightstep"&gt;
  &lt;/a&gt;
  Lightstep
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://lightstep.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Lightstep&lt;/b&gt;&lt;/a&gt; is an APM tool focused on distributed tracing. It provides complete visibility to distributed systems based on microservices and multi-cloud environments. It uses open-source friendly data ingestion methods and is built to support applications of any scale.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Lightstep APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Move seamlessly from a high-level view of dependencies to specific services, operations, traces, or any other signals contributing to issues in production&lt;/li&gt;
&lt;li&gt;Provides full-context root cause analysis with exact logs, metrics, and traces to simplify and solve complex investigations&lt;/li&gt;
&lt;li&gt;Auto-instrumentation libraries powered by OpenTelemetry, an open-source standard for code instrumentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wvvPe5sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/lightstep_tracing_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wvvPe5sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/lightstep_tracing_dashboard-min.jpg" alt="Lightstep dashboard"&gt;&lt;/a&gt;Lighstep APM tool dashboard showing a distributed trace (Source: Lightstep website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zipkin"&gt;
  &lt;/a&gt;
  Zipkin
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://zipkin.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Zipkin&lt;/b&gt;&lt;/a&gt; is an open-source APM tool used for distributed tracing. Zipkin captures timing data need to troubleshoot latency problems in service architectures. In distributed systems, it's a challenge to trace user requests across different services. If a request fails or takes too long, distributed tracing helps to identify the events that caused it.&lt;/p&gt;

&lt;p&gt;Zipikin was initially developed at Twitter and drew inspiration from Google's Dapper. Unique identifiers called Trace ID are attached to each request which then identifies that request across services.&lt;/p&gt;

&lt;p&gt;Zipkin's architecture includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reporters to send data to Zipkin&lt;/li&gt;
&lt;li&gt;Collectors which persist trace data to storage&lt;/li&gt;
&lt;li&gt;API to query data&lt;/li&gt;
&lt;li&gt;UI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PbW_eGbl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/Zipkin_ui-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PbW_eGbl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/Zipkin_ui-min.jpg" alt="Zipkin dashboard"&gt;&lt;/a&gt;Zipkin UI (Source: Zipkin's GitHub repo)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphite"&gt;
  &lt;/a&gt;
  Graphite
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://graphiteapp.org/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Graphite&lt;/b&gt;&lt;/a&gt; is a time-series monitoring tool that was released in 2008. Graphite consists of three software components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;carbon -&lt;/strong&gt; a service that listens for time-series data&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;whisper -&lt;/strong&gt; a database library for storing time-series data&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;graphite-web -&lt;/strong&gt; Graphite's user interface &amp;amp; API for rendering graphs and dashboards&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The primary purpose of Graphite is to store numeric time-series data and render graphs of this data. Time-series data is a sequence of data points for a particular metric indexed over time. It can give you insights into the performance of any application, process, or service.&lt;/p&gt;

&lt;p&gt;Graphite does not do data collection. Instead, your app needs to be configured to send data to Graphite which passively listens for data using Carbon - a Twisted daemon. Carbon then sends the data to Whisper to store the time-series data to a filesystem.&lt;/p&gt;

&lt;p&gt;Graphite comes with an in-built UI, but that is fairly basic. Usually, for visualizations, Graphite is clubbed together with Grafana, which is an open-source visualization tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0kttnfZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_graphite_dashboard-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0kttnfZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_graphite_dashboard-min.jpg" alt="Graphite's UI"&gt;&lt;/a&gt;Graphite's UI&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#splunk"&gt;
  &lt;/a&gt;
  Splunk
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.splunk.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Splunk&lt;/b&gt;&lt;/a&gt; provides a comprehensive APM tool that is built for cloud-native enterprises. Splunk APM allows you to collect all traces instead of a sample set. It also provides service maps to offer DevOps teams visibility into interactions between different services, dependencies, and performance.&lt;/p&gt;

&lt;p&gt;Some of the key features of Splunk APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Full-Fidelity Trace Ingestion and Retention&lt;/li&gt;
&lt;li&gt;Service Mapping to understand dependency among your services&lt;/li&gt;
&lt;li&gt;Grouping of traces with tags to filter out common business workflows&lt;/li&gt;
&lt;li&gt;Alert system to alert DevOps teams based on static thresholds, sudden changes, or historical anomalies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Splunk APM pricing starts at $55 per host per month, billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EnerMJ4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_splunk-min.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EnerMJ4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/08/observability_tools_splunk-min.png" alt="Splunk Dashboard"&gt;&lt;/a&gt;Splunk Dashboard (Source: Splunk website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grafana-labs"&gt;
  &lt;/a&gt;
  Grafana Labs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://grafana.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Grafana&lt;/b&gt;&lt;/a&gt; is popular open-source analytics and interactive visualization web layer. It supports many different storage backends for time-series data. It can be connected to data sources like Graphite, InfluxDB, ElasticSearch, Prometheus, and many more. For traces, it supports Jaeger, Tempo, X-Ray, and Zipkin data sources.&lt;/p&gt;

&lt;p&gt;Grafana offers plugins, dashboards, alerts, and different user-level access for governance as an APM tool. In addition, it provides two versions of services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Grafana cloud - You can send your data to Grafana cloud dashboards. It provides solutions such as Grafana Cloud Logs, Grafana Cloud Metrics, and Grafana Cloud Traces.&lt;/li&gt;
&lt;li&gt;Grafana Enterprise stack - It provides support for metrics and logs with Grafana installed within your infrastructure. It also comes with expert support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBasKvPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_grafana_labs-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBasKvPt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_grafana_labs-min.jpg" alt="Grafana Dashboard"&gt;&lt;/a&gt;Grafana Dashboard (Source: Grafana Labs website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elastic-apm"&gt;
  &lt;/a&gt;
  Elastic APM
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.elastic.co/apm/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Elastic APM&lt;/b&gt;&lt;/a&gt; is an Application Performance Monitoring system built on the Elastic Stack - ElasticSearch, Logstash, and Kibana.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Elastic APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Root cause investigations using ElasticSearch&lt;/li&gt;
&lt;li&gt;Service maps to see how services are connected&lt;/li&gt;
&lt;li&gt;Distributed tracing to identify latency issues&lt;/li&gt;
&lt;li&gt;Anomaly Detection with machine learning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e3N_ftzU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_elastic-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e3N_ftzU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_elastic-min.jpg" alt="Elastic APM Dashboard"&gt;&lt;/a&gt;Service maps on Elastic APM Dashboard (Source: Elastic APM)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pinpoint"&gt;
  &lt;/a&gt;
  Pinpoint
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://pinpoint-apm.github.io/pinpoint/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Pinpoint&lt;/b&gt;&lt;/a&gt; is an open-source APM tool meant for large-scale distributed systems written in Java, Python, or PHP. This project is inspired and modeled after Google's Dapper. It traces transactions across different components of an application and provides insights to identify potential issues.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Pinpoint APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application topology at a glance&lt;/li&gt;
&lt;li&gt;Real-time application monitoring&lt;/li&gt;
&lt;li&gt;Code-level visibility to every transaction&lt;/li&gt;
&lt;li&gt;APM agents which require minimal changes to code&lt;/li&gt;
&lt;li&gt;Minimal impact on performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main purpose of the Pinpoint APM tool is to identify and track how transactions flow between different components of a system. It does not track logs and metrics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l718sqNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_pinpoint-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l718sqNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_pinpoint-min.jpg" alt="Pinpoint APM Dashboard"&gt;&lt;/a&gt;Pinpoint Dashboard (Source: Pinpoint documentation)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apache-skywalking"&gt;
  &lt;/a&gt;
  Apache Skywalking
&lt;/h3&gt;

&lt;p&gt;This &lt;a href="https://skywalking.apache.org/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;open-source APM tool&lt;/b&gt;&lt;/a&gt; is focused on monitoring distributed systems, including microservices, cloud-native, and container-based architectures.&lt;/p&gt;

&lt;p&gt;Some of the key features of the Apache Skywalking APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Service, service instance, endpoint metrics analysis&lt;/li&gt;
&lt;li&gt;Root cause analysis with code profiling&lt;/li&gt;
&lt;li&gt;Service topology map analysis&lt;/li&gt;
&lt;li&gt;Slow services and endpoint detection&lt;/li&gt;
&lt;li&gt;Distributed tracing and context propagation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Skywalking also supports the collection of telemetry data in multiple formats.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qqWxwIzm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_skywalking_ui-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qqWxwIzm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_skywalking_ui-min.jpg" alt="Apache Skywalking APM Dashboard"&gt;&lt;/a&gt;Skywalking Dashboard (Source: Skywalking website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#appoptics-solarwinds"&gt;
  &lt;/a&gt;
  AppOptics (Solarwinds)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.solarwinds.com/appoptics" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;AppOptics&lt;/b&gt;&lt;/a&gt;  is a SaaS-based APM tool used for hybrid and cloud-native environments. Some of the key features of AppOptics APM tool includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Language supported: .Net, Go, Java, Node.js, PHP, Python and Ruby&lt;/li&gt;
&lt;li&gt;Application service topology maps&lt;/li&gt;
&lt;li&gt;Identify the root cause of performance issues&lt;/li&gt;
&lt;li&gt;Distributed tracing, host and IT infrastructure monitoring with dozens of integrations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yqwdn5GG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_appoptics-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yqwdn5GG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_appoptics-min.jpg" alt="Appoptics Dashboard"&gt;&lt;/a&gt;AppOptics dashboard (Source: AppOptics dashboard)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-xray"&gt;
  &lt;/a&gt;
  AWS X-Ray
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/xray/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;AWS X-Ray&lt;/b&gt;&lt;/a&gt; helps developers to analyze and debug distributed applications in production. AWS X-Ray can only be used with applications running on Amazon EC2. Using AWS X-Ray, you can identify the root cause of performance issues and errors.&lt;/p&gt;

&lt;p&gt;Some of the key features of AWS X-Ray includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provides end-to-end tracing by gathering data from individual services and presenting a cross-service view&lt;/li&gt;
&lt;li&gt;Service Maps to give you an overview of how services are connected in the application architecture&lt;/li&gt;
&lt;li&gt;Server and client-side latency detection&lt;/li&gt;
&lt;li&gt;Data annotation and filtering to add business-specific metadata to traces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l0F3SUf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/aws_xray_traces-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l0F3SUf4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/aws_xray_traces-min.jpg" alt="AWS X-Ray Dashboard"&gt;&lt;/a&gt;User request tracking using traces on AWS X-Ray dashboard&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#logicmonitor"&gt;
  &lt;/a&gt;
  LogicMonitor
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.logicmonitor.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;LogicMonitor&lt;/b&gt;&lt;/a&gt; is an APM tool suited for enterprises and MSPs. It provides multiple monitoring services including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Infrastructure monitoring&lt;/li&gt;
&lt;li&gt;Cloud monitoring&lt;/li&gt;
&lt;li&gt;Network monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S0jqPllS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_logicmonitor-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0jqPllS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_logicmonitor-min.jpg" alt="LogicMonitor APM Dashboard"&gt;&lt;/a&gt;LogicMonitor APM dashboard (Source: LogicMonitor website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stackify-retrace"&gt;
  &lt;/a&gt;
  Stackify Retrace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://stackify.com/retrace/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Stackify Retrace&lt;/b&gt;&lt;/a&gt; is an APM tool that integrates code profiling, error tracking, application logs and more. Some of the key features of the Stackify Retrace includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Language support: .NET, PHP, Node.js, Ruby, Python, or Java stack&lt;/li&gt;
&lt;li&gt;Centralized logging and error-tracking&lt;/li&gt;
&lt;li&gt;Application and server metrics&lt;/li&gt;
&lt;li&gt;Identify bottlenecks in your tech stack by seeing top web requests, slow web requests, SQL query performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--20n0pPB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_stackify_retrace-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--20n0pPB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https:/signoz.io/img/blog/2021/09/apm_tools_stackify_retrace-min.jpg" alt="Stackify Retrace APM Dashboard"&gt;&lt;/a&gt;Stackify Retrace dashboard (Source: Stackify website)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-apm-tool-for-you"&gt;
  &lt;/a&gt;
  How to choose the right APM tool for you?
&lt;/h2&gt;

&lt;p&gt;APM tools are now a critical service for any digital business of decent size and scale. User expectations are sky-high, and a few milliseconds can cost you millions in revenue. APM tools provide engineering times the right insights to resolve issues quickly. A robust modern-day APM tool can also help engineering teams to be proactive about identifying potential bottlenecks.&lt;/p&gt;

&lt;p&gt;In our view, APM tools should be developer-first tools. As developers directly utilize these tools in critical situations, the codebase of the tools should be open-source. Open-source is the future of all software tools.&lt;/p&gt;

&lt;p&gt;Transparency and collaboration are some key benefits of open-source software tools. Developers want to see the code first hand, and if there are issues they want to address, they prefer to reach out to an active developer community than a customer support team.&lt;/p&gt;

&lt;p&gt;At the same time, most open-source tools don't provide the same user experience as provided by SaaS vendors. But it doesn't have to be that way. With that objective, we created SigNoz.&lt;/p&gt;

&lt;p&gt;SigNoz is a full-stack open-source application performance monitoring and observability tool. It provides a unified UI for both metrics and traces. Log management is also in the product roadmap and will be launched seen.&lt;/p&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;br&gt;
&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're specifically looking for distributed tracing tools, have a look at &lt;strong&gt;&lt;a href="https://signoz.io/blog/distributed-tracing-tools/"&gt;top 11 distributed tracing tools&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>monitoring</category>
      <category>microservices</category>
      <category>apm</category>
    </item>
    <item>
      <title>How to build Video Calling in javascript</title>
      <author>Arjun Kava</author>
      <pubDate>Tue, 05 Oct 2021 12:49:59 +0000</pubDate>
      <link>https://dev.to/videosdk/video-calling-in-javascript-1pb4</link>
      <guid>https://dev.to/videosdk/video-calling-in-javascript-1pb4</guid>
      <description>&lt;p&gt;&lt;strong&gt;Video Calling&lt;/strong&gt; is becoming norm for everyone nowadays and integrating Video API is as hard as building one. In this article, We are going to explore the Video Calling in JavaScript. &lt;/p&gt;

&lt;p&gt;We will also implement a demo and use Video SDK to make a video call using &lt;a href="https://www.npmjs.com/package/@videosdk.live/rtc-js-prebuilt"&gt;rtc-js-prebuilt&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#implementation"&gt;Implementation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#run-the-demo"&gt;Run the demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-the-meeting"&gt;Cloud Record the meeting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#go-live-on-social-media"&gt;Go live on social media (RTMP out)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction &lt;a href="introduction"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Video calling is becoming norm for everyone. According to Cisco, 87% of the workforce says they feel more connected to each other when using video.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Video SDK Video Calling Prebuilt SDK&lt;/strong&gt; provides best video calling experience with just 10 lines of code. It provides inbuilt support for &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Completely Low code and serverless.&lt;/li&gt;
&lt;li&gt;Video API with real-time audio, video and data streams&lt;/li&gt;
&lt;li&gt;5,000+ participants support&lt;/li&gt;
&lt;li&gt;Chat support with rich media.&lt;/li&gt;
&lt;li&gt;Screen sharing with HD and Full HD.&lt;/li&gt;
&lt;li&gt;Play realtime video in meeting&lt;/li&gt;
&lt;li&gt;Connect it with social media such as Facebook, Youtube etc (RTMP out support).&lt;/li&gt;
&lt;li&gt;Intelligent speaker switch&lt;/li&gt;
&lt;li&gt;Record your meetings on cloud&lt;/li&gt;
&lt;li&gt;Inbuilt support of whiteboard, poll and Q &amp;amp; A.&lt;/li&gt;
&lt;li&gt;Customize UI as per your needs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's begin with the prebuilt sdk setup. Read all the steps carefully before installing one in your application.&lt;/p&gt;

&lt;p&gt;It supports all the modern frameworks such as plain JavaScript, React JS, Vue JS and Angular JS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup &lt;a href="setup"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Step 1: First of all, Register yourself to &lt;a href="https://app.videosdk.live/"&gt;app.videosdk.live&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FNpel403--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg7m27d2gd2pyqxwhmn9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FNpel403--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pg7m27d2gd2pyqxwhmn9.png" alt="Register yourself to Video SDK"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 2: Generate an API key and Secret&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dwmjuaWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8o6czz1o4y9c1vukiz10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dwmjuaWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8o6czz1o4y9c1vukiz10.png" alt="Generate an API key and Secret"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation &lt;a href="implementation"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Step 1: Import the script in your html page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://sdk.videosdk.live/rtc-js-prebuilt/0.1.4/rtc-js-prebuilt.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: You can also use official Npm package: &lt;a href="https://www.npmjs.com/package/@videosdk.live/rtc-js-prebuilt"&gt;rtc-js-prebuilt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 2: Add Video SDK prebuilt code to your HTML page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;script&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;meeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;VideoSDKMeeting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;API KEY&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// generated in Setup&lt;/span&gt;
      &lt;span class="na"&gt;meetingId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;milkyway&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// enter your meeting id&lt;/span&gt;

      &lt;span class="na"&gt;containerId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;redirectOnLeave&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.videosdk.live/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

      &lt;span class="na"&gt;micEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;webcamEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;participantCanToggleSelfWebcam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;participantCanToggleSelfMic&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

      &lt;span class="na"&gt;chatEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;screenShareEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;pollEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;whiteBoardEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;raiseHandEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

      &lt;span class="na"&gt;recordingEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;recordingWebhookUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.videosdk.live/callback&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;participantCanToggleRecording&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

      &lt;span class="na"&gt;brandingEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;brandLogoURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://picsum.photos/200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;brandName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Awesome startup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;poweredBy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

      &lt;span class="na"&gt;participantCanLeave&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// if false, leave button won't be visible&lt;/span&gt;

      &lt;span class="c1"&gt;// Live stream meeting to youtube&lt;/span&gt;
      &lt;span class="na"&gt;livestream&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;autoStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="c1"&gt;// {&lt;/span&gt;
          &lt;span class="c1"&gt;//   url: "rtmp://x.rtmp.youtube.com/live2",&lt;/span&gt;
          &lt;span class="c1"&gt;//   streamKey: "&amp;lt;STREAM KEY FROM YOUTUBE&amp;gt;",&lt;/span&gt;
          &lt;span class="c1"&gt;// },&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;

      &lt;span class="na"&gt;permissions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;askToJoin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Ask joined participants for entry in meeting&lt;/span&gt;
        &lt;span class="na"&gt;toggleParticipantMic&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Can toggle other participant's mic&lt;/span&gt;
        &lt;span class="na"&gt;toggleParticipantWebcam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Can toggle other participant's webcam&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;

      &lt;span class="na"&gt;joinScreen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Show the join screen ?&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Daily scrum&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Meeting title&lt;/span&gt;
        &lt;span class="na"&gt;meetingUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Meeting joining url&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;meeting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://sdk.videosdk.live/rtc-js-prebuilt/0.1.5/rtc-js-prebuilt.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;head&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 3: Insert API key in your code to run it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;API-KEY&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#run-the-demo"&gt;
  &lt;/a&gt;
  Run the demo &lt;a href="run-the-demo"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To run the demo, you have to use any local server. Best could be Xampp or IIS as per your environment. We are going to use live-server package to run simple http server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="nx"&gt;live&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;live&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and open &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt; in your web browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--euwcZPcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5xt1yhcxvxotiu5d1o8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--euwcZPcV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5xt1yhcxvxotiu5d1o8.gif" alt="Video Call Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#record-the-meeting"&gt;
  &lt;/a&gt;
  Record the meeting &lt;a href="record-the-meeting"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To record the meeting, You have to first enable recording flag in the configuration. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;recordingEnabled: set &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to enable and disable online recordings&lt;/li&gt;
&lt;li&gt;recordingWebhookUrl: Callback url, generally helps to store recording details on your database.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;recordingEnabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;recordingWebhookUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://www.videosdk.live/callback&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After enabling recording option, you'll be able to see recording button on the screen. Click on it to start and stop recording&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tFMotmdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc4aj1iaajvai6bf43g4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tFMotmdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc4aj1iaajvai6bf43g4.png" alt="Recording button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-live-on-social-media"&gt;
  &lt;/a&gt;
  Go live on social media &lt;a href="go-live-on-social-media"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To enable live streaming, you have to configure list of stream key and URL. We only support RTMP protocol enabled broadcasting. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;autoStart: If &lt;code&gt;true&lt;/code&gt;, it will trigger re-streaming automatically when meeting will start.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;livestream&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;autoStart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="c1"&gt;// {&lt;/span&gt;
        &lt;span class="c1"&gt;//   url: "rtmp://x.rtmp.youtube.com/live2",&lt;/span&gt;
        &lt;span class="c1"&gt;//   streamKey: "&amp;lt;STREAM KEY FROM YOUTUBE&amp;gt;",&lt;/span&gt;
        &lt;span class="c1"&gt;// },&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion &lt;a href="conclusion"&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In this article, I have explained Video Calling in JavaScript. You can modify couple of parameters in code according to your need. This was the small introduction to Video SDK Prebuilt SDK.&lt;/p&gt;

&lt;p&gt;Here is video version of the same. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/b3IzLHeDvyE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope this blog helped you understand &lt;strong&gt;Video Calling&lt;/strong&gt; of Video SDK. For more information visit &lt;a href="https://docs.videosdk.live/"&gt;official documentation of Video SDK&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;P.S. Find official example of &lt;a href="https://github.com/videosdk-live/videosdk-rtc-js-prebuilt-embedded-example"&gt;Video Calling API&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webrtc</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Hacktoberfest'21-With Rishit Anand</title>
      <author>RISHIT-ANAND</author>
      <pubDate>Tue, 05 Oct 2021 12:49:02 +0000</pubDate>
      <link>https://dev.to/rishit_anand/hacktoberfest-21-with-rishit-anand-2klf</link>
      <guid>https://dev.to/rishit_anand/hacktoberfest-21-with-rishit-anand-2klf</guid>
      <description>&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro✨
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;I am RISHIT ANAND, a Second Year student in  Vellore Institute Of Technology.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;I am also a MLSA, Memeber of ISTE-VIT, IEEE-CS VIT, IETE-VIT.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Being a Computer Science Student, I am Code Geek who likes to explore domains of wide technical development.&lt;/li&gt;
&lt;li&gt;Learning new domains is always challenging and I love it because tough fights always instill a confidence in me in turn helping me become better in life.&lt;/li&gt;
&lt;li&gt;My domains of exloration are Web-Dev(Backend), CC, ML, AI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background✨
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;My background is a combination of Tehcnical + Social Activites in Life.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting With Social, I am Dancer, and have a passion for Cricket and Football.&lt;/li&gt;
&lt;li&gt;Moving to Technical, I am good with C, C++, JAVA, Python, React&lt;/li&gt;
&lt;li&gt;I am a &lt;strong&gt;Microsoft Student Learner Ambassador&lt;/strong&gt; which helps me gain knowledge and learn new experiences on a larger scale.&lt;/li&gt;
&lt;li&gt;I am a Member of quite a few student chapters in VIT and have conducted Hackathons like &lt;strong&gt;HORIZON(By ISTE-VIT)&lt;/strong&gt; and &lt;strong&gt;ACCESS DENIED(By IETE-VIT)&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#progress"&gt;
  &lt;/a&gt;
  Progress✨
&lt;/h3&gt;

&lt;p&gt;Knowing about the &lt;strong&gt;Hacktober&lt;/strong&gt; was an entirely new experience for me.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I never knew that something like open source existed and was thrilled for the month of October to start and contribute to different repos on GITHUB.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--46xAOliI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dct49t7zk9he642jts9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--46xAOliI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dct49t7zk9he642jts9v.png" alt="My Contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#in-four-days-i-made-11-contributions-to-4-different-repos-on-github"&gt;
  &lt;/a&gt;
  In four days I made 11 contributions to 4 different repos on GITHUB
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#contributions"&gt;
  &lt;/a&gt;
  Contributions✨
&lt;/h3&gt;

&lt;p&gt;I made contributions to &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/ISTE-VIT/The-Algo-Companion"&gt;Competitive Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ISTE-VIT/Projects-Archive"&gt;Web-Dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ISTE-VIT/Arduino_Amplified"&gt;IOT&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;These contributions helped me solve questions and complete tasks and help me improve my skills.&lt;br&gt;
It also helped me control and access my GITHUB account in a better way through exploration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#reflections"&gt;
  &lt;/a&gt;
  Reflections✨
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;OPEN SOURCE CONTRIBUTION&lt;/strong&gt; truly helped a lot to know about existence of different kind of projects worldwide and increase my reach too through contributions and events in Hacktober.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reach"&gt;
  &lt;/a&gt;
  Reach✨
&lt;/h3&gt;

&lt;p&gt;People can connect to me and follow me through and on:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.instagram.com/rishit_anand/"&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/rishitanand/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/rishit_anand"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RISHIT-ANAND"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/people/Rishit-Anand/100013283774397/"&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>computerscience</category>
      <category>github</category>
    </item>
    <item>
      <title>Inicie no mundo open-source participando da Hacktoberfest</title>
      <author>Leticia</author>
      <pubDate>Tue, 05 Oct 2021 12:47:53 +0000</pubDate>
      <link>https://dev.to/levxyca/inicie-no-mundo-open-source-participando-da-hacktoberfest-3np6</link>
      <guid>https://dev.to/levxyca/inicie-no-mundo-open-source-participando-da-hacktoberfest-3np6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-a-hacktoberfest"&gt;
  &lt;/a&gt;
  O que é a Hacktoberfest?
&lt;/h2&gt;

&lt;p&gt;É um evento online patrocinado pela Digital Ocean que acontece todo ano, durante o mês de outubro. Seu objetivo é incentivar e movimentar a comunidade a participar de projetos Open Source. É uma ótima oportunidade para quem está iniciando e quer começar a contribuir!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#porque-participar"&gt;
  &lt;/a&gt;
  Porque participar?
&lt;/h2&gt;

&lt;p&gt;É um ótimo meio de se inserir no mundo Open Source, além dos aprendizados e da possibilidade de poder interagir com pessoas desenvolvedoras do mundo todo, tirando dúvidas e contribuindo. Além disso, a comunidade trás vários eventos para fomentar essa participação, uma oportunidade a mais para conhecer pessoas novas e fazer networking.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-funciona-a-sua-participa%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Como funciona a sua participação?
&lt;/h2&gt;

&lt;p&gt;Para participar, você precisa ter uma conta no GitHub ou no GitLab, para que você possa vincular sua conta ao site do Digital Ocean, que é a empresa que está organizando o evento. É assim que eles conseguem conferir as suas contribuições.&lt;/p&gt;

&lt;p&gt;Aqui vai um passo a passo:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cria uma conta no &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; ou no &lt;a href="https://about.gitlab.com/"&gt;GitLab&lt;/a&gt; caso não tenha;&lt;/li&gt;
&lt;li&gt;Entre no &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;site do evento&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Associe sua conta do GitHub com a do evento.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clique no "Start Hacking";&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DJk3F6t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vvxjf4l7ql6pp71iftn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DJk3F6t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4vvxjf4l7ql6pp71iftn.png" alt="Imagem do artigo 01"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clique no botão "Sign up with..." de acordo com qual plataforma escolher. Faça o login e tadaaaaan 🎊 Agora você pode começar a contribuir!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rpb7fony--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5yelo9xwny8xg60y2cz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rpb7fony--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5yelo9xwny8xg60y2cz.png" alt="Imagem do artigo 02"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Feito isso, você é uma pessoa apta a participar do evento, agora podemos procurar projetos e issues para contribuir.&lt;/p&gt;

&lt;p&gt;Antes de procurarmos projetos para contribuir, precisamos nos atentar a algumas regras do evento. Aqui está uma tradução do próprio site da Hacktoberfest (&lt;a href="https://hacktoberfest.digitalocean.com/resources/participation"&gt;acesse o original aqui&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As solicitações pull podem ser feitas em qualquer repositório / projeto hospedado no &lt;strong&gt;&lt;a href="https://github.com/topics/hacktoberfest"&gt;GitHub&lt;/a&gt;&lt;/strong&gt; ou &lt;strong&gt;&lt;a href="https://gitlab.com/explore/projects?topic=hacktoberfest"&gt;GitLab&lt;/a&gt;&lt;/strong&gt; . Procure o tópico 'hacktoberfest' para saber se um repositório / projeto está participando do Hacktoberfest. As solicitações pull devem ser aprovadas por um mantenedor do repositório / projeto para contar.&lt;/p&gt;

&lt;p&gt;Você pode se inscrever a qualquer momento entre 1º de outubro e 31 de outubro. Apenas certifique-se de se inscrever no site oficial do Hacktoberfest para que suas solicitações de pull sejam contabilizadas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#as-regras"&gt;
  &lt;/a&gt;
  as regras
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;As solicitações pull podem ser enviadas a qualquer repositório no GitHub ou GitLab.&lt;/li&gt;
&lt;li&gt;A solicitação pull deve conter confirmações que você mesmo fez.&lt;/li&gt;
&lt;li&gt;Se um mantenedor relatar sua solicitação de pull como spam, isso não será contabilizado para sua participação no Hacktoberfest.&lt;/li&gt;
&lt;li&gt;Se um mantenedor relatar um comportamento que não esteja de acordo com o código de conduta do projeto, você não poderá participar.&lt;/li&gt;
&lt;li&gt;Para obter uma camisa, você deve fazer quatro solicitações de pull (PRs) aprovadas em projetos aceitos entre 1 e 31 de outubro em qualquer fuso horário.&lt;/li&gt;
&lt;li&gt;Este ano, os primeiros 50.000 participantes podem ganhar uma camiseta.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Um repositório / projeto é considerado participante do Hacktoberfest se o tópico 'hacktoberfest' estiver presente e aceitar contribuições públicas por meio de solicitações pull. Uma solicitação individual de pull também pode ser ativada diretamente adicionando o rótulo 'hacktoberfest-accepted'.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Uma solicitação pull é considerada aprovada quando tem uma revisão geral de aprovação dos mantenedores, ou foi fundida pelos mantenedores, ou recebeu o rótulo de 'hacktoberfest-accepted'. Uma solicitação pull com qualquer rótulo contendo a palavra 'spam' ou 'inválido' será considerada inelegível para Hacktoberfest.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#participe-da-hacktoberfest"&gt;
  &lt;/a&gt;
  Participe da Hacktoberfest 🌸
&lt;/h2&gt;

&lt;p&gt;Com base neste artigo, criei um repositório no GitHub para já dar o passo inicial com vocês nessa jornada. Esse projeto consiste em mostrar para as pessoas o que é a Hacktoberfest e o mundo open-source ao mesmo tempo em que as mesmas participam e contribuem nele.&lt;/p&gt;

&lt;p&gt;No projeto, iremos criar um site com o conteúdo desse artigo para alcançar mais pessoas e possibilitar que as mesmas participem do evento contribuindo com ele.&lt;/p&gt;

&lt;p&gt;Entrando no &lt;a href="https://github.com/levxyca/hacktoberfest"&gt;repositório&lt;/a&gt; você poderá entender melhor o projeto, encontrar uma issue que te interesse e mandar o seu primeiro PR!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o9owq-qS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1ycbghm1gx4cx7m7b61.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o9owq-qS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h1ycbghm1gx4cx7m7b61.png" alt="Imagem do site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onde-encontrar-outros-projetos-e-issues-para-participar"&gt;
  &lt;/a&gt;
  Onde encontrar outros projetos e issues para participar?
&lt;/h2&gt;

&lt;p&gt;Existem vários lugares onde você pode procurar por projetos, vou mostrar alguns para vocês aqui, inclusive, sintam-se a vontade para deixar nos comentários mais projetos que você conheçam para deixarmos muitas possibilidades para a galera, irei aumentando o número de links conforme forem surgindo mais!&lt;/p&gt;

&lt;p&gt;Alguns links com projetos no geral:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/juligaioso/status/1442217527803846657"&gt;Thread com projetos brasileiros para contribuir nesse Hacktoberfest (@juligaioso)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/search?q=hacktoberfest"&gt;Projetos com a tag Hacktoberfest no GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nesses links, você consegue encontrar diversos projetos para contribuir para pessoas com diversos conhecimentos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mandando-o-seu-primeiro-pr"&gt;
  &lt;/a&gt;
  Mandando o seu primeiro PR
&lt;/h2&gt;

&lt;p&gt;Eu tenho um artigo ensinando a mandar sua contribuição pelo GitHub Desktop, você pode ler &lt;a href="https://dev.to/levxyca/pt-br-github-para-leigos-4i7j"&gt;aqui&lt;/a&gt;. Caso queira aprender a se aventurar pelas linhas de comando, recomendo &lt;a href="https://hacktoberfest.digitalocean.com/resources"&gt;esse tutorial&lt;/a&gt; do próprio site do evento.&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>beginners</category>
      <category>braziliandevs</category>
      <category>opensource</category>
    </item>
    <item>
      <title>The power of X-State</title>
      <author>yanir manor</author>
      <pubDate>Tue, 05 Oct 2021 12:31:32 +0000</pubDate>
      <link>https://dev.to/manoryanir/the-power-of-x-state-1npg</link>
      <guid>https://dev.to/manoryanir/the-power-of-x-state-1npg</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FcgXEzHs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8sh0twrzdsqn2nfjzc0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FcgXEzHs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8sh0twrzdsqn2nfjzc0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A long time ago, when I was a student in an academic institution learning computer science,  I found the automation systems class very exciting. &lt;br&gt;
I love the approach of representing a solution to a problem in a visual way.&lt;br&gt;
Create abstraction sketching a state chart of state and transition looks easy to understanding.&lt;br&gt;
As a developer, I think building a frontend application is very complex.&lt;br&gt;
it contains things that happened asynchronously over time (API call, animation, things that happen in parallel).&lt;br&gt;
X-State gives you a good visualizer tool that you can design and code your machine. &lt;br&gt;
You can add the inspect package or chrome extension for debugging or play with your state machine in your application.&lt;br&gt;
you can use x-state in many UI languages (React, Vue, Svelte)&lt;br&gt;
you can generate integration or e2e testing to make your test goes hand in hand with your code. &lt;br&gt;
You can write the testing by jest and react testing library or by playwright/puppeteer/Cypress. &lt;/p&gt;

&lt;p&gt;In the example that I wrote, I will show part of the power of X-State.&lt;br&gt;
I build an air conditioner machine. &lt;br&gt;
You have a remote that can control the power the mode and fun. &lt;br&gt;
The machine has a default state. &lt;br&gt;
If you turn it on and make some changes with mode  I use the history functionality that remembers the changes that happened in the children's nested parallel states.&lt;br&gt;
I think this example is showing the power and simplicity of using X-State.&lt;br&gt;
Enjoy : )&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://github.com/yanirmanor/xstate-air-conditioner"&gt;https://github.com/yanirmanor/xstate-air-conditioner&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>xstate</category>
      <category>javascript</category>
      <category>vue</category>
    </item>
    <item>
      <title>10 Tips On How To Improve UI/UX Design of a Web Application</title>
      <author>TechMagic</author>
      <pubDate>Tue, 05 Oct 2021 12:31:26 +0000</pubDate>
      <link>https://dev.to/techmagic/10-tips-on-how-to-improve-ui-ux-design-of-a-web-application-5bj2</link>
      <guid>https://dev.to/techmagic/10-tips-on-how-to-improve-ui-ux-design-of-a-web-application-5bj2</guid>
      <description>&lt;p&gt;In this article, we share insights on the top 10 tips for great UI/UX in modern web applications. Learn more on how to improve design in 2022.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gj4KY5OW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-02.-Improve-UI-UX-Design.-10-Points-UI%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gj4KY5OW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-02.-Improve-UI-UX-Design.-10-Points-UI%402x.png" alt="best tips for great UI/UX in web apps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your web application or a website is the salesperson you have at your disposal 24/7. It creates the first impression on your company and product, transmits values, and answers questions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.forrester.com/report/The-Six-Steps-For-Justifying-Better-UX/RES117708"&gt;Studies&lt;/a&gt;  prove that a well-designed UI is able to raise your conversion rate by up to 200%. An improved UX design can boost conversion rates up to 400%. That's why it's essential to make your web app not just attractive, but also convenient and user-friendly.&lt;/p&gt;

&lt;p&gt;A common aspect of UX is one-time design ― created once and never improved. It doesn't meet new trends and market requirements and remains outdated. As a result, you have an old-fashioned application that is neither informative nor attractive, not convenient for users, and can't stand the competition.&lt;/p&gt;

&lt;p&gt;Then again, a complete redesign is money- and time-consuming. Therefore, in this article, we focus on ways to improve UI/UX design that already exists without radical changes. It's a list of ten universal methods of improving the UI/UX design of the web app to make it more user-oriented, and both you and your app prosperous.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Why is a Positive User Experience Important for Your Business?&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;10 Tips to Improve UI / UX Design of Web Application&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Our Experience in UI / UX Improvement&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-is-a-positive-user-experience-important-for-your-business"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why is a Positive User Experience Important for Your Business?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TWGvAWp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-01.-Improve-UI-UX-Design.-Positive-UX%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TWGvAWp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-01.-Improve-UI-UX-Design.-Positive-UX%402x.png" alt="positive UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://uxpa.org/"&gt;The User Experience Professionals Association&lt;/a&gt;  defines user experience as: "Every aspect of the user's interaction with a product, service, or company that makes up the user's perceptions of the whole. User experience design is concerned with all the elements that together make up that interface, including layout, visual design, text, brand, sound, and interaction."&lt;/p&gt;

&lt;p&gt;The  &lt;a href="https://www.nngroup.com/articles/definition-user-experience/"&gt;Nielsen Norman Group&lt;/a&gt; defines a great user experience as one that "meets the exact needs of the customer, without fuss or bother."&lt;/p&gt;

&lt;p&gt;Simply put, to improve the UI/UX design of a web application means to increase user satisfaction, advance the usability, accessibility, and efficiency of their interaction with the website or app.&lt;/p&gt;

&lt;p&gt;UX design focuses on the consumer experience of using your product. The meaning of "product" is broader than just the physical goods or services you sell - it involves the content you create and publish to reach and connect people before they have seen, touched, and got the product.&lt;/p&gt;

&lt;p&gt;Whether it’s a website, a web app, or a mobile app - UX is a central pillar the user experience rests on. If it doesn't fit the behaviour and requirements of the target audience, that match between the product and the user will never appear.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-methods-to-improve-ui-ux-design-of-web-application"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10 Methods to Improve UI / UX Design of Web Application&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#thorough-research"&gt;
  &lt;/a&gt;
  Thorough research
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GYbYt1PR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-03.-Improve-UI-UX-Design.-Thorough-research%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GYbYt1PR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-03.-Improve-UI-UX-Design.-Thorough-research%402x.png" alt="research in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As a first step, conduct thorough  &lt;a href="https://xd.adobe.com/ideas/process/user-research/"&gt;user research&lt;/a&gt;, ask the right questions. Not how to improve user experience on a website or app in general; start with the definition of the final user.&lt;/p&gt;

&lt;p&gt;Knowing your audience, find out what it's interested in. How does it behave after the last update? Clarify people's needs, determine the basic and secondary ones. Identify your product's core value and the punch line. What can you give your user that no one else can?&lt;/p&gt;

&lt;p&gt;Then, check your competitor list, add new ones if needed. Analyze their apps and determine what can make your target user go for their products instead of yours. It gives you a priceless opportunity to find inspiration, use someone's knowledge and experience, and stand out among all similar apps in the market. The results of this research will be the basis of how to improve user experience design.&lt;/p&gt;

&lt;p&gt;Offering the best user experience is a compelling competitive advantage.&lt;/p&gt;

&lt;p&gt;Again, it doesn't have to be costly full-fledged marketing research. Start with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Demographic characteristics.&lt;/strong&gt;  They include gender, age, profession, family status, lifestyle, and all related.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Interests and preferences.&lt;/strong&gt;  Based on demographics data, you can create a pretty good picture of your target audience. Complete it with interests and hobbies. Find as many contact points as possible to build the clearest, ongoing, and fruitful communication.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Apps they already use.&lt;/strong&gt;  What connects these applications? What reviews do people write, and how do the creators respond?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use polling, surveys, statistics, Google after all. The future app UX will be built around this information. Pay attention to four types of user research tools UX designers use the most:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Interview tools&lt;/strong&gt;  give you detailed information about the user's attitudes, desires, and experiences.  &lt;a href="https://dovetailapp.com/"&gt;Dovetail&lt;/a&gt;  is one of the most prominent examples.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Survey tools&lt;/strong&gt;  provide you with helpful information about your user experience at scale. Use  &lt;a href="https://www.hotjar.com/incoming-feedback/"&gt;Hotjar Incoming Feedback&lt;/a&gt;  and Google Forms for this purpose.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Persona creation tools&lt;/strong&gt;  show you what types of users are interested in your product and interact with them. The best ones you can use here are Google Analytics in tandem with  &lt;a href="https://uxpressia.com/"&gt;UXPressia&lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;In-house testing tools&lt;/strong&gt;  help you to differentiate what people say and what they actually do with a product by testing it.  &lt;a href="http://fitnesse.org/"&gt;FitNesse&lt;/a&gt;  and  &lt;a href="https://bugwolf.com/"&gt;Bugwolf&lt;/a&gt;  are pretty good at this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Remember, it's always easier to create the design people want than to make them like the design you've created.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-it-simple"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Keep it simple&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQhauzar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-04.-Improve-UI-UX-Design.-Keep-it-simple%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQhauzar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-04.-Improve-UI-UX-Design.-Keep-it-simple%402x.png" alt="keep it simple in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all, minimalism has been among the  &lt;a href="https://www.forbes.com/sites/forbesagencycouncil/2020/03/04/effective-web-design-the-relevance-and-influence-of-minimalism/?sh=3759df155ebd"&gt;key trends in web design&lt;/a&gt;  for the last few years and will not lose in positions in 2022. Second, removing all unnecessary components means simplifying the interaction with the app for the user. When they visit, you want them to walk the particular way and do the specific steps. If they have to solve a labyrinth to find what they want, they will be more likely to leave.&lt;/p&gt;

&lt;p&gt;Graphic elements should be clickable, facilitate navigation, and carry information about the brand. Here are three fundamental rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;One intention per page.&lt;/strong&gt;  If the page is overloaded with information, the visitor will probably be confused, fail to understand its purpose and advantages. You do the exact opposite and push visitors away by wanting to say too much with a single page. Improve web application user interface by using internal linking and connect all the pages but let each be devoted to the particular subject and goal.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Understandable intent of the page.&lt;/strong&gt;  Navigational elements, blocks, headlines make it easy for visitors to understand the page's goal immediately. Thus, they can stay or move to another one without losing time and wondering what is what.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Focus on the most relevant information.&lt;/strong&gt;  "You may also like" things always are located at the bottom, below the primary input. For example, if you open a blog post, you can see the related articles below; their icons are smaller and don't distract you from the subject you've opened to read — the same works for product pages in online shops.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#add-more-whitespace"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Add more whitespace&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v2Mrgd3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-05.-Improve-UI-UX-Design.-Add-more-whitespace%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v2Mrgd3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-05.-Improve-UI-UX-Design.-Add-more-whitespace%402x.png" alt="add more whitespace in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The simplest and most universal way to improve user experience design is by adding white space. Surprisingly, it's neglected too often in favour of complex graphics solutions. Nevertheless, even a little white space can change the entire picture, shift the accents, and bring the visitor closer to decision-making.&lt;/p&gt;

&lt;p&gt;Don't take the white space literally.  &lt;em&gt;Contrary to the name, white space doesn't just apply to the color white. Instead, it applies to any areas of a design not taken up by other elements, such as text, photos, or illustrations. White space can be any color, as it refers to the background of the design,&lt;/em&gt; according to  &lt;a href="https://www.canva.com/learn/white-space-design/"&gt;Canva&lt;/a&gt;’s definition.&lt;/p&gt;

&lt;p&gt;These techniques can be used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Increase the line space.&lt;/strong&gt;  It improves readability, especially for mobile interfaces.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Increase paragraph space.&lt;/strong&gt;  That raises the chances for the text to be read and understood, not ignored and scrolled.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Group related items.&lt;/strong&gt; You can use visual elements for this purpose, but try a "less is more" approach; you may be pleasantly surprised.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#achieve-unity-of-elements"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Achieve unity of elements&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zVSNInO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-06.-Improve-UI-UX-Design.-Achieve-a-unity-of-elements%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVSNInO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-06.-Improve-UI-UX-Design.-Achieve-a-unity-of-elements%402x.png" alt="achieve unity in elements in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unity can be visual and conceptual and helps to improve user experience design drastically.  You achieve visual unity when all design elements support the same visual theme. In the case of a conceptual one, elements of content support the same subject matter.&lt;/p&gt;

&lt;p&gt;All elements should have their roles and be located thoughtfully and strategically.  Get rid of ones that don't contribute to the whole objective. But in turn, removing elements that are essential parts of the entire picture breaks the design. Make sure to be precise, so nothing is lost.&lt;/p&gt;

&lt;p&gt;The most common and robust method for achieving unity is using the  &lt;a href="https://en.wikipedia.org/wiki/Gestalt_psychology"&gt;Gestalt principles of visual perception&lt;/a&gt;. They are based on the human tendency to see things in groups and patterns and are highly relevant in UI/UX design.&lt;/p&gt;

&lt;p&gt;The most potent principles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Proximity&lt;/strong&gt; means that elements that are closer to each other appear more related.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Similarity&lt;/strong&gt; refers to the fact that elements that look alike appear related to each other.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Uniform connectedness&lt;/strong&gt; means grouping elements with common areas or connecting lines.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Good continuation&lt;/strong&gt; refers to grouping by alignment, whether straight or curved.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Common fate&lt;/strong&gt; means that elements that move or even point in the same direction appear more related.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Colour and contrast are also of enormous importance. Several tools, such as  &lt;a href="https://usecontrast.com/"&gt;Contrast&lt;/a&gt; and  &lt;a href="http://colorsafe.co/"&gt;Colorsafe&lt;/a&gt;, will help you check the sufficiency of the colors you use, contrast, etc. Make sure colour-blind users can easily read your app.&lt;/p&gt;

&lt;p&gt;Basic tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Background colours are muted.&lt;/li&gt;
&lt;li&gt;  Blue is used for text links.&lt;/li&gt;
&lt;li&gt;  Red is always for warnings or mistakes.&lt;/li&gt;
&lt;li&gt;  CTAs require a strongly contrasting hue that stands out from the rest.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#work-with-feedback"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Work with feedback&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vhbgp67W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-08.-Improve-UI-UX-Design.-Feedback%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vhbgp67W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-08.-Improve-UI-UX-Design.-Feedback%402x.png" alt="work with feedback in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A business's challenge is always listening to what users have to say about the product. It's fair for design as well. Ignoring this rule means deliberately depriving yourself of the opportunity to become the better fit for your target audience.&lt;/p&gt;

&lt;p&gt;Some statistical data on the topic:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.huffpost.com/entry/50-important-customer-exp_b_8295772"&gt;70% of companies&lt;/a&gt;  that deliver best in class customer experience use customer feedback.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://mindtouch.com/resources/5-internet-marketing-must-dos-in-2010"&gt;ESPN.com revenues jumped 35%&lt;/a&gt;  after they incorporated suggestions from their community into their homepage redesign.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.huffpost.com/entry/50-important-customer-exp_b_8295772"&gt;One satisfied customer&lt;/a&gt; can lead to nine referrals.&lt;a href="https://www.huffpost.com/entry/50-important-customer-exp_b_8295772"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.customerservicemanager.com/customer-service-facts/"&gt;13% of unhappy customers&lt;/a&gt; will share their disappointments with more than 20 people.&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.huffpost.com/entry/50-important-customer-exp_b_8295772"&gt;It is 6-7X more expensive&lt;/a&gt; to attract new customers than to keep existing ones.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A simple way to obtain user feedback is to add a relevant form to your app so it'll be delivered right to your email. Questions can be the most different, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  What would you like us to improve?&lt;/li&gt;
&lt;li&gt;  What features would you enjoy in the next update?&lt;/li&gt;
&lt;li&gt;  What did you like/dislike the most?&lt;/li&gt;
&lt;li&gt;  How would you rate your app?&lt;/li&gt;
&lt;li&gt;  What are the chances of you recommending it?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Collect and evaluate the outcomes, compare them with current trends and your objectives. For instance, if 70% of respondents claim it's difficult to find a specific page, it's time to add a search feature or improve the navigation.&lt;/p&gt;

&lt;p&gt;Using an online survey tool similar to  &lt;a href="https://survicate.com/"&gt;Survicate&lt;/a&gt;, you can go through the detailed investigation, using all needed filters, and obtain the detailer report for use in the future.&lt;/p&gt;

&lt;p&gt;Another great idea is to have a so-called  &lt;a href="https://blog.polleverywhere.com/feedback-buddies/"&gt;feedback buddy&lt;/a&gt;: someone experienced in the design field to give you honest and informative feedback and point out your strengths and weaknesses like a partner or an independent consultant.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Instead of seeing feedback as critiques, we need to see them as problem-solving sessions. It's a simple perspective that makes a significant impact, transforming design feedback from the person giving feedback vs. the person receiving feedback to a collaborative group effort to find the best solution possible.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Jason Fried,&lt;/strong&gt;&lt;/em&gt; &lt;a href="https://basecamp.com/"&gt;&lt;em&gt;Basecamp&lt;/em&gt;&lt;/a&gt; &lt;em&gt;&lt;strong&gt;CEO and founder&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#make-waiting-more-pleasant"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Make waiting more pleasant&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5J0P2Z9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-09.-Improve-UI-UX-Design.-Make-waiting-more-pleasant%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5J0P2Z9v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-09.-Improve-UI-UX-Design.-Make-waiting-more-pleasant%402x.png" alt="make waiting easier in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's a task for developers to pay attention to minification and caching for improving the app performance. As a designer, you have to consider how the UI will look while in a loading state.&lt;/p&gt;

&lt;p&gt;You'll inevitably face situations when reaching the highest performance won't be possible, slow internet connection, for example. Try to make waiting as pleasant for users as possible. Create skeleton screens - mockups of text, images, or other content elements.&lt;/p&gt;

&lt;p&gt;Those are blank versions of pages where the information is gradually loaded. We are used to seeing animated spinners everywhere. The problem with them is that they focus users' attention on loading and waiting. By contrast, skeleton screens are more about progress and action.&lt;/p&gt;

&lt;p&gt;This is called  &lt;a href="https://en.wikipedia.org/wiki/Perceived_performance"&gt;perceived performance&lt;/a&gt;. The idea is that users are more loyal and patient and think of a system as faster if they can anticipate content when it's not loaded yet. It may be called managing users' expectations.&lt;/p&gt;

&lt;p&gt;Companies like Facebook, LinkedIn, Slack, and others actively use this.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#focus-on-content"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Focus on content&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zwKnHezZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-10.-Improve-UI-UX-Design.-Focus-on-content%402x-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zwKnHezZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-10.-Improve-UI-UX-Design.-Focus-on-content%402x-1.png" alt="focus on content in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At first glance, it seems specifically a copywriter's and illustrator's area of responsibility, but you should work as a team. Speak visitors' language, make every page winning. Use your content as a tool that helps users to understand which step should be taken next. Add a bit of humour;  &lt;a href="https://www.trendhunter.com/humor"&gt;it's very welcome now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The user experience depends a lot on the text and illustrations. This enormous task requires an individual approach to your specific audience rather than following some general rules. Even if the interface is user-friendly, the page itself seems attractive, and you've used all the abovementioned tips, using language not natural to your target audience could wipe out all your effort.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-the-app-mobilefriendly"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Make the app mobile-friendly&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--niw7SXqb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-11.-Improve-UI-UX-Design.-Make-the-app-mobile-friendly%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--niw7SXqb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-11.-Improve-UI-UX-Design.-Make-the-app-mobile-friendly%402x.png" alt="make it mobile frienly in UI/UX"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More than 50% of web traffic comes  &lt;a href="https://www.thinkwithgoogle.com/marketing-strategies/app-and-mobile/mobile-web-traffic-statistics/#:~:text=%3E%2050%20%25,Data%2C%20U.S.%2C%20Q1%202016."&gt;from mobile devices&lt;/a&gt;. As such, if your web app isn't mobile-optimized, users are five times more likely to abandon it. So, you're shutting out your potential customers by not optimizing your app for the best mobile experience.&lt;/p&gt;

&lt;p&gt;Keep in mind that search engines are your visitors too, and they scroll through both the desktop and mobile interfaces. A mobile-friendly app hugely impacts indexing; your SEO department will agree.&lt;/p&gt;

&lt;p&gt;Essential mobile user interface design tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Locate all buttons, especially the CTA, in the middle.&lt;/li&gt;
&lt;li&gt;  Make sure the information is fully displayed on the screen in vertical and horizontal mode.&lt;/li&gt;
&lt;li&gt;  Allow taking actions in one click. Most users operate the phone with one hand.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conduct-audit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conduct Audit&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IM83ah87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-12.-Improve-UI-UX-Design.-Conduct-Audit%402x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IM83ah87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-12.-Improve-UI-UX-Design.-Conduct-Audit%402x.png" alt="conduct regular UI/UX audit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comparing with a previous version, evaluating what's been done, drawing the first conclusions - these steps are essential, especially for long-time projects. New ideas emerge, and trends change while the work is in progress. Periodical reviews and analyses allow implementation changes and make your final UX even better and 100% user-oriented.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.interaction-design.org/literature/article/5-stages-in-the-design-thinking-process"&gt;An excellent suggestion&lt;/a&gt; is to take a day off and then review your work with fresh eyes. It's suitable for writers, illustrators, and also for designers. And never forget to evaluate your page from the user's point of view; it’s not even advised, but a necessity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-experience-in-ui-ux-improvement"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Our Experience in UI / UX Improvement&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bNfw2C0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-13.-Improve-UI-UX-Design.-Experience.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bNfw2C0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.techmagic.co/blog/content/images/2021/10/Inner-13.-Improve-UI-UX-Design.-Experience.png" alt="our design process at TechMagic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our strategy of improving UI/UX design combines the most popular and recognized practices and our vision and experience. A key point is an individual approach: we don't just work with a client’s team; we become a part of it, dive into details, and analyze them.&lt;/p&gt;

&lt;p&gt;During the improvement of web design, application features, pros, and cons are thoroughly analyzed. We carry out the market research, analysis of user personas and involve business analysts in the process. The main task of changing the UI/UX is not updating the appearance and not making changes for the sake of change. Qualitative changes in design are always noticeable for marketing and sales departments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The core of good UX design is making it work for both your users and your platform. A well-designed UX is all about leading a user to the final point ― the data they need while cutting off everything that might stand in their path and distract them. To figure out how to make better UI/UX design, you need to understand clearly what your user wants to achieve with your app and what you want to show them on their way.&lt;/p&gt;

&lt;p&gt;If your users struggle with finding something, it doesn't exist for them. As a business owner, you should strive to create interfaces and interactions that are intuitive and user-friendly. We know well how to improve the UI/UX design of web applications and, at the same time, the likelihood that users can experience and use your content and characteristics by making the interfaces more discoverable.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
