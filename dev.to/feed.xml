<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Easy WordPress theme deployment using Deployer</title>
      <author>Nino Mihovilić</author>
      <pubDate>Mon, 19 Apr 2021 10:29:21 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/easy-wordpress-theme-deployment-using-deployer-2ie7</link>
      <guid>https://dev.to/bornfightcompany/easy-wordpress-theme-deployment-using-deployer-2ie7</guid>
      <description>&lt;p&gt;In this article, I’ll show you an easy and fast way how to set up WordPress theme deployment without downtime using Deployer in 5 steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#step-1"&gt;Setting up Deployer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-2"&gt;Setting up the Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-3"&gt;Setting up SSH Agent Forwarding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-4"&gt;Setting up deploy.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-5"&gt;Testing our Script&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-1-setting-up-deployer"&gt;
  &lt;/a&gt;
  Step 1 &lt;a&gt; - Setting up Deployer
&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://deployer.org/docs/getting-started.html"&gt;Deployer&lt;/a&gt; is a simple &lt;strong&gt;open-source&lt;/strong&gt; PHP-based &lt;strong&gt;deployment&lt;/strong&gt; tool. It’s easy to use and set up.&lt;/p&gt;

&lt;p&gt;There are multiple ways to &lt;strong&gt;install&lt;/strong&gt; the tool on their website but the easiest way is to run these 3 commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -LO https://deployer.org/deployer.phar
mv deployer.phar /usr/local/bin/dep
chmod +x /usr/local/bin/dep
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check if everything is installed ok run the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dep
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2-setting-up-the-server"&gt;
  &lt;/a&gt;
  Step 2 &lt;a&gt; - Setting up the Server
&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In this tutorial, we will be using AWS Lighstail, but you can use any other server.&lt;br&gt;
The only requirement is that you have &lt;strong&gt;SSH Access&lt;/strong&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#creating-an-instance-you-can-skip-this-part-if-you-have-a-server-and-ssh-access"&gt;
  &lt;/a&gt;
  Creating an instance - you can skip this part if you have a server and SSH access
&lt;/h4&gt;

&lt;p&gt;Log in to your AWS account and search for Lightsail in the search bar. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C1vhywVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7g6c2bzs1xv8xyo0hmq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1vhywVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7g6c2bzs1xv8xyo0hmq.png" alt="Lightsail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create an instance using the WordPress blueprint and Linux platform. When the server is up and running, open the server terminal and add your public SSH key to the &lt;strong&gt;~/.ssh/authorized_keys&lt;/strong&gt; file.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#setting-up-git"&gt;
  &lt;/a&gt;
  Setting up GIT
&lt;/h4&gt;

&lt;p&gt;We need &lt;strong&gt;Git&lt;/strong&gt; on the server because &lt;strong&gt;Deployer&lt;/strong&gt; will pull the theme from the repository. &lt;/p&gt;

&lt;p&gt;As we are on a Linux-based server, the command to install git is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To verify the installation run the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3-setting-up-ssh-agent-forwarding"&gt;
  &lt;/a&gt;
  Step 3 - Setting up SSH Agent Forwarding
&lt;/h3&gt;

&lt;p&gt;To be able to pull the repository, the server needs access to it. We can use &lt;strong&gt;deploy keys&lt;/strong&gt; or &lt;strong&gt;SSH Agent Forwarding&lt;/strong&gt;. Both ways are pretty straightforward when it comes to the set up, but we will go with Agent Forwarding in this tutorial.&lt;/p&gt;

&lt;p&gt;On your local machine position yourself in the &lt;strong&gt;~/.ssh&lt;/strong&gt; folder. If it doesn't exist, create a file named "config".&lt;br&gt;
Enter the following text into the file, replacing example.com with your server's domain name or IP:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Host example.com
  ForwardAgent yes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The key must be available to &lt;strong&gt;ssh-agent&lt;/strong&gt;. You can check that by running the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh-add -L
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the command says that no identity is available, you'll need to add your key:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh-add yourkey
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*For your server SSH Agent Forwarding troubleshooting refer to this tutorial -&amp;gt; &lt;a href="https://docs.github.com/en/developers/overview/using-ssh-agent-forwarding"&gt;Using SSH Agent Forwarding&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-setting-up-deployphp"&gt;
  &lt;/a&gt;
  Step 4 &lt;a&gt; - Setting up deploy.php
&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Deploy.php&lt;/strong&gt; is the main &lt;strong&gt;config file&lt;/strong&gt; for Deployer. As we want to only deploy the WordPress theme, we will put the deploy.php in the &lt;strong&gt;theme root&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Position yourself in the theme root and enter the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dep init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will need to provide some basic info. Choose the &lt;strong&gt;0 - Common script&lt;/strong&gt; as it has the basic stuff that we need. &lt;br&gt;
Next, enter your theme repository. In the repository, only the theme files should be present. &lt;br&gt;
In the last step, you can choose to submit anonymous usage information to the PHP-Deployer community.&lt;br&gt;
Now we have the basic deploy.php file. We will do some &lt;strong&gt;changes&lt;/strong&gt; to make our script work.&lt;/p&gt;

&lt;p&gt;First, let's name our application/theme:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set('application', 'my_project');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can enter anything but let's put our theme name: "super-theme".&lt;/p&gt;

&lt;p&gt;We will set a new variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set('theme_dir', 'path_to_themes_folder');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we need to enter the &lt;strong&gt;server path to the themes folder&lt;/strong&gt;. In our example, we used AWS Lightsail with preinstalled WordPress so the path is: "/home/bitnami/apps/wordpress/htdocs/wp-content/themes".&lt;/p&gt;

&lt;p&gt;Next, we set the host and modify it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;host( 'project.com_or_IP' )
    -&amp;gt;set( 'branch', 'master' )
    -&amp;gt;user( 'bitnami' )
    -&amp;gt;set( 'deploy_path', '~/{{application}}' )
    -&amp;gt;forwardAgent();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use the &lt;strong&gt;domain name or IP&lt;/strong&gt; for the host. We set up the &lt;strong&gt;branch&lt;/strong&gt; that we want to deploy, the &lt;strong&gt;SSH user&lt;/strong&gt; in our case "bitnami". &lt;br&gt;
The &lt;strong&gt;deploy_path&lt;/strong&gt; contains the deployment path on the server that can be left as is, and we enable &lt;strong&gt;Agent Forwarding&lt;/strong&gt; so that our local SSH key is used for pulling the repository on the server.&lt;/p&gt;

&lt;p&gt;For our script, we need to add an &lt;strong&gt;additional task&lt;/strong&gt; that symlinks the current folder to the themes folder so that we can have the latest theme active after the deployment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;task( 'deploy:theme', function () {
    run( 'ln -sfn {{deploy_path}}/current {{theme_dir}}/{{application}}' );
} );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last part is to &lt;strong&gt;add&lt;/strong&gt; the created task to the main task &lt;strong&gt;"deploy"&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;task( 'deploy', [
    'deploy:info',
    'deploy:prepare',
    'deploy:lock',
    'deploy:release',
    'deploy:update_code',
    'deploy:shared',
    'deploy:writable',
    'deploy:vendors',
    'deploy:clear_paths',
    'deploy:symlink',
    'deploy:theme',
    'deploy:unlock',
    'cleanup',
    'success'
] )-&amp;gt;desc( 'Deploy your theme' );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We added the "deploy:theme" task after the current symlink is created.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;whole file&lt;/strong&gt; should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php

namespace Deployer;

require 'recipe/common.php';

// Theme name
set( 'application', 'super-theme' );

// Theme repository
set( 'repository', 'git_repository' );

// Theme directory
set( 'theme_dir', '/home/bitnami/apps/wordpress/htdocs/wp-content/themes' );


// [Optional] Allocate tty for git clone. Default value is false.
set( 'git_tty', TRUE );

// Shared files/dirs between deploys
add( 'shared_files', [] );
add( 'shared_dirs', [] );

// Writable dirs by web server
add( 'writable_dirs', [] );
set( 'allow_anonymous_stats', FALSE );


// Hosts
host( 'project.com_or_IP' )
    -&amp;gt;set( 'branch', 'master' )
    -&amp;gt;user( 'bitnami' )
    -&amp;gt;set( 'deploy_path', '~/{{application}}' )
    -&amp;gt;forwardAgent();


task( 'deploy:theme', function () {
    run( 'ln -sfn {{deploy_path}}/current {{theme_dir}}/{{application}}' );
} );

/**
 * Main task
 */
task( 'deploy', [
    'deploy:info',
    'deploy:prepare',
    'deploy:lock',
    'deploy:release',
    'deploy:update_code',
    'deploy:shared',
    'deploy:writable',
    'deploy:vendors',
    'deploy:clear_paths',
    'deploy:symlink',
    'deploy:theme',
    'deploy:unlock',
    'cleanup',
    'success'
] )-&amp;gt;desc( 'Deploy your theme' );

// [Optional] If deploy fails automatically unlock.
after( 'deploy:failed', 'deploy:unlock' );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-5-testing-our-script"&gt;
  &lt;/a&gt;
  Step 5 &lt;a&gt; - Testing our Script
&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;To run our script we enter the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dep deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything is &lt;strong&gt;successful&lt;/strong&gt; it should look like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b3yxZS6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9midvc9gsw3457vz8i09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b3yxZS6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9midvc9gsw3457vz8i09.png" alt="Successful deploy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If something is wrong you can use the verbose mode to debug:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dep deploy -v, provides default installation view with the least information 
dep deploy -vv, provides some more details as compared with the default mode 
dep deploy -vvv, provides a detailed view of the installation output
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Those are the 5 steps for a fast deployment setup for a WordPress theme.&lt;br&gt;
 If you use the same server for all of your projects you can set up this only once and only modify the variables in the deploy.php file.&lt;/p&gt;

&lt;p&gt;There are many ways to manage a WordPress theme and set up deployments. I find this an easy way to quickly set up the workflow, what do you think?&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>wordpress</category>
      <category>deployment</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>JavaScript best practices to improve code quality</title>
      <author>Saif Sadiq</author>
      <pubDate>Mon, 19 Apr 2021 09:58:30 +0000</pubDate>
      <link>https://dev.to/deepsource/javascript-best-practices-to-improve-code-quality-5d33</link>
      <guid>https://dev.to/deepsource/javascript-best-practices-to-improve-code-quality-5d33</guid>
      <description>&lt;p&gt;If you write JavaScript today, it’s worth your time staying in the know of all the updates the language has seen in the past few years. Since 2015, with the release of ES6, a new version of the ECMAScript spec has been released each year. Each iteration adds new features, new syntax, and Quality of Life improvements to the language. JavaScript engines in most browsers and Node.js quickly catch up, and it’s only fair that your code should catch up as well. That’s because with each new iteration of JavaScript comes new idioms and new ways to express your code, and many a time, these changes may make the code more maintainable for you and your collaborators.&lt;/p&gt;

&lt;p&gt;Here are some of the latest ECMAScript features, and by induction, JavaScript and Node.js that you can make use of to write cleaner, more concise, and more readable code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-block-scored-declarations"&gt;
  &lt;/a&gt;
  1. Block scored declarations
&lt;/h2&gt;

&lt;p&gt;Since the inception of the language, JavaScript developers have used &lt;code&gt;var&lt;/code&gt; to declare variables. The keyword &lt;code&gt;var&lt;/code&gt; has its quirks, the most problematic of those being the scope of the variables created by using it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var x = 10
if (true) { var x = 15 // inner declaration overrides declaration in parent scope
 console.log(x) // prints 15
}
console.log(x) // prints 15
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since variables defined with &lt;code&gt;var&lt;/code&gt; are not block-scoped, redefining them in a narrower scope affects the value of the outer scope.&lt;/p&gt;

&lt;p&gt;Now we have two new keywords that replace &lt;code&gt;var&lt;/code&gt;, namely &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; that do not suffer from this drawback.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let y = 10
if (true) { let y = 15 // inner declaration is scoped within the if block
 console.log(y) // prints 15
}
console.log(y) // prints 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; differ in the semantics that variables declared with &lt;code&gt;const&lt;/code&gt; cannot be reassigned in their scope. This does not mean they are immutable, only that their references cannot be changed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const x = [] x.push("Hello", "World!")
x // ["Hello", "World!"]

x = [] // TypeError: Attempted to assign to readonly property.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-arrow-functions"&gt;
  &lt;/a&gt;
  2. Arrow functions
&lt;/h2&gt;

&lt;p&gt;Arrow functions are another very important feature introduced recently to JavaScript. They come bearing many advantages. First and foremost, they make the functional aspects of JavaScript beautiful to look at and simpler to write.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let x = [1, 2, 3, 4] x.map(val =&amp;gt; val * 2) // [2, 4, 6, 8]
x.filter(val =&amp;gt; val % 2 == 0) // [2, 4]
x.reduce((acc, val) =&amp;gt; acc + val, 0) // 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In all of the above examples the arrow functions, named after the distinctive arrow &lt;code&gt;=&amp;gt;&lt;/code&gt;, replace traditional functions with a concise syntax.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the function body is a single expression, the scope brackets &lt;code&gt;{}&lt;/code&gt; and &lt;code&gt;return&lt;/code&gt; keyword are implied and need not be written.&lt;/li&gt;
&lt;li&gt;If the function has a single argument, the argument parentheses &lt;code&gt;()&lt;/code&gt; are implied and need not be written.&lt;/li&gt;
&lt;li&gt;If the function body expression is a dictionary, it must be enclosed in parentheses &lt;code&gt;()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Another significant advantage of arrow functions is that they do not define a scope but rather exist within the parent scope. This avoids a lot of pitfalls that can arise with the use of the &lt;code&gt;this&lt;/code&gt; keyword. Arrow functions have no bindings for &lt;code&gt;this&lt;/code&gt;. Inside the arrow function, the value of &lt;code&gt;this&lt;/code&gt; is the same as that in the parent scope. Consequently, arrow functions cannot be used as methods or constructors. Arrow functions don’t work with &lt;code&gt;apply&lt;/code&gt;, &lt;code&gt;bind&lt;/code&gt;, or &lt;code&gt;call&lt;/code&gt; and have no bindings for &lt;code&gt;super&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;They also have certain other limitations such as lack of the &lt;code&gt;arguments&lt;/code&gt; object which traditional functions can access and the inability to &lt;code&gt;yield&lt;/code&gt; from the function body.&lt;/p&gt;

&lt;p&gt;Thus arrow functions are not a 1:1 replacement for standard functions but welcome addition to JavaScript’s feature set.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-optional-chaining"&gt;
  &lt;/a&gt;
  3. Optional chaining
&lt;/h2&gt;

&lt;p&gt;Imagine a deeply nested data structure like this &lt;code&gt;person&lt;/code&gt; object here. Consider you wanted to access the first and last name of this person. You would write this in JavaScript like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;person = { name: { first: 'John', last: 'Doe', }, age: 42
}
person.name.first // 'John'
person.name.last // 'Doe'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now imagine what would happen if the &lt;code&gt;person&lt;/code&gt; object did not contain a nested &lt;code&gt;name&lt;/code&gt; object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;person = { age: 42
}
person.name.first // TypeError: Cannot read property 'first' of undefined
person.name.last // TypeError: Cannot read property 'last' of undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To avoid such errors, developers had to resort to code like the following, which is unnecessarily verbose, hard to read, and unpleasant to write — a very bad trio of adjectives.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;person &amp;amp;&amp;amp; person.name &amp;amp;&amp;amp; person.name.first // undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Meet optional chaining, a new feature of JavaScript that does away with this monstrosity. Optional chaining short-circuits the digging process as soon as it encounters a &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; value and returns &lt;code&gt;undefined&lt;/code&gt; without raising an error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;person?.name?.first // undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The resultant code is much concise and cleaner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-nullish-coalescing"&gt;
  &lt;/a&gt;
  4. Null-ish coalescing
&lt;/h2&gt;

&lt;p&gt;Before introducing the null-ish coalescing operator, JavaScript developers used the OR operator &lt;code&gt;||&lt;/code&gt; to fall back to a default value if the input was absent. This came with a significant caveat that even legitimate but falsy values would result in a fallback to the defaults.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function print(val) { return val || 'Missing'
} print(undefined) // 'Missing'
print(null) // 'Missing'

print(0) // 'Missing'
print('') // 'Missing'
print(false) // 'Missing'
print(NaN) // 'Missing'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript has now proposed the null coalescing operator &lt;code&gt;??&lt;/code&gt;, which offers a better alternative in that it only results in a fallback if the preceding expression is null-ish. Here null-ish refers to values that are &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function print(val) { return val ?? 'Missing'
} print(undefined) // 'Missing'
print(null) // 'Missing'

print(0) // 0
print('') // ''
print(false) // false
print(NaN) // NaN
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, you can ensure that if your program accepts falsy values as legitimate inputs, you won’t end up replacing them with fallbacks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-logical-assignment"&gt;
  &lt;/a&gt;
  5. Logical assignment
&lt;/h2&gt;

&lt;p&gt;Let’s say you want to assign a value to a variable if and only if the value is currently null-ish. A logical way to write this would be like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (x === null || x == undefined) { x = y
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you knew about how short-circuiting works, you might want to replace those 3 lines of code with a more succinct version using the null-ish coalescing operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x ?? (x = y) // x = y if x is nullish, else no effect
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we use the short-circuiting feature of the null-ish coalescing operator to execute the second part &lt;code&gt;x = y&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is null-ish. The code is pretty concise, but it still is not very easy to read or understand. The logical null-ish assignment does away with the need for such a workaround.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x ??= y // x = y if x is nullish, else no effect
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Along the same lines, JavaScript also introduces logical AND assignment &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; and logical OR assignment &lt;code&gt;||=&lt;/code&gt; operators. These operators perform assignment only when the specific condition is met and have no effect otherwise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x ||= y // x = y if x is falsy, else no effect
x &amp;amp;&amp;amp;= y // x = y if x is truthy, else no effect
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; If you’ve written Ruby before, you’ve seen the &lt;code&gt;||=&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; operators, since Ruby does not have the concept of falsy values.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-named-capture-groups"&gt;
  &lt;/a&gt;
  6. Named capture groups
&lt;/h2&gt;

&lt;p&gt;Let’s start with a quick recap of capture groups in regular expressions. A capture group is a part of the string that matches a portion of regex in parentheses.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let re = /(\d{4})-(\d{2})-(\d{2})/
let result = re.exec('Pi day this year falls on 2021-03-14!') result[0] // '2020-03-14', the complete match
result[1] // '2020', the first capture group
result[2] // '03', the second capture group
result[3] // '14', the third capture group
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Regular expressions have also supported named capture groups for quite some time, which is a way for the capture groups to be referenced by a name rather than an index. Now, with ES9, this feature has made its way to JavaScript. Now the result object contains a nested groups object where each capture group’s value is mapped to its name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let re = /(?&amp;lt;year&amp;gt;\d{4})-(?&amp;lt;month&amp;gt;\d{2})-(?&amp;lt;day&amp;gt;\d{2})/
let result = re.exec('Pi day this year falls on 2021-03-14!') result.groups.year // '2020', the group named 'year'
result.groups.month // '03', the group named 'month'
result.groups.day // '14', the group named 'day'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The new API works beautifully with another new JavaScript feature, de-structured assignments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let re = /(?&amp;lt;year&amp;gt;\d{4})-(?&amp;lt;month&amp;gt;\d{2})-(?&amp;lt;day&amp;gt;\d{2})/
let result = re.exec('Pi day this year falls on 2021-03-14!')
let { year, month, day } = result.groups year // '2020'
month // '03'
day // '14'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-raw-async-endraw-amp-raw-await-endraw-"&gt;
  &lt;/a&gt;
  7. &lt;code&gt;async&lt;/code&gt; &amp;amp; &lt;code&gt;await&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;One of the powerful aspects of JavaScript is its asynchronicity. This means that many functions that may be long-running or time-consuming can return a Promise and not block execution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const url = 'https://the-one-api.dev/v2/book'
let prom = fetch(url)
prom // Promise {&amp;lt;pending&amp;gt;}

// wait a bit
prom // Promise {&amp;lt;fullfilled&amp;gt;: Response}, if no errors
// or
prom // Promise {&amp;lt;rejected&amp;gt;: Error message}, if any error
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the call to fetch returns a Promise that has the status ‘pending’ when created. Soon, when the API returns the response, it transitions into a ‘fulfilled’ state, and the Response that it wraps can be accessed. In the Promises world, you would do something like this to make an API call and parse the response as JSON.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const url = 'https://the-one-api.dev/v2/book'
let prom = fetch(url)
prom // Promise {&amp;lt;fullfilled&amp;gt;: Response}
 .then(res =&amp;gt; res.json()) .then(json =&amp;gt; console.log(json)) // prints response, if no errors
 .catch(err =&amp;gt; console.log(err)) // prints error message, if any error
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In 2017, JavaScript announced two new keywords &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt;, that make handling and working with Promises easier and more fluent. They are not a replacement for Promises; they are merely syntactic sugar on top of the powerful Promises concepts.&lt;/p&gt;

&lt;p&gt;Instead of all the code happening inside a series of ‘then’ functions, &lt;code&gt;await&lt;/code&gt; makes it all look like synchronous JavaScript. As an added benefit, you can use &lt;code&gt;try...catch&lt;/code&gt; with &lt;code&gt;await&lt;/code&gt; instead of handling errors in ‘catch’ functions as you would have to if consuming Promises directly. The same code with &lt;code&gt;await&lt;/code&gt; would look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const url = 'https://the-one-api.dev/v2/book'
let res = await fetch(url) // Promise {&amp;lt;fullfilled&amp;gt;: Response} -await-&amp;gt; Response
try { let json = await res.json() console.log(json) // prints response, if no errors
} catch(err) { console.log(err) // prints error message, if any error
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;async&lt;/code&gt; keyword is the other side of the same coin, in that it wraps any data to be sent within a Promise. Consider the following asynchronous function for adding several numbers. In the real world, your code would be doing something much more complicated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function sum(...nums) { return nums.reduce((agg, val) =&amp;gt; agg + val, 0)
} sum(1, 2, 3) // Promise {&amp;lt;fulfilled&amp;gt;: 6}
 .then(res =&amp;gt; console.log(res) // prints 6

let res = await sum(1, 2, 3) // Promise {&amp;lt;fulfilled&amp;gt;: 6} -await-&amp;gt; 6
console.log(res) // prints 6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These new features just the tip of the iceberg. We have barely even scratched the surface. JavaScript is constantly evolving, and new features are added to the language every year. It’s tough to keep up with the constant barrage of new features and idioms introduced to the language manually.&lt;/p&gt;

&lt;p&gt;Wouldn’t it be nice if some tool could handle this for us? Fret not, there is. We’ve already talked in detail about &lt;a href="https://deepsource.io/blog/static-analysis-javascript/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=contentdistribution&amp;amp;utm_term=jscodequality"&gt;setting up static code analysis in your JavaScript repo&lt;/a&gt; using ESLint. It’s extremely useful and should be an indispensable tool of your toolchain. But to be honest, setting up ESLint auto-fix pipelines and processes takes time and effort. Unless you enjoy this sort of plumbing, you’d be better off if you wrote the code and outsourced the plumbing to…DeepSource!&lt;/p&gt;

&lt;p&gt;DeepSource can help you with &lt;a href="https://deepsource.io/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=contentdistribution&amp;amp;utm_term=jscodequality"&gt;automating the code reviews&lt;/a&gt; and save you a ton of time. Just add a &lt;code&gt;.deepsource.toml&lt;/code&gt; file in the root of the repository and DeepSource will pick it up for scanning right away. The scan will find scope for improvements across your code and help you fix them with helpful descriptions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://deepsource.io/signup?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=contentdistribution&amp;amp;utm_term=jscodequality"&gt;Sign up&lt;/a&gt; and see for yourself!&lt;/p&gt;

&lt;p&gt;Originally published on &lt;a href="https://deepsource.io/blog/javascript-code-quality-best-practices/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=contentdistribution&amp;amp;utm_term=jscodequality"&gt;DeepSource Blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codequality</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Solution: Combination Sum IV</title>
      <author>seanpgallivan</author>
      <pubDate>Mon, 19 Apr 2021 09:49:27 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-combination-sum-iv-3620</link>
      <guid>https://dev.to/seanpgallivan/solution-combination-sum-iv-3620</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/combination-sum-iv/discuss/1166231"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-377-medium-combination-sum-iv"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/combination-sum-iv/"&gt;Leetcode Problem #377 (&lt;em&gt;Medium&lt;/em&gt;): Combination Sum IV&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given an array of &lt;strong&gt;distinct&lt;/strong&gt; integers &lt;code&gt;nums&lt;/code&gt; and a target integer &lt;code&gt;target&lt;/code&gt;, return the number of possible combinations that add up to &lt;code&gt;target&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The answer is &lt;strong&gt;guaranteed&lt;/strong&gt; to fit in a &lt;strong&gt;32-bit&lt;/strong&gt; integer.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [1,2,3], target = 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The possible combination ways are:&lt;br&gt;(1, 1, 1, 1)&lt;br&gt;(1, 1, 2)&lt;br&gt;(1, 2, 1)&lt;br&gt;(1, 3)&lt;br&gt;(2, 1, 1)&lt;br&gt;(2, 2)&lt;br&gt;(3, 1)&lt;br&gt;Note that different sequences are counted as different combinations.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [9], target = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums[i] &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;All the elements of &lt;code&gt;nums&lt;/code&gt; are unique.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= target &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;With this problem, we can easily imagine breaking up the solution into smaller pieces that we can use as stepping stones towards the overall answer. For example, if we're searching for a way to get from &lt;strong&gt;0&lt;/strong&gt; to our target number (&lt;strong&gt;T&lt;/strong&gt;), and if &lt;strong&gt;0 &amp;lt; x &amp;lt; y &amp;lt; T&lt;/strong&gt;, then we can see that finding out how many ways we can get from &lt;strong&gt;y&lt;/strong&gt; to &lt;strong&gt;T&lt;/strong&gt; will help us figure out how many ways we can get from &lt;strong&gt;x&lt;/strong&gt; to &lt;strong&gt;T&lt;/strong&gt;, all the way down to &lt;strong&gt;0&lt;/strong&gt; to &lt;strong&gt;T&lt;/strong&gt;. This is a classic example of a &lt;strong&gt;top-down&lt;/strong&gt; (&lt;strong&gt;memoization&lt;/strong&gt;) &lt;strong&gt;dyanamic programming&lt;/strong&gt; (DP) solution.&lt;/p&gt;

&lt;p&gt;Of course, the reverse is also true, and we could instead choose to use a &lt;strong&gt;bottom-up&lt;/strong&gt; (&lt;strong&gt;tabulation&lt;/strong&gt;) DP solution with the same result.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Top-Down DP Approach&lt;/em&gt;&lt;/strong&gt;: Our DP array (&lt;strong&gt;dp&lt;/strong&gt;) will contain cells (&lt;strong&gt;dp[i]&lt;/strong&gt;) where &lt;strong&gt;i&lt;/strong&gt; will represent the remaining space left before &lt;strong&gt;T&lt;/strong&gt; and &lt;strong&gt;dp[i]&lt;/strong&gt; will represent the number of ways the solution (&lt;strong&gt;dp[T]&lt;/strong&gt;) can be reached from &lt;strong&gt;i&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;At each value of &lt;strong&gt;i&lt;/strong&gt; as we build out &lt;strong&gt;dp&lt;/strong&gt; we'll iterate through the different &lt;strong&gt;num&lt;/strong&gt;s in our number array (&lt;strong&gt;N&lt;/strong&gt;) and consider the cell that can be reached with each &lt;strong&gt;num&lt;/strong&gt; (&lt;strong&gt;dp[i-num]&lt;/strong&gt;). The value of &lt;strong&gt;dp[i]&lt;/strong&gt; will therefore be the sum of the results of each of those possible moves.&lt;/p&gt;

&lt;p&gt;We'll need to seed &lt;strong&gt;dp[0]&lt;/strong&gt; with a value of &lt;strong&gt;1&lt;/strong&gt; to represent the value of the completed combination, then once the iteration is complete, we can &lt;strong&gt;return dp[T]&lt;/strong&gt; as our final answer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Bottom-Up DP Approach&lt;/em&gt;&lt;/strong&gt;: Our DP array (&lt;strong&gt;dp&lt;/strong&gt;) will contain cells (&lt;strong&gt;dp[i]&lt;/strong&gt;) where &lt;strong&gt;i&lt;/strong&gt; will represent the current count as we head towards &lt;strong&gt;T&lt;/strong&gt; and &lt;strong&gt;dp[i]&lt;/strong&gt; will represent the number of ways we can reach &lt;strong&gt;i&lt;/strong&gt; from the starting point (&lt;strong&gt;dp[0]&lt;/strong&gt;). This means that &lt;strong&gt;dp[T]&lt;/strong&gt; will represent our final solution.&lt;/p&gt;

&lt;p&gt;At each value of &lt;strong&gt;i&lt;/strong&gt; as we build out &lt;strong&gt;dp&lt;/strong&gt; we'll iterate through the different &lt;strong&gt;num&lt;/strong&gt;s in our number array (&lt;strong&gt;N&lt;/strong&gt;) and update the value of the cell that can be reached with each num (&lt;strong&gt;dp[i+num]&lt;/strong&gt;) by adding the result of the current cell (&lt;strong&gt;dp[i]&lt;/strong&gt;). If the current cell has no value, then we can &lt;strong&gt;continue&lt;/strong&gt; without needing to iterate through &lt;strong&gt;N&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We'll need to seed &lt;strong&gt;dp[0]&lt;/strong&gt; with a value of &lt;strong&gt;1&lt;/strong&gt; to represent the value of the common starting point, then once the iteration is complete, we can &lt;strong&gt;return dp[T]&lt;/strong&gt; as our final answer.&lt;/p&gt;

&lt;p&gt;In both the top-down and bottom-up DP solutions, the &lt;strong&gt;time complexity&lt;/strong&gt; is &lt;strong&gt;O(N * T)&lt;/strong&gt; and the &lt;strong&gt;space complexity&lt;/strong&gt; is &lt;strong&gt;O(T)&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;For C++ we'll have to make sure to use unsigned ints in our &lt;strong&gt;dp&lt;/strong&gt; vector, otherwise we'll get int overflow errors.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-topdown-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Top-Down DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;combinationSum4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-bottomup-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Bottom-Up DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;combinationSum4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-topdown-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Top-Down DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;combinationSum4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-bottomup-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Bottom-Up DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;combinationSum4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-topdown-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Top-Down DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;combinationSum4&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-bottomup-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Bottom-Up DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;combinationSum4&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-topdown-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Top-Down DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;combinationSum4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-bottomup-dp"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Bottom-Up DP:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;combinationSum4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Admin Dashboard With Database - Free Projects to start fast</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 19 Apr 2021 09:48:22 +0000</pubDate>
      <link>https://dev.to/sm0ke/admin-dashboard-with-database-free-project-to-start-fast-25g5</link>
      <guid>https://dev.to/sm0ke/admin-dashboard-with-database-free-project-to-start-fast-25g5</guid>
      <description>&lt;p&gt;Hello Coders,&lt;br&gt;
This article presents a curated list with &lt;strong&gt;admin dashboards with database&lt;/strong&gt; that can be used in development right after the download. Usually, admin dashboards are provided by vendors as templates, without any functionalities, database, or authentication flow. Well, the products listed on this page come at least with a database and other useful things on top: authentication, charts, user profile pages etc. Most of the dashboards are open-source, released under permissive licenses (MIT, LGPL) on Github.&lt;/p&gt;

&lt;p&gt;Thank you! &lt;strong&gt;Content provided by &lt;a href="https://appseed.us"&gt;AppSeed - App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;(Free) &lt;a href="https://github.com/app-generator/django-argon-charts"&gt;Django Argon Charts&lt;/a&gt; - shows nice charts using Django&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://github.com/app-generator/flask-database-sample"&gt;Flask Database Sample&lt;/a&gt; - Bootstrap 5 Design coded in Flask&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://github.com/app-generator/django-datatables-sample"&gt;Django Data Tables&lt;/a&gt; - implements data pagination in Django&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://github.com/app-generator/django-user-profile"&gt;Django User Profile&lt;/a&gt; - registered users can edit their profile&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="http://bit.ly/3rLfKbq"&gt;React Nodejs Dashboard&lt;/a&gt; - Full-stack dashboard with a React UI&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;To use a database in a dashboard project we need a functional backend that manages the SQL part and translates the SQL responses to HTML, the format expected by the browsers. Dashboard Templates usually provide only the HTML pages without functional features like login, registration, or other flows (render charts, edit user information) .. etc.&lt;/p&gt;

&lt;p&gt;Samples presented in this article use technologies and frameworks like Flask, Django and NodeJS to render and manage the database information: emails, passwords, charts, user profile information. This information (backend technology and database type) is mentioned for each product.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-charts-argon"&gt;
  &lt;/a&gt;
  Django Charts Argon
&lt;/h2&gt;

&lt;p&gt;This open-source dashboard comes with an SQLite database and functional code that showcases different metrics regarding the sales for a 12 months timeframe: total sales, total orders, best sale, and best month (in sales value). &lt;br&gt;
The information is imported from an external file (csv/xls format) and the authenticated users are able to add new records and even edit existing values. The charts are updated once the new information is saved.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Framework and Database: Django/Sqlite &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://django-argon-charts.appseed-srv1.com/"&gt;Django Charts Argon&lt;/a&gt; – LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/django-argon-charts"&gt;Django Charts Argon&lt;/a&gt;  – Source Code (MIT License)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bit.ly/3si4e7q"&gt;Argon Dashboard Django&lt;/a&gt; – the original starter (free product)&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4qAwLmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/static/master/samples/django-argon-charts-import-data.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4qAwLmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/static/master/samples/django-argon-charts-import-data.gif" alt="Admin Dashboard With Database - Django Charts Argon provided by Creative-Tim."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-data-tables"&gt;
  &lt;/a&gt;
  Django Data Tables
&lt;/h2&gt;

&lt;p&gt;Simple Django project that uses an SQLite database to manage the information using a paginated layout: data tables. Users can inspect the data with ease and each record can be edited in-place using Ajax - &lt;strong&gt;Project features &amp;amp; links&lt;/strong&gt;:&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Framework and Database: Django/Sqlite&lt;/li&gt;
&lt;li&gt;Load sample data using the admin section&lt;/li&gt;
&lt;li&gt;Inline rows edit activated at double click&lt;/li&gt;
&lt;li&gt;Pagination and Search&lt;/li&gt;
&lt;li&gt;Links: &lt;a href="https://django-datatables-sample.appseed.us/"&gt;LIVE Demo&lt;/a&gt;, &lt;a href="https://github.com/app-generator/django-datatables-sample"&gt;Sources&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The original project: &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-volt"&gt;Volt Django Dashboard&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GJVYmm8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/django-datatables-sample/master/media/django-datatables-sample-intro.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GJVYmm8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/django-datatables-sample/master/media/django-datatables-sample-intro.gif" alt="Admin Dashboard With Database - Django Data Tables provided by AppSeed."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#django-user-profile"&gt;
  &lt;/a&gt;
  &lt;a href="https://themesberg.com/blog/django/user-profile-tutorial"&gt;Django User Profile&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Django Sample project that allows registered users to edit their profile outside of the admin module. &lt;strong&gt;&lt;a href="https://themesberg.com/blog/django/user-profile-tutorial"&gt;Django User Profile&lt;/a&gt;&lt;/strong&gt; is provided on top of Django Volt, a popular open-source &lt;strong&gt;&lt;a href="https://themesberg.com/templates/django"&gt;Django Template&lt;/a&gt;&lt;/strong&gt; provided by Themesberg and AppSeed. For newcomers, Django is the most popular Python-based web framework initially released in 2003 and currently a reference framework in web development - &lt;strong&gt;Project features &amp;amp; links&lt;/strong&gt;:&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Framework and Database: Django/Sqlite&lt;/li&gt;
&lt;li&gt;Editable user profile: Name, Surname, Email, Phone, and address&lt;/li&gt;
&lt;li&gt;User Profile Page: &lt;code&gt;settings.html&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Links: &lt;a href="https://django-user-profile.appseed-srv1.com/"&gt;LIVE Demo&lt;/a&gt;, and &lt;a href="https://github.com/app-generator/django-user-profile"&gt;Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UBr_HyI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/007dthkaoc8ti6bd2ror.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UBr_HyI5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/007dthkaoc8ti6bd2ror.png" alt="Admin Dashboard With Database - Django User Profile provided by Themesberg"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nodejs-argon-dashboard-react"&gt;
  &lt;/a&gt;
  &lt;a href="http://bit.ly/3rLfKbq"&gt;Nodejs Argon Dashboard React&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This database comes with a Mongo Database and the backend this time is NodeJS. The sample is production-ready and requires Nodejs and Javascript knowledge to use - &lt;strong&gt;Project features &amp;amp; links&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MERN Stack: Mongo Database, Express/NodeJS Backend and React (UI)&lt;/li&gt;
&lt;li&gt;Authentication: Login, Register, Forgot Password&lt;/li&gt;
&lt;li&gt;User Management: Update User Information, List Registered Users
&lt;/li&gt;
&lt;li&gt;Links: &lt;a href="http://bit.ly/3rLfKbq"&gt;Product Page&lt;/a&gt;, &lt;a href="https://github.com/creativetimofficial/argon-dashboard-react-nodejs"&gt;Source Code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkREW9WS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16scb8f0k5470ebhjkyq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkREW9WS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16scb8f0k5470ebhjkyq.png" alt="Admin Dashboard With Database - Nodejs/React open-source sample. "&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-database-sample"&gt;
  &lt;/a&gt;
  Flask Database Sample
&lt;/h2&gt;

&lt;p&gt;This admin dashboard comes with a simple SQLite database managed by Flask, a popular Python-based framework. The source code (published on Github) comes with a comprehensive README that explains the necessary setup to use the project.  The sample explains step by step how to configure a Flask project to use an SQLite database via SQLAchemy, a popular SQL library for Python.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/flask-database-sample"&gt;Flask Database Sample&lt;/a&gt; - project source code&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-atlantis-dark"&gt;Atlantis Lite Flask&lt;/a&gt; - the same starter with more modules&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-Frto4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpyc80v85tarzgaib97e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-Frto4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpyc80v85tarzgaib97e.png" alt="Admin Dashboard With Database - Flask Database Sample provided by AppSeed."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - Open-source and free (curated list)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-source Admin Dashboards&lt;/a&gt; - provided by AppSeed &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>dashboards</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Laravel Validation Required Example</title>
      <author>Dharmik Tank</author>
      <pubDate>Mon, 19 Apr 2021 09:36:26 +0000</pubDate>
      <link>https://dev.to/dharmik_tank/laravel-validation-required-example-1llh</link>
      <guid>https://dev.to/dharmik_tank/laravel-validation-required-example-1llh</guid>
      <description>&lt;p&gt;Hi Guys,&lt;br&gt;
Today, I will learn you to create validation required in laravel.we will show example of laravel validation required.&lt;br&gt;
The field under validation must be present in the input data and not empty. &lt;br&gt;
more&lt;br&gt;
&lt;a href="https://itwebtuts.blogspot.com/2021/04/laravel-validation-required-example.html"&gt;https://itwebtuts.blogspot.com/2021/04/laravel-validation-required-example.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>validation</category>
    </item>
    <item>
      <title>10 Best Google Chrome Extensions for Web Designers And Developers in 2021</title>
      <author>Pawan Bhayde</author>
      <pubDate>Mon, 19 Apr 2021 09:32:20 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/10-best-google-chrome-extensions-for-web-designers-and-developers-in-2021-1j17</link>
      <guid>https://dev.to/pawanbhayde/10-best-google-chrome-extensions-for-web-designers-and-developers-in-2021-1j17</guid>
      <description>&lt;p&gt;As a designer/developer we use google chrome in daily life. That's why I brought the top 15 google extensions to make your work easy, We have a modern browser that is always upgraded by developers. I have brought 15 browser extensions today that will help you in coding.&lt;/p&gt;

&lt;p&gt;Best Google Chrome Extensions for Web Designers and Developers:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;WhatFont&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The easiest thanks to identify fonts on sites &lt;/p&gt;

&lt;p&gt;What is the simplest thanks to determine the fonts utilized in a webpage? Firebug and Webkit Inspector are easy enough to use for developers. However, for others, this could not be necessary. With this extension, you'll inspect web fonts by just hovering on them. it's that straightforward and stylish .&lt;/p&gt;

&lt;p&gt;It also detects the services used for serving the online fonts. Supports Typekit and Google Font API.&lt;/p&gt;

&lt;p&gt;To embrace the new web font era, WhatFont also detects services used for serving the font. Now supports Typekit and Google Font API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;ruul. Screen ruler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A fantastically simple on-screen ruler for lining up and measuring type, line height, strokes and almost anything on the online .&lt;/p&gt;

&lt;p&gt;Get pixel perfect with: horizontal and vertical draggable rulers; pixel, picas and sort measurements, line height guides and stroke widths. Move ruul with arrow keys, one pixel at a time, and use multiple ruul together. Ruul have 4 different coloured ruul, steel and wooden ruul included.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;Screen Capture By Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Capture visible content of a tab, a neighborhood of an internet page, or the entire page as a PNG image. Support horizontal and vertical scroll…&lt;/p&gt;

&lt;p&gt;It's easy to use this extension to capture visible content of a tab, a neighborhood of an internet page, or the entire page as a PNG image.&lt;/p&gt;

&lt;p&gt;You can also edit your captured image before saving it as a PNG image. Highlighting, redacting and adding text are supported.&lt;/p&gt;

&lt;p&gt;What set this extension apart are: Super fast when capturing page image, esp. for giant pages; Support horizontal scroll for giant pages that don't slot in one tab screen horizontally; Intelligently detect floating objects on a page and avoid repeating capture of an equivalent floating objects if whole page capture requires scrolling; Works on Windows, Linux and Mac&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;Image Downloader&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See all images shown or linked on an internet page and download them.&lt;/p&gt;

&lt;p&gt;If you would like to bulk download images from an internet page, with this extension you can: See images that the page contains and links to, Filter or sort them by URL; also supports wildcards and regular expressions, Optionally show only images from links, Select images for download by either using the checkboxes or directly clicking on the image, Dedicated buttons to download or open in new tab individual images, Customize display width, border size, style and color, Hide filters, buttons and notifications you do not need&lt;/p&gt;

&lt;p&gt;When you press the "Download" button, all selected images are saved to the default download directory of Chrome. If you do not have one, you'll need to manually choose the save location for every image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;Evernote Web Clipper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save all the content you discover interesting round the web in your account.&lt;/p&gt;

&lt;p&gt;From interests to research, save anything you see online—including text, links and images—into your Evernote account with one click. With one click, clip part or all of any webpage, including text, images, and links. Collect everything that inspires you online. Have it forever, albeit the first goes away.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;RescueTime for Google Chrome™&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RescueTime may be a personal-analytics service that helps you understand how you spend some time .&lt;/p&gt;

&lt;p&gt;RescueTime may be a personal-analytics service that helps you understand how you spend time on your computer, smartphone and tablet. there's no manual data-entry required. The web-application works hand-in-hand with the installable client available for OS X, Windows, Linux, Android devices, and ChromeOS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;Pinterest for Google Chrome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Discover, collect, and share inspiration&lt;/p&gt;

&lt;p&gt;Pinterest may be a tool to seek out your inspiration and share it with others. Use it to gather belongings you love, organize and plan important projects, and more.&lt;/p&gt;

&lt;p&gt;The official Pinterest extension for Google Chrome adds a button to your browser that allows you to pin from any website, quickly and simply&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;Web Developer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adds a toolbar button with various web developer tools. The official port of the online Developer extension for Firefox.&lt;/p&gt;

&lt;p&gt;Adds a toolbar button with various web developer tools. The official port of the online Developer extension for Firefox.&lt;/p&gt;

&lt;p&gt;The Web Developer extension adds a toolbar button to the browser with various web developer tools. this is often the official port of the online Developer extension for Firefox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;Alexa Traffic Rank&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Official Alexa Traffic Rank Extension, providing Alexa Traffic Rank and site Information when clicked.&lt;/p&gt;

&lt;p&gt;Users: 229.128 | Rate: 4,6 /5&lt;/p&gt;

&lt;p&gt;Alexa Traffic Rank is Alexa Internet's free extension for Chrome, and is that the only extension that has you in Alexa's traffic panel. The Alexa extension accompanies you as you surf, providing you with Alexa data about the sites you visit without interrupting your browsing.&lt;/p&gt;

&lt;p&gt;Get quick and straightforward access to a site's Alexa Traffic Rank and sites linking in. How does this site's traffic compare to other sites on the Web?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webdevpawan.blogspot.com/2021/04/10-best-google-chrome-extensions-for_19.html"&gt;Eye Dropper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eye Dropper is open source extension which allows you to select colors from sites &lt;/p&gt;

&lt;p&gt;Users: 220.009 | Rate: 4 /5&lt;/p&gt;

&lt;p&gt;Eye Dropper is open source extension which allows you to select colors from sites , color picker and your personal color history.&lt;/p&gt;

&lt;p&gt;Eye Dropper is extension for Google Chrome and Chromium. It allows you to select color from any webpage or from advanced color picker. it's useful gizmo for web developers.&lt;/p&gt;

&lt;p&gt;Hope You Enjoy This Post....!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>discuss</category>
      <category>design</category>
      <category>career</category>
    </item>
    <item>
      <title>Crio Winter of Doing: Externships</title>
      <author>Rudrakshi</author>
      <pubDate>Mon, 19 Apr 2021 08:56:39 +0000</pubDate>
      <link>https://dev.to/rudrakshi99/crio-winter-of-doing-externships-17gi</link>
      <guid>https://dev.to/rudrakshi99/crio-winter-of-doing-externships-17gi</guid>
      <description>&lt;p&gt;Hey everyone! In this blog, I am going to share my learning experience of externship during the Crio Winter of Doing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.crio.do/"&gt;Crio.Do&lt;/a&gt; is a platform that empowers developers to crack real-world industry problems with a moto Learn by Doing.&lt;a href="https://www.crio.do/crio-winter-of-doing/"&gt;Crio Winter of Doing&lt;/a&gt; or CWoD is perfect for working professionals who are looking to gain stellar product development and tech project-building experience.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-are-tech-externships"&gt;
  &lt;/a&gt;
  What are tech externships?
&lt;/h1&gt;

&lt;p&gt;Tech externships are experiential learning opportunities, similar to internships, but shorter and part-time, provided in partnership with tech companies. Crio Winter of Doing externships are a great opportunity to solve real-world problems in an actual tech startup setting and learn key skills that will help you advance your dev career.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#benefits-of-crio-winter-of-doing"&gt;
  &lt;/a&gt;
  Benefits of Crio Winter of Doing:
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You get to work on challenging tech projects (externships) directly with top startups in India.&lt;/li&gt;
&lt;li&gt;You get to interact with the biggest names in India’s tech industry.&lt;/li&gt;
&lt;li&gt;You participate in engaging Masterclass workshops on the hottest tech topics from top engineers in India.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eLOo28zB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7qwyllk71s4d96oa51y0.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CWoD program’s structure is divided into 3 stages and at each stage, some students were selected and they moved to the next stage of the program. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stage 1:&lt;/strong&gt; It consisted of 8 modules with hands-on experience. They referred to these modules as Bytes which contains important basic concepts of software development like HTTP, REST, Linux Basics, AWS, Git Basics, etc.&lt;/p&gt;

&lt;p&gt;We get introduced to Full-Stack development by building a beautiful portfolio i.e. &lt;a href="https://rudrakshi-profile.netlify.app/"&gt;QProfile&lt;/a&gt; that used some latest technologies like React JS, Gatsby JS and hosted on Netlify and Heroku in which we also used API concepts and HTTP concepts too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stage 2:&lt;/strong&gt; This stage was for the Stage 1 graduate and the time duration for this one was around 3 weeks. In this stage, we get introduced to backend and frontend concepts and the tech stacks required for the externship with the help of shared materials regarding coding and mini-projects. We build a complete mini-project i.e. &lt;a href="https://github.com/rudrakshi99/Xmeme"&gt;XMeme&lt;/a&gt;. On the basis of the scores generated after the project evaluation, some developers are selected for the tech externship.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stage 3:&lt;/strong&gt; The time duration for this was around 6 weeks. We get assigned to an externship project recommended by amazing companies like Cred, Groww, Jumbotail, AWS, Slice, and others as well based on our performance and worked in a team of 2 based on our tech stack, under the guidance of industry mentors through AMA sessions.&lt;/p&gt;

&lt;p&gt;I was assigned a project &lt;a href="https://github.com/rudrakshi99/Cashflow-management-app"&gt;Cash Flow Management App&lt;/a&gt; with Sukanta Nandi, who is a working professional at Cognizant, recommended by &lt;a href="https://jumbotail.com/"&gt;Jumbotail&lt;/a&gt; which is a top-tier VC-funded startup, building an online wholesale marketplace for food and grocery, targeted at wholesale buyers. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kI2AhoZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x4nfx9de8tnb2udj5ql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kI2AhoZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x4nfx9de8tnb2udj5ql.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=6yEJ95kmRPU"&gt;Cash Flow Management App&lt;/a&gt; is an application that enables small business owners to track all their credit and debit transactions in one place. The application has the provision to enter individual transactions for each entity (vendor, customer, etc.). It is capable of pulling up historical transactions related to a particular entity or show the overall cash flow summary.&lt;/p&gt;

&lt;p&gt;The project was really marvelous and the tasks were challenging for us to complete the project on time. We have submitted regular progress reports and they conducted demos to present our project to the project mentors in order to keep a track of the work. Only 2-3 teams per project were chosen for a final demo to the company. And the best part, all graduating teams are eligible for job referrals through Crio's hiring partners 🎉.&lt;/p&gt;

&lt;p&gt;At last, I am very fortunate that I was able to work on a challenging project of an exciting tech startup and acquired new skills in this learning journey. Thank you Crio.do for this amazing opportunity and the externship.&lt;/p&gt;






&lt;p&gt;Thanks for reading and don’t forget to give your views and suggestions as well.&lt;/p&gt;

</description>
      <category>mywinterofdoing</category>
      <category>shareyourlearning</category>
      <category>crio</category>
      <category>cwod</category>
    </item>
    <item>
      <title>Embedded Dev 2021</title>
      <author>Abby</author>
      <pubDate>Mon, 19 Apr 2021 08:42:54 +0000</pubDate>
      <link>https://dev.to/abby06/embedded-dev-2021-5b7k</link>
      <guid>https://dev.to/abby06/embedded-dev-2021-5b7k</guid>
      <description>&lt;p&gt;We’re thrilled to Launch EmbeddedDev 2021! Develop a project running Opensource &lt;a href="https://www.rt-thread.io/"&gt;RT-Thread Real-time Operating System&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E2KOUsrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8rdac8ysvgoqgx9brz2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2KOUsrC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8rdac8ysvgoqgx9brz2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-participation-and-valuable-input-will-make-this-event-a-true-success"&gt;
  &lt;/a&gt;
  Your participation and valuable input will make this event a true success!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Submit the project you want to achieve with RT-Thread and the dev board you need by filling out this application form to &lt;a href="https://forms.gle/9rtxKcLDvXwZ39Qy7"&gt;Enter EmbeddedDev2021&lt;/a&gt;. RT-Thread will offer you a Free dev board! Opening on April 19, 2021, to May 19, 2021.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will choose the TEN most fitting projects submitted (if there are a large number of applicants, we’ll open more seats), and RT-Thread will buy the dev boards required for the ten chosen applicants to develop their projects!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applicants must submit their completed projects before July 19. The code and documentation related to your projects should be public and open source (on GitHub). RT-Thread’s engineering team will support this event by providing technical guidance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RT-Thread review: July 20 to July 25&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Winners’ awards: July 26&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#awards-first-prize-500-cash"&gt;
  &lt;/a&gt;
  Awards: First Prize — $500 cash
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The application form opens from April 19 to May 19, 2021&lt;/li&gt;
&lt;li&gt;Dev boards shipped: May 19, 2021&lt;/li&gt;
&lt;li&gt;Submissions deadline: July 19, 2021&lt;/li&gt;
&lt;li&gt;Winners announced: July 26, 2021&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;RT-Thread Contact Info:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.rt-thread.io/"&gt;Website&lt;/a&gt;  |  &lt;a href="https://github.com/RT-Thread"&gt;Github&lt;/a&gt;  | &lt;a href="https://twitter.com/rt_thread"&gt;Twitter&lt;/a&gt; |  &lt;a href="https://www.facebook.com/RT-Thread-IoT-OS-110395723808463"&gt;Facebook&lt;/a&gt;   |   &lt;a href="https://www.youtube.com/channel/UCdDHtIfSYPq4002r27ffqPw"&gt;Youtube&lt;/a&gt; &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>embedded</category>
      <category>rtos</category>
      <category>iot</category>
    </item>
    <item>
      <title>Iconic developers | part 3 🏹🎅😳</title>
      <author> 🐤🥇 Jasper de Jager</author>
      <pubDate>Mon, 19 Apr 2021 08:09:26 +0000</pubDate>
      <link>https://dev.to/jmdejager/iconic-developers-part-3-47fc</link>
      <guid>https://dev.to/jmdejager/iconic-developers-part-3-47fc</guid>
      <description>&lt;h1&gt;
  &lt;a href="#the-new-iconic-developers-is-here"&gt;
  &lt;/a&gt;
  The new iconic developers is here!
&lt;/h1&gt;

&lt;p&gt;Thanks &lt;a class="mentioned-user" href="https://dev.to/technoglot"&gt;@technoglot&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/theowlsden"&gt;@theowlsden&lt;/a&gt;
 and &lt;a class="mentioned-user" href="https://dev.to/nefomemes"&gt;@nefomemes&lt;/a&gt;
&lt;br&gt;
Keep it up!&lt;/p&gt;

&lt;p&gt;I hope there will be three more in the comments so we can continue this list 😊😊&lt;/p&gt;

&lt;p&gt;Maybe some ideas:&lt;br&gt;
😴🤐🤒😵🥴🐱‍👤🙈🙉🙊&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-bug-buster"&gt;
  &lt;/a&gt;
  🏹 The Bug Buster
&lt;/h2&gt;

&lt;p&gt;Name says it all: that person on the team that is a master in bug squashing. No pesticides needed: their eyes are enough. No bug is safe from them!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#habitat"&gt;
  &lt;/a&gt;
  Habitat
&lt;/h4&gt;

&lt;p&gt;They live inside IDE's and have static code analysis for breakfast, lunch, and dinner. Code quality is their utmost priority!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-to-ask-for"&gt;
  &lt;/a&gt;
  Best to ask for
&lt;/h4&gt;

&lt;p&gt;Advice on how to exterminate bugs. They can sniff them from miles away! 👃🏻&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#needs-works-on"&gt;
  &lt;/a&gt;
  Needs works on
&lt;/h4&gt;

&lt;p&gt;Working on actual features! Squashing bugs is important, but we've got a product to ship! 📦These features won't take care of themselves!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://dev.to/technoglot/comment/1denf"&gt;Based on this comment&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#the-tools-santa"&gt;
  &lt;/a&gt;
  🎅 The tools Santa
&lt;/h2&gt;

&lt;p&gt;Do you have a problem you don't know how to solve? They have a tool for you.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#habitat"&gt;
  &lt;/a&gt;
  Habitat
&lt;/h4&gt;

&lt;p&gt;Your everyday office, forums, anywhere really. If you have a question, they are there to answer with a tool (a new software, library, etc).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-to-ask-for"&gt;
  &lt;/a&gt;
  Best to ask for
&lt;/h4&gt;

&lt;p&gt;An over-engineered solution to a problem. They have experience with a whole lot of tools.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#needs-works-on"&gt;
  &lt;/a&gt;
  Needs works on
&lt;/h4&gt;

&lt;p&gt;Tone it down a bit. Not everything needs to be solved with a new tool.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://dev.to/theowlsden/comment/1delm"&gt;Based on this comment&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#the-branch-breaker"&gt;
  &lt;/a&gt;
  😳 The branch breaker
&lt;/h2&gt;

&lt;p&gt;Look out! This developer will break your branch. A mistake like running git reset HEAD when they should have used git reset --soft HEAD  is not uncommon..&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#habitat"&gt;
  &lt;/a&gt;
  Habitat
&lt;/h4&gt;

&lt;p&gt;Mostly found behind a terminal looking like 😥. Searching for a fix for the made mistakes, hoping no one will ever find out what they did.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#best-to-ask-for"&gt;
  &lt;/a&gt;
  Best to ask for
&lt;/h4&gt;

&lt;p&gt;Helping you fix git mistakes, they’ve been there and know how to get you out!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#needs-works-on"&gt;
  &lt;/a&gt;
  Needs works on
&lt;/h4&gt;

&lt;p&gt;Admitting their mistakes instead of (trying to) cover them up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://dev.to/nefomemes/comment/1dfbk"&gt;Based on this comment&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Leave yours in the comments!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>watercooler</category>
      <category>programming</category>
    </item>
    <item>
      <title>10 Awesome CSS Resources</title>
      <author>Kiran Raj R</author>
      <pubDate>Mon, 19 Apr 2021 08:01:01 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/10-awesome-css-resources-14mh</link>
      <guid>https://dev.to/kiranrajvjd/10-awesome-css-resources-14mh</guid>
      <description>&lt;p&gt;A list of few CSS resource that help me design the CSS code better. I will give you a brief intro to each resources listed here, its better to play with each of the resources, it can help you design the code better and help to understand how the code works. &lt;/p&gt;

&lt;p&gt;1.&lt;a href="https://bennettfeely.com/clippy/"&gt;Clippy&lt;/a&gt; : A great resource for CSS shapes generation.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2jXwJ5GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnvyxwplu4ieg4gu5q9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2jXwJ5GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pnvyxwplu4ieg4gu5q9m.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&lt;a href="https://codepen.io/AnchorIdeas/full/GQbrgp/"&gt;Code Pen By AnchorIdeas&lt;/a&gt; : A flexbox visualizer with code generator.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IqEur2fp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocj0gzz6ng7c3xhc2u0j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IqEur2fp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocj0gzz6ng7c3xhc2u0j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;a href="https://codepen.io/carolineartz/full/ogVXZj"&gt;Code Pen By Carolineartz&lt;/a&gt; : An interactive box model visualizer.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kpOGZBtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjr4zq79h6u3kc73alm2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kpOGZBtZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjr4zq79h6u3kc73alm2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;a href="https://keyframes.app/animate/"&gt;Keyframes&lt;/a&gt; : This website help you in generating CSS animation code, you can play with various animations option and generate code for it.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mwWoxLBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gn6jr8xpt5ee3hvzkv5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mwWoxLBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gn6jr8xpt5ee3hvzkv5w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.&lt;a href="https://screensizemap.com/"&gt;Screensizemap&lt;/a&gt; : A screen size comparison for your responsive design.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xUUKsBN6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqimqz26vmfrmro8ez8s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xUUKsBN6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqimqz26vmfrmro8ez8s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6.&lt;a href="https://cssduotone.com/"&gt;CSSduotone&lt;/a&gt;: This site help you to apply an overlay to your image.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wmkhEYKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ojyhpv2qu98nvaldtdh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wmkhEYKc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ojyhpv2qu98nvaldtdh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7.&lt;a href="https://css-doodle.com/"&gt;CSS Doodle&lt;/a&gt; : A web component for drawing patterns with CSS.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9yjYkkW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5odw01wgi8f7coxtdy1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9yjYkkW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5odw01wgi8f7coxtdy1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8.&lt;a href="https://katydecorah.com/css-ruler/"&gt;CSS Ruler&lt;/a&gt; : An interactive visual size comparison generator. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IS2U6GAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/389lgm641u345ztduhf8.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IS2U6GAB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/389lgm641u345ztduhf8.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;9.&lt;a href="https://easings.co/"&gt;Easing.co&lt;/a&gt; : Test common easing curves on a range of interfaces. Or generate your own custom bezier curve.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9DjR6S6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/timphetnsj0vsn06wdup.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9DjR6S6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/timphetnsj0vsn06wdup.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10.&lt;a href="https://neumorphism.io/"&gt;Neumorphism.io&lt;/a&gt; : Generate Soft-UI CSS code&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gLu5Y9iG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il1ajjlq2pq0k5niuwsu.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLu5Y9iG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il1ajjlq2pq0k5niuwsu.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kiranrajvjd/awesome-css-layout-resources-for-beginners-508a"&gt;Awesome CSS Layout Resources For Beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kiranrajvjd/20-awesome-css-code-generators-27gp"&gt;20+ Awesome CSS Code Generator Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kiranrajvjd/awesome-35-svg-resources-for-your-next-web-project-5c15"&gt;40+ Awesome SVG Resources for Web Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kiranrajvjd/4-awesome-tools-that-help-you-to-manage-you-css-code-better-39b6"&gt;4 Awesome Tools That Help To Code CSS Better&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>AWS open source news and updates #64</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 19 Apr 2021 07:40:11 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-5145</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-5145</guid>
      <description>&lt;h2&gt;
  &lt;a href="#april-19th-2021-instalment-64"&gt;
  &lt;/a&gt;
  April, 19th, 2021 - Instalment #64
&lt;/h2&gt;

&lt;p&gt;Newsletter #64. &lt;/p&gt;

&lt;p&gt;Another great selection of posts this week, starting off with the announcement last week of OpenSearch and OpenSearch Dashboards, the name of the community driven open source fork of Elasticsearch and Kibana. We have a great selection of community posts covering topics such as Apache Zeppelin, Rust, OpenJDK as well as an exciting new project called Lift to watch out for. Some great new open source projects including how to run Haskell on AWS Lambda, a nice project to make it easy to run EKS Distro on your desktop, so make sure you check those out. Finally we have some new events to put in your diary and then the usual round up of AWS open source related posts, a great podcast from Stelligent on the open source project mutato, and a video from the Seattle Java User Group taking a look at "A Journey into Latency Reduction" with Amazon Corretto. Plenty to keep you busy, but first, let's take a look at OpenSearch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The big news of last week was the post announcing OpenSearch and OpenSearch Dashboards, the name of the community-driven, open source fork of Elasticsearch and Kibana. In the post &lt;a href="https://aws-oss.beachgeek.co.uk/e5"&gt;Introducing OpenSearch&lt;/a&gt;, Carl Meadows, Jules Graybill, Kyle Davis, and Mehul Shah share details of this announcement, how we are working with the community and how the project is progressing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Our goal with the OpenSearch project is to make it easy for as many people and organizations as possible to use OpenSearch in their business, their products, and their projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many business are supporting OpenSearch, and are as diverse as Red Hat, SAP, Capital One, and Logz.io. In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/eg"&gt;logit.io's response to the Elasticsearch B.V SSPL Licensing Change&lt;/a&gt; from Lee Smith explains how they are looking to incorporate OpenSearch and Open Search Dashboards as part of their Stack offering, just one of many business' that are looking to adopt OpenSearch.&lt;/p&gt;

&lt;p&gt;Essential reading this week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Source Job of the week&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ec"&gt;Sr. Software Development Engineer - rust-vmm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this role, you will work on rust-vmm [1]. Rust-vmm is an open-source project that empowers the community to build custom Virtual Machine Monitors (VMMs) and hypervisors. It provides a set of virtualisation components that any project can use to quickly develop virtualisation solutions while focusing on the key differentiators of their product rather than re-implementing common components like KVM wrappers, virtio devices and other VMM libraries.The rust-vmm project is organised as a shared effort, shared ownership open-source project that includes (so far) contributors from Alibaba, AWS, Cloud Base, Crowdstrike, Intel, Google, Red Hat as well as individual contributors. It's components are already used in several projects such as Firecracker [2] and Cloud Hypervisor, [3] with more integrations under way.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Shrirang Moghe, Brandon Leach, Chabane Refes, Chanwit Kaewkasi, Adrian Hornsby, Matthieu Napoli, Alolita Sharma, Imaya Kumar Jagannathan, Eitan Sela, Pahud Hsieh, Nima Kaviani, Vikrant Kahlir, Gaurav Dhamija, Sameer Kumar, Gopalakrishnan Subramanian, Shane Miller, Carl Meadows, Jules Graybill, Kyle Davis, Mehul Shah, Colm MacCárthaigh, Curtis Rissi, Mike Salvatore, Lee Smith, Abdullah T, Shane Miller, Wilhelm Wonigkeit, Andy Blackledge, Shubham Muneshwar, Paul Singman, Yishai Galatzer, Kelvin Nilsen, Toshal Dudhwala, Imaya Kumar Jagannathan, Carlos Perea and Luca Mazzaferro.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#book-to-watch-out-for"&gt;
  &lt;/a&gt;
  Book to watch out for
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Running Serverless Realtime GraphQL applications with AppSync&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make sure you sign up to be notified when this new book from a collection of AWS Heroes, Aleksandar Simovic, Slobodan Stojanovic and Gojko Adzic. The book will cover  how to build and operate responsive, collaborative applications at scale with AWS AppSync and GraphQL.&lt;/p&gt;

&lt;p&gt;The book will be available in Q3 2021, so &lt;a href="https://aws-oss.beachgeek.co.uk/er"&gt;click on this link&lt;/a&gt; to keep notified when it has been launched.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-from-open-source-projects"&gt;
  &lt;/a&gt;
  Latest from open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ekz&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/et"&gt;ekz&lt;/a&gt; Chanwit Kaewkasi's project is an opinionated Kubernetes distribution built using binaries from the AWS EKS Distro (EKS-D) and aims to be the easiest way to run EKS clusters on desktop (Linux/Mac and Windows).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;wai-handler-hal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/eu"&gt;wai-handler-hal&lt;/a&gt; from the Technology team at Bellroy lets you run Haskell (wai) Applications on AWS Lambda. WAI is the Haskell version of WSGI (Python) or Rack (Ruby): the ecosystem's standard library that describes the interface between web servers and web applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ssh-restricted&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/es"&gt;ssh-restricted&lt;/a&gt; from my colleague Adrian comes this handy AWS Config rule you can use that will check to see if any public ssh with a wide scope (i.e. 0.0.0.0/0) and then trigger a lambda function to remediate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CZ5tuO67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/adhorn/ssh-restricted/master/arch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CZ5tuO67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/adhorn/ssh-restricted/master/arch.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;open-distro-for-elasticsearch-grafana-datasource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/eq"&gt;open-distro-for-elasticsearch-grafana-datasource&lt;/a&gt; with the Open Distro for Elasticsearch plugin, you can run many types of simple or complex Elasticsearch queries to visualise logs or metrics stored in Elasticsearch. You can also annotate your graphs with log events stored in Elasticsearch. The Open Distro for Elasticsearch plugin is similar to the built-in Elasticsearch plugin, but with added support for AWS Sigv4 authentication and Piped Processing Language (PPL).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cdk-cloudfront-plus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/e1"&gt;cdk-cloudfront-plus&lt;/a&gt; Caught this &lt;a href="https://twitter.com/pahudnet/status/1381277549154639888"&gt;tweet&lt;/a&gt; from my colleague Pahud Hsieh, which was a great collaboration between a number of AWS Community Builders to build some new AWS CDK constructs covering &lt;a href="mailto:Lambda@Edge"&gt;Lambda@Edge&lt;/a&gt;. This is a great effort, and the constructs cover everything from security, logging and the usual suspects when it comes to working with AWS CloudFront.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;eks-operators-airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is not ready yet, but a new issue was raised in the Apache Airflow project around creating a new operator to interact with Amazon EKS. You can view the current thinking in the issue, &lt;a href="https://aws-oss.beachgeek.co.uk/e9"&gt;Create EKS operators #8544&lt;/a&gt; and the aim of this is to create a new Airflow operator that will:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The proposed solution is a collection of Operators, and their underlying Hooks, which will be added to the Amazon AWS provider package. These Operators will handle creating and deleting clusters, as well as executing tasks using EKS Managed Node Groups.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;monkey&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ee"&gt;monkey&lt;/a&gt; "The Infection Monkey" is an open source security tool for testing a your resiliency to perimeter breaches and internal server infection. It is not a new open source project, but the new update last week (version 1.10.0) provides a new zero trust assessment capabilities so you can conduct zero trust assessments of your AWS environments to help identify the potential gaps in an organisation’s AWS security posture that can put data at risk. Read more on this by checking out this blog post,&lt;a href="https://aws-oss.beachgeek.co.uk/ef"&gt;The Infection Monkey 1.10.0 — Go Bananas with New AWS Zero Trust Assessments&lt;/a&gt; from Mike Salvatore.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---DVUpWzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/guardicore/monkey/develop/.github/zero-trust-report.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---DVUpWzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/guardicore/monkey/develop/.github/zero-trust-report.png" alt="report"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-htc-grid&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/el"&gt;aws-htc-grid&lt;/a&gt; is an open source project that povides a reference architecture that can be used to build and adapt a modern High throughput compute solution using underlying AWS services, allowing users to submit high volumes of short and long running tasks and scaling environments dynamically. The project covers some suggested use cases and also where this may not be the best application. Check out the &lt;a href="https://aws-oss.beachgeek.co.uk/em"&gt;documentation&lt;/a&gt; which provides clear guidance on how to set this up, the architecture and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--72nfXpAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/awslabs/aws-htc-grid/main/docs/images/high_level_architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--72nfXpAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/awslabs/aws-htc-grid/main/docs/images/high_level_architecture.png" alt="arch"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OtxScjzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/awslabs/aws-htc-grid/main/docs/images/job_submission_steps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OtxScjzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/awslabs/aws-htc-grid/main/docs/images/job_submission_steps.png" alt="key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tui&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/e7"&gt;tui&lt;/a&gt; this is a very new open source tool from Teem Ops that provides a nice gui tool that allows you to create generate aws cli commands to launch cloudformation templates that will build what you define. At the moment the support is  limited to EC2 and Autoscaling, but it is very early days for this project. Take a look and why not provide the project some feedback.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hDqy2cd2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/teemops/assets/master/teemops-scg-gif.mp4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hDqy2cd2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/teemops/assets/master/teemops-scg-gif.mp4.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#community-open-source-posts"&gt;
  &lt;/a&gt;
  Community open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ArgoCD&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ev"&gt;Configuring ArgoCD on Amazon EKS&lt;/a&gt; this post from Chabane Refes shows you how you can install, configure and manage ArgoCD on Amazon EKS. What is ArgoCD? &lt;a href="https://argoproj.github.io/argo-cd/"&gt;ArgoCD&lt;/a&gt; is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lift&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A new post from Matthieu Napoli, taking a look at Lift, a new open source project that simplifies deploying serverless applications. &lt;a href="https://aws-oss.beachgeek.co.uk/en"&gt;Static websites on AWS — Designing Lift&lt;/a&gt;. This new project is expected to have its first public beta around May time, and is intended to further simplify the deploying of serverless applications on AWS. The post outlines the options you have today, and how Lift is looking to simplify the deployment of static sites. Make sure you check out the GitHub repo and track it by watching it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenJDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ea"&gt;Java, Scala, Kotlin and TLS1.0 / TLS1.1&lt;/a&gt; Colm MacCárthaigh shares news that you should pay attention to if you are using OpenJDK. From April 20th the open source OpenJDK project will be releasing new versions of JDK11, JDK8, and JDK7 that remove TLS1.0 and TLS1.1 from the default list of supported TLS/SSL protocols. Colm shares for customers using Amazon Corretto that "we’re going to keep TLS1.0 and TLS1.1 in the default set for a while longer, to avoid the breaking change". This post dives deep into the issues as to why these protocols are being removed, so if you have not already planned for this, read this and be ready. As the post adds:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The OpenJDK change has been sign-posted in the OpenJDK crypto roadmap for quite a while, but breaking changes like this are still a big deal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;s2n&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/eb"&gt;Improving security in s2n&lt;/a&gt; I missed this post from Colm MacCárthaigh's blog, shuffle sharding dot com, at the tail end of last year. The post goes into details as to the approach to reviewing security for this open source project, including the use of automation and techniques such as provable security, but crucially also the use of peer review and manual reviews. As a result, the project identified three low level issues which the posts goes on to detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As part of a series of posts from the Rust Foundation aimed at getting to know the board members, last week they published, &lt;a href="https://aws-oss.beachgeek.co.uk/e4"&gt;Introducing Shane Miller&lt;/a&gt; where Shane introduces and shares her Rust story.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CloudEvents&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CloudEvents is a vendor-neutral specification for defining the format of event data in a common format that is now a CNCF incubating project. In this post from Wilhelm Wonigkeit, &lt;a href="https://aws-oss.beachgeek.co.uk/ei"&gt;Direktiv: Transforming AWS EventBridge to CNCF CloudEvents&lt;/a&gt; he shows you how you can use an open source project from vorteil.io called Direktiv, in combination with AWS services such as AWS Lambda to convert the AWS events from EventBridge into compatible CloudEvents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cUuqPPM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AHCFDijNusuw5_jxGF2vGQQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cUuqPPM---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AHCFDijNusuw5_jxGF2vGQQ.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a super interesting project, and if you are looking at event driven architectures then you need to check this post out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PartiQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;PartiQL is an open sourced query language that provides SQL-compatible query access across multiple data stores containing structured data, semi-structured data, and nested data. It is widely used within Amazon and now available as part of many AWS services. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/eh"&gt;Using PartiQL to query AWS DynamoDb in Javascript&lt;/a&gt; Abdullah T shares how this is now enabled in AWS DynamoDB to provide a SQL compatible query language to work with data in Amazon DynamoDB. This means you can write my queries in a more familiar way of SQL-like queries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stackoscope&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/e6"&gt;Introducing Stackoscope&lt;/a&gt; this post from Lumigo announced a new capability from their open source tool (lumigo-cli) that allows you to analyse your serverless applications against a set of best practices, and produce a report which you can then review/action. The tool currently offers a number of recommendations (15) across a number of AWS services, so why not give this a try out on your dev or test environment to see what insights you might get?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MECw5dXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/lumigo-production/w_477%2Cc_fit/fl_lossy%2Cf_auto/wp-website/2021/03/stackoscope-report.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MECw5dXx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/lumigo-production/w_477%2Cc_fit/fl_lossy%2Cf_auto/wp-website/2021/03/stackoscope-report.png" alt="report"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Toolkit for VS Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ej"&gt;Easier Step Functions with the AWS Toolkit for VS Code&lt;/a&gt; this post from Andy Blackledge takes a look at how this open source plugin for VS Code can really make developing AWS Step Functions much simpler. Andy walks you through an example and provides source code so you can try it for yourself.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Zeppelin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ek"&gt;Setting Up Dev Endpoint Using Apache Zeppelin With AWS Glue&lt;/a&gt;  Shubham Muneshwar shows you how you can configure Apache Zeppelin to interactively, run, debug and test ETL code before deploying as Glue job or scheduling the ETL process. Apache Zeppelin is an open source project that provides a web-based notebook that enables data-driven, interactive data analytics and collaborative documents with a large number of languages, such as SQL, Spark, Scala and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Lakes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/eo"&gt;3 Data Lake Anti-Patterns to Avoid&lt;/a&gt; Paul Singman shares three anti-patterns with you from a post a few weeks back that I missed. It would be rude of me to tell you what those were without you dipping into this post, so read on and find out more about these anti-patterns. Paul offers some helpful suggestions as to alternatives if you find yourself recognising some of these patterns.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#podcast-of-the-week"&gt;
  &lt;/a&gt;
  Podcast of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;DevOps on AWS Radio: Mutato and Open Source at Stelligent&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out this podcast in which Michael Neil talks about Stelligent’s newest open source project, Mutato, and how you can use it to automate your container deployments and help people who are new to AWS to make their deployments easier.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="166" src="https://w.soundcloud.com/player/?url=https://soundcloud.com/stelligent/episode-27-mutato-and-open-source-at-stelligent&amp;amp;auto_play=false&amp;amp;color=%23000000&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;show_teaser=true"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-open-source-posts"&gt;
  &lt;/a&gt;
  AWS open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Prometheus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/dz"&gt;Prometheus 2.26.0 adds AWS Signature Version 4 support&lt;/a&gt; Alolita Sharma and Imaya Kumar Jagannathan share that the latest release of Prometheus (v2.26.0), an open source systems monitoring and alerting toolkit, has rolled out native AWS Signature Version 4 authentication support. With this new feature, the Prometheus server is able to directly make remote-write API calls to send metrics to the Amazon Managed Service for Prometheus (AMP) without having to rely on a proxy sidecar container, such as the AWS SigV4 container. To find out more, read on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e-gI3VtP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/14/alolitas_prometheus_226_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e-gI3VtP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/14/alolitas_prometheus_226_f1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ew"&gt;Amazon Managed Service for Grafana (AMG) preview updated with new capabilities&lt;/a&gt; Toshal Dudhwala and Imaya Kumar Jagannathan announce the wide availability of the AMG public preview and cover some of the new features and plugins that are available in Grafana 7.5. There is a webinar later this week, so if you want to know more make sure you sign up for it too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WE7_hXD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/04/15/image002.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WE7_hXD6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/04/15/image002.gif" alt="grafana"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/e3"&gt;Amazon Aurora PostgreSQL parameters, Part 1: Memory and query plan management&lt;/a&gt; Sameer Kumar and Gopalakrishnan Subramanian ask you to sit down, grab a cup of your favourite beverage in which to enjoy this four part blog post that covers a broad range of topics. In Part 1 they cover parameters that can be useful to tune the memory utilisation of Aurora PostgreSQL, Part 2 it is all about parameters related to replication, security, and logging. From there Part 3 looks at performance of queries and wrapping up with the final part, Part 4 explores how you can align Aurora PostgreSQL closer to American National Standards Institute (ANSI) standards and reduce the migration effort when migrating from commercial engines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TensorFlow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/e0"&gt;Implement checkpointing with TensorFlow for Amazon SageMaker Managed Spot Training&lt;/a&gt; Eitan Sela shows you how you can train TensorFlow models (in this instance, an image classification model) using SageMaker Managed Spot Training. He shares how using checkpoints locally in the container and loaded checkpoints to resume training can help you save over 70% when training your deep-learning models.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4moTw9YZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/03/23/5-spot-estimator.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4moTw9YZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/03/23/5-spot-estimator.jpg" alt="checkpoint"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spinnaker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/e2"&gt;Enhancing Spinnaker deployment experience of AWS Lambda functions with the Lambda plugin&lt;/a&gt; Nima Kaviani, Vikrant Kahlir and Gaurav Dhamija from AWS and from Autodesk, Shrirang Moghe and Brandon Leach come together to share the collaborative efforts between Autodesk, various AWS teams, and Armory.io to drive the implementation and release of the Lambda plugin for Spinnaker. Spinnaker is an open source continuous delivery platform that allows for fast-paced, reliable, and repeatable deployment of software to the cloud used by many AWS customers. The posts looks at the design choices made in building the Lambda plugin and walks you through a sample scenario of deploying a Lambda function using the plugin.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uJJO-7eg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/03/31/nkaviani_Enhancing-Spinnaker-Deployment-Experience_f12.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uJJO-7eg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/03/31/nkaviani_Enhancing-Spinnaker-Deployment-Experience_f12.jpg" alt="spinnaker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Terraform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ex"&gt;Build infrastructure continuous integration for Terraform code leveraging AWS Developer Tools and Terratest&lt;/a&gt; Carlos Perea and Luca Mazzaferro share this solution on how to integrate Terraform with AWS Cloud* tools to build a CI pipeline that uses Terraform and Terratest.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O0ajVPIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2021/02/17/CI4Terraform.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O0ajVPIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2021/02/17/CI4Terraform.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon RDS for PostgreSQL now support PostgreSQL minor versions 13.2, 12.6, 11.11, 10.16, 9.6.21, and 9.5.25. This release closes security vulnerabilities in PostgreSQL and contains bug fixes and improvements done by the PostgreSQL community. This also includes the final release of PostgreSQL 9.5.&lt;/p&gt;

&lt;p&gt;This release adds support for aws_lambda and pg_bigm. aws_lambda allows you to invoke AWS Lambda functions from an Amazon RDS for PostgreSQL DB instance. pg_bigm adds faster full text search to PostgreSQL using a bigram index.&lt;/p&gt;

&lt;p&gt;Characters that comprise text are represented as numbers to computers. Languages such as English, French, Russian, and Hebrew use character sets of fewer than 256 characters that can be encoded in a single byte. Languages with many characters (e.g., Japanese) require more numbers, which are represented by multi-byte encoding. pg_bigm allows you to create a 2-gram (bigram) index for faster full text search of text encoded with multi-byte characters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Elasticsearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Elasticsearch Service now supports integrating with Microsoft Power BI, a business analytics service that delivers insights to enable fast, informed decisions. Powered by the Open Distro for Elasticsearch ODBC Driver you can now integrate your Microsoft Power BI environment with you Amazon Elasticsearch Service domains using the Open Distro for Elasticsearch SQL Engine.&lt;/p&gt;

&lt;p&gt;The Open Distro for Elasticsearch SQL Engine uses Structured Query Language (SQL) to manifest search results in a tabular format. One of the key features of this engine is the Open Database Connectivity (ODBC) driver which enables you to integrate various business intelligence (BI) and analytics applications with Elasticsearch. You can now connect Amazon Elasticsearch Service with Microsoft PowerBI to create sophisticated and intelligent data visualisations on top of the search results obtained from Amazon ES by leveraging the Amazon ES- PowerBI Integration, to provide deep data insights.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Twenty eight new or updated datasets from the US Geological Survey, the Swiss Institute of Bioinformatics, iNaturalist.org, National Oceanic and Atmospheric Agency (NOAA), and others are available in the Registry of Open Data on Amazon Web Services (AWS) in the following categories: COVID-19, Agriculture, Astronomy, Climate and Weather, Geospatial, Life Sciences, Machine Learning and Statistical and regulatory. Check out the full list on the announcement page, &lt;a href="https://aws-oss.beachgeek.co.uk/e8"&gt;New datasets available in the Registry of Open Data on AWS from United States Geological Survey (USGS), the Swiss Institute of Bioinformatics, iNaturalist.org, and others&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also read more on this from the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/ep"&gt;SARS-CoV-2 viral genomes, storm surge forecasts, cloud-free satellite imagery: The latest open data on AWS&lt;/a&gt; from Joe Flasher.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2WnU2Lz0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/04/16/Open-data-on-AWS-Q2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2WnU2Lz0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/04/16/Open-data-on-AWS-Q2.jpg" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amazon Corretto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This video, "Amazon Corretto, A Journey into Latency Reduction" was from the Seattle Java User group a few weeks back. Yishai Galatzer and Kelvin Nilsen talks about the Amazon Corretto project, it’s principals, and walk through examples that drove performance gains, latency reduction, and cost reduction in some of the biggest services in AWS.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/S4IrAZ5wT3c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;Watch out for these events happening later this week and next.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud City Meetup: The Cloud Meets Open Source -- A Conversation with Matt Asay&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;21st April&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join us for a conversation about the complements and conflicts between the cloud and open source. We’ll talk about the past, present and future of open source in a cloud world, the evolution of business models and licenses, and the best models going forward for startups based on open source projects.&lt;/p&gt;

&lt;p&gt;To sign up for this event, &lt;a href="https://aws-oss.beachgeek.co.uk/dy"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CDK Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;April 30th&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Announced this week was the second &lt;a href="https://sessionize.com/cdkday/"&gt;CDK Day&lt;/a&gt;, which will be on April 30th. Check out &lt;a href="https://sessionize.com/cdkday/"&gt;the web page&lt;/a&gt; to find out more about the first CDK Day, which was incredible. This second event promises to be even better. The CFP is open until the 19th of March. Check out this supporting blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/4v"&gt;CDK Day CFP Is Open!!!!&lt;/a&gt; from Matt as to what to expect and what they are looking for when it comes to sessions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Rust Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 3rd&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rust is a language empowering everyone to build secure, reliable, and efficient software. Rust is becoming more widely used in cloud native, powering everything from lightning-fast service meshes and powerful developer tools to internet-scale distributed databases.&lt;/p&gt;

&lt;p&gt;Come explore what makes Rust a fantastic choice for new cloud native development, and learn about how the community uses Rust today. Find out &lt;a href="https://aws-oss.beachgeek.co.uk/5y"&gt;more and register here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 4, 2021 | 10:00AM - 6:00PM CEST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Container Day x KubeCon is a fully live, virtual day of sessions all about Amazon EKS and Kubernetes at AWS, hosted by Brent Langston and Adam Keller of Containers from the Couch. At this Day Zero KubeCon event, the AWS Kubernetes team will be revealing new launches, demoing products and features, covering best practices, and answering your questions live on Twitch! If you have a question before the event, you can email the team at &lt;a href="mailto:awscontainerday@amazon.com"&gt;awscontainerday@amazon.com&lt;/a&gt; and maybe get them answered.&lt;/p&gt;

&lt;p&gt;Find out more and to register, &lt;a href="https://aws-oss.beachgeek.co.uk/cr"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An Introduction to Amazon Managed Blockchain&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;5th May&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Blockchain (AMB) is a fully managed service that makes it easier to build scalable blockchain networks using popular open source frameworks, including Hyperledger Fabric and Ethereum. AMB includes several features and enhancements beyond those provided by the open-source projects on which it is based. It supports public and private blockchain options, each of which favors different use cases. We review reference architectures outlining example applications on both Hyperledger Fabric and Ethereum. In this lecture, you will also hear several customer success stories building solutions on Amazon Managed Blockchain.&lt;/p&gt;

&lt;p&gt;Find out more and register &lt;a href="https://aws-oss.beachgeek.co.uk/dx"&gt;via this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building And Maintaining Your Own Secure Container OS&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 13th 9am PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Curtis Rissi, a Principal Partner SA at AWS will walk attendees through the Bottlerocket (an open-source Linux-based operating system meant for hosting containers) build process, and provide some key use cases for customisation: how to add new configuration options; how to add new packages; how to configure your own update repositories; how to add security policy; and other common customisations. &lt;/p&gt;

&lt;p&gt;Find out more and to register, click &lt;a href="https://aws-oss.beachgeek.co.uk/ed"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Speeding Up Angular Scully Builds in GitHub Actions</title>
      <author>Maina Wycliffe</author>
      <pubDate>Mon, 19 Apr 2021 07:38:45 +0000</pubDate>
      <link>https://dev.to/this-is-learning/speeding-up-angular-scully-builds-in-github-actions-559g</link>
      <guid>https://dev.to/this-is-learning/speeding-up-angular-scully-builds-in-github-actions-559g</guid>
      <description>&lt;p&gt;In this article, we are going to learn how you can speed your Scully builds by re-using Angular build artifacts in GitHub Actions. In order to statically build your Angular website with Scully, first you have to do the Angular build and then use the build artifacts to generate a statically generated site using Scully.&lt;/p&gt;

&lt;p&gt;It is common for most websites, that content can change without the source code of your website changing. Therefore, it can be wasteful to run an Angular build every time your website content changes.&lt;/p&gt;

&lt;p&gt;Normally, Angular builds time are decent. But due to a number of factors, Angular builds could slow down, like in my case, running purge CSS against &lt;a href="https://tailwindcss.com/"&gt;Tailwindcss&lt;/a&gt; extends the build time to over 7 minutes. Add everything else together, and my GitHub Actions would take over 12 minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-github-releases"&gt;
  &lt;/a&gt;
  Using GitHub Releases
&lt;/h2&gt;

&lt;p&gt;First, we are going to need a place to store our Angular build artifacts. GitHub &lt;a href="https://docs.github.com/en/github/administering-a-repository/about-releases"&gt;releases&lt;/a&gt; are a nice way, as it allows you to have a long-term storage of your artifacts that you can use anytime you want. This combined with &lt;code&gt;npm version&lt;/code&gt; means ones you have your features ready; you can cut a release that will be used by subsequent builds as you continue to work on other features and/or improvements.&lt;/p&gt;

&lt;p&gt;So, we are going to build our workflow to have two jobs, the first job will take care of building our Angular app, and creating a release and uploading our build artifacts to the release. While the second job will take care of Scully builds using the latest artifacts stored in GitHub releases and publishing our website to our hosting platform. &lt;/p&gt;

&lt;p&gt;Whenever a new tag is added to the repository, we will create a release with the version no. of the tag and upload our angular builds to that release.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-our-angular-app"&gt;
  &lt;/a&gt;
  Building our Angular App
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#listening-to-tags"&gt;
  &lt;/a&gt;
  Listening to Tags
&lt;/h3&gt;

&lt;p&gt;First, we will need to trigger our GitHub workflow every time a new tag is created. We will be using tags to create release version. This will allow us to use &lt;code&gt;npm version&lt;/code&gt; to create new build artifacts for us to use during the publishing process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;on:
  push:
    tags:
      - "*"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; In the publish our blog section, we will modify this section to listen to &lt;code&gt;repository_dispatch&lt;/code&gt;, which we will use with webhooks to trigger the workflow when events outside our repository like blog post published occur, you can learn more &lt;a href="https://mainawycliffe.dev/blog/github-actions-trigger-via-webhooks"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will limit this job to only run when a new tag is created using &lt;code&gt;startsWith(github.ref, 'refs/tags/')&lt;/code&gt;. This will allow us to utilize the same workflow file for building and publishing, with them being two separate jobs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installing-npm-packages"&gt;
  &lt;/a&gt;
  Installing NPM Packages
&lt;/h3&gt;

&lt;p&gt;Next, we will need to install NPM packages before we can build our angular app. In this case, we are using &lt;code&gt;yarn&lt;/code&gt; but feel free to use your favorite package manager. We will start by checking out &lt;code&gt;(git checkout)&lt;/code&gt; our repository. After that, we will then setup NodeJS and finally run yarn install to install our NPM packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;steps:
  - uses: actions/checkout@v1
  - name: Setup Node
    uses: actions/setup-node@v1
    with:
      node-version: 12.x
  - name: yarn install
    run: yarn install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#building-angular-project"&gt;
  &lt;/a&gt;
  Building Angular Project
&lt;/h3&gt;

&lt;p&gt;And then, we can add a step to run &lt;code&gt;yarn build:prod&lt;/code&gt; to build our Angular app in production.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: yarn build
  run:  yarn build:prod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-a-release-and-uploading-artifacts"&gt;
  &lt;/a&gt;
  Creating a Release and Uploading Artifacts
&lt;/h3&gt;

&lt;p&gt;Now that we have built our project, we are going to do two things next. We will zip the build artefacts and then create a release and upload our zipped artifact to the releases. We will use &lt;a href="https://github.com/marketplace/actions/easy-zip-files"&gt;papeloto/action-zip&lt;/a&gt; action to zip the files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- uses: papeloto/action-zip@v1
  with:
    files: "./dist/webapp/"
    dest: webapp.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Replace &lt;code&gt;webapp&lt;/code&gt; with the output directory of your angular project build.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then, we are going to create a GitHub release and upload the above zipped artifact to the GitHub release. We will be using &lt;a href="https://github.com/marketplace/actions/create-release"&gt;ncipollo/release-action action&lt;/a&gt;, to accomplish this as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Push Build to Releases
  uses: ncipollo/release-action@v1
  with:
    artifacts: "webapp.zip"
    token: ${{ secrets.GITHUB_TOKEN }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is what our workflow looks so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Release a new Version

on:
  push:
    tags:
      - "*"

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: yarn install
        run: yarn install

      - name: yarn build
        run:  yarn build:prod

      - uses: papeloto/action-zip@v1
        with:
          files: "./dist/webapp/"
          dest: webapp.zip

      - name: Push Build to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "webapp.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-scully-and-publishing-blog"&gt;
  &lt;/a&gt;
  Building Scully and Publishing Blog
&lt;/h2&gt;

&lt;p&gt;Next, we are going to add a second job - &lt;code&gt;publishing&lt;/code&gt; - that will download our Angular build artifacts from our repos latest release, run Scully build and upload the artifacts to our hosting platform.&lt;/p&gt;

&lt;p&gt;First, we will need to listen to the on &lt;code&gt;repository_dispatch&lt;/code&gt; as this is how we will trigger our website rebuild when the content on our CMS changes, as explained &lt;a href="https://mainawycliffe.dev/blog/github-actions-trigger-via-webhooks"&gt;here&lt;/a&gt;. Feel free to use any other GitHub action triggers suitable for your content management system i.e. on push to master on the blog directory if you are using markdown.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;on:
  push:
    tags:
      - "*"

  repository_dispatch:
    types:
      - publish_blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we are going to create a publish job, which will run after the build job but if the build job doesn't run, it will run anyway. We will use the &lt;code&gt;if: always()&lt;/code&gt; condition to run the job even if the build doesn't. This will run the publish job if a new blog post is published, which will skip the build job, but also when a new release is made, in which case you want the website to be published with changes that were released.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The one downside of this approach is that the publish job will run even if the build job fails.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;publish:
  runs-on: ubuntu-latest
  needs: [build]
  if: always()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will need to setup Node and run &lt;code&gt;yarn install&lt;/code&gt; to install NPM packages as Scully needs both to run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;steps:
  - uses: actions/checkout@v1
  - name: Setup Node
    uses: actions/setup-node@v1
    with:
      node-version: 12.x
  - name: yarn install
    run: yarn install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, we are going to download our build artifact that we uploaded to GitHub release - &lt;code&gt;webapp.zip&lt;/code&gt; - and unzip the content to the &lt;code&gt;dist/webapp&lt;/code&gt; directory. To download the artifact from GitHub release, we will be using the &lt;a href="https://github.com/marketplace/actions/fetch-github-release-asset"&gt;dsaltares/fetch-gh-release-asset&lt;/a&gt; action.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- uses: dsaltares/fetch-gh-release-asset@master
  with:
    repo: "USERNAME/REPOSITORY"
    version: "latest"
    file: "webapp.zip"
    target: "webapp.zip"
    token: ${{ secrets.GITHUB_PAT }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;NB: For private repository, you will need a GitHub Personal Access Token &lt;code&gt;(PAT)&lt;/code&gt; with at least the &lt;code&gt;org:hook&lt;/code&gt; scope. Learn more &lt;a href="https://github.com/marketplace/actions/fetch-github-release-asset#token"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, we will create a directory to put the angular webapp build artifacts in and then unzip &lt;code&gt;webapp.zip&lt;/code&gt; which we downloaded from GitHub releases.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: create dist directory
  run: mkdir -p dist/webapp

- name: Decompress
  uses: TonyBogdanov/zip@1.0
  with:
      args: unzip -qq ./webapp.zip -d ./dist/webapp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, run &lt;code&gt;yarn scully&lt;/code&gt; for statically site generation of our Angular app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: Run scully
  run: yarn scully
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can deploy the Scully build artifact to your website. In this case we will use firebase hosting, which you can do as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- name: deploy firebase webapp
  uses: w9jds/firebase-action@master
  with:
    args: deploy --only hosting
  env:
    FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now our final GitHub Action Workflow looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Publish Blog

on:
  push:
    tags:
      - "*"

  repository_dispatch:
    types:
      - publish_blog
      - build_site

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: yarn install
        run: yarn install

      - name: yarn build
        run:  yarn build:prod

      - uses: papeloto/action-zip@v1
        with:
          files: "./dist/webapp/"
          dest: webapp.zip

      - name: Push Build to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "webapp.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    if: always()

    steps:
      - uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: yarn install
        run: yarn install

      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "[USERNAME]/[REPO]"
          version: "latest"
          file: "webapp.zip"
          target: "webapp.zip"
          token: ${{ secrets.GITHUB_PAT }}

      - name: create dist directory
        run: mkdir -p dist/webapp

      - name: Decompress
        uses: TonyBogdanov/zip@1.0
        with:
            args: unzip -qq ./webapp.zip -d ./dist/webapp

      - name: Run scully
        run: yarn scully

      - name: deploy firebase webapp
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we have looked at how we can optimize our Scully build time by splitting Angular builds and Scully builds, where we store our Angular builds and re-use the artifacts in future Scully builds. &lt;/p&gt;

&lt;p&gt;This may not be necessary for your application if you are not using tools like purge CSS to remove unused CSS, since Angular builds are usually fast for small to medium size applications. &lt;/p&gt;

&lt;p&gt;There are few things I skipped like caching NPM dependencies, which can shave off a few more seconds from your build time and I highly recommend you implement following instructions &lt;a href="https://github.com/marketplace/actions/cache"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use Webhooks to Trigger GitHub Actions - &lt;a href="https://mainawycliffe.dev/blog/github-actions-trigger-via-webhooks"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Getting Started with Scully - &lt;a href="https://scully.io/docs/learn/getting-started/overview/"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Getting Started with GitHub Actions - &lt;a href="https://docs.github.com/en/actions/quickstart"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;About GitHub Releases - &lt;a href="https://docs.github.com/en/github/administering-a-repository/about-releases"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Angular CDK - Platform Module - &lt;a href="https://mainawycliffe.dev/blog/angular-cdk-platform-module"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>github</category>
      <category>action</category>
      <category>angular</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
