<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Python IDEs and code editors compilation</title>
      <author>Matvey Romanov</author>
      <pubDate>Tue, 13 Apr 2021 17:53:22 +0000</pubDate>
      <link>https://dev.to/ra1nbow1/python-ides-and-code-editors-compilation-2l3f</link>
      <guid>https://dev.to/ra1nbow1/python-ides-and-code-editors-compilation-2l3f</guid>
      <description>&lt;p&gt;Whether you are a beginner or an experienced developer, quality IDEs or code editors are useful. With them, you don't need to spend a lot of time setting up tools, and they help optimize development. In addition, constant updates help developers keep track of innovations. Let's go through the well-known IDE and code editor for Python and analyze their pros and cons.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pycharm"&gt;
  &lt;/a&gt;
  PyCharm
&lt;/h1&gt;

&lt;p&gt;Cross-platform IDE is compatible with &lt;strong&gt;Linux&lt;/strong&gt;, &lt;strong&gt;macOS&lt;/strong&gt;, and &lt;strong&gt;Windows&lt;/strong&gt;. Supports Python versions 2 (2.7) and Python 3 (3.5 and higher). It comes with testing and debugging support, refactoring features, and code navigation. It also allows you to run, debug, test, and deploy applications on remote hosts or virtual machines.&lt;/p&gt;

&lt;p&gt;The professional edition allows you to use popular frameworks and libraries for Data Science. The code editor supports &lt;strong&gt;JavaScript&lt;/strong&gt;, &lt;strong&gt;TypeScript&lt;/strong&gt;, &lt;strong&gt;CoffeeScript&lt;/strong&gt;, &lt;strong&gt;JS&lt;/strong&gt;, and &lt;strong&gt;Node.js&lt;/strong&gt;, &lt;strong&gt;AngularJS&lt;/strong&gt;, and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt; can be integrated with VCS and database tools; remote interpreters, SSH clients, Vagrant and Docker, Oracle, PostgreSQL, MySQL, and SQL Server. It also supports IPython Notebook, Anaconda, and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;the ability to view the entire source code with a single click;&lt;/li&gt;
&lt;li&gt;lots of plugins;&lt;/li&gt;
&lt;li&gt;easy to use;&lt;/li&gt;
&lt;li&gt;great community support;&lt;/li&gt;
&lt;li&gt;easy installation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;some chips are only available in the paid version;&lt;/li&gt;
&lt;li&gt;there may be a problem when trying to fix tools like venv;&lt;/li&gt;
&lt;li&gt;resource-intensive.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#sublime-text"&gt;
  &lt;/a&gt;
  Sublime Text
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt; is a cross-platform text editor in C++ and Python. Originally developed &lt;strong&gt;as an extension for Vim&lt;/strong&gt;. Since version 2.0, it supports &lt;strong&gt;44 major programming languages&lt;/strong&gt;, including Python. Its main principles: a minimalistic interface and an emphasis on code.&lt;/p&gt;

&lt;p&gt;It is a fast text editor for organizing code. It is easy to configure, has high performance and a powerful API. In addition, it is convenient to switch between projects, search for specific fragments in the code and go to any function or symbol.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;high performance;&lt;/li&gt;
&lt;li&gt;simple interface;&lt;/li&gt;
&lt;li&gt;supports many languages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;no debugger;&lt;/li&gt;
&lt;li&gt;it may be difficult for beginners;&lt;/li&gt;
&lt;li&gt;you need a license.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#visual-studio-code"&gt;
  &lt;/a&gt;
  Visual Studio Code
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; is an open-source cross-platform code editor from Microsoft. Inside, there is a debugger, an IntelliSense &lt;strong&gt;code auto-completion mechanism&lt;/strong&gt;, Lint support, and integration with version control systems. As well as a built-in terminal and a large market of free extensions and the ability to work with the frameworks nunit mstest, pytest or nose.&lt;/p&gt;

&lt;p&gt;For fans of a minimalistic interface, there is a "zen mode". It only shows the file you are currently working on and hides the "extra" interface.&lt;/p&gt;

&lt;p&gt;VS Code is a &lt;strong&gt;lightweight IDE&lt;/strong&gt; that can be extended with a variety of plugins. It also adds support for new languages, themes, debugger, and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;almost five thousand extensions;&lt;/li&gt;
&lt;li&gt;import keyboard shortcuts from other code editors;&lt;/li&gt;
&lt;li&gt;easy;&lt;/li&gt;
&lt;li&gt;user-friendly interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;slow startup;&lt;/li&gt;
&lt;li&gt;slow search;&lt;/li&gt;
&lt;li&gt;performance is reduced if you install a lot of plugins.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#atom"&gt;
  &lt;/a&gt;
  Atom
&lt;/h1&gt;

&lt;p&gt;An open-source cross-platform editor written in CSS, JavaScript, HTML, and Node.js.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; comes with a built-in package manager where you can download and install additional packages. And also create your own. A large community is working on creating new packages.&lt;/p&gt;

&lt;p&gt;Atom has &lt;strong&gt;Git and GitHub integration&lt;/strong&gt;, and the ability to work on code together with colleagues in real-time using Teletype.&lt;/p&gt;

&lt;p&gt;The editor has a clean and fully customizable user interface, with 8 light and dark themes pre-installed. &lt;strong&gt;You can configure everything&lt;/strong&gt;, right down to the basic functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;fully customizable interface;&lt;/li&gt;
&lt;li&gt;built-in package manager;&lt;/li&gt;
&lt;li&gt;great community support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;takes up a lot of RAM;&lt;/li&gt;
&lt;li&gt;need optimization;&lt;/li&gt;
&lt;li&gt;the performance is lower than that of some competitors (for example, Sublime Text).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#thonny"&gt;
  &lt;/a&gt;
  Thonny
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://thonny.org/"&gt;Thonny&lt;/a&gt; is a free Python IDE designed specifically &lt;strong&gt;for beginners&lt;/strong&gt;. Comes with a built-in version of Python v3. x. Compatible with Linux, macOS, and Windows.&lt;/p&gt;

&lt;p&gt;The built-in debugger makes it easy to find syntax errors, such as parentheses and unclosed quotes. In addition, it is easy to use, and you do not need to know the breakpoints.&lt;/p&gt;

&lt;p&gt;Variables are represented based on a simplified model (but you can also switch to realistic ones). It also has a simple package installation interface and a record of user actions. It is useful to analyze the work at first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;simple interface;&lt;/li&gt;
&lt;li&gt;suitable for beginners;&lt;/li&gt;
&lt;li&gt;no distractions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;the basic functionality may not be enough to work with.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#spyder"&gt;
  &lt;/a&gt;
  Spyder
&lt;/h1&gt;

&lt;p&gt;An IDE designed for data analysts and engineers and compatible with Linux, macOS, and Windows.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.spyder-ide.org/"&gt;Spyder&lt;/a&gt; uses a PDB debugger that displays the line, file, and state of each breakpoint. And can quickly edit variables at each point through the variable explorer. By the way, the explorer itself shows links to all objects and allows you to interact with them.&lt;/p&gt;

&lt;p&gt;The IDE comes with a large library that is loaded when installed with Anaconda. You can also download &lt;strong&gt;more than 1,500 additional Python or R data science packages&lt;/strong&gt;. Spyder also allows you to extend the functionality with third-party plugins, such as Spyder Notebook, Terminal, UnitTest, Reports, and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;fairly light and fast;&lt;/li&gt;
&lt;li&gt;easy to learn, suitable for beginners;&lt;/li&gt;
&lt;li&gt;suitable for research work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;difficulties with the integration of version control systems;&lt;/li&gt;
&lt;li&gt;it is difficult to configure.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#pyzo"&gt;
  &lt;/a&gt;
  Pyzo
&lt;/h1&gt;

&lt;p&gt;An open-source cross-platform IDE for Python that strives for simplicity and interactivity.&lt;/p&gt;

&lt;p&gt;The system is based on two components: &lt;strong&gt;the shell and the tools&lt;/strong&gt;. These include the source structure, online help, workspace, project manager, and so on. The code for &lt;a href="https://pyzo.org/"&gt;Pyzo&lt;/a&gt; is written in Python 3 with a Qt GUI.&lt;/p&gt;

&lt;p&gt;The shell includes magic commands, creating multiple configurations, pip support for package management, PySide, Tk, PyQt4, GTK, fltk, and wx, post-mortem debugging, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;simple;&lt;/li&gt;
&lt;li&gt;good support for beginners.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;you need a distribution.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#eric-python-ide"&gt;
  &lt;/a&gt;
  Eric Python IDE
&lt;/h1&gt;

&lt;p&gt;This is a cross-platform IDE written in Python. &lt;a href="https://eric-ide.python-projects.org/"&gt;Eric&lt;/a&gt; has a powerful debugger that debugs multithreaded and multiprocessor programs. There is support for &lt;strong&gt;unit testing&lt;/strong&gt;, a built-in hex editor, an SQL browser, an icon designer, and many other tools. Thanks to the built-in Qt supports the creation of &lt;strong&gt;graphical interfaces&lt;/strong&gt; using Qt Designer.&lt;/p&gt;

&lt;p&gt;The IDE has an advanced project management system, an automatic code completion feature, and the ability to collaborate in real-time. Eric supports Mercurial and SVN version control. Git support is available through the plugin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;suitable for complex projects;&lt;/li&gt;
&lt;li&gt;spell check;&lt;/li&gt;
&lt;li&gt;the ability to work with other developers in real-time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;overloaded interface;&lt;/li&gt;
&lt;li&gt;it can be difficult to install.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#vim"&gt;
  &lt;/a&gt;
  Vim
&lt;/h1&gt;

&lt;p&gt;Cross-platform modal code editor for Python. Supports three operating modes: normal, insert mode, and command-line mode.&lt;/p&gt;

&lt;p&gt;Vim is free software that supports many plugins and extensions and works with different programming languages. It is configured by adding extensions or changing its configuration file. So, it is easy to adapt it for Python development.&lt;/p&gt;

&lt;p&gt;It also supports non-software applications that other editors don't have.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;recognition and conversion of file formats (UNIX, MS-DOS or Mac);&lt;/li&gt;
&lt;li&gt;lots of plugins;&lt;/li&gt;
&lt;li&gt;you can configure and extend it with .vimrc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;it takes time to master;&lt;/li&gt;
&lt;li&gt;not the most user-friendly interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Hope you enjoyed my article. Follow my &lt;a href="https://github.com/ra1nbow1"&gt;Github&lt;/a&gt; &amp;lt;3&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>productivity</category>
      <category>tools</category>
    </item>
    <item>
      <title>Write a REST API in Golang following best practices</title>
      <author>Lucas Neves Pereira</author>
      <pubDate>Tue, 13 Apr 2021 17:35:37 +0000</pubDate>
      <link>https://dev.to/lucasnevespereira/write-a-rest-api-in-golang-following-best-practices-pe9</link>
      <guid>https://dev.to/lucasnevespereira/write-a-rest-api-in-golang-following-best-practices-pe9</guid>
      <description>

&lt;p&gt;Hello there! Lately I have noticed that a lot of enterprises are starting to migrating their code base previously in Java, Python, C++ to Golang, specially for those using microservices.&lt;/p&gt;

&lt;p&gt;Therefore writing a REST API in Go is surely a skill that will be on demand, but what triggered me to write this article was to show how to build such API using the best practices.&lt;/p&gt;

&lt;p&gt;To follow those practices I had mainly two sources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;One of them was the GitHub repository for the &lt;a href="https://github.com/golang-standards/project-layout"&gt;Golang Standard for project layout&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another one was &lt;a href="https://youtu.be/rWBSMsLG8po"&gt;this video&lt;/a&gt; of &lt;a href="https://medium.com/u/f25c357b8e4c"&gt;Mat Ryer&lt;/a&gt; that explains how he writes Golang HTTP services. I did not followed every rule he had but he really inspired me to write this API.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#lets-do-this%C2%A0"&gt;
  &lt;/a&gt;
  Let's do this 👍🏼
&lt;/h3&gt;

&lt;p&gt;In this article, as an example I'll be building a very simple Students REST API. I'll try not to add a bunch of fields and methods to keep it simple and stay as minimalist as possible, still following the best practices, the goal here is really to inspire you to write and structure your Golang services in the best way possible 🙂&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#structure-the%C2%A0project"&gt;
  &lt;/a&gt;
  Structure the project
&lt;/h4&gt;

&lt;p&gt;Start by creating a folder in your machine, &lt;code&gt;mkdir students-api&lt;/code&gt;, and change your directory to that folder, &lt;code&gt;cd students-api&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now let's init a new go module by running &lt;code&gt;go mod init students-api&lt;/code&gt; , this should create a &lt;strong&gt;go.mod&lt;/strong&gt; file and now we can open your directory in your favourite code editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--58Ax34f_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Aew6-Onu-edE9iSPySSzXSg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58Ax34f_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Aew6-Onu-edE9iSPySSzXSg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then if I want to follow the Golang project layout standards I should create a &lt;strong&gt;cmd/server&lt;/strong&gt; directory where I'll have my &lt;strong&gt;main.go&lt;/strong&gt; that is my entry point for my app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You may be wondering why we have a subdirectory &lt;strong&gt;server/&lt;/strong&gt; if we are already in a &lt;strong&gt;cmd/&lt;/strong&gt; directory, this is well thought to handle scalability to our project.&lt;br&gt;
For example, if later we want to build a cli for our API, in that case we could just add a &lt;strong&gt;cmd/cli&lt;/strong&gt; directory without messing with our functions in &lt;strong&gt;cmd/server/main.go &lt;/strong&gt;. If you're seeking more information about this, just check the &lt;a href="https://github.com/golang-standards/project-layout"&gt;&lt;strong&gt;golang standards&lt;/strong&gt;&lt;/a&gt; GitHub repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our &lt;strong&gt;main.go&lt;/strong&gt; file let's declare our package main and write a func &lt;strong&gt;Run()&lt;/strong&gt; that will run our application and return and error if there is one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NnlsdRdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AhQjXy9CjyCmMgkQTIjV4AQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NnlsdRdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AhQjXy9CjyCmMgkQTIjV4AQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our students API is now correctly initialised and we can move on by creating our first endpoint.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#first-endpoint"&gt;
  &lt;/a&gt;
  First Endpoint
&lt;/h4&gt;

&lt;p&gt;The first endpoint will be a &lt;strong&gt;status&lt;/strong&gt; endpoint that will check if our API is up or not. Creating and endpoint &lt;strong&gt;api/status&lt;/strong&gt; means using http, let's once again follow the project layout best practices and create and &lt;strong&gt;internal/&lt;/strong&gt; directory that will contain all of the packages and code that is private, meaning the code that we don't really want other to import into their code base. Most of our code for this project will be in our internal directory.&lt;/p&gt;

&lt;p&gt;Inside of &lt;strong&gt;internal/&lt;/strong&gt; let's create a package &lt;strong&gt;http&lt;/strong&gt; that will contain a &lt;strong&gt;handler.go&lt;/strong&gt; file where we will &lt;em&gt;"handle"&lt;/em&gt; all of our http related logic.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xZhRCRm2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Aa9_fCbobAfi4OlnQ4Klhmg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xZhRCRm2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Aa9_fCbobAfi4OlnQ4Klhmg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;⚠️ Attention! In the screenshot above I've made a mistake and called the package handler instead of &lt;/em&gt;&lt;strong&gt;&lt;em&gt;http.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this &lt;strong&gt;handler.go&lt;/strong&gt; file we're going to define a struct &lt;strong&gt;Handler&lt;/strong&gt; that will store pointers to our services later and we will had 2 more function.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  A &lt;strong&gt;NewHandler()&lt;/strong&gt; func that will insatiate the &lt;strong&gt;Handler&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;  A &lt;strong&gt;InitRoutes()&lt;/strong&gt; func that will initialise our endpoints.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll also be using the &lt;a href="https://github.com/gorilla/mux"&gt;&lt;strong&gt;gorilla/mux&lt;/strong&gt;&lt;/a&gt; router in this project because it saves us a bit of code with the standard net/http package. So in our struct will be adding a &lt;strong&gt;Router&lt;/strong&gt; that will be a pointer to the gorilla/mux router.&lt;/p&gt;

&lt;p&gt;Make sure to run a &lt;code&gt;go get -u github.com/gorilla/mux&lt;/code&gt; to add it as a dependency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5xPodHSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AK4OFxO-YmkRfXbmp5WRepw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5xPodHSL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AK4OFxO-YmkRfXbmp5WRepw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;⚠️ Attention! In the screenshot above I've made a mistake and called the package handler instead of &lt;/em&gt;&lt;strong&gt;&lt;em&gt;http.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The function &lt;strong&gt;InitRoutes()&lt;/strong&gt; will be a receiver function of our &lt;strong&gt;Handler&lt;/strong&gt;, if you are coming from an &lt;em&gt;Object Oriented Programming&lt;/em&gt; background just think of &lt;strong&gt;Handler&lt;/strong&gt;as a class and &lt;strong&gt;InitRoutes()&lt;/strong&gt; as a method of the &lt;strong&gt;Handler&lt;/strong&gt; class. Moving on, since it's a receiver function of Handler we have access to it so we can call &lt;strong&gt;Router&lt;/strong&gt; and set it to &lt;strong&gt;mux.NewRouter()&lt;/strong&gt;.&lt;br&gt;
Then we can use our Handler Router and call &lt;strong&gt;HandleFunc&lt;/strong&gt; like we would with the standard net/http package but we are using the gorilla/mux router.&lt;br&gt;
In the HandleFunc method we pass the path of our status endpoint and as a second argument an anonymous function or literal function that has a response writer and a pointer to our request as argument. Once we hit the endpoint, we are just printing to the response writer "Status Up".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p8VPa1aQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Alb49OHvIE35abqCHMkLt3A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p8VPa1aQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Alb49OHvIE35abqCHMkLt3A.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;⚠️ Attention! Rename the package from handler to &lt;/em&gt;&lt;strong&gt;&lt;em&gt;http.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To test this endpoint we need to go back to our &lt;strong&gt;cmd/server/main.go&lt;/strong&gt; file and import our internal http package (we can add an alias to "rename" the import). Once our package is imported we can call our &lt;strong&gt;NewHandler()&lt;/strong&gt; method then init our routes and finally &lt;strong&gt;ListenAndServe&lt;/strong&gt; using the &lt;strong&gt;net/http&lt;/strong&gt; package to &lt;strong&gt;ListenAndServe&lt;/strong&gt; in a port of our choice passing in our internal Handler Router as a second argument. If something goes wrong we just return an error and our &lt;strong&gt;main()&lt;/strong&gt; func will handle it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T0Ymqv3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Aqt2yl8_dMc8SIwZDt6D2tg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T0Ymqv3g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Aqt2yl8_dMc8SIwZDt6D2tg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Run the server with &lt;code&gt;go run cmd/server/main.go&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--33eNWlh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AHRKCWJoko3uVbdCACNMiVQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--33eNWlh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AHRKCWJoko3uVbdCACNMiVQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And in a different terminal window test the endpoint by running:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;curl http://localhost:9000/api/status&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4ddLGGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A0wS4SsWKQe6d5n_NpKufJA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4ddLGGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A0wS4SsWKQe6d5n_NpKufJA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our first endpoint works and our students api is up! 👍🏼&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-database"&gt;
  &lt;/a&gt;
  The Database
&lt;/h4&gt;

&lt;p&gt;It is time to implement our database package. In this project I've choose to use &lt;strong&gt;PostgreSQL&lt;/strong&gt; and I'll be using &lt;strong&gt;Docker&lt;/strong&gt; to to set it up locally. I'm assuming you have Docker and PostgreSQL in your machine for this tutorial.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are not using Docker and you prefer to use PostgreSQL locally on MacOS, i recommend &lt;a href="https://eggerapps.at/postico/"&gt;&lt;strong&gt;Postico&lt;/strong&gt;&lt;/a&gt; that is a really nice client for postgre that I enjoy using.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Head over to a terminal window and run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run ----name students-db ----env POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will basically fetch a PostgreSQL image on docker hub and run it on your machine. You can run a &lt;code&gt;docker ps&lt;/code&gt; to make sure your container is running on detached mode. By the way, if you want to stop it you just have to run &lt;code&gt;docker stop students-db&lt;/code&gt; and &lt;code&gt;docker rm students-db&lt;/code&gt; to actually remove it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--myh4cya---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AABrV8h6l1MMdueGcuGS4Qw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--myh4cya---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AABrV8h6l1MMdueGcuGS4Qw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a database running let's go back to our code and start by fetching 2 github packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;go get -u gorm.io/gorm&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;go get -u gorm.io/driver/postgres&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://gorm.io/"&gt;Gorm&lt;/a&gt; is a ORM library to help us work with our database, I really enjoy it, is quite simple to use that's why I'm using it.&lt;/p&gt;

&lt;p&gt;Let's create a &lt;strong&gt;database&lt;/strong&gt; package inside of &lt;strong&gt;internal/&lt;/strong&gt; with a &lt;strong&gt;database.go&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;We are going to have an &lt;strong&gt;InitDatabase()&lt;/strong&gt; func that will handle our database connection that will return an instance of the &lt;strong&gt;DB&lt;/strong&gt; struct of our &lt;strong&gt;gorm&lt;/strong&gt; package (&lt;em&gt;**gorm.DB&lt;/em&gt;&lt;em&gt;) or an error. Then we will be setting up multiple variables to build our connection string for PostgreSQL. It's not good practice to hard code these values so I'll be using the **os&lt;/em&gt;* package to get environment variables that I'll be then exporting locally in my terminal for now.&lt;/p&gt;

&lt;p&gt;Once I have my connection string, I'll call the &lt;strong&gt;Open()&lt;/strong&gt; method of &lt;strong&gt;gorm&lt;/strong&gt; and open my connection string with the &lt;strong&gt;postgres driver&lt;/strong&gt; of &lt;strong&gt;gorm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYjkkFPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ATYZuXbtMY_BYxBMFoBnEbQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYjkkFPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ATYZuXbtMY_BYxBMFoBnEbQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's head back to &lt;strong&gt;cmd/server/main.go&lt;/strong&gt; and call &lt;strong&gt;InitDatabase()&lt;/strong&gt; in our &lt;strong&gt;Run()&lt;/strong&gt; func.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rUoi4mxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AsslyCc0lasKen9yzHJOPXg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rUoi4mxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AsslyCc0lasKen9yzHJOPXg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before run our API don't forget to export the variable we have defined in &lt;strong&gt;database.go&lt;/strong&gt; in the terminal window where you'll be running the program.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;code&gt;export DB_USERNAME=postgres&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;export DB_PASSWORD=postgres&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;export DB_HOST=localhost&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;export DB_TABLE=postgres&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;code&gt;export DB_PORT=5432&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--snyavRFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A2NVMD1XnweYODd7e0YkVhA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--snyavRFi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A2NVMD1XnweYODd7e0YkVhA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's run &lt;code&gt;go run cmd/server/main.go&lt;/code&gt; and check that &lt;strong&gt;InitDatabase()&lt;/strong&gt; did not send an error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dG7qQx11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AhnkynM0f3m9CLhU7HEYLTg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dG7qQx11--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AhnkynM0f3m9CLhU7HEYLTg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looks Good 🙂 . Now it is time ti implement our student service.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-service"&gt;
  &lt;/a&gt;
  The Service
&lt;/h4&gt;

&lt;p&gt;Time to implement our student service and we are going to head back to the &lt;strong&gt;internal/&lt;/strong&gt; directory and add a subdirectory &lt;strong&gt;services/&lt;/strong&gt; and inside of it let's create a package &lt;strong&gt;student&lt;/strong&gt; containing a &lt;strong&gt;student.go&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;student.go&lt;/strong&gt; we are going to implement two structs, a &lt;strong&gt;Service&lt;/strong&gt; struct and &lt;strong&gt;Student&lt;/strong&gt; struct. The &lt;strong&gt;Service&lt;/strong&gt; struct will define our service that will contain only a field DB typed as a reference to our &lt;em&gt;**gorm.DB&lt;/em&gt;* so we can pass in our database when we instantiate it.&lt;br&gt;
The &lt;strong&gt;Student&lt;/strong&gt; will define an actual student and we will pass in an additional parameter or field of &lt;strong&gt;gorm.Model&lt;/strong&gt; so our ORM know the fields to implement in our database for a student.&lt;/p&gt;

&lt;p&gt;We are also going to create a &lt;strong&gt;NewService()&lt;/strong&gt; func with an argument &lt;strong&gt;&lt;em&gt;db&lt;/em&gt;&lt;/strong&gt; to pass in our database from &lt;strong&gt;cmd/server/main.go&lt;/strong&gt; later. This func will return an instance of our service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FiLcxF27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A4ZxlZMpZccLzpzwnRLs06w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FiLcxF27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A4ZxlZMpZccLzpzwnRLs06w.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, we have this but something is missing, an &lt;strong&gt;interface.&lt;/strong&gt; We need to implement a &lt;strong&gt;StudentService&lt;/strong&gt; interface that will tells what methods we need to implement in our service to be of type &lt;strong&gt;StudentService&lt;/strong&gt;, it is a contract we have to respect. So let's write the methods we need to have a &lt;strong&gt;StudentService&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--acZzHVPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ARy-PMCjj5xyTEJzUpmammQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--acZzHVPS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ARy-PMCjj5xyTEJzUpmammQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now our &lt;strong&gt;StudentService&lt;/strong&gt; is defined, we just need to implement all of this methods. They will be all receivers functions of &lt;strong&gt;Service&lt;/strong&gt; so we can call them later to be assigned to our endpoints. Let's implement them!&lt;/p&gt;

&lt;p&gt;Since they are receivers of &lt;strong&gt;Service&lt;/strong&gt; we have access to the &lt;strong&gt;DB&lt;/strong&gt; field we wrote earlier. And remember that &lt;strong&gt;DB&lt;/strong&gt; is actually of type &lt;em&gt;**gorm.DB&lt;/em&gt;* so we have access to their methods and we can make our SQL queries easily 🙂&lt;/p&gt;

&lt;p&gt;For example for &lt;strong&gt;GetAllStudents()&lt;/strong&gt; we can just use the &lt;strong&gt;Find()&lt;/strong&gt; method from &lt;strong&gt;gorm&lt;/strong&gt; and write the results of it to a temporary variable &lt;strong&gt;students&lt;/strong&gt; and then return it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jQR7u_Gb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AAmHJEHftXo6JI8lTNz0HFg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jQR7u_Gb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AAmHJEHftXo6JI8lTNz0HFg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's implement the rest of our methods! I'll be pushing the actual code to a &lt;a href="https://github.com/lucasnevespereira/students-api"&gt;GitHub repository&lt;/a&gt; if you want to get it there 👍🏼&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OnNcBZnk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ANA8YLsm-dDL_KKWPCHmyqA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OnNcBZnk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ANA8YLsm-dDL_KKWPCHmyqA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8RMb5Msm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A3wpZTzPF07yTQnRrUViliA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8RMb5Msm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A3wpZTzPF07yTQnRrUViliA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perfect, now we can go back to our &lt;strong&gt;internal/http/handler.go&lt;/strong&gt; file and use our student service.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#http-endpoints-methods-amp%C2%A0json"&gt;
  &lt;/a&gt;
  HTTP Endpoints Methods &amp;amp; JSON
&lt;/h4&gt;

&lt;p&gt;In our handler file we can now create the rest of our endpoints as we did for &lt;strong&gt;api/status&lt;/strong&gt; but this time the second argument will be functions we will create and those functions will be calling our services methods that we have created previously. And for that, we are going to add a field &lt;strong&gt;Service&lt;/strong&gt; to our &lt;strong&gt;Handler&lt;/strong&gt; struct and that field will be typed as a pointer to the &lt;strong&gt;Service&lt;/strong&gt; of the &lt;strong&gt;student&lt;/strong&gt; package. Also we will pass this service in our &lt;strong&gt;NewHandler()&lt;/strong&gt; func so we can have access to it when we insatiate the handler.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gFX7mWUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2APr1OFKWQG5TfxPUlydAp1w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFX7mWUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2APr1OFKWQG5TfxPUlydAp1w.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;⚠️ Attention! Rename the package from handler to &lt;/em&gt;&lt;strong&gt;&lt;em&gt;http.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's continue by adding our endpoints to &lt;strong&gt;InitRoutes()&lt;/strong&gt; and then defining the handler functions that will call our service functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z76WWlEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AAYXJBEvXG4fZmPWMd7LWlw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z76WWlEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AAYXJBEvXG4fZmPWMd7LWlw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, now let's write the body of this handlers functions and return a JSON response since this is a REST API. And here we will see that the &lt;strong&gt;gorilla/mux&lt;/strong&gt; router will save us time for example to retrieve de &lt;strong&gt;id&lt;/strong&gt; of our endpoints.&lt;/p&gt;

&lt;p&gt;For example, in &lt;strong&gt;GetStudentById&lt;/strong&gt; we can &lt;strong&gt;mux.Vars()&lt;/strong&gt; passing in our request "&lt;strong&gt;r"&lt;/strong&gt; and then get whatever parameter we passed in curly braces in our endpoint, in this case the &lt;strong&gt;{id}.&lt;br&gt;
**Once we have the id we can parsed it from string to int or uint in this case and then call our Service method and fetched the student from database.&lt;br&gt;
If there is no error we then can create a new **json&lt;/strong&gt; encoder passing in our response writer "&lt;strong&gt;w&lt;/strong&gt;" and encode the result (&lt;strong&gt;student&lt;/strong&gt;) from our service.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m52WWUj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Adi7DFhnkApMx1PJbcjpPCg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m52WWUj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Adi7DFhnkApMx1PJbcjpPCg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another thing I want to do before implement to rest of our handler functions is to improve the error handling in this function. We are just printing an error message but this is a REST API it is good practice to actually return an HTTP status code if we get an error.&lt;/p&gt;

&lt;p&gt;For that I'll create an helper function named &lt;strong&gt;respondWithError()&lt;/strong&gt; and I will also create a &lt;strong&gt;Response&lt;/strong&gt; struct that will be useful. I'll be writing this in a new file &lt;strong&gt;helper.go&lt;/strong&gt; inside of our package &lt;strong&gt;http&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;⚠️ By the way I have just noticed that I've made a mistake!! I've been calling my package &lt;strong&gt;handler&lt;/strong&gt; instead of &lt;strong&gt;http.&lt;/strong&gt; Sorry for that just rename the package to &lt;strong&gt;http&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ADeLQRWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AQZecdOqA4HC-EmeILI_hiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ADeLQRWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AQZecdOqA4HC-EmeILI_hiw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I fixed my package name 👍🏼&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;respondWithError&lt;/strong&gt; I write an header with a Status Error and encode the struct &lt;strong&gt;Response&lt;/strong&gt; to json passing in a custom message with my error.&lt;/p&gt;

&lt;p&gt;We can use this back in our &lt;strong&gt;handler.go&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i_NWQ72D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AN-y0kI6NZKLIEwroSXGuGg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i_NWQ72D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AN-y0kI6NZKLIEwroSXGuGg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we are going to set in our response header a Content-Type of &lt;strong&gt;application/json&lt;/strong&gt; plus &lt;strong&gt;UTF-8 charset&lt;/strong&gt; encoding and write an an HTTP status OK that will return 200 as code. If nothing goes wrong we don't enter in &lt;strong&gt;respondWithError&lt;/strong&gt; and the status stays &lt;strong&gt;200 ✅ &lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LywidKEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AC1v0E6xcyMA1h5_blNZsrw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LywidKEw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AC1v0E6xcyMA1h5_blNZsrw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, &lt;strong&gt;GetStudentById&lt;/strong&gt; is done now let's implement the rest of our functions.&lt;br&gt;
Once again the source code for this is in my &lt;a href="https://github.com/lucasnevespereira/students-api"&gt;GitHub repository&lt;/a&gt; 🙂&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PP8Di1lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AnvHGLku2lHnCrygj9yD9LA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PP8Di1lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AnvHGLku2lHnCrygj9yD9LA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZvQFHs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A8Jfyu3foKobsPJ26iQ3BZQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZvQFHs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A8Jfyu3foKobsPJ26iQ3BZQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ac3XlUmJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AuRbSkfnzurXMAN0TTVzvRw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ac3XlUmJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AuRbSkfnzurXMAN0TTVzvRw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, moving on let's fix one thing in &lt;strong&gt;cmd/server/main.go&lt;/strong&gt; before testing this. Let's import our StudentService in our &lt;strong&gt;main.go&lt;/strong&gt; file and call &lt;strong&gt;NewService&lt;/strong&gt; and passing it our &lt;strong&gt;database.InitDatabase()&lt;/strong&gt; as argument. Then we just have to pass &lt;strong&gt;studentService&lt;/strong&gt; to the &lt;strong&gt;NewHandler()&lt;/strong&gt; call.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6CIERR7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AP47nJydRL686hwUIDHRzgw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6CIERR7u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AP47nJydRL686hwUIDHRzgw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This reminds me, I want to handle database migrations.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#database-migrations"&gt;
  &lt;/a&gt;
  Database migrations
&lt;/h4&gt;

&lt;p&gt;Since we are using &lt;strong&gt;gorm&lt;/strong&gt; this task is quite simple, there is a method in our &lt;strong&gt;ORM&lt;/strong&gt; library that auto migrates the database when we init our database connection. Let's create a new file &lt;strong&gt;migrate.go&lt;/strong&gt; inside of our package &lt;strong&gt;database&lt;/strong&gt; in the &lt;strong&gt;internal/&lt;/strong&gt; directory.&lt;br&gt;
There we will simply write an helper function &lt;strong&gt;MigrateDB&lt;/strong&gt; that will migrate our database. We will call these function in our &lt;strong&gt;Run()&lt;/strong&gt; in &lt;strong&gt;cmd/server/main.go&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUvYQJhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AXMvAgx4jrprmAuSAa4U1BQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUvYQJhf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AXMvAgx4jrprmAuSAa4U1BQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dcYbJV1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AE6HJi69KNU8MzI1sZWr1pA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dcYbJV1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AE6HJi69KNU8MzI1sZWr1pA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, I think we are ready to test our endpoints, finally !&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#api-endpoints-with%C2%A0insomnia"&gt;
  &lt;/a&gt;
  API endpoints with Insomnia
&lt;/h4&gt;

&lt;p&gt;To test our endpoints I'll use a software named &lt;a href="https://insomnia.rest/"&gt;&lt;strong&gt;Insomnia&lt;/strong&gt;&lt;/a&gt;, you can also use &lt;a href="https://www.postman.com/"&gt;&lt;strong&gt;Postman&lt;/strong&gt;&lt;/a&gt; that is more famous I guess, I just enjoy using Insomnia but it is the same thing 🙂&lt;/p&gt;

&lt;p&gt;Let's run our app with &lt;code&gt;go run cmd/server/main.go&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--12zjhM57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AEjhnYS3D0IePJ4KFzoAj4g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--12zjhM57--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AEjhnYS3D0IePJ4KFzoAj4g.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've created my endpoints in &lt;strong&gt;Insomnia&lt;/strong&gt; and I've posted a new Student and I don't get an error and I see that my preview is actually in JSON.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lxklV9sT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AL5A2FCaWJnLl8HrFBM3wsQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lxklV9sT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AL5A2FCaWJnLl8HrFBM3wsQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's test to get this student by it's school name "&lt;em&gt;Havard&lt;/em&gt;" and then it's &lt;em&gt;ID.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c75Xi40P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AVQPHA3mt8fME86xtqpAWAw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c75Xi40P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AVQPHA3mt8fME86xtqpAWAw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rLLXaApz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A4hJ6qCu-SmLopwRd3n0k4Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rLLXaApz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A4hJ6qCu-SmLopwRd3n0k4Q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's add another student to test GET all students.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uKt1k26R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AL7errBkKao9y-sGgkG8D1Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uKt1k26R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AL7errBkKao9y-sGgkG8D1Q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1kY1PwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Ay2TLBDpJFpAfFT2JMFfYKg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1kY1PwK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2Ay2TLBDpJFpAfFT2JMFfYKg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can test the rest of the endpoints 🙂 but it seems to be working just fine.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#write-some%C2%A0tests"&gt;
  &lt;/a&gt;
  Write some tests
&lt;/h4&gt;

&lt;p&gt;A good API is a well tested API, so I'll try to implement &lt;a href="https://www.katalon.com/resources-center/blog/end-to-end-e2e-testing/#:~:text=End%2Dto%2Dend%20testing%20is,pieces%20work%20together%20as%20expected."&gt;E2E Testing&lt;/a&gt; for that I'll be using the &lt;a href="https://github.com/go-resty/resty/"&gt;&lt;strong&gt;resty&lt;/strong&gt;&lt;/a&gt; library that will allow us to test our http endpoints and the &lt;strong&gt;testify/assert&lt;/strong&gt; library that will give us access to assert methods that will check if the result is equal to what we are expecting basically. Let's get this packages.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go get -u github.com/go-resty/resty/v2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go get -u github.com/stretchr/testify/assert&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then create a package test in our root directory and add to it a &lt;strong&gt;student_test.go&lt;/strong&gt; file.&lt;br&gt;
In this file we will create a constant with our &lt;strong&gt;BASE_URL&lt;/strong&gt; so we don't have to write in all of our file. Then we will create a &lt;strong&gt;TestGetAllStudents()&lt;/strong&gt; func. There we are going to call a new "client" to simulate our user, this client is an instance of &lt;strong&gt;resty.New()&lt;/strong&gt; method.&lt;br&gt;
Then we will call the &lt;strong&gt;R()&lt;/strong&gt; method for request and make a &lt;strong&gt;GET()&lt;/strong&gt; request passing in our endpoint url.&lt;/p&gt;

&lt;p&gt;We assign a &lt;strong&gt;resp&lt;/strong&gt; and &lt;strong&gt;err&lt;/strong&gt; variable to it and if we got a error we call &lt;strong&gt;t.Fail()&lt;/strong&gt;.&lt;br&gt;
If we have no error then we &lt;strong&gt;assert.Equal()&lt;/strong&gt; comparing the status code of our &lt;strong&gt;resp&lt;/strong&gt; variable (result of the get request to out endpoint) to a &lt;strong&gt;200&lt;/strong&gt; status code.&lt;/p&gt;

&lt;p&gt;And this is basically it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDSTf6lN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A0u85fQyiHZirSe4_B9uPVQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDSTf6lN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A0u85fQyiHZirSe4_B9uPVQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now if we restart our app ( &lt;code&gt;go run cmd/server/main.go&lt;/code&gt; ) and we cd into the testing package and run &lt;code&gt;go test&lt;/code&gt; we can see that our test has passed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EnfUuyjs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A5tlRFmHRS1QqHGHJn-Zd8Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EnfUuyjs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A5tlRFmHRS1QqHGHJn-Zd8Q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now to have some test coverage we just need to test the rest of our endpoints. For example, the &lt;strong&gt;TestPostStudent()&lt;/strong&gt; would look like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gzs_GVBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ARze1Hn8qHr8ujR6w-ZfqAw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gzs_GVBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2ARze1Hn8qHr8ujR6w-ZfqAw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dFOWYuKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AScIeVOCTi5cXnlxqYQIIiA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dFOWYuKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AScIeVOCTi5cXnlxqYQIIiA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, let's move on we are almost done 🙂&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-dockerize-our%C2%A0api"&gt;
  &lt;/a&gt;
  Let's Dockerize our API
&lt;/h4&gt;

&lt;p&gt;Our API is functional but every time we want to use it with our database we need to run that long command in our terminal&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run ----name students-db ----env POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And then we have to export our env variables, and still hit the &lt;code&gt;go run&lt;/code&gt; to actually run our app. There is a way to simplify this and it is actually good if we want to deploy this API one day. That solution is to add Docker to our app, we will create a &lt;strong&gt;Dockerfile&lt;/strong&gt; that will be in charge of building our API and then a &lt;strong&gt;docker-compose.yml&lt;/strong&gt; file that will be in charge of creating multiple services (containers) and connecting them together. We will have 2 containers or services as you want to call it, one of them will be our PostgresSQL database and the other our API that will be buid with the help of our &lt;strong&gt;Dockerfile.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's start by creating a &lt;strong&gt;Dockerfile&lt;/strong&gt; in our root directory. In there we will just be fetching a golang image from the docker hub, then create a workspace directory inside of it, add the content of our current directory (so all of our app), build our executable and then run it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRYiXM1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AambhpcF19JH2x2VULKwfeA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRYiXM1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AambhpcF19JH2x2VULKwfeA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's add the &lt;strong&gt;docker-compose.yml&lt;/strong&gt; file also in our root directory. As I said before in there I have 2 services &lt;strong&gt;db&lt;/strong&gt; and &lt;strong&gt;api,&lt;/strong&gt; one based on a PostgreSQL image and another from our Dockerfile, then we map the right ports in both containers. I have a volume from my db so the database content is synced in a local folder in my machine.&lt;br&gt;
Both services are in the same network so they can communicate.&lt;br&gt;
The &lt;strong&gt;api&lt;/strong&gt; service depends on the &lt;strong&gt;db&lt;/strong&gt; service meaning it cannot start if the db does not work. And then I finally set the default bridge network as a link layer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kXUbWZAb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AY_Z2fCUeH7QBXrHg2tF3HQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kXUbWZAb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AY_Z2fCUeH7QBXrHg2tF3HQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To test this out you need to stop the previous database container we were running. Remember check with &lt;code&gt;docker ps&lt;/code&gt; if you have it running and then run a &lt;code&gt;docker stop &amp;lt;CONTAINER ID&amp;gt;&lt;/code&gt; or &lt;code&gt;docker stop &amp;lt;CONTAINER_NAME&amp;gt;&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7XtdNfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AGPI1wavcq7qHJwlvp4oA0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7XtdNfM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AGPI1wavcq7qHJwlvp4oA0w.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now all we have to do is run &lt;code&gt;docker-compose up&lt;/code&gt;to start our API, and &lt;code&gt;docker-compose down&lt;/code&gt; to stop it 🙂&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; The first time running docker-compose or whenever you want to rebuild the entire thing use &lt;code&gt;docker-compose up --build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cPukxsak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A_FBedXvaq7sWDlBnhR3dQg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cPukxsak--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2A_FBedXvaq7sWDlBnhR3dQg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S5pUe6sk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AaB54Cv7coi18AW48pXO4Kg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S5pUe6sk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AaB54Cv7coi18AW48pXO4Kg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are reaching the end, let's just check if our endpoints are still working.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQWlbcK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AdpgXeYsPcg27JrfwpS-Dzg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQWlbcK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AdpgXeYsPcg27JrfwpS-Dzg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYznZwSr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AE3D8DpsGhbCJJghOGX1ZeQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYznZwSr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AE3D8DpsGhbCJJghOGX1ZeQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fr7rn3sU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AZP-8WsMj7Rf-XZOE-UKanw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fr7rn3sU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/800/1%2AZP-8WsMj7Rf-XZOE-UKanw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seems to be good!&lt;br&gt;
Okay, our app is &lt;em&gt;Dockerized &lt;/em&gt;&lt;strong&gt;&lt;em&gt;,&lt;/em&gt;&lt;/strong&gt; it is a lot simpler to start our api using &lt;strong&gt;Docker 👍🏼&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 😀
&lt;/h3&gt;

&lt;p&gt;Okay we are officially done, I know it has been a bit long but I am glad I wrote this article because I've learned a lot also by trying to explain this to you guys.&lt;/p&gt;

&lt;p&gt;Don't hesitate to check my &lt;a href="https://www.youtube.com/channel/UC7JqfPrr4nHKvbwLAdk-MgA"&gt;Youtube Channel&lt;/a&gt; or my &lt;a href="https://twitter.com/lucaasnp_"&gt;Twitter&lt;/a&gt; account and contact me if you have any questions or remarks 🙂.&lt;br&gt;
Also the &lt;a href="https://github.com/lucasnevespereira/students-api"&gt;source code&lt;/a&gt; if you need to check it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UC7JqfPrr4nHKvbwLAdk-MgA"&gt;Youtube Channel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/lucasnevespereira/students-api"&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#see-you-soon%C2%A0"&gt;
  &lt;/a&gt;
  See you soon! 👋🏼
&lt;/h4&gt;

</description>
      <category>go</category>
      <category>restapi</category>
      <category>postgres</category>
      <category>docker</category>
    </item>
    <item>
      <title>Kubernetes Hands-On Self-Paced Course (Free)</title>
      <author>Meir Gabay</author>
      <pubDate>Tue, 13 Apr 2021 17:11:14 +0000</pubDate>
      <link>https://dev.to/unfor19/kubernetes-hands-on-self-paced-course-free-111b</link>
      <guid>https://dev.to/unfor19/kubernetes-hands-on-self-paced-course-free-111b</guid>
      <description>&lt;p&gt;Create a local Kubernetes development environment on Windows and WSL2. In future versions, I'll add the relevant steps for macOS.&lt;/p&gt;

&lt;p&gt;Throughout this self-paced course, you'll gain hands-on experience with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a local Kubernetes cluster with &lt;a href="https://minikube.sigs.k8s.io/docs/start/"&gt;minikube&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Deploying applications in Kubernetes using &lt;a href="https://kubernetes.io/docs/reference/kubectl/kubectl/"&gt;kubectl&lt;/a&gt; and this project's YAML files&lt;/li&gt;
&lt;li&gt;Serving applications securely via HTTPS with &lt;a href="https://github.com/kubernetes/ingress-nginx/"&gt;NGINX Ingress Controller&lt;/a&gt; (LoadBalancer) and &lt;a href="https://github.com/jetstack/cert-manager"&gt;cert-manager&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Managing Kubernetes resources as packages using &lt;a href="https://helm.sh/"&gt;Helm v3&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Authenticating users with Google as an Identity Provider (IdP), implementing both &lt;a href="https://oauth.net/2/"&gt;OAuth2&lt;/a&gt; and &lt;a href="https://openid.net/connect/"&gt;OAuth2+OIDC&lt;/a&gt; using &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy"&gt;oauth2-proxy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Building the containerized web-server application &lt;a href="https://github.com/unfor19/docker-cats"&gt;docker-cats&lt;/a&gt; and deploying it to the Kubernetes cluster with &lt;a href="https://kubernetes.io/docs/reference/kubectl/cheatsheet/#updating-resources"&gt;kubectl rollout&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#link-to-course"&gt;
  &lt;/a&gt;
  Link To Course
&lt;/h2&gt;

&lt;p&gt;Open-source project @ &lt;a href="https://github.com/unfor19/kubernetes-localdev"&gt;GitHub unfor19/kubernetes-localdev&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sneak-peek-of-the-architecture"&gt;
  &lt;/a&gt;
  Sneak Peek Of The Architecture
&lt;/h2&gt;

&lt;p&gt;By the end of this course, you'll deploy the below architecture on your local machine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SM4-ttq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d33vo9sj4p3nyc.cloudfront.net/kubernetes-localdev/kubernetes-localdev-architecture.png%3Fdummy%3Dnull" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SM4-ttq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d33vo9sj4p3nyc.cloudfront.net/kubernetes-localdev/kubernetes-localdev-architecture.png%3Fdummy%3Dnull" alt="kubernetes-localdev-architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#create-a-kubernetes-cluster"&gt;Create a Kubernetes Cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#enable-secured-https-access-from-windows-to-wsl2"&gt;Enable secured HTTPS access from Windows to WSL2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#configure-lens"&gt;Configure LENS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#nginx-ingress-controller"&gt;NGINX Ingress Controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#support-dns-resolution-in-windows-host"&gt;Support DNS resolution in Windows host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#http"&gt;HTTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#https"&gt;HTTPS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-a-certificate-authority-ca-certificate-and-key"&gt;Create A Certificate Authority (CA) Certificate And Key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#load-ca-certificates-to-a-kubernetes-secret"&gt;Load CA Certificates To A Kubernetes Secret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#install-cert-manager-and-issue-a-self-signed-certificate"&gt;Install Cert-Manager And Issue A Self-Signed Certificate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#authentication---oauth2"&gt;Authentication - OAuth2&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#create-googles-credentials"&gt;Create Google's Credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#create-kubernetes-secrets-for-googles-credentials"&gt;Create Kubernetes Secrets For Google's Credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-oauth2-proxy-and-protect-an-application"&gt;Deploy OAuth2-Proxy And Protect An Application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#authentication---oidc"&gt;Authentication - OIDC&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#deploy-oauth2-proxy-and-use-oidc"&gt;Deploy OAuth2-Proxy And Use OIDC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#authentication-summary"&gt;Authentication Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/unfor19/kubernetes-localdev#local-development-ci-and-deployment-cd"&gt;Local Development (CI) And Deployment (CD)&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#build-the-application-ci"&gt;Build The Application (CI)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deploy-the-application-cd"&gt;Deploy The Application (CD)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#cleanup"&gt;Cleanup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/unfor19/kubernetes-localdev#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>kubernetes</category>
      <category>docker</category>
      <category>devops</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Twitter Tweet Box with Character Limit Highlighting in HTML CSS &amp; JavaScript</title>
      <author>CodingNepal</author>
      <pubDate>Tue, 13 Apr 2021 17:03:26 +0000</pubDate>
      <link>https://dev.to/codingnepal/twitter-tweet-box-with-character-limit-highlighting-in-html-css-javascript-2ai8</link>
      <guid>https://dev.to/codingnepal/twitter-tweet-box-with-character-limit-highlighting-in-html-css-javascript-2ai8</guid>
      <description>&lt;p&gt;Hey friends, today in this blog you'll learn how to create a Twitter Tweet Box with Character Limit Highlighting using HTML CSS &amp;amp; JavaScript. In the earlier blog, I have shared &lt;a href="https://www.codingnepalweb.com/2021/03/limit-input-characters-using-javascript.html"&gt;how to Easily Limit Input Characters in JavaScript&lt;/a&gt;, and in this blog, you'll also learn to limit input characters but it will be more advanced than the previous one because in this Twitter tweet box there is a feature of character limit highlighting which was not in the previous project.&lt;/p&gt;

&lt;p&gt;If you have a Twitter account then you definitely know what is tweet box and how it looks like. In this project [Twitter Post Share Box or Tweet Box], on the webpage, there is a tweet box as you can see in the preview image. In this box, there is a typing area, some media icons, a characters limit counter, and a tweet button. At first, the counter will be hidden and the tweet button also disabled but once you start typing then there is visible the counter and the button also active/clickable.&lt;/p&gt;

&lt;p&gt;In this tweet box, there is a limit of 100 characters which means you can type 1-100 length/numbers of characters. Once you crossed the limit then the over characters will start highlighting, the tweet button is again disabled and the counter color is also charged into red and it shows you how many characters that you have to remove to tweet or proceed.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#video-tutorial-of-tweet-box-with-character-limit-highlighting"&gt;
  &lt;/a&gt;
  Video Tutorial of Tweet Box with Character Limit Highlighting
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_pbuwzly6xA&amp;amp;ab_channel=CodingNepal"&gt;Click here to Watch Full Video on YouTube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can copy the codes from the given boxes or download the code files from the given link but I recommend you download the source code files instead of copying codes. &lt;a href="https://www.codingnepalweb.com/2021/04/twitter-tweet-box-with-character-limit.html"&gt;Click here to download code files.&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML CODE:
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;!-- Created By CodingNepal - www.codingnepalweb.com --&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset="UTF-8"&amp;gt;
  &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
  &amp;lt;title&amp;gt;Twitter Tweet Box UI Design | CodingNepal&amp;lt;/title&amp;gt;
  &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://unicons.iconscout.com/release/v3.0.6/css/line.css"&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div class="wrapper"&amp;gt;
    &amp;lt;div class="input-box"&amp;gt;
      &amp;lt;div class="tweet-area"&amp;gt;
        &amp;lt;span class="placeholder"&amp;gt;What's happening?&amp;lt;/span&amp;gt;
        &amp;lt;div class="input editable" contenteditable="true" spellcheck="false"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;div class="input readonly" contenteditable="true" spellcheck="false"&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div class="privacy"&amp;gt;
        &amp;lt;i class="fas fa-globe-asia"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;span&amp;gt;Everyone can reply&amp;lt;/span&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="bottom"&amp;gt;
      &amp;lt;ul class="icons"&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="uil uil-capture"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="far fa-file-image"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="fas fa-map-marker-alt"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="far fa-grin"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;i class="far fa-user"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/ul&amp;gt;
      &amp;lt;div class="content"&amp;gt;
        &amp;lt;span class="counter"&amp;gt;100&amp;lt;/span&amp;gt;
        &amp;lt;button&amp;gt;Tweet&amp;lt;/button&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;

  &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS CODE
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
}
body{
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: #1da1f2;
}
::selection{
  color: #fff;
  background: #1da1f2;
}
.wrapper{
  background: #fff;
  max-width: 475px;
  width: 100%;
  border-radius: 15px;
  padding: 25px 25px 15px 25px;
  box-shadow: 0px 10px 15px rgba(0,0,0,0.1);
}
.input-box{
  padding-top: 10px;
  border-bottom: 1px solid #e6e6e6;
}
.input-box .tweet-area{
  position: relative;
  min-height: 130px;
  max-height: 170px;
  overflow-y: auto;
}
.tweet-area::-webkit-scrollbar{
  width: 0px;
}
.tweet-area .placeholder{
  position: absolute;
  margin-top: -3px;
  font-size: 22px;
  color: #98A5B1;
  pointer-events: none;
}
.tweet-area .input{
  outline: none;
  font-size: 17px;
  min-height: inherit;
  word-wrap: break-word;
  word-break: break-all;
}
.tweet-area .editable{
  position: relative;
  z-index: 5;
}
.tweet-area .readonly{
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  color: transparent;
  background: transparent;
}
.readonly .highlight{
  background: #fd9bb0;
}
.input-box .privacy{
  color: #1da1f2;
  margin: 15px 0;
  display: inline-flex;
  align-items: center;
  padding: 7px 10px;
  border-radius: 50px;
  cursor: pointer;
  transition: background 0.2s ease;
}
.privacy:hover, .icons li:hover{
  background: #e7f5fe;
}
.privacy i{
  font-size: 18px;
}
.privacy span{
  font-size: 15px;
  font-weight: 600;
  margin-left: 7px;
}
.bottom{
  display: flex;
  margin-top: 13px;
  align-items: center;
  justify-content: space-between;
}
.bottom .icons{
  display: inline-flex;
}
.icons li{
  list-style: none;
  color: #1da1f2;
  font-size: 20px;
  margin: 0 2px;
  height: 38px;
  width: 38px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s ease;
}
.bottom .content{
  display: flex;
  align-items: center;
  justify-content: center;
}
.bottom .counter{
  color: #333;
  display: none;
  font-weight: 500;
  margin-right: 15px;
  padding-right: 15px;
  border-right: 1px solid #aab8c2;
}
.bottom button{
  padding: 9px 18px;
  border: none;
  outline: none;
  border-radius: 50px;
  font-size: 16px;
  font-weight: 700;
  background: #1da1f2;
  color: #fff;
  cursor: pointer;
  opacity: 0.5;
  pointer-events: none;
  transition: background 0.2s ease;
}
.bottom button.active{
  opacity: 1;
  pointer-events: auto;
}
.bottom button:hover{
  background: #0d8bd9;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  JavaScript CODE
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const wrapper = document.querySelector(".wrapper"),
editableInput = wrapper.querySelector(".editable"),
readonlyInput = wrapper.querySelector(".readonly"),
placeholder = wrapper.querySelector(".placeholder"),
counter = wrapper.querySelector(".counter"),
button = wrapper.querySelector("button");

editableInput.onfocus = ()=&amp;gt;{
  placeholder.style.color = "#c5ccd3";
}
editableInput.onblur = ()=&amp;gt;{
  placeholder.style.color = "#98a5b1";
}

editableInput.onkeyup = (e)=&amp;gt;{
  let element = e.target;
  validated(element);
}
editableInput.onkeypress = (e)=&amp;gt;{
  let element = e.target;
  validated(element);
  placeholder.style.display = "none";
}

function validated(element){
  let text;
  let maxLength = 100;
  let currentlength = element.innerText.length;

  if(currentlength &amp;lt;= 0){
    placeholder.style.display = "block";
    counter.style.display = "none";
    button.classList.remove("active");
  }else{
    placeholder.style.display = "none";
    counter.style.display = "block";
    button.classList.add("active");
  }

  counter.innerText = maxLength - currentlength;

  if(currentlength &amp;gt; maxLength){
    let overText = element.innerText.substr(maxLength); //extracting over texts
    overText = `&amp;lt;span class="highlight"&amp;gt;${overText}&amp;lt;/span&amp;gt;`; //creating new span and passing over texts
    text = element.innerText.substr(0, maxLength) + overText; //passing overText value in textTag variable
    readonlyInput.style.zIndex = "1";
    counter.style.color = "#e0245e";
    button.classList.remove("active");
  }else{
    readonlyInput.style.zIndex = "-1";
    counter.style.color = "#333";
  }
  readonlyInput.innerHTML = text; //replacing innerHTML of readonly div with textTag value
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tweetbox</category>
      <category>postbox</category>
      <category>css</category>
    </item>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Jess Lee (she/her)</author>
      <pubDate>Tue, 13 Apr 2021 17:00:03 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-4njl</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-4njl</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week. ❤️&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-is-of-the-essence"&gt;
  &lt;/a&gt;
  Time is of the essence
&lt;/h2&gt;

&lt;p&gt;"Despite being a failure at managing my own time, I can still give some advice and tips," writes &lt;a class="comment-mentioned-user" href="https://dev.to/technoglot"&gt;@technoglot&lt;/a&gt;
. You sure can! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/technoglot" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eFu_rAsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tY0BDOkD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/430182/bd897f8a-247e-44b6-bac8-db79fbe1a55b.jpeg" alt="technoglot image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/technoglot/time-management-productivity-tips-for-devs-4d33" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Time management &amp;amp; productivity tips for devs ⏳&lt;/h2&gt;
      &lt;h3&gt;Amelia Vieira Rosado ・ Apr  6 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#writing&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-real-work%E2%84%A2-of-programming"&gt;
  &lt;/a&gt;
  The Real Work™ of programming
&lt;/h2&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/adamcoster"&gt;@adamcoster&lt;/a&gt;
 explains that the Real Work™ of programming mostly consists of things that aren't directly writing code. And documentation is certainly one of them!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/adamcoster" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epoNOXRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mBKsVSo---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/247112/15b3ffee-601f-4e00-95ff-c31ce8abe39f.jpg" alt="adamcoster image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/adamcoster/documentation-as-code-40a7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;💻 Documentation as code&lt;/h2&gt;
      &lt;h3&gt;Adam Coster ・ Apr  8 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#try-to-have-a-wonderful-weekend"&gt;
  &lt;/a&gt;
  Try to have a wonderful weekend
&lt;/h2&gt;

&lt;p&gt;As &lt;a class="comment-mentioned-user" href="https://dev.to/poudyal_rabin"&gt;@poudyal_rabin&lt;/a&gt;
 says, weekends are precious. As developers, we often but our personal time on the back-burner since it's especially easy for work to follow us home these days. If you need some inspiration for your weekend, this post is for you.   &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/poudyal_rabin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nPwVCQo1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--up4pUmiT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/414902/b395dac8-f6f1-4742-95c4-dc48540553be.jpg" alt="poudyal_rabin image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/poudyal_rabin/how-to-spend-a-meaningful-weekend-as-a-programmer-353j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to have a meaningful weekend as a programmer?&lt;/h2&gt;
      &lt;h3&gt;poudyal_rabin ・ Apr 11 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#spring-cleaning"&gt;
  &lt;/a&gt;
  Spring cleaning
&lt;/h2&gt;

&lt;p&gt;Need some unit testing tips and tricks for clean code? &lt;a class="comment-mentioned-user" href="https://dev.to/thawkin3"&gt;@thawkin3&lt;/a&gt;
 has you covered.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thawkin3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wssFpIs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sWSbd6o1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/344735/70749f3f-334b-4414-a6e2-ca8dd8a89f3a.jpeg" alt="thawkin3 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thawkin3/clean-code-with-unit-tests-tips-and-tricks-for-keeping-your-test-suites-clean-483l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Clean Code with Unit Tests: Tips and tricks for keeping your test suites clean&lt;/h2&gt;
      &lt;h3&gt;Tyler Hawkins ・ Apr  7 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#testing&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-uniquely-portable-magic"&gt;
  &lt;/a&gt;
  A uniquely portable magic
&lt;/h2&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/jordienr"&gt;@jordienr&lt;/a&gt;
 shares a short but sweet list of books that aren't directly related to programming, but are enriching for developers, nonetheless. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jordienr" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1HugYJoe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--l2Al9lUn--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/164268/b4366937-11ed-40ff-aca2-82155ee8de9c.jpg" alt="jordienr image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jordienr/4-books-that-are-not-about-computers-that-made-me-a-good-software-developer-2hac" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;4 Books that are not about computers that made me a good Software Developer&lt;/h2&gt;
      &lt;h3&gt;Jordi Enric ・ Apr 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#create-build-and-publish-a-package-to-npm-in-es6"&gt;
  &lt;/a&gt;
  Create, build and publish a package to npm in ES6
&lt;/h2&gt;

&lt;p&gt;"The npm ecosystem is a great way to distribute useful blocks of reusable code," says &lt;a class="comment-mentioned-user" href="https://dev.to/whitep4nth3r"&gt;@whitep4nth3r&lt;/a&gt;
. "Through learning how to build and publish packages to npm, I feel like I’ve really levelled up my web dev skills." Congrats! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFhxX9YI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--89x-qD1I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/d64f2cf8-616d-4a73-af1c-17273b0c8545.png" alt="whitep4nth3r image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/how-to-build-test-and-release-a-node-module-in-es6-296b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to build, test and release a node module in ES6&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Apr 11 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#npm&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#youve-got-mail"&gt;
  &lt;/a&gt;
  You've got mail
&lt;/h2&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/aahnik"&gt;@aahnik&lt;/a&gt;
 explains how you can easily send an email using a Python script. If everything goes right, there will be no output in the terminal, and you will see the email sitting right in the recipient's inbox!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aahnik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28COnZ56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xJdF-Ep6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/453833/0d554f6d-073a-47e0-b356-bbdf3de4f171.jpeg" alt="aahnik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aahnik/how-to-send-emails-with-python-simply-explained-for-beginners-hea" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to send emails with Python? Simply explained for beginners&lt;/h2&gt;
      &lt;h3&gt;Aahnik Daw ・ Apr  7 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#email&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Tech Talk: "Accessibility is a Requirement" (RailsConf 2021)
</title>
      <author>Sylwia Vargas</author>
      <pubDate>Tue, 13 Apr 2021 16:50:32 +0000</pubDate>
      <link>https://dev.to/sylwiavargas/tech-talk-accessibility-is-a-requirement-railsconf-2021-2d9j</link>
      <guid>https://dev.to/sylwiavargas/tech-talk-accessibility-is-a-requirement-railsconf-2021-2d9j</guid>
      <description>&lt;p&gt;✨ &lt;strong&gt;What is this post about&lt;/strong&gt;: As a part of my professional growth, I make time to watch conference talks on Ruby, Rails, JS, React, tech writing, and tech trivia. Previously, I'd just watch them but now I will take and publish notes for future reference. This talk was a part of RailsConf 2021 that I'm participating at the time of writing. &lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;Talk:&lt;/strong&gt; "Accessibility is a Requirement" by &lt;a href="https://twitter.com/therealboone"&gt;Ryan Boone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;One-sentence summary&lt;/strong&gt;: Accessible web applications reach wider audiences, ensure businesses are in compliance with the law, and, most importantly, remove barriers for the one in seven worldwide living with a permanent disability. But limited time, lack of knowledge, and even good intentions get in the way of building them.&lt;/p&gt;

&lt;p&gt;✨ &lt;strong&gt;Impression&lt;/strong&gt;: I loved how tips-packed this talk was!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wcag"&gt;WCAG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#side-notes"&gt;Side Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#read-more"&gt;Read more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;accessibility&lt;/strong&gt; is a measure of how simply a person can participate in an activity&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;why bother&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;Title III [of the Americans with Disabilities Act] prohibits discrimination on the basis of disability in the activities of places of public accommodations" (ADA 1990, Title III)&lt;/li&gt;
&lt;li&gt;"Across the top one million home pages, 60,090,278 distinct accessibility errors were detected -- an average of 60.9 errors per page" (&lt;a href="https://webaim.ors/projects/million"&gt;https://webaim.ors/projects/million&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;there are more and more virtual a11y lawsuits in recent years (35% spike since the last year)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;61 million Americans have a disability&lt;/strong&gt; that impacts major life activities (Centers for Disease Control and Prevention)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#wcag"&gt;
  &lt;/a&gt;
  WCAG
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Web Content Accessibility Guidelines&lt;/li&gt;
&lt;li&gt;Content should be POUR: perceivable, operable, understandable, robust&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/sylwiavargas/checklist-web-accessibility-3abl"&gt;I wrote a checklist for those here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Perceivable&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;everything that's on the screen should be recognizable by the senses (hearing, seeing, and even feeling if necessary)&lt;/li&gt;
&lt;li&gt;color contrast can be checked in your browser console - please notice the two white lines in the color picker -- they indicate the colors that will meet the contrast ratio
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qEyjYaxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ek78dgqfzh8uhxcp7n9.png" alt="Chrome console's color picker"&gt;
&lt;/li&gt;
&lt;li&gt;include &lt;a href="https://accessibility.huit.harvard.edu/describe-content-images"&gt;alt text&lt;/a&gt; (if the image is decorative, still keep the alt text tag with a value of "")&lt;/li&gt;
&lt;li&gt;use hidden text on svg icons (e.g. &lt;code&gt;&amp;lt;span class="sr-only&amp;gt; Navigation Menu &amp;lt;/span&amp;gt;&lt;/code&gt;) and aria labels to make sure that the icon is easy to understand &lt;/li&gt;
&lt;li&gt;SVGs are focusable and so you need to disable focus on them (anything that's focusable should be interactive)&lt;/li&gt;
&lt;li&gt;use semantic html&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Operable&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;people should be able to interact with the content in a variety of ways (mouse, keyboard, voice, etc.)&lt;/li&gt;
&lt;li&gt;include "skip to content" hidden menu that pops up when you use keyboard navigation&lt;/li&gt;
&lt;li&gt;keep the focus style visible!&lt;/li&gt;
&lt;li&gt;don't skip header levels&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Understandable&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;include the &lt;code&gt;lang&lt;/code&gt; attribute on your website so the screenreaders will pronounce the words correctly&lt;/li&gt;
&lt;li&gt;provide clear errors (explicit, rightly-placed with an aria description)&lt;/li&gt;
&lt;li&gt;use labels on the forms&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Robust&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;usable on a variety of technologies and contexts, and remain accessible in the future&lt;/li&gt;
&lt;li&gt;use &lt;a href="https://validator.w3.org/"&gt;html validator&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;use &lt;a href="https://madebymike.github.io/html5-periodic-table/"&gt;semantic html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;output&lt;/code&gt; element to inform the screen reader of the changes on the website&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Integrate &lt;a href="https://www.deque.com/blog/writing-automated-tests-accessibility/"&gt;automated testing&lt;/a&gt; in your CICD pipeline&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Testing tools&lt;/strong&gt;: 

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.deque.com/blog/how-to-test-for-accessibility-with-cypress/"&gt;Cypress&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dequelabs/axe-core"&gt;axe-core&lt;/a&gt;, &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/web/tools/lighthouse"&gt;lighthouse&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/lighthouse-ci/"&gt;lighthouse CI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chrome extensions&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US"&gt;axe DevTools&lt;/a&gt; - detecting 57% of accessibility errors; there's also a pro version that detects 84% with guided tests&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/accessibility-insights-fo/pbjjkligggfmakdaogkfomddhfmpjeni?hl=en"&gt;Accessibility Insights for Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bradfrost.com/blog/post/atomic-web-design/"&gt;Atomic Web Design&lt;/a&gt; - a component methodology that breaks pages down into a hierarchy of composition (simples and simpler components) until you can't break them down anymore.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"&gt;Web components&lt;/a&gt; - a suite of different technologies allowing you to create reusable custom elements — with their functionality encapsulated away from the rest of your code — and utilize them in your web apps&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RAILS specifically&lt;/strong&gt;: &lt;a href="https://github.com/trailblazer/cells"&gt;cells gem&lt;/a&gt; - encapsulating parts of your UI into components into view models; view models, or cells, are simple ruby classes that can render templates&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Screen readers&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.nvaccess.org/"&gt;NVDA&lt;/a&gt; for Windows&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.apple.com/accessibility/vision/"&gt;Apple's voiceover&lt;/a&gt;, a Mac built-in &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#side-notes"&gt;
  &lt;/a&gt;
  Side notes:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;"The web is for everyone" &lt;a href="https://www.w3.org/People/Berners-Lee/"&gt;Sir Tim Berners-Lee&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;"The power of the web is in its universality. Access by everyone regardless of disability is an essential aspect" Sir Tim Berners-Lee&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  Read more
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.microsoft.com/design/inclusive/"&gt;Inclusive Design&lt;/a&gt; by Microsoft&lt;/li&gt;
&lt;li&gt;More on &lt;a href="https://accessibility.huit.harvard.edu/describe-content-images"&gt;alt text&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/WAI/standards-guidelines/wcag/"&gt;WCAG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/accessibility/semantics-aria"&gt;ARIA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.deque.com/blog/writing-automated-tests-accessibility/"&gt;automated testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getflywheel.com/layout/how-to-build-ui-components-in-rails/"&gt;How we build UI components in Rails at Flywheel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>techtalks</category>
      <category>a11y</category>
      <category>rails</category>
    </item>
    <item>
      <title>Beginners guide to Promises in Javascript</title>
      <author>Ashok Naik</author>
      <pubDate>Tue, 13 Apr 2021 16:45:58 +0000</pubDate>
      <link>https://dev.to/a_shokn/beginners-guide-to-promises-in-javascript-5efp</link>
      <guid>https://dev.to/a_shokn/beginners-guide-to-promises-in-javascript-5efp</guid>
      <description>&lt;p&gt;A Promise in JavaScript is an object which holds the completion status of an asynchronous operation. The completion status can be &lt;em&gt;Resolved, Rejected, Pending&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_1i5UDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rywxmm88tzejejqhr8pg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_1i5UDX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rywxmm88tzejejqhr8pg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#states-of-promises"&gt;
  &lt;/a&gt;
  States of Promises
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Resolved:&lt;/strong&gt; A promise is resolved state when there are no errors returned during the execution of the promise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rejected:&lt;/strong&gt; A promise is rejected state when errors occur during the execution of the promise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pending:&lt;/strong&gt; A promise is pending state when the result is not&lt;br&gt;
ready. &lt;/p&gt;

&lt;p&gt;Promises are used to carry out asynchronous tasks like network requests. Using Promises we can write clean and understandable code. Promises were meant to avoid the nesting of callbacks.&lt;/p&gt;

&lt;p&gt;Let's look at an example that will help us understand Promises in a better way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const promise = new Promise((resolve, reject) =&amp;gt; {
 let allWell = true;
  if(allWell) {
    resolve('Promise Resolved!');
  } else {
    reject('Promise Rejected');
  }
});
promise.then((result)=&amp;gt;{
    console.log(result) 
}).catch((result) =&amp;gt; {
    console.log(result)
});
//Output:  "Promise Resolved!"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the &lt;code&gt;promise&lt;/code&gt; variable holds the response of the completion status rejected, resolved, pending. As the value is &lt;code&gt;allWell&lt;/code&gt; is true the promise is resolved and the message &lt;code&gt;Promise Resolved!&lt;/code&gt; is returned. &lt;/p&gt;

&lt;p&gt;Promises are really great when something is going to take a long time in the background like fetching information from a database table we can resolve and carry on with execution and handle if something goes wrong by returning an error message.&lt;/p&gt;

&lt;p&gt;Let's look at another example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const promise1 = new Promise((resolve, reject) =&amp;gt; {
    resolve('Promise1  Resolved!');
});

const promise2 = new Promise((resolve, reject) =&amp;gt; {
    resolve('Promise2  Resolved!');
});

const promise3 = new Promise((resolve, reject) =&amp;gt; {
    resolve('Promise3  Resolved!');
});


Promise.all([promise1,promise2,promise3]).then((result)=&amp;gt;{
console.log(result);
})

//Output:  ["Promise1  Resolved!", "Promise2  Resolved!", "Promise3  Resolved!"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we have 3 simple promises which are always resolved and they all return a single message.&lt;br&gt;
By Using &lt;code&gt;Promise.all&lt;/code&gt; we can run all promises in parallel, As soon as all the promises are executed &lt;code&gt;.then&lt;/code&gt; method is called. &lt;code&gt;.then&lt;/code&gt; will return an array of all the successful messages.&lt;/p&gt;

&lt;p&gt;Thank you for your time. That's All folks &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Speech Recognition and Voice Activity Detection for your Apps</title>
      <author>Spurwing</author>
      <pubDate>Tue, 13 Apr 2021 16:17:55 +0000</pubDate>
      <link>https://dev.to/spurwing/speech-recognition-and-voice-activity-detection-for-your-apps-3je8</link>
      <guid>https://dev.to/spurwing/speech-recognition-and-voice-activity-detection-for-your-apps-3je8</guid>
      <description>&lt;p&gt;Have you ever wanted to dive into the future and use advanced &lt;strong&gt;AI technologies&lt;/strong&gt;? Today you can, thanks to our simple library! In this post we showcase our easy and simple Speech Recognition library for adding &lt;strong&gt;Voice Commands and Controls&lt;/strong&gt; to any application.&lt;/p&gt;

&lt;p&gt;Whether you are building web apps, native apps or desktop apps, this technology can be integrated into any system with an internet connection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-demo"&gt;
  &lt;/a&gt;
  Full Demo
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=60llvnv3nDA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YTY0N0DJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25m9k0p2am8qhvw5uksc.png" alt="voice activity detection library"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YouTube: &lt;a href="https://www.youtube.com/watch?v=60llvnv3nDA"&gt;https://www.youtube.com/watch?v=60llvnv3nDA&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code
&lt;/h2&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/Spurwing/Speech-Recognition"&gt;https://github.com/Spurwing/Speech-Recognition&lt;/a&gt; &lt;br&gt;
This is our simple yet powerful server-client implementation with Speech Recognition in the browser. It works on any device that uses a modern up-to-date web browser (FireFox or Chrome recommended).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;The architecture is straightforward. The library contains the implementation of the Spurwing Socket Server, which is also connected to a Speech-to-Text provider. For the latter we use WitAI (by Facebook), it's a completely free service and easy to use. Alternatively you can easily integrate any other STT provider (Google, IBM Watson, Bing, ...) but these may come at a price.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tO_TLLmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxhlps4ohi06xg3jc6o8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tO_TLLmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxhlps4ohi06xg3jc6o8.png" alt="speech to text architecture"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;This is a NodeJS implementation, you need node (with npm) v12+. Check your version using &lt;code&gt;node -v&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Clone or download this respository.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to make it download all necessary dependencies. (If it fails you may need to install C++ Build Tools).&lt;/li&gt;
&lt;li&gt;We use WitAI as a free STT provider. You need to sign up and create an app here &lt;a href="https://wit.ai/apps"&gt;https://wit.ai/apps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Under settings you'll find your "Server Access Token".&lt;/li&gt;
&lt;li&gt;Copy &lt;code&gt;config.sample.json&lt;/code&gt; to &lt;code&gt;config.json&lt;/code&gt; and edit it.&lt;/li&gt;
&lt;li&gt;You have to provide a value for &lt;code&gt;WITAPIKEY&lt;/code&gt; which is your "Server Access Token".&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;node index.js&lt;/code&gt; to launch the Socket Server.&lt;/li&gt;
&lt;li&gt;Visit &lt;a href="http://localhost:8002/Spurwing/audio/"&gt;http://localhost:8002/Spurwing/audio/&lt;/a&gt; to start testing.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;The Socket Server runs on port &lt;code&gt;8002&lt;/code&gt; which you can change in &lt;code&gt;index.js&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#client-implementation"&gt;
  &lt;/a&gt;
  Client implementation
&lt;/h3&gt;

&lt;p&gt;The code snippets below show how you can add this Speech Recognition library to your web apps.&lt;/p&gt;

&lt;p&gt;Inside your html's &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://spurwing.github.io/Speech-Recognition/public/VAD.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;     &lt;span class="c"&gt;&amp;lt;!-- Required: VAD algorithm --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://spurwing.github.io/Speech-Recognition/public/audio.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;   &lt;span class="c"&gt;&amp;lt;!-- Required: Speech Recognition Library --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"demo.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;    &lt;span class="c"&gt;&amp;lt;!-- Your implementation --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &lt;code&gt;demo.js&lt;/code&gt; you have:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;spa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SpurwingAudio&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// on user click start mic:&lt;/span&gt;
&lt;span class="nx"&gt;spa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// ask user for microphone access&lt;/span&gt;
    &lt;span class="nx"&gt;processStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You must allow your microphone.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// on user click stop mic:&lt;/span&gt;
&lt;span class="c1"&gt;// spa.end();&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;processStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// start Voice Activity Detection&lt;/span&gt;
  &lt;span class="nx"&gt;spa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startVAD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;recording&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="c1"&gt;// function: on speech start&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="c1"&gt;// function: on speech end&lt;/span&gt;
        &lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c1"&gt;// send audio/speech fragment to server (optional custom id of fragment)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// create socket connection to server&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;socket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;io&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;localhost:8002&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// server domain&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/Spurwing/audio/socket.io&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// server endpoint&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// capture "text" event from server (containing data)&lt;/span&gt;
&lt;span class="nx"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// do something with the transcribed audio text&lt;/span&gt;

    &lt;span class="c1"&gt;// data structure: { raw: "hello", nlp: null, id: 0 }&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With just a few lines of code, this opens up countless of possibilities and opportunities in Business Automation, Time Management and many other areas.&lt;/p&gt;

&lt;p&gt;I'm eager to see which solutions you'll build with this, let us know in the comments below! :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-us"&gt;
  &lt;/a&gt;
  About us
&lt;/h2&gt;

&lt;p&gt;Spurwing provides an enterprise grade &lt;a href="https://www.spurwing.io/"&gt;Appointment Scheduling API&lt;/a&gt; and Calendar Management Solutions for your business and projects. Easy to customize and effortless to integrate. We provide software teams with Time Management Solutions thanks to our enterprise grade Appointment Scheduling API. In addition we are building a completely free and open source marketplace containing widgets, chat bots, dashboards and integration solutions.&lt;/p&gt;

&lt;p&gt;For more projects make sure to follow our blog and on GitHub &lt;a href="https://github.com/Spurwing/"&gt;https://github.com/Spurwing/&lt;/a&gt; &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>algorithms</category>
      <category>javascript</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Hello World</title>
      <author>Lee Jian Howe</author>
      <pubDate>Tue, 13 Apr 2021 16:05:57 +0000</pubDate>
      <link>https://dev.to/leejianhowe/hello-world-38pa</link>
      <guid>https://dev.to/leejianhowe/hello-world-38pa</guid>
      <description>&lt;p&gt;Today, I found out about dev. to. &lt;/p&gt;

&lt;p&gt;A great place for tech enthusiasts. It has a great community of developers from different backgrounds. Many articles to read for new developers like myself and for experienced developers to share their knowledge. &lt;/p&gt;

&lt;p&gt;I will share with you my journey in coming from a non-tech background into tech. I think many of you here are in the same shoes as I am. &lt;/p&gt;

&lt;p&gt;Join me in my journey as I share my experiences. hope you like my articles. would love to hear your thoughts and experiences.❤️&lt;/p&gt;

</description>
      <category>inthirtyseconds</category>
    </item>
    <item>
      <title>My simple Github project went Viral 🚀</title>
      <author>Gourav</author>
      <pubDate>Tue, 13 Apr 2021 16:03:15 +0000</pubDate>
      <link>https://dev.to/gorvgoyl/my-simple-github-project-went-viral-5g7c</link>
      <guid>https://dev.to/gorvgoyl/my-simple-github-project-went-viral-5g7c</guid>
      <description>&lt;p&gt;Last month (Mar'21), I made a simple project which got spread in various tech communities and social media. On Github, It reached from 0 to 4k+ stars and 200+ forks within 7 days. Github featured it in &lt;em&gt;Trending repositories of day&lt;/em&gt; section for straight 5 days or so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FziHpjHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FziHpjHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
Trending on Github - 13 Mar'21



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Clone Wars&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
70+ open-source clones or alternatives of popular sites like Airbnb, Amazon, Instagram, Netflix, Tiktok, etc. List contains source code, demo links, tech stack, and, GitHub stars count.  &lt;/p&gt;

&lt;p&gt;Project link: &lt;a href="https://gourav.io/clone-wars"&gt;https://gourav.io/clone-wars&lt;/a&gt;&lt;br&gt;&lt;br&gt;
Github link: &lt;a href="https://github.com/gorvgoyl/clone-wars"&gt;https://github.com/gorvgoyl/clone-wars&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#motivation-behind-this-project"&gt;
  &lt;/a&gt;
  Motivation behind this project
&lt;/h2&gt;

&lt;p&gt;I'm a techie and many a time I lurk in popular programming communities on Reddit like r/webdev, r/reactjs, etc. to see what other devs are building or if any new JS framework is popping up. I noticed many devs were making clones of popular sites like Instagram, Trello, Spotify, etc. as part of their learning purpose, and they were sharing it with others to get feedback in terms of code quality and best practices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OxtUoJHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/11.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OxtUoJHi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/11.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
devs sharing their projects in r/reactjs



&lt;p&gt;These clones were scattered all over the communities. So, I thought why not create a single list of all these clones which people can bookmark and revisit later for whatever purpose they need it for. Honestly, I wasn't entirely sure at that time whether it would provide any good value to others or not. So, there was a way to find out that is to build it myself!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-built-it"&gt;
  &lt;/a&gt;
  How I built it
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-scrapping-reddit"&gt;
  &lt;/a&gt;
  1. Scrapping Reddit
&lt;/h3&gt;

&lt;p&gt;I wanted to get all posts that contain the "clone" keyword. I initially did it with default reddit search &lt;code&gt;reddit.com/r/reactjs/search/?q=clone&amp;amp;source=recent&amp;amp;restrict_sr=1&amp;amp;sort=new&lt;/code&gt;, (means &lt;em&gt;look for all posts in &lt;code&gt;reactjs&lt;/code&gt; subreddit with "clone" keyword and sort by new&lt;/em&gt;). It returned all posts, but that also included low-quality posts with 0 upvotes, questions on how to build a specific clone, etc. It would be a headache figuring out good clone projects from that dump. So, I used &lt;a href="https://redditsearch.io/"&gt;redditsearch.io&lt;/a&gt; instead, which provides advanced Reddit filtering like return posts that have at least 10 upvotes, posted during a specific timeline, etc.&lt;/p&gt;

&lt;p&gt;Next, I made a list of all these clones, their Github repo, demo links, tech stack. It was manual work.&lt;/p&gt;

&lt;p&gt;Additionally, I googled "open-source alternatives" and found some fully-functional clones of Slack, Airtable, Bit.ly, Evernote, Google analytics, etc. I added these to the list.&lt;/p&gt;

&lt;p&gt;So, now there are 2 kinds of projects on the list. The first ones look quite similar (UI-wise) but aren't fully-functional and the other ones which are fully-functional but UI is different (to avoid copyright issues, etc).&lt;/p&gt;

&lt;p&gt;BTW, I named my project after Star Wars 2008 TV Series: "The Clone Wars" and also kept the similar color scheme of OG image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQQ2nsvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQQ2nsvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
Star Wars 2008 TV Series: The Clone Wars



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mBHVVpJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mBHVVpJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/3.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
Clone Wars: Github project



&lt;h3&gt;
  &lt;a href="#2-pretty-view-of-table"&gt;
  &lt;/a&gt;
  2. Pretty view of table
&lt;/h3&gt;

&lt;p&gt;I've worked with markdown before, but it was the first time I was working with markdown table and realized table view sucks on Github project page. Especially, if it's a long table with multiple columns. I needed to make it look better (sticky header) which meant I needed to deploy this project somewhere else. I still needed it to be on Github so that others can collaborate easily. I decided to host it on my personal site &lt;a href="https://gourav.io/"&gt;https://gourav.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My site is built using NextJS, and I was already using markdown (mdx) to write blog posts, so it was just a matter of copy-pasting markdown file from my Github project to new page &lt;a href="https://gourav.io/clone-wars"&gt;https://gourav.io/clone-wars&lt;/a&gt;. And on top of it, I use Tailwind CSS with "typography" plugin which makes tables pleasing to read along with other text.&lt;/p&gt;

&lt;p&gt;I thought of automating it to the next level i.e. if any change happens to the Github project or someone's PR gets merged, update the same on my site &lt;a href="https://gourav.io/clone-wars"&gt;https://gourav.io/clone-wars&lt;/a&gt;. But, decided not to over-engineer it as changes weren't that frequent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-it-viral"&gt;
  &lt;/a&gt;
  Making it Viral
&lt;/h2&gt;

&lt;p&gt;I posted in 2-3 subreddits, &lt;a href="https://dev.to/gorvgoyl/i-made-a-list-of-70-open-source-clones-of-sites-like-airbnb-tiktok-netflix-spotify-etc-great-for-learning-purpose-3oel"&gt;dev.to&lt;/a&gt; and it took off 🚀&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s3Qtr4Gz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s3Qtr4Gz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/4.png"&gt;&lt;/a&gt;&lt;/p&gt;
reddit.com/r/reactjs



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r1RQ8hs4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r1RQ8hs4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/5.png"&gt;&lt;/a&gt;&lt;/p&gt;
reddit.com/r/webdev



&lt;h2&gt;
  &lt;a href="#after-effects"&gt;
  &lt;/a&gt;
  After effects
&lt;/h2&gt;

&lt;p&gt;Once the project gained some popularity many developers started raising PR to add their clone projects to the list. When I started it had around ~75 clones, but now it's more than 120+ and I still get new PR every now and then.&lt;/p&gt;

&lt;p&gt;I got to know from a friend that it was picked by &lt;em&gt;React Newsletter&lt;/em&gt;. Such a serendipitous moment.&lt;/p&gt;

&lt;p&gt;People were tweeting about &lt;em&gt;Clone Wars&lt;/em&gt;. &lt;a class="comment-mentioned-user" href="https://dev.to/nickbulljs"&gt;@nickbulljs&lt;/a&gt;
 tweeted a neat idea for devs who are looking to get hired.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tytnzGr6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1356185288037576705/FB8ygcTO_normal.jpg" alt="NICK BULL profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        NICK BULL
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/nickbulljs"&gt;@nickbulljs&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Recruiters are tired of weather apps and expense calculators&lt;br&gt;&lt;br&gt;Here's a better idea of what to build:&lt;br&gt;&lt;br&gt;1. Pick one site from 70+ open-source clones of popular sites like Netflix, Instagram, and others below&lt;br&gt;2. Research codebase&lt;br&gt;3. Build it yourself&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/YicJWOc4Iw"&gt;gourav.io/clone-wars&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:52 AM - 21 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1373573194846765061" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1373573194846765061" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1373573194846765061" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;blockquote&gt;
&lt;p&gt;I got 150+ new followers after this tweet :o&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And one person donated $5 from &lt;em&gt;BuyMeACoffee&lt;/em&gt; link I put on the project. Love you stranger.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rLQ6HU3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rLQ6HU3Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gourav.io/_next/static/media/pages/blog/my-simple-github-project-went-viral/6.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Within 30 days of launch, 40k+ people came to my personal site and viewed my project (80k+ views).&lt;/p&gt;

&lt;p&gt;You can see users insights at the end of the &lt;a href="https://gourav.io/blog/my-simple-github-project-went-viral"&gt;article on my blog&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Thanks for reading. Connect with me on &lt;a href="https://twitter.com/GorvGoyl"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/gorvgoyl/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Writing a CSS-in-JS library to rapidly create reusable designs</title>
      <author>Tom Lienard</author>
      <pubDate>Tue, 13 Apr 2021 16:02:16 +0000</pubDate>
      <link>https://dev.to/quiibz/writing-a-css-in-js-library-to-rapidly-create-reusable-designs-39ap</link>
      <guid>https://dev.to/quiibz/writing-a-css-in-js-library-to-rapidly-create-reusable-designs-39ap</guid>
      <description>&lt;p&gt;Hello, today I'm going to talk about my CSS-in-JS library called &lt;a href="https://github.com/QuiiBz/niftycss"&gt;NiftyCSS&lt;/a&gt;. I developed few very cool ideas and wanted to get some &lt;strong&gt;feedback and thoughts&lt;/strong&gt; from the community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-writing-css-in-js"&gt;
  &lt;/a&gt;
  Why writing CSS in JS?
&lt;/h2&gt;

&lt;p&gt;Good question. If you never tried any CSS-in-JS library, you might be wondering why and how you can write your CSS in your JavaScript (or TypeScript of course).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-class-name-conflicts"&gt;
  &lt;/a&gt;
  No class name conflicts
&lt;/h3&gt;

&lt;p&gt;Since the class name is generated automatically by the library, you don't have to think about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deadcode-elimination"&gt;
  &lt;/a&gt;
  Dead-code elimination
&lt;/h3&gt;

&lt;p&gt;If a class is not used, the CSS will not be injected (or server-side renderer for the libraries which support it) and you will never have extra CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-js-in-your-css"&gt;
  &lt;/a&gt;
  Use JS in your CSS
&lt;/h3&gt;

&lt;p&gt;It seems logical, but you can actually use ANY feature from your JavaScript code, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Calling functions to get code&lt;/li&gt;
&lt;li&gt;Reusing styles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And there are much more pros to use CSS-in-JS. Of course, there are also some &lt;a href="https://www.freecodecamp.org/news/you-dont-need-css-in-js-why-i-use-stylesheets/"&gt;draw-backs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#niftycss-cool-features"&gt;
  &lt;/a&gt;
  NiftyCSS cool features
&lt;/h2&gt;

&lt;p&gt;First of all, let me show you what an example code looks like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5HBQPUGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/GtDXQur.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5HBQPUGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/GtDXQur.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
As you can see, I wrote the CSS in a JavaScript file (actually it was TypeScript), and used some strange techniques. The &lt;code&gt;css&lt;/code&gt; function returns me a unique class name, so I can include it everywhere I want.&lt;br&gt;
At the right, you can see the generated and injected CSS. Let's go more in-depth about few features used:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#directives-for-automatic-code-generation"&gt;
  &lt;/a&gt;
  Directives for automatic code generation
&lt;/h3&gt;

&lt;p&gt;Writing media queries declaration is boring, isn't it? To solve this, I created something called &lt;strong&gt;Directives&lt;/strong&gt;. They are simple properties in the &lt;code&gt;css&lt;/code&gt; object, which can hold anything.&lt;br&gt;
For instance, NiftyCSS contains &lt;strong&gt;breakpoints&lt;/strong&gt; to replace the fastidious &lt;code&gt;@media (min-width...)&lt;/code&gt; declarations. Here, I used the &lt;code&gt;$sm&lt;/code&gt; directive, which tells that all the CSS rules inside this directive will be inside a pre-defined breakpoint. The best is that it's automatically transformed by Nifty! (and you can also define custom breakpoints and custom directives via plugins, but that will be for the next time)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#css-utilities"&gt;
  &lt;/a&gt;
  CSS Utilities
&lt;/h3&gt;

&lt;p&gt;You might notice that I used some functions and variables called &lt;code&gt;flexCenter&lt;/code&gt; and &lt;code&gt;paddingX&lt;/code&gt;. Since we are in a JavaScript file, we can use the spread operator. These functions and variables are coming from the &lt;code&gt;@niftycss/css&lt;/code&gt; package and return many CSS rules from one single property.&lt;br&gt;
For instance, the &lt;code&gt;flexCenter&lt;/code&gt; variable returns an object with these 3 rules:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;flex&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;justify-content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;align-items&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;center&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whenever I want to create an element with these properties, I only need to spread this variable, instead of writing everything myself!&lt;br&gt;
The &lt;code&gt;paddingX&lt;/code&gt; works the same but returns the &lt;code&gt;padding-left&lt;/code&gt; and &lt;code&gt;padding-right&lt;/code&gt; with the passed value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theming"&gt;
  &lt;/a&gt;
  Theming
&lt;/h3&gt;

&lt;p&gt;Did you notice that in the code above, I used a custom theme object? That allows implementing a white and dark theme in seconds, by just calling &lt;code&gt;setTheme&lt;/code&gt; later on. And the best is that you automatically get auto-completion from your theme keys!&lt;/p&gt;

&lt;p&gt;That's it for this first article about &lt;a href="https://github.com/QuiiBz/niftycss"&gt;NiftyCSS&lt;/a&gt;, thanks for reading it.&lt;br&gt;
Feel free to comment below your thoughts on these features, and to visit (maybe star if you enjoyed) the GitHub repo: &lt;a href="https://github.com/QuiiBz/niftycss"&gt;https://github.com/QuiiBz/niftycss&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Patterns in Usage Equal Happy Users</title>
      <author>Will Newmarch</author>
      <pubDate>Tue, 13 Apr 2021 16:00:30 +0000</pubDate>
      <link>https://dev.to/mrwillington/patterns-in-usage-equal-happy-users-3db1</link>
      <guid>https://dev.to/mrwillington/patterns-in-usage-equal-happy-users-3db1</guid>
      <description>&lt;p&gt;Throughout my career I've built various web-apps. These include short life projects (e.g. online brand campaigns) and long life projects (e.g. websites, various SAAS products etc.). Through it all I've noticed one thing...&lt;/p&gt;

&lt;p&gt;A happy user is a regular user, and a regular user often exhibits patterns in their usage of a product.&lt;/p&gt;

&lt;p&gt;If you can spot patterns in your users' usage then you can often spot your happy users! &lt;/p&gt;

&lt;p&gt;Now "why would I want to know which of my users is happy with my product?" I hear you ask!&lt;/p&gt;

&lt;p&gt;Well, imagine this, you have a happy user exhibiting a pattern, but suddenly the pattern stops, the user disappears and you're one user down on your user base.&lt;/p&gt;

&lt;p&gt;What if you could, spot the patterns, and when they stop? Then you could encourage the user to continue back into their pattern.&lt;/p&gt;

&lt;p&gt;But why sit trawling through usage data when you can get AI to spot the patterns for you!&lt;/p&gt;

&lt;p&gt;I've built a little service to help people do just that...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://binarystripes.io"&gt;https://binarystripes.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(...oh, and it's serverless!)&lt;/p&gt;

&lt;p&gt;Let's consider an example!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-company"&gt;
  &lt;/a&gt;
  The Company
&lt;/h2&gt;

&lt;p&gt;A coffee chain is interested in seeing whether there are patterns in their customers purchasing habits so that they can autonomously trigger incentives to encourage them to carry on as a regular customer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-customer"&gt;
  &lt;/a&gt;
  The Customer
&lt;/h2&gt;

&lt;p&gt;Their first customer being analysed is Charlie...&lt;/p&gt;

&lt;p&gt;We can represent Charlie’s daily coffee buying habits in binary, one being a day they bought a coffee, zero being a day they did not.&lt;/p&gt;

&lt;p&gt;Here's the last 4 weeks of data:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-analysis"&gt;
  &lt;/a&gt;
  The Analysis
&lt;/h2&gt;

&lt;p&gt;We want to discover if Charlie has a weekly habit of coffee buying...&lt;/p&gt;

&lt;p&gt;Charlie buys a coffee on a Monday and a Wednesday every week as we can see from the binary.&lt;/p&gt;

&lt;p&gt;We can discover this by asking the algorithm to calculate patterns with intervals of 7.&lt;/p&gt;

&lt;p&gt;We send Charlie’s data up to the API with the instructions to interval at 7...&lt;/p&gt;

&lt;p&gt;The resulting JSON is returned...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[{&lt;br&gt;
    start: 0, // The index the pattern starts&lt;br&gt;
    end: 21, // The index the pattern ends&lt;br&gt;
    pattern: [1, 0, 1, 0, 0, 0, 0], // The pattern&lt;br&gt;
    trailingPattern: [1, 0, 0, 0, 0, 0, 0], // Binary found when the pattern ceased&lt;br&gt;
    count: 3, // The length of the pattern&lt;br&gt;
}]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can clearly see that there is one pattern in Charlie’s weekly coffee buying!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-reaction"&gt;
  &lt;/a&gt;
  The Reaction
&lt;/h2&gt;

&lt;p&gt;But oh no! It looks like Charlie's coffee buying habit changed after 3 weeks.&lt;/p&gt;

&lt;p&gt;The algorithm has told us when it changed and we can see from the trailing pattern that Charlie did not return on Wednesday for their second coffee of the week.&lt;/p&gt;

&lt;p&gt;In Charlie's case we can now send them an email or show them a subtle advert saying "We missed you last Wednesday! Have 20% off your coffee next Wednesday!"&lt;/p&gt;

&lt;p&gt;Powerful stuff eh?&lt;/p&gt;

&lt;p&gt;So you don't run a coffee chain? Why not apply this technique to your web app, or mobile app. Instead of buying a coffee maybe they're logging in, or using a specific part of your service or website!&lt;/p&gt;

&lt;p&gt;The possibilities are endless!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>analytics</category>
      <category>serverless</category>
      <category>api</category>
    </item>
  </channel>
</rss>
