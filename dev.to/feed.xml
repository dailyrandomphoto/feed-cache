<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 Awesome Free Courses for Devs by Devs</title>
      <author>Simon Holdorf</author>
      <pubDate>Mon, 04 Jan 2021 07:22:50 +0000</pubDate>
      <link>https://dev.to/simonholdorf/10-awesome-free-courses-for-devs-by-devs-15ci</link>
      <guid>https://dev.to/simonholdorf/10-awesome-free-courses-for-devs-by-devs-15ci</guid>
      <description>&lt;p&gt;This article was originally published on &lt;a href="https://thesmartcoder.dev/awesome-free-courses-for-devs-by-devs/"&gt;The Smart Coder&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learning to code and becoming a web developer is one of the best decisions you can make these days. And luckily there are tons of material, often in the form of courses to help you with that. To help you discover awesome courses covering different programming languages and technologies, I have curated this list of 10 fantastic courses for beginners. &lt;/p&gt;

&lt;p&gt;I am not affiliated with any of the creators and don't receive any compensation or anything like that. This is just a list of 10 of my favorite courses that I want to share with you!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#javascript-30" class="anchor"&gt;
  &lt;/a&gt;
  JavaScript 30
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/37uWikpIo57ltrGtpDo4uo/093cdf4cc7b0de023bcdf67329abcaf7/javascript30_orj9f0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/37uWikpIo57ltrGtpDo4uo/093cdf4cc7b0de023bcdf67329abcaf7/javascript30_orj9f0.jpg" alt="JavaScript projects for beginners"&gt;&lt;/a&gt;&lt;br&gt;
Let's start with a real burner. The JavaScript 30 course by the amazing Wes Bos is just awesome. During this course that spans over 30 days, you are going to build 30 &lt;a href="https://thesmartcoder.dev/9-awesome-projects-you-can-build-with-vanilla-javascript/"&gt;vanilla javascript projects&lt;/a&gt;. That means no frameworks, libraries, compilers, or boilerplates. Just plain, vanilla JS. This is an awesome course to practice the basics of JavaScript, add cool things to your portfolio, and become better in JS! Almost 400,000 developers have taken this course and you should be next!&lt;/p&gt;

&lt;p&gt;If you need more inspiration for cool &lt;a href="https://thesmartcoder.dev/9-awesome-projects-you-can-build-with-vanilla-javascript/"&gt;javascript projects&lt;/a&gt; check out this post!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://javascript30.com/"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#beginners-guide-to-react-w-hooks" class="anchor"&gt;
  &lt;/a&gt;
  Beginner's Guide to React w/ Hooks
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9U3IhLAnSxM"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Many of you know Colt Steele for his fantastic Udemy courses and his boot camp (with job-guarantee!). And because Colt cares for the community he created a free introduction course to React. In almost 2 and a half hours Colt is going to show you the basics of React including &lt;a href="https://thesmartcoder.dev/awesome-react-hooks/"&gt;React Hooks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Functional Components? Check!&lt;br&gt;
JSX? Check!&lt;br&gt;
Props &amp;amp; State? Check, Check!&lt;br&gt;
Styling in React? Also, Check!&lt;/p&gt;

&lt;p&gt;There are of course longer courses that go much more into detail. But for beginners, this course is extremely valuable and a solid foundation to dig deeper into React!&lt;/p&gt;

&lt;p&gt;If you want to learn more about &lt;a href="https://thesmartcoder.dev/awesome-react-hooks/"&gt;React Hooks&lt;/a&gt; and want to become a &lt;a href="https://thesmartcoder.dev/10-tips-and-tricks-that-will-make-you-a-better-reactjs-dev/"&gt;better React Developer&lt;/a&gt;, check out these posts!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=9U3IhLAnSxM"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vue-js-3-tutorial-for-beginners" class="anchor"&gt;
  &lt;/a&gt;
  Vue JS 3 Tutorial for Beginners
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5LYrN_cAJoA"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Vue.js is almost as popular as React and even got more stars on GitHub! So learning Vue is always a good choice and this course for beginners by Shaun Pelling (The Net Ninja) might well be your kickstart into a successful developer career!  It teaches Vue.js 3, the brand new version that was released not long ago, and explains the basic concepts very well. It covers topics such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;Vue CLI&lt;/li&gt;
&lt;li&gt;Fetching Data&lt;/li&gt;
&lt;li&gt;Composition API (Brand new!)&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shaun also got a more in-depth course on Udemy (paid) if you want to dig deeper into Vue.js. Here are some more &lt;a href="https://thesmartcoder.dev/10-free-resources-to-kickoff-your-career-as-a-vue-developer/"&gt;free Vue resources&lt;/a&gt; for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=5LYrN_cAJoA&amp;amp;list=PL4cUxeGkcC9gQcYgjhBoeQH7wiAyZNrYa&amp;amp;index=1"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#python-for-beginners" class="anchor"&gt;
  &lt;/a&gt;
  Python for Beginners
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_uQrJ0TkZlc"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Python is one of the hottest programming languages to learn right now. Besides web development, Python is often used for machine learning and data science, professions with high demand, and even higher salaries!&lt;/p&gt;

&lt;p&gt;This course (5 hours long) by Mosh Hamedani who is well-known for his fantastic courses and what he does for the community is a perfect introduction to the Python language. Mosh is going to teach you things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Types&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Loops&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and much more. He also provides you with three cool Python projects to practice what you learned.&lt;/p&gt;

&lt;p&gt;So if you want a career in ML or Data Science, Python is the right choice and this course can be where it all starts!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_uQrJ0TkZlc"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-flutter-email-course" class="anchor"&gt;
  &lt;/a&gt;
  The Flutter Email Course
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/6Sbh3fl675En1O32n87ntS/62ed844936f8531ab1ed59c5aa5e6c20/codewithandrea_js4dgk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/6Sbh3fl675En1O32n87ntS/62ed844936f8531ab1ed59c5aa5e6c20/codewithandrea_js4dgk.jpg" alt="Flutter Course for Beginners"&gt;&lt;/a&gt;&lt;br&gt;
Flutter is Google's open-source UI Development Kit for building awesome, cross-platform applications in the Dart programming language. According to a recent Stackoverflow survey, Flutter is the #4 most-loved framework by developers.&lt;/p&gt;

&lt;p&gt;But how can you get started with Flutter? Let me introduce you to Andrea Bizzotto, an absolute expert when it comes to Flutter &amp;amp; Dart. And luckily for us, Andrea recently created a free Flutter Course in the form of a newsletter to help you become versatile Flutter developers.&lt;/p&gt;

&lt;p&gt;During 15 days you will get 15 emails, one a day covering different topics. Each email is containing a brief intro, links to the most important resources, and a small challenge to test your knowledge. &lt;/p&gt;

&lt;p&gt;The course covers topics like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flutter state management&lt;/li&gt;
&lt;li&gt;Data Persistence&lt;/li&gt;
&lt;li&gt;Animations&lt;/li&gt;
&lt;li&gt;Platform Channels,&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;CI/CD&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's a great way to get started with Flutter and you can enhance your knowledge afterward on your own or by checking out more of Andrea's great courses!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codewithandrea.com/newsletter/"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nodejs-course-for-beginners" class="anchor"&gt;
  &lt;/a&gt;
  Node.js Course for Beginners
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RLtyhwFtXQA"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Node.js is slowly becoming the number one choice for many developers when building APIs and writing server-side code. Many corporations integrate Node in their tech stacks because it's based on JavaScript and uses Google's V8 engine. It's also a good choice if you want to become a full-stack developer because you can use a frontend framework like React and code everything in JS.&lt;/p&gt;

&lt;p&gt;In this introductory course, NoobCoder will provide you with a solid overview of the features of Node.js. He covers topics such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File system&lt;/li&gt;
&lt;li&gt;Streams &amp;amp; pipes&lt;/li&gt;
&lt;li&gt;Creating HTTP servers&lt;/li&gt;
&lt;li&gt;Express framework&lt;/li&gt;
&lt;li&gt;User Input Validation&lt;/li&gt;
&lt;li&gt;Routing&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all, it's a good start into the world of Node.js. Even though the course is from 2018, most of the things are still valid today. And if you are serious about working with Node.js, you need additional resources and practice anyway.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=RLtyhwFtXQA"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#typescript-course-for-beginners" class="anchor"&gt;
  &lt;/a&gt;
  TypeScript Course for Beginners
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BwuLxPH8IDs"&gt;
&lt;/iframe&gt;
&lt;br&gt;
TypeScript is one of the most loved programming languages for many developers according to a recent Stackoverflow survey. It combines the beauty of JavaScript with strong typing and modern compiler features. Angular and Nest.js make heavy use of TypeScript and helped it gaining popularity. &lt;br&gt;
If you haven't tried out TypeScript yet, I recommend you to do so. I know many developers that once they have touched TS never want to go back to writing pure JS.&lt;br&gt;
And if you want to watch a course to learn the basics of TypeScript I got something for you. This course by Maximilian Schwarzmüller (famous for his brilliant Udemy courses) is exactly what you need.&lt;br&gt;
The quality is top-notch (Max-Standard) and the course covers topics like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Introduction to TS&lt;/li&gt;
&lt;li&gt;Types&lt;/li&gt;
&lt;li&gt;Tuples &amp;amp; Enums&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Compilation&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=BwuLxPH8IDs"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#html-crash-course-for-absolute-beginners" class="anchor"&gt;
  &lt;/a&gt;
  HTML Crash Course for Absolute Beginners
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UB1O30fR-EE"&gt;
&lt;/iframe&gt;
&lt;br&gt;
When you are new to web development, people will often advise you to start with the basics. And by that, they usually mean HTML, CSS, and JavaScript. That often makes sense because when you are building, let's say a house, you won't start with the interior without having at least some walls first. Think of HTML &amp;amp; CSS as the basic structure for any website. &lt;/p&gt;

&lt;p&gt;So if you want to get started with web development and know absolutely nothing about HTML, this great course by Brad Traversy (a.k.a. Traversy Media) is exactly what you need. It's quite short with about 1-hour length but will cover the most basics things about HTML like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing a Text Editor&lt;/li&gt;
&lt;li&gt;HTML Page Structure&lt;/li&gt;
&lt;li&gt;Syntax&lt;/li&gt;
&lt;li&gt;Headings, Paragraphs&lt;/li&gt;
&lt;li&gt;Lists, Tables, Forms, Buttons&lt;/li&gt;
&lt;li&gt;HTML5 Semantic Tags&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=UB1O30fR-EE"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#aws-certified-cloud-practitioner-training" class="anchor"&gt;
  &lt;/a&gt;
  AWS Certified Cloud Practitioner Training
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3hLmDS179YE"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Because almost everything runs in the cloud today, the demand for cloud developers, administrators, and people with similar skills is continuously rising. And Amazon Web Services is a major, if not the biggest player in this game. If you have acquired one or more certifications for AWS services your chances for well-payed jobs are even higher. &lt;/p&gt;

&lt;p&gt;And because of this, Andrew Brown, AWS Community Hero, and Cloud Expert created this course (and many more!) for you to prepare for the AWS Certified Cloud Practitioner exam.&lt;/p&gt;

&lt;p&gt;The free course covers topics like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic Cloud Concepts&lt;/li&gt;
&lt;li&gt;AWS Infrastructure&lt;/li&gt;
&lt;li&gt;Getting started with AWS&lt;/li&gt;
&lt;li&gt;EC2, ELB, S3, CloudFront&lt;/li&gt;
&lt;li&gt;Pricing Models &amp;amp; Pricing&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This certificate is often seen as the entry-point for a career in cloud services and might be one of the biggest opportunities for you!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=3hLmDS179YE"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#java-tutorial-for-complete-beginners" class="anchor"&gt;
  &lt;/a&gt;
  Java Tutorial for Complete Beginners
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/5zDWEX1lFrAJflTHaF68jE/25f86b9fa0e7aa62ef5afbf5dc3b9224/java_course_lbqvmz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/5zDWEX1lFrAJflTHaF68jE/25f86b9fa0e7aa62ef5afbf5dc3b9224/java_course_lbqvmz.jpg" alt="Java course for beginners"&gt;&lt;/a&gt;&lt;br&gt;
When you are on Twitter or other social media covering programming topics it always seems that only JavaScript and maybe Python exist in this world. This, of course, is not true. Java is still a fantastic programming language that continuously becomes better and receives new features. It's strongly-typed and run by billions of devices, for example, Android phones or IoT devices. Major corporations have Java as part of their technology stack (a lot of AWS is written in Java!) and the demand and pay for qualified developers is still very high, just look at some job openings.&lt;/p&gt;

&lt;p&gt;This course by John Purcell aims at anyone that has a desire to learn programming without any prior knowledge. It's a whopping 16-hours full of Java knowledge that covers topics such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Core Java&lt;/li&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Loops&lt;/li&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Methods&lt;/li&gt;
&lt;li&gt;Constructors&lt;/li&gt;
&lt;li&gt;Exceptions&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;Java Collections Framework&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to learn more about the &lt;a href="https://thesmartcoder.dev/java-vs-javascript/"&gt;difference between java and javascript&lt;/a&gt; check out this post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/java-tutorial/"&gt;Link to course&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is just a small sample of tons of fantastic courses available. But in the mass of content arises a problem: Where do you find &lt;a href="https://thesmartcoder.dev/courses/"&gt;the best courses for developers&lt;/a&gt; by the best developers? &lt;/p&gt;

&lt;p&gt;There are many platforms like Youtube or Udemy where you can find courses. But some great courses are shared by their creators via social media or on their own, personal home pages solely. This makes it easy to miss out on their wonderful work!&lt;/p&gt;

&lt;p&gt;I've therefore created a new feature for my site, &lt;a href="https://thesmartcoder.dev/"&gt;The Smart Coder&lt;/a&gt; called &lt;a href="https://thesmartcoder.dev/courses/"&gt;DevCourses&lt;/a&gt;. It's a place where developers can discover the best courses for all kinds of topics like JavaScript, React, Vue, Java, AWS, and more! You can find all the courses listed above there plus more. &lt;/p&gt;

&lt;p&gt;DevCourses is built for the community so any course creator can add their course to the site for others to discover it via a &lt;a href="https://thesmartcoder.dev/courses/create-new-course/"&gt;dedicated form&lt;/a&gt;. This way, the list of courses will steadily grow becoming the most comprehensive and high-quality repository for developer courses.&lt;/p&gt;

&lt;p&gt;So if you are the creator of a course for developers, feel free to submit it to the site. And if you know about a good course that should be on the site, contact the creator to submit it.&lt;/p&gt;

&lt;p&gt;This is a feature for the community that lives from the participation of the community.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>vue</category>
    </item>
    <item>
      <title>Born Blind: Meet Taylor the Web Developer</title>
      <author>RealToughCandy.io</author>
      <pubDate>Mon, 04 Jan 2021 06:18:13 +0000</pubDate>
      <link>https://dev.to/realtoughcandy/born-blind-meet-taylor-the-web-developer-1pjd</link>
      <guid>https://dev.to/realtoughcandy/born-blind-meet-taylor-the-web-developer-1pjd</guid>
      <description>&lt;p&gt;Welcome to the second installment of our Web Dev Interview Series.&lt;/p&gt;

&lt;p&gt;In this series, we interview developers on what got them started, where they are now, what they'd do differently, and more.&lt;/p&gt;

&lt;p&gt;We're excited to introduce you to Taylor!&lt;/p&gt;

&lt;p&gt;Today she talks about learning web development, web accessibility and starting her own business...All while facing some unique challenges in the midst of a pandemic.&lt;/p&gt;

&lt;p&gt;Note: Answers have been edited for clarity and space constraints.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-tell-us-about-yourself" class="anchor"&gt;
  &lt;/a&gt;
  1. Tell us about yourself.
&lt;/h2&gt;

&lt;p&gt;Hello, My name is Taylor Arndt. I was born blind since birth with an eye condition called Septo-optic dysplasia (optic nerve hypoplasia) where my optic nerve didn’t fully develop. As a result, I am almost completely blind with the exception of lights, colors, and shadows.&lt;/p&gt;

&lt;p&gt;I am from the state of Michigan. I grew up in a small town, so I always had some accessibility battles going on. I have had to teach myself many skills like how to use a screen reader which is a tool blind users use which reads the content of the screen aloud to them. Before teaching myself web development, I was your average college student studying computer science.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-what-made-you-get-into-web-development" class="anchor"&gt;
  &lt;/a&gt;
  2. What made you get into web development?
&lt;/h2&gt;

&lt;p&gt;We all know that 2020 has been a crazy year for all of us. I lost my job at the college helping students and departments with their accessibility issues due to the lack of funding that the pandemic caused. In addition, I faced more inaccessibility problems on the academic side of the computer science department. They basically told me, “We really can’t help you because of COVID” even though they have to because of regulations.&lt;/p&gt;

&lt;p&gt;In addition, my math was lacking because I never had the proper math education because growing up in a small town math teachers didn’t want to teach me because they didn’t want to adapt math so a blind person could learn it. So the perfect storm happened where I couldn’t advance until I had the math, even though I had basically taught myself lots of programming.&lt;/p&gt;

&lt;p&gt;I then needed to support myself because of the loss of my position so I then started my own company, Taylor’s Accessibility Services, LLC, where I help companies with web accessibility remediation and other services. I have had many clients tell me that they need web developers so I started to learn and build my skills. I took one programming class at my college, so I knew the fundamentals at least. I am going to college at my local community college just to get some practical experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-what-resources-have-you-been-using-to-study" class="anchor"&gt;
  &lt;/a&gt;
  3. What resources have you been using to study?
&lt;/h2&gt;

&lt;p&gt;I have used a huge assortment of resources for studying. Udemy, freeCodeCamp, YouTube, tutorial websites, and whatever I can find. The hardest challenge is finding resources which are accessible with screen readers.&lt;/p&gt;

&lt;p&gt;In addition, most videos are not accessible because the instructor has to verbalize so someone who is blind can follow. If you use terms like over here, over there, and this and that, blind users can’t see what you are talking about thus making the tutorial inaccessible. There are some good instructors that verbalize like Traversy Media.&lt;/p&gt;

&lt;p&gt;You don’t have to say everything but you should explain what you are typing. Also, having the source code files help so we understand what the final product looks like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-what-are-your-career-goals" class="anchor"&gt;
  &lt;/a&gt;
  4. What are your career goals?
&lt;/h2&gt;

&lt;p&gt;My goal is to become a web developer to assist companies. Obviously helping make websites but in addition to make sure the websites are accessible from the start so people are not having to get sued for inaccessibility they could have prevented.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-what-would-you-like-to-see-improved-in-terms-of-web-accessibility" class="anchor"&gt;
  &lt;/a&gt;
  5. What would you like to see improved in terms of web accessibility?
&lt;/h2&gt;

&lt;p&gt;I would like to see more training for developers on the topic. Developers know they have to make things accessible but they don’t know how. In addition, many wait until the last minute to get things tested. You should start the accessibility testing process early to avoid huge costs at the end to fix inaccessibility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-do-you-have-any-advice-for-those-with-visual-impairments-who-are-thinking-about-pursuing-web-development" class="anchor"&gt;
  &lt;/a&gt;
  6. Do you have any advice for those with visual impairments, who are thinking about pursuing web development?
&lt;/h2&gt;

&lt;p&gt;Yes, I would say that it is a good field. There are many people who work in web development who are blind. I would try to find accessible resources so you can learn. I mentioned some earlier like freeCodeCamp, certain Udemy courses, YouTube. I would also find a study group so you can network with other developers.&lt;/p&gt;

&lt;p&gt;If you would like to read more real-life stories about web developers, check out the &lt;a href="https://realtoughcandy.io/blog"&gt;RealToughCandy.io blog&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>career</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Building a React modal component using a custom Hook</title>
      <author>Michael Burrows</author>
      <pubDate>Mon, 04 Jan 2021 02:21:56 +0000</pubDate>
      <link>https://dev.to/michaelburrows/building-a-react-modal-component-using-a-custom-hook-439g</link>
      <guid>https://dev.to/michaelburrows/building-a-react-modal-component-using-a-custom-hook-439g</guid>
      <description>&lt;p&gt;In this tutorial we’ll be building a custom React modal component that can be used to display a variety of web elements including: forms, alert messages, or images.&lt;/p&gt;

&lt;p&gt;Let’s get started by using Create React App to setup our application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app react-modal
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;/src&lt;/code&gt; folder create a new file called &lt;code&gt;useModal.js&lt;/code&gt; which will contain the &lt;code&gt;useModal()&lt;/code&gt; custom Hook. Custom Hooks should always start with &lt;code&gt;use&lt;/code&gt; so that you can quickly tell that it’s a re-usable Hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useModal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setVisible&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setVisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useModal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Also in the &lt;code&gt;/src&lt;/code&gt; folder create a new file called &lt;code&gt;Modal.js&lt;/code&gt; for the modal component itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Modal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createPortal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal-pop&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;modal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;true&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Et&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;saepe&lt;/span&gt; &lt;span class="nx"&gt;velit&lt;/span&gt; &lt;span class="nx"&gt;tenetur&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;consequatur&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nihil&lt;/span&gt; &lt;span class="nx"&gt;doloribus&lt;/span&gt; &lt;span class="nx"&gt;nulla&lt;/span&gt; &lt;span class="nx"&gt;nulla&lt;/span&gt; &lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Soluta&lt;/span&gt; &lt;span class="nx"&gt;illo&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;asperiores&lt;/span&gt; &lt;span class="nx"&gt;numquam&lt;/span&gt; &lt;span class="nx"&gt;earum&lt;/span&gt; &lt;span class="nx"&gt;nesciunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vero&lt;/span&gt; &lt;span class="nx"&gt;odio&lt;/span&gt; &lt;span class="nx"&gt;voluptatem&lt;/span&gt; &lt;span class="nx"&gt;sunt&lt;/span&gt; &lt;span class="nx"&gt;sunt&lt;/span&gt; &lt;span class="nx"&gt;laboriosam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Close&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt; &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;modal-overlay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;   &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;, document.bod&lt;/span&gt;&lt;span class="err"&gt;y
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If &lt;code&gt;visible&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; we use a &lt;a href="https://reactjs.org/docs/portals.html"&gt;Portal&lt;/a&gt; to render the modal into a DOM node that exists outside the DOM hierarchy of the parent component, in this instance the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. This is because modals need to be the last DOM element in a page to meet accessibility requirements.&lt;/p&gt;

&lt;p&gt;We can now pull it all together by modifying the &lt;code&gt;App.js&lt;/code&gt; file as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Modal&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Modal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useModal&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./useModal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useModal&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Show&lt;/span&gt; &lt;span class="nx"&gt;Modal&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Modal&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Finally add some basic CSS to &lt;code&gt;App.css&lt;/code&gt; so we can test the functionality:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.modal-pop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;420px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.modal-overlay&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;99&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can now test the modal by running the &lt;code&gt;npm start&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Whilst this example is quite simple it demonstrates how to build a functioning modal component that you can customise for use in future projects. Thanks for reading and be sure to check out my other tutorials on building React components.&lt;/p&gt;

</description>
      <category>react</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Learning NodeJS Part 1: Understanding the Essentials</title>
      <author>Shemona Singh</author>
      <pubDate>Sun, 03 Jan 2021 21:33:09 +0000</pubDate>
      <link>https://dev.to/singhshemona/learning-nodejs-part-1-understanding-the-essentials-4h4o</link>
      <guid>https://dev.to/singhshemona/learning-nodejs-part-1-understanding-the-essentials-4h4o</guid>
      <description>&lt;p&gt;&lt;em&gt;In late fall of 2020, I went on a mission to better understand Node. I wanted to improve the way I use it, how I might be able to use more of its features, and moreover grow my front end knowledge to full stack. This series includes the notes I've compiled from my learnings over at &lt;a href="https://www.theodinproject.com/courses/nodejs"&gt;The Odin Project&lt;/a&gt;. The lessons also include general web concepts necessary to better work with Node.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;In order to pass the potential bumps when learning Node, it's important that some of your web fundamentals are in order. For this section and the next, I'll be revisiting key topics and tying it back to Node. Let's begin!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understanding-what-node-really-is" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Understanding what Node really is&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Node is an open-source, cross-platform runtime environment that allows developers to create all kinds of server-side tools and applications in JavaScript.&lt;/p&gt;

&lt;p&gt;But that's just the textbook definition - let's break down what those words mean.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-so-groundbreaking-about-node" class="anchor"&gt;
  &lt;/a&gt;
  What's so groundbreaking about Node?
&lt;/h3&gt;

&lt;p&gt;JavaScript was originally designed to run in the browser. This means it was impossible to run it in anything that was not a website. &lt;strong&gt;Node brings JS out of the browser-world, so you can accomplish with it most anything other server-side languages can do. This is what is so groundbreaking about Node.&lt;/strong&gt; It gives JavaScript backend capabilities. &lt;/p&gt;

&lt;p&gt;To make this happen Node must have added functionality that original JS did not have, right? Indeed, Node enables JS to have abilities like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create http connections&lt;/li&gt;
&lt;li&gt;Listen to network requests &lt;/li&gt;
&lt;li&gt;Generate dynamic page content&lt;/li&gt;
&lt;li&gt;Create/open/read/write/delete/close files on a server&lt;/li&gt;
&lt;li&gt;Collect form data&lt;/li&gt;
&lt;li&gt;Add/delete/modify data in a database&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-term-v8-comes-up-alongside-node-what-is-v8" class="anchor"&gt;
  &lt;/a&gt;
  The term 'V8' comes up alongside Node. What is V8?
&lt;/h3&gt;

&lt;p&gt;JS runtime environments need engines to run. As we discussed, Node is a JS runtime environment so it needs an engine as well. Node's engine is built on Chrome's open source JS engine, V8. V8 is written in C++, and allows you to write your own C++ via hooks that you can make available to JavaScript. &lt;/p&gt;

&lt;p&gt;There are other runtime engines like &lt;a href="https://wiki.mozilla.org/JavaScript:New_to_SpiderMonkey"&gt;SpiderMonkey&lt;/a&gt; by Mozilla and &lt;a href="https://en.wikipedia.org/wiki/Chakra_(JScript_engine)"&gt;Chakra&lt;/a&gt; by Microsoft.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-would-hello-world-look-like-in-node" class="anchor"&gt;
  &lt;/a&gt;
  What would “hello world” look like in Node?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a file (name it anything) but be sure it has the extension &lt;code&gt;.js&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Put the following in it: &lt;code&gt;console.log("Hello World!");&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Open your node terminal, &lt;code&gt;cd&lt;/code&gt; into the directory to the folder where the file is saved and run &lt;code&gt;node [name-of-file].js&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Look familiar? Since Node is a runtime environment for JS, you can power it with the JS syntax you know and love.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#key-concepts-in-understanding-node" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Key Concepts in Understanding Node&lt;/strong&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#node-is-asynchronous-and-eventdriven-lets-break-down-these-terms" class="anchor"&gt;
  &lt;/a&gt;
  Node is &lt;strong&gt;asynchronous&lt;/strong&gt; and &lt;strong&gt;event-driven&lt;/strong&gt;, let's break down these terms:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Event-driven:&lt;/strong&gt; every action on a computer is an event. It could be a network request, someone trying to access a port on a server, clicking submit on a button - the possibilities are endless. Events trigger some response to occur, which is what Node helps us to handle. &lt;/p&gt;

&lt;p&gt;Synchronous and asynchronous describes two different ways code can be run.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Synchronous:&lt;/strong&gt; means each operation must complete before the next operation can start.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Asynchronous:&lt;/strong&gt; means instead of writing code in prediction of when each line will run, you write it as a collection of smaller functions that are called in response to an event.&lt;/p&gt;

&lt;p&gt;For example, let’s say you are writing a program and you need it to do the following: It should read some text from a file, print that text to the console, query a database for a list of users and filter the users based on their age. &lt;/p&gt;

&lt;p&gt;This is what those steps would look like if they were to be executed &lt;strong&gt;synchronously&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Read File&lt;/li&gt;
&lt;li&gt;Print File Contents&lt;/li&gt;
&lt;li&gt;Query Database&lt;/li&gt;
&lt;li&gt;Filter Database Query results&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To make these steps execute &lt;strong&gt;asynchronously&lt;/strong&gt; we would instead break up the tasks:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Read File &lt;em&gt;AND THEN&lt;/em&gt; Print File Contents&lt;/li&gt;
&lt;li&gt;Query Database &lt;em&gt;AND THEN&lt;/em&gt; Filter Database Query Results&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this way, Node is not waiting around. While the file is being read, it can query the database. Then depending on which one is complete first (an event!) it will move on to the next task at hand.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This process is almost exactly like the way that you would use &lt;code&gt;addEventListener&lt;/code&gt; in front-end JavaScript to wait for a user action such as a mouse-click or keyboard press. The main difference is that the events are going to be things such as network requests and database queries. This functionality is facilitated through the use of &lt;strong&gt;callbacks&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-are-callbacks" class="anchor"&gt;
  &lt;/a&gt;
  What are callbacks?
&lt;/h3&gt;

&lt;p&gt;Callbacks are functions that are passed into another function as an argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// this has no callback&lt;/span&gt;
&lt;span class="c1"&gt;// it prints "First" then "Second"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;First&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Second&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// this has a callback &lt;/span&gt;
&lt;span class="c1"&gt;// it prints "Second" then "First"&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;First&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Second&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you're not careful, this can result in &lt;a href="http://callbackhell.com/"&gt;callback hell&lt;/a&gt;, which you can reduce with practices like using the &lt;a href="https://www.npmjs.com/package/async"&gt;async&lt;/a&gt; module or &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promises&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-errorfirst-callbacks" class="anchor"&gt;
  &lt;/a&gt;
  What about error-first callbacks?
&lt;/h3&gt;

&lt;p&gt;A common convention for Node and Express is to use &lt;a href="http://fredkschott.com/post/2014/03/understanding-error-first-callbacks-in-node-js/"&gt;error-first callbacks&lt;/a&gt;. In this convention, the first value in the callback functions is an error value, while subsequent arguments contain success data. This ensures if you get really in the weeds with callbacks, you can be notified when a request is being held up due to a process never going through.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explain-the-event-loop" class="anchor"&gt;
  &lt;/a&gt;
  Explain the event loop.
&lt;/h3&gt;

&lt;p&gt;This leads me to the last large concept for this section - the event loop. You can &lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ&amp;amp;feature=youtu.be&amp;amp;t=852"&gt;watch this excellent video explanation&lt;/a&gt; on the event loop. But it's on the lengthier side, so this section will be summarizing its highlights.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The event loop is the secret behind JavaScript's asynchronous programming. JS executes all operations on a single thread, but using a few smart data structures, it gives us the illusion of multi-threading.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B8fG4xZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/czf5ypvh4ef3rvir9c8w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8fG4xZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/czf5ypvh4ef3rvir9c8w.png" alt="Screenshot from Event loop Video"&gt;&lt;/a&gt;&lt;br&gt;
The job of the event loop is to watch for the stack and the task queue. If the stack is empty and the task queue is not, it will push the first item from the queue to the stack, effectively running it. The 'webapis' section is what we get from whatever our environment provides us with, in this case it's the browser providing us with the ability to keep track of the &lt;code&gt;setTimeout&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ajax requests would be treated the same way - put into the webapi section, because the code for a request does not live in the JS runtime, it lives in the browser webapi.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;We have one more section after this that lays down fundamentals. Onto part 2!&lt;/p&gt;

</description>
      <category>node</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Share your slack messages in the form of QR Code.</title>
      <author>Jasmin Virdi</author>
      <pubDate>Sun, 03 Jan 2021 20:37:26 +0000</pubDate>
      <link>https://dev.to/jasmin/share-your-slack-messages-in-form-of-qr-code-3163</link>
      <guid>https://dev.to/jasmin/share-your-slack-messages-in-form-of-qr-code-3163</guid>
      <description>&lt;p&gt;Happy New Year Everyone!😇&lt;/p&gt;

&lt;p&gt;Last year I decided to build a side project which could help people using slack to share passwords and other important information easy and securely. I have worked on a few side projects last year and this was my last side project of the year 2020!&lt;/p&gt;

&lt;p&gt;DEV hackathons always gives developers an amazing opportunity to showcase their work and innovate around new tech. I am always excited and look forward to participate in DEV hackathons as it give me immense motivation to innovate and try out cool new tech.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background" class="anchor"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;So my idea behind the app was very simple, while using slack we sometimes tend to share messages which might contain some sensitive information. This could be anything and sharing such information is always a bit risky specially when your using organisational resources. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution" class="anchor"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;In order to be more secure I had an idea in which users can share such messages which will be visible to other user in the form of &lt;strong&gt;QR code&lt;/strong&gt;. This QR code will contain the text message which the other user has sent and &lt;strong&gt;will expire after 30 secs&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#category-submission" class="anchor"&gt;
  &lt;/a&gt;
  Category Submission:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Built for Business/ Random Roulette&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#permissive-license" class="anchor"&gt;
  &lt;/a&gt;
  Permissive License
&lt;/h2&gt;

&lt;p&gt;MIT&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-about-the-app" class="anchor"&gt;
  &lt;/a&gt;
  More about the App.
&lt;/h2&gt;

&lt;p&gt;I have created a slack app which will allow users to enter the message in the dialog box and then select the username or channel/ group name where he wants to send the message.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps" class="anchor"&gt;
  &lt;/a&gt;
  Steps
&lt;/h3&gt;

&lt;p&gt;The app is very easy to use&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;/secure-share&lt;/code&gt; in your message editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1h1BYPsT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9zmo1rn146ffzuk948w0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1h1BYPsT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/9zmo1rn146ffzuk948w0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After that a dialog box will open which will ask you to enter the message.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x3gCY_wU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/c79crjs7leppe81yjp7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x3gCY_wU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/c79crjs7leppe81yjp7q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After entering the message select the channel/username to send the message.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_v77Gnbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pk2gcqhkjvcduf25ywc7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_v77Gnbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pk2gcqhkjvcduf25ywc7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once we select the sender's name the QR code will be generated and posted to recipient chat.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LF8c5_BI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ycqmy3flit9d6dzp8kmu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LF8c5_BI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ycqmy3flit9d6dzp8kmu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After 30 secs the message will be deleted from the recipient chat leaving a message.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cxdYpjkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qqhxgvl8d8d8e5vso93i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxdYpjkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qqhxgvl8d8d8e5vso93i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This app is currently deployed over digital ocean servers from where I tested the app locally. A bit amount of work is still pending until the final release and pushing it to Slack app directory.😅&lt;/p&gt;

&lt;p&gt;I am really enjoying working on this project as it helped me to learn a whole bunch of new things. I also enjoyed exploring the Digital Ocean platform specially the integrations and deployments part was pretty smooth.😇&lt;/p&gt;

&lt;p&gt;In the next post I will be sharing my journey and the paths I will be following to release my app to production.😀&lt;/p&gt;

</description>
      <category>dohackathon</category>
      <category>javascript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What's holding you back from trying Eleventy?</title>
      <author>Stephanie Eckles</author>
      <pubDate>Sun, 03 Jan 2021 18:22:48 +0000</pubDate>
      <link>https://dev.to/5t3ph/what-s-holding-you-back-from-trying-eleventy-38l</link>
      <guid>https://dev.to/5t3ph/what-s-holding-you-back-from-trying-eleventy-38l</guid>
      <description>&lt;p&gt;&lt;a href="https://11ty.dev"&gt;Eleventy&lt;/a&gt; is a static site generator that's getting a lot more attention around the web lately. If you've tried it or considered trying it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Anything you're unsure about or wondering if it can do? &lt;/li&gt;
&lt;li&gt;Did you start an Eleventy project and get stuck on something?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Fine print&lt;/em&gt;: I'm the author of &lt;a href="https://11ty.rocks"&gt;11ty.Rocks&lt;/a&gt; so your responses may be used to help inform the creation of future resources 😉 I'd love to try to answer some of your questions in the comments, too!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Supabase: ten months of building. </title>
      <author>Supabase</author>
      <pubDate>Sun, 03 Jan 2021 18:22:39 +0000</pubDate>
      <link>https://dev.to/supabase/supabase-ten-months-of-building-5896</link>
      <guid>https://dev.to/supabase/supabase-ten-months-of-building-5896</guid>
      <description>&lt;p&gt;Supabase is an open source Firebase alternative. We're building the features of Firebase using enterprise-grade open source tools.&lt;/p&gt;




&lt;p&gt;After 10 hectic months of building, Supabase is now in Beta. This is also available as a &lt;a href="https://supabase.io/blog/2021/01/02/supabase-beta-december-2020"&gt;blog post&lt;/a&gt; and a &lt;a href="https://youtu.be/ofSm4BJkZ1g"&gt;video demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supabase-is-now-in-beta" class="anchor"&gt;
  &lt;/a&gt;
  Supabase is now in Beta
&lt;/h3&gt;

&lt;p&gt;We spent months working on Performance, Security, and Reliability. Read more on our &lt;a href="https://supabase.io/beta"&gt;Beta Page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEc_O6HF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/103484765-464e5b80-4e2c-11eb-89c6-8e88fe8105e1.png" class="article-body-image-wrapper"&gt;&lt;img width="1000" alt="This image shows our Beta Page" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEc_O6HF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/103484765-464e5b80-4e2c-11eb-89c6-8e88fe8105e1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-your-docs-inline" class="anchor"&gt;
  &lt;/a&gt;
  Improve your docs inline
&lt;/h3&gt;

&lt;p&gt;Add comments and descriptions to your Tables directly from our auto-generated docs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g3VDuYLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/10214025/103484975-df31a680-4e2d-11eb-8569-f8248a02b880.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g3VDuYLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/10214025/103484975-df31a680-4e2d-11eb-8569-f8248a02b880.gif" alt="update-docs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-view-now-has-realtime-changes" class="anchor"&gt;
  &lt;/a&gt;
  Table View now has realtime changes
&lt;/h3&gt;

&lt;p&gt;Any updates that happen to your database are reflected in the Table View immediately.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YQqGemdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/10214025/103484944-8eba4900-4e2d-11eb-867b-c56cfcd207ef.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YQqGemdD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/10214025/103484944-8eba4900-4e2d-11eb-867b-c56cfcd207ef.gif" alt="realtime-updates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-pagination" class="anchor"&gt;
  &lt;/a&gt;
  Table Pagination
&lt;/h3&gt;

&lt;p&gt;Our table view now has pagination - better for working with large data sets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kr9PYAfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/10214025/103484937-7d713c80-4e2d-11eb-9ddc-a0c2e871b864.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kr9PYAfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/10214025/103484937-7d713c80-4e2d-11eb-9ddc-a0c2e871b864.gif" alt="table-pagination"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supabase-raised-a-seed-round" class="anchor"&gt;
  &lt;/a&gt;
  Supabase raised a Seed Round
&lt;/h3&gt;

&lt;p&gt;We raised $6M from Y Combinator, Mozilla, and Coatue. You can read more on &lt;a href="https://techcrunch.com/2020/12/15/supabase-raises-6m-for-its-open-source-firebase-alternative"&gt;TechCrunch&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kaizen" class="anchor"&gt;
  &lt;/a&gt;
  Kaizen
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Supabase is now 26% faster in regions which support Graviton (1460 reqs/s up from 1167 reqs/s)&lt;/li&gt;
&lt;li&gt;We launched a new region in Sao Paulo.&lt;/li&gt;
&lt;li&gt;Postgres Array Support. You can now edit Native Postgres array items in the grid editor or the side panel.&lt;/li&gt;
&lt;li&gt;We added better support for your custom Database Types.&lt;/li&gt;
&lt;li&gt;Fixed some buggy keyboard commands. We're continuously improving key commands in the Table editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#community" class="anchor"&gt;
  &lt;/a&gt;
  Community
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We were featured on the GitHub release radar. &lt;a href="https://github.blog/2020-12-07-release-radar-dec-2020/"&gt;Link&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/kiwicopple"&gt;@kiwicopple&lt;/a&gt; appeared on  &lt;a href="https://2020.opencoresummit.com/"&gt;Open Core Summit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/aaronksaunders"&gt;@aaronksaunders&lt;/a&gt; created a video series on Supabase + Vue. &lt;a href="https://twitter.com/aaronksaunders/status/1339981480202743811"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/CodeByCorey"&gt;@CodeByCorey&lt;/a&gt; tracks realtime page views using Supabase. &lt;a href="https://twitter.com/CodeByCorey/status/1344650699645325312"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ffabss"&gt;@ffbass&lt;/a&gt; started working on gotrue-java. &lt;a href="https://github.com/supabase/gotrue-java"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We've grown more than 50% (GitHub star count) since moving into Beta. &lt;a href="https://twitter.com/supabase_io/status/1345410714836594693"&gt;Link&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aklM3HgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/103484820-9a594000-4e2c-11eb-9a31-2d661e7048f6.png" class="article-body-image-wrapper"&gt;&lt;img width="737" alt="dec-starcount" src="https://res.cloudinary.com/practicaldev/image/fetch/s--aklM3HgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10214025/103484820-9a594000-4e2c-11eb-9a31-2d661e7048f6.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to keep up to date, make sure you &lt;a href="https://www.youtube.com/channel/UCNTVzV1InxHV-YR0fSajqPQ"&gt;subscribe to our YouTube channel&lt;/a&gt; or &lt;a href="https://twitter.com/supabase_io"&gt;follow us on Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coming-next" class="anchor"&gt;
  &lt;/a&gt;
  Coming next
&lt;/h3&gt;

&lt;p&gt;We've go a lot of exciting things planned for Q1 2021. We're already planning out Supabase Storage and a Supabase CLI for better local development. Let us know if there's something you want us to release as a priority! &lt;/p&gt;

&lt;p&gt;We also have something exciting planned with Vercel and Stripe ... &lt;a href="https://twitter.com/rauchg/status/1331021818681978881"&gt;stay tuned&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-started" class="anchor"&gt;
  &lt;/a&gt;
  Get started
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start using Supabase today: &lt;a href="https://app.supabase.io/"&gt;app.supabase.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Make sure to &lt;a href="https://github.com/supabase/supabase"&gt;star us on GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow us &lt;a href="https://twitter.com/supabase_io"&gt;on Twitter&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Become a &lt;a href="https://github.com/sponsors/supabase"&gt;sponsor&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>postgres</category>
      <category>opensource</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Why we shouldn't use "else"</title>
      <author>David Díaz</author>
      <pubDate>Sun, 03 Jan 2021 18:20:35 +0000</pubDate>
      <link>https://dev.to/dd8888/why-we-shouldn-t-use-else-279c</link>
      <guid>https://dev.to/dd8888/why-we-shouldn-t-use-else-279c</guid>
      <description>&lt;p&gt;I have recently watched several videos and read many posts about the misuse of 'else' and why we should avoid it. At first I thought 'well, it will be the &lt;br&gt;
novelty and they will forget about this in a few months'. To my surprise it is not like that, and they have been dealing with this subject for a long time.&lt;/p&gt;

&lt;p&gt;One can say 'and why would I stop using' else 'if they are indispensable in any program', and you are absolutely right, I thought the same thing until I think I have come to understand it. I am going to put an example; Let's say we have to do three checks when registering a user and each of these checks has an exception attached if it is not true:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Check that the username follows a correct format.&lt;/li&gt;
&lt;li&gt;Check if the user is already registered.&lt;/li&gt;
&lt;li&gt;Check that the user has a correct image &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is not a real case but it can help us. Ok, to do these checks we would have to do the following&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQHJNlsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1609338483245/UxzJb0yje.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQHJNlsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1609338483245/UxzJb0yje.png" alt="carbon.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Seems like everything is ok right? Or not? Leaving aside the three levels of indentation, it could be a valid solution. The problem is that if we have a lot of code within each check, when we get to the 'else' we won't even remember what we're checking. What not using 'else' proposes is to put it in a different way, something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YXMP_jri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1609338642900/8OJkoy4bg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YXMP_jri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1609338642900/8OJkoy4bg.png" alt="carbon (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doing it this way, we would check from the first moment if we can go ahead with the registration, and then do the logic if everything goes well. Without a doubt, in the second way everything seems to be more organized and clear when reading code.&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Newsboat</title>
      <author>Waylon Walker</author>
      <pubDate>Sun, 03 Jan 2021 17:51:00 +0000</pubDate>
      <link>https://dev.to/waylonwalker/newsboat-2eo8</link>
      <guid>https://dev.to/waylonwalker/newsboat-2eo8</guid>
      <description>&lt;p&gt;Web browsers are a black hole of productivity.  I try to use them as little as possible when it is time to focus.  I try to use &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or &lt;code&gt;??&lt;/code&gt; with ipython, or --help at the command line as much as possible.  What about that time I am trying to see what my online friends are posting on their sites?  I used to used google reader quite heavily before that was taken down.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#newsboat" class="anchor"&gt;
  &lt;/a&gt;
  Newsboat
&lt;/h2&gt;

&lt;p&gt;I am going to give a terminal rss reader a try for a bit and see how that goes for me.  I have really struggled to get into an rss reader since google reader died.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation" class="anchor"&gt;
  &lt;/a&gt;
  installation
&lt;/h2&gt;

&lt;p&gt;I installed with the recommended snap for Ubuntu.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;snap &lt;span class="nb"&gt;install &lt;/span&gt;newsboat
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#adding-feeds" class="anchor"&gt;
  &lt;/a&gt;
  Adding feeds
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;super simple&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Running help for newsboat directed me towards their config files at the bottom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ newsboat &lt;span class="nt"&gt;--help&lt;/span&gt;
newsboat r2.22
usage: /snap/newsboat/3849/usr/local/bin/newsboat &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-i&lt;/span&gt; &amp;lt;file&amp;gt;|-e] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-u&lt;/span&gt; &amp;lt;urlfile&amp;gt;] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-c&lt;/span&gt; &amp;lt;cachefile&amp;gt;] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-x&lt;/span&gt; &amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; ...] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;-h&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="nt"&gt;-e&lt;/span&gt;, &lt;span class="nt"&gt;--export-to-opml&lt;/span&gt;        &lt;span class="nb"&gt;export &lt;/span&gt;OPML feed to stdout
    &lt;span class="nt"&gt;-r&lt;/span&gt;, &lt;span class="nt"&gt;--refresh-on-start&lt;/span&gt;      refresh feeds on start
    &lt;span class="nt"&gt;-i&lt;/span&gt;, &lt;span class="nt"&gt;--import-from-opml&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt;   import OPML file
    &lt;span class="nt"&gt;-u&lt;/span&gt;, &lt;span class="nt"&gt;--url-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;urlfile&amp;gt;    &lt;span class="nb"&gt;read &lt;/span&gt;RSS feed URLs from &amp;lt;urlfile&amp;gt;
    &lt;span class="nt"&gt;-c&lt;/span&gt;, &lt;span class="nt"&gt;--cache-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;cachefile&amp;gt;    use &amp;lt;cachefile&amp;gt; as cache file
    &lt;span class="nt"&gt;-C&lt;/span&gt;, &lt;span class="nt"&gt;--config-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;configfile&amp;gt;  &lt;span class="nb"&gt;read &lt;/span&gt;configuration from &amp;lt;configfile&amp;gt;
    &lt;span class="nt"&gt;-X&lt;/span&gt;, &lt;span class="nt"&gt;--vacuum&lt;/span&gt;            compact the cache
    &lt;span class="nt"&gt;-x&lt;/span&gt;, &lt;span class="nt"&gt;--execute&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;...  execute list of commands
    &lt;span class="nt"&gt;-q&lt;/span&gt;, &lt;span class="nt"&gt;--quiet&lt;/span&gt;         quiet startup
    &lt;span class="nt"&gt;-v&lt;/span&gt;, &lt;span class="nt"&gt;--version&lt;/span&gt;           get version information
    &lt;span class="nt"&gt;-l&lt;/span&gt;, &lt;span class="nt"&gt;--log-level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;loglevel&amp;gt;  write a log with a certain loglevel &lt;span class="o"&gt;(&lt;/span&gt;valid values: 1 to 6&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;-d&lt;/span&gt;, &lt;span class="nt"&gt;--log-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;logfile&amp;gt;    use &amp;lt;logfile&amp;gt; as output log file
    &lt;span class="nt"&gt;-E&lt;/span&gt;, &lt;span class="nt"&gt;--export-to-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt; &lt;span class="nb"&gt;export &lt;/span&gt;list of &lt;span class="nb"&gt;read &lt;/span&gt;articles to &amp;lt;file&amp;gt;
    &lt;span class="nt"&gt;-I&lt;/span&gt;, &lt;span class="nt"&gt;--import-from-file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt;   import list of &lt;span class="nb"&gt;read &lt;/span&gt;articles from &amp;lt;file&amp;gt;
    &lt;span class="nt"&gt;-h&lt;/span&gt;, &lt;span class="nt"&gt;--help&lt;/span&gt;          this &lt;span class="nb"&gt;help&lt;/span&gt;
        &lt;span class="nt"&gt;--cleanup&lt;/span&gt;           remove unreferenced items from cache

Files:
    - configuration:  /home/nic/snap/newsboat/3849/.newsboat/config
    - feed URLs:      /home/nic/snap/newsboat/3849/.newsboat/urls
    - cache:          /home/nic/snap/newsboat/3849/.newsboat/cache.db

Support at &lt;span class="c"&gt;#newsboat at https://freenode.net or on our mailing list https://groups.google.com/g/newsboat&lt;/span&gt;
For more information, check out https://newsboat.org/
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;I just need to edit its urls file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nvim ~/snap/newsboat/3849/.newsboat/urls
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The Urls file is just a list of urls to rss feeds.  Adding mine in allowed me to see all of my posts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;https://waylonwalker.com/rss.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#config" class="anchor"&gt;
  &lt;/a&gt;
  Config
&lt;/h2&gt;

&lt;p&gt;I took most of my config from a &lt;a href="http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/"&gt;blog post&lt;/a&gt; that I found by Evan Travers.  It set some sane defaults to the reading width and vim keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/&lt;/span&gt;
&lt;span class="c"&gt;# Hide feeds where all the items are read.&lt;/span&gt;
show-read-feeds no

&lt;span class="c"&gt;# Make the text width readable&lt;/span&gt;
text-width 50

&lt;span class="c"&gt;# Use multiple threads to download all the news faster.&lt;/span&gt;
reload-threads 11

&lt;span class="c"&gt;# browser ~/bin/newsboat-browser.sh&lt;/span&gt;
&lt;span class="c"&gt;# browser "/usr/bin/brave-browser %u"&lt;/span&gt;

&lt;span class="c"&gt;# unbind keys&lt;/span&gt;
unbind-key ENTER
unbind-key j
unbind-key k
unbind-key J
unbind-key K
unbind-key ^D
unbind-key ^U
unbind-key o
unbind-key g
unbind-key G

&lt;span class="c"&gt;# bind keys - vim style&lt;/span&gt;
bind-key j down
bind-key k up
bind-key l open
bind-key h quit
bind-key ^D pagedown
bind-key ^U pageup
bind-key b toggle-source-view
bind-key U toggle-show-read-feeds
bind-key u show-urls
bind-key g home
bind-key G end
bind-key b open-in-browser-and-mark-read
bind-key B open-in-browser
bind-key i &lt;span class="nb"&gt;sort
&lt;/span&gt;bind-key I rev-sort
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#gui-browser" class="anchor"&gt;
  &lt;/a&gt;
  GUI Browser
&lt;/h2&gt;

&lt;p&gt;No matter how many different guides I tried I keedp getting &lt;code&gt;error code 127&lt;/code&gt; when trying to &lt;code&gt;open-in-browser&lt;/code&gt;.  Please let me know if you know how to fix this. For now I am just going to roll with it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#heres-how-it-looks" class="anchor"&gt;
  &lt;/a&gt;
  Here's how it looks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qcW2xtc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://waylonwalker.com/newsboat-feed-waylonwalker-com.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qcW2xtc8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://waylonwalker.com/newsboat-feed-waylonwalker-com.png" alt="newsboat feed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;browsing a feed in newsboat&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u6VCu3M8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://waylonwalker.com/newsboat-article.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u6VCu3M8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://waylonwalker.com/newsboat-article.png" alt="newsboat article"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;reading an article in newsboat&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>bash</category>
      <category>linux</category>
    </item>
    <item>
      <title>6 ways to write a React component (TS Included)</title>
      <author>Mateo Garcia</author>
      <pubDate>Sun, 03 Jan 2021 16:44:21 +0000</pubDate>
      <link>https://dev.to/teo_garcia/6-ways-to-write-a-react-component-ts-included-2k42</link>
      <guid>https://dev.to/teo_garcia/6-ways-to-write-a-react-component-ts-included-2k42</guid>
      <description>&lt;p&gt;Hello everyone, my name is Mateo and like many of you, I have set some goals now that a new year has begun. Sharing, documenting, and applying my knowledge are some of them so I have decided to open this space called &lt;code&gt;Coding with Mateo&lt;/code&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Np29XsRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/88camp6rkxome3to2vs2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Np29XsRf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/88camp6rkxome3to2vs2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first post I will write is a compilation of different ways you can write a React component. Additionally, I will leave its version in Typescript in case it is useful to clarify how to annotate the functions in its different presentations, let's start.&lt;/p&gt;

&lt;p&gt;React has gradually become the paradigm/technology we think of when it comes to frontend development. Watch some videos, buy some Udemy courses, make your first task list, finally master the main concepts. However, the diversity of syntax provided by Javascript makes that at some point we don't understand why some people write components one way and others another way.&lt;/p&gt;

&lt;p&gt;It is important to remember that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A React component is a function that thanks to the composition can contain internal functions, including new components.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Javascript functions are objects with the difference that they can be executed through parentheses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Even if you are still maintaining/writing class components, those components are interpreted, transposed, and executed as ES5 functions since those classes are only &lt;a href="https://sophiali.dev/syntactic-sugar-examples-javascript"&gt;syntactic sugar&lt;/a&gt; of recent EcmaScript features.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whether you are working on a project by yourself or in a team, defining a syntax to declare your utility functions and React components can help to simplify the fatigue caused by the rapid growth of the project structure.&lt;/p&gt;

&lt;p&gt;Below, I show you different ways to write a React component using a button as an example.&lt;/p&gt;

&lt;p&gt;1.Using a regular &lt;code&gt;function&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// Button.jsx&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// Button.tsx&lt;/span&gt;
   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;

   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;2.Using a &lt;code&gt;function&lt;/code&gt; expression.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// Button.jsx&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// Button.tsx&lt;/span&gt;
   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;

   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;3.Using an &lt;code&gt;arrow function&lt;/code&gt; with &lt;code&gt;const&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// Button.jsx&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// Button.tsx&lt;/span&gt;
   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;

   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;4.Using an &lt;code&gt;arrow function&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// Button.jsx&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// Button.tsx&lt;/span&gt;
   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;

   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;5.Using an &lt;code&gt;explicit return&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// Button.jsx&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="c1"&gt;// or&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

   &lt;span class="c1"&gt;// Button.tsx&lt;/span&gt;
   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;

   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;6.Using a &lt;code&gt;class&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// Button.jsx&lt;/span&gt;
    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;render&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// Button.tsx&lt;/span&gt;
   &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ButtonProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;

   &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ButtonProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Finally, I must say that, all the ways of writing them work well.  There is no one better than another, feel free to use the one you like best.&lt;/p&gt;

&lt;p&gt;However, I would like to clarify that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The class components are being progressively &lt;a href="https://reactjs.org/blog/2019/02/06/react-v16.8.0.html"&gt;deprecated&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Declaring components with a let can be useful when performing &lt;a href="https://reactjs.org/docs/conditional-rendering.html"&gt;conditional rendering&lt;/a&gt; based on the props of a parent component.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ThisOrThat&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/* 
        Maybe some difficult logic.     
        Of course, that code does not smell good, however, it's 
        important to know that's possible to do this.
      */&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;renderedComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getComplexComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;renderedComponent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nx"&gt;renderedComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FallbackComponent&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;renderedComponent&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;section&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;I would love to know your opinion and what topics you would like to see in my blog posts. Also if you can &lt;code&gt;react&lt;/code&gt; to this blog that would make me very happy.&lt;/p&gt;

&lt;p&gt;Thank you very much and happy new year 🎉🥳&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Kubernetes Service Monitoring and Observability</title>
      <author>mikeyGlitz</author>
      <pubDate>Sun, 03 Jan 2021 15:34:41 +0000</pubDate>
      <link>https://dev.to/mikeyglitz/kubernetes-service-monitoring-and-observability-3g67</link>
      <guid>https://dev.to/mikeyglitz/kubernetes-service-monitoring-and-observability-3g67</guid>
      <description>&lt;p&gt;A common problem that I've run across throughout my career is supporting applications which have gone to production. When supporting a service in production, it is important to be able to identify where things went wrong and how to fix them before customers/end users are impacted.&lt;br&gt;
Application logs are usually first place that I usually check when I'm notified of a production issue. Seems simple enough right? Open a file look for the words &lt;em&gt;"exception"&lt;/em&gt; or &lt;em&gt;"error"&lt;/em&gt; and backtrack from there. The only problem is that this approach to troubleshooting becomes unsustainable in today's environments where services can be comprised of decentralized, distributed, constituent applications.&lt;br&gt;
How would you go about monitoring multiple services (i.e. micro-service architecture) without the increased cognitive load that comes with complicating the troubleshooting process?&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#monitoring-and-kubernetes" class="anchor"&gt;
  &lt;/a&gt;
  Monitoring and Kubernetes
&lt;/h1&gt;

&lt;p&gt;Although there are multiple ways of performing monitoring which can be dependent on which platform you're using and what tools are available for your platform (i.e. GCP, Azure, AWS), I'm going to be focusing on how to perform monitoring on a Kubernetes cluster.&lt;br&gt;
Fortunately when working in the context of a Kubernetes cluster, there's a fair bit of open source projects which can aid in providing observability and monitoring for services.&lt;br&gt;
For the ease of use, I'll be using &lt;a href="https://linkerd.io/"&gt;Linkerd&lt;/a&gt;. Linkerd is a service mesh and is fairly easy to set up. Additionally, with Linkerd, you get &lt;a href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt; and &lt;a href="https://grafana.com/"&gt;Grafana&lt;/a&gt; included for &lt;em&gt;FREE&lt;/em&gt;!&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-a-service-mesh" class="anchor"&gt;
  &lt;/a&gt;
  What is a Service Mesh?
&lt;/h1&gt;

&lt;p&gt;In the context of a Kubernetes cluster, a service mesh is a collection of applications, services, and custom resources which provide observability, scalability, and resiliency for applications in your cluster. Linkerd specifically uses a pod-sidecar called Linkerd Proxy which proxies API calls to your services and provides metrics back to Linkerd. These metrics are reported to Prometheus which is a tool for viewing metrics and managing alerts. Prometheus reports metrics to Grafana which provides visualizations of these metrics in the form of charts and graphs which makes the metrics easier to digest.&lt;br&gt;
Additionally, Grafana has a plugin, &lt;a href="https://grafana.com/oss/loki/"&gt;Loki&lt;/a&gt; which is designed to feed logs to Grafana allowing you to search through logs with relative ease.&lt;/p&gt;

&lt;p&gt;The flow for application metrics will resemble the following:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--marUWzBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Metrics-Flow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--marUWzBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Metrics-Flow.png" alt="Metrics Flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, an application log flow will look like the following:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HH2awKiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Logging-Flow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HH2awKiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Logging-Flow.png" alt="Application Logging Flow"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-linkerd" class="anchor"&gt;
  &lt;/a&gt;
  Setting up Linkerd
&lt;/h2&gt;

&lt;p&gt;Assuming you have your Kubernetes cluster all set up, setting up Linkerd will be relatively straightforward. Linkerd provides a command-line interface (CLI) tool which makes managing Linkerd pretty easy.&lt;/p&gt;

&lt;p&gt;Install the CLI following &lt;a href="https://linkerd.io/2/getting-started/"&gt;these instructions&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-sL&lt;/span&gt; https://run.linkerd.io/install | sh
&lt;span class="c"&gt;# Add Linkerd to path&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.linkerd2/bin
&lt;span class="c"&gt;# Deploy Linkerd to your cluster&lt;/span&gt;
linkerd &lt;span class="nb"&gt;install&lt;/span&gt; | kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; -
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;From here, you'll be able to access Grafana from the Linkerd Dashboard&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Open a browser window to the linkerd dashboard&lt;/span&gt;
linkerd dashboard
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Kubernetes resources can be assigned to Linkerd using annotations to either a Deployment or Namespace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Namespace&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;linkerd.io/inject&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;enabled&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;linkerd.io/inject&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;enabled&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#logging-operator" class="anchor"&gt;
  &lt;/a&gt;
  Logging Operator
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://banzaicloud.com/docs/one-eye/logging-operator/"&gt;Logging Operator&lt;/a&gt; is a project created by Banzai Cloud which is powered by FluentD and FluentBit in order to perform log discovery.&lt;/p&gt;

&lt;p&gt;We begin by deploying the logging operator onto our Kubernetes cluster. Fortunately, there's a helm chart which makes the deployment easier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create a logging namespace&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Namespace&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Add the helm repo&lt;/span&gt;
helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com
&lt;span class="c"&gt;# Install the helm chart&lt;/span&gt;
helm upgrade &lt;span class="nt"&gt;--install&lt;/span&gt; &lt;span class="nt"&gt;--wait&lt;/span&gt; &lt;span class="nt"&gt;--create-namespace&lt;/span&gt; &lt;span class="nt"&gt;--namespace&lt;/span&gt; logging logging-operator banzaicloud-stable/logging-operator &lt;span class="se"&gt;\&lt;/span&gt;
  &lt;span class="nt"&gt;--set&lt;/span&gt; &lt;span class="nv"&gt;createCustomResource&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="s2"&gt;"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#deploying-loki" class="anchor"&gt;
  &lt;/a&gt;
  Deploying Loki
&lt;/h2&gt;

&lt;p&gt;Now that Logging Operator is present to set up log discovery across our various sources, it's time to set up Loki and Grafana.&lt;br&gt;
Grafana community has set up a helm chart which will help in building a Loki stack using terraform:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="s2"&gt;"helm_release"&lt;/span&gt; &lt;span class="s2"&gt;"rel_logging_loki"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;repository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://grafana.github.io/helm-charts"&lt;/span&gt;
  &lt;span class="nx"&gt;chart&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"loki-stack"&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"loki"&lt;/span&gt;
  &lt;span class="nx"&gt;namespace&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"logging"&lt;/span&gt;

  &lt;span class="nx"&gt;set&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"pomtail.enabled"&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"true"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;set&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"loki.enabled"&lt;/span&gt;
    &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"true"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Linkerd will need to be updated so that Grafana talks to Loki.&lt;br&gt;
To preform the set up, we'll use a built-in Kubernetes utility &lt;a href="https://kubernetes.io/blog/2018/05/29/introducing-kustomize-template-free-configuration-customization-for-kubernetes/"&gt;kustomize&lt;/a&gt; in order to patch the new Grafana configuration into Linkerd's Grafana instance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;grafana.yml&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ConfigMap&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;linkerd-grafana-config&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;datasources.yaml&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|-&lt;/span&gt;
    &lt;span class="s"&gt;apiVersion: 1&lt;/span&gt;
    &lt;span class="s"&gt;datasources:&lt;/span&gt;
    &lt;span class="s"&gt;- name: prometheus&lt;/span&gt;
      &lt;span class="s"&gt;type: prometheus&lt;/span&gt;
      &lt;span class="s"&gt;access: proxy&lt;/span&gt;
      &lt;span class="s"&gt;orgId: 1&lt;/span&gt;
      &lt;span class="s"&gt;url: http://linkerd-prometheus.linkerd.svc.cluster.local:9090&lt;/span&gt;
      &lt;span class="s"&gt;isDefault: false&lt;/span&gt;
      &lt;span class="s"&gt;jsonData:&lt;/span&gt;
        &lt;span class="s"&gt;timeInterval: "5s"&lt;/span&gt;
      &lt;span class="s"&gt;version: 1&lt;/span&gt;
      &lt;span class="s"&gt;editable: true&lt;/span&gt;
    &lt;span class="s"&gt;- name: Loki&lt;/span&gt;
      &lt;span class="s"&gt;type: loki&lt;/span&gt;
      &lt;span class="s"&gt;access: proxy&lt;/span&gt;
      &lt;span class="s"&gt;editable: false&lt;/span&gt;
      &lt;span class="s"&gt;default: true&lt;/span&gt;
      &lt;span class="s"&gt;url: http://loki.logging:3100&lt;/span&gt;
      &lt;span class="s"&gt;maximumLines: "300"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Set up a kustomization.yml:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;linkerd.yml&lt;/span&gt;
&lt;span class="na"&gt;patchesStrategicMerge&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;grafana.yml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we can dump our current Linkerd config and run &lt;code&gt;kubectl kustomize&lt;/code&gt; to patch the Grafana configuration from the previous step into Linkerd&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;linkerd upgrade &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; linkerd.yml
kubectl kustomize | kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; -
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setting-up-logging-operator-to-stream-to-loki" class="anchor"&gt;
  &lt;/a&gt;
  Setting up Logging Operator to Stream to Loki
&lt;/h2&gt;

&lt;p&gt;The last step we'll have to complete is setting up the logging operator to stream to Loki.&lt;br&gt;
The Logging operator specifies the following custom resources which are used to watch containers and transport logs to a target destination:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sh34vzV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Logging-Operator-Flow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sh34vzV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Logging-Operator-Flow.png" alt="Logging Operator Flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Logging - Specifies a logging source&lt;/li&gt;
&lt;li&gt;Output - Specifies a destination for log outputs. These resources can also be established cluster-wide as a ClusterOutput&lt;/li&gt;
&lt;li&gt;Flow - Connects Logging resources to Output resources and specifies patterns which are used to parse log entries. These resources can also be established cluster-wide as a ClusterFlow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Specify a ClusterFlow to send logs to Loki:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging.banzaicloud.io/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ClusterOutput&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;loki-output&lt;/span&gt;
  &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;loki&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;http://loki:3100&lt;/span&gt;
    &lt;span class="na"&gt;configure_kubernetes_labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;buffer&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;timekey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;1m&lt;/span&gt;
      &lt;span class="na"&gt;timekey_wait&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;30s&lt;/span&gt;
      &lt;span class="na"&gt;timekey_use_utc&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For each Pod/Deployment you want to monitor, you're going to need to set up a Logging and a Flow:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Set up the Logging object&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging.banzaicloud.io/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Logging&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;files-logger&lt;/span&gt;
  &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;files&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;fluentd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
  &lt;span class="na"&gt;fluentbit&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
  &lt;span class="na"&gt;controlNamespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="c1"&gt;# Set up the Flow object&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logging.banzaicloud.io/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Flow&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;files-flow&lt;/span&gt;
  &lt;span class="na"&gt;namespace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;files&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;globalOutputRefs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;logging-index-output&lt;/span&gt;
  &lt;span class="na"&gt;filters&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;tag_normaliser&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;parser&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;remove_key_name_field&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;reserve_data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
        &lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;multi_format&lt;/span&gt;
          &lt;span class="na"&gt;patterns&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;regexp&lt;/span&gt;
              &lt;span class="na"&gt;expression&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/^(?&amp;lt;time&amp;gt;[^\]]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;\[(?&amp;lt;level&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)\]&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;(?&amp;lt;source&amp;gt;[^\":]*):&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;(?&amp;lt;message&amp;gt;.*)$/'&lt;/span&gt;
              &lt;span class="na"&gt;time_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;logtime&lt;/span&gt;
              &lt;span class="na"&gt;time_format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;%Y-%m-%dT%H:%M:%S.%LZ'&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;regexp&lt;/span&gt;
              &lt;span class="na"&gt;expression&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/^time="(?&amp;lt;time&amp;gt;[^\]]*)"&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;level=(?&amp;lt;level&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;msg="(?&amp;lt;message&amp;gt;[^\"]*)"/'&lt;/span&gt;
              &lt;span class="na"&gt;time_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;time&lt;/span&gt;
              &lt;span class="na"&gt;time_format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;%Y-%m-%dT%H:%M:%SZ'&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;regexp&lt;/span&gt;
              &lt;span class="na"&gt;expression&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/^level=(?&amp;lt;level&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ts=(?&amp;lt;time&amp;gt;[^\]]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;caller=(?&amp;lt;source&amp;gt;.*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;msg="(?&amp;lt;message&amp;gt;[^\"]*)"/'&lt;/span&gt;
              &lt;span class="na"&gt;time_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;time&lt;/span&gt;
              &lt;span class="na"&gt;time_format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;%Y-%m-%dT%H:%M:%S.%LZ'&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;regexp&lt;/span&gt;
              &lt;span class="na"&gt;expression&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;^(?&amp;lt;host&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;(?&amp;lt;user&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;\[(?&amp;lt;time&amp;gt;[^\]]*)\]&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;"(?&amp;lt;method&amp;gt;\S+)(?:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;+(?&amp;lt;path&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;+\S*)?"&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;(?&amp;lt;code&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;(?&amp;lt;size&amp;gt;[^&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;]*)(?:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;"(?&amp;lt;referer&amp;gt;[^\"]*)"&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;"(?&amp;lt;agent&amp;gt;[^\"]*)")?$'&lt;/span&gt;
              &lt;span class="na"&gt;time_key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;time&lt;/span&gt;
              &lt;span class="na"&gt;time_format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;%d/%b/%Y:%H:%M:%S&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;%z'&lt;/span&gt;
  &lt;span class="na"&gt;match&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;owncloud&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;ℹ The Flow object in this example uses FluentD expressions to parse log streams. The FluentD expressions can be evaluated/debugged using &lt;a href="http://fluentular.herokuapp.com/"&gt;Fluentar&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;code&gt;globalOutputRefs&lt;/code&gt; section matches the Flow resource with an Output. The Output will route the logs to the indicated destination.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;match&lt;/code&gt; section indicates what Kubernetes resources the Flow resource will look for in order to obtain logs. In this example, the Flow resource will look for any pods with the label &lt;code&gt;app: owncloud&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If everything is set up right, the logs will be able to be searched in Grafana:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6NooLo1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Screenshot%25202020-12-20%2520164131.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6NooLo1i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mikeyGlitz/dev-to-blog/raw/master/Images/Screenshot%25202020-12-20%2520164131.png" alt="Grafana Loki"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-left" class="anchor"&gt;
  &lt;/a&gt;
  What's Left?
&lt;/h1&gt;

&lt;p&gt;So far I've covered how to set up Linkerd and stream logs to Grafana. An improvement to this set up would be deploying Prometheus &lt;a href="https://www.prometheus.io/docs/alerting/latest/alertmanager/"&gt;AlertManager&lt;/a&gt; in order to create and manage alerts so that you can receive notifications through 3rd party services like Slack and PagerDuty.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#references" class="anchor"&gt;
  &lt;/a&gt;
  References
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Customizing Linkerd's Configuration - &lt;a href="https://linkerd.io/2/tasks/customize-install/"&gt;https://linkerd.io/2/tasks/customize-install/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Logging Operator Quickstart Guide - Loki- &lt;a href="https://banzaicloud.com/docs/one-eye/logging-operator/quickstarts/loki-nginx/"&gt;https://banzaicloud.com/docs/one-eye/logging-operator/quickstarts/loki-nginx/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itnext.io/part-4-operations-and-the-cloud-native-stack-in-action-bb17d9f0ff5"&gt;https://itnext.io/part-4-operations-and-the-cloud-native-stack-in-action-bb17d9f0ff5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#outtakes" class="anchor"&gt;
  &lt;/a&gt;
  Outtakes
&lt;/h1&gt;

&lt;p&gt;This article was roughly 3 months of experimenting in my home-lab. Instead of Graphana and Loki, I had originally attempted to preform log streaming using the Elastic Stack, EFK (&lt;a href="//elastic.co"&gt;Elasticsearch&lt;/a&gt;, FluentD, and Kibana).&lt;br&gt;
I'm using Keycloak as an identity provider and had attempted an initial configuration using Kibana and Open-ID Connect (OIDC) based authentication; however, the OIDC plugin is only available on the Platinum Tier of Elastic. Disabling the &lt;code&gt;xpack.security.enabled&lt;/code&gt; setting broke the Elastic applications.&lt;br&gt;
Attempting to utilize a &lt;a href="https://github.com/novomatic-tech/keycloak-kibana"&gt;keycloak-kibana&lt;/a&gt; plugin also caused Kibana to fail to start.&lt;/p&gt;

&lt;p&gt;With Loki and Grafana, I'm able to set up a Kubernetes Ingress with &lt;a href="https://linkerd.io/2/tasks/exposing-dashboard/#nginx-with-oauth2-proxy"&gt;OAUTH2 authentication&lt;/a&gt; as a way to secure access to my services.&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>grafana</category>
      <category>linkerd</category>
      <category>prometheus</category>
    </item>
    <item>
      <title>Linux, the right choice?</title>
      <author>Lucas Marçal Coutinho</author>
      <pubDate>Sun, 03 Jan 2021 15:00:02 +0000</pubDate>
      <link>https://dev.to/lucasmc64/linux-the-right-choice-39fj</link>
      <guid>https://dev.to/lucasmc64/linux-the-right-choice-39fj</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;🇧🇷 Caso prefira ler em outra língua, esse artigo foi publicado também em português. Clique &lt;a href="https://lucasmc64.medium.com/linux-a-escolha-certa-b51de07a0df5"&gt;AQUI&lt;/a&gt; para acessar!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;If you opened this article, you are at least curious about the world of the Penguin. Be careful: you are being attracted to the more open-source, private and customizable side of the Force.&lt;/p&gt;

&lt;p&gt;Some people can feel comfortable in Windows and never even consider an alternative to it, many do not even know that there are options to the Microsoft system and others fear that Linux is just a “black screen” (terminal).&lt;/p&gt;

&lt;p&gt;This is the first in a series of articles in which I will try to resolve some of your doubts about the Linux world and show you that this subject is only a 7-headed monster if you want it to be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#after-all-what-is-linux" class="anchor"&gt;
  &lt;/a&gt;
  After all, what is Linux?
&lt;/h2&gt;

&lt;p&gt;At first this question may seem trivial and something similar may come to your mind: “Linux is a &lt;strong&gt;operating system&lt;/strong&gt;, like Windows and MacOS, but &lt;strong&gt;free&lt;/strong&gt;”. But that's not quite it...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The Operating System (OS) is the name given to the program or set of programs that manages computer resources, as a bridge with a graphical interface between hardware and the user.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Linux, in fact, is not an operating system, but it is the kernel (core) present in several OSs.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The kernel, in general, is the heart of the operating system: the part that makes the connection between applications and hardware.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another point is that not all Linux-based software is necessarily free because, as it is an &lt;strong&gt;open-source&lt;/strong&gt; project, its license allows third parties to sell a proprietary version of the kernel or distro. Some examples would be &lt;em&gt;Red Hat Enterprise Linux&lt;/em&gt;, &lt;em&gt;Zorin OS Ultimate&lt;/em&gt; and the &lt;em&gt;SUSE Linux Enterprise&lt;/em&gt; product line.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Open-source software is created under a license that allows the public to study, modify and distribute their code as they see fit. Some restrictions may apply depending on the license.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#distros" class="anchor"&gt;
  &lt;/a&gt;
  Distros
&lt;/h2&gt;

&lt;p&gt;"Distro" is just an abbreviation for "distribution", a term used to refer loosely to a Linux-based operating system.&lt;/p&gt;

&lt;p&gt;There are several distros, each aimed at its audience or for a specific purpose. So, despite being based on the same kernel, the distros can be very different from each other, ranging from a modified kernel and proprietary programs to different interfaces.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Interface is the part of the distro that manages the way things are presented visually to the user.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#interfaces" class="anchor"&gt;
  &lt;/a&gt;
  Interfaces
&lt;/h2&gt;

&lt;p&gt;Unlike Windows and MacOS, which have only their standard interface, there are several graphical interfaces in the Linux world.&lt;/p&gt;

&lt;p&gt;Some interfaces are more friendly, intuitive and even have similarities with Windows to facilitate the user's transition (such as Cinnamon and KDE Plasma).&lt;/p&gt;

&lt;p&gt;Other interfaces, on the other hand, may have a usability quite different from what you are used to (such as Gnome).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In general, other interfaces can also be installed via the terminal and, when logging in, you choose which interface you want to use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#gnome" class="anchor"&gt;
  &lt;/a&gt;
  Gnome
&lt;/h3&gt;

&lt;p&gt;Gnome is a project that places a special emphasis on usability and even though it seems strange at first glance, it is an intuitive and easy to adapt interface.&lt;/p&gt;

&lt;p&gt;You may have heard of one of the most famous Linux distros, &lt;em&gt;Ubuntu&lt;/em&gt;. With Gnome as its interface, it is a system recommended by many people precisely because it is easy to learn to use, has a solid base and constant updates.&lt;/p&gt;

&lt;p&gt;There are several other distros that use Gnome as an interface - &lt;em&gt;Manjaro&lt;/em&gt;, &lt;em&gt;Debian&lt;/em&gt;, &lt;em&gt;Fedora&lt;/em&gt;, &lt;em&gt;Pop!_OS&lt;/em&gt;, &lt;em&gt;GnomeOS&lt;/em&gt; - each with its own unique features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cinnamon" class="anchor"&gt;
  &lt;/a&gt;
  Cinnamon
&lt;/h3&gt;

&lt;p&gt;Cinnamon is an interface derived from Gnome developed by the &lt;em&gt;Linux Mint&lt;/em&gt; team. For Windows users, this is a much more friendly and familiar interface, which is precisely what he intends to do: be a gateway for those who want to migrate to the Linux world.&lt;/p&gt;

&lt;p&gt;Without a doubt, &lt;em&gt;Linux Mint&lt;/em&gt; is another great recommendation, with an extremely intuitive interface and, as it is based on &lt;em&gt;Ubuntu&lt;/em&gt;, it has its base of programs updated.&lt;/p&gt;

&lt;p&gt;There are other distros that use Cinnamon besides &lt;em&gt;Linux Mint&lt;/em&gt; like &lt;em&gt;Debian&lt;/em&gt; and &lt;em&gt;Fedora&lt;/em&gt;, with their differences, of course.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is worth mentioning that distros can release different versions of themselves but with a different interface.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#kde-plasma" class="anchor"&gt;
  &lt;/a&gt;
  KDE Plasma
&lt;/h3&gt;

&lt;p&gt;KDE Plasma is developed by the KDE team with a focus on usability and, mainly, customization. &lt;em&gt;KDE Neon&lt;/em&gt; is the distro that KDE maintains to test new features in KDE Plasma.&lt;/p&gt;

&lt;p&gt;With advanced customization options available by default, distros with KDE Plasma are a great option for anyone looking to modify the system to the fullest.&lt;/p&gt;

&lt;p&gt;Some of the distros that adopt this interface are &lt;em&gt;Manjaro&lt;/em&gt;, &lt;em&gt;Debian&lt;/em&gt;, &lt;em&gt;Fedora&lt;/em&gt; and &lt;em&gt;Kubuntu&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outhers-interfaces" class="anchor"&gt;
  &lt;/a&gt;
  Outhers interfaces
&lt;/h3&gt;

&lt;p&gt;There are other interfaces like DDE, XFCE, LXDE, LXQT, Mate and UKUI. I recommend you do your research, take a look at the channel &lt;a href="https://www.youtube.com/user/Diolinux"&gt;🇧🇷 Diolinux&lt;/a&gt; to see how the interfaces work and which ones you like best.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#perfection-is-individual" class="anchor"&gt;
  &lt;/a&gt;
  Perfection is individual
&lt;/h2&gt;

&lt;p&gt;The perfect OS does not exist, but everyone is constantly updating to always be the best version of themselves. However, the perfect system &lt;strong&gt;for you&lt;/strong&gt; would be one that meets all &lt;strong&gt;your needs&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There is also no perfect interface, but the one that you feel most &lt;strong&gt;comfortable&lt;/strong&gt; to use, in which you are more &lt;strong&gt;productive&lt;/strong&gt; or just the one you find most &lt;strong&gt;beautiful&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I recommend that you test, experiment and learn more about it. Most distros do not charge you anything for using them and none limit your access to the system so... why not give it a try?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-and-cons" class="anchor"&gt;
  &lt;/a&gt;
  Pros and cons
&lt;/h2&gt;

&lt;p&gt;Nothing is perfect, unfortunately neither is the Linux world. So, here are some pros and cons of using Linux distros over Windows.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pros&lt;/th&gt;
&lt;th&gt;Cons&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Linux distros are faster than Windows&lt;/td&gt;
&lt;td&gt;Linux has few NATIVE games&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux distros are more secure than Windows&lt;/td&gt;
&lt;td&gt;There are programs for Windows that do not exist in the Linux world&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux is open-source and most distros are free&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Multiple choice of interfaces&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;It is extremely customizable&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Full system access&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Research, first of all, whether the programs and resources you need are available in the Linux world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#choosing-your-distro" class="anchor"&gt;
  &lt;/a&gt;
  Choosing your distro
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I recommend that you watch the videos &lt;a href="https://www.youtube.com/watch?v=MBYeDHDOGIs"&gt;🇧🇷 Qual a melhor distro para “——”&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=MI5jvKGajz8&amp;amp;t=132s"&gt;🇧🇷 Como escolher a melhor distro para o seu uso?&lt;/a&gt;. The first is basically a re-recording of the second, but both complement each other and will show you some other important points for choosing the distro.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Taking into account some points I separated some recommendations of distros for questions:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#beauty" class="anchor"&gt;
  &lt;/a&gt;
  Beauty
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Deepin&lt;/em&gt; and &lt;em&gt;Ubuntu Kylin&lt;/em&gt; are by far the most beautiful distro for me. But there is a catch: both are chinese distros and there is no guarantee that you will find any material (forum, documentation, videos...) in english or in your native language for you to consult if there is a problem. Another point is that &lt;em&gt;Ubuntu Kylin&lt;/em&gt; itself may have some parts of the system not translated.&lt;/p&gt;

&lt;p&gt;Another very beautiful distro is &lt;em&gt;eXternOS&lt;/em&gt;, but it is still in beta until the posting of this article.&lt;/p&gt;

&lt;p&gt;One option would be to use a distro with KDE Plasma and modify it as you wish, there are several tutorials on the internet and the results are incredibly beautiful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#games" class="anchor"&gt;
  &lt;/a&gt;
  Games
&lt;/h3&gt;

&lt;p&gt;This is a wound that anyone who does not like the Linux world loves to hammer. As I said earlier, Linux does not have many native games like Windows... But there is nothing to stop trying to run Windows games on Linux.&lt;/p&gt;

&lt;p&gt;I recommend you to watch these two videos: &lt;a href="https://www.youtube.com/user/Diolinux"&gt;🇧🇷 Configurando o &lt;em&gt;Pop!_OS&lt;/em&gt; para jogos&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=7Yd_TugJg3w"&gt;🇧🇷 Como jogar no Linux em 2020&lt;/a&gt;. They will give you a sense of how things work and give you tips on where to look to see if your favorite games are supported on Linux.&lt;/p&gt;

&lt;p&gt;And, as one of the video titles already suggests, &lt;em&gt;Pop!_OS&lt;/em&gt; is one of the best distros to play today, already coming with Nvidia drivers (choosing this option on the site) and having a repository (program base) updated frequently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#development" class="anchor"&gt;
  &lt;/a&gt;
  Development
&lt;/h3&gt;

&lt;p&gt;Here we already need the latest software, constant updates and a large arsenal of programs. &lt;em&gt;Ubuntu&lt;/em&gt; has long been the darling and the best distro to develop in the Linux world because it is popular, stable and easy to use.&lt;/p&gt;

&lt;p&gt;However, over time, other distros have also acquired and reinforced these characteristics, with some having more appeal to the developer audience like &lt;em&gt;Pop!_OS&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stability-one-distro-to-rule-them-all" class="anchor"&gt;
  &lt;/a&gt;
  Stability (one distro to rule them all)
&lt;/h3&gt;

&lt;p&gt;In general, distros like &lt;em&gt;Ubuntu&lt;/em&gt;, &lt;em&gt;Linux Mint&lt;/em&gt; and &lt;em&gt;Pop!_OS&lt;/em&gt; try to deliver a balance between stability and new features. However, there is an operating system that is known to focus on stability: &lt;em&gt;Debian&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Debian&lt;/em&gt; is an operating system composed entirely of free software and maintained by the community. Its update cycle is considerably longer than traditional distros: they usually release updates every 6 months, whereas &lt;em&gt;Debian&lt;/em&gt; releases every 2 years (some specific patches may be released in the meantime).&lt;/p&gt;

&lt;p&gt;This distro may not yet have the programs in their most recent versions, as their updates are only available after many tests.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-called-freedom-right" class="anchor"&gt;
  &lt;/a&gt;
  It's called freedom, right?
&lt;/h2&gt;

&lt;p&gt;You don't have to be indecisive among so many choices, it's open-source! If you want, just format and install another distro or another interface. You are free to install, reinstall and modify as you wish.&lt;/p&gt;

&lt;p&gt;I hope I have clarified some of your doubts. I know I haven't addressed every possible subject, but other articles will come to complement this one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#feedback" class="anchor"&gt;
  &lt;/a&gt;
  Feedback!
&lt;/h2&gt;

&lt;p&gt;Feel free to say what you think of this article, ask questions, point out a topic that was not very well explained or that needed to be talked about, suggest other topics and complement what has already been said. To the next!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references-and-recommendations" class="anchor"&gt;
  &lt;/a&gt;
  References and recommendations
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/Diolinux"&gt;🇧🇷 Diolinux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLHz_AreHm4dlIXleu20uwPWFOSswqLYbV"&gt;🇧🇷 Curso de Linux - Curso em Vídeo&lt;/a&gt; &lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>opensource</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
