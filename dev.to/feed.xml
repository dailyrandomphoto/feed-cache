<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Renovando git: bye bye, checkout
</title>
      <author>Franco Cuarterolo</author>
      <pubDate>Tue, 03 Aug 2021 23:09:58 +0000</pubDate>
      <link>https://dev.to/cuarte4/renovando-git-bye-bye-checkout-28f5</link>
      <guid>https://dev.to/cuarte4/renovando-git-bye-bye-checkout-28f5</guid>
      <description>&lt;h1&gt;
  &lt;a href="#renovando-git-bye-bye-checkout"&gt;
  &lt;/a&gt;
  Renovando git: bye bye, checkout
&lt;/h1&gt;

&lt;p&gt;Hay una serie de comandos de git que nos sabemos de memoria, pero existe uno en particular que tiene múltiples usos: &lt;code&gt;git checkout&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ah pero que tenga múltiples uso significa que es más practico. Si, y más probable que te equivoques&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout&lt;/code&gt; es un comando que podemos usar para crear y borrar branches, navegar entre ellas y eliminar cambios que no están en estado de stage.&lt;/p&gt;

&lt;p&gt;Ahora, la gente de git se despabiló y se dio cuenta de que sería mejor tener comandos más verbosos para las distintas acciones que hacemos con nuestro controlador de versiones.&lt;/p&gt;

&lt;p&gt;Cada uno de los siguientes comandos que te voy a mostrar realizan la misma acción que hacíamos antes con &lt;code&gt;git checkout&lt;/code&gt; pero escrito de una forma más amigable&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creando-ramas-git-branch"&gt;
  &lt;/a&gt;
  Creando ramas: git branch
&lt;/h2&gt;

&lt;p&gt;Cuando queremos crear una rama, es normal que nos encontremos usando el comando &lt;code&gt;git checkout mi-rama&lt;/code&gt;. Para hacerlo más entendible, lo vamos a cambiar por &lt;code&gt;git branch mi-rama&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#navegando-entre-ramas-git-switch"&gt;
  &lt;/a&gt;
  Navegando entre ramas: git switch
&lt;/h2&gt;

&lt;p&gt;Es normal cambiar a una rama de un colega para revisar sus cambios o querer volver a &lt;code&gt;develop&lt;/code&gt; para tener los últimos cambios. Yo siempre usé para esto &lt;code&gt;git checkout rama-de-mi-colega&lt;/code&gt;. hasta que descubrí que existe un comando que es mucho más claro: &lt;code&gt;git switch rama-de-mi-colega&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#borrando-cambios-git-restore"&gt;
  &lt;/a&gt;
  Borrando cambios: git restore
&lt;/h2&gt;

&lt;p&gt;Cuando ya separé cuales son los cambios que van en el commit, lo demás se descarta, y para descartar recurrimos al &lt;code&gt;git checkout -- .&lt;/code&gt;. Hoy en día git te recomienda utilizar &lt;code&gt;git restore .&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  Conclusión
&lt;/h2&gt;

&lt;p&gt;Utilizar el mismo comando para todo puede ser super practico, pero si recién estas empezando, puede que te provoque un par de USB (USB? ABC? ACV!). Nuestros comandos y nuestros procesos deben dejar claras nuestras intenciones, de esta manera podemos compartir un paso a paso y ser lo más claros posibles en nuestra comunicación técnica.&lt;/p&gt;

&lt;p&gt;Fuentes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://git-scm.com/docs/git-branch"&gt;git branch&lt;/a&gt;&lt;br&gt;
&lt;a href="https://git-scm.com/docs/git-switch"&gt;git switch&lt;/a&gt;&lt;br&gt;
&lt;a href="https://git-scm.com/docs/git-restore"&gt;git retore&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>spanish</category>
    </item>
    <item>
      <title>Reflections on 10,000 Hours of Programming</title>
      <author>mrick</author>
      <pubDate>Tue, 03 Aug 2021 23:00:26 +0000</pubDate>
      <link>https://dev.to/mrick/reflections-on-10-000-hours-of-programming-ge4</link>
      <guid>https://dev.to/mrick/reflections-on-10-000-hours-of-programming-ge4</guid>
      <description>&lt;p&gt;&lt;em&gt;This post originally appeared in my free daily newsletter on startups and engineering. &lt;br&gt;
You can join 200+ subscribers here: &lt;a href="https://matt-rickard.com/subscribe/"&gt;https://matt-rickard.com/subscribe/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The key to achieving world-class expertise in any skill, is to a large extent, a matter of practicing the correct way, for a total of around 10,000 hours — Malcolm Gladwell in Outsiders&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, I'm certainly not a world-class expert, but I have put my 10,000 hours of deliberate practice into programming. Here are 31 of my reflections on programming.&lt;/p&gt;

&lt;p&gt;These are reflections only about pure coding — no lessons sum up to "programming is about people" or "how to be a senior technical leader" (arguably more important to a career, but not the topic of this post).&lt;/p&gt;

&lt;p&gt;These reflections are just about deliberately writing code for 10,000 hours. Most don't apply to beginners. These reflections are not career advice. Think of them as lessons on being a technical guitarist, not about being a good band member. They are about becoming a better programmer for yourself.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Browsing the source is almost always faster than finding an answer on StackOverflow.&lt;/li&gt;
&lt;li&gt;In many cases, what you're working on doesn't have an answer on the internet. That usually means the problem is hard or important, or both.&lt;/li&gt;
&lt;li&gt;Delete as much code as you can.&lt;/li&gt;
&lt;li&gt;Syntactic sugar is usually bad.&lt;/li&gt;
&lt;li&gt;Simple is hard.&lt;/li&gt;
&lt;li&gt;Have a wide variety of tools and know which ones to use for the job.&lt;/li&gt;
&lt;li&gt;Know the internals of the most used ones like git and bash (I can get out of the most gnarly git rebase or merge).&lt;/li&gt;
&lt;li&gt;Build your own tools for repeated workflows. There is nothing faster than using a tool you made yourself (see: &lt;a href="https://matt-rickard.com/about/"&gt;software I wrote&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Only learn from the best. So when I was learning Go, I read the standard library.&lt;/li&gt;
&lt;li&gt;If it looks ugly, it is most likely a terrible mistake.&lt;/li&gt;
&lt;li&gt;If you have to write a comment that isn't a docstring, it should probably be refactored. Every new line of comments increases this probability.&lt;/li&gt;
&lt;li&gt;If you don't understand how your program runs in production, you don't understand the program itself. In my experience, the best engineers know how their program works in every environment.&lt;/li&gt;
&lt;li&gt;The above rule applies to the build pipeline as well.&lt;/li&gt;
&lt;li&gt;Use other people's code religiously.&lt;/li&gt;
&lt;li&gt;Corollary: Most code out there is terrible. Sometimes it's easier to write a better version yourself.&lt;/li&gt;
&lt;li&gt;A rough rule of thumb: never take a direct dependency on a small library that you could easily rewrite or a large library that should have been small.&lt;/li&gt;
&lt;li&gt;Know when to break the rules. For rules like "don't repeat yourself," sometimes a little repetition is better than a bit of dependency.
18.Organizing your code into modules, packages, and functions is important. Knowing where API boundaries will materialize is an art.&lt;/li&gt;
&lt;li&gt;Pick the most efficient tool most of the time, but also pick what you know. Is Arch Linux the most efficient operating system for the modern developer? For me, it is, but for most, probably not. Should you use acme? Only if you're Rob Pike.&lt;/li&gt;
&lt;li&gt;Avoid cyclomatic complexity. Novice coders don't even know that they've tangled the dependency graph until it's too late.&lt;/li&gt;
&lt;li&gt;Avoid nesting conditionals deeply. Have common sense about your conditional tests and naming convention.&lt;/li&gt;
&lt;li&gt;Name variables correctly. Again, an art.&lt;/li&gt;
&lt;li&gt;While rare, sometimes it's a problem with the compiler. Otherwise, it's always DNS.&lt;/li&gt;
&lt;li&gt;Use esoteric language features sparingly, but use them when you're supposed to, for that is the point.&lt;/li&gt;
&lt;li&gt;Technology does not diffuse equally. For example, there is a lot that frontend developers could learn from low-level engineers (especially now that everything is compiled). 26. Likewise, there are UX and usability features that JavaScript developers could teach cloud engineers.&lt;/li&gt;
&lt;li&gt;As a result, different kinds of engineers look at the world differently.&lt;/li&gt;
&lt;li&gt;Some programmers are 10x more efficient than others. I know because I've been both a 10x programmer and a -1x programmer.&lt;/li&gt;
&lt;li&gt;There's no correlation between being a 10x programmer and a 10x employee (maybe a negative one).&lt;/li&gt;
&lt;li&gt;Good APIs are easy to use and hard to misuse.
The configuration cycle goes from hardcoded values to environment variables, to CLI flags, to a configuration file, to a templated configuration file, to a DSL, to a generic bash script, and back to hardcoded values. Know where you are on this Heptagon of Configuration.&lt;/li&gt;
&lt;li&gt;All layers of abstraction are malleable. If you run into a fundamental wall, sometimes the answer is to go down a layer of abstraction. You aren't confined to the surface.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Where did I put in my 10,000 hours?&lt;/strong&gt; Well, I've been programming for about 15 years. Most recently, I worked as a professional software engineer at Google on Kubernetes and Blackstone, the private equity firm. Before that, I spent most of college in the library writing programs for my own projects instead of writing proofs (which I should have been doing as a math major). And before that, I was hacking away at all sorts of things — running a botnet on RuneScape, writing a Latin translation app for the iPhone (so I could do better on my Latin exams), creating a web clipper, or ricing up my desktop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What did I do for the 10,000 hours?&lt;/strong&gt; The most recent work was in distributed systems, but I've written code across the stack. Languages like PHP, JavaScript, Go, Ruby, Python, C#, Java, Swift. Frontend, backend, mobile, kernel, cloud, ops, and even some IT. I've worked on large-scale open-source projects like Kubernetes and maintained subprojects, which allowed me to have my code peer-reviewed by some of the best engineers.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>C# Loops - Part 3: Do..While and While Loops</title>
      <author>Grant</author>
      <pubDate>Tue, 03 Aug 2021 22:42:09 +0000</pubDate>
      <link>https://dev.to/gweaths/c-loops-part-3-do-while-and-while-loops-1idn</link>
      <guid>https://dev.to/gweaths/c-loops-part-3-do-while-and-while-loops-1idn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#dowhile-loops"&gt;
  &lt;/a&gt;
  Do...While loops
&lt;/h2&gt;

&lt;p&gt;Do while loops allow developers to repeat code execution as long as a condition is met. So whereas before we were instructing the code to run a number of times, or from beginning to end of an object. Now, we tailor it a little more and say only keep running this code "until" this condition is no longer valid. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-they-work-then-"&gt;
  &lt;/a&gt;
  How do they work then ?
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;//Code goes here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unlike the For and Foreach loop, the code is executed a minimum time of once. As the &lt;em&gt;do&lt;/em&gt; code is ran &lt;strong&gt;before&lt;/strong&gt; the &lt;em&gt;while&lt;/em&gt; check. &lt;/p&gt;

&lt;p&gt;Example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Keep Going"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;++;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the code will run once, check if counter is less than 10, if it is it will keep going. Once the counter is &amp;gt;=10 the loop will exit and no longer execute the &lt;em&gt;do&lt;/em&gt; code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#while-loop"&gt;
  &lt;/a&gt;
  While Loop
&lt;/h2&gt;

&lt;p&gt;Ok so the while loop works on a very similar concept to the &lt;em&gt;do while&lt;/em&gt;, however rather than running the code first then checking. The check is done first. Meaning the code will &lt;strong&gt;only&lt;/strong&gt; run whilst the condition is met. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-and-example"&gt;
  &lt;/a&gt;
  Syntax and Example:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;dartsThrown&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;180&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;dartsThrown&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;dartScore&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;61&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;dartScore&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Your score is "&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;There you go you've been introduced to the 4 ways of looping within C#. Each has there uses and are suited better for certain situations. &lt;/p&gt;

&lt;p&gt;After you've played around with them yourself , you'll see how easy they are to use, and which loop would suit your needs best. &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>csharp</category>
    </item>
    <item>
      <title>C# Loops - Part 2 : For Each Loops</title>
      <author>Grant</author>
      <pubDate>Tue, 03 Aug 2021 22:41:34 +0000</pubDate>
      <link>https://dev.to/gweaths/c-loops-part-2-for-each-loops-4n6h</link>
      <guid>https://dev.to/gweaths/c-loops-part-2-for-each-loops-4n6h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#for-each-loops"&gt;
  &lt;/a&gt;
  For Each Loops
&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;For Each Loop&lt;/em&gt; in concept works like any other loop in that it iterates over an object a number of times. However in a Foreach loop it will go from the first item all the way through to end in sequence. Unless, you manipulate the sequence by skipping items using the &lt;em&gt;continue&lt;/em&gt; keyword. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-it-work-"&gt;
  &lt;/a&gt;
  How does it work ?
&lt;/h2&gt;

&lt;p&gt;The &lt;em&gt;foreach&lt;/em&gt; loop can iterate over any object that inherits from the IEnumerable class (e.g lists, collections). &lt;/p&gt;

&lt;p&gt;As already mentioned, it does this in order of the list, i.e order the items were loaded in / added to the list (or ordered). It does this because it iterates over the &lt;em&gt;instances&lt;/em&gt; of the list. An instance is a concrete occurrence of any object, existing usually during runtime, from memory. &lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Grant"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Barry"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Jenny”,"&lt;/span&gt;&lt;span class="n"&gt;Shaun&lt;/span&gt;&lt;span class="s"&gt;");
&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Output&lt;/span&gt;
&lt;span class="n"&gt;Grant&lt;/span&gt;
&lt;span class="n"&gt;Barry&lt;/span&gt;
&lt;span class="n"&gt;Jenny&lt;/span&gt;
&lt;span class="n"&gt;Shaun&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'll show you an example of a object with more properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AddressBook&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Tel&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;AddressBook&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;addresses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;AddressBook&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Grant"&lt;/span&gt;
       &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Developer Avenue, DevTown"&lt;/span&gt;
       &lt;span class="n"&gt;Telephone&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"019286661"&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="n"&gt;Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Terry"&lt;/span&gt;
       &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"5 Developer Avenue, DevTown"&lt;/span&gt;
       &lt;span class="n"&gt;Telephone&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"019286662"&lt;/span&gt;
     &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;addressBook&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//Output&lt;/span&gt;
&lt;span class="n"&gt;Grant&lt;/span&gt;
&lt;span class="m"&gt;019286661&lt;/span&gt;
&lt;span class="n"&gt;Terry&lt;/span&gt;
&lt;span class="m"&gt;019286662&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's how you can use the For Each loop. However there are some caveats. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can't access instances within an object using indexing like the previous for loop. You know the &lt;em&gt;list[1]&lt;/em&gt; syntax. This is because the IEnumerable class doesn't expose this functionality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Thwre are some performance overheads with foreach loop, how it works behind the scenes. I won't get into it now but sometimes it can run slower than a for loop. But the pros can sometimes outweigh this.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Foreach loops make a copy od the object you're looping through. Therefore , amendments or assignments to the current item's properties is not feasible, i.e you cannot loop through a list and update all the values using a Foreach loop. You would need to use a &lt;em&gt;for loop&lt;/em&gt;.  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well that's all I've got for now on foreach loops. Next up.. do while and while loops &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>csharp</category>
    </item>
    <item>
      <title>How to clean some disk space on a Linux instance ?</title>
      <author>Lucien Boix</author>
      <pubDate>Tue, 03 Aug 2021 22:38:57 +0000</pubDate>
      <link>https://dev.to/lboix/how-to-clean-some-disk-space-on-a-linux-instance-pjl</link>
      <guid>https://dev.to/lboix/how-to-clean-some-disk-space-on-a-linux-instance-pjl</guid>
      <description>&lt;p&gt;If you are lucky, the disk usage was already monitored and you have been warned on time. Otherwise it's already too late and some of your apps are simply not working anymore. To help you get back on track asap, here are some useful commands I found throughout the years to quickly and safely made room again on your instance / server.&lt;/p&gt;

&lt;p&gt;First connect to it via SSH of course and become root with &lt;code&gt;sudo su -&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then given your case, if you are using on it &lt;strong&gt;Docker&lt;/strong&gt; to run containers :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if your app is still running, clean Docker resources smoothly
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker images -q | xargs docker rmi
docker container prune -f
docker image prune -a -f
docker system prune -a -f
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;if you app is already down, clean all Docker resources in one shot
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker system prune
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;if a container does not rotate its log, that may represent a huge file, go clean it
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/lib/docker/containers/&amp;lt;container_id&amp;gt;/ # a file &amp;lt;container_id&amp;gt;-json.log is supposed to be there
truncate -s 0 &amp;lt;container_id&amp;gt;-json.log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are using a Linux distribution with &lt;strong&gt;systemd&lt;/strong&gt;, you can clean its logs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd /var/log/journal # they are here
journalctl --disk-usage # have a look at how much you can reclaim
journalctl --vacuum-time=7d # reclaim it (7d = keep logs from last week only)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Look elsewhere on the instance if you still need more space :&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;du -sh * | grep "G" # travel around to find most imposant directories
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;if it's a log file you can truncate it : &lt;code&gt;truncate -s 0 YOUR_LOGFILE.log&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;if you find a directory containing old files that are not needed anymore:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pwd # DOUBLE CHECK that you are inside the right directory to clean
find * -type f -mtime +100 -exec rm -rf {} \; # remove files not modified since 100 days for example
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should be good now and your apps should be back and running again, maybe you will need to redeploy / restart them for that.&lt;/p&gt;

&lt;p&gt;Finally it's time now for continuous improvement :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;make sure the disk space on this instance is well monitored and the threshold in place does leave you enough time to intervene &lt;/li&gt;
&lt;li&gt;your goal is to never do that again : find easy cleaning commands that you can put in the crontab of this instance for example&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please let us know if this article helped you in some ways, I would love to hear your stories regarding this usecase (never funny) and your personal tips and suggestions too.&lt;/p&gt;

&lt;p&gt;I wish you a great day!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>linux</category>
      <category>bash</category>
    </item>
    <item>
      <title>Hello Everyone,</title>
      <author>Ahmed Bounader</author>
      <pubDate>Tue, 03 Aug 2021 22:35:14 +0000</pubDate>
      <link>https://dev.to/ahmedbounadar/hello-everyone-4mnk</link>
      <guid>https://dev.to/ahmedbounadar/hello-everyone-4mnk</guid>
      <description>&lt;p&gt;I'm new in this platform. I hope I can help you, and you can help me. I really admired this website when I first discover it, It's a fun and informative platform, it'll help me to learn so many things about programming languages, coding and all the stuffs.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Mi experiencia en Laboratoria y la importancia de priorizar la salud mental</title>
      <author>Anais</author>
      <pubDate>Tue, 03 Aug 2021 22:22:40 +0000</pubDate>
      <link>https://dev.to/biokah/mi-experiencia-en-laboratoria-y-la-importancia-de-priorizar-la-salud-mental-30p7</link>
      <guid>https://dev.to/biokah/mi-experiencia-en-laboratoria-y-la-importancia-de-priorizar-la-salud-mental-30p7</guid>
      <description>&lt;p&gt;Postulé a Laboratoria en julio de 2017. Una de mis grandes amigas me había contado sobre la iniciativa y me pareció muy bueno para ser verdad. La carrera que estudié no me ofrecía las posibilidades de acceder a un sueldo competitivo o a condiciones laborales justas. Laboratoria ofrecía brindar las herramientas técnicas y socioemocionales para incursionar al sector tecnológico, incluso sin poseer conocimientos previos sobre programación y al mismo tiempo, reducir la brecha de género que existe en las carreras pertenecientes a STEM.&lt;/p&gt;

&lt;p&gt;Después de un proceso de admisión largo y poco más de seis meses de bootcamp (estuve en la 5ta generación en la CDMX), egresé y conseguí mi primer empleo como software specialist.&lt;/p&gt;

&lt;p&gt;Es cierto que desde entonces mis ingresos han aumentado, tengo una carrera de tres años en tecnología y hasta hace poco mi opinión sobre Laboratoria era buena. Incluso circulan por internet &lt;a href="https://soloesciencia.com/2018/09/20/laboratoria-una-segunda-oportunidad/"&gt;algunas entrevistas&lt;/a&gt; y hasta grabé &lt;a href="https://www.mytypeof.dev/1190693/8192511-mujeres-en-tech-anais-laboratoria"&gt;un episodio del podcast My Type of Radio&lt;/a&gt; hablando sobre mi experiencia.&lt;/p&gt;

&lt;p&gt;Sin embargo, como sucede con la violencia, necesité tiempo y distancia para entender que la forma de manejar ciertas situaciones por parte del staff de Laboratoria es completamente innecesaria y hace unos días escribí &lt;a href="https://twitter.com/biokah/status/1420807998339903492"&gt;este twitt&lt;/a&gt; y quisiera profundizar más en el tema.&lt;/p&gt;

&lt;p&gt;El bootcamp ofrece formación en dos áreas: técnica y softskills. Y es en la última donde encuentro los puntos más problemáticos. Con el pretexto de preparar a las participantes para la vida laboral, Laboratoria ha asumido la postura de &lt;em&gt;poner a prueba&lt;/em&gt; a las participantes para saber si podrán tolerar la presión después. Y esta presión va dirigida al aspecto psicológico más que al técnico.&lt;/p&gt;

&lt;p&gt;Entre los mecanismos para lograrlo destacan: organizar hackatones exhaustivos de varios días, agregar complejidad excesiva a ejercicios y en general hacer sentir que incluso dedicándole entre 60 y 80 horas a la semana al bootcamp, nunca parecía ser suficiente. En mi caso, no me presionaban en lo técnico sino en lo socioemocional, me señalaban si salía a comprar comida, si abría mis redes sociales para enviar mensajes e incluso si pedía aclaración sobre mis notas, todo para concluir que aún con puntajes técnicos sobresalientes, yo no cumplía con sus expectativas. &lt;/p&gt;

&lt;p&gt;Además de recibir comentarios disfrazados de feedback, algunas alumnas han sido obligadas a simular entrevistas de trabajo frente a un grupo de cincuenta personas, a explicar que abandonan el bootcamp por un transtorno de aprendizaje (dislexia, el mismo que yo tengo y en ningún momento me ha impedido desenvolverme profesionalmente) o han sido expulsadas por tomar incapacidad en embarazos de alto riesgo.&lt;/p&gt;

&lt;p&gt;Ahora, a la distancia y con un poco de trayectoria en el área, considero que este enfoque es inútil e incluso ridículo.  En el ámbito laboral, la presión ante nuevos retos técnicos estará presente, no importa si tienes un mes, tres o diez años de experiencia. Quizá en algún momento el ambiente en los equipos de trabajo no será ideal, o la cultura laboral y las deficiencias en el manejo de las empresas nos enfrenten a situaciones complejas, pero esto no justifica tomar la bandera de feminismo emancipatorio para manipular a las estudiantes, comprometer su bienestar o ridiculizarlas frente a un grupo de cincuenta personas.&lt;/p&gt;

&lt;p&gt;Es aquí donde considero que quien dirige el programa ha fallado en proveer herramientas para proteger a sus participantes, pues con escenarios simulados de presión y estrés, pareciera que perpetúan dinámicas de explotación disfrazadas de 'tolerancia a la frustración'. &lt;strong&gt;Y esto no es empoderamiento.&lt;/strong&gt; Lo peor es que puede afectar seriamente la salud mental de las alumnas, de la misma manera que me sucedió a mí, que inicé mi primer empleo con ataques de ansiedad y otras repercusiones relacionadas con el estrés.&lt;/p&gt;

&lt;p&gt;Me parece importante mencionar que no todas las alumnas y egresadas han tenido la misma experiencia que yo. Es un hecho que el programa ha ayudado a muchas mujeres y ha tenido el reconocimiento por ello. &lt;/p&gt;

&lt;p&gt;Actualmente existen disponibles muchos recursos en línea a menor precio o incluso gratuitos. También existen otras opciones de bootcamps, con múltiples planes de financiamiento. Si aún así deciden postular a Laboratoria, sugeriría buscar mentoras o mentores, incluso comunidades de tecnología.&lt;br&gt;
Puedo garantizar que siempre habrá alguien dispuesta o dispuesto a apoyar en lo técnico y en lo psicológico, con tips, anécdotas, recomendaciones de cursos / tutoriales o hasta mentorías 1:1 (después de este post escribiré otro exclusivamente para mencionar recursos gratuitos y opciones de bootcamps en México).&lt;/p&gt;

&lt;p&gt;A las mujeres que dudan en postular, mi recomendación sería cuestionar si es el enfoque que buscan, especialmente antes de contraer una deuda de varios miles de pesos que tardarán dos años en pagar. &lt;/p&gt;

&lt;p&gt;Lo importante es entender que aprender a programar es un cambio difícil, que requiere tiempo, paciencia, muchas horas de trabajo pero en ningún momento es necesario comprometer la salud mental para lograrlo.&lt;/p&gt;

</description>
      <category>bootcamp</category>
      <category>frontend</category>
    </item>
    <item>
      <title>How Qovery simplifies Cloud Hosting</title>
      <author>Angelos Rinas</author>
      <pubDate>Tue, 03 Aug 2021 21:38:26 +0000</pubDate>
      <link>https://dev.to/aggis15/how-qovery-simplifies-cloud-hosting-1n3e</link>
      <guid>https://dev.to/aggis15/how-qovery-simplifies-cloud-hosting-1n3e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#who-is-qovery"&gt;
  &lt;/a&gt;
  Who is Qovery?
&lt;/h2&gt;

&lt;p&gt;Qovery is a platform that aims to simplify cloud hosting. For those that may not have heard, Qovery is a CaaS and aims to provide beginners an easy alternative to what is usually a complicated process, hosting applications on the cloud. Qovery tries to make cloud hosting easy, without the end user having to worry about deploying and maintaining.&lt;/p&gt;

&lt;p&gt;But, let's dive deeper, how does it work? Well, Qovery uses the power of Kubernetes, the reliability of AWS and the simplicity of Heroku to host applications. Their engine source code is available on Github for everyone to contribute! &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Qovery"&gt;
        Qovery
      &lt;/a&gt; / &lt;a href="https://github.com/Qovery/engine"&gt;
        engine
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Deploy your apps on any Cloud providers in just a few seconds
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://www.qovery.com" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pGIKag4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Qovery/public-resources/master/qovery-engine-logo.svg" width="318px" alt="Qovery logo"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
The simplest way to deploy your full-stack apps&lt;/h3&gt;

&lt;p&gt;Deploy your apps on any Cloud providers in just a few seconds ⚡&lt;/p&gt;

&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6d8a85d3577f42608315e9f6e41acb03555a61cea69287a3d5ee43ade87a21f1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73746162696c6974792d776f726b5f696e5f70726f67726573732d6c69676874677265792e7376673f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/6d8a85d3577f42608315e9f6e41acb03555a61cea69287a3d5ee43ade87a21f1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73746162696c6974792d776f726b5f696e5f70726f67726573732d6c69676874677265792e7376673f7374796c653d666c61742d737175617265" alt="work in progress badge"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/Qovery/engine/workflows/functionnal-tests/badge.svg?style=flat-square"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wczD92nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Qovery/engine/workflows/functionnal-tests/badge.svg%3Fstyle%3Dflat-square" alt="Func tests"&gt;&lt;/a&gt;
&lt;a href="https://discord.qovery.com" rel="nofollow"&gt; &lt;img alt="Discord" src="https://camo.githubusercontent.com/69ba712d9458247540f8da3b9242432c154fb17ab2a991ecf007a184b0ab792f/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3638383736363933343931373138353535363f6c6162656c3d646973636f7264267374796c653d666c61742d737175617265"&gt; &lt;/a&gt;
&lt;/p&gt;



&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/Qovery/public-resources/master/qovery_kubernetes_cloudproviders.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_fnNJF-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Qovery/public-resources/master/qovery_kubernetes_cloudproviders.svg" height="450px" alt="Qovery stack on top of Kubernetes and Cloud providers"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Qovery Engine&lt;/strong&gt; is an open-source abstraction layer library that turns easy apps deployment on &lt;strong&gt;AWS&lt;/strong&gt;, &lt;strong&gt;GCP&lt;/strong&gt;, &lt;strong&gt;Azure&lt;/strong&gt;, and other Cloud providers in just a few minutes. The Qovery Engine is written in &lt;a href="https://www.rust-lang.org" rel="nofollow"&gt;Rust&lt;/a&gt; and takes advantage of &lt;a href="https://www.terraform.io" rel="nofollow"&gt;Terraform&lt;/a&gt;, &lt;a href="https://helm.sh" rel="nofollow"&gt;Helm&lt;/a&gt;, &lt;a href="https://kubernetes.io/docs/reference/kubectl/overview" rel="nofollow"&gt;Kubectl&lt;/a&gt;, and &lt;a href="https://www.docker.com" rel="nofollow"&gt;Docker&lt;/a&gt; to manage resources.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://www.qovery.com" rel="nofollow"&gt;https://www.qovery.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Full doc: &lt;a href="https://docs.qovery.com" rel="nofollow"&gt;https://docs.qovery.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Qovery Engine doc: &lt;em&gt;coming soon&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Community: &lt;a href="https://discord.qovery.com" rel="nofollow"&gt;Join us&lt;/a&gt; on Discord and on our &lt;a href="https://community.qovery.com" rel="nofollow"&gt;Q&amp;amp;A forum&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take Qovery's security and our users' trust very seriously. If you believe you have found a security issue in Qovery, please responsibly disclose by contacting us at &lt;a href="https://github.com/Qovery/enginemailto:security@qovery.com"&gt;security@qovery.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
✨ Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Zero infrastructure management:&lt;/strong&gt; Qovery Engine initializes, configures, and manages your Cloud account for you.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multi Cloud:&lt;/strong&gt; Qovery Engine is built to work on…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Qovery/engine"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#who-is-it-useful-for"&gt;
  &lt;/a&gt;
  Who is it useful for?
&lt;/h2&gt;

&lt;p&gt;Let's assume you're a beginner in the programming and cloud hosting world. You just built your shiny new website and exercising your frontend skills. You decide it's worth hosting somewhere, but don't know where and how. You see that there are a lot of options for hosting. AWS, Scaleway, Digital Ocean and many more. That's where Qovery comes in. With Qovery, you can host your app effortlessly in just a few clicks!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-deploy-an-app"&gt;
  &lt;/a&gt;
  How do you deploy an app?
&lt;/h2&gt;

&lt;p&gt;Now, how do you actually deploy an app? It's very simple. You just log in to the console, select your repo (Github and Gitlab supported currently), create any databases you may need, change the app configuration if you need to, and click &lt;strong&gt;Deploy&lt;/strong&gt;! It's as simple as that! Qovery takes care of the rest, and in a few minutes, you should see your app is online!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Fwsyq5zIhsg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cU38o3fv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb4t84lzbwrjp89j70gg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cU38o3fv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb4t84lzbwrjp89j70gg.jpg" alt="How Qovery works"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-much-does-it-cost"&gt;
  &lt;/a&gt;
  How much does it cost?
&lt;/h2&gt;

&lt;p&gt;Now, let's talk pricing. An application costs $0.000006 (6 decimals), including databases. That means 1 month and 1 app cost around $15 a month to host 24 hours a day 7 days a week. That's very cheap! That, of course, comes with limitations, for example you can't increase CPU and RAM resources, and hosting is done on the Qovery cloud account. Paid plans offer hosting with your own AWS, Digital Ocean and Scaleway account. For more information regarding pricing and how it works, you can check out &lt;a href="https://www.qovery.com/pricing"&gt;this&lt;/a&gt; and &lt;a href="https://www.qovery.com/blog/how-qovery-billing-works"&gt;this&lt;/a&gt; article. They offer a more in depth look at how it works.&lt;/p&gt;

&lt;p&gt;Qovery offers a $45 initial sign up credit. After the credits are consumed, the user has to contribute to the community in order to receive more credits to host their apps. Qovery relies on user feedback, so the community plan does not accept a credit card. That is because Qovery is not a hosting platform. It's a way to give back to the developers. The only way to get credits is to contribute to Qovery. That includes contributing to any open source Qovery project, writing articles and more! You can check out how to contribute &lt;a href="https://hub.qovery.com/docs/community/reward/"&gt;here&lt;/a&gt;! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ambassador-program"&gt;
  &lt;/a&gt;
  Ambassador Program
&lt;/h2&gt;

&lt;p&gt;Additionally, Qovery has an ambassador program (I'm one!). Ambassadors are people who are active within the community, help others with any issues they may have, contributing to documentation and much more! Ambassadors also get a few goodies for being active in the community! You can learn more about the ambassador program &lt;a href="https://hub.qovery.com/docs/community/become-an-ambassador/"&gt;here&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next-for-qovery"&gt;
  &lt;/a&gt;
  What's next for Qovery?
&lt;/h2&gt;

&lt;p&gt;Currently, the Qovery team is working on integrating Scaleway in their infrastructure so that users can use their Scaleway account to host their accounts there (it's in &lt;a href="https://www.qovery.com/blog/deploy-your-apps-on-scaleway-with-qovery-get-early-access-now"&gt;beta&lt;/a&gt;!). There is also a lot more planned, and you can take a look &lt;a href="https://roadmap.qovery.com/tabs/1-under-consideration"&gt;here&lt;/a&gt;! The Qovery team also has monthly Community calls where they introduce what's being worked on, what's next and answering any questions the community has! It's very interesting and most definitely worth a look!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final thoughts
&lt;/h2&gt;

&lt;p&gt;Qovery is a great platform for beginners that want to host their applications without needing much skill for Cloud Hosting and without having to worry about maintaining it. It's also perfect for small Startups looking to host their infrastructure without wanting to have to spend much time with it, and instead spend their time growing their business. It's definitely worth trying it out yourself!&lt;/p&gt;

</description>
      <category>qovery</category>
      <category>cloud</category>
      <category>cloudhosting</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>A Basic TypeScript Insight for JavaScript Devs</title>
      <author>K</author>
      <pubDate>Tue, 03 Aug 2021 21:28:28 +0000</pubDate>
      <link>https://dev.to/fllstck/a-basic-typescript-insight-for-javascript-devs-2d0n</link>
      <guid>https://dev.to/fllstck/a-basic-typescript-insight-for-javascript-devs-2d0n</guid>
      <description>&lt;p&gt;Since I started working on &lt;a href="https://dev.to/kayis/series/10595"&gt;my SaaS product&lt;/a&gt;, I've learned and worked with TypeScript for some months now. My frontend, backend, and even infrastructure code is written in TypeScript, and I quite enjoy sharing interfaces between these parts of my application with a mono repo.&lt;/p&gt;

&lt;p&gt;TypeScript is an excellent addition to JavaScript, but some things took me some time to get into my head, one of them being union types.&lt;/p&gt;

&lt;p&gt;This all might seem obvious for people used to static typing, but for me, it wasn't evident at first :D&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#type-annotations"&gt;
  &lt;/a&gt;
  Type Annotations
&lt;/h2&gt;

&lt;p&gt;One of the essential features of TypeScript is annotating your variables and functions with types that are based on JavaScript types but will be entirely invisible for JavaScript later.&lt;/p&gt;

&lt;p&gt;Tools like &lt;a href="https://esbuild.github.io/"&gt;ESBuild&lt;/a&gt; will throw away all TypeScript specific syntax and bundle up the remaining JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will become&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, this is all nice and good, but it gets confusing with all the types that don't have a direct equivalent in JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-raw-any-endraw-type"&gt;
  &lt;/a&gt;
  The &lt;code&gt;any&lt;/code&gt; Type
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;any&lt;/code&gt; type is classic; it tells TypeScript to close both eyes and let you do what you want. If you understand JavaScript, it can sometimes be easier to write one line with &lt;code&gt;any&lt;/code&gt; than ten lines correctly typed with TypeScript. &lt;/p&gt;

&lt;p&gt;Often it's nice to start with &lt;code&gt;any&lt;/code&gt; to get the type checker to shut up, then program the code as you would with JavaScript and later sprinkle actual types on it.&lt;/p&gt;

&lt;p&gt;In this example, I access the &lt;code&gt;someKey&lt;/code&gt; field without checking anything first. It could be that &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; or an &lt;code&gt;object&lt;/code&gt; or whatever; I don't care and tell TypeScript that I don't care.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;someKey&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's an untyped type that doesn't have any equivalent in JavaScript other than it could be ... well, any type, haha.&lt;/p&gt;

&lt;p&gt;This brings us to one of the hard things for me to understand with static typing in general. Later it will be more obvious, but I think it's already the case with &lt;code&gt;any&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are types in TypeScript that map to multiple JavaScript types at runtime, either implicitly with &lt;code&gt;any&lt;/code&gt;, or explicitly with unions.&lt;/p&gt;

&lt;p&gt;It didn't bother me with &lt;code&gt;any&lt;/code&gt; because it's a particular case of all types, but later it threw me off with union types.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#union-types"&gt;
  &lt;/a&gt;
  Union Types
&lt;/h2&gt;

&lt;p&gt;Union types are multiple types at once at runtime, like &lt;code&gt;any&lt;/code&gt;; the difference is, union types aren't all but only pre-defined specific types.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;StringOrNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;StringOrNumber&lt;/code&gt; type only allows using a variable typed with it only in contexts where a &lt;code&gt;string&lt;/code&gt; and a &lt;code&gt;number&lt;/code&gt; can be used. Otherwise, you must manually check that it's one of both before using it in a &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; context.&lt;/p&gt;

&lt;p&gt;While the name and types I have chosen in this example make this obvious, this isn't often the case in an actual codebase.&lt;/p&gt;

&lt;p&gt;The type can have any name, and the union can include any type, even generics.&lt;/p&gt;

&lt;p&gt;As a JavaScript developer, I was used to the fact that the type was either unknown and I had to check it (the &lt;code&gt;any&lt;/code&gt; case) or know what was going on, and I probably was working with some class that wraps some functionality. &lt;/p&gt;

&lt;p&gt;This made using unions supplied by frameworks or libraries not easy to understand for me. Sure, one day, I looked at their definition and was baffled by how simple they were, but I was first confused.&lt;/p&gt;

&lt;p&gt;But union types are neither. They tell you before runtime that you can use multiple types in one case, but the union type itself doesn't exist at runtime at all. There is no class called &lt;code&gt;StringOrNumber&lt;/code&gt;; there is &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you then couple this feature with another syntax like modules and generics and use a name that isn't as obvious as &lt;code&gt;StringOrNumber&lt;/code&gt;, things get even more confusing for the mere JavaScript pleb.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, I'm baffled was &lt;code&gt;T&lt;/code&gt; is; I mean, sure, it makes &lt;code&gt;Result&lt;/code&gt; generic, but why doesn't it get a speaking name? Then &lt;code&gt;Result&lt;/code&gt; isn't any more speaking than &lt;code&gt;T&lt;/code&gt; either. But what are you going to do? Types as general as this one do need general names.&lt;/p&gt;

&lt;p&gt;A variable annotated with &lt;code&gt;Result&amp;lt;string&amp;gt;&lt;/code&gt; can either contain a &lt;code&gt;string&lt;/code&gt; or a &lt;code&gt;Promise&amp;lt;string&amp;gt;&lt;/code&gt;, a promise that resolves to a &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There is never a &lt;code&gt;Result&lt;/code&gt;; it doesn't exist at runtime even if the name &lt;code&gt;Result&lt;/code&gt; looks like it (more so than &lt;code&gt;StringOrNumber&lt;/code&gt;). It's not something like a class that wraps a value or a promise for that value; it's gone at runtime. &lt;/p&gt;

&lt;p&gt;If you wanted to check this in JavaScript explicitly, you would have to either know what you're doing and decide how a &lt;code&gt;T&lt;/code&gt; is different from a &lt;code&gt;Promise&amp;lt;T&amp;gt;&lt;/code&gt; or wrap it somehow, but this isn't needed in TypeScript. It forces you to think before you write, so you don't have to implement abstractions that have runtime costs.&lt;/p&gt;

&lt;p&gt;Sure, you have to check what it is before using it, but you don't have to learn any new class methods or something to use it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Look at type definitions, don't get fooled by some name that sounds cryptic, too general, or just like a class you might have implemented in the past. &lt;/p&gt;

&lt;p&gt;And always keep in mind that (at least most of) TypeScript is just JavaScript, and it goes entirely away at runtime.&lt;/p&gt;

&lt;p&gt;A type that doesn't exist at runtime doesn't require you to learn more than you already know about JavaScript.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Dev log for Wonder Wanderer 2: Day 3 #LOWREZJAM 😁</title>
      <author>Michael Primo</author>
      <pubDate>Tue, 03 Aug 2021 21:27:36 +0000</pubDate>
      <link>https://dev.to/michaelprimo/dev-log-for-wonder-wanderer-2-day-3-lowrezjam-9b</link>
      <guid>https://dev.to/michaelprimo/dev-log-for-wonder-wanderer-2-day-3-lowrezjam-9b</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-i-have-done-today"&gt;
  &lt;/a&gt;
  What I have done today?
&lt;/h3&gt;

&lt;p&gt;It was a very tiring day, I fear to suffer burnout now. I still have energy left, so I'll make my game much shorter. I'll make my game anyway, even if that means not really making the game you wanted at the beginning, but still a good game. I had a really hard time managing the jumps command and also the map collision detection. I don't know if I'll add the jump on my game, but I made basic collision detection, so that is on the way. Hope to get some rest and making better levels and progress, because I want to be ready for the challenges I have to overcome.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fM9Iz-ag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0iqmk85unolsac3yj49.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fM9Iz-ag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0iqmk85unolsac3yj49.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
Some basic experiment with collision detection on map.



</description>
      <category>challenge</category>
      <category>javascript</category>
      <category>devjournal</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>OpenCV + Raspberry Pi: Como configurar o ambiente?</title>
      <author>Tassiane Anzolin</author>
      <pubDate>Tue, 03 Aug 2021 20:56:04 +0000</pubDate>
      <link>https://dev.to/tassi/opencv-raspberry-pi-como-configurar-o-ambiente-m3c</link>
      <guid>https://dev.to/tassi/opencv-raspberry-pi-como-configurar-o-ambiente-m3c</guid>
      <description>&lt;p&gt;OpenCV (&lt;em&gt;Open Source Computer Vision&lt;/em&gt;) é uma biblioteca multi-plataforma com um forte foco para o &lt;strong&gt;processamento digital de imagens em tempo real&lt;/strong&gt;, escrita em C/C++ que hoje contém interfaces para diversas linguagens tais como Python e Java. Sua primeira versão foi lançada em 2000 e [...] conta com várias centenas de algoritmos de visão computacional o que torna esta biblioteca uma ferramenta poderosa no campo da &lt;strong&gt;visão computacional&lt;/strong&gt; (BAGGIO, 2015).&lt;/p&gt;

&lt;p&gt;Neste tutorial, utilizaremos o sistema multi-plataforma CMake para realizar a instalação da biblioteca OpenCV no ambiente do Raspberry Pi. Você precisará de um Raspberry Pi (o modelo utilizado foi o RPi 3 Model B V1.2), um cartão Micro SD, de mais de 8GB de armazenamento, com o sistema operacional Raspberry Pi OS instalado (confira a instalação &lt;a href="https://www.raspberrypi.org/software/"&gt;aqui&lt;/a&gt;) e de uma xícara de café 😅.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-1-expandindo-o-armazenamento-file-system"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 1 - Expandindo o armazenamento (File System)
&lt;/h3&gt;

&lt;p&gt;Abra o terminal e digite o comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo raspi-config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Após isso, vá em &lt;strong&gt;Advanced Options&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kYdrvmgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy23k6uut0fyjfut5szs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kYdrvmgi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wy23k6uut0fyjfut5szs.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
E em &lt;strong&gt;Expand File System&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lGBKEbVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khgk46plhj6cqgpfhv50.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lGBKEbVc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khgk46plhj6cqgpfhv50.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clique em &lt;em&gt;select&lt;/em&gt; e faça o reboot do Raspberry Pi.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-2-atualizando-o-sistema-operacional"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 2 - Atualizando o sistema operacional
&lt;/h3&gt;

&lt;p&gt;É estritamente necessário atualizar o sistema operacional antes de realizar qualquer operação. &lt;br&gt;
Abra o terminal e digite o comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tmz2paDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oik6erji2g90obqfmezg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tmz2paDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oik6erji2g90obqfmezg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E também, para atualizar o pacote &lt;em&gt;apt-get&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uF7dEa9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bougsgfrugbnphmvyjpu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uF7dEa9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bougsgfrugbnphmvyjpu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-3-instalando-o-cmake"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 3 - Instalando o CMake
&lt;/h3&gt;

&lt;p&gt;O CMake é essencial para a instalação da biblioteca OpenCV. &lt;/p&gt;

&lt;p&gt;Etapa 3.1: Instalação do &lt;em&gt;snapd&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install snapd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CEZGNTy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeopu4278bmutarhalo2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CEZGNTy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oeopu4278bmutarhalo2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Etapa 3.2: Instalação do &lt;em&gt;CMake Classic&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo snap install cmake --classic
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VdoteDek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gtu8bhkvi39khre7smg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VdoteDek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gtu8bhkvi39khre7smg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#observa%C3%A7%C3%A3o"&gt;
  &lt;/a&gt;
  Observação
&lt;/h4&gt;

&lt;p&gt;Se houver o seguinte erro: &lt;em&gt;20.04 snapd issue: “system does not fully support snapd: cannot mount squashfs image…”&lt;/em&gt; será necessário instalar o &lt;em&gt;certbot&lt;/em&gt; e somente após prosseguir para Etapa 3.2. Abaixo segue o comando para a instalação do &lt;em&gt;certbot&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt install certbot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#passo-4-instalando-o-python"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 4 - Instalando o &lt;em&gt;Python&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;A linguagem Python vem instalada de forma padrão no Raspberry Pi, mas confira se seu status está ok com o comando&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install python3-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vp1Na5hn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18mt53rwj2m8c13qy167.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vp1Na5hn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18mt53rwj2m8c13qy167.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-5-baixando-os-pacotes-do-opencv"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 5 - Baixando os pacotes do OpenCV
&lt;/h3&gt;

&lt;p&gt;A biblioteca OpenCV é &lt;em&gt;open-source&lt;/em&gt;, ou seja, seu código é aberto e o mesmo está disponível no &lt;em&gt;GitHub&lt;/em&gt;. Com os comandos a seguir, serão baixadas as versões 4.0.0 do &lt;em&gt;OpenCV&lt;/em&gt; e do &lt;em&gt;OpenCV contrib&lt;/em&gt;, a qual contém atualizações e melhorias.&lt;/p&gt;

&lt;p&gt;Etapa 5.1: OpenCV 4.0.0&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget -O opencv.zip https://github.com/opencv/opencv/archive/4.0.0.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tK4l-y1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1hnuucmhd29o3sjqw00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tK4l-y1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1hnuucmhd29o3sjqw00.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Etapa 5.2: OpenCV Contrib 4.0.0&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.0.0.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JB-vLH21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ie3tg1cn2uvb4aj7xku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JB-vLH21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ie3tg1cn2uvb4aj7xku.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-6-extraindo-os-pacotes-do-opencv"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 6 - Extraindo os pacotes do OpenCV
&lt;/h3&gt;

&lt;p&gt;Para extrair os arquivos zipados, digite os comandos no terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;unzip opencv.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;E, da mesma forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;unzip opencv_contrib.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Após a extração, o terminal deverá estar da seguinte forma:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LrxLxCib--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6cfi4336m5uuzmzzt9y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LrxLxCib--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6cfi4336m5uuzmzzt9y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-7-instalando-a-biblioteca-numpy"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 7 - Instalando a biblioteca &lt;em&gt;numpy&lt;/em&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install numpy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EU-dPwwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zz55tcbyvjbowaf4zfr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EU-dPwwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zz55tcbyvjbowaf4zfr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-8-preparando-a-instala%C3%A7%C3%A3o-do-opencv"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 8 - Preparando a instalação do OpenCV
&lt;/h3&gt;

&lt;p&gt;Para realizar a instalação das bibliotecas, será preciso criar uma pasta denominada &lt;em&gt;build&lt;/em&gt; dentro da pasta &lt;em&gt;opencv-4.0.0&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;opencv&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_70KzQSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/an0nyaies07ng3f7qm8r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_70KzQSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/an0nyaies07ng3f7qm8r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aten%C3%A7%C3%A3o-%E2%9A%A0"&gt;
  &lt;/a&gt;
  Atenção ⚠
&lt;/h4&gt;

&lt;p&gt;Garantindo que o terminal esteja acessando a pasta &lt;em&gt;opencv-4.0.0/build&lt;/em&gt;, digite o seguinte comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;cmake&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;CMAKE_BUILD_TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;RELEASE&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;CMAKE_INSTALL_PREFIX&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;OPENCV_EXTRA_MODULES_PATH&lt;/span&gt;&lt;span class="o"&gt;=~/&lt;/span&gt;&lt;span class="n"&gt;opencv_contrib&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;ENABLE_NEON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ON&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;ENABLE_VFPV3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ON&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;BUILD_TESTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OFF&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;WITH_TBB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OFF&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;INSTALL_PYTHON_EXAMPLES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OFF&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="n"&gt;BUILD_EXAMPLES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;OFF&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ep4EPbkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76rmxhybsk76suo3makd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ep4EPbkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76rmxhybsk76suo3makd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se tudo estiver correto, deverá aparecer as mensagens “&lt;em&gt;Configuring done&lt;/em&gt;” e “&lt;em&gt;Generating done&lt;/em&gt;”, conforme mostrado:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y1cu7Bl7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptam7ebt23g8ok9m59dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y1cu7Bl7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ptam7ebt23g8ok9m59dw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-10-compilando-amp-instalando-a-biblioteca-opencv"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 10 - Compilando &amp;amp; Instalando a biblioteca OpenCV
&lt;/h3&gt;

&lt;p&gt;Finalmente, para compilar e instalar a biblioteca OpenCV digite o comando &lt;em&gt;make&lt;/em&gt; na pasta &lt;em&gt;opencv-4.0.0/build&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;make
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PKLkE-iA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyecaf6srdss2mgg7t3j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PKLkE-iA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dyecaf6srdss2mgg7t3j.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Esse é o passo em que você pode preparar o cafézinho, escutar o CD da Xuxa de trás pra frente ou assistir a trilogia &lt;strong&gt;inteira&lt;/strong&gt; de Senhor dos Anéis porque vai demorar horas...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl0C-r91--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31zrcgnbftdt5awl115a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl0C-r91--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31zrcgnbftdt5awl115a.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enfim, se a sua compilação for bem-sucedida, aparecerá a seguinte mensagem no terminal:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ISGji-Cl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj2okbdpdp77mzsriqvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISGji-Cl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vj2okbdpdp77mzsriqvd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-11-instalando-a-biblioteca-libopencv"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 11 - Instalando a biblioteca &lt;em&gt;libopencv&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Se você chegou até aqui (&lt;em&gt;parabéns&lt;/em&gt;), agora é imprescindível a instalação da biblioteca &lt;em&gt;libopencv&lt;/em&gt; na pasta &lt;em&gt;opencv-4.0.0/build&lt;/em&gt; usando o comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install libopencv-devpython-opencv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mks7mwxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enxunf2jde4cc8zvfel4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mks7mwxa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enxunf2jde4cc8zvfel4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-12-testando-opencv"&gt;
  &lt;/a&gt;
  &lt;br&gt;Passo 12 - Testando OpenCV
&lt;/h3&gt;

&lt;p&gt;Finalmente, para testar se a instalação foi feita corretamente, digite o comando em Python:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JFazAQ4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6e7lxyf09qpa8gh5kzmu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JFazAQ4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6e7lxyf09qpa8gh5kzmu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#se-voc%C3%AA-n%C3%A3o-encontrar-nenhum-erro-est%C3%A1-apto-a-realizar-seus-projetos-usando-a-biblioteca-opencv-no-raspberry-pi"&gt;
  &lt;/a&gt;
  Se você não encontrar nenhum erro, está apto a realizar seus projetos usando a biblioteca OpenCV no Raspberry Pi!
&lt;/h3&gt;



&lt;h4&gt;
  &lt;a href="#isso-%C3%A9-tudo-pessoal-qualquer-d%C3%BAvida-me-mande-uma-dm-no-twitter-ou-insta-lt3"&gt;
  &lt;/a&gt;
  &lt;br&gt;Isso é tudo pessoal, qualquer dúvida me mande uma dm no &lt;a href="https://twitter.com/anzolinha"&gt;Twitter&lt;/a&gt; ou &lt;a href="https://www.instagram.com/tassianzolin/"&gt;Insta&lt;/a&gt; &amp;lt;3
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdZqyMgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zlv2atqf8msjhbmdhju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdZqyMgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zlv2atqf8msjhbmdhju.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  &lt;br&gt;Referências
&lt;/h3&gt;

&lt;h6&gt;
  &lt;a href="#baggio-d-l-opencv-30-computer-vision-with-java-sl-packt-publishing-ltd-2015"&gt;
  &lt;/a&gt;
  BAGGIO, D. L. OpenCV 3.0 Computer Vision with Java. [S.l.]: Packt Publishing Ltd, 2015.
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#installing-opencv-using-cmake-in-raspberry-pi-s-l-25-mar-2021-dispon%C3%ADvel-em-httpsrobuininstallingopencvusingcmakeinraspberrypi-acesso-em-6-jul-2021"&gt;
  &lt;/a&gt;
  INSTALLING OpenCV using CMake in Raspberry Pi. [S. l.], 25 mar. 2021. Disponível em: &lt;a href="https://robu.in/installing-opencv-using-cmake-in-raspberry-pi/"&gt;https://robu.in/installing-opencv-using-cmake-in-raspberry-pi/&lt;/a&gt;. Acesso em: 6 jul. 2021.
&lt;/h6&gt;

</description>
      <category>raspberrypi</category>
      <category>opencv</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Why Every Software Engineer Should Learn Computer Architecture. </title>
      <author>Voider</author>
      <pubDate>Tue, 03 Aug 2021 20:47:56 +0000</pubDate>
      <link>https://dev.to/voider/why-everyone-software-engineer-should-learn-computer-architecture-2nb2</link>
      <guid>https://dev.to/voider/why-everyone-software-engineer-should-learn-computer-architecture-2nb2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I believe that success greatly correlates to two things, how  you see the world and how much you truly understand it. We can say the same about software engineering; where computer architecture is the very essence of software engineering, if you understand it well enough, software engineering will be a piece of cake.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-computer-architecture"&gt;
  &lt;/a&gt;
  What is Computer Architecture?
&lt;/h2&gt;

&lt;p&gt;According to Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Computer architecture is a set of rules and methods that describe the functionality, organization, and implementation of computer systems.&lt;br&gt;
Some definitions of architecture define it as describing the capabilities and programming model of a computer but not a particular implementation. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a nutshell, CA is basically the set of rules that control how hardware and software interact together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-study-computer-architecture"&gt;
  &lt;/a&gt;
  Why Study Computer Architecture?
&lt;/h2&gt;

&lt;p&gt;Computer Architecture can help you more than you think. &lt;br&gt;
For example, most F1 drivers know a lot about their car's engine, to the point they can determine any problem with their engine, even before their engineers can!&lt;/p&gt;

&lt;p&gt;They also know about Physics and Aerodynamics, hence this helps them give precise instructions to their mechanics in the Pitstop, like adjusting the nose or the wheels leading them to win more races.&lt;/p&gt;

&lt;p&gt;Well, what does all this have to do with CA? It’s the same concept! When you understand and know more about the cornerstone of Software Engineering, you know how to handle problems and achieve what you need, more efficiently.&lt;/p&gt;

&lt;p&gt;Why you should learn Computer Architecture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will likely use it for the rest of your life.&lt;/li&gt;
&lt;li&gt;Computer Architecture is one of the most fundamental subjects in Computer Science. As without computers, the field of Computer Science would not exist.&lt;/li&gt;
&lt;li&gt;You need to understand how the instructions and operations actually work and interact together, to make your software better; because whatever you do, no matter what, it is on top of CA.&lt;/li&gt;
&lt;li&gt;Computer Architecture will help you design, develop, and implement applications that are better, faster, cheaper, more efficient, and easier to use because you will be able to make informed decisions instead of guessing estimating and assuming.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#example-on-how-computer-architecture-can-affect-the-way-you-code"&gt;
  &lt;/a&gt;
  Example On How Computer Architecture Can Affect The Way You Code:
&lt;/h2&gt;

&lt;p&gt;Branch Prediction: Let's say you are on a train, your job is to observe the way and you are at a railway junction:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A-IeYOQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.ca.emap.com/wp-content/uploads/sites/9/2014/01/bigstock_railway_6220241-1024x685.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-IeYOQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.ca.emap.com/wp-content/uploads/sites/9/2014/01/bigstock_railway_6220241-1024x685.jpg" alt="Railway" title="Railway junction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have to choose a side and you don't know which side to go on; so you either choose the right path or the wrong path, if you do choose the right path you will keep going, if you choose the wrong path however, you will go back and choose the other path. So if you keep choosing the right path you won't have to go back again and if you choose the wrong path you will keep having to go back and forth,&lt;br&gt;
makes sense?&lt;/p&gt;

&lt;p&gt;Consider an if-statement: At the processor level, it is a branch instruction:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kuYFUMXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/pyfwC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kuYFUMXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/pyfwC.png" alt="code" title="Railway junction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you are a processor and you see a branch, you have no idea which path to go, so you will have to enter.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you guess right the execution will never have to stop.&lt;/li&gt;
&lt;li&gt;If you guess wrong, you spend more time going back and restarting the execution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So how do we make the better choice each time?&lt;br&gt;
We observe. If the process, usually takes left then we guess left. If it takes right most of the time, we guess right. If it alternates, then we alternate our choice as well&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-is-more-or-less-how-branch-prediction-works"&gt;
  &lt;/a&gt;
  This is, more or less, how Branch Prediction works.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Learn Computer Architecture, become a better software engineer.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Special thanks to the reviewer, Rawan Attia.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>computerscience</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
