<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to build a free plan in Laravel Spark</title>
      <author>Alejandro Akbal</author>
      <pubDate>Sun, 10 Oct 2021 11:20:23 +0000</pubDate>
      <link>https://dev.to/alejandroakbal/how-to-build-a-free-plan-in-laravel-spark-41c5</link>
      <guid>https://dev.to/alejandroakbal/how-to-build-a-free-plan-in-laravel-spark-41c5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I'm going to explain how to build a free plan for your Laravel Spark Next application.&lt;/p&gt;

&lt;p&gt;I will be using Paddle as the payment gateway, but the steps are almost identical with Stripe.&lt;/p&gt;

&lt;p&gt;Best of all? No credit card required for the free plan.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h3&gt;

&lt;p&gt;You should know that Laravel Spark is built on top of Laravel Cashier, so know that the process is very similar with both.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Laravel 8 with Spark Next&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#laravel-spark-installation"&gt;
  &lt;/a&gt;
  Laravel Spark installation
&lt;/h2&gt;

&lt;p&gt;Before starting the tutorial, you should have followed the &lt;a href="https://spark.laravel.com/docs/1.x/installation.html"&gt;official installation guide&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#laravel-spark-plan-configuration"&gt;
  &lt;/a&gt;
  Laravel Spark plan configuration
&lt;/h2&gt;

&lt;p&gt;Let's imagine that we are building a new application which offers a free plan and a paid plan.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;"Free" plan&lt;/strong&gt; will have a limit of &lt;strong&gt;1 project&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;"Paid" plan&lt;/strong&gt; will have a limit of &lt;strong&gt;5 projects&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need to configure both plans in the &lt;code&gt;config/spark.php&lt;/code&gt; file, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;

  &lt;span class="s1"&gt;'plans'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Free'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'short_description'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'This is the free plan'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="c1"&gt;// Random _(not used by other plans)_ ID&lt;/span&gt;
          &lt;span class="s1"&gt;'monthly_id'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'features'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="s1"&gt;'1 Project'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="s1"&gt;'projects'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="c1"&gt;// IMPORTANT&lt;/span&gt;
          &lt;span class="s1"&gt;'archived'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Paid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'short_description'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'This is the paid plan'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'monthly_id'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;999990&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'yearly_id'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;999991&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'yearly_incentive'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Save 20%!'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;'features'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="s1"&gt;'5 Projects'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
              &lt;span class="s1"&gt;'projects'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="s1"&gt;'archived'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the limits are actually set in the &lt;code&gt;options&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;It's important that the "Free" plan is set to &lt;code&gt;archived&lt;/code&gt; to prevent users from selecting that plan on the billing page.&lt;/p&gt;

&lt;p&gt;The "Free" plan has to have a random &lt;code&gt;monthly_id&lt;/code&gt;, so the plan can be used internally.&lt;br&gt;
&lt;em&gt;It doesn't need to be a working product ID, nor do you have to create it on Paddle/Stripe&lt;/em&gt;.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#modify-user-model"&gt;
  &lt;/a&gt;
  Modify User model
&lt;/h2&gt;

&lt;p&gt;Now that we have created a "Free" plan, we need to modify the &lt;code&gt;User&lt;/code&gt; model to add a &lt;code&gt;getPlan&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;This method will get the current users plan, &lt;strong&gt;or the "Free" plan if the user has no active plan&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getPlan&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$plan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;sparkPlan&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plan&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$plan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Fallback to "Free" plan&lt;/span&gt;
        &lt;span class="nv"&gt;$plan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Spark&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;plans&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;firstWhere&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'='&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Free'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$plan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: As mentioned in the steps before, you need to add a &lt;code&gt;monthly_id&lt;/code&gt; to the "Free" plan, otherwise it will be skipped by the &lt;code&gt;Spark::plans('user')&lt;/code&gt; call and will not be found.&lt;br&gt;
The ID can be random, don't worry.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#getting-the-users-plan"&gt;
  &lt;/a&gt;
  Getting the User's plan
&lt;/h2&gt;

&lt;p&gt;Through your application you can access a user plan and limits like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$plan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPlan&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$plan&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// "Free"&lt;/span&gt;

&lt;span class="nv"&gt;$plan&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'projects'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  End
&lt;/h2&gt;

&lt;p&gt;As you can see, what we actually do is fallback to the "Free" plan if the user has no active plan.&lt;/p&gt;

&lt;p&gt;And this plan doesn't actually go through the payment process, so you don't need to ask the users with a credit card.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selfpromotion"&gt;
  &lt;/a&gt;
  Self-promotion
&lt;/h3&gt;

&lt;p&gt;If you have found this useful, then you should follow me, I will be posting more interesting content! 🥰&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/github"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/dev.to"&gt;Dev.to&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or support me financially. 💸&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/github/sponsor"&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/liberapay"&gt;LiberaPay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/paypal"&gt;PayPal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Congratulations, today you have learned how to build a free plan in Laravel Spark.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let me know if the tutorial was useful to you in the comments!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>laravel</category>
      <category>stripe</category>
      <category>paddle</category>
    </item>
    <item>
      <title>[Golang] How to get the diagonal difference: Problem Solving</title>
      <author>kuldeep_singh</author>
      <pubDate>Sun, 10 Oct 2021 11:13:42 +0000</pubDate>
      <link>https://dev.to/mavensingh/golang-how-to-get-the-diagonal-difference-problem-solving-4mn7</link>
      <guid>https://dev.to/mavensingh/golang-how-to-get-the-diagonal-difference-problem-solving-4mn7</guid>
      <description>&lt;p&gt;Hi,&lt;br&gt;
So today we're about to cover up another problem solving question which is how we can find the diagonal difference and we are going to cover up this problem via two ways.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using Loop&lt;/li&gt;
&lt;li&gt;Using Recursive function.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's see the question first&lt;/p&gt;

&lt;p&gt;Given a matrix of n X n. The task is to calculate the absolute difference between the sums of its diagonal.&lt;/p&gt;

&lt;p&gt;Now Let's start Writing Code&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using Loop
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func DiagonalDifference(arr [][]int) int {
    d1 := []int{}
    d2 := []int{}
    d1Sum := 0
    d2Sum := 0
    for x := range arr {
        for y := range arr {
            if x == y {
                d1 = append(d1, arr[x][y])
                d1Sum += arr[x][y]
            }

            if x == len(arr)-y-1 {
                d2 = append(d2, arr[x][y])
                d2Sum += arr[x][y]
            }
        }
    }
    fmt.Println("Left Diagonal Values", d1)
    fmt.Println("Right Diagonal Values", d2)

    return int(math.Abs(float64(d1Sum) - float64(d2Sum)))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Find the code from here for recursive method:&lt;br&gt;
&lt;a href="https://kdsingh4.blogspot.com/2021/10/how-to-find-diagonal-difference.html"&gt;https://kdsingh4.blogspot.com/2021/10/how-to-find-diagonal-difference.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also Subscribe My Channel as well :)&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCXhmNqWQ50zitqIdTgS7s8Q"&gt;https://www.youtube.com/channel/UCXhmNqWQ50zitqIdTgS7s8Q&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for Reading&lt;/p&gt;

</description>
      <category>go</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>✨Top 5 resources to learn Vue.js [in no particular order]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Sun, 10 Oct 2021 10:51:11 +0000</pubDate>
      <link>https://dev.to/thenerdydev/top-5-resources-to-learn-vue-js-in-no-particular-order-1gc0</link>
      <guid>https://dev.to/thenerdydev/top-5-resources-to-learn-vue-js-in-no-particular-order-1gc0</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;I recently wrote an article where I mentioned about &lt;strong&gt;React Projects Every Beginner Should Try&lt;/strong&gt; :  &lt;strong&gt;&lt;a href="https://dev.to/thenerdydev/10-react-projects-every-beginner-should-try-fk9"&gt;https://dev.to/thenerdydev/10-react-projects-every-beginner-should-try-fk9&lt;/a&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;In this article, I will be mentioning the top 5 resources that I highly recommend if you want to learn Vue.js. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS : I am not an affiliate of any of these resources/courses. These are just some of my personal recommendations if you are looking to learn Vue.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUNV3r9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rs5mx7lw50nnb5doih3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUNV3r9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rs5mx7lw50nnb5doih3x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vue is a progressive framework for building user interfaces. Unlike other monolithic frameworks, Vue is designed from the ground up to be incrementally adoptable. The core library is focused on the view layer only, and is easy to pick up and integrate with other libraries or existing projects.&lt;/p&gt;

&lt;p&gt;Here are the top 5 recommendations (&lt;strong&gt;in no particular order&lt;/strong&gt;) of the courses that you should definitely check out for learning Vue.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-build-web-apps-with-vue-3-and-firebase-by-shaun-pelling-aka-the-net-ninja-rated-48"&gt;
  &lt;/a&gt;
  1. Build Web Apps with Vue 3 and Firebase by Shaun Pelling a.k.a The Net Ninja (rated 4.8)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YYEFDnWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yksm23nm3e4rvjtoxy08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YYEFDnWI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yksm23nm3e4rvjtoxy08.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shaun is a gifted teacher. He knows how to explain stuff in a very easy and lucid manner. This course will definitely take your knowledge to the next level if you are looking to learn this specific technology.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-is-what-this-course-covers"&gt;
  &lt;/a&gt;
  Here is what this course covers
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Learn how to create Vue 3 applications from the ground-up&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Get in-depth knowledge of Vue features like the Vue Router, Vue CLI, Options API, Composition API, Teleport etc&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Get hands-on &amp;amp; in-depth experience using the latest Vue 3 features (such as the Composition API)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Learn how to use Firebase as a back-end to your Vue applications (as a database, authentication service, hosting etc)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Build &amp;amp; deploy 4 real-world web apps with Vue &amp;amp; Firebase&lt;br&gt;
Learn how to implement an authentication system into your Vue js apps using Firebase Auth&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Become a Vue 3 ninja!&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#course-link-"&gt;
  &lt;/a&gt;
  Course Link :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/build-web-apps-with-vuejs-firebase"&gt;https://www.udemy.com/course/build-web-apps-with-vuejs-firebase&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-vuejs-the-complete-guide-by-maximilian-schwarzmuller-rated-48"&gt;
  &lt;/a&gt;
  2. Vue.js - The Complete Guide by Maximilian Schwarzmuller ( rated 4.8)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xr0Rnb4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qgtz5lqua0m9u43p58p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xr0Rnb4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qgtz5lqua0m9u43p58p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This course as the name can probably tell you covers the internals of Vue in great detail. The course starts from the very basics like What Vue.js is and how it works and later on moves to more complex and advanced topics &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#here-is-what-this-course-covers"&gt;
  &lt;/a&gt;
  Here is what this course covers
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;What is VueJS and Why would you use it?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Basics (including the basic Syntax, Understanding Templates and much more!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How to Output Reactive Data &amp;amp; Listen to Events&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Interacting with DOM (Rendering Lists, Conditionally attaching/ detaching Elements ...)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Setting up a Development Environment and Workflow&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Using Components (and what Components are to begin with)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A Deep Dive Look Behind the Scenes of Vue&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Binding to Form Inputs&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sending Http Requests to Backend APIs&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Authentication &amp;amp; Vue&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How to make your App more Beautiful with Animations and Transitions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How to create an awesome Single-Page-Application (SPA) with Routing&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How to improve State Management by using Vuex&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How to Deploy the App&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;and more ... &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#course-link-"&gt;
  &lt;/a&gt;
  Course Link :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/vuejs-2-the-complete-guide"&gt;https://www.udemy.com/course/vuejs-2-the-complete-guide&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-vue-mastery"&gt;
  &lt;/a&gt;
  3. Vue Mastery
&lt;/h2&gt;

&lt;p&gt;This is a complete path for learning Vue.js from some prominent industry experts pertaining to the technology. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7iBkN3Vx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwpv8x4jrqnpbqia7nwk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7iBkN3Vx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zwpv8x4jrqnpbqia7nwk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lD83Ak6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8udiczoslt7796a4sqz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lD83Ak6D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8udiczoslt7796a4sqz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#here-is-what-this-course-covers"&gt;
  &lt;/a&gt;
  Here is what this course covers
&lt;/h2&gt;

&lt;p&gt;Their courses are distributed in form of paths. You may want to try them out as well. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sgqZVcEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idyxx9gwu4xab3tdk9gx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sgqZVcEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idyxx9gwu4xab3tdk9gx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#course-link-"&gt;
  &lt;/a&gt;
  Course Link :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.vuemastery.com/courses"&gt;https://www.vuemastery.com/courses&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-vueschoolio"&gt;
  &lt;/a&gt;
  4. VueSchool.io
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--79BmY6U_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrm6ny7ch0fuowbfs2v0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79BmY6U_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrm6ny7ch0fuowbfs2v0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#here-is-what-this-course-covers"&gt;
  &lt;/a&gt;
  Here is what this course covers
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ATfT8_zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yr77nl1nygu7ml001ci5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ATfT8_zG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yr77nl1nygu7ml001ci5.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may want to try their complete suite of courses to enhance your Vue.js Knowledge. So down below, you can find the link for their website : &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#course-link-"&gt;
  &lt;/a&gt;
  Course Link :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://vueschool.io/courses"&gt;https://vueschool.io/courses&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#5-vuejs-documentation-a-must-thing-to-refer"&gt;
  &lt;/a&gt;
  5. Vue.js Documentation (a must thing to refer)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mxvD7Q92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kthx7hwv1dqa7ahj91kf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mxvD7Q92--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kthx7hwv1dqa7ahj91kf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#docs-link-"&gt;
  &lt;/a&gt;
  Docs link :
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://v3.vuejs.org/"&gt;https://v3.vuejs.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So this is it for this article. Thanks for reading. &lt;br&gt;
&lt;strong&gt;Don't forget to leave a like if you loved the article. Also share it with your friends and colleagues.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGpya8n1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qpl01uwp1qlmbqkhfpm.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt; - If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Jun 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;👉🏻 Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;br&gt;
👉🏻 Join our Discord Server : &lt;a href="https://discord.gg/fgbtN2a"&gt;https://discord.gg/fgbtN2a&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>vue</category>
      <category>webdev</category>
    </item>
    <item>
      <title>SoapUi Load Test reporting Dashboard </title>
      <author>Akshay C A</author>
      <pubDate>Sun, 10 Oct 2021 09:59:30 +0000</pubDate>
      <link>https://dev.to/akshayca/soapui-load-test-reporting-dashboard-2mn2</link>
      <guid>https://dev.to/akshayca/soapui-load-test-reporting-dashboard-2mn2</guid>
      <description>&lt;p&gt;In this post I'd like to show you how to create the Load Test results dashboard using plotly and Dash.&lt;br&gt;
Assuming that you use the SoapUi opensource version to run your load tests, you know there are very limited features to -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Archive the test results.&lt;/li&gt;
&lt;li&gt;Analyze how the system is performing with respect to the previous builds.&lt;/li&gt;
&lt;li&gt;Dashboard with graphical representation to show the performance of the system over time and load.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the solution which I created to overcome these limitations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Since we know a .csv file is generated with the statistics when we run the load test from the command prompt.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;I used &lt;code&gt;Python&lt;/code&gt; with &lt;code&gt;Pandas&lt;/code&gt; to filter out the unwanted data and archive the results in the database using &lt;code&gt;pymssql&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Now, I've my results archived in the database, I used the &lt;code&gt;Dash&lt;/code&gt; and &lt;code&gt;plotly&lt;/code&gt; to create a dashboard and hosted it on a server which can be accessible to the stakeholders.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#so-lets-get-started-"&gt;
  &lt;/a&gt;
  So, Let's get Started !
&lt;/h2&gt;

&lt;p&gt;Code Repository - &lt;a href="https://github.com/akshayca/SoapUiLoadTestDashboard"&gt;https://github.com/akshayca/SoapUiLoadTestDashboard&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1 - Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a runLoadTest.bat file to run all your Load Tests from command prompt&lt;br&gt;
I've used the &lt;a href="https://www.soapui.org/docs/soap-and-wsdl/"&gt;calculator&lt;/a&gt; example project.&lt;/p&gt;

&lt;p&gt;Below is the project structure, I've placed my example-soapui-project.xml in the TestCase folder -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--how7OUXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73czrcimrvivz6e03qkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--how7OUXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73czrcimrvivz6e03qkp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the execution command would look something like this -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;set projectRootFolder=C:\SoapUiLoadTest\TestCase\

&amp;gt;set ReportFoler=C:\SoapUiLoadTest\TestResults\

&amp;gt;set limit=15
&amp;gt;set thread=10

&amp;gt;loadtestrunner.bat -s"CalculatorSoap TestSuite" -c"Add TestCase"  -l"LoadTestAdd" -m%limit% -n%thread% -r -f%ReportFoler% "%projectRootFolder%example-soapui-project.xml"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the &lt;code&gt;runLoadTest.bat&lt;/code&gt;, execution will start and the reports will be generated with the current timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxTLVF8W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv8hamdarqkwtx7bd18p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxTLVF8W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv8hamdarqkwtx7bd18p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2 - Data Archiving and Reporting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a database called 'SoapUILoadTestResults' to archive the results -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zb5Q4rhN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frhbzkklrog4vfvdloky.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zb5Q4rhN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frhbzkklrog4vfvdloky.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Run the &lt;code&gt;createDashboard.py&lt;/code&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: You need to pip install all the imports used for this project and have bWLwgP.css file in the assets folder.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5WijI4-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwp3dnuiholrja7l65fs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5WijI4-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mwp3dnuiholrja7l65fs.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the execution is completed, you can the check the data archived in the database. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TUM6QVgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btywuup3ntqglld9zpps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TUM6QVgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btywuup3ntqglld9zpps.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dash will be running on &lt;a href="http://127.0.0.1:8050/"&gt;http://127.0.0.1:8050/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have enough data on your dashboard would look something like this -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ZMuoSns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xalttim6f80ip2jh0mi0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ZMuoSns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xalttim6f80ip2jh0mi0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zCYAqvMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htfnc90kb0pya7t9o4en.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zCYAqvMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htfnc90kb0pya7t9o4en.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code repository - &lt;a href="https://github.com/akshayca/SoapUiLoadTestDashboard"&gt;https://github.com/akshayca/SoapUiLoadTestDashboard&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me know if you need any help with this :)&lt;/p&gt;

</description>
      <category>loadtest</category>
      <category>soapui</category>
      <category>reporting</category>
      <category>dashboard</category>
    </item>
    <item>
      <title>Top 66  Object Oriented Programming Questions for Interviews</title>
      <author>javinpaul</author>
      <pubDate>Sun, 10 Oct 2021 09:48:31 +0000</pubDate>
      <link>https://dev.to/javinpaul/top-50-object-oriented-programming-questions-for-interviews-4po1</link>
      <guid>https://dev.to/javinpaul/top-50-object-oriented-programming-questions-for-interviews-4po1</guid>
      <description>&lt;p&gt;OOP Interview question or Object-oriented programming interview question is an integral part of any Java interview. Since Java is an Object-oriented programming language, it's expected from Java developers that he is good in Object-oriented analysis and design and familiar with essential OOP concepts like Abstraction, Encapsulation, and Polymorphism. &lt;/p&gt;

&lt;p&gt;OOP, Interview question in Java is mainly based around fundamental OOPS concepts, and How those are implemented in Java like Abstraction OOPS concept is implemented using an interface and abstract class, Encapsulation is using private keyword, etc.&lt;/p&gt;

&lt;p&gt;Question from OOP is also asked as part of the Java design pattern question on the Senior level Java interview. On Freshers and Beginners level interview, OOP Interview Questions are mostly based on fundamentals only with some tricky Java questions like Why Java doesn't support multiple inheritances, etc. &lt;/p&gt;

&lt;p&gt;In this Java article, we will see some frequently asked OOP interview questions and answers.&lt;/p&gt;

&lt;p&gt;Some question is very fundamental, and some Object-oriented programming question is difficult to answer, but this mix helps to learn more. If you love to learn more about the OOPS design principle, read &lt;a href="https://javarevisited.blogspot.com/2018/07/10-object-oriented-design-principles.html"&gt;10 OOP design principles for Java programmers&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#66-java-oop-concepts-interview-question-and-answers"&gt;
  &lt;/a&gt;
  66 Java OOP Concepts Interview Question and Answers
&lt;/h2&gt;

&lt;p&gt;without wasting any more of your time, here is my list of frequently asked Object-Oriented Programming questions for Java programmers. These questions have been collected from many Java interviews, both telephonic and face-bot-face from different levels of Java programmers.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;What is Class in Object-oriented programming? (answer)&lt;br&gt;
A class is blueprint to create objects. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is Object in OOP?&lt;a href="https://javarevisited.blogspot.com/2012/12/what-is-object-in-java-or-oops-example.html"&gt;(answer)&lt;/a&gt;&lt;br&gt;
Created from classes, represent a particular state of class. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the abstraction in Java? (&lt;a href="https://javarevisited.blogspot.com/2010/10/abstraction-in-java.html#axzz6oOeSmpNw"&gt;answer&lt;/a&gt;)&lt;br&gt;
A OOP technique to hide complexities from clients. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is Inheritance in Java? (&lt;a href="http://www.java67.com/2012/08/what-is-inheritance-in-java-oops-programming-example.html"&gt;answer&lt;/a&gt;)&lt;br&gt;
An object oriented technique to reuse code and functionalities. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is Encapsulation or data hiding in Java? (&lt;a href="https://javarevisited.blogspot.com/2012/03/what-is-encapsulation-in-java-and-oops.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is Polymorphism in Java or OOP? (&lt;a href="https://www.java67.com/2012/10/difference-between-polymorphism-overloading-overriding-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Polymorphism, Overloading, and Overriding?(&lt;a href="http://java67.blogspot.sg/2012/10/difference-between-polymorphism-overloading-overriding-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why Java doesn't support Multiple Inheritance in Java? (&lt;a href="https://javarevisited.blogspot.com/2011/07/why-multiple-inheritances-are-not.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When do you use interface and abstract class in Java?&lt;a href="https://www.java67.com/2014/06/why-abstract-class-is-important-in-java.html"&gt;(Answer)&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between static and dynamic binding in Java? (&lt;a href="http://www.java67.com/2016/08/difference-between-early-vs-late-binding-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between abstraction and polymorphism in Java?** (&lt;a href="http://java67.com/2015/05/difference-between-abstraction-and.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between the IS-A relationship and HAS-A? (answer)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why Java doesn't support operator overloading? (&lt;a href="https://javarevisited.blogspot.com/2011/08/why-java-does-not-support-operator.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is an abstract class in Java? (&lt;a href="https://www.java67.com/2017/08/difference-between-abstract-class-and-interface-in-java8.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is an interface in Java? (&lt;a href="https://javarevisited.blogspot.com/2012/04/10-points-on-interface-in-java-with.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Inheritance and Composition? (&lt;a href="http://javarevisited.blogspot.sg/2013/06/why-favor-composition-over-inheritance-java-oops-design.html#axzz57Kv4wGXe"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between coupling and cohesion? (answer)&lt;br&gt;
coupling is the dependency between different parts of code while cohesion is about same part of code. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is a constructor in Java? (&lt;a href="https://javarevisited.blogspot.com/2012/12/what-is-constructor-in-java-example-chainning-overloading.html"&gt;answer&lt;/a&gt;)&lt;br&gt;
A special construct which creates objects. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Class and Object in Java or OOP? (&lt;a href="http://www.java67.com/2014/08/what-is-difference-between-class-and-object-java-programming-oops.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Inheritance and Polymorphism in Java? (&lt;a href="https://javarevisited.blogspot.com/2020/04/difference-between-inheritance-and-Polymorphism-in-java-oop.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are SOLID Design Principles? Explain any three of them (&lt;a href="https://medium.com/javarevisited/10-oop-design-principles-you-can-learn-in-2020-f7370cccdd31"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Factory and Abstract Factory design patterns? (&lt;a href="http://javarevisited.blogspot.sg/2013/01/difference-between-factory-and-abstract-factory-design-pattern-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Overloading, hiding, shadowing and Overriding in OOP? (&lt;a href="https://www.java67.com/2019/04/difference-between-overloading-overriding-hiding-shadowing-and-obscuring-in-java-oop.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between instance and object in Java? (&lt;a href="https://draft.blogger.com/blog/post/edit/8712770457197348465/3501002046960146278#"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between static and dynamic binding in Java? (&lt;a href="https://www.java67.com/2014/11/difference-between-instance-and-object-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are SOLID Object-oriented principles?** (&lt;a href="https://dev.to/javinpaul/top-10-object-oriented-design-principles-for-writing-clean-code-4pe1"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difference between Abstract Class and Interface in Java?** (&lt;a href="https://javarevisited.blogspot.com/2013/05/difference-between-abstract-class-vs-interface-java-when-prefer-over-design-oops.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difference between private, protected, and public modifiers in Java?** (&lt;a href="https://javarevisited.blogspot.com/2012/10/difference-between-private-protected-public-package-access-java.html#axzz6j8KhisSX"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is constructor chaining? (&lt;a href="https://javarevisited.blogspot.com/2012/12/what-is-constructor-in-java-example-chainning-overloading.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difference between pass by value and pass by reference? (&lt;a href="https://javarevisited.blogspot.com/2012/12/does-java-pass-by-value-or-pass-by-reference.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difference between abstraction and encapsulation?** (&lt;a href="https://javarevisited.blogspot.com/2017/04/difference-between-abstraction-and-encapsulation-in-java-oop.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Difference between association, composition, and aggregation? (&lt;a href="https://javarevisited.blogspot.com/2014/02/ifference-between-association-vs-composition-vs-aggregation.html#axzz6uGbTSBhL"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can you explain Open Closed Design Principle?** (&lt;a href="http://javarevisited.blogspot.sg/2015/07/strategy-design-pattern-and-open-closed-principle-java-example.html#axzz5CqPlkiLV"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is an Observer design pattern? When should you use it? (&lt;a href="http://javarevisited.blogspot.sg/2011/12/observer-design-pattern-java-example.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between hiding and shadowing in OOP?** (&lt;a href="https://www.java67.com/2019/04/difference-between-overloading-overriding-hiding-shadowing-and-obscuring-in-java-oop.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can you override a static method in Java? (&lt;a href="https://www.java67.com/2012/08/can-we-override-static-method-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between state and strategy design patterns? (&lt;a href="http://javarevisited.blogspot.sg/2014/04/difference-between-state-and-strategy-design-pattern-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between a class and an instance? (&lt;a href="https://www.java67.com/2014/11/difference-between-instance-and-object-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Factory and Abstract Factory design patterns? (&lt;a href="http://javarevisited.blogspot.sg/2013/01/difference-between-factory-and-abstract-factory-design-pattern-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Dependency injection and Factory Pattern? (&lt;a href="https://javarevisited.blogspot.com/2015/06/difference-between-dependency-injection.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is method overloading in OOP or Java?** (&lt;a href="http://java67.blogspot.sg/2012/08/what-is-method-overloading-in-java-example.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the method overriding in OOP or Java?** (&lt;a href="http://java67.blogspot.sg/2012/08/what-is-method-overriding-in-java-example-tutorial.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Is Java a pure object-oriented language? if not why?** (&lt;a href="http://java67.blogspot.com/2014/03/is-java-pure-object-oriented-programming-language.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are the rules of method overloading and overriding in Java?** (&lt;a href="http://java67.blogspot.sg/2012/09/what-is-rules-of-overloading-and-overriding-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The difference between method overloading and overriding?** (&lt;a href="http://java67.blogspot.sg/2012/09/difference-between-overloading-vs-overriding-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we overload a static method in Java?** (&lt;a href="http://java67.blogspot.sg/2012/08/can-we-overload-static-method-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we override the static method in Java?** (&lt;a href="http://java67.blogspot.sg/2012/08/can-we-override-static-method-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we override a private method in Java?** (&lt;a href="http://java67.blogspot.sg/2013/08/can-we-override-private-method-in-java-inner-class.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the covariant method overriding in Java?** (&lt;a href="http://javarevisited.blogspot.com/2014/03/covariant-method-overriding-of-java-5.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we change the argument list of an overriding method?** (&lt;a href="http://javarevisited.blogspot.com/2011/08/what-is-polymorphism-in-java-example.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we override a method that throws runtime exception without throws clause?** (&lt;a href="http://javarevisited.blogspot.sg/2011/12/method-overloading-vs-method-overriding.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we override the final method in Java?** (&lt;a href="http://javarevisited.blogspot.com/2013/12/when-to-make-method-final-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the default method of Java 8?** (&lt;a href="http://javarevisited.blogspot.com/2014/07/default-defender-or-extension-method-of-Java8-example-tutorial.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is an abstract class in Java? (&lt;strong&gt;&lt;a href="http://java67.blogspot.sg/2014/06/why-abstract-class-is-important-in-java.html"&gt;answer&lt;/a&gt;&lt;/strong&gt;)**&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is an interface in Java? What is the real use of an interface?** (&lt;a href="http://java67.blogspot.sg/2014/02/what-is-actual-use-of-interface-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What are difference between Abstract class and interface?** (&lt;a href="http://java67.blogspot.sg/2012/09/what-is-difference-between-interface-abstract-class-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we make a class abstract without an abstract method?** (&lt;a href="http://javarevisited.blogspot.com/2013/04/10-abstract-class-and-interface-interview-question-java-answers.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we make a class both final and abstract at the same time?** (&lt;a href="http://javarevisited.blogspot.com/2011/12/final-variable-method-class-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can we overload or override the main method in Java?** (&lt;a href="http://java67.blogspot.com/2015/06/can-you-overload-or-override-main-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What problem is solved by the Strategy pattern in Java?** (&lt;a href="http://java67.blogspot.com/2014/12/strategy-pattern-in-java-with-sample.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Which OOP concept Decorator design Pattern is based upon?** (&lt;a href="http://java67.blogspot.com/2013/07/decorator-design-pattern-in-java-real-life-example-tutorial.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When to use the Singleton design pattern in Java?** (&lt;a href="http://java67.blogspot.com/2012/08/what-is-singleton-pattern-in-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between State and Strategy Patterns?** (&lt;a href="http://javarevisited.blogspot.com/2014/04/difference-between-state-and-strategy-design-pattern-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Association, Aggregation, and Composition in OOP?** (&lt;a href="http://javarevisited.blogspot.com/2014/02/ifference-between-association-vs-composition-vs-aggregation.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Decorator, Proxy, and Adapter patterns in Java?** (&lt;a href="http://javarevisited.blogspot.com/2015/01/adapter-vs-decorator-vs-facade-vs-proxy-pattern-java.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is the difference between Composition and Inheritance in OOP?** (&lt;a href="http://javarevisited.blogspot.sg/2015/06/difference-between-inheritance-and-Composition-in-Java-OOP.html"&gt;answer&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's all about some of the frequently asked OOP Interview Questions for Programmers. Most likely you already know answers of these fundamental Object oriented programming, design and pattern relate questions. &lt;/p&gt;

&lt;p&gt;If you don't see the links and revise those concepts. You can use this list to revise all key oop concepts before your interview. If you think a popular OOP question is missing from the list, feel free to share in comments and I will include in this list. &lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Interview Questions&lt;/strong&gt; you may like to Prepare &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  40+ Object-Oriented Interview Questions with Answers (&lt;a href="https://javarevisited.blogspot.com/2020/05/object-oriented-programming-questions-answers.html"&gt;questions&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  15 Spring Data JPA Interview Questions (&lt;a href="https://www.java67.com/2021/01/spring-data-jpa-interview-questions-answers-java.html"&gt;list&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  35 Python Interview Questions for Beginners (&lt;a href="https://javarevisited.blogspot.com/2021/05/python-interview-questions-answers-for-beginners.html"&gt;python questions&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  50+ SQL and Database Phone Interview questions (&lt;a href="https://javarevisited.blogspot.com/2021/05/sql-and-database-phone-interview-questions.html"&gt;SQL questions&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  130+ Java Interview Questions with Answers (&lt;a href="https://javarevisited.blogspot.com/2015/10/133-java-interview-questions-answers-from-last-5-years.html"&gt;list&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  17 Spring AOP Interview Questions with Answers (&lt;a href="https://javarevisited.blogspot.com/2021/03/spring-aop-interview-questions-answers.html#axzz6nwXUSoGH"&gt;list&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  20+ JUnit Interview Questions for Java developers (&lt;a href="https://javarevisited.blogspot.com/2021/04/junit-interview-questions-with-answers.html#axzz6w2HbPhVo"&gt;questions&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Dynamic Programming PRoblems for Coding interviews (&lt;a href="https://javarevisited.blogspot.com/2021/03/top-dynamic-programming-problems-for-coding-interviews.html"&gt;questions&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  25 Spring Security Interview Questions with Answers (&lt;a href="https://javarevisited.blogspot.com/2021/02/spring-security-interview-questions-answers-java.html#axzz6lIcZ8tnd"&gt;questions&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  5 Best Courses to learn Java Programming  (&lt;a href="https://javarevisited.blogspot.com/2018/05/top-5-java-courses-for-beginners-to-learn-online.html"&gt;best courses&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  20 Spring MVC Interview Questions with answers (&lt;a href="https://javarevisited.blogspot.com/2018/11/top-20-spring-mvc-interview-questions-answers-for-java-developers.html"&gt;spring questions&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you find these &lt;em&gt;Object-Oriented Programming interview questions&lt;/em&gt; useful then please share them with your friends and colleagues. If you have any questions or feedback then please drop a note.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;P. S.&lt;/strong&gt; - If you are new to object oriented programming and need some resources to learn OOP then you can also checkout these &lt;a href="https://medium.com/swlh/5-free-object-oriented-programming-online-courses-for-programmers-156afd0a3a73"&gt;free object oriented programming courses&lt;/a&gt; to start with. &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>oop</category>
      <category>development</category>
    </item>
    <item>
      <title>Button Hover Animation</title>
      <author>Coder</author>
      <pubDate>Sun, 10 Oct 2021 09:42:02 +0000</pubDate>
      <link>https://dev.to/codezhub/button-hover-animation-8oe</link>
      <guid>https://dev.to/codezhub/button-hover-animation-8oe</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/offianonymous/embed/OJjJybp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt; You Can Check Here for More: &lt;b&gt;&lt;a href="http://Codelivly.com"&gt;Codelivly.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you enjoyed this article you can &lt;/span&gt;&lt;span&gt; on &lt;a href="https://dev.to/codezhub"&gt;https://dev.to/codezhub&lt;/a&gt; where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Happy Coding..&lt;/b&gt;&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Ripple Animation on Button Click</title>
      <author>Coder</author>
      <pubDate>Sun, 10 Oct 2021 09:41:08 +0000</pubDate>
      <link>https://dev.to/codezhub/ripple-animation-on-button-click-ocb</link>
      <guid>https://dev.to/codezhub/ripple-animation-on-button-click-ocb</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/therizaldev/embed/MWmXaBR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt; You Can Check Here for More: &lt;b&gt;&lt;a href="http://Codelivly.com"&gt;Codelivly.com&lt;/a&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you enjoyed this article you can &lt;/span&gt;&lt;span&gt; on &lt;a href="https://dev.to/codezhub"&gt;https://dev.to/codezhub&lt;/a&gt; where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Happy Coding..&lt;/b&gt;&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Share a lexical analyzer implemented in JavaScript</title>
      <author>Kuper</author>
      <pubDate>Sun, 10 Oct 2021 09:00:14 +0000</pubDate>
      <link>https://dev.to/kuper/share-a-lexical-analyzer-implemented-in-javascript-5f3k</link>
      <guid>https://dev.to/kuper/share-a-lexical-analyzer-implemented-in-javascript-5f3k</guid>
      <description>&lt;p&gt;It is a lexical analyzer based on DFA that made by JS and supports multi-language extension.&lt;/p&gt;

&lt;p&gt;Project: &lt;a href="https://github.com/WGrape/lexer"&gt;https://github.com/WGrape/lexer&lt;/a&gt;&lt;br&gt;
Demo: &lt;a href="https://wgrape.github.io/lexer"&gt;https://wgrape.github.io/lexer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome~&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IX1JyA8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec2a07zufcmtdq01x7r3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IX1JyA8N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec2a07zufcmtdq01x7r3.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Golang 101: Range</title>
      <author>Aydın Yakar</author>
      <pubDate>Sun, 10 Oct 2021 08:57:58 +0000</pubDate>
      <link>https://dev.to/yakar/golang-101-range-e7l</link>
      <guid>https://dev.to/yakar/golang-101-range-e7l</guid>
      <description>&lt;p&gt;Dizi, Kesit ve Harita verilerinden &lt;code&gt;indis&lt;/code&gt;, &lt;code&gt;anahtar&lt;/code&gt; ve &lt;code&gt;değer&lt;/code&gt; çekmek için &lt;code&gt;for&lt;/code&gt;  döngüsü ile birlikte &lt;code&gt;range&lt;/code&gt; kullanılır.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"fmt"&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c"&gt;// Kesitteki Sayıları Toplama&lt;/span&gt;
    &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Toplam:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toplam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;// Değerin Indis'ini Bulmak&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Indis:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Harita'dan Anahtar/Değer Alma&lt;/span&gt;
    &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"m"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"mersin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"antalya"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s -&amp;gt; %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c"&gt;// Sadece Anahtar Verisin Almak&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Anahtar:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Toplam: 10
Indis: 2
m -&amp;gt; mersin
a -&amp;gt; antalya
Anahtar: m
Anahtar: a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://play.golang.org/p/bSXlCCrnK82"&gt;çalıştır!&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kesitteki-say%C4%B1lar%C4%B1-toplama"&gt;
  &lt;/a&gt;
  Kesitteki Sayıları Toplama
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;toplam&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;sayi&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Toplam:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;toplam&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kesitteki sayıları &lt;code&gt;range&lt;/code&gt; ile her döngü de sırayla indis (&lt;code&gt;_&lt;/code&gt;) ve deger (sayi) atamalarını yaparak toplamını buluyoruz. Indis numarasına ihtiyacımız olmadığı için &lt;code&gt;_&lt;/code&gt; boş tanımlayıcı (&lt;em&gt;blank identifier&lt;/em&gt;) kullandık.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#de%C4%9Ferin-indisini-bulmak"&gt;
  &lt;/a&gt;
  Değerin Indis'ini Bulmak
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;kesit&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;deger&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Indis:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Değeri &lt;code&gt;3&lt;/code&gt; olan değişkenin &lt;code&gt;indis&lt;/code&gt; değerini bulup yazdırıyoruz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#haritadan-anahtarde%C4%9Fer-alma"&gt;
  &lt;/a&gt;
  Harita'dan Anahtar/Değer Alma
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"m"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"mersin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"a"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"antalya"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s -&amp;gt; %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Harita dizisinden anahtar ve değeri ekrana yazdırıyoruz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anahtar-verisi-almak"&gt;
  &lt;/a&gt;
  Anahtar Verisi Almak
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="k"&gt;range&lt;/span&gt; &lt;span class="n"&gt;iller&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Anahtar:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Range&lt;/code&gt; ile tek değişken verildiğinde map'tan anahtar verisi dönmektedir.&lt;/p&gt;

</description>
      <category>go</category>
      <category>functions</category>
    </item>
    <item>
      <title>Create a menubar app for macOS, just using Python</title>
      <author>Adarsh Punj</author>
      <pubDate>Sun, 10 Oct 2021 08:49:23 +0000</pubDate>
      <link>https://dev.to/adarshpunj/create-a-menubar-app-for-macos-just-using-python-hmp</link>
      <guid>https://dev.to/adarshpunj/create-a-menubar-app-for-macos-just-using-python-hmp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;While Python is great for building a lot of things, macOS apps are certainly not one of them. I was wondering if it’s possible to build a menu bar app for macOS using Python. I found out that it’s not only possible — it’s “ridiculously uncomplicated”.&lt;/p&gt;

&lt;p&gt;In this tutorial, we’ll be building a realtime macOS app for stock prices — all using Python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hK8Gc2ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.pythongasm.com/static/src/006/stock-app.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hK8Gc2ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.pythongasm.com/static/src/006/stock-app.png" alt="Stock App"&gt;&lt;/a&gt;&lt;br&gt;
Let’s start by installing the dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rumps
requests
py2app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rumps"&gt;
  &lt;/a&gt;
  Rumps
&lt;/h2&gt;

&lt;p&gt;Rumps generates PyObjC apps (specifically menubar apps) from simple python code. To test the rumps module, run the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;menu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MenuItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Weird Menu Item"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;hello()&lt;/code&gt; function is executed when the menu item is clicked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; Hello from Weird Menu Item
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To add more menu items, we can just add more elements to the app.menu list. The argument sender represents the MenuItem that has set the callback.&lt;/p&gt;

&lt;p&gt;A cleaner way to get the same result is by using &lt;code&gt;rumps.clicked&lt;/code&gt; decorator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Weird Menu Item"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Saner Menu Item"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Hello from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will stick to the decorators approach for rest of the tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stock-price-data"&gt;
  &lt;/a&gt;
  Stock price data
&lt;/h2&gt;

&lt;p&gt;There are many sources to get stock quotes. We will be using Finnhub’s API (auth key based, free to use).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GET https://finnhub.io/api/v1/quote?symbol=AAPL&amp;amp;token=YOUR_API_KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sample response:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
   "c":119.49,
   "h":119.6717,
   "l":117.87,
   "o":119.44,
   "pc":119.21,
   "t":1605436627
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can register at &lt;a href="https://finnhub.io/register"&gt;https://finnhub.io/register&lt;/a&gt; for a free API key. At the time of writing this the rate limit is 60 requests/minute.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-the-stockapp"&gt;
  &lt;/a&gt;
  Building the StockApp
&lt;/h2&gt;

&lt;p&gt;Initiate a class named “StockApp” as a subclass of rumps.App class, and add some menu items using the rumps.clicked decorator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it’s time to integrate StockApp with Finnhub API. Let’s tweak getStock() like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://finnhub.io/api/v1/quote?symbol=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;token=YOUR_API_KEY"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;stock_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;stock_data&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;getStock()&lt;/code&gt; method updates the title when you select a stock symbol from the menu.&lt;br&gt;
However, we don’t want to get the price by a click event. We need a function to continuously update the price of the selected stock, say after every few seconds.&lt;/p&gt;

&lt;p&gt;To do this rumps has a &lt;code&gt;Timer&lt;/code&gt; class, and you can decorate a function with &lt;code&gt;rumps.timer()&lt;/code&gt; to set a timer on the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="c1"&gt;# this function is executed every 1 second
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At the launch, we can set some default menu item, say “AAPL”. This option can be changed with a click event while the timer-decorated function will keep updating the price for the currently selected menu item.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;changeStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateStockPrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="c1"&gt;# fetch stock quote and update title
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not to complicate this but since the app will be sending network requests, we’d need to handle API requests on a different thread so the app UI keeps running while the request is in process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateStockPrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# code to send API request 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it all together
&lt;/h2&gt;

&lt;p&gt;Here’s how it will look at full implementation. We have added icons, made the title more catchy, and added a functionality for user input (using rumps.Window).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;threading&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;rumps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"AAPL"&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"icon.png"&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"YOUR_API_KEY"&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Search..."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"MSFT"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"TSLA"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"NFLX"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"FB"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AAPL"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;changeStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;"Search..."&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" 🔍 &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

            &lt;span class="c1"&gt;# Launches a rumps window for user input
&lt;/span&gt;            &lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Current: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Search another stock"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;
            &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;

    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;rumps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;updateStockPrice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;thread&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;threading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://finnhub.io/api/v1/quote?symbol=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;token=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;API_KEY&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"API Error."&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="n"&gt;stock_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;current_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stock_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;previous_close&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stock_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'pc'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;current_price&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;previous_close&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;changePercentage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;previous_close&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"🔻"&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;marker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"🔺"&lt;/span&gt;

            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;" &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;marker&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;changePercentage&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;%"&lt;/span&gt;

        &lt;span class="c1"&gt;# Finnhub returns 0 for non-existent symbols
&lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ZeroDivisionError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Invalid symbol, set to AAPL"&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"AAPL"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;StockApp&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the app you will need to have an “icon.png” file in the same directory. You can download it from the links below or else just remove the icon from the program. Also, don’t forget to assign your Finnhub API key to &lt;code&gt;self.API_KEY&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Download icon.png&lt;br&gt;
Download icon.icns&lt;br&gt;
Converting it to .app&lt;br&gt;
Now that the app is ready, we just need to generate a shippable macOS app. We can use py2app to do this.&lt;br&gt;
You need to have a setup.py file in the same directory. Other than that you can also add an icon for your application. macOS app icons have the file type .icns&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;StockApp
  |__ app.py
  |__ setup.py
  |__ icon.png
  |__ icon.icns
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The setup.py file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

&lt;span class="n"&gt;APP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'app.py'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;DATA_FILES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'icon.png'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;OPTIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'argv_emulation'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'iconfile'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'icon.icns'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'plist'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'CFBundleShortVersionString'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'1.0.0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'LSUIElement'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;'packages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'rumps'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'requests'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;APP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Stock'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;data_files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DATA_FILES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'py2app'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OPTIONS&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;setup_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'py2app'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'rumps'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'requests'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally-run-the-setup"&gt;
  &lt;/a&gt;
  Finally run the setup:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python setup.py py2app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find your in the newly-created &lt;code&gt;dist&lt;/code&gt; folder. Open the app, and see it in action!&lt;br&gt;
If you are getting an error at the runtime, launch the app via terminal so you can go through the traceback.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;open Stock.App/Contents/MacOS/Stock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As we have seen it’s easy to create simple menu bar apps like this. A whole lot of things can be built on top of this as it gives you the power to trigger Python functions so easily. We can make a &lt;a href="https://github.com/adarshpunj/Musicbar"&gt;music controller&lt;/a&gt;, a server monitor, to see if a program is running, stopwatch, CPU meters, flight position trackers, Internet speed tests, just to name a few.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-readings-and-attributions"&gt;
  &lt;/a&gt;
  Further Readings and At)tributions:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/jaredks/rumps"&gt;Rumps on Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://py2app.readthedocs.io/en/latest/tutorial.html"&gt;py2app documentation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.flaticon.com/authors/freepik"&gt;Icon by Freepik&lt;/a&gt;&lt;/p&gt;

</description>
      <category>design</category>
      <category>python</category>
      <category>oop</category>
      <category>apple</category>
    </item>
    <item>
      <title>Amazing Project Management Website Design</title>
      <author>AR Jakir</author>
      <pubDate>Sun, 10 Oct 2021 08:39:52 +0000</pubDate>
      <link>https://dev.to/arjakir3/amazing-project-management-website-design-3ihi</link>
      <guid>https://dev.to/arjakir3/amazing-project-management-website-design-3ihi</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f2hFs-nQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lm1ffj10isah4zh23rpi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f2hFs-nQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lm1ffj10isah4zh23rpi.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello design lovers. Here we are with Project Management Website Design. This is a responsive Project Management Website Design. Take your Startup business website to the next level and amp up your Project Management Website Design.&lt;/p&gt;

&lt;p&gt;Let’s start building your next Project Management Website now! With this Website Design, you can build your own Website  in Figma, Sketch, and Adobe XD in less than 1 hour. It is designed with simplicity.&lt;/p&gt;

&lt;p&gt;If you need to make some edits yourself, please download the source file at the above link. For any questions about this template, please feel free to contact us.&lt;/p&gt;

&lt;p&gt;Download now: &lt;a href="https://websitemaker.app/downloads/project-management-website-design/"&gt;https://websitemaker.app/downloads/project-management-website-design/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download thousands of web templates, mobile app templates, illustrations, SVG icons, and graphic assets for Figma, Sketch, and Adobe XD. From websitemaker.&lt;/p&gt;

&lt;p&gt;websitemaker is a design resource platform for UX/UI designers, developers, and founders. Our high-quality design resources will help you to speed up the design process. Resources:&lt;/p&gt;

&lt;p&gt;1000+ Web Templates (Figma, Sketch, XD)&lt;br&gt;
 2500+ Illustrations (Figma, Sketch, XD)&lt;br&gt;
8000+ SVG Icons&lt;br&gt;
500+ Mobile App Screens (Figma, Sketch, XD)&lt;br&gt;
 100+ UI Assets for Web Application (Figma, Sketch, XD)&lt;br&gt;
We are uploading more resources every day.&lt;/p&gt;

&lt;p&gt;Note: Get Lifetime Access Only for 99$. Use “jak10” coupon for the extra 10% off.&lt;/p&gt;

&lt;p&gt;Thanks for watching.&lt;/p&gt;

</description>
      <category>webdesign</category>
      <category>webtemplate</category>
      <category>websitedesign</category>
      <category>webuidesign</category>
    </item>
    <item>
      <title>Secure Javascript Form Validation with Mootools
</title>
      <author>Syed Saadullah Shah</author>
      <pubDate>Sun, 10 Oct 2021 08:03:07 +0000</pubDate>
      <link>https://dev.to/wpsyed/secure-javascript-form-validation-with-mootools-835</link>
      <guid>https://dev.to/wpsyed/secure-javascript-form-validation-with-mootools-835</guid>
      <description>&lt;p&gt;Did I get you with the title? &lt;/p&gt;

&lt;p&gt;That's right, it's not possible to securely validate a form with Javascript. That is, you can't prevent invalid data from being submitted to the server by using Javascript for validation. We've all seen Javascript-based form validation classes (and classes for Javascript libraries like Mootools, which is my favourite, so I'll be making reference to it here), but it's all too often not made clear enough to those who might use such classes that javascript validation alone provides no security against invalid data being sent to your back-end processing script and making it into your database.&lt;/p&gt;

&lt;p&gt;Javascript is executed by the browser, not the server. It allows for all kinds of user-experience enhancements that would not be possible with server-side languages like PHP. &lt;/p&gt;

&lt;p&gt;In the context of form validation, javascript allows you to alert the user to an error in his or her input without sending all the data to the form, and presenting a list of errors to the user. This is not only a great thing in terms of convenience to the user, but it can also save you bandwidth in a significant way if you have a high-volume site. &lt;/p&gt;

&lt;p&gt;The problem with javascript validation is that it can be circumvented, which means that just as you should never trust user input without validation, you should never rely on client-side validation alone.&lt;/p&gt;

&lt;p&gt;The logical approach to validation then is to validate all your content on the server before saving it to the database. What does this mean for you if you want to also have subtle validation messages presented to the user as they fill out the form, not only at the end?&lt;/p&gt;

&lt;p&gt;Why duplicate those efforts by writing two sets of functions, one for PHP and one for Javascript?&lt;/p&gt;

&lt;p&gt;Personally I prefer to use a single set of validation functions in PHP, and modify my back-end script slightly to call them not only on a full form submit, but on individual XHR requests as well.&lt;/p&gt;

&lt;p&gt;This brief tutorial focuses on how you might structure your Javascript and PHP to create two layers of validation that rely on only one set of validation functions, allowing for the security of server-side validation with the convenience and beauty of client-side validation. &lt;/p&gt;

&lt;p&gt;Technically the validation is all happening on the back-end, we're simply adding an attractive front-end interface to it, that our users will appreciate. We're not attempting to provide complete code for form validation, instead we're offering an approach for you to build on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-build-our-form-and-php-validation"&gt;
  &lt;/a&gt;
  Step 1: build our form, and PHP validation
&lt;/h2&gt;

&lt;p&gt;HTML&lt;br&gt;
For the purpose of this demo, we use a very simple form with one text input.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"&amp;lt;form action="&amp;lt;? echo $_SERVER['PHP_SELF']; ?&amp;gt;" method="get" id="myform"&amp;gt;
    Please tell us something you like:
    &amp;lt;input type="text" name="mytext" id="mytext" value="&amp;lt;?=$form['mytext']?&amp;gt;" class="formElement &amp;lt;? if(isset($message['mytext'])){ echo "incorrect"; }; ?&amp;gt;" /&amp;gt;&amp;lt;?PHP echo '&amp;lt;span id="msg"&amp;gt;'.$message['mytext'].'&amp;lt;/span&amp;gt;'; ?&amp;gt; 
    &amp;lt;input type="submit" name="save" id="save" value="Submit" /&amp;gt;
&amp;lt;/form&amp;gt;
CSS
Two simple classes for the form element to indicate correct or incorrect status. This can be greatly beautified.

&amp;lt;style type="text/css"&amp;gt;
    .correct {
        background-color: #b3d483;
    }
    .incorrect {
        background-color: #c76760;
    }
&amp;lt;/style&amp;gt;
PHP
Very simple PHP to capture the form submit, and validate it. Since we're using one field, this is extremely basic code. In our example, it sits at the top of the same file as the form.

&amp;lt;?php
//set a default: the form is not complete
$complete = false;

if(isset($_GET['save'])){
    $form = $_GET;
    $message = validate($form);
    if(!$message['error']){
        // if no error, process the form and present a thank you message
        // set "complete" flag to true;
        $complete = true;
    }
}

function validate($form){
    $message = array();
    $message['error'] = false;
    foreach($form as $key=&amp;gt;$value){
        if($key=="mytext"){
            if(strtolower($value) != "peas"){ $message['error'] = true; $message[$key] = "&amp;amp;lt;&amp;amp;lt; Please say \"peas\""; }
            elseif(empty($value)){ $message['error'] = true; $message[$key] = "&amp;amp;lt;&amp;amp;lt; You forgot to tell us what you like!"; }
        }
    }
    return $message;
}
?&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is pretty vanilla stuff. We have a form on our page that submits to itself, runs the value of the "mytext" field through a basic validation function, and either processes the input or displays an error. If we add more fields to this, we will obviously have to add to this code to validate each one, and show a list of errors (if any) to the user when the page refreshes.&lt;/p&gt;

&lt;p&gt;Now that we have this foundation in place, we can add a little Javascript layer to run this validation on each field asynchronously when its value is changed (tab off the field, or click outside of it). Here we show each code block again, but notice the few extra lines in the HTML, PHP, and the new Javascript added.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-add-the-mootools-javascript-layer"&gt;
  &lt;/a&gt;
  Step 2: add the Mootools (Javascript) Layer
&lt;/h2&gt;

&lt;p&gt;This chunk loops through each element of class "formElement," and adds a change event which triggers the asynchronous call to our PHP script. It then interprets the result of the validation and displays a message to the user, or none if there is no error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;script type="text/javascript" src="mootools-1.2.2-core.js"&amp;gt;&amp;lt;/script&amp;gt;
var Demo = {
    start: function(){
        $$('.formElement').each(function(el){
            el.addEvent('change',function(e) {
                e.stop();
                var msg = new Element('span').injectAfter(this);
                var request = new Request({
                    url: 'demo.php',
                    link: 'chain',
                    method: 'get',
                    data: {
                        field: this.name,
                        value: this.value,
                        ajax: 1,
                        save: 1
                    },
                    onSuccess: function(response) {
                        var response = JSON.decode(response);
                        if(response.error==false){
                            $('msg').setStyle('visibility','hidden');
                            el.setProperty('class', 'formElement correct' );
                        }else{
                            $('myform').setStyle('visibility','visible');
                            $('msg').set('html',response.mytext);
                            el.setProperty('class', 'formElement incorrect' );
                        }
                    }
                }).send();
            });
        });
    }
}

window.addEvent("domready", function(){
    Demo.start();
});

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the same as the previous example, except that we add a hidden field called "ajax" (though this is a misnomer.. AJAX stands for "Asynchronous Javascript and XML", which is almost right except for the XML part... our PHP script will return JSON instead. The "ajax" value tells php whether or not it's receiving the input as an asynchronous individual field, or the whole form.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form action="&amp;lt;? echo $_SERVER['PHP_SELF']; ?&amp;gt;" method="get" id="myform"&amp;gt;
    &amp;lt;input type="hidden" name="ajax" id="ajax" value="0" /&amp;gt;
    Please tell us something you like:
    &amp;lt;input type="text" name="mytext" id="mytext" value="&amp;lt;?=$form['mytext']?&amp;gt;" class="formElement &amp;lt;? if(isset($message['mytext'])){ echo "incorrect"; }; ?&amp;gt;" /&amp;gt;&amp;lt;?PHP echo '&amp;lt;span id="msg"&amp;gt;'.$message['mytext'].'&amp;lt;/span&amp;gt;'; ?&amp;gt; 
    &amp;lt;input type="submit" name="save" id="save" value="Submit" /&amp;gt;
&amp;lt;/form&amp;gt;
CSS
This is the same as step 1

&amp;lt;style type="text/css"&amp;gt;
    .correct {
        background-color: #b3d483;
    }
    .incorrect {
        background-color: #c76760;
    }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have added a check for the value of "ajax" which tells the script how to process the input (if it's the whole form, or one field passed asynchronously. All the script needs to do if ajax=1, is output a JSON array and then stop processing, so that it doesn't also return the rest of the HTML on the page. &lt;/p&gt;

&lt;p&gt;You might choose to have your forms submit to a separate script, in which case killing the script at this point would be unneccessary. If ajax=1, the validate field now also reorganizes the submitted key and value into an array the same as a form submit would generate so that we don't have to process the input differently. You don't have to do this like this, of course.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?PHP
$complete = false;

if(isset($_GET['save'])){
    $form = $_GET;
    $message = validate($form);
    if($form['ajax']==1){
        echo json_encode($message);
        die;
    }
    if(!$message['error']){
        // if no error, process the form and present a thank you message
        $complete = true;
    }
}

function validate($form){
    $message = array();
    $message['error'] = false;
    $form = $form['ajax']==1 ? array($form['field']=&amp;gt;$form['value']) : $form;
    foreach($form as $key=&amp;gt;$value){
        if($key=="mytext"){
            if(strtolower($value) != "peas"){ $message['error'] = true; $message[$key] = "&amp;amp;lt;&amp;amp;lt; Please say \"peas\""; }
            elseif(empty($value)){ $message['error'] = true; $message[$key] = "&amp;amp;lt;&amp;amp;lt; You forgot to tell us what you like!"; }
        }
        //other fields we're validating
    }
    return $message;
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's it! With a very small amount of Mootools JS and the addition of 5 or 6 lines to the HTML and PHP, we have a smooth second layer on our validation that saves the user time and frustration if they are having trouble getting their input right.&lt;/p&gt;

&lt;p&gt;Now you a trendy front-end without sacrificing security.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
