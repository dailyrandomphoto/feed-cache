<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JavaScript weather app for absolute beginners</title>
      <author>Divyesh Kamalanaban</author>
      <pubDate>Fri, 12 Nov 2021 07:56:39 +0000</pubDate>
      <link>https://dev.to/divyeshkamalanaban/javascript-weather-app-for-absolute-beginners-3nfi</link>
      <guid>https://dev.to/divyeshkamalanaban/javascript-weather-app-for-absolute-beginners-3nfi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I know, calling APIs and fetching them can be really tough for beginners. It is an absolute pain in the neck for absolute beginners. However, I'll try to explain all about APIs through a really decent web application, a simple weather app.&lt;/p&gt;

&lt;p&gt;This may seem tough, but actually it's easier than it looks. &lt;/p&gt;

&lt;p&gt;I will be using AJAX to call APIs and fetch information from them, so this might seem outdated, but to get a good idea about API calling, this is a good way to start.&lt;/p&gt;

&lt;p&gt;You need to know some Javascript to continue with this tutorial.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-apis-actually"&gt;
  &lt;/a&gt;
  What are APIs actually?
&lt;/h2&gt;

&lt;p&gt;APIs or Application Programming Interface acts like an intermediate between server and the client that brings or &lt;em&gt;fetches&lt;/em&gt; information from the server to the client.&lt;/p&gt;

&lt;p&gt;With that data, you can create applications like a weather app, which without APIs is practically impossible. &lt;/p&gt;

&lt;p&gt;Why? Because you need to have satellites and huge amount of system to harness the information from satellites, which contain the forecast data.&lt;/p&gt;

&lt;p&gt;Now that you know what an API actually is, let's take a quick glance at what we're going to do get data today!&lt;/p&gt;

&lt;p&gt;I am not going to focus much on UI today, since it's all about logic for today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#our-agenda-for-today"&gt;
  &lt;/a&gt;
  Our Agenda for today:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Get your API key from &lt;a href="https://openweathermap.org"&gt;https://openweathermap.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Make a &lt;code&gt;XHR request&lt;/code&gt; to the &lt;a href="https://openweathermap.org"&gt;https://openweathermap.org&lt;/a&gt; server and get the JSON file.&lt;/li&gt;
&lt;li&gt;Get the required info from JSON file.&lt;/li&gt;
&lt;li&gt;Show the data to users.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I recommend you use the console for showing the data, because showing the information in screen isn't agile and effective.&lt;/p&gt;

&lt;p&gt;With that said, let's get our hands dirty.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-a-xhr-request"&gt;
  &lt;/a&gt;
  Making a XHR Request
&lt;/h2&gt;

&lt;p&gt;What on earth is XHR? XHR stands for XML HTTP Request. From the name, you can find out it's a HTTP request for XML. &lt;/p&gt;

&lt;p&gt;Irony that we're using it in Javascript? Nope.&lt;/p&gt;

&lt;p&gt;Actually, we're using AJAX method as told before. AJAX stands for Asynchronous JavaScript and XML. Since this method is used in both JS and XML, XHR request becomes relevant to JavaScript too.&lt;/p&gt;

&lt;p&gt;The thing that actually is ironical is that we're repeating the word 'Request'.&lt;/p&gt;

&lt;p&gt;Till now, you have learnt synchronous JavaScript, which executes step by step or line by line.&lt;/p&gt;

&lt;p&gt;But when it comes to APIs, you'll use asynchronous Javascript, which doesn't wait for an action or a function to get over. &lt;/p&gt;

&lt;p&gt;So, this will heavily reduce wait times, which in turn doesn't annoy the user.&lt;/p&gt;

&lt;p&gt;Coming back to the request, it is being heavily used in AJAX. You could say that XHR is a huge part of AJAX.&lt;/p&gt;

&lt;p&gt;Now, let's create a &lt;code&gt;function&lt;/code&gt; namely &lt;code&gt;getweather()&lt;/code&gt;. Pass &lt;code&gt;e&lt;/code&gt; (preferably) inside the parameters. This will be used to troubleshoot errors.&lt;/p&gt;

&lt;p&gt;Now, let's create a constant &lt;code&gt;xhr&lt;/code&gt; with value &lt;code&gt;new XMLhttpRequest()&lt;/code&gt;. the &lt;code&gt;new&lt;/code&gt; keyword is used to create an &lt;code&gt;object&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deep-dive-into-objects"&gt;
  &lt;/a&gt;
  Deep dive into Objects
&lt;/h3&gt;

&lt;p&gt;An &lt;code&gt;object&lt;/code&gt; is a data type that's used in OOP (Object Oriented Programming). Consider an &lt;code&gt;object&lt;/code&gt; like a real life object, which has properties.&lt;/p&gt;

&lt;p&gt;For example, &lt;code&gt;let car =  new object();&lt;/code&gt;. Now, let's define the properties of this object, &lt;code&gt;car&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;car.color = 'red';
car.model = 'Challenger';
car.manufacturer = 'Dodge';

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Seems easy, right? So, I correlated a real life object, which is a Dodge Challenger red car with a JavaScript Object, which has these properties of real life car defined.&lt;/p&gt;

&lt;p&gt;There are ton of use cases. Imagine you are creating a user database. There are about a 100 users. So, you can create a &lt;code&gt;people&lt;/code&gt; object to define the basic properties of your users.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function User(name, email, address){

this.name = name;
this.emailid = email;
this.address = address;

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Notice the use of &lt;code&gt;this&lt;/code&gt; keyword. The &lt;code&gt;this&lt;/code&gt; keyword refers to &lt;code&gt;User&lt;/code&gt; in this function or context. The value of &lt;code&gt;this&lt;/code&gt; keyword changes with context or the function.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What I showed you before is creating a simple object, used for generally theoretical purposes.&lt;/p&gt;

&lt;p&gt;What I showed you is a constructor function, which helps us assign the properties of &lt;code&gt;User&lt;/code&gt; to those 3 variables mentioned as parameters.&lt;/p&gt;

&lt;p&gt;So, let's create a new user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let Ken  = new User('Ken', 'ken@random.com', 'Times Square, NYC');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we've created a new user with name Ken, email '&lt;a href="mailto:ken@random.com"&gt;ken@random.com&lt;/a&gt;', and with his address as 'Times Square, NYC'.&lt;/p&gt;

&lt;p&gt;Now, we can create as many users as we want with a base &lt;code&gt;Object&lt;/code&gt; of &lt;code&gt;User&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;This forms the crux of &lt;code&gt;OOP&lt;/code&gt;, which is an important part of probably every programming language.&lt;/p&gt;

&lt;p&gt;So, this knowledge is enough to help us call APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#continuing-with-xhr"&gt;
  &lt;/a&gt;
  Continuing with XHR
&lt;/h2&gt;

&lt;p&gt;Now, let's use the &lt;code&gt;open()&lt;/code&gt; method (a function present inside an object).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xhr.open('GET', `https://api.openweathermap.org/data/2.5/weather?q=ANYCITYFORNOW&amp;amp;appid=YOURAPIKEY&amp;amp;units=metric`, true);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When it comes to APIs, there are a few methods that comes to use.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;GET&lt;/li&gt;
&lt;li&gt;PUT&lt;/li&gt;
&lt;li&gt;POST &lt;/li&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;li&gt;PATCH&lt;/li&gt;
&lt;li&gt;HEAD&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These methods refer to these 5 operations respectively.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;READ&lt;/li&gt;
&lt;li&gt;UPDATE&lt;/li&gt;
&lt;li&gt;WRITE&lt;/li&gt;
&lt;li&gt;DELETE&lt;/li&gt;
&lt;li&gt;Partial Modifications&lt;/li&gt;
&lt;li&gt;Similar to GET, but provides response without body.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We'll be using GET, because we want to just read the data and obtain it from the server.&lt;/p&gt;

&lt;p&gt;I used template literals (backticks) for the API key, more on that later.&lt;/p&gt;

&lt;p&gt;So, after this, we'll use &lt;code&gt;xhr.onload()&lt;/code&gt; method. This accepts a callback function or a function that gets executed after &lt;code&gt;xhr.onload&lt;/code&gt; is done.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;xhr.onload()&lt;/code&gt; is simple to understand: After the request is done and you get the data, what should be done.&lt;/p&gt;

&lt;p&gt;Now in this function there are 2 conditions, for which we will be using &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; statements.&lt;/p&gt;

&lt;p&gt;Take a look at this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  xhr.onload = function (data){
        if (this.status === 200){

            let response = JSON.parse(this.responseText);
            console.log (response);            
        }

        else{
            console.log('Something went wrong.'); 
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the &lt;code&gt;this.status&lt;/code&gt; is the status code server returns after the request. 200 means the request is OK, so we've used 200 here.&lt;/p&gt;

&lt;p&gt;I've passed &lt;code&gt;data&lt;/code&gt; as the argument here, just in case to troubleshoot errors. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;responseText&lt;/code&gt; is the text that server provides after our request. We've to convert it into JSON, so that we can get the required data, therefore I used &lt;code&gt;JSON.parse()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Now, you can console log the &lt;code&gt;response&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;Try running the code, and see if it works. Works? nope.&lt;/p&gt;

&lt;p&gt;We didn't send the request yet! use &lt;code&gt;xhr.send()&lt;/code&gt; after the above code.&lt;/p&gt;

&lt;p&gt;Now open the console and check if it works. It should work. If it doesn't check the API link once more and see if you have substituted the right values.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-the-required-values"&gt;
  &lt;/a&gt;
  Getting the required values
&lt;/h2&gt;

&lt;p&gt;Now getting the required values is really simple. Take a look at the JSON and see the all the values closely. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; JSON contains the current temperature, minimum temperature and maximum temperature.&lt;/p&gt;

&lt;p&gt;Let's store the temperature value in &lt;code&gt;temp&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let temp = response.main.temp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Console log it and see if it works. It works!&lt;/p&gt;

&lt;p&gt;Store the required values in respective variables and try console logging it. If all works, you have successfully done the API calling right!&lt;/p&gt;

&lt;p&gt;Now, take the input element of your webpage, and call it with its &lt;code&gt;id&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt; by &lt;code&gt;document.getElementById&lt;/code&gt; or &lt;code&gt;document.getElementByClass&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Use the value property and substitute it in the link. Template literals lets you do this by adding &lt;code&gt;${value}&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;So, we have pretty much completed the API calling!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What are the most underrated websites according to you?</title>
      <author>Rachit Khurana</author>
      <pubDate>Fri, 12 Nov 2021 07:51:56 +0000</pubDate>
      <link>https://dev.to/dilutewater/what-are-the-most-underrated-websites-according-to-you-41b</link>
      <guid>https://dev.to/dilutewater/what-are-the-most-underrated-websites-according-to-you-41b</guid>
      <description>&lt;p&gt;The internet is filled with so many websites &amp;amp; there are many hidden gems out there. &lt;br&gt;
And I love to try out new websites. &lt;br&gt;
&lt;a href="https://i.giphy.com/media/26tOYHUgZYoj2YKPe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/26tOYHUgZYoj2YKPe/giphy.gif" alt="internet_explorer_gif" width="600" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would choose &lt;strong&gt;Notion&lt;/strong&gt; to be one of the most underrated websites. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  Notion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4JIsxpPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/4/45/Notion_app_logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4JIsxpPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/4/45/Notion_app_logo.png" alt="notion_logo" width="512" height="512"&gt;&lt;/a&gt;&lt;br&gt;
Its such a useful website. Yet, most people don't use it. Its very useful for productivity. &lt;br&gt;
It has so many features. Like it replaced the need of trello for project management for me. &lt;br&gt;
The way it handles pages &amp;amp; subpages is very nice. &lt;br&gt;
And the fact that we get unlimited storage is also very nice. &lt;br&gt;
Now whenever I have to write a text document, I go to Notion instead of word/google docs. Before I always used to go to Google Docs. Even tough I don't use its API's but there are also very useful for developers. &lt;br&gt;
Most Notion features are free. But even their personal pro plan is quite cheap &amp;amp; its also free for students. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-notable-mentions"&gt;
  &lt;/a&gt;
  Other notable mentions:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Product Hunt&lt;/li&gt;
&lt;li&gt;Discord&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;li&gt;free-for.dev&lt;/li&gt;
&lt;li&gt;Dev.to&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#so-which-is-the-most-underrated-websites-according-to-you"&gt;
  &lt;/a&gt;
  So which is the most underrated websites according to you?
&lt;/h1&gt;

&lt;p&gt;What are you waiting for? write down in the comments&lt;br&gt;
I would love to hear from you &amp;amp; try out new sites. 😄&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How Negotiation Planning Works?</title>
      <author>Negotiating Wisdom</author>
      <pubDate>Fri, 12 Nov 2021 07:21:03 +0000</pubDate>
      <link>https://dev.to/negotiatingwisdom/how-negotiation-planning-works-484d</link>
      <guid>https://dev.to/negotiatingwisdom/how-negotiation-planning-works-484d</guid>
      <description>&lt;p&gt;In my previous post, I mentioned that money isn't everything in negotiation. But In this article, I am going to share with you the most useful of them all that was how &lt;a href="https://www.negotiatingwisdom.com/blog/one-minute-negotiating-planner"&gt;negotiation planning&lt;/a&gt; works?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First draw a circle about the size of a half-dollar. Out beside it, write “Ask for this.”&lt;/li&gt;
&lt;li&gt;Below that circle, draw a new circle about the size of a quarter, and write beside it “Be elated with this.”&lt;/li&gt;
&lt;li&gt;Below that second circle, draw a circle about the size of a nickel, and write “Most probable outcome.”&lt;/li&gt;
&lt;li&gt;Below that third circle, draw a circle about the size of a dime, and write “Less than hoped for, but acceptable.”&lt;/li&gt;
&lt;li&gt;And finally, below that, draw a circle about the size of an English pea, and write “Walk-away point.”&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Benefits to Hire the Right Shopify Expert Agency to Set Up Your Online Store
</title>
      <author>Harris Walker</author>
      <pubDate>Fri, 12 Nov 2021 06:56:48 +0000</pubDate>
      <link>https://dev.to/vrinsoftau1/benefits-to-hire-the-right-shopify-expert-agency-to-set-up-your-online-store-33pm</link>
      <guid>https://dev.to/vrinsoftau1/benefits-to-hire-the-right-shopify-expert-agency-to-set-up-your-online-store-33pm</guid>
      <description>&lt;p&gt;There are many things to analyze, plan, and then set up before you start the online store. The era where people prefer to shop from online stores and thus becomes more important for any business to start an online store. But it isn’t an easy task and will not be done by just creating a normal website. Whether it is a small business or a startup which at the start will be exciting but in no time it will establish a name for your brand in the market, giving all overwhelming outcomes. And thus you will need the help of Shopify experts to get that result.&lt;/p&gt;

&lt;p&gt;But the questions like why and when you should look for the Shopify experts, how to choose the right one, and who can help you grow.&lt;/p&gt;

&lt;p&gt;Who are Shopify Experts?&lt;/p&gt;

&lt;p&gt;Whatever technical support to build an online eCommerce store can be received by &lt;a href="https://www.vrinsoft.com.au/benefits-hire-right-shopify-expert-agency-set-online-store/"&gt;&lt;strong&gt;Shopify Experts Melbourne&lt;/strong&gt;&lt;/a&gt; who can help you with their expertise in the field by creating the design, development,t, and branding using proper strategies. And using their experience and expertise in the field assisting merchants with their business and creating online stores to expand more and attract more and more customers to buy from you. You can even hire a Shopify agency to build and manage your online store. Either you can go to hire different Shopify experts who have expertise in specific fields and work according to their experience in the field.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>wordpress</category>
      <category>devops</category>
    </item>
    <item>
      <title>Web Development Journey</title>
      <author>Roy Duque</author>
      <pubDate>Fri, 12 Nov 2021 04:47:54 +0000</pubDate>
      <link>https://dev.to/duquer/web-development-journey-2dph</link>
      <guid>https://dev.to/duquer/web-development-journey-2dph</guid>
      <description>&lt;p&gt;Hello my name is Roy Duque and i am from Houston Tx. I am currently a delivery driver for a small company, I have decided to make a career change simply because i love technology and i find it very interesting how computers and the web works. I have decided to blog my journey and keep track of my progress because my goal is to become a full stack developer. Welcome to my coding journey!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Server Management using Ansible Tool</title>
      <author>Daniel Pepuho</author>
      <pubDate>Fri, 12 Nov 2021 03:28:25 +0000</pubDate>
      <link>https://dev.to/danielcristho/server-management-using-ansible-tool-4dl1</link>
      <guid>https://dev.to/danielcristho/server-management-using-ansible-tool-4dl1</guid>
      <description>&lt;p&gt;Server management using Ansible tool&lt;/p&gt;

&lt;h1&gt; What is Ansible? &lt;/h1&gt;

&lt;p&gt;Ansible is an open source tool that is most used by a SysAdmin in the process of automating.&lt;/p&gt;

&lt;h1&gt; Why you should use Ansible? &lt;/h1&gt;

&lt;p&gt;Ansible is a powerful tool that you can use in the &lt;strong&gt;process of server management, configuration task, and other tasks&lt;/strong&gt;. So when you use Ansible, many process such as &lt;strong&gt;configuration or deployment an application in server will be simple and quickly&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt; Let's start!!&lt;/h3&gt;

&lt;h4&gt; install &lt;/h4&gt;

&lt;p&gt;Linux:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt install software-properties-common
$ sudo add-apt-repository --yes --update  ppa:ansible/ansible
$ sudo apt install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;coming soon&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ansible</category>
      <category>devops</category>
    </item>
    <item>
      <title>code every day with me</title>
      <author>duccanhole</author>
      <pubDate>Fri, 12 Nov 2021 03:11:17 +0000</pubDate>
      <link>https://dev.to/coderduck/code-every-day-with-me-20ga</link>
      <guid>https://dev.to/coderduck/code-every-day-with-me-20ga</guid>
      <description>&lt;h2&gt;
  &lt;a href="#day-18"&gt;
  &lt;/a&gt;
  --DAY 18--
&lt;/h2&gt;

&lt;p&gt;Hi, I am going to make #100DaysOfCode Challenge. Everyday I will try solve 1 problem from leetcode or hackerrank. Hope you can go with me until end.&lt;br&gt;
&lt;strong&gt;Now let's solve problem today:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Problem: Best Time to Buy and Sell Stock&lt;/li&gt;
&lt;li&gt;Detail: &lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;My solution(javascript):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var maxProfit = function(prices) {
    let profit=0,buy=100000;
    for(let x of prices){
        if(x&amp;lt;buy) buy=x;
        if(x-buy&amp;gt;profit) profit=(x-buy);
    }
    return profit;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;--&amp;gt;&lt;em&gt;If you have better solution or any question, please comment below. I will appreciate.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>100daysofcode</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>100 días de código: 9, repaso de comandos y git</title>
      <author>Daro</author>
      <pubDate>Fri, 12 Nov 2021 01:15:15 +0000</pubDate>
      <link>https://dev.to/darito/100-dias-de-codigo-9-repaso-de-comandos-y-git-3h6d</link>
      <guid>https://dev.to/darito/100-dias-de-codigo-9-repaso-de-comandos-y-git-3h6d</guid>
      <description>&lt;p&gt;¡Hey hey hey!&lt;/p&gt;

&lt;p&gt;Hoy es un nuevo día y con ello comienzan nuevos retos, esta vez realizare esto rápido ya que a pesar de que avance bastante en mis proyectos no me di cuenta del tiempo que paso. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ayer"&gt;
  &lt;/a&gt;
  Ayer:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Avance un poco en la guia &lt;a href="https://www.theodinproject.com/"&gt;The odin Project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Instale linux Ubuntu y configure varias particiones necesarias para el curso mencionado arriba.&lt;/li&gt;
&lt;li&gt;Aprendí sobre la diferencia de particiones GPT y MBR asi como que son Bios y UEFI.&lt;/li&gt;
&lt;li&gt;Domine la herramienta rufus (algo mas para añadir al curriculum).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hoy"&gt;
  &lt;/a&gt;
  Hoy:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Avance hasta la sección de Fundamentos de HTML en &lt;a href="https://www.theodinproject.com/"&gt;The odin Project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Aprendí a agregar una clave ssh a mi cuenta de github.&lt;/li&gt;
&lt;li&gt;Realice una instalación y configuracion de git en linux.&lt;/li&gt;
&lt;li&gt;Cree un proyecto de ejemplo en github y realice cambios.&lt;/li&gt;
&lt;li&gt;Aprendí que la mejor forma de hacer una explicación de los cambios en una confirmación (commit) es escribirlo de forma imperativa.&lt;/li&gt;
&lt;li&gt;Volví a aprender los comandos basicos de linux como &lt;code&gt;pwd&lt;/code&gt;, &lt;code&gt;touch&lt;/code&gt;, &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt; entre otros.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y eso es todo por hoy.&lt;br&gt;
Espero que les vaya super bien y que tengan éxito con sus proyectos. &lt;br&gt;
Chao mundo!&lt;/p&gt;

</description>
      <category>spanish</category>
      <category>100daysofcode</category>
      <category>git</category>
      <category>linux</category>
    </item>
    <item>
      <title>Day 6 of #100daysofcode: Styling and styling</title>
      <author>Ryan Whelchel</author>
      <pubDate>Fri, 12 Nov 2021 00:51:45 +0000</pubDate>
      <link>https://dev.to/rydwhelchel/day-6-of-100daysofcode-styling-and-styling-64i</link>
      <guid>https://dev.to/rydwhelchel/day-6-of-100daysofcode-styling-and-styling-64i</guid>
      <description>&lt;p&gt;Nothing exciting today. I did not have much time to really work today between meetings, tutoring and assignments. There will be better updates in a few days. I plan on starting my &lt;a href="https://dev.to/rydwhelchel/discussion-on-learning-memorization-reviewing-and-an-app-to-tie-it-all-together-1e3g"&gt;real project&lt;/a&gt; in around a week, so the restructuring and styling of the song app will be finished by then.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;As I said yesterday, I decided to walk through a video tutorial on grid and it helped much more than trying to fumble around with cheatsheet. With front-end development, I'm finding more and more that I need to see things getting created with React and CSS to really understand it. With other concepts, it's easier to apply book knowledge. Going forward I think I will spend more time on videos and viewing other's projects and less on trying to learn via APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tomorrow"&gt;
  &lt;/a&gt;
  Tomorrow
&lt;/h2&gt;

&lt;p&gt;Tomorrow I will start the &lt;em&gt;finishing&lt;/em&gt; process of restructuring my song app. I'll review the styling specs of the assignment and start fitting what I've learned into it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-im-struggling-on"&gt;
  &lt;/a&gt;
  What I'm Struggling on
&lt;/h2&gt;

&lt;p&gt;I talked about it yesterday as well, but I really feel that front-end design (or even design in general) is a weakness of mine. Given that personal projects tend to be full-stack, I think it is great that I'm tackling it now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=RhUuMl3R1PE"&gt;CSS Grid Tutorial - Dev Dreamer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>react</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Research study: How C# developers adopt new language features?</title>
      <author>volodymyr-havryliuk</author>
      <pubDate>Fri, 12 Nov 2021 00:30:31 +0000</pubDate>
      <link>https://dev.to/volodymyrhavryliuk/research-study-how-c-developers-adopt-new-language-features-2onl</link>
      <guid>https://dev.to/volodymyrhavryliuk/research-study-how-c-developers-adopt-new-language-features-2onl</guid>
      <description>&lt;p&gt;Are you a C# programmer? Do you improve the way you code? Regardless if you feel comfortable with trying new things or you rather prefer to work what you already know and have mastered, it is you we are lookng for!&lt;/p&gt;

&lt;p&gt;C# is one of the fastest developing mainstream programming languages. Its new revisions deliver new features that help programmers in writing more concise and more expressive code. However, we see that not all new features are used in the same way. We want to understand how these features are adopted by developers in practice, what are the drivers that motivate them to do so, and which personal or professional traits could be associated with it. &lt;/p&gt;

&lt;p&gt;Our research project comprises three steps:&lt;br&gt;
(i) automated analysis of several github repositories, to retrieve instances of the new features and provide quantitative data about their adoption&lt;br&gt;
(ii) survey aimed at C# developers, to understand who they are and  their motivations for adopting new features in their professional activities&lt;br&gt;
(iii) in-depth interviews (30 mins) with some of the survey respondents, to discuss some specific apsects of their decisions&lt;/p&gt;

&lt;p&gt;We invite you to fill the survey; if you would like to participate in the interview, please leave your email address in the survey form.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://forms.gle/Tw4dbNWDQSqodTfN9"&gt;https://forms.gle/Tw4dbNWDQSqodTfN9&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Many thanks in advance for your help and contribution!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>P-PL.com - Python Multiple Choice Quiz: Just how Well Do YOU Know Python?</title>
      <author>Lambda Technology Inc</author>
      <pubDate>Thu, 11 Nov 2021 22:43:16 +0000</pubDate>
      <link>https://dev.to/tgrimes/p-plcom-python-multiple-choice-quiz-just-how-well-do-you-know-python-1ph1</link>
      <guid>https://dev.to/tgrimes/p-plcom-python-multiple-choice-quiz-just-how-well-do-you-know-python-1ph1</guid>
      <description>&lt;p&gt;P-PL is a place where teachers and students, experts and beginners, freelancers and customers can come together to collaborate on software development.&lt;/p&gt;

&lt;p&gt;Currently, were are seeking experts in the languages of Python and JavaScript.&lt;/p&gt;

&lt;p&gt;Just how well do YOU know Python? Take our little 5 question quiz to find out… &lt;a href="https://bit.ly/31J77X4"&gt;https://bit.ly/31J77X4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At its core, p-pl.com is a network of experts willing to connect over video chat.&lt;/p&gt;

&lt;p&gt;As a user, you have access to video chat anyone at anytime given their schedule and expertise you are looking for.&lt;/p&gt;

&lt;p&gt;Whether you are a software engineer looking for help on a bug or a life coach advising clients on their next big move, p-pl.com is the solution for convenient quality information.&lt;/p&gt;

&lt;p&gt;As an expert and consultant, you have the option to bill for your time and expertise for every call you accept. It is YOUR time, why not get paid?&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Adding dark mode to the personal website template</title>
      <author>Simon MacDonald</author>
      <pubDate>Thu, 11 Nov 2021 22:30:35 +0000</pubDate>
      <link>https://dev.to/begin/adding-dark-mode-to-the-personal-website-template-3848</link>
      <guid>https://dev.to/begin/adding-dark-mode-to-the-personal-website-template-3848</guid>
      <description>&lt;p&gt;Dark Mode is a popular feature of many websites. It helps to reduce eye strain by adjusting the brightness of the screen according to current lighting conditions.&lt;/p&gt;

&lt;p&gt;In this post, we will progressively enhance our personal website template to add dark mode functionality. If you don't already have a website deployed via &lt;a href="https://begin.com"&gt;Begin&lt;/a&gt; follow our &lt;a href="https://docs.begin.com/en/guides/personal-website"&gt;personal website tutorial&lt;/a&gt; to deploy the template in 5 minutes, then come back here and get ready to enhance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N0oLYSe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srb3ja7ll938amw0ttie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N0oLYSe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srb3ja7ll938amw0ttie.png" alt="Enhance" width="580" height="326"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#detecting-dark-mode-using-media-query"&gt;
  &lt;/a&gt;
  Detecting dark mode using media query
&lt;/h2&gt;

&lt;p&gt;Luckily CSS has a &lt;code&gt;prefers-color-scheme&lt;/code&gt; media query that can detect user’s system color scheme preferences without using JavaScript. The property can have a return value of light, dark or, no preference.&lt;/p&gt;

&lt;p&gt;Let's add some CSS to adjust the background and text colors to match the user’s preference. Open up the &lt;code&gt;src/views/styles.js&lt;/code&gt; file and add the following code above the body selector.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* src/views/styles.js */&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prefers&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;light&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;FFFFFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prefers&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;scheme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run &lt;code&gt;npm start&lt;/code&gt; from your command line and visit &lt;code&gt;https://localhost:3333&lt;/code&gt; in your browser. The background color will change to match the preferred color scheme. To test light and dark modes without modifying system preferences, you can use the &lt;em&gt;emulate CSS media feature&lt;/em&gt; in popular browsers like &lt;a href="https://developer.chrome.com/blog/new-in-devtools-79/"&gt;Chrome&lt;/a&gt; or &lt;a href="https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Examine_and_edit_CSS#view_media_rules_for_prefers-color-scheme"&gt;Firefox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d5dIIbsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2zs2vcoxahfk494aq9z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d5dIIbsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2zs2vcoxahfk494aq9z.png" alt="Light and Dark Modes" width="880" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#allowing-users-to-toggle-dark-mode"&gt;
  &lt;/a&gt;
  Allowing users to toggle dark mode
&lt;/h2&gt;

&lt;p&gt;The above solution is satisfactory if all we want to do is swap modes based on the OS preference, but we want to allow users to select which mode the site will use. To add this interactivity, we will need to modify the CSS we just added to remove the media query and instead key off of the &lt;code&gt;data-theme&lt;/code&gt; attribute of the HTML tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* src/views/styles.js */&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;FFFFFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to add interactivity we'll add new component called &lt;code&gt;toggle-button.js&lt;/code&gt; in &lt;code&gt;src/views&lt;/code&gt; to represent the toggle button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/views/toggle-button.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ToggleButton&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`
&amp;lt;button
  class="
    display-inline-flex
    align-items-center
    padding-top-16
    padding-right-32
    padding-bottom-16
    padding-left-32
    margin-right-18
    margin-bottom-16
    font-size-18
    font-weight-300
    text-decoration-none
    color-FFFFFF
    border-radius-pill
    background-color-045C9C
    background-color-hover-058AEA
    transition-background-color
  "
  id="toggle-button"
&amp;gt;

  Toggle Light/Dark mode!
&amp;lt;/button&amp;gt;
  `&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll add the toggle button to our layout by modifying the &lt;code&gt;src/views/content.js&lt;/code&gt; file. First require the toggle button component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/views/content.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ToggleButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./toggle-button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the toggle button to the layout. For the example, I've added it between the &lt;code&gt;MailLink&lt;/code&gt; and &lt;code&gt;SocialMedia&lt;/code&gt; components around line 81 to have it front and center for this demo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/views/content.js&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;MailLink&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;email&lt;/span&gt;
&lt;span class="p"&gt;})}&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ToggleButton&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;SocialMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;twitter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;linkedin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;instagram&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;facebook&lt;/span&gt;
&lt;span class="p"&gt;})}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we'll need to add some client side JavaScript to handle the toggling of light and dark modes. So, we'll need to create a new file in &lt;code&gt;public&lt;/code&gt; called &lt;code&gt;index.js&lt;/code&gt; with the contents below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// public/index.js&lt;/span&gt;
&lt;span class="cm"&gt;/* eslint-env browser */&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;themeButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toggle-button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(prefers-color-scheme: dark)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentTheme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;themeButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggleTheme&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;targetTheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentTheme&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data-theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;targetTheme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;targetTheme&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's explain what's going on in the code above.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We're using the &lt;code&gt;document.getElementById&lt;/code&gt; method to get a reference to the toggle button.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;localStorage.getItem&lt;/code&gt; method is used to get the current theme from the local storage. If there is no theme in the local storage, we’ll set the current theme to &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;dark&lt;/code&gt;, depending on the user’s preference.&lt;/li&gt;
&lt;li&gt;Then we'll set the &lt;code&gt;data-theme&lt;/code&gt; attribute of the HTML tag to the current theme using the &lt;code&gt;document.documentElement.setAttribute&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;Finally, we register an event handler for our toggle button which will toggle the theme when clicked and update local storage.&lt;/li&gt;
&lt;li&gt;All of this is wrapped in an &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE"&gt;Immediately Invoked Function Expression (IIFE)&lt;/a&gt; to prevent a flash of color when the page loads with the incorrect theme.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then we need to load our new JS file when the page loads. We can do this by adding the following code to the &lt;code&gt;src/views/main.js&lt;/code&gt; file. First, require the &lt;code&gt;@architect/functions&lt;/code&gt; module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/views/main.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@architect/functions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Second, add a script tag just above the body tag. We'll use &lt;code&gt;arc.static&lt;/code&gt; method to get the correct path to the &lt;code&gt;public&lt;/code&gt; directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/views/main.js&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;${arc.static('index.js', {stagePath: false})}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;crossorigin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can reload the page and the toggle button will be active.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N5XjZeUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.begin.com/_static/post-assets/toggle-light-dark-0bc1d9f85c.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N5XjZeUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.begin.com/_static/post-assets/toggle-light-dark-0bc1d9f85c.webp" alt="Toggle Light and Dark Modes" width="880" height="707"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;I'm sure you noticed that we only changed the site's background color when we toggle between light and dark mode. The next step would be to extract all of the colors used on the site into CSS variables. Then when we toggle between color modes, the entire site updates accordingly. We'll leave that up to you to figure out, but if you want a hint, check out what we did over on the &lt;a href="https://github.com/architect/arc.codes/commit/92fc9687ea28f602df2210ed106b3982f8482a3f"&gt;arc.codes website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to pull down a working example of the above code, you can check out the &lt;a href="https://github.com/macdonst/simons-personal-website/tree/dark"&gt;dark branch&lt;/a&gt; of this &lt;a href="https://github.com/macdonst/simons-personal-website"&gt;repository&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
