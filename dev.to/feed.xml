<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Joining the DEV Team (again)!</title>
      <author>Brian Bethencourt</author>
      <pubDate>Mon, 24 Jan 2022 22:08:23 +0000</pubDate>
      <link>https://dev.to/devencourt/joining-the-dev-team-again-2fp4</link>
      <guid>https://dev.to/devencourt/joining-the-dev-team-again-2fp4</guid>
      <description>&lt;p&gt;Hey again, all! &lt;/p&gt;

&lt;p&gt;If you frequent DEV Community or have ordered from our shop, you have likely seen me around. I originally joined the DEV Team in June of 2019 as a Business Development and Growth Intern. Although I had been an intern for some time, my colleagues have always respected me as a significant part of the team through-and-through. &lt;/p&gt;

&lt;p&gt;Two-and-a-half years later, I graduated from The College of New Jersey with my Bachelor's in English. &lt;strong&gt;Now, I'm becoming a part of the DEV Team full-time as a Developer Marketing Associate&lt;/strong&gt;! It's a really exciting change and I'm looking forward to every part of it. &lt;/p&gt;

&lt;p&gt;Between work and school, I have not had a lot of time to improve my programming skills and engage with the community on a personal level. I hope to change this over the course of the next few months. I'm certain you will all be seeing more of me as I tackle this new position. Wish me luck!&lt;/p&gt;

&lt;p&gt;If you have any questions or comments — or just want to chat — don't hesitate to reach out! Shoot me an email or a DM on the DEV Community Discord (Where I'll be waaaaay quicker to respond to you. &lt;a href="https://discord.gg/rxVwWrR8jb"&gt;Join&lt;/a&gt; if you haven't yet!). &lt;/p&gt;

</description>
      <category>meta</category>
      <category>career</category>
      <category>personal</category>
    </item>
    <item>
      <title>Hooks - useEffect e personalizados</title>
      <author>Gabriel_Silvestre</author>
      <pubDate>Mon, 24 Jan 2022 21:12:18 +0000</pubDate>
      <link>https://dev.to/gabrielhsilvestre/hooks-useeffect-e-personalizados-2ol5</link>
      <guid>https://dev.to/gabrielhsilvestre/hooks-useeffect-e-personalizados-2ol5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#useeffect"&gt;
  &lt;/a&gt;
  useEffect
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#o-que-%C3%A9"&gt;
  &lt;/a&gt;
  O que é?
&lt;/h3&gt;

&lt;p&gt;É uma função nativa do React adicionada na versão 16.8.0, popularmente conhecida como hook de efeito. É uma funcionalidade recente, logo códigos legados normalmente ainda não a utilizam.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#o-que-faz"&gt;
  &lt;/a&gt;
  O que faz?
&lt;/h3&gt;

&lt;p&gt;Funciona de forma similar aos &lt;em&gt;life cycle methods&lt;/em&gt; dos componentes de classe, ou seja, executa trechos de código após o componente ser montado, sofrer atualizações e/ou ser desmontado.&lt;/p&gt;

&lt;p&gt;O &lt;code&gt;useEffect()&lt;/code&gt; foi criado justamente para permitir que componentes funcionais pudessem ter acesso aos métodos de ciclo de vida dos componentes de classe, sendo assim, &lt;strong&gt;esse hook pode ser comparado a um compilado de todos os métodos em uma única função&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sintaxe"&gt;
  &lt;/a&gt;
  Sintaxe
&lt;/h3&gt;

&lt;p&gt;O &lt;code&gt;useEffect()&lt;/code&gt; possui diversas peculiaridades em sua sintaxe que alteram seu comportamento, porém sua &lt;strong&gt;estrutura mais básica consiste em uma função que pode receber até dois parâmetros&lt;/strong&gt;, sendo o primeiro uma callback e o segundo um Array de controle.&lt;/p&gt;

&lt;p&gt;A callback será a função a ser executada sempre que o efeito executado corresponder ao efeito esperado. &lt;strong&gt;Definimos o efeito que acionará a callback através do segundo parâmetro&lt;/strong&gt;, o Array de controle, nele iremos passar todos os estados a serem monitorados, assim sempre que o estado monitorado sofrer um efeito, o &lt;code&gt;useEffect()&lt;/code&gt; será disparado.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;useEffect(() =&amp;gt; {});
useEffect(() =&amp;gt; {}, []);
useEffect(() =&amp;gt; {}, [someVariable, otherVariable, anotherVariable]);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#useeffect-gt-life-cycle-methods"&gt;
  &lt;/a&gt;
  useEffect &amp;gt; Life Cycle Methods
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#componentdidmount"&gt;
  &lt;/a&gt;
  componentDidMount
&lt;/h3&gt;

&lt;p&gt;Para criarmos um &lt;code&gt;useEffect()&lt;/code&gt; com funcionalidade similar ao &lt;code&gt;componentDidMount()&lt;/code&gt; devemos passar um Array vazio como segundo parâmetro, assim a callback só será disparada uma única vez, quando o componente for montado.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;useEffect(() =&amp;gt; {}, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#componentdidupdate"&gt;
  &lt;/a&gt;
  componentDidUpdate
&lt;/h3&gt;

&lt;p&gt;Essa é a funcionalidade padrão do &lt;code&gt;useEffect()&lt;/code&gt;, se chamarmos o hook sem passarmos o Array de controle, a callback será disparada sempre que uma alteração ocorrer, o que pode gerar perda de performance, além de loops infinitos.&lt;/p&gt;

&lt;p&gt;Outra forma de “simularmos” o &lt;code&gt;componentDidUpdate()&lt;/code&gt; é passarmos o estado que gostaríamos que fosse monitorado como valor do nosso Array de controle, assim a callback somente será disparada quando o estado, definido por nós, sofrer alteração.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;useEffect(() =&amp;gt; {});
useEffect(() =&amp;gt; {}, [someVariable]);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lembrando que nunca podemos alterar o estado que está sendo monitorado através da callback do &lt;code&gt;useEffect()&lt;/code&gt;, pois isso gerará um loop infinito.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#componentwillunmount"&gt;
  &lt;/a&gt;
  ComponentWillUnmount
&lt;/h3&gt;

&lt;p&gt;Diferente dos outros métodos de ciclo de vida, esse não tem relação com o Array de controle, tudo que precisamos fazer é &lt;strong&gt;retornar uma função dentro da callback do &lt;code&gt;useEffect()&lt;/code&gt;&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;useEffect(() =&amp;gt; {
  return () =&amp;gt; {}
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#hooks-customizados"&gt;
  &lt;/a&gt;
  Hooks Customizados
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#o-que-%C3%A9"&gt;
  &lt;/a&gt;
  O que é?
&lt;/h3&gt;

&lt;p&gt;São funções criadas por nós que tem como diferencial atuarem como hooks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#o-que-faz"&gt;
  &lt;/a&gt;
  O que faz?
&lt;/h3&gt;

&lt;p&gt;Os hooks customizados servem para encapsular e permitir a reutilização da lógica, assim como funções puras. Logo seu uso é incentivado, sendo inicialmente difícil saber quando devemos customizar um hook, mas a regra em geral é a mesma que para funções:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"A lógica se repete várias vezes em diferentes componentes? Então é uma boa ideia personalizar o hook.”&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sintaxe"&gt;
  &lt;/a&gt;
  Sintaxe
&lt;/h3&gt;

&lt;p&gt;Por se tratar de algo &lt;em&gt;“customizável”&lt;/em&gt; sua sintaxe é muito volátil e varia de acordo com o objetivo do hook. Porém sua sintaxe mais básica é constituída de pelo menos um &lt;code&gt;useState()&lt;/code&gt; e um &lt;code&gt;useEffect()&lt;/code&gt;, sendo que, o retorno desse tipo de hook deve conter todas as informações que desejamos reutilizar, isso inclui a informação para leitura, bem como a função para modificação dessa informação.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function useHookCustomizada(defaultValue) {
  const [data, setData] = useState(defaultValue);
  const [loading, setLoading] = useState(false);

  const getData = async () =&amp;gt; {
    const res = await fetch('url');
    const data = await res.json();
    setData(data);
  }

  useEffect(() =&amp;gt; {
    setLoading(true);
    getData();
    setLoading(false);
  }, []);

  return data;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No exemplo acima temos um hook customizado genérico, onde será feito uma requisição a uma API qualquer e os dados retornados serão disponibilizados.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>How to bootstrap your first developer conference</title>
      <author>Vincent</author>
      <pubDate>Mon, 24 Jan 2022 21:07:24 +0000</pubDate>
      <link>https://dev.to/vinckr/how-to-bootstrap-your-first-developer-conference-45mp</link>
      <guid>https://dev.to/vinckr/how-to-bootstrap-your-first-developer-conference-45mp</guid>
      <description>&lt;p&gt;We were stoked to pull off the first Ory Summit in October 2021, bringing&lt;br&gt;
together an all-star group of developers who presented on the diverse ways in which they use Ory open source products. We bootstrapped the two-day Ory Summit with a core team of three people, supported by the rest of Ory, plus the presenters, members of our open source community who were generous with their time and energy.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All Ory Summit 2021 presentations can be watched again &lt;a href="https://www.ory.sh/summit/2021/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Normally such events are executed with three times the amount of resources and&lt;br&gt;
time, so we had to find an efficient framework for making our first conference a&lt;br&gt;
success. In retrospect, we learned loads about how to run a live digital event&lt;br&gt;
for developer communities, and that’s what we want to share in this article.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-we-held-the-summit"&gt;
  &lt;/a&gt;
  Why we held the Summit
&lt;/h3&gt;

&lt;p&gt;Digital human communities usually center around recurring events that bring them&lt;br&gt;
together in one place to share a communal spirit, exchange ideas, and get to&lt;br&gt;
know each other. The Ory Summit is the first recurring event for the Ory&lt;br&gt;
Developer Community.&lt;/p&gt;

&lt;p&gt;Ory services provide free and open identity infrastructure for a lot of different platforms – examples include an Anime media aggregator called &lt;a href="https://www.ory.sh/summit/2021/google-iam-from-scratch/"&gt;Animeshon&lt;/a&gt;, or &lt;a href="https://www.ory.sh/summit/2021/self-service-oidc-terraform-hydra/"&gt;SumUp&lt;/a&gt;, a payments company specializing in solutions for small businesses. We thought our developer community would enjoy more opportunities to share the challenges and solutions that arise as they integrate Ory services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-you-want-to-bootstrap-a-developer-conference"&gt;
  &lt;/a&gt;
  So you want to bootstrap a developer conference?
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-the-basics"&gt;
  &lt;/a&gt;
  1. The Basics
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Know your audience&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is hard to overstate how important this is. If you know your audience well,&lt;br&gt;
  you'll understand what they expect from a community event and how to reach and&lt;br&gt;
  engage them best. If you lack a clear picture of who your audience is, you may&lt;br&gt;
  cast the net too wide. Ask yourself: Do you want to organize an event for a&lt;br&gt;
  wide audience or the members of your community?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Good internet connection&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is self-explanatory. If your internet connection is not tailored to&lt;br&gt;
  support high-quality streaming, you'll have a bad time. 4-5mb/s up speed&lt;br&gt;
  should be the minimum to stream in decent quality; more is better!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Keep it simple&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't overcomplicate the event. In practice, this means you have to cut&lt;br&gt;
  certain activities/parts of the event. If a half-comatose person can follow&lt;br&gt;
  your event proceedings, organization, and planning: you're doing it right. If&lt;br&gt;
  people need a half-hour introduction into how everything works and they still&lt;br&gt;
  don't get it, you have a problem, officer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-the-stack"&gt;
  &lt;/a&gt;
  2. The Stack
&lt;/h4&gt;

&lt;p&gt;If you have nothing but the basics mentioned before and some frontend skills, we&lt;br&gt;
recommend the following for your tech stack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/vercel/virtual-event-starter-kit"&gt;Vercel Event Frontend&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Youtube  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's &lt;a href="https://www.youtube.com/howyoutubeworks/product-features/live/"&gt;free and easy&lt;/a&gt; to stream on Youtube, performance is good, and it's unlikely that your stream goes down. Plus, most people know the platform.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chat
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use Slack for chats. Discord is also an option, plus a myriad of other chat apps. If you already have a chat platform for your community, just use that!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authentication
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=2ahUKEwj_gMPU8pf1AhXFSPEDHRbtDuYQFnoECAQQAQ&amp;amp;url=https%3A%2F%2Fdeveloper.github.com%2Fv3%2Foauth%2F&amp;amp;usg=AOvVaw31cUSXVzUYgKV4rCtWdwe3"&gt;GitHub OAuth&lt;/a&gt;. Most developers have a GitHub account. If you want an email/password option and more control, we recommend using &lt;a href="https://console.ory.sh/"&gt;Ory Cloud&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-the-preparation"&gt;
  &lt;/a&gt;
  3. The Preparation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Prepare talks, workshops and find speakers:
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This could be an article by itself so we'll keep it brief. Since you have&lt;br&gt;
  clearly defined your goals and audience for the conference, finding suitable&lt;br&gt;
  topics, workshops and speakers should come naturally. Keep your eye out for&lt;br&gt;
  opportunities; talk to your team, users, top community members, and&lt;br&gt;
  grandmother about presenting, organizing a workshop, or managing a Q&amp;amp;A&lt;br&gt;
  session. You may also want to publish a "Call For Papers". A CFP describes the&lt;br&gt;
  themes, topics, and formalities of the conference and lists important&lt;br&gt;
  information such as deadlines or the format of submissions.&lt;/p&gt;

&lt;p&gt;Once we had all the speakers, workshops, and sessions lined up, we sent out a&lt;br&gt;
  "Speakers Package" to onboard speakers. The package contained a collection of&lt;br&gt;
  banners/logos/cards for social media and a step-by-step guide on how to use&lt;br&gt;
  the event platform and ensure smooth, stress-free performance on the day of&lt;br&gt;
  the event.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Organize backup presentations: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope for the best and plan for the worst. As with any live event, it’s&lt;br&gt;
  necessary to plan for last-minute cancellations or emergencies. Line up at&lt;br&gt;
  least a couple of replacement talks, which can come from your team or anyone&lt;br&gt;
  else you feel comfortable asking to be a replacement. You can also use group&lt;br&gt;
  discussions or ad-hoc workshops/hacking tutorials as backups, but keep in mind&lt;br&gt;
  that those require extra time and effort to plan. If all goes well and no&lt;br&gt;
  backups are required on event day, plan for a one-off session or a "surprise"&lt;br&gt;
  session near the end of the event to make use of one of them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Practice with a dry run:
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create an environment that lets you simulate the real event as accurately as&lt;br&gt;
  possible. Ask members of your team/friends/relatives to act as fake visitors&lt;br&gt;
  or presenters. Don't do too many dry runs to preserve the goodwill of the&lt;br&gt;
  lovely people helping you. My specific advice: do one initial dry run followed&lt;br&gt;
  by one final "dress rehearsal". Feedback should be shared after the first dry&lt;br&gt;
  run and been taken care of when doing the dress rehearsal, which should&lt;br&gt;
  resemble a finalized version of the event.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Promote the event:
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our main channels for promoting the Ory Summit are the Ory Community Slack,&lt;br&gt;
  our newsletter, word-of-mouth, banners on our website, Twitter, and LinkedIn.&lt;br&gt;
  The most effective were our Slack, newsletter, and word of mouth. The optimal&lt;br&gt;
  place to market your event depends on where you interact most with your&lt;br&gt;
  community. In our context, personal connections and word-of-mouth are more&lt;br&gt;
  powerful means than traditional ads. We also promoted the conference on our&lt;br&gt;
  GitHub, some developer conference lists, and in team members' personal&lt;br&gt;
  networks. There are many ways to promote a conference and it's one of the most&lt;br&gt;
  crucial ingredients of a successful event.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-the-event"&gt;
  &lt;/a&gt;
  4. The Event
&lt;/h4&gt;

&lt;p&gt;Seemingly a million things occur in the days leading up to a conference. Here&lt;br&gt;
are some general tips to ensure success:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don't panic.&lt;/li&gt;
&lt;li&gt;Keep the team and yourself fed, watered, and as well-rested as possible.&lt;/li&gt;
&lt;li&gt;Double-check the technical infrastructure before and during the event,
including equipment for recording, streaming, audio, and network connectivity.&lt;/li&gt;
&lt;li&gt;Have fun.&lt;/li&gt;
&lt;li&gt;Celebrate with an after-party 🥳.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-what-else"&gt;
  &lt;/a&gt;
  5. What else?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Remember to keep it simple&lt;/strong&gt;: Some things are mandatory, like a proper Code of Conduct (the &lt;a href="https://geekfeminism.fandom.com/wiki/Conference_anti-harassment/Policy"&gt;geekfeminism CoC&lt;/a&gt; or the &lt;a href="https://berlincodeofconduct.org/"&gt;Berlin CoC&lt;/a&gt; are good examples), or good audio quality (encourage speakers to use headsets/earpieces with boom microphones instead of AirPods). Other features are optional for your first bootstrapped developer conference.&lt;/p&gt;

&lt;p&gt;Here are several topics that we didn't delve into, but should be considered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Code of Conduct &amp;amp; Inclusivity&lt;/li&gt;
&lt;li&gt;Audio &amp;amp; Video Quality Optimization&lt;/li&gt;
&lt;li&gt;Visual Branding&lt;/li&gt;
&lt;li&gt;Landing Page&lt;/li&gt;
&lt;li&gt;Interaction with Audience/Q&amp;amp;A&lt;/li&gt;
&lt;li&gt;Interactive Workshops&lt;/li&gt;
&lt;li&gt;Merchandise&lt;/li&gt;
&lt;li&gt;Sponsors&lt;/li&gt;
&lt;li&gt;Tickets (Free/Paid)
...and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-after-the-event"&gt;
  &lt;/a&gt;
  6. After the event
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Publish recorded presentations:&lt;br&gt;&lt;br&gt;
Remember to get permission from the speakers to do this!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do a retrospective to get feedback:&lt;br&gt;&lt;br&gt;
We sent out an exit survey that 10% of the attendees filled out and asked Ory&lt;br&gt;
team members to share feedback. Here are a few things we want to improve at&lt;br&gt;
the next Ory Summit:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Use a simple event platform.&lt;/li&gt;
&lt;li&gt;Publish recordings directly after the sessions.&lt;/li&gt;
&lt;li&gt;Plan backups earlier.&lt;/li&gt;
&lt;li&gt;More content for non-technical people.&lt;/li&gt;
&lt;li&gt;More workshops &amp;amp; beginner sessions.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Analyze the data:&lt;br&gt;&lt;br&gt;
This depends on what you collected. Our main source of data was the exit&lt;br&gt;
interview and some attendance metrics collected on the platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Organize the next event:&lt;br&gt;&lt;br&gt;
Take a deep breath, and begin planning your next event.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ory-summit-2022"&gt;
  &lt;/a&gt;
  Ory Summit 2022 ⛰️
&lt;/h3&gt;

&lt;p&gt;In light of how much fun we had at our first event, we are stoked for the Ory Summit 2022. Preparation has already begun and we will soon publish a call for papers and more. If the global health situation permits, there will be an option to attend the Ory Summit in person this year. It will take place in Q2/Q3 – the exact date coming soon.&lt;/p&gt;

&lt;p&gt;We have many things planned for this year. While not wanting to spoil the&lt;br&gt;
surprise, I think this is going to be the biggest Ory event ever 😁.&lt;/p&gt;

&lt;p&gt;Thanks for reading and participating in the Ory Summit 2021. If you want to participate or help in any way, please reach out [via email(mailto:&lt;a href="mailto:office@ory.sh"&gt;office@ory.sh&lt;/a&gt;) or on our &lt;a href="https://slack.ory.sh/"&gt;chat&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>meetup</category>
      <category>conferenc</category>
      <category>community</category>
    </item>
    <item>
      <title>Aiven VS AWS</title>
      <author>Francesco Ciulla</author>
      <pubDate>Mon, 24 Jan 2022 21:02:30 +0000</pubDate>
      <link>https://dev.to/tinystacks/aiven-vs-aws-35ff</link>
      <guid>https://dev.to/tinystacks/aiven-vs-aws-35ff</guid>
      <description>&lt;p&gt;Francesco on &lt;a href="https://twitter.com/FrancescoCiull4"&gt;Twitter&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Author of the article: Jay Allen.&lt;/p&gt;

&lt;p&gt;Aiven is a new company that aims to simplify data storage and management in the cloud. In this article, I look at the benefits Aiven provides, its pricing model, and how their pricing compares to directly hosting your data services on AWS. I also consider when it makes sense to use Aiven vs. hosting on AWS directly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-of-cloud-sprawl"&gt;
  &lt;/a&gt;
  The Problem of "Cloud Sprawl"
&lt;/h2&gt;

&lt;p&gt;As we've discussed on this blog before, modern cloud providers have become insanely complex. Infrastructure as a Service (IaaS) companies like AWS continue to add an impressive array of features and services every month. &lt;/p&gt;

&lt;p&gt;However, while that's made cloud services more useful, it's also made them harder to understand. Developers new to the cloud have to understand a huge host of similar-looking services and features before they can even make fundamental architecture decisions. &lt;/p&gt;

&lt;p&gt;At the same time, this sprawl has made cloud dashboards much harder to use. Many AWS users complain about how hard it is to navigate the AWS Console in its current state. &lt;/p&gt;

&lt;p&gt;In response, we've seen the rise of  &lt;a href="https://www.bmc.com/blogs/saas-vs-paas-vs-iaas-whats-the-difference-and-how-to-choose/"&gt;Platform as a Service (PaaS)&lt;/a&gt;. PaaS companies like Heroku and service like Google App Engine aim to reduce the complexity of deploying software applications by providing an out of the box application stack consisting of data storage, virtual servers, virtual networking, and other foundational services. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-aiven"&gt;
  &lt;/a&gt;
  What is Aiven?
&lt;/h2&gt;

&lt;p&gt;Aiven is a PaaS product focused on data management. With Aiven, users can spin up a vast array of data storage and search services on various IaaS providers, including AWS, Google Cloud, and Microsoft Azure. &lt;/p&gt;

&lt;p&gt;After you create an account on Aiven, you can spin up one or more of a larger number of data storage services, including event messaging (Kafka), relational and object-relational data storage (MySQL, PostgreSQL), time series databases (InfluxDB, M3DB), in-memory caching (Redis), and several others. &lt;/p&gt;

&lt;p&gt;Once you select a service, you can select to host your infrastructure on a number of cloud providers: AWS, Google Cloud, Microsoft Azure, DigitalOcean, and UpCloud. You can also select a hosting plan, which determines how much memory and processor power your service can access.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0aACYBPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642185774045/szDy_-Utu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0aACYBPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642185774045/szDy_-Utu.png" alt="Aiven - installing PostgreSQL with Startup-4 plan" width="700" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once your service is up and running, you can see the details on your Aiven dashboard. From here, you can access connection information and connect to your data host. Aiven also provides easy access to additional information about your service, including logs, connection pools, metrics, and backups. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ajOhfDEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186388490/WXgTrSaN-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ajOhfDEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642186388490/WXgTrSaN-.png" alt="Aiven - PostgreSQL dashboard after instance creation" width="700" height="416"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aiven-features"&gt;
  &lt;/a&gt;
  Aiven Features
&lt;/h2&gt;

&lt;p&gt;One of Aiven's greatest features is its ease of use. The Aiven UI is far and away easier to navigate than most cloud consoles. Creating a new data service generally takes a few clicks. And Aiven offers easy access to data (metrics, users, etc.) that would require a lot of customized setup if you were creating the service directly on a cloud provider. &lt;/p&gt;

&lt;p&gt;Aiven also offers hosting flexibility. With support for five major IaaS providers, teams that use Aiven can easily locate their data hosting in the same cloud provider and even the same region as their application. &lt;/p&gt;

&lt;p&gt;Since it's a PaaS, Aiven generally offers "black box" hosting. In other words, data services are hosted on cloud service accounts owned and operated by Aiven. However, customers with over $5000/month of spend can contact Aiven to arrange for direct hosting on their own cloud service accounts. &lt;/p&gt;

&lt;p&gt;Finally, Aiven supports a number of advanced features for migration and monitoring The company &lt;a href="https://developer.aiven.io/docs/products/postgresql/howto/list-replication-migration.html"&gt;supports its own aiven-db-migrate tool&lt;/a&gt; for migrating from an existing PostgreSQL database to Aiven. Aiven can also integrate with a number of different alerting and monitoring systems, including AWS CloudWatch Logs and Metrics, DataDog, Promethseus, and Syslog. (You can also set up your own metrics dashboarding easily with an Aiven-hosted Grafana dashboard.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aiven-pricing-vs-aws-pricing"&gt;
  &lt;/a&gt;
  Aiven Pricing vs. AWS Pricing
&lt;/h2&gt;

&lt;p&gt;Beyond features, however, we were also interested in the pricing model. How much does it cost to run a database service in Aiven versus, say, running it directly on AWS? &lt;/p&gt;

&lt;p&gt;You won't be surprised to learn that Aiven costs more than vanilla AWS. That's only natural: it's a business providing a service. In this case, the service includes automation of data storage service creation, a slick management user interface, and the ability to create and manage resources cross-cloud. &lt;/p&gt;

&lt;p&gt;But what's the cost? And is it worth it? The answer, as always, is: it depends on your scenario. &lt;/p&gt;

&lt;p&gt;We ran the numbers on PostgreSQL hosting and compared using Aiven to running an equivalent-sized PostgreSQL instance directly on AWS. For example, Aiven's Startup-4 plan gives you 2 CPUs and 4GB of RAM and a single database instance . So we correlated this with an RDS PostgreSQL db.t4g.medium instance, which supports the same hardware configuration, hosted in a single Availability Zone. All RDS hardware specification data  &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#Concepts.DBInstanceClass.Summary"&gt;was derived from the AWS Web site&lt;/a&gt; and all AWS prices were calculated using the &lt;a href="https://calculator.aws/"&gt;pricing calculator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Below is a brief summary of the pricing differences for Aiven's startup plans: &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Aiven&lt;/th&gt;
&lt;th&gt;Aiven pricing&lt;/th&gt;
&lt;th&gt;AWS alt&lt;/th&gt;
&lt;th&gt;AWS pricing&lt;/th&gt;
&lt;th&gt;Monthly savings&lt;/th&gt;
&lt;th&gt;% raw savings&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Startup-4&lt;/td&gt;
&lt;td&gt;$99.00&lt;/td&gt;
&lt;td&gt;db.t4g.medium&lt;/td&gt;
&lt;td&gt;$56.65&lt;/td&gt;
&lt;td&gt;$42.35&lt;/td&gt;
&lt;td&gt;42.78%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup-8&lt;/td&gt;
&lt;td&gt;$195.00&lt;/td&gt;
&lt;td&gt;db.t4g.large&lt;/td&gt;
&lt;td&gt;$114.30&lt;/td&gt;
&lt;td&gt;$80.70&lt;/td&gt;
&lt;td&gt;41.38%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup-16&lt;/td&gt;
&lt;td&gt;$310.00&lt;/td&gt;
&lt;td&gt;db.r6g.large&lt;/td&gt;
&lt;td&gt;$204.50&lt;/td&gt;
&lt;td&gt;$105.50&lt;/td&gt;
&lt;td&gt;34.03%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup-32&lt;/td&gt;
&lt;td&gt;$640.00&lt;/td&gt;
&lt;td&gt;db.r6g.xlarge&lt;/td&gt;
&lt;td&gt;$409.00&lt;/td&gt;
&lt;td&gt;$231.00&lt;/td&gt;
&lt;td&gt;36.09%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup-64&lt;/td&gt;
&lt;td&gt;$1,200.00&lt;/td&gt;
&lt;td&gt;db.r6g.2xlarge&lt;/td&gt;
&lt;td&gt;$771.27&lt;/td&gt;
&lt;td&gt;$428.73&lt;/td&gt;
&lt;td&gt;35.73%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup-120&lt;/td&gt;
&lt;td&gt;$2,140.00&lt;/td&gt;
&lt;td&gt;db.r6g.4xlarge&lt;/td&gt;
&lt;td&gt;$1,473.54&lt;/td&gt;
&lt;td&gt;$666.46&lt;/td&gt;
&lt;td&gt;31.14%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup-240&lt;/td&gt;
&lt;td&gt;$4,280.00&lt;/td&gt;
&lt;td&gt;db.r6g.8xlarge&lt;/td&gt;
&lt;td&gt;$2,947.81&lt;/td&gt;
&lt;td&gt;$1,332.19&lt;/td&gt;
&lt;td&gt;31.13%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup-360&lt;/td&gt;
&lt;td&gt;$8,700.00&lt;/td&gt;
&lt;td&gt;db.m5.24xlarge&lt;/td&gt;
&lt;td&gt;$6,582.12&lt;/td&gt;
&lt;td&gt;$2,117.88&lt;/td&gt;
&lt;td&gt;24.34%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Setting aside implementation costs for a moment, the charge for hosting your database directly on AWS will cost around 38% less than hosting it on Aiven. That price difference does include some networking costs that Aiven covers on your behalf. However, many of those charges can  be avoided by proper placement of your AWS resources (e.g., running your RDS instance in the same VPC as your application, or using VPC peering to avoid Internet data transfer charges).&lt;/p&gt;

&lt;p&gt;Of course, the bill is only half the story. You can't - and shouldn't - ignore how many person-hours or vendor dollars it might take to implement a direct IaaS solution. This will depend on how seasoned your staff is at data storage management and what reusable deployment and configuration solutions you already have available. If your team is starting from scratch with little cloud data management experience, Aiven will likely pay for itself. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-direct-hosting-on-aws-makes-sense"&gt;
  &lt;/a&gt;
  When Direct Hosting on AWS Makes Sense
&lt;/h2&gt;

&lt;p&gt;Does that mean you shouldn't use Aiven? Far from it. If your team doesn't have a data expert who's skilled in the various technologies that Aiven supports, its ease of use can save you significant time and money. Aiven's direct logging and metrics support may also save you dev dollars. And if you're pursuing a multi-cloud deployment strategy, Aiven's ability to deploy to all major cloud providers is a huge point in its favor.&lt;/p&gt;

&lt;p&gt;However, if you don't have a multi-cloud strategy, the cost of Aiven may be more than it's worth.   One way to answer this question for your team is to consider how much data you're storing. &lt;/p&gt;

&lt;p&gt;Aiven charges a flat rate for data storage even if you don't use the entire allocation. By contrast, AWS only charges you for the data storage you actually use. And AWS charges far less than Aiven for the same amount of data.&lt;/p&gt;

&lt;p&gt;On Aiven, you'll pay around $5 per every extra 5GB of storage on Aiven. Aiven gives small discounts the more storage you buy; e.g., an extra 80GB costs around $42/mo. instead of $50. But this still contrasts sharply with AWS, where an extra 10GB of storage only costs a little over $1 a month. &lt;/p&gt;

&lt;p&gt;For example, under Aiven's Startup-4 plan, you receive up to 80GB of storage. If you use less than this on AWS, you'll save a few extra dollars a month. But you'll also have a lot more room to grow on AWS. In this configuration, you can store up to 450GB on a single-AZ configuration of PostgreSQL before you're paying as much as you pay to use Aiven. &lt;/p&gt;

&lt;p&gt;In short, if your storage needs will fit within Aiven's default data tiers for your service level, it may well be worth the spend. But that value quickly decreases as your storage needs increase. If you expect large data growth, you may either want to consider hosting on AWS directly from the start, or ensuring you have a plan to migrate from Aiven to direct AWS hosting as your needs change. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backup-storage-costs"&gt;
  &lt;/a&gt;
  Backup Storage Costs
&lt;/h3&gt;

&lt;p&gt;One point we didn't address in the above is the cost of backup storage. On Starter plans, Aiven gives you two days of backups (14 days for Business plans). By contrast, you only get one included backup when you host directly on AWS. &lt;/p&gt;

&lt;p&gt;However, AWS backup storage costs are (as of this writing) a scant US $0.095 per GiB. So, even in the case of the Starter-4 plan, adding a second backup on AWS only costs an additional $7.60 a month for 80 GB on AWS. Therefore, backups shouldn't be much of a factor in your cost calculations. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tinystacks-and-aiven"&gt;
  &lt;/a&gt;
  TinyStacks and Aiven
&lt;/h2&gt;

&lt;p&gt;Like the folks at Aiven, we here at TinyStacks also think the cloud is too complicated! That's why we've built a service that provides full DevOps deployment pipeline automation. (You can  &lt;a href="https://www.youtube.com/watch?v=22n1ac7T6so"&gt;see it in action on our YouTube channel&lt;/a&gt;!) We also include the ability to create an RDS PostgreSQL database - or use any other existing Amazon RDS instance - as part of each stack. &lt;/p&gt;

&lt;p&gt;If you need to pursue a multi-cloud strategy, or use another data service outside of Amazon RDS, you can use any of your Aiven-hosted services easily from TinyStacks. Just pass the information for your Aiven resource - such as DNS name, port, and credentials - into your TinyStacks-hosted Docker app. Your application can read these secrets and connect to your Aiven data assets as it would any other data storage resource. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Aiven is an advanced and easy to use interface to various cloud data services. Whether it's worth the premium, however, depends on your use case. For multi-cloud deployments and teams without a data expert, Aiven can be a wise investment. However, AWS-only shops with high data storage needs will want to weigh their usage carefully before deciding whether that investment will yield dividends. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Banner photo by &lt;a href="https://unsplash.com/@benjaminlehman?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;benjamin lehman&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/data-storage?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>devops</category>
      <category>programming</category>
    </item>
    <item>
      <title>Agregar AWS Toolkit en Visual Studio 2019 / 2022</title>
      <author>Daniel Gomez Jaramillo</author>
      <pubDate>Mon, 24 Jan 2022 20:27:20 +0000</pubDate>
      <link>https://dev.to/esdanielgomez/agregar-aws-toolkit-en-visual-studio-2019-2022-47d4</link>
      <guid>https://dev.to/esdanielgomez/agregar-aws-toolkit-en-visual-studio-2019-2022-47d4</guid>
      <description>&lt;p&gt;Hola! En este tutorial aprenderemos a instalar la extensión de AWS desde Visual Studio. Esta herramienta nos permitirá trabajar con el ecosistema de .NET en cuanto al desarrollo, depuración e implementación de soluciones con Amazon Web Services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paso-1-instalar-la-extensi%C3%B3n"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Paso 1. Instalar la extensión&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Con Visual Studio iniciado, podemos dirigirnos a la sección Extensiones desde el menú de opciones, y seleccionar Administrar Extensiones. En este espacio podemos buscar AWS Toolkit for Visual Studio y proceder con la instalación. &lt;/p&gt;

&lt;p&gt;Aquí también podemos encontrar los instalables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.AWSToolkitforVisualStudio2017"&gt;AWS Toolkit for Visual Studio 2017 and 2019&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=AmazonWebServices.AWSToolkitforVisualStudio2022"&gt;AWS Toolkit for Visual Studio 2022&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#paso-2-autenticarse-con-aws"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Paso 2. Autenticarse con AWS&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Una vez instalada la extensión, al iniciar Visual Studio el asistente de configuración de AWS se iniciará y nos pedirá configurar nuestras credenciales. En este caso podemos hacer uso del archivo de configuración que se genera al momento de crear una cuenta de AWS IAM. Aquí podemos revisar ese proceso: &lt;a href="https://dev.to/esdanielgomez/configurar-una-cuenta-aws-iam-para-desplegar-nuestras-aplicaciones-con-aspnet-2e9b"&gt;Configurar una cuenta AWS IAM para desplegar nuestras aplicaciones con ASP.NET&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A la final visualizaremos algo como esto: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OHB0CKvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpf0u5bj1hrs0b3fyutc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OHB0CKvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpf0u5bj1hrs0b3fyutc.png" alt="" width="695" height="807"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Al guardar las credenciales, tendremos listo el AWS Explorer que nos permitirá trabajar con los servicios de AWS con los que tengamos autorización. Esto de acuerdo con las políticas establecidas para nuestro usuario AWS IAM. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#todo-listo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;¡Todo listo!&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Con todo en su lugar, ya podemos trabajar con AWS desde Visual Studio, por ejemplo, para poder desplegar nuestras aplicaciones web con ASP.NET hacia AWS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k8L9t_qi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbian9v0xljisxe6tb6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k8L9t_qi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbian9v0xljisxe6tb6g.png" alt="" width="325" height="333"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gracias-por-leer"&gt;
  &lt;/a&gt;
  &lt;strong&gt;¡Gracias por leer!&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Si tienes alguna pregunta o alguna idea en mente, será un gusto poder estar en comunicación y juntos intercambiar conocimientos entre sí.&lt;/p&gt;

&lt;p&gt;Nos vemos en &lt;a href="https://twitter.com/esDanielGomez"&gt;Twitter&lt;/a&gt; / &lt;a href="https://esdanielgomez.com"&gt;esDanielGomez.com&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>dotnet</category>
      <category>cloud</category>
      <category>spanish</category>
    </item>
    <item>
      <title>Zython (minizinc python-wrapper) after year of development</title>
      <author>ArtyomKaltovich</author>
      <pubDate>Mon, 24 Jan 2022 20:01:13 +0000</pubDate>
      <link>https://dev.to/artyomkaltovich/zython-minizinc-python-wrapper-after-year-of-development-1o71</link>
      <guid>https://dev.to/artyomkaltovich/zython-minizinc-python-wrapper-after-year-of-development-1o71</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f6dpVmUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ArtyomKaltovich/zython_brand/master/logos/intro.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f6dpVmUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ArtyomKaltovich/zython_brand/master/logos/intro.png" alt="Zython background" width="880" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More then a year ago I've started to create python wrapper for &lt;a href="https://www.minizinc.org/"&gt;minizinc&lt;/a&gt;. Which is, probably, the most popular &lt;a href="https://en.wikipedia.org/wiki/Constraint_programming"&gt;constraint programming&lt;/a&gt; tool. You can find more info on what is constraint programming, minizinc, what is it used for in my &lt;a href="https://dev.to/artyomkaltovich/constraint-programming-in-python-or-how-to-solve-traveling-salesman-problem-just-describing-it-32k1"&gt;previous article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At the release in January 2021 zython supported variables and parameters declaration, arrays, all solving types (satisfy, maximize, minimize), many predefined operations and constraints (and CI of course). It could solve a number of models, some of which were specified in the &lt;a href="https://zython.readthedocs.io/en/latest/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-float-variable-and-parameters"&gt;
  &lt;/a&gt;
  Adding float variable and parameters
&lt;/h2&gt;

&lt;p&gt;But also it lacks some of minizinc features: float and enum types support and sets. I've started with float support. It seems natural and essential for "usual" programming paradigms, e.g. I can't name any popular language without float support (only &lt;a href="https://en.wikipedia.org/wiki/Brainfuck"&gt;brainfuck&lt;/a&gt;), but in constraint programming it is not so essential, many problems can be solved using integers only, many algorithm were developed only for discreet models. By the fact not every solver support floats (maybe not even the most of them). For example, default zython's solver &lt;a href="https://www.gecode.org/"&gt;gecode&lt;/a&gt; doesn't fully support them, so it was necessary to add a way the user could specify the solver (of course I've understood it only after I've implemented float variables).&lt;/p&gt;

&lt;p&gt;Lets see, how you can use float variable, by solving an easy equation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zython&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;zn&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;constraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                            &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                            &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;solve_satisfy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"cbc"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# -0.03365384615384615
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#enums-and-sets"&gt;
  &lt;/a&gt;
  Enums and sets
&lt;/h2&gt;

&lt;p&gt;Adding enums and sets was harder task. First of all, because I've started with adding enums, then I've understood, they are quite useless without sets, and start to add them. This task leads to massive refactoring (some of which still should be done), but it leads to a better code, and now everyone can use enums and sets in zython. Below I will provide an example from documentation:&lt;/p&gt;

&lt;p&gt;Let’s imagine you’ve should to fight against Mike Tyson (don’t worry, you have a week to prepare). You should learn several boxing moves, each of them has strength, but you should invest some time to learn it and some money to hire a coach.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Move&lt;/th&gt;
&lt;th&gt;Power&lt;/th&gt;
&lt;th&gt;Time to learn&lt;/th&gt;
&lt;th&gt;Money to learn&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;jab&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cross&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uppercut&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;overhand&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hook&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;enum&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zython&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;zn&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Moves&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Enum&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;jab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;cross&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;hook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;uppercut&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;slip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;enum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;moves&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;time_available&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;money_available&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;power&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time_available&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time_available&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;money_available&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;money_available&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;power&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;power&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_learn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;moves&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;constraints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_learn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time_available&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_learn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;money&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;money_available&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;Moves&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;solve_maximize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;zn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_learn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;power&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Moves to learn: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'to_learn'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;, "&lt;/span&gt;
      &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"power: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'objective'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#other-changes"&gt;
  &lt;/a&gt;
  Other changes
&lt;/h2&gt;

&lt;p&gt;The two changes described above, are not the only ones, which was add to zython. I've added support of &lt;code&gt;increasing&lt;/code&gt;, &lt;code&gt;decreasing&lt;/code&gt; and &lt;code&gt;allequal&lt;/code&gt; constraints, &lt;code&gt;except_0&lt;/code&gt; parameter to &lt;code&gt;alldifferent&lt;/code&gt; constraint. New python version was released, so now &lt;code&gt;zython&lt;/code&gt; support cpython 3.7 - 3.10.&lt;br&gt;
And a warning in case &lt;code&gt;minizinc&lt;/code&gt; wasn't found in &lt;code&gt;$PATH&lt;/code&gt;, I hope it will help in installation and integrating zython code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This year wasn't easy (well not only for me, for everyone), but I've somehow managed to find time to improve zython, which becomes better and better in every version[citation needed]. It is an interesting experience and if you ever thought about starting your own project, you should try.&lt;/p&gt;

</description>
      <category>python</category>
      <category>minizinc</category>
      <category>opensource</category>
      <category>ai</category>
    </item>
    <item>
      <title>Making a Card API Project | Day 17 </title>
      <author>Web.Developer.io</author>
      <pubDate>Mon, 24 Jan 2022 19:37:16 +0000</pubDate>
      <link>https://dev.to/developerioweb/making-a-card-api-project-day-17-2p37</link>
      <guid>https://dev.to/developerioweb/making-a-card-api-project-day-17-2p37</guid>
      <description>&lt;p&gt;This a An Exercise Problem From the Colt Steele React Course &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem Statement -&amp;gt;&lt;/strong&gt;&lt;br&gt;
Build an app that displays a deck of cards, one card at a time. When the page loads, send a request to &lt;a href="https://deckofcardsapi.com/api/deck/new/shuffle"&gt;https://deckofcardsapi.com/api/deck/new/shuffle&lt;/a&gt; to create a new deck. Store the Deck ID it gives you, so you can make further requests to retreive each card image. Add a button to your app that allows a user to draw a new card.&lt;/p&gt;

&lt;p&gt;When a user clicks the button, send another request to the API, this time to &lt;a href="https://deckofcardsapi.com/api/deck/%24%7Bdeck_id%7D/draw/"&gt;https://deckofcardsapi.com/api/deck/${deck_id}/draw/&lt;/a&gt;. (make sure to use your actual deck ID). Use the data included in the response to display a new card image, and make sure to include an informative alt attribute.&lt;/p&gt;

&lt;p&gt;Every time the user clicks, the app should display a new card until the deck is empty. Make sure to tell the user there are no cards left!&lt;/p&gt;

&lt;p&gt;Here’s how this might look (with styling added):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqE8vudv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahft0kzlgzxdrzgu7fgj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqE8vudv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahft0kzlgzxdrzgu7fgj.gif" alt="Cards Project" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This app Consists of 3 Component App,Deck,Cards&lt;br&gt;
Deck Component is Stateful and stores all the State and pass it to the Cards using the Props.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution 👇&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://github.com/Developer-io-web/Card-api-Project"&gt;https://github.com/Developer-io-web/Card-api-Project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding 🙂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>What are your tips for an effective developer resumé?</title>
      <author>Ben Halpern</author>
      <pubDate>Mon, 24 Jan 2022 19:05:44 +0000</pubDate>
      <link>https://dev.to/ben/what-are-your-tips-for-an-effective-developer-resume-ep4</link>
      <guid>https://dev.to/ben/what-are-your-tips-for-an-effective-developer-resume-ep4</guid>
      <description>&lt;p&gt;What are your dos and don'ts for an effective resumé?&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>discuss</category>
      <category>career</category>
      <category>resume</category>
    </item>
    <item>
      <title>React LifeCycle Method | Day 16 </title>
      <author>Web.Developer.io</author>
      <pubDate>Mon, 24 Jan 2022 19:03:03 +0000</pubDate>
      <link>https://dev.to/developerioweb/react-lifecycle-method-day-16-52jn</link>
      <guid>https://dev.to/developerioweb/react-lifecycle-method-day-16-52jn</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  What
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Every Component in React has a lifeCycle which we can moniter or update During it’s 3 main Phases.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So Every Component has 3 main Phase during it’s Life &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.) Mounting → This Means Adding the Component into the DOM.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.) Updating → Updating the State or any other data of the Component.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.) UnMounting → Removing the Component From the DOM.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T3ozWPkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzh85vprg95blijlk72h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T3ozWPkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzh85vprg95blijlk72h.png" alt="React Lifecycle Method" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Mounting&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;When a Component is rendered in the DOM for the 1st Time then it is called as Mounting.&lt;/p&gt;

&lt;p&gt;React has 3 methods that got called During Mounting.&lt;/p&gt;

&lt;p&gt;1.) &lt;strong&gt;Constructor()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;2.) &lt;strong&gt;render()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;3.) &lt;strong&gt;ComponentDidMount()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before you Move further you should know about this &lt;strong&gt;the methods which are prefixed by &lt;code&gt;will&lt;/code&gt; are called right &lt;code&gt;before Something happen&lt;/code&gt; and the methods which are prefixed by &lt;code&gt;Did&lt;/code&gt; are called right &lt;code&gt;after Something happen&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MM-AXrXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lv8uyw1iw96v2qwbxw1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MM-AXrXg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lv8uyw1iw96v2qwbxw1.png" alt="Constructor" width="880" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Constructor will called 1st and used for initialize the state and Bind the event handlers.&lt;/p&gt;

&lt;p&gt;After that &lt;code&gt;render&lt;/code&gt; will be called &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mkedxHrz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4up4ycpt4gta6oc0youx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mkedxHrz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4up4ycpt4gta6oc0youx.png" alt="Render" width="880" height="121"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the Component is rendered React will call the &lt;strong&gt;&lt;code&gt;ComponentDidMount()&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHRSW2JK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wpmja8b3usuy05k8kli0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHRSW2JK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wpmja8b3usuy05k8kli0.png" alt="React Lifecycle Method" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;As the Component is Already Rendered if we will try to change state in the &lt;code&gt;componenetDidMount()&lt;/code&gt; It will cause a &lt;code&gt;Re-rendering&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Let’s have a Look to this Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ReactLifestyle&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;In Constructor Method&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;IN Component Did Mount&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;In Render method&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      hi
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ReactLifestyle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The Output of the Code will be 👇&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NXwv-9Mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi3v9dwsfeaurgpiblcn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NXwv-9Mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gi3v9dwsfeaurgpiblcn.png" alt="Code Output" width="880" height="264"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;As u can see 1st &lt;code&gt;Constructor Method&lt;/code&gt; is called then &lt;code&gt;Render Method&lt;/code&gt; and then &lt;code&gt;Component Did Mount&lt;/code&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also If we try to set state in the &lt;code&gt;ComponentDidMount&lt;/code&gt; then it will cause re-rendering as u can in the output.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/componentdidmount-9jnfh?file=/src/App.js"&gt;componentDidMount&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loading-data-via-ajax"&gt;
  &lt;/a&gt;
  Loading Data Via Ajax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Zenquote.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Zenquote&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;isloading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//WE are adding the setTimeout so can we can get in a Condition when after rendering the Data Fetching takes time.&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.github.com/zen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;isloading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isloading&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; 
        &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Loading .........
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Always Remember ....&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quote&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Zenquote&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;So in the code every-time we refresh the page we got new &lt;code&gt;quote&lt;/code&gt; , I use the axios to fetch the data and also , I have to  use the setTimeout to depict that sometime the data fetching take time so at that time we can add a &lt;code&gt;animated Loader&lt;/code&gt;.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#loading-data-using-the-async-function-%E2%86%92"&gt;
  &lt;/a&gt;
  Loading data using the Async Function →
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Async/await&lt;/code&gt; make promises easier to write.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Async&lt;/code&gt; makes a function return a Promise.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Await&lt;/code&gt; makes a function wait for a Promise.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;componentDidmount&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;GetData&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://github.com.api/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;When we Write it will wait for the data to come then move  on to another line.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example →&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;GithubUsersInfo&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;imgUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;followers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.github.com/users/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;imgUrl&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;avatar_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;followers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;followers&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Github User Name : &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;imgUrl&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"image"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Followers : &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;followers&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;GithubUsersInfo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This takes user name as a props.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;This will gives us the Github User Data.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#componentdidupdate-%E2%86%92"&gt;
  &lt;/a&gt;
  ComponentDidUpdate →
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gw9twtht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elool626o97jecldzk7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gw9twtht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elool626o97jecldzk7a.png" alt="Code Output" width="880" height="316"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Updating can be done by changing the the State , Props (Changed Form the Parent Side) , or any other External Data.&lt;/p&gt;

&lt;p&gt;Like &lt;strong&gt;&lt;code&gt;forceUpdate&lt;/code&gt; is used to update the things which are not in the state and often they are external Data  so to change that we can use the &lt;code&gt;forcedata()&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XMNvsYw0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/784lqn3msu1nk51k8fth.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XMNvsYw0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/784lqn3msu1nk51k8fth.png" alt="React Lifecycle method" width="880" height="285"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we update Something Re-rendering Happen after then &lt;strong&gt;&lt;code&gt;ComponentDidUpdate()&lt;/code&gt; called.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So we can use the &lt;code&gt;ComponentDidUpdate()&lt;/code&gt; to save all your data into the database which has been changed .&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---lB1HxfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yw3u34hszoy3mkl40lbp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---lB1HxfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yw3u34hszoy3mkl40lbp.png" alt="componentDidUpdate" width="880" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-%E2%86%92"&gt;
  &lt;/a&gt;
  Example →
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Zenquote.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Zenquote&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;In Constructor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;isloading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;In Component Did Mount&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.github.com/zen&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="na"&gt;isloading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;componentDidUpdate&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;In Component Did Update&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rendering .....&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isloading&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; 
        &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Loading .........
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Always Remember ....&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quote&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Zenquote&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Output of the Below Code is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---XxqPN1---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/orwj8kdcny9xm9a81gv6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---XxqPN1---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/orwj8kdcny9xm9a81gv6.png" alt="Code Output" width="880" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1st the Constructor is called , then rendering happened and then ComponentDidMount got called and in the ComponentDidMount we change the State so this causes the Re-rendering and when we change the state after Re-rendering the &lt;code&gt;ComponentDidUpdate&lt;/code&gt; Got called.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whenever u update something the &lt;code&gt;ComponentDidUpdate&lt;/code&gt; got called after Re-rendering. So we can use the Component Did Mount to save the data to the Database.&lt;/p&gt;

&lt;p&gt;Also In the Component Did Update we can access the &lt;strong&gt;Previous State and the Previous Props so U can use this to compare the State or props with the previous ones.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To use the Previous state and prop u should write like this.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;componentDidUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;prevState&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;// Inside this u can use the previous props &amp;amp; the state &lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevProps&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Remember the 1st argument will be the previous props and the 2nd argument will be previous state.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#componentwillunmount"&gt;
  &lt;/a&gt;
  ComponentWillUnmount()
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This will be called when we are removing something from the DOM&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MlhWcIdk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a380old8vot85zh7kyht.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MlhWcIdk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a380old8vot85zh7kyht.png" alt="ComponentWillUnmount" width="880" height="369"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;componenetWillUnmount&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;In Component Will Unmount&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;//It will be called before the removal of the Component.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Happy Coding 🙂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How is AI being used to fight against cyber attacks?</title>
      <author>Mage</author>
      <pubDate>Mon, 24 Jan 2022 18:32:24 +0000</pubDate>
      <link>https://dev.to/mage_ai/how-is-ai-being-used-to-fight-against-cyber-attacks-10ka</link>
      <guid>https://dev.to/mage_ai/how-is-ai-being-used-to-fight-against-cyber-attacks-10ka</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;For its ability to understand patterns within large sets of data, AI is being used to lead the new frontier of cybersecurity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Intro&lt;/li&gt;
&lt;li&gt;Behavior tracking&lt;/li&gt;
&lt;li&gt;Biometric data and passwords&lt;/li&gt;
&lt;li&gt;Bot detection and security&lt;/li&gt;
&lt;li&gt;Risk to AI Cybersecurity&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;Nearly every business exists on the web in some capacity. This means more private data and personal information are at risk for a potential hack. The hacker dilemma can be a cat and mouse game of ever improving protective software followed by improving hacker technology. Introduced in the last few years, companies have begun implementing AI technology into cybersecurity software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#behavior-tracking"&gt;
  &lt;/a&gt;
  Behavior tracking
&lt;/h2&gt;

&lt;p&gt;Traditional cybersecurity products work by detecting a virus’s typical behavior and creating antivirus software around it. As cybercriminals evolved their tactics, their methods became more nuanced and harder to detect. AI provides the perfect tool to analyze normal behavior immediately detected and alert when the slightest abnormalities occur.&lt;/p&gt;

&lt;p&gt;Most company operations function on a routine and predictive basis. Employees log on at consistent times, connect with the same people and applications, and use and consume a consistent amount of data. When viruses breach a traditional system, IT and the employee may not be able to catch it quick enough–leaking protected information and data. Implementing an AI into this system can quickly learn patterns within the company and efficiently detect abnormalities when they occur. In instances of a password breach or implementation of viruses, the AI will quickly flag issues as threatening behavior and trigger the proper response.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#biometric-data-and-passwords"&gt;
  &lt;/a&gt;
  Biometric data and passwords
&lt;/h2&gt;

&lt;p&gt;AI can help companies eliminate the need for passwords through biometric authentication such as fingerprint and facial recognition scans. According to &lt;a href="https://www.verizon.com/business/resources/reports/dbir/"&gt;Verizon’s data breach report&lt;/a&gt;, 80% of data breaches are linked to poor and reused passwords. Using biometric information is much harder for hackers to replicate and determine than a number/word-based password. Biometric information is constantly improving and AI technology is improving in recognition of specific nuances. Once only a reality in science fiction films, Iris scanning carries an extremely high level of accuracy and security. Using this technology can further ensure that only those with the right authority can gain access to company’s information.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VvH8R3Wn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6u8p58ob52rd55vf8oo.jpeg" alt="Image description" width="880" height="495"&gt;&lt;em&gt;(Source: mobidev)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#bot-detection-and-security"&gt;
  &lt;/a&gt;
  Bot detection and security
&lt;/h2&gt;

&lt;p&gt;Hackers are ever-changing their tactics to keep up with cybersecurity. It’s inevitable that humans won’t be able to catch and detect the copious amounts of attacks coming at all times. Along with detecting abnormalities in daily functioning, AI is able to detect malicious URLs, harmful bots, and other viruses. Due to the large amounts of data that AI software can take, it can become an expert in predicting and planning when and where the next attack may take place.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#risk-to-ai-cybersecurity"&gt;
  &lt;/a&gt;
  Risk to AI Cybersecurity
&lt;/h2&gt;

&lt;p&gt;Like any software, AI in cybersecurity does come with risk. As a whole, there is potential for harm if hackers gain access to the AI system. This would allow them to manipulate the technology, potentially locking out the company and causing a shutdown.&lt;/p&gt;

&lt;p&gt;Concerns with biometric data is that it can often be a breach of privacy to an individual–even more so if the information gets into the wrong hands. As hackers get more intelligent, this software can be more dangerous. Unlike traditional passwords, you can’t change your biometric information.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Eb-bYv9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwr2pnli1dex8w2ckupp.png" alt="Image description" width="830" height="500"&gt;&lt;em&gt;(Source: RecFaces)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XdqTTimf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ggm3ktg62y39rxvqlg6a.jpeg" alt="Image description" width="880" height="420"&gt;&lt;em&gt;(Source: BusinessWorld)&lt;/em&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;&lt;br&gt;
AI technology is becoming an essential to have in a company’s arsenal to fight against cyberattacks. Human monitoring is no longer enough to keep up with advancing technology from hackers–AI’s constant monitoring, ability to learn patterns, and take in copious amounts of data make it the perfect tool to keep your company information safe.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Tools I use from design to deployment, testing and setting up analytics</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Mon, 24 Jan 2022 18:26:16 +0000</pubDate>
      <link>https://dev.to/itsrakesh/tools-i-use-from-design-to-deployment-testing-and-setting-up-analytics-2akd</link>
      <guid>https://dev.to/itsrakesh/tools-i-use-from-design-to-deployment-testing-and-setting-up-analytics-2akd</guid>
      <description>&lt;p&gt;In the previous &lt;a href="https://dev.to/itsrakesh/the-flow-of-building-a-full-stack-web-application-447g"&gt;blog&lt;/a&gt;, we came to know the flow of building a full-stack application. Throughout building an application we use so many tools that makes our life easy. So in this blog, I will share all the tools I use from setting up the stage to submitting your site to search engines.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: I will keep updating this article.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up"&gt;
  &lt;/a&gt;
  Setting up
&lt;/h3&gt;

&lt;p&gt;Setting up includes IDE, planning the project, management app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ides"&gt;
  &lt;/a&gt;
  IDEs
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;All rounder &lt;a href="https://code.visualstudio.com"&gt;VSCode&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.jetbrains.com/webstorm"&gt;Webstorm&lt;/a&gt; for backend or plain javascript projects.(&lt;em&gt;Please don't use for frontend&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://notepad-plus-plus.org"&gt;Notepad++&lt;/a&gt; for quick editing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#planning-the-project"&gt;
  &lt;/a&gt;
  Planning the project
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://clickup.com"&gt;ClickUp&lt;/a&gt; is amazingly useful for project management. It has lots of features and a great UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PDcEi_n4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1643033800424/OtLSVy2BA7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PDcEi_n4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1643033800424/OtLSVy2BA7.png" alt="ClickUp" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#operating-systems"&gt;
  &lt;/a&gt;
  Operating systems
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;I am not yet into Linux, so for now I use Windows for development.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#design"&gt;
  &lt;/a&gt;
  Design
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As I am not into UI/UX I use UI kits or simply take inspiration from dribbble, Behance etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then I use &lt;a href="https://figma.com"&gt;Figma&lt;/a&gt; to customize those designs according to my needs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#branding"&gt;
  &lt;/a&gt;
  Branding
&lt;/h4&gt;

&lt;p&gt;Branding includes deciding a colour palette, font family, logo etc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://colorhunt.co"&gt;Colorhunt&lt;/a&gt; for colour inspiration.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fonts.google.com"&gt;Google fonts&lt;/a&gt; for fonts. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://git-scm.com"&gt;Git&lt;/a&gt; - version control tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.gitkraken.com"&gt;GitKraken&lt;/a&gt; for everything git.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com"&gt;npm&lt;/a&gt; to manage node packages.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stackoverflow.com"&gt;StackOverFlow&lt;/a&gt; to find solutions for common issues.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#browsers"&gt;
  &lt;/a&gt;
  Browsers
&lt;/h4&gt;

&lt;p&gt;I primarily use two browsers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/chrome"&gt;Chrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.mozilla.org/en-US/firefox/developer"&gt;Firefox developer edition&lt;/a&gt; - This is amazing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://responsively.app"&gt;Responsively&lt;/a&gt; for responsive design.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://devicon.dev"&gt;Devicons&lt;/a&gt; for coloured icons and &lt;a href="https://react-icons.github.io/react-icons"&gt;React-icons&lt;/a&gt; for normal icons.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/thedaviddias/Front-End-Checklist"&gt;Frontend checklist&lt;/a&gt; for everything frontend.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en"&gt;React dev tools&lt;/a&gt; to test react components.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/debug-css/igiofjnckcagmjgdoaakafngegecjnkj"&gt;Debug CSS&lt;/a&gt; to test alignment of elements&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qCkIb9jW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1643038269638/O21dpQtgs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qCkIb9jW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1643038269638/O21dpQtgs.png" alt="Screenshot 2022-01-24 205812.png" width="880" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#backend-and-database"&gt;
  &lt;/a&gt;
  Backend and database
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://sendgrid.com"&gt;Sendgrid&lt;/a&gt; + &lt;a href="https://nodemailer.com/about"&gt;Nodemailer&lt;/a&gt; to send emails.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.mongodb.com/products/compass"&gt;MongoDB Compass&lt;/a&gt; to test MongoDB data locally.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sqlitebrowser.org"&gt;DB Browser&lt;/a&gt; to view sqlite data locally.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.postman.com"&gt;Postman&lt;/a&gt; for API testing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ngrok.com"&gt;ngrok&lt;/a&gt; to expose localhost.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.lambdatest.com"&gt;LambdaTest&lt;/a&gt; to test website on different browsers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#devops"&gt;
  &lt;/a&gt;
  DevOps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/features/actions"&gt;Github actions&lt;/a&gt; for CI/CD.&lt;/li&gt;
&lt;li&gt;More coming soon...&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.netlify.com"&gt;Netlify&lt;/a&gt; or &lt;a href="https://firebase.google.com"&gt;Firebase&lt;/a&gt; to host frontend.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.heroku.com"&gt;Heroku&lt;/a&gt; to host backend.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#rank-up"&gt;
  &lt;/a&gt;
  Rank up
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://search.google.com/search-console/about"&gt;Google search console&lt;/a&gt; to get indexed on google search and also to track performance, find issues etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.bing.com/webmasters"&gt;Bing webmaster tools&lt;/a&gt; to get indexed on bing search&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pagespeed.web.dev"&gt;Google page speed insights&lt;/a&gt; to test how fast my website is.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://web.dev/measure"&gt;Lighthouse&lt;/a&gt; to test page quality.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#analytics"&gt;
  &lt;/a&gt;
  Analytics
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://analytics.google.com/analytics"&gt;Google Analytics&lt;/a&gt; to track details like the number of website visitors, which pages are getting popular, how far my website reached.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://clarity.microsoft.com"&gt;Microsoft Clarity&lt;/a&gt; - this thing has even more features like heatmaps where you can see where the users are clicking.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#need-your-feedback"&gt;
  &lt;/a&gt;
  🚨 Need your feedback
&lt;/h3&gt;

&lt;p&gt;I recently deployed my portfolio website. Can you please visit once and give some feedback? It helps a lot.&lt;br&gt;
(For feedback you can use the google form by clicking the "Feedback" button on the footer or simply leave a comment under this blog.)&lt;/p&gt;

&lt;p&gt;Here is the link: &lt;a href="https://itsrakesh.co"&gt;itsrakesh.co&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;What is the one tool you can't live without(Apart from VSCode)? Comment below.&lt;/p&gt;




&lt;p&gt;I write a new blog every week. So follow for more.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>3 Ways To Learn Coding Within Three Months</title>
      <author>Elliot Brenya sarfo</author>
      <pubDate>Mon, 24 Jan 2022 18:23:02 +0000</pubDate>
      <link>https://dev.to/elliot_brenyasarfo_18749/3-ways-to-learn-coding-within-three-months-enb</link>
      <guid>https://dev.to/elliot_brenyasarfo_18749/3-ways-to-learn-coding-within-three-months-enb</guid>
      <description>&lt;p&gt;If you desire to code but have no plan on how to get started then this article is for you. Desiring to code is one thing and being consistent about it is another thing. Most &lt;a href="https://www.anythingprogramming.com/?m=1"&gt;beginners&lt;/a&gt; give up when things start to go south. Welcome to anythingprogramming.com, in this article I will list some guides that will help you to stay on track without burning out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why Do You Desire To Code?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The answer to this question might be challenging to figure out. Some see coding as nothing other than sitting in front of your computer to code others derive their passion from others.&lt;/p&gt;

&lt;p&gt;Deriving passion from people isn’t bad but the question you have to ask yourself is can I hold on to this passion for long? Do I even understand this passion?&lt;/p&gt;

&lt;p&gt;** Are Three months enough to Get Started?**&lt;/p&gt;

&lt;p&gt;With consistency and plan, three months will be too much. If you dedicate an hour a day to study continuously without any interruption you will be able to build basic systems or applications.&lt;/p&gt;

&lt;p&gt;The most difficult aspect is to get started. You will not be good at coding overnight but with a little bit of dedication and discipline, you will be doing well by watching tutorials videos, reading extensively and noting points.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ways To Learn To Code Within Three Months&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;** 1. Read Books**&lt;/p&gt;

&lt;p&gt;There are millions of coding books out there to support you in your &lt;a href="https://www.anythingprogramming.com/?m=1"&gt;coding&lt;/a&gt; journey. Note, reading these books will not make you a good programmer but if you practice what is written in the book over time, you will be doing well.&lt;/p&gt;

&lt;p&gt;2  &lt;strong&gt;Sign-Up For Bootcamp&lt;/strong&gt;&lt;br&gt;
There are &lt;a href="https://www.anythingprogramming.com/?m=1"&gt;alternatives&lt;/a&gt; to this by pursuing a computer science degree. Sign-up to boot camp helps you to be in alignment whiles you make friends with people who have the same interest as you do. Bootcamp shortens the learning curves by giving you the right information which is needed to get started.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Get Mentor&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A mentor is someone who will hold your hands and help you when you are need it. Mentors’ advice helps you think broadly, they also make you aware of what you might be facing in the industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is possible to learn coding within three months or less if you follow the above-listed information. Share this post if you find it informative and educating.&lt;/p&gt;

&lt;p&gt;Thank You.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
    </item>
  </channel>
</rss>
