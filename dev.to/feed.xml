<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>18 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project </title>
      <author>Smart Coder</author>
      <pubDate>Sat, 25 Dec 2021 08:04:27 +0000</pubDate>
      <link>https://dev.to/smartzcoder/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-1iap</link>
      <guid>https://dev.to/smartzcoder/18-amazing-github-repositories-that-will-help-you-make-a-beautiful-project-1iap</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Today I would like to give examples of good GitHub repositories that will help you implement complex animations, as well as useful functions in your projects.&lt;/p&gt;
&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/10-awesome-github-repos-every-web-developer-should-know/&amp;amp;ved=2ahUKEwiw1e_qpqbzAhU78HMBHVvBAWkQFnoECBAQAQ&amp;amp;usg=AOvVaw1YdY91hlP3suK6HGMF0MXW"&gt;18 amazing 🤩 GitHub repositories that will help you 🪄 make a Beautiful Project&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Build Your Own API using node and express</title>
      <author>Kirti </author>
      <pubDate>Sat, 25 Dec 2021 07:39:06 +0000</pubDate>
      <link>https://dev.to/kirtisingh3008/build-your-own-api-using-node-and-express-3g3e</link>
      <guid>https://dev.to/kirtisingh3008/build-your-own-api-using-node-and-express-3g3e</guid>
      <description>&lt;p&gt;Hey everyone, I am here again with the new article in this we will be building our very own API using node and express. Let's start with the setup first in which we initialize our backend JavaScript application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we do need to express well so let us install express as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to use normal or new import statements go to package.json and make an entry as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;crud_api&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.0.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;module&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// this line &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's make an index.js, I have attached the code below explaining each line of it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// can also write const express = require ('express');&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;bodyParser&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body-parser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// bodyParser allows us to take incoming post request bodies&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Now our whole application lies in this little variable&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// specifying port of our application , you can choose any port &lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//it says we are going to use json data in our body&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server running on port: http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; 
&lt;span class="c1"&gt;//To listen to this port and a callback function &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For stopping the server use &lt;strong&gt;"Ctrl+C"&lt;/strong&gt;&lt;br&gt;
Wait.. but how can we see the changes🤔 because by this time we can only see the server running on the following port, or the things we console what about the changes done on the client-side. Nodemon is the solution let's quickly install Nodemon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dev&lt;/span&gt; &lt;span class="nx"&gt;nodemon&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to run our Nodemon let's quickly set up the start scripts in package.json&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nodemon index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yahaya!!😇 We are done with all the setup of our basic express server.&lt;br&gt;
Now, let's just have a quick look at what some terms mean and do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;GET&lt;/em&gt;&lt;/strong&gt; It finds all the users. example -&amp;gt; &lt;strong&gt;/user&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;POST&lt;/em&gt;&lt;/strong&gt; Creates a user.  example -&amp;gt; &lt;strong&gt;/user&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;GET&lt;/em&gt;&lt;/strong&gt; Find user detail by id example-&amp;gt;  &lt;strong&gt;/user/:id&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;DELETE*&lt;/em&gt;* Deletes a user example-&amp;gt; **/user/:id&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;PATCH&lt;/em&gt;&lt;/strong&gt; Updates a user example-&amp;gt; &lt;strong&gt;/user/:id&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's start with our get operation first, Let's create a folder with name controllers and inside it a users.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt; &lt;span class="c1"&gt;// an empty array that is the data &lt;/span&gt;

&lt;span class="c1"&gt;// THIS IS GET OPERATION&lt;/span&gt;
&lt;span class="c1"&gt;//request and response are the parameters passed in this function&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// printing the users &lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Users in database: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// sending data from server to client &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, for the post-operation, one can note that we can have unique ids for each user as it would help us to delete and update the database in further command. so, let's just install a node package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i uuid
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The post function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="c1"&gt;//In the below statement we are spreding the already users object and adding id as well  &lt;/span&gt;
    &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({...&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;()});&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`User [&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;] added to the database.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's see how to get a particular user from the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//THIS IS GET A PARTICULAR USER WITH A ID&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For deleting a particular users&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// FOR deleting a particular user&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`user with id &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; has been deleted`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For updating a particular value of a user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Update a particular user&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`username has been updated to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.age has been updated to &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's have a look at the routes where the above operations will be directed to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;createUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;deleteUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateUser&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../Controllers/users.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;getUsers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;createUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;deleteUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;updateUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;index.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//  can also write const express = require ('express');&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;bodyParser&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body-parser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// bodyParser allows us to take incoming post request bodies&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;usersRoutes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/routes.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Now our whole appliaction lies in this little variable&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// specifying port of our aplication , you can choose any port &lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bodyParser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//it says we are going to use json data in our body&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;usersRoutes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Welcome to the Users API!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You've tried reaching a route that doesn't exist.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server running on port: http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; 
&lt;span class="c1"&gt;//To listen to this port and a callback function &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;YAYAA!!! we created our API with crud functionality, for testing you can use POSTMAN which is free will attach the link below for the same with the GitHub link 😄😄.&lt;br&gt;
&lt;a href="https://github.com/kirtisingh3008/Node_API_CRUD"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.postman.com/"&gt;Postman&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>api</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Server Side Rendering, Prisma + Next.js  + TypeScript</title>
      <author>Dylan Muraco</author>
      <pubDate>Sat, 25 Dec 2021 07:24:10 +0000</pubDate>
      <link>https://dev.to/dmuraco3/server-side-rendering-prisma-nextjs-typescript-3kad</link>
      <guid>https://dev.to/dmuraco3/server-side-rendering-prisma-nextjs-typescript-3kad</guid>
      <description>&lt;p&gt;I've been working on a new project recently (&lt;a href="https://code-components.vercel.app"&gt;CodeComponents&lt;/a&gt; if you wanna check it out) and struggled a little bit figuring out server side rendering because typescript wants to know what is being passed to the pages so I wanted to share how to do it.&lt;/p&gt;




&lt;p&gt;so lets say we have a helper function that just returns all posts from the database&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PrismaClient&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getPosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findMany&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#static-site-generation"&gt;
  &lt;/a&gt;
  Static Site Generation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GetStaticProps&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PromiseReturnType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;getPosts&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getPosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;posts&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextPage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InferGetStaticPropsType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;InferGetStaticPropsType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;getStaticProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* do whatever with posts here */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#server-side-rendering"&gt;
  &lt;/a&gt;
  Server Side Rendering
&lt;/h2&gt;

&lt;p&gt;Server Side rendering is pretty similar we just have to change the type of props passed to page function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;GetServerSideProps&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PromiseReturnType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;getPosts&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getPosts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;posts&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextPage&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InferGetServerSidePropsType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;InferGetServerSidePropsType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* do whatever with posts here */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope this was helpful&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>nextjs</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Position Sticky With CSS Grid, Conditional Border Radius In CSS, Custom Scrollbars In CSS</title>
      <author>Sarmin Akter Dipty</author>
      <pubDate>Sat, 25 Dec 2021 06:20:00 +0000</pubDate>
      <link>https://dev.to/sarminakterdipty/position-sticky-with-css-grid-conditional-border-radius-in-css-custom-scrollbars-in-css-28ff</link>
      <guid>https://dev.to/sarminakterdipty/position-sticky-with-css-grid-conditional-border-radius-in-css-custom-scrollbars-in-css-28ff</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bBXtd9H6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bf1eo0m28s9vem6gufgs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bBXtd9H6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bf1eo0m28s9vem6gufgs.jpg" alt="Image description" width="500" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS Blogs&lt;/p&gt;

&lt;p&gt;Position Sticky With CSS Grid&lt;br&gt;
Have I ever come across a case where the sticky position isn’t working as expected with a child of a grid container? A few days ago, I was helping youtube in fixing that exact problem and wanted to finally write about it.&lt;/p&gt;

&lt;p&gt;HTML__:&lt;br&gt;
     &lt;/p&gt;
&lt;br&gt;
    &lt;br&gt;
    &lt;br&gt;


&lt;p&gt;CSS__:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; .wrapper {
display: grid;
grid-template-columns: 250px minmax(10px, 1fr);
grid-gap: 1rem;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Conditional Border Radius In CSS&lt;br&gt;
We have a card component with a border-radius of 8px. When the card doesn’t have margin or is taking the full viewport width, we want to flip the border-radius to 0.&lt;/p&gt;

&lt;p&gt;CSS__:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; @media (min-width: 700px) {
.card {
    border-radius: 8px;    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Custom Scrollbars In CSS&lt;/p&gt;

&lt;p&gt;First, we need to define the size of the scrollbar. This can be the width for vertical scrollbars, and the height for horizontal ones.&lt;br&gt;
CSS__:&lt;br&gt;
.section::-webkit-scrollbar {&lt;br&gt;
    width: 10px;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;CSS Scroll Snap&lt;br&gt;
To create a scrolling container, here are the basic things that you will need:&lt;br&gt;
Using the overflow with a value other than visible.A way to display the items next to each other inline.&lt;br&gt;
HTML__:&lt;/p&gt;

&lt;p&gt;Item 1&lt;br&gt;
  Item 2&lt;br&gt;
  Item 3&lt;br&gt;
  Item 4&lt;br&gt;
  Item 5&lt;/p&gt;

&lt;p&gt;CSS__:&lt;br&gt;
.section {&lt;br&gt;
  white-space: nowrap;&lt;br&gt;
  overflow-x: auto;&lt;br&gt;
}&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>RecatJS CRUD operations using Local Storage</title>
      <author>Deepak</author>
      <pubDate>Sat, 25 Dec 2021 06:15:28 +0000</pubDate>
      <link>https://dev.to/deepakjaiswal/recatjs-crud-operations-using-local-storage-3ih2</link>
      <guid>https://dev.to/deepakjaiswal/recatjs-crud-operations-using-local-storage-3ih2</guid>
      <description>&lt;p&gt;many developers using localStorage for learning or some operation&lt;br&gt;
like add to cart and store token or user information into the browser.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-local-storage"&gt;
  &lt;/a&gt;
  What is local Storage?
&lt;/h2&gt;

&lt;p&gt;local storage is type of memory in our browser to save our data.&lt;br&gt;
local storage storage limit is 5 MB.&lt;/p&gt;

&lt;p&gt;local storage is our browser memory so we can store everything in our browser using javascript or ReactJS.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#in-html"&gt;
  &lt;/a&gt;
  In HTML
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
localStorage.setItem("key","value");
localStorage.getItem("key");
localStorage.removeItem("key");
console.log(localStorage)
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#in-reactjs"&gt;
  &lt;/a&gt;
  In ReactJS
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App(){
localStorage.setItem("key","value");
const store=localStorage.getItem("key");
localStorage.removeItem("key");
console.log(localStorage)

return(
&amp;lt;div&amp;gt;
{store}
&amp;lt;/div&amp;gt;

)}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In many users questions how we store array of object in localStorage. here is the solution.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const data={
name:"Deepak",
address:"Allahabad"
}
localStorage.setItem("user",JSON.stringify(data))

const user=JSON.parse(localStorage.getItem("user"))

console.log(user)
//it return {name :"Deepak", address :"Allahabad"}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>react</category>
      <category>typescript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>8 JavaScript Tips &amp; Tricks That No One Teaches 🚀</title>
      <author>Smart Coder</author>
      <pubDate>Sat, 25 Dec 2021 06:09:58 +0000</pubDate>
      <link>https://dev.to/smartzcoder/8-javascript-tips-tricks-that-no-one-teaches-50n8</link>
      <guid>https://dev.to/smartzcoder/8-javascript-tips-tricks-that-no-one-teaches-50n8</guid>
      <description>&lt;p&gt;JavaScript is no doubt one of the coolest languages in the world and is gaining more and more popularity day by day. So the developer community has found some tricks and tips after using JS for quite a while now. Today I will share 8 Tips &amp;amp; Tricks With You!&lt;/p&gt;

&lt;p&gt;So let's get started &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;span&gt;&lt;a href="https://www.codelivly.com/8-javascript-tips-tricks-that-no-one-teaches/" rel="noreferrer noopener nofollow"&gt;8 JavaScript Tips &amp;amp; Tricks That No One Teaches 🚀&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10+ Best Christmas and New Year Gift Ideas for Developers</title>
      <author>javinpaul</author>
      <pubDate>Sat, 25 Dec 2021 05:51:34 +0000</pubDate>
      <link>https://dev.to/javinpaul/10-best-christmas-and-new-year-gift-ideas-for-developers-57bh</link>
      <guid>https://dev.to/javinpaul/10-best-christmas-and-new-year-gift-ideas-for-developers-57bh</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYgVLUUO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7rkzn0wt7ugbxdo0qd0.jpg" alt="best gift ideas for programmers" width="880" height="608"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, it's that time of the year again when we buy gifts for our loved ones, friends, and colleagues. If you are looking for gift ideas for your programmer friends and colleagues then you have come to the right place. &lt;/p&gt;

&lt;p&gt;My friend circle has a lot of programmers and non-programmers. When it comes to buying &lt;a href="http://www.java67.com/2017/12/top-5-amazing-gifts-for-programmers-coders.html"&gt;gifts&lt;/a&gt; for birthdays, anniversaries, or holidays, I receive a lot of queries from my non-programmer family and friends about what to buy for a programmer? &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Well, buying a gift is easy but choosing or finding the right gift for someone is really really tough. I have had this experience when it comes to buying gifts for kids.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I know they like toys but my wife told me to buy something more valuable, which not only keeps them engaged but also provides value, helps them in learning and they appreciate it every time they use it. That's a lot to cater to one gift, but that's the perfect gift, isn't it?&lt;/p&gt;

&lt;p&gt;The same goes for programmers, you buy them something which they don't care about will not make a difference, they will gleefully accept it, and it will remain in the corner of the house, but, if you give something which they can use daily or carve for, they will not only remember you every day but also &lt;strong&gt;appreciate your sense of gift.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You will be in their good books for a long time. This is particularly important if you try to impress your colleague or boss, who happens to be a technical guy or programmer.&lt;/p&gt;

&lt;p&gt;Like any gift, the budget is significant; some gifts are good, but if they are costly and you can't afford them, then they are not useful.&lt;/p&gt;

&lt;p&gt;But, if you want to give someone who is dear to you, like your husband, boyfriend, brother, or just a close friend, you definitely want to buy more valuable gifts. &lt;/p&gt;

&lt;p&gt;That's why I have included both precious and somewhat expensive, as well as many affordable gifts, which you can buy for under 100$. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#11-best-gifts-for-programmers-and-developers"&gt;
  &lt;/a&gt;
  11 Best Gifts for Programmers and Developers
&lt;/h2&gt;

&lt;p&gt;Here are some of the best gifts you can give to your programmer friends. The gifts are listed in random order, and some of them are costly, you can choose based on your budget.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-fitness-tracker-or-equipment"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Fitness tracker or equipment&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This is another awesome gift you can give someone you love. Since many programmers lack physical activity, you not only encourage them to do more physical activity but also improve their lifestyle.&lt;/p&gt;

&lt;p&gt;One thing in recent time which I have seen encourage programmer to spend more time away from screen and doing some exercise or active lifestyle is fitness tracker and its no surprise because programmer also love stats which these trackers provide.&lt;/p&gt;

&lt;p&gt;If you are short of ideas on which fitness tracker to buy for your programmer friend then this &lt;a href="https://www.amazon.com/Fitbit-Advanced-Management-Tracking-Graphite/dp/B09BXQ4HMB?tag=javamysqlanta-20"&gt;Fitbit Charge 5 Advanced Fitness &amp;amp; Health Tracker&lt;/a&gt; is great one to gift.&lt;/p&gt;

&lt;p&gt;It comes with Built-in GPS, Stress Management Tools, Sleep Tracking, 24/7 Heart Rate and More. They may not appreciate it in a short time, but they will surely do in the long run :-)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Fitbit-Advanced-Management-Tracking-Graphite/dp/B09BXQ4HMB?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aD0hnvIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtt2mej73piig6sqe1oq.png" alt="best fitness tracker for progarmmers" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-gift-a-course-from-udemy"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.  **&lt;/strong&gt; &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14494&amp;amp;RD_PARM1=https%253A%252F%252Fwww.udemy.com%252F"&gt;Gift a course from Udemy&lt;/a&gt;**
&lt;/h3&gt;

&lt;p&gt;Programmers love online courses, including me, and Udemy is the biggest collection of online courses. It has got over 55,000 online courses to learn anything, like starting from popular programming languages like Java and Python to advanced technology, like Big Data, Automation, Cloud Computing, Artificial Intelligence, Machine learning, Robotics, etc.&lt;/p&gt;

&lt;p&gt;Udemy allows you to send a course or a gift card to your programmer friend, you just need to enter his email while purchasing the course.&lt;/p&gt;

&lt;p&gt;My wife gifted me the &lt;a href="http://bit.ly/2BYyDkV"&gt;&lt;strong&gt;Machine Learning A-Z: Hands-On Python &amp;amp; R In Data Science&lt;/strong&gt;&lt;/a&gt;, and I simply loved it. If your husband is interested in Data Science, Machine Learning, or Artificial intelligence, then you can gift that too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14494&amp;amp;RD_PARM1=https%253A%252F%252Fwww.udemy.com%252F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1rtqVvyk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://4.bp.blogspot.com/-F7cRHnf4dPU/Wj0DOrXsFSI/AAAAAAAAJvk/z-0-_GR4IMMNoXab5ipsBdrvm8hRst43QCLcBGAs/w400-h251/Udemy%252Bgift%252Bto%252Bprogrammers.png" alt="Top 5 Amazing Gifts for Programmers and developers" width="399" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you know what your husband or boyfriend likes, then you can choose some excellent courses from Udemy; otherwise, I just bought a gift card for them.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-plurasight-membership"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. &lt;a href="http://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Plurasight Membership&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The programmer appreciates memberships. You can buy the Pluralsight annual membership, which costs around 299$. It's a little bit expensive, but it offers him a lot of choices on learning, and your programmer friend will appreciate it every time he uses it.&lt;/p&gt;

&lt;p&gt;If you are concerned about the cost side, then monthly membership is also a good option, which costs around 29$. The annual membership of Pluralsight is a little bit costly, but it's worth every penny.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fgift-of-pluralsight"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r84ZT6jW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEg10nELoi8V6OR3QTK1aFcm7OP29vj896ZLAuqJfRVtbR3MjlNdvKK1kZ5mgxhDv-fc-vWhsRPOW_JcI4tcMMvkCCbyWPvxim_J0z6Uxv13msPuG5lpXAZDxfgeNuyqbcw_lWchWB-AXUkapKXAjN9WMIHShxYeHCoqMEh4MryDrynHUnvSkuVjEAMo%3Dw392-h271" alt="Best Gift ideas for Programmers and Developers" width="392" height="270"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4new-16inch-macbook-pro"&gt;
  &lt;/a&gt;
  4.&lt;a href="https://www.amazon.com/Apple-MacBook-16-inch-16GB-Storage/dp/B081FV1Y57?tag=javamysqlanta-20"&gt;New 16-inch MacBook Pro&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Developers Love Gadgets, and nothing beats Apple when it comes to gadgets. If you are a programmer, friends don't have MacBook Pro, then it's a perfect idea to gift that to them. Apple just announced a new 16-inch MacBook Pro, which many people call the ultimate developer machine, and I also think it is the best programmer gift for 2021 and 2022.&lt;/p&gt;

&lt;p&gt;Apart from Apple fixing the keyboard issue, here are some of the major highlights of New 16-inch MacBook Pro, looking like an awesome Developer machine:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  16-inch Retina display&lt;/li&gt;
&lt;li&gt;  Up to 8-core processor&lt;/li&gt;
&lt;li&gt;  Up to 8TB SSD storage&lt;/li&gt;
&lt;li&gt;  Up to 64GB of memory&lt;/li&gt;
&lt;li&gt;  Up to 11 hours of battery life&lt;/li&gt;
&lt;li&gt;  Dedicated escape key&lt;/li&gt;
&lt;li&gt;  Dedicated arrow buttons&lt;/li&gt;
&lt;li&gt;  AMD Radeon Pro 5000M series graphics&lt;/li&gt;
&lt;li&gt;  Six-speaker sound system and studio-quality mics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Apple-MacBook-16-inch-16GB-Storage/dp/B081FV1Y57?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6qUVaemd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-5Goh0crITLc/XdSnQFTDXOI/AAAAAAAAb0Y/KyOLzllRBzkP0TzeCwpDL0rUAv1hnSEUgCLcBGAsYHQ/s400/Apple_16-inch-MacBook-Pro_best_Programmer_Gift.jpeg" alt="Best Gifts for Programmers" width="400" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sure, it's costly, but if he is someone you love or are very close to, then it's definitely worth it, and whoever you gift it will not forget you for a long time.  In fact, this is the ultimate gift for a programmer, it's on the wish list too just in case if you want to gift me :-)&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-educative-unlimited"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative Unlimited&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is another great platform to learn the online platform and allows you to gift a subscription to anyone you want. Educative is a bit different than Udemy and Pluralsight because it's a text-based, interactive platform that is different than watching videos.&lt;/p&gt;

&lt;p&gt;The best thing about Educative is that they have an excellent collection of courses for coding interviews like Grokking the System Design Interview and Grokking the Coding interview pattern. If you give the gift of Educative unlimited to your friend then they will appreciate it a lot while preparing for their next interview.&lt;/p&gt;

&lt;p&gt;They can also use it to level up their tech skill as it has more than 250+ courses with new courses added every week. They are also offering a holiday special plan now where you can buy a &lt;strong&gt;&lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;2 years plan for just $12.9 per month&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cb4IxGOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-lI3d4z9vvT4/Yblw05kEOgI/AAAAAAAAqi8/g6mUeiZNBDsaevfLRQ_wlntVGj9ADZuRQCNcBGAsYHQ/w412-h232/09f5aae6490cdc520fc93292bbe0da28b0cfdf31.jpeg" alt="best course subscription gifts for developers" width="412" height="232"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-amazon-prime-music-subscription"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. &lt;a href="https://www.amazon.com/gp/dmusic/promotions/PrimeMusic?tag=javamysqlanta-20"&gt;Amazon Prime Music subscription&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Another thing programmers Loves is music, they just never get tired of listening to music. Many programmers, in fact, need music to work and increase their productivity.&lt;/p&gt;

&lt;p&gt;Amazon Music is the biggest collection of music, and your programmer friend will surely find something he loves in this big store of music. He will appreciate your thoughts and effort every time he listens to music on his Bose headset as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://javarevisited.blogspot.sg/2015/12/3-gifts-for-your-java-programmer.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UnyhrpWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://3.bp.blogspot.com/-GHSZCe7clsw/WjErg7cy4II/AAAAAAAAJrY/VxkJpFTKpEALpPQy1cxmLnJk6Xh88h1dgCEwYBhgL/w400-h260/Amazon%252BPrime%252BMusic.jpg" alt="best gift for software engineers" width="400" height="260"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#7-raspberry-pi"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. &lt;a href="https://www.amazon.com/LANDZO-Raspberry-Pi-Model-8gb/dp/B08R87H4RR?tag=javamysqlanta-20"&gt;Raspberry Pi&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Raspberry Pi has been around for a while, but it seems like it just keeps getting awesome. Programmers are curious people and to play with electronics. Raspberry Pi is an entire mini-computer for a ridiculously low price, and you can get an excellent bundle, like this one, which adds all kinds of cool stuff to play with.&lt;/p&gt;

&lt;p&gt;It's also great for tinkering around with teaching programming to kids or making your own network of servers. Once, I ran Linux on my Rasberry Pi and used putty to connect it, how awesome is that? In short, one of the best gadgets to gift your programmer friend.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/LANDZO-Raspberry-Pi-Model-8gb/dp/B08R87H4RR?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9hosMIVe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q7d6gwxh1ykqrk201g2b.jpg" alt="best gadget gifts for programmers" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-books"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. Books&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Similar to gadgets and music Programmers also like books a lot, but with the book, there is confusion. Which book you should buy for them? A novel, a programming book, or something else.&lt;/p&gt;

&lt;p&gt;Well, even though many programmers like fantasy books and novels, they are not so valuable for them, but if you buy them something like &lt;a href="https://www.amazon.com/Grokking-Algorithms-illustrated-programmers-curious/dp/1617292230/?tag=javamysqlanta-20"&gt;&lt;strong&gt;Grokking Algorithms&lt;/strong&gt;&lt;/a&gt;, books which every programmer can read, they will appreciate it more.&lt;/p&gt;

&lt;p&gt;If you need more books to gift programs there are a lot of choices available, you should check out my list of 10 books every programmer should read &lt;a href="http://www.java67.com/2015/03/10-books-every-programmer-and-software-engineer-read.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.java67.com/2015/09/top-10-algorithm-books-every-programmer-read-learn.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWrEL075--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-gP6C-p4cTa8/XdSoQThToNI/AAAAAAAAb0o/fpvTxnnl3zEpbvHsBFFaO3FZV-jr4fFAwCLcBGAsYHQ/s320/grokking%252Balgorithms%252Bpython%252Bjava.png" alt="best books you can gifts to programmers " width="240" height="320"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#9-logitech-g710-mechanical-gaming-keyboard"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9. &lt;a href="https://www.amazon.com/Logitech-Mechanical-Keyboard-Tactile-High-Speed/dp/B009C98NPY?tag=javamysqlanta-20"&gt;Logitech G710+ Mechanical Gaming Keyboard&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Every programmer needs an excellent keyboard, and your friend will not be different. Though some programmers like a silent keyboard and some programmers like a Gaming keyboard, I like gaming one more because I also play games on my PC. Logitech is one of the best companies for peripheral devices, so to me, this keyboard is a great buy.&lt;/p&gt;

&lt;p&gt;In addition to being a fantastic mechanical keyboard, it also has a bunch of really cool gaming features, so I'm a big fan of it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Logitech-Mechanical-Keyboard-Tactile-High-Speed/dp/B009C98NPY?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rUs3XE0s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-_gROK7ih3BI/WjEse-pW_1I/AAAAAAAAJrk/nMN1cAV8cPwG0AiVY08pzOnF-doE4-77gCLcBGAs/s320/Logitech%252BGAming%252BKeyboard%252B-%252Bgift%252Bfor%252Bprogrammer.jpg" alt="best keyboard for programmers" width="291" height="320"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#10-pc-and-console-games"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10. PC and Console Games&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Like gadgets, music, and books, Programmers love Games too, well I certainly do. I have grown up playing Nintendo games like Super Mario Bros, Mortal Combat, and I still play games on my Xbox.&lt;/p&gt;

&lt;p&gt;So, either you can buy your friend a gaming console like Xbox or Nintendo PI, or if he already has one, you can buy them games like Minecraft. That's something they will enjoy for sure.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#11-intel-boxed-compute-stick-with-windows-10-preloaded"&gt;
  &lt;/a&gt;
  &lt;strong&gt;11. &lt;a href="https://www.amazon.com/Intel-Compute-Computer-Processor-BOXSTK1AW32SC/dp/B01AZC4NHS?tag=javamysqlanta-20"&gt;Intel Boxed Compute Stick with Windows 10 Pre-Loaded&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This is a really awesome gift for tech geeks? An entire computer, complete with Windows 10, is on a stick. You just plug this thing into a TV or monitor, and you have a computer.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.java67.com/2017/10/5-best-gifts-for-programmers-and-software-developers-geeks.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K1TkSYTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://2.bp.blogspot.com/-CM8oJLvr9O8/WjEtW9LdLzI/AAAAAAAAJrw/dMJananOi60xlfb_BOcLvT6qJh2Wh2MVACLcBGAs/s320/Intel%252BCompute%252BStick.jpg" alt="" width="320" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the best part of it is that it will just you over $100. Simply Awesome.&lt;/p&gt;

&lt;p&gt;That's all on this &lt;strong&gt;best gift ideas for programmers and developers&lt;/strong&gt;. I am sure your programmer friend or colleague will love any gift from this list. You can buy them for their birthday or gift them during the coming holidays.&lt;/p&gt;

&lt;p&gt;I know it's hard to choose a gift, but whatever time and effort you put into selecting a gift will be remembered forever by your friend if you keep their interest and needs in mind.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Programming and Course Articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/11/top-10-udemy-courses-you-can-buy-in.html#axzz6enw6Ycw1"&gt;10 Udemy Courses you can buy on Sale Now&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/udemy-vs-pluralsight-review-which-is-better-to-learn-code.html"&gt;Udemy vs Pluralsight? Which is a better learning platform?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-courses-specilizations-and-certifications.html"&gt;Top 10 Coursera Courses for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;8 Projects You can do to learn Python&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/11/top-5-black-friday-and-cyber-monday.html#axzz6enw6Ycw1"&gt;Top 5 Things you can buy for Programmers &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/09/codecademy-vs-udemy-vs-onemonth-which-is-better-for-learning-code.html#axzz6VYKcmyZz"&gt;Udemy vs CodeCademy vs OneMonth?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-projects-to-learn-essential-programming-skills.html"&gt;Top 10 Coursera Projects for Programmers and Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-best-courses-to-learn-artificial-intelligence-in-2020-26d59d62f6fe"&gt;7 Best courses to learn Artificial Intelligence&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/codecademy-or-pluralsight-which-is-a-better-platform-to-learn-coding-skills-59251a080642"&gt;Udemy vs Educative vs CodeCademy? Which is better for beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/01/coursera-vs-udemy-which-is-better-for-programming-tech.html"&gt;Udemy vs Coursera? which is better to learn Tech and Programming&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/does-udemy-coursera-edx-educative-or.html"&gt;Does Coursera Certificates helps in Job and Career&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/18-coursera-courses-you-can-join-in-2020-to-learn-from-the-worlds-top-tech-companies-google-74af46967d1e"&gt;18 Coursera Courses to learn from top Tech Companies like Google and IBM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;10 Coursera Specialization and Certifications to learn Python&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/top-5-coursera-professional-certificates-for-programmers-IT-professionals.html"&gt;5 Best Coursera Professional Certificates for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-coursera-certificates-to-start-your-career-in-cloud-data-science-ai-mainframe-and-it-558690c83587"&gt;Top 10 Coursera Certifications to start your career&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-machine-learning-and-data-science-certifications-and-training-courses-for-beginners-and-a6308497b764"&gt;10 Data Science and Machine Learning Certifications form Coursera&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article. If you like these &lt;em&gt;gift ideas for programmers and developers&lt;/em&gt; then please share them with your friends and colleagues. If you have any questions or feedback then please drop a note.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are still not sure what to buy then I suggest giving a &lt;strong&gt;&lt;a href="http://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluralsight subscription&lt;/a&gt;&lt;/strong&gt; as a gift because this will allow your programmer friend to learn whatever they want to learn. This is the gift they will use every day and while using it they will also remember and thank you for your thought and consideration and this amazing gift.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. S. -&lt;/strong&gt; - if you any interesting gift ideas for programmers and developers, feel free to share with us, I am always short of gift ideas and love to hear from you. &lt;/p&gt;

</description>
      <category>programming</category>
      <category>programmer</category>
      <category>gift</category>
      <category>developer</category>
    </item>
    <item>
      <title>Animate on click with Javascript!</title>
      <author>Subhransu Patra</author>
      <pubDate>Sat, 25 Dec 2021 05:06:17 +0000</pubDate>
      <link>https://dev.to/subhransuindia/animate-on-click-with-javascript-5ae8</link>
      <guid>https://dev.to/subhransuindia/animate-on-click-with-javascript-5ae8</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;Hello&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Merry Christmas&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Previous Chapter &lt;a href="https://inform-our-world.github.io/Saqha/CH%202.2"&gt;Chapter 2 (Part 2)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inform Our World &lt;a href="https://inform-our-world.github.io/"&gt;Link here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://subhransuindia.github.io/Subhransu%20Patra.html"&gt;My Portfolio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Animation with js? Not too much tough but if you are new to javascript, like me, then at first it would be a  little bit difficult but with time, you would be coping up with it. So, lets start the topic of 'Animate on click with Javascript!'&lt;/p&gt;

&lt;p&gt;First create a HTML file...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Animate on click with Javascript!&amp;lt;/title&amp;gt;
&amp;lt;meta charset="utf-8"&amp;gt;
&amp;lt;meta name="viewport" content="width=device-width, initial-scale=1"&amp;gt;
&amp;lt;style&amp;gt;
body {
  margin: 0;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add any tag such as &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;. It is upto you which tag you will use to animate...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p&amp;gt;Hello World!&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here I used &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag. Then create an &lt;code&gt;id=""&lt;/code&gt; for it. Let's name it just p. You can use anything...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p id="p"&amp;gt;Hello World!&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we need a button so that if we clicked on it, it would animate as per our needs...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button&amp;gt;Click to Animate&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then in the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; tag add &lt;code&gt;onclick=""&lt;/code&gt;. It is very much essential for onclick animation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button onclick="beyblade()"&amp;gt;Click to Animate&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have put &lt;code&gt;beyblade()&lt;/code&gt; in &lt;code&gt;onclick=""&lt;/code&gt;. &lt;code&gt;()&lt;/code&gt; is very much essential...&lt;/p&gt;

&lt;p&gt;Then add &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; in the body...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in that add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
function beyblade() {

}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The text after &lt;code&gt;function&lt;/code&gt; will be the one you have written in &lt;code&gt;onclick=""&lt;/code&gt; i.e. I have written &lt;code&gt;onclick="beyblade()"&lt;/code&gt;, the same I will write after &lt;code&gt;function&lt;/code&gt; i.e.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function beyblade() {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, let's take the element that we take be &lt;code&gt;x&lt;/code&gt;. So to do this, implement..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
function beyblade() {
let x = document.getElementById("p")
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then add the following component...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
function beyblade() {
let x = document.getElementById("p")
x.style.marginLeft = "300px"
x.style.transition = "1s"
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;x.style.transition&lt;/code&gt; will create transitions and &lt;code&gt;1s&lt;/code&gt; will create timing for it. &lt;/p&gt;

&lt;p&gt;You can implement any css component in place of &lt;code&gt;marginLeft&lt;/code&gt; such as &lt;code&gt;x.style.color = red&lt;/code&gt; it will change the text color to red and &lt;code&gt;x.style.backgroundColor = blue&lt;/code&gt; will change the background color to blue.  &lt;/p&gt;

&lt;p&gt;It  helps  us to create a hamburger menu also.&lt;/p&gt;

&lt;p&gt;So, this is for today. I hope you liked the article and if you, then please notify me. &lt;/p&gt;

&lt;p&gt;Full Code..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Animate on click with Javascript!&amp;lt;/title&amp;gt;
&amp;lt;meta charset="utf-8"&amp;gt;
&amp;lt;meta name="viewport" content="width=device-width, initial-scale=1"&amp;gt;
&amp;lt;style&amp;gt;
body {
  margin: 0;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p id="p"&amp;gt;Hello World!&amp;lt;/p&amp;gt;

&amp;lt;button onclick="beyblade()"&amp;gt;Click to Animate&amp;lt;/button&amp;gt;

&amp;lt;script&amp;gt;
function beyblade() {
let x = document.getElementById("p")
x.style.marginLeft = "300px"
x.style.transition = "1s"
}
&amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for your time. 😺&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>2021 Wrapped</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Sat, 25 Dec 2021 04:18:05 +0000</pubDate>
      <link>https://dev.to/avneesh0612/2021-wrapped-3kb6</link>
      <guid>https://dev.to/avneesh0612/2021-wrapped-3kb6</guid>
      <description>&lt;p&gt;This year has been so amazing, and I have done lots of stuff. So in this article, I am just gonna show everything that I did this year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLqrlwDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/3o6wrgQPwbYWY8hwze/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLqrlwDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/3o6wrgQPwbYWY8hwze/giphy.gif" alt="GIF" width="480" height="204"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#january"&gt;
  &lt;/a&gt;
  January
&lt;/h2&gt;

&lt;p&gt;I was very new to coding, I knew a bit of HTML which I learned in school. I was watching youtube and randomly a video came in my recommendations about building a google clone with react and I started building it. I had never done CSS or React and jumped straight in to react.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OvUKMnJp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640329719514/6KFGdlq-Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OvUKMnJp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640329719514/6KFGdlq-Q.png" alt="image.png" width="571" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#february"&gt;
  &lt;/a&gt;
  February
&lt;/h2&gt;

&lt;p&gt;Participated in a 5 day React.JS Netflix Challenge. In this challenge, I got to make a Netflix clone, help so many amazing people and I also secured third place! With this, I joined the &lt;a href="https://www.papareact.com/"&gt;Papafam&lt;/a&gt;. I won the challenge but I didn't really know about what was react and was just coding things from tutorials. Simply, I was stuck in tutorial hell.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7cZ2ndKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/HC2Sa7-gBIoAAAAM/fire-eyes.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7cZ2ndKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/HC2Sa7-gBIoAAAAM/fire-eyes.gif" alt="Elmo GIF" width="220" height="151"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#march"&gt;
  &lt;/a&gt;
  March
&lt;/h2&gt;

&lt;p&gt;Started going through the course modules and learned the basics of React. It didn't make much sense at the beginning but it slowly began to make more sense. To get out of the tutorial hell I started building projects and the first one was a &lt;a href="https://avneeshtodo.netlify.app/"&gt;Todo App&lt;/a&gt;. I got stuck at various points but I asked some people for help and they helped very kindly :D. I was trying my best to get out of tutorial hell this month by building small projects on my own. Another app I built was a  &lt;a href="https://avneesh-weather-app.netlify.app/"&gt;weather app&lt;/a&gt;. This wasn't very good but I got to learn about APIs, CSS and so much more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sRjZcJK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640347174641/mRHtpUmeS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sRjZcJK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640347174641/mRHtpUmeS.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#april"&gt;
  &lt;/a&gt;
  April
&lt;/h2&gt;

&lt;p&gt;I started my first internship at StackFusion which was even paid! This was a 3-month internship and a good opportunity for me to learn new things. I also wrote my first article on  &lt;a href="https://medium.com/sonny-sangha/how-to-build-google-sign-in-with-firebase-in-react-with-react-firebase-hooks-c327c80db25d"&gt;Medium&lt;/a&gt;. A lot was going on at this time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RN0X62er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/xKUEjR8XMm4AAAAM/walter-crazy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RN0X62er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/xKUEjR8XMm4AAAAM/walter-crazy.gif" alt="GIF" width="220" height="171"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#may"&gt;
  &lt;/a&gt;
  May
&lt;/h2&gt;

&lt;p&gt;In May when I completed my first month at Stackfusion I was pretty tired because I was supposed to work for fixed hours every day and on the commands of someone else which was very new to me. On top of that, there was school 😭. But I kept on going 💪. I also wrote another &lt;a href="https://medium.com/geekculture/git-and-github-crash-course-b44f4885ff66"&gt;article&lt;/a&gt; this month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tgMlSKPz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/_tT0mRfm0t8AAAAM/embarrassed-sad.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tgMlSKPz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/_tT0mRfm0t8AAAAM/embarrassed-sad.gif" alt="GIF" width="220" height="143"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#june"&gt;
  &lt;/a&gt;
  June
&lt;/h2&gt;

&lt;p&gt;I completed 2 months at the internship and it wasn't as hard as the second month because I was getting used to the environment. I also started learning Next.js and migrated the site I built for the company from plain react to Next.js. At the end of this internship, I had completed this &lt;a href="https://nextjs-dashboard-kotak.vercel.app/home"&gt;website&lt;/a&gt;. Pretty proud of how it came out :D.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tnxmQjWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640350844362/OKU25hXbF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tnxmQjWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640350844362/OKU25hXbF.png" alt="image.png" width="880" height="799"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I also hosted a coaching call in the PapFam community, where I taught about converting a dribble design to a website with tailwindCSS. And in terms of writing, I wrote 5 articles this month which was quite a lot for me at that time!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#july"&gt;
  &lt;/a&gt;
  July
&lt;/h2&gt;

&lt;p&gt;At the starting of July, I was relaxing for a bit. Into the second week, I started messing around with some new tech and learning new things! During the 3rd week of July a friend of mine, [Usman Sabuwala](&lt;a href="https://twitter.com/MaxProgramming1"&gt;https://twitter.com/MaxProgramming1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;) told me that there is a hackathon being organized by &lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt; and &lt;a href="https://clerk.dev/"&gt;Clerk.dev&lt;/a&gt;. So I thought why not give it a try! I started seeing what is Clerk and wrote an &lt;a href="https://blog.avneesh.tech/mastering-clerk-authentication-with-the-nextjs-standard-setup"&gt;article&lt;/a&gt; about it too. Finally, I made  &lt;a href="https://blog.avneesh.tech/how-i-built-chatcube-with-nextjs-tailwindcss-clerk-and-firebase-and-a-walkthrough-of-the-app"&gt;ChatCube&lt;/a&gt; in about a week and it was the winner of the hackathon! 🎉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfLBkt70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640351914338/QCc8a3Ylg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfLBkt70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640351914338/QCc8a3Ylg.png" alt="image.png" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#august"&gt;
  &lt;/a&gt;
  August
&lt;/h2&gt;

&lt;p&gt;In August I participated in another hackathon where &lt;a href="https://blog.avneesh.tech/introducing-voyagger-connecting-people-changing-lives"&gt;Voyagger&lt;/a&gt; was born. I didn't win the hackathon but in the process of building it, I learned a lot and also got some amazing content for my blog! This was one of my most productive months and I managed to write 13 articles this month!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rsEg4x9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640352885692/IEp2N3E1X.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rsEg4x9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640352885692/IEp2N3E1X.png" alt="image.png" width="880" height="998"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#september"&gt;
  &lt;/a&gt;
  September
&lt;/h2&gt;

&lt;p&gt;In September I started to create a new &lt;a href="https://www.avneesh.tech/"&gt;portfolio &lt;/a&gt; for myself from scratch with Next.js, TailwindCSS, typescript, and more fun stuff! In September hashnode was also organizing a BootCamp where I wrote 8 articles and learned so much more about technical writing! I also started to do some freelancing this month because I was getting quite some offers and I wanted to see how it feels doing freelance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BRBbQb-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.dribbble.com/users/1282416/screenshots/2857106/media/d28ab6a43314785c26f2053903ee43cd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRBbQb-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.dribbble.com/users/1282416/screenshots/2857106/media/d28ab6a43314785c26f2053903ee43cd.gif" alt="GIF" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#october"&gt;
  &lt;/a&gt;
  October
&lt;/h2&gt;

&lt;p&gt;In October I was doing a big freelancing gig with my friend &lt;a href="https://twitter.com/sahilpabale"&gt;Sahil Pabale&lt;/a&gt; which was almost a month long. In parallel with this gig, I also took some small gigs on an hourly basis when I got time! Since October I also started to get more into open source especially due to hacktoberfest! I also won the &lt;a href="https://townhall.hashnode.com/oss-grant-badge-winners"&gt;OSS Symposium&lt;/a&gt;  organized by Hashnode!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQ187ePJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.dribbble.com/users/730703/screenshots/4624912/media/28b0b1bca891fcc3de540aa757f300a2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQ187ePJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.dribbble.com/users/730703/screenshots/4624912/media/28b0b1bca891fcc3de540aa757f300a2.gif" alt="GIF" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#november"&gt;
  &lt;/a&gt;
  November
&lt;/h2&gt;

&lt;p&gt;In November I was feeling a bit burned out and I also had my school exams 😬. So I didn't get much time to code but I somehow managed to write 3 articles to keep my mind fresh and keep it going! A good thing about this month was that I made a lot more open source contributions than I usually do. I would like to give &lt;a href="https://twitter.com/eddiejaoude"&gt;Eddie Jaoude&lt;/a&gt; a special mention for this as he and his community have inspired and helped me a lot with OSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lsvIQPq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/so0ZNegFGWA7e/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lsvIQPq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media2.giphy.com/media/so0ZNegFGWA7e/giphy.gif" alt="GIF" width="350" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#december"&gt;
  &lt;/a&gt;
  December
&lt;/h2&gt;

&lt;p&gt;After my exams, I was back again! I decided to update some of my old side projects and make them better. I also made a &lt;a href="https://sponsor.avneesh.tech/"&gt;sponsors &lt;/a&gt; website for myself which &lt;a href="https://twitter.com/deninpaul_"&gt;Denin Paul&lt;/a&gt; designed for me! 🤯. December was probably one of the months where I was most active on &lt;a href="https://twitter.com/avneesh0612"&gt;Twitter&lt;/a&gt;, so pretty proud of that! I also managed to write 8 articles this month which was pretty good in front of 3 😆.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ftWiEFEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/82l4DoL7zINwWjcI1j/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftWiEFEP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media1.giphy.com/media/82l4DoL7zINwWjcI1j/giphy.gif" alt="GIF" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Overall, this year has been great for me. Hope it was amazing for you too! Merry Christmas and a Happy New year!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JIMDVx5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/0PiXuGtqd5cAAAAC/merry-christmas-and-happy-new-year.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JIMDVx5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/0PiXuGtqd5cAAAAC/merry-christmas-and-happy-new-year.gif" alt="GIF" width="380" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See ya next year ✌️🎉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://links.avneesh.tech/"&gt;&lt;strong&gt;Let's connect&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>2021</category>
      <category>wrapped</category>
      <category>achievements</category>
    </item>
    <item>
      <title>Upload image to Cloudinary with Node js</title>
      <author>Raflysyahr</author>
      <pubDate>Sat, 25 Dec 2021 04:14:46 +0000</pubDate>
      <link>https://dev.to/raflysyahr/upload-image-to-cloudinary-with-node-js-1j2f</link>
      <guid>https://dev.to/raflysyahr/upload-image-to-cloudinary-with-node-js-1j2f</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;install package&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;express&lt;/p&gt;

&lt;p&gt;cloudinary&lt;/p&gt;

&lt;p&gt;dotnv&lt;/p&gt;

&lt;p&gt;multer&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Jira Link Auto Commenter</title>
      <author>Bimochan Shrestha</author>
      <pubDate>Sat, 25 Dec 2021 03:42:28 +0000</pubDate>
      <link>https://dev.to/sbimochan/jira-link-auto-commenter-59lm</link>
      <guid>https://dev.to/sbimochan/jira-link-auto-commenter-59lm</guid>
      <description>&lt;p&gt;Migrating from bitbucket to Github made me lack only one feature. The link that navigates to its related Jira ticket from pull request.&lt;/p&gt;

&lt;p&gt;This is why I created this tool for my project.&lt;br&gt;
This Github action auto comments in pull request with Jira link to it. This tool is helpful for devs who use consistent PR summary like &lt;code&gt;Ticket-1234: This is PR summary&lt;/code&gt;.&lt;br&gt;
It grabs the ticket number using regex and comments on the PR by making a JIRA link. If it can't find the ticket number, it will fail silently and won't fail the whole workflow.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use:
&lt;/h3&gt;

&lt;p&gt;Create a workflow file in root of your project.&lt;br&gt;
&lt;code&gt;.github/workflows/main.yml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Input:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;custom-comment&lt;/code&gt;(optional): If you want to add your own comments before Jira link. Default is &lt;code&gt;Thank you for your contributions. Jira link:&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;jira-project-url&lt;/code&gt;: you can figure our this URL by going to any of your JIRA ticket in new tab and checking the URI box.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_TOKEN&lt;/code&gt;: is auto generated
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pull_request&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;example_comment_pr&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Auto jira link commenter&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v1&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Comment PR&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;sbimochan/jira-link-commenter@v2.4&lt;/span&gt;

        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;jira-project-url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;https://jira.atlassian.net/browse&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;custom-comment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Thank&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;you&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;for&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;your&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;contribution!!!&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;:confetti_ball:'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope you will find it useful for your project. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/auto-ticket-link-commenter"&gt;Marketplace&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/sbimochan/jira-link-commenter"&gt;Github Repo&lt;/a&gt;&lt;/p&gt;

</description>
      <category>githubactions</category>
      <category>bot</category>
      <category>projectmanagement</category>
      <category>jira</category>
    </item>
    <item>
      <title>Public Solving: Earth, Fire, Snow game</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 25 Dec 2021 02:55:14 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/public-solving-earth-fire-snow-game-2p3i</link>
      <guid>https://dev.to/dailydevtips1/public-solving-earth-fire-snow-game-2p3i</guid>
      <description>&lt;p&gt;The elves love making up games, and they have their own version of Rock, Paper, Scissor. &lt;/p&gt;

&lt;p&gt;Their version includes Earth, Fire, and Snow.&lt;br&gt;
Let me quickly tell you how you can win with this game:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fire melts snow&lt;/li&gt;
&lt;li&gt;Snow covers earth&lt;/li&gt;
&lt;li&gt;Earth extinguishes fire&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alright, let's get right into coding this fun game for the elves 👏&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/devadvent/puzzle-14"&gt;Click here to view the puzzle.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#thinking-about-a-solution"&gt;
  &lt;/a&gt;
  Thinking about a solution
&lt;/h2&gt;

&lt;p&gt;I think it's safe to say there are only three options that win for this game.&lt;/p&gt;

&lt;p&gt;Then there is a tie (both the same)&lt;/p&gt;

&lt;p&gt;That's actually all there is, and it makes our program a bit easier to create.&lt;/p&gt;

&lt;p&gt;Let me show you how:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#building-the-earth-fire-snow-game-in-javascript"&gt;
  &lt;/a&gt;
  Building the earth, fire, snow game in JavaScript
&lt;/h2&gt;

&lt;p&gt;Let's first define an object with the winning combinations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;winMatchUp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;fire&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;snow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;earth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;earth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fire&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is no need to define the other way around as we can abstract it, seeing we only have two players.&lt;/p&gt;

&lt;p&gt;First, let's look at a draw. This means both players picked the same element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selectWinner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can check if user1's choice match up is equal to user2's choice. This would mean user 1 one.&lt;/p&gt;

&lt;p&gt;Let's me check an example to explain a bit more:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;user one picked snow&lt;/li&gt;
&lt;li&gt;user two picked earth&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We then query our match-up table and say give us the matchup object for &lt;code&gt;snow&lt;/code&gt;. This will return &lt;code&gt;earth&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So if we now compare this to user two choice, we won!&lt;/p&gt;

&lt;p&gt;In our code we can do it like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;winMatchUp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This automatically means, if user 1 did not win, user 2 must have won!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selectWinner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;winMatchUp&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;user1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;user2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there you go!&lt;/p&gt;

&lt;p&gt;A super simple game, but yet so much fun.&lt;/p&gt;

&lt;p&gt;I've run the test as a sanity check, and they turn green ✅.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZlJ1RYr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639507909269/SgCLLxFAz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ZlJ1RYr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639507909269/SgCLLxFAz.png" alt="All test green" width="612" height="292"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me know what you think of my solution and how you would do differently.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
  </channel>
</rss>
