<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Use of Font Ligatures in VS Code</title>
      <author>Stacksjar</author>
      <pubDate>Mon, 28 Jun 2021 13:22:26 +0000</pubDate>
      <link>https://dev.to/stacksjar/use-of-font-ligatures-in-vs-code-km4</link>
      <guid>https://dev.to/stacksjar/use-of-font-ligatures-in-vs-code-km4</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A9ptqUuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/se93ih8ftqy908wpevle.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A9ptqUuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/se93ih8ftqy908wpevle.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post we are going to learn how to modify the icons of operators we use in our programming languages using vscode font ligatures. For doing this we are going see how to use the Font Ligature settings in VS Code.&lt;/p&gt;

&lt;p&gt;You don't have to do any coding font ligatures are the optional features that are supported by many of the fonts available on the Internet. So follow the below steps for install coding font ligatures in your visual studio code.&lt;/p&gt;

&lt;p&gt;Read Complete Article Here: &lt;a href="https://stacksjar.com/post/use-of-font-ligatures-in-vs-code"&gt;https://stacksjar.com/post/use-of-font-ligatures-in-vs-code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Bits of Xperience: The Hidden Cost of IPageUrlRetriever.Retrieve</title>
      <author>Sean G. Wright</author>
      <pubDate>Mon, 28 Jun 2021 13:19:38 +0000</pubDate>
      <link>https://dev.to/wiredviews/bits-of-xperience-the-hidden-cost-of-ipageurlretriever-retrieve-3oj1</link>
      <guid>https://dev.to/wiredviews/bits-of-xperience-the-hidden-cost-of-ipageurlretriever-retrieve-3oj1</guid>
      <description>&lt;p&gt;There's a lot of new, helpful types and methods in Kentico Xperience 13.0... but it can sometimes be difficult to know when each should be used 🤔.&lt;/p&gt;

&lt;p&gt;Let's look at the simple (or is it?) example of the &lt;code&gt;IPageUrlRetriever&lt;/code&gt; interface and its &lt;code&gt;Retrieve()&lt;/code&gt; method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-we-learn"&gt;
  &lt;/a&gt;
  📚 What Will We Learn?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What &lt;code&gt;IPageUrlRetriever&lt;/code&gt; does&lt;/li&gt;
&lt;li&gt;The multiple overloads of the &lt;code&gt;Retrieve()&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;The hidden difference between each overload&lt;/li&gt;
&lt;li&gt;The best way to retrieve Page URLs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-ipageurlretriever"&gt;
  &lt;/a&gt;
  🎣 What is the IPageUrlRetriever?
&lt;/h2&gt;

&lt;p&gt;Using Kentico Xperience's &lt;a href="https://docs.xperience.io/developing-websites/implementing-routing/content-tree-based-routing"&gt;Content Tree based routing&lt;/a&gt; is the option most developers choose. It enables the ability to have some Pages in the Content Tree not participate in URL generation, and also ensures that &lt;a href="https://docs.xperience.io/developing-websites/implementing-routing/content-tree-based-routing#Contenttreebasedrouting-GenerationMultilingualURLgenerationonmultilingualsites"&gt;culture is included in URLs&lt;/a&gt; based on the site's settings.&lt;/p&gt;

&lt;p&gt;All of this means that generating URLs correctly can get a little tricky 😅!&lt;/p&gt;

&lt;p&gt;Fortunately, Kentico Xperience helps us out by providing the &lt;code&gt;IPageUrlRetriever&lt;/code&gt; interface which has 1 method, &lt;code&gt;Retrieve()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This method returns an instance of the &lt;code&gt;PageUrl&lt;/code&gt; type which is defined as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;// Encapsulates page relative path and absolute URL.&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PageUrl&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;PageUrl&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="c1"&gt;// Relative path (starting with ~/) of the page.&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;RelativePath&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;//&lt;/span&gt;
    &lt;span class="c1"&gt;// Absolute URL of the page.&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;AbsoluteUrl&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We can use this &lt;code&gt;PageUrl&lt;/code&gt; instance to render links to other Pages in our Razor Views.&lt;/p&gt;

&lt;p&gt;However, there are multiple overloads of the &lt;code&gt;Retrieve()&lt;/code&gt; method and they have very different use-cases 😮.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#which-method-do-we-choose"&gt;
  &lt;/a&gt;
  🧙🏽‍♀️ Which Method Do We Choose?
&lt;/h2&gt;

&lt;p&gt;Here are all the overloads of &lt;code&gt;IPageUrlRetriever.Retrieve()&lt;/code&gt;, with their XML doc comments summary included:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Retrieves URL for given page&lt;/span&gt;
&lt;span class="n"&gt;PageUrl&lt;/span&gt; &lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;keepCurrentCulture&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Retrieves URL for the given page in the given culture.&lt;/span&gt;
&lt;span class="n"&gt;PageUrl&lt;/span&gt; &lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;cultureCode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Retrieves URL for a page based on given properties.&lt;/span&gt;
&lt;span class="n"&gt;PageUrl&lt;/span&gt; &lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;nodeAliasPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;keepCurrentCulture&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Retrieves URL for a page based on given properties.&lt;/span&gt;
&lt;span class="n"&gt;PageUrl&lt;/span&gt; &lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;nodeAliasPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;cultureCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;siteName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It looks like Kentico Xperience is giving us a lot of flexibility here. We can either supply a full &lt;code&gt;TreeNode&lt;/code&gt; instance or, just the &lt;code&gt;nodeAliasPath&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That's convenient! If we know there's always an &lt;code&gt;/About&lt;/code&gt; Page in the Content Tree, we can make a call like:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;PageUrl&lt;/span&gt; &lt;span class="n"&gt;pageUrl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;retriever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/About"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This will give us access to the correctly generated Page URL, &lt;em&gt;and&lt;/em&gt; we don't have to query for the &lt;code&gt;TreeNode&lt;/code&gt;, which means one less database round-trip 😃 (or does it?)&lt;/p&gt;

&lt;p&gt;So, we probably feel pretty confident 😤 in using &lt;code&gt;Retrieve(TreeNode node, ...)&lt;/code&gt; when we have the &lt;code&gt;TreeNode&lt;/code&gt; instance anyway, and using &lt;code&gt;Retrieve(string nodeAliasPath, ...)&lt;/code&gt; when we only know where in the Content Tree the Page is or when we get the Node Alias Path from some other Page's field.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%E2%9A%94-retrievestring-vs-retrievetreenode"&gt;
  &lt;/a&gt;
  ⚔ Retrieve(string) vs Retrieve(TreeNode)
&lt;/h2&gt;

&lt;p&gt;In this situation Xperience asks for what it needs but lets us provide less, however &lt;a href="https://en.wikipedia.org/wiki/There_ain%27t_no_such_thing_as_a_free_lunch"&gt;there's no free lunch&lt;/a&gt; and the convenience provided to us has a cost 🤨!&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;IPageUrlRetriever&lt;/code&gt; is implemented by the &lt;code&gt;Kentico.Content.Web.Mvc.PageUrlRetriever&lt;/code&gt; internal class. When we call &lt;code&gt;Retrieve(string nodeAliasPath, ...)&lt;/code&gt; the &lt;code&gt;PageUrlRetriever&lt;/code&gt; uses &lt;code&gt;IPageSystemDataContextRetriever.Retrieve()&lt;/code&gt; internally to get the 'page data' that matches the &lt;code&gt;nodeAliasPath&lt;/code&gt; we provided:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;/// Provides an interface for retrieving the page based on given parameters for system purposes.&lt;/span&gt;
&lt;span class="c1"&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IPageSystemDataContextRetriever&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;

   &lt;span class="n"&gt;TreeNode&lt;/span&gt; &lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SiteInfoIdentifier&lt;/span&gt; &lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;nodeAliasPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;cultureCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;latest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;IPageSystemDataContextRetriever.Retrieve()&lt;/code&gt; is fortunately cached for 10 minutes, so repeated uses of &lt;code&gt;IPageUrlRetrieve.Retrieve(string nodeAliasPath, ...)&lt;/code&gt; won't result in multiple database calls, but the first call absolutely does hit the database because it needs more information, than what we provided, to generate the correct URL.&lt;/p&gt;

&lt;p&gt;This is an important point to understand... Kentico Xperience provides &lt;em&gt;many&lt;/em&gt; different ways to accomplish the same goal, which is a good thing because we can choose the right one for our use-case. At the same time, if we choose the wrong approach for our use-case, we might end up taking a performance hit we didn't intend 😬!&lt;/p&gt;

&lt;p&gt;How bad can it get? Let's say we are generating URLs for 100 products displayed on a Page using &lt;code&gt;IPageUrlRetriever.Retrieve(string nodeAliasPath, ...)&lt;/code&gt;. This means we are executing &lt;strong&gt;at least&lt;/strong&gt; 100 database queries just to get URLs! Add on to this all the querying we did to get the Product information and images! Ooof 😖!&lt;/p&gt;

&lt;p&gt;This is commonly known at the &lt;a href="https://stackoverflow.com/a/97253/939634"&gt;N + 1 Querying Problem&lt;/a&gt; and is often seen with &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;Object-Relational Mapping tools&lt;/a&gt; like &lt;a href="https://docs.microsoft.com/en-us/ef/core/"&gt;Entity Framework Core&lt;/a&gt; or ... Kentico Xperience's APIs 😋.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#more-pitfalls"&gt;
  &lt;/a&gt;
  🔥 More Pitfalls 💣
&lt;/h2&gt;

&lt;p&gt;Let say we've avoided the N + 1 query by using the alternative overload of &lt;code&gt;IPageUrlRetriever.Retrieve(TreeNode node, ...)&lt;/code&gt; so that Kentico Xperience doesn't have to go and fetch all the nodes independently.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If we still have to get our Pages from &lt;code&gt;string nodeAliasPath&lt;/code&gt; values, we can use the &lt;code&gt;WhereIn(string columnName, ICollection&amp;lt;string&amp;gt; values)&lt;/code&gt; method defined on &lt;code&gt;WhereConditionBase&lt;/code&gt; to query for all &lt;code&gt;TreeNode&lt;/code&gt; objects that match set of &lt;code&gt;nodeAliasPath&lt;/code&gt; values we have. This would be a big query, but at least it's 1 query and not 100.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since we've found the correct API for our use-case, we should be all set now, right? &lt;code&gt;git commit&lt;/code&gt; and deploy 😎!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/143vPc6b08locw/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/143vPc6b08locw/giphy.gif" alt="Ship falling into the water"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, we could now run into a second problem 😫.&lt;/p&gt;

&lt;p&gt;In Kentico Xperience MVC (compared to older Portal Engine sites), the &lt;code&gt;nodeAliasPath&lt;/code&gt; is not the true URL even if parts of it match a URL for a Page. Instead, all generated URL values are stored in the &lt;code&gt;CMS_PageUrlPath&lt;/code&gt; table 🤓 in the database and the actual path is in the &lt;code&gt;PageUrlPathUrlPath&lt;/code&gt; column (what a tongue twister!)&lt;/p&gt;

&lt;p&gt;Without this data, we cannot generate valid Page URLs.&lt;/p&gt;

&lt;p&gt;This means that when we pass a &lt;code&gt;TreeNode&lt;/code&gt; to &lt;code&gt;IPageUrlRetriever.Retrieve(TreeNode node, ...)&lt;/code&gt;, internally it has to check if the &lt;code&gt;PageUrlPathUrlPath&lt;/code&gt; field is in the &lt;code&gt;TreeNode&lt;/code&gt;'s internal data set of field/value pairs. If the value is not populated, then Kentico Xperience has to query the database for it:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;PageUrlPathInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Provider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WhereEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PageUrlPathNodeID"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NodeID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WhereEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"PageUrlPathCulture"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cultureCode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In addition to having this field populated, the culture of the &lt;code&gt;TreeNode&lt;/code&gt; retrieved from the database needs to match the culture of the URL we are trying to generate.&lt;/p&gt;

&lt;p&gt;If either the &lt;code&gt;PageUrlPathUrlPath&lt;/code&gt; is missing or the cultures don't match, we have to make yet another database call for the URL data, and as far as I can tell, this query &lt;strong&gt;is not cached&lt;/strong&gt; 😨.&lt;/p&gt;

&lt;p&gt;So we're in another situation where we could be making an additional 100 database queries (and if we were using &lt;code&gt;nodeAliasPath&lt;/code&gt; that means at least 200 database calls!) to get Page URLs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#optimal-url-generation"&gt;
  &lt;/a&gt;
  🏆 Optimal URL Generation
&lt;/h2&gt;

&lt;p&gt;Fortunately, there's a nice extension method &lt;code&gt;WithPageUrlPaths()&lt;/code&gt;, in the &lt;code&gt;CMS.DocumentEngine.Routing&lt;/code&gt; namespace, for &lt;code&gt;IDocumentQuery&lt;/code&gt; that ensures the &lt;code&gt;CMS_PageUrlPath&lt;/code&gt; table is joined when querying for our &lt;code&gt;TreeNode&lt;/code&gt;s 🤩.&lt;/p&gt;

&lt;p&gt;If we had a collection of &lt;code&gt;NodeGUID&lt;/code&gt; values (or &lt;code&gt;string nodeAliasPath&lt;/code&gt; values) that referenced Pages in the Content Tree that we wanted to generate URLs for, I think this would be the best approach:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;Guid&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;linkedNodeGuids&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;linkedDocuments&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;DocumentHelper&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetDocuments&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WithPageUrlPaths&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WhereIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NodeGUID&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;linkNodeGuids&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetEnumerableTypedResultAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;(&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PageUrl&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;)&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nodesAndURLs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;linkedDocuments&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urlRetriever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;With our &lt;code&gt;nodesAndURLs&lt;/code&gt; array of tuples we have all the data we need to create links to all those Pages 👏!&lt;/p&gt;

&lt;p&gt;Of course, if we instead use Kentico Xperience's &lt;code&gt;IPageRetriever&lt;/code&gt; service, the &lt;code&gt;.WithPageUrlPaths()&lt;/code&gt; extension gets applied for us automatically:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;Guid&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;linkedNodeGuids&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="c1"&gt;// ...&lt;/span&gt;

&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;linkedDocuments&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;pageRetriever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RetrieveAsync&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WhereIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nameof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NodeGUID&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;linkNodeGuids&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;cancellationToken&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;(&lt;/span&gt;&lt;span class="n"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PageUrl&lt;/span&gt; &lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;)&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nodesAndURLs&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;linkedDocuments&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;urlRetriever&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Isn't that nice 😁!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The convenience of the Kentico Xperience libraries help us developers create the applications our businesses need, quickly and with a lot of flexibility 💪🏽.&lt;/p&gt;

&lt;p&gt;That flexibility can come at a cost that we might not notice during local development or when a site isn't under heavy load.&lt;/p&gt;

&lt;p&gt;Caching helps solve a lot of inevitable performance limitations and mistakes, but it's best if we can make the right choices the first time (especially if its only the difference of 1 method overload vs another 😉).&lt;/p&gt;

&lt;p&gt;When trying to get URLs for Pages, especially in bulk, our best choice is to use &lt;code&gt;IPageUrlRetriever.Retrieve(TreeNode node, ...)&lt;/code&gt; and then make sure the &lt;code&gt;TreeNode&lt;/code&gt; being passed was retrieved from the database using a &lt;code&gt;DocumentQuery&lt;/code&gt; that called &lt;code&gt;.WithPageUrlPaths()&lt;/code&gt; with the correct culture... otherwise we might end up causing N + 1 (or worse!) querying against the database.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;IPageRetriever.RetrieveAsync()&lt;/code&gt; method can at least make sure &lt;code&gt;.WithPageUrlPaths()&lt;/code&gt; is applied to our query, so we don't have to remember to do it 😄.&lt;/p&gt;

&lt;p&gt;If there are any other APIs you have questions about, let me know in the comments below.&lt;/p&gt;

&lt;p&gt;As always, thanks for reading 🙏!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.xperience.io/developing-websites/implementing-routing/content-tree-based-routing"&gt;Kentico Xperience - Content Tree Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/There_ain%27t_no_such_thing_as_a_free_lunch"&gt;There's No Free Lunch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/97253/939634"&gt;N + 1 Querying&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;Object-Relational Mapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/ef/core/"&gt;Entity Framework Core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;We've put together a list over on &lt;a href="https://github.com/Kentico/Home/blob/master/RESOURCES.md"&gt;Kentico's GitHub account&lt;/a&gt; of developer resources. Go check it out!&lt;/p&gt;

&lt;p&gt;If you are looking for additional Kentico content, checkout the Kentico or Xperience tags here on DEV.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5339"&gt;
  
    .ltag__tag__id__5339 .follow-action-button{
      background-color:  !important;
      color:  !important;
      border-color:  !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/kentico" class="ltag__tag__link"&gt;kentico&lt;/a&gt; 
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag__tag ltag__tag__id__57801"&gt;
  
    .ltag__tag__id__57801 .follow-action-button{
      background-color:  !important;
      color:  !important;
      border-color:  !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/xperience" class="ltag__tag__link"&gt;xperience&lt;/a&gt; 
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Or my &lt;a href="https://dev.to/seangwright/series"&gt;Kentico Xperience blog series&lt;/a&gt;, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/seangwright/series/8185"&gt;Kentico Xperience Xplorations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/seangwright/series/9483"&gt;Kentico Xperience MVC Widget Experiments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/seangwright/series/10963"&gt;Kentico Xperience Design Patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>xperience</category>
      <category>kentico</category>
      <category>aspnetcore</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>🛑 Don’t upgrade your npm package versions by accident (video)</title>
      <author>Daniel Parmenvik</author>
      <pubDate>Mon, 28 Jun 2021 13:06:27 +0000</pubDate>
      <link>https://dev.to/danielp/don-t-upgrade-your-npm-package-versions-by-accident-video-3e93</link>
      <guid>https://dev.to/danielp/don-t-upgrade-your-npm-package-versions-by-accident-video-3e93</guid>
      <description>&lt;p&gt;&lt;em&gt;Looking for ways to make sure that your deployments to different environments are identical and use the exact same package versions? Or does your company have requirements to be able to reproduce deployments and trace exactly what dependencies were used at a specific time? &lt;strong&gt;Great - continue reading!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Being dependent on open source 📦 npm packages means dependencies to the public npm registry and npm package maintainers = constantly changing environment. This also means that you have the responsibility to keep track of what package versions were used in a specific deployment. This is a crucial task to reduce risks and make sure unintended changes have not been made.&lt;/p&gt;

&lt;p&gt;Even without any change to package.json your builds may produce a different set of dependencies at different points in time (semver versioning and addition of new minor versions to public registries).&lt;/p&gt;

&lt;p&gt;The slightest change in patch versions means your builds are no longer deterministic where you are guaranteed the exact same results - and deploying dependencies that have not been tested is never a good idea...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-the-solution"&gt;
  &lt;/a&gt;
  So what's the solution?
&lt;/h2&gt;

&lt;p&gt;💡 For me, the way to go is to freeze your registry when you want to avoid accidental updates. Freezing a registry effectively locks down the state of your package versions and makes the registry read-only so that only intended changes are applied to code you trust.&lt;/p&gt;

&lt;p&gt;The video below shows the easiest way to make your registry read-only using the &lt;a href="https://docs.bytesafe.dev/policies/freeze/"&gt;Freeze policy&lt;/a&gt; in Bytesafe:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JdxeDRxvp7M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Benefits of using the &lt;strong&gt;Freeze policy&lt;/strong&gt; in Bytesafe:&lt;/p&gt;

&lt;p&gt;✅ Guaranteed exact same versions when testing and building your applications&lt;/p&gt;

&lt;p&gt;✅ Deterministic and consistent results across all your environments such as Test, UAT and Production&lt;/p&gt;

&lt;p&gt;🔗 &lt;a href="https://bytesafe.dev/posts/freeze-registry-states/"&gt;This blog post&lt;/a&gt; also describes how to work with the &lt;a href="https://docs.bytesafe.dev/policies/freeze/"&gt;Freeze policy&lt;/a&gt; to achieve consistent tests and builds.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-your-solution-to-this-issue"&gt;
  &lt;/a&gt;
  What's your solution to this issue?
&lt;/h2&gt;

&lt;p&gt;I would love to hear what you think of this solution and how you avoid accidental updates today. I'd be happy to answer any questions you might have. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/bytesafedev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xa6AP1T3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3uehdo8j7i2g40bk382.png" alt="Follow Bytesafe on Twitter"&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/bytesafe?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-bytesafe"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DhhoEKYZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.producthunt.com/widgets/embed-image/v1/featured.svg%3Fpost_id%3D300547%26theme%3Dlight" alt="Bytesafe - A better way to control your software supply chain | Product Hunt"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>npm</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to stay consistent with writing team blog posts</title>
      <author>Rudolf Jurišić</author>
      <pubDate>Mon, 28 Jun 2021 13:04:32 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/how-to-stay-consistent-with-writing-team-blog-posts-162n</link>
      <guid>https://dev.to/bornfightcompany/how-to-stay-consistent-with-writing-team-blog-posts-162n</guid>
      <description>&lt;p&gt;For a little more than a year now, we’ve been writing blog posts on various topics related to development. We've created more than 60 blog posts up to now. This is a huge accomplishment for our team since we’ve already tried to write posts on a regular basis. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is hard to be consistent in writing, just as much as it is in staying on a healthy diet.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And to be frank, we've had one or two of our cheat days. It’s inevitable. A simple rule of &lt;a href="https://dev.to/bornfightcompany/4-tips-for-creating-habits-1b7h"&gt;not skipping twice&lt;/a&gt; helped.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#team-effort"&gt;
  &lt;/a&gt;
  Team effort
&lt;/h1&gt;

&lt;p&gt;Imagine yourself writing a blog post each week, with all of the obligations your day-to-day job brings to the table. And your primary job is to write code, not blog posts. &lt;/p&gt;

&lt;p&gt;But being a part of a team - now that makes it all easier.&lt;/p&gt;

&lt;p&gt;So, how did we do it? &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We’ve set up a goal: attract other developers to notice us (and hopefully be interested in joining us) by writing about our ideas, challenges, findings, etc. (purpose)&lt;/li&gt;
&lt;li&gt;We agreed everyone will participate (a subtle amount of peer pressure)&lt;/li&gt;
&lt;li&gt;With 15 members in our team, it turns out you only write 3 posts a year. And that's not much (perspective)&lt;/li&gt;
&lt;li&gt;If your post helps one person (and it probably will), you should feel good (accomplishment)&lt;/li&gt;
&lt;li&gt;No restrictions on topics or format (autonomy)&lt;/li&gt;
&lt;li&gt;We made a procedure:

&lt;ul&gt;
&lt;li&gt;a schedule so everyone knows in advance when their turn is&lt;/li&gt;
&lt;li&gt;weekly check on who was the last one and who’s up next&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, this would be nothing if it weren’t for the great team players, so thanks everyone&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/aduda091"&gt;@aduda091&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ajdinmust"&gt;@ajdinmust&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/aleksandarperc"&gt;@aleksandarperc&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ddrempe"&gt;@ddrempe&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/gh0c"&gt;@gh0c&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ibrcko"&gt;@ibrcko&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ilesar"&gt;@ilesar&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6DTl2C8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzcg7ez0c2q38zlz7aux.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6DTl2C8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bzcg7ez0c2q38zlz7aux.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Turns out you can tag only 7 people in your post, so I'm gonna finish the list in the comments :)&lt;/p&gt;

&lt;p&gt;To be fair, some of these posts were created in our free time.&lt;br&gt;
And to be fair, some of the blog posts were written in the last hour before the deadline.&lt;br&gt;
But we’ve kept the consistency.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#statistics"&gt;
  &lt;/a&gt;
  Statistics
&lt;/h1&gt;

&lt;p&gt;Let the stats say a few words.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lav5GAtt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ip58yef3d5542k8tw1te.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lav5GAtt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ip58yef3d5542k8tw1te.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some posts made a lot of reactions.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yfjt5N73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xvl7e3dastphju8l3cv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yfjt5N73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xvl7e3dastphju8l3cv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some posts made a lot of comments.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--duyPZz_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vrq95u7bhgho370crmnt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--duyPZz_b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vrq95u7bhgho370crmnt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And some posts weren’t that successful.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y_agPI8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0w1atitbrftgid8g9qm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y_agPI8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0w1atitbrftgid8g9qm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-newsletter"&gt;
  &lt;/a&gt;
  The Newsletter
&lt;/h1&gt;

&lt;p&gt;As a result of our consistency in writing, we started our own newsletter.&lt;br&gt;
It consists of &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;our own blog posts&lt;/li&gt;
&lt;li&gt;links we &lt;a href="https://dev.to/bornfightcompany/custom-slack-command-use-case-sharing-urls-2bf0"&gt;share to our Slack channels&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;other materials we produce - podcasts, educational videos, info-packs etc. 
Basically it is a collection of our development employer branding activities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://mailchi.mp/bornfight.com/devtodev"&gt;Check it out&lt;/a&gt; and feel free to leave a comment!&lt;br&gt;
And, of course, &lt;a href="https://bornfight.us19.list-manage.com/subscribe?u=67e7b1cbb978b5e176035a450&amp;amp;id=51a7668afb"&gt;subscribe&lt;/a&gt; if you find it relevant!&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>writing</category>
      <category>consistency</category>
    </item>
    <item>
      <title>Introduction to React.js ⚛ and the required JavaScript! </title>
      <author>KUMAR HARSH</author>
      <pubDate>Mon, 28 Jun 2021 12:22:41 +0000</pubDate>
      <link>https://dev.to/cenacr007_harsh/introduction-to-react-js-and-the-required-javascript-5coh</link>
      <guid>https://dev.to/cenacr007_harsh/introduction-to-react-js-and-the-required-javascript-5coh</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;&lt;/strong&gt; is a JavaScript library for building UI components. The ecosystem of React is really immense which eventually makes it one of the best front-end libraries&lt;/p&gt;

&lt;p&gt;JavaScript is a huge language and not all of it is required, Knowledge of a few JavaScript concepts can make the process easier for you if you are planning to learn React.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep JavaScript aside for a moment, Knowledge of basic HTML and CSS is a must in my opinion. &lt;/p&gt;

&lt;p&gt;React is all about building user interface so you'll be working with HTML and CSS as well. So start with these first.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see some basic JavaScript modules that can help you 👇&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-basic-programming-knowledge-which-is-must"&gt;
  &lt;/a&gt;
  1. Basic programming knowledge which is must
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures"&gt;Data types in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Variable"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements"&gt;Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Control_flow"&gt;Control statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators"&gt;Expressions and Operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-functions"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions"&gt;Functions&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A JavaScript function is a block of code designed to perform a particular task. This is again pretty basic stuff.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dqbdAaEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs9mvnv6zwvidxll2xux.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dqbdAaEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs9mvnv6zwvidxll2xux.png" alt="jsfunc"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-arrow-functions-syntax"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;Arrow functions&lt;/a&gt; syntax
&lt;/h2&gt;

&lt;p&gt;Arrow function is a new ES6 feature that's been used almost widely in modern codebases because it keeps the code concise and readable. It allows a short syntax for writing function expressions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ml1QH6Pr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htcy2bbrdn6jdvs96giw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ml1QH6Pr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htcy2bbrdn6jdvs96giw.png" alt="arrow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-destructuring-assignment"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"&gt;Destructuring assignment&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Destructuring is a convenient way of accessing multiple properties stored in objects and arrays.&lt;/p&gt;

&lt;p&gt;Let's say:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecSFPwKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14jux2sbui8c4elpwjz0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecSFPwKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/14jux2sbui8c4elpwjz0.png" alt="eg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-array-methods"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"&gt;Array&lt;/a&gt; methods
&lt;/h2&gt;

&lt;p&gt;You will use the Array method multiple times. So try to learn them before jumping onto React&lt;/p&gt;

&lt;p&gt;Some commonly used functions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;map&lt;/li&gt;
&lt;li&gt;filter&lt;/li&gt;
&lt;li&gt;reduce&lt;/li&gt;
&lt;li&gt;find&lt;/li&gt;
&lt;li&gt;findIndex&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ovf0CuLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gweid99j2em0yi2hvbye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ovf0CuLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gweid99j2em0yi2hvbye.png" alt="arraymethods"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-special-operators"&gt;
  &lt;/a&gt;
  6. Special operators
&lt;/h2&gt;

&lt;p&gt;Not mandatory but knowledge of these two can be useful. This is not a big concept or something. You can learn it literally in about a minute&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator"&gt;Ternary operator&lt;/a&gt; : &lt;code&gt;doYouLikeMyBlogs ? "Yes": "Definitely yes"&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"&gt;Spread operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-callback-functions"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Callback_function"&gt;Callback functions&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A function passed as an argument to another function is called a callback if the function invokes the argument at a later time&lt;/p&gt;

&lt;p&gt;You will use callbacks while working with hooks, forms, and other things. A quick example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Agwd2DCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4edhy1a3c7q74fvn7tv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Agwd2DCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4edhy1a3c7q74fvn7tv8.png" alt="callback"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-async-await-and-promises"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"&gt;Async&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await"&gt;await&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promises&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Async function is a function that returns some promise. A promise is a special JavaScript object that links the “producing code” and the “consuming code” together. Whereas await makes a function wait for a promise.&lt;/p&gt;

&lt;p&gt;Now that we are done with JavaScript let's hop into React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-react"&gt;
  &lt;/a&gt;
  Why React?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Reusable components&lt;/li&gt;
&lt;li&gt;Fast due to virtual DOM&lt;/li&gt;
&lt;li&gt;Huge ecosystem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A typical React app contain many components. They are reusable and can interact with each other.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-component"&gt;
  &lt;/a&gt;
  What is a component?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://reactjs.org/docs/react-component.html"&gt;Component&lt;/a&gt; as a simple function that you can call with some input and they render some output&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An image showing a typical React app with all different components. As you can see this entire webpage is nothing but the mixture of different components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FAy5KwCD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o92nwtrk7mjhvo9md288.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FAy5KwCD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o92nwtrk7mjhvo9md288.png" alt="components"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#components-are-of-two-types"&gt;
  &lt;/a&gt;
  Components are of two types:
&lt;/h3&gt;

&lt;p&gt;1️⃣ &lt;a href="https://reactjs.org/docs/components-and-props.html"&gt;Class based components&lt;/a&gt; &lt;br&gt;
2️⃣ &lt;a href="https://reactjs.org/docs/components-and-props.html"&gt;Functional based components&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Class-based components are defined using ES6 classes, whereas function components are basic JavaScript functions&lt;/p&gt;

&lt;p&gt;Before diving deeper into it, let's talk a little bit about &lt;strong&gt;&lt;a href="https://reactjs.org/docs/introducing-jsx.html"&gt;JSX&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JSX stands for JavaScript XML. It's basically nothing but the extension of JavaScript which allow us to write HTML code in JavaScript file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const element = &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Consider this variable declaration. It's neither JS nor HTML. This is the mixture of JavaScript + XML = JSX&lt;/p&gt;

&lt;p&gt;Now we know JSX, let's move forward&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Functional components are nothing but simply a JavaScript function which takes some parameter will return some JSX code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A typical function component:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o-FBhkBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/setud5jo1d3yktaxjfwg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o-FBhkBO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/setud5jo1d3yktaxjfwg.jpg" alt="funccomp"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#virtual-dom"&gt;
  &lt;/a&gt;
  &lt;a href="https://reactjs.org/docs/faq-internals.html"&gt;Virtual DOM&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A very important concept in React&lt;/p&gt;

&lt;p&gt;You might have heard the term "DOM", virtual DOM is kind of similar. It uses a strategy that updates the DOM without having to redraw all the webpage elements.&lt;/p&gt;

&lt;p&gt;Every time the DOM changes, browser need to recalculate entire layout and then repaint the web page which makes a web app slow. &lt;/p&gt;

&lt;p&gt;To overcome this we have virtual DOM&lt;/p&gt;

&lt;p&gt;Every time the state of our application changes, the virtual DOM gets updated instead of the real DOM.&lt;/p&gt;

&lt;p&gt;Whenever the new element is added to the UI, a new virtual DOM associated with that element is created. If state of this element changes, a second new virtual DOM is created which will be compared with the previous virtual DOM.&lt;/p&gt;

&lt;p&gt;It then updates ONLY the object on the real DOM.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HzC8ndwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yk2zapzccfy3p3tj76ib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HzC8ndwm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yk2zapzccfy3p3tj76ib.png" alt="vdom"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can watch this &lt;strong&gt;YouTube&lt;/strong&gt; video to help you understand it better.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=BYbgopx44vo"&gt;React and the Virtual DOM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BYbgopx44vo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Moving on, setting up your first react project directory is quite confusing. Let's see how you can do it&lt;/p&gt;

&lt;p&gt;I'm assuming you have node environment set up and up-to-date version of &lt;code&gt;npm&lt;/code&gt;. If no, download it from &lt;a href="https://nodejs.org/en/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next thing you need to install is &lt;code&gt;create-react-app&lt;/code&gt; from npm, it is a tool helps you start building with React app. It set up all the tools that you need in order to get started.&lt;/p&gt;

&lt;p&gt;There are a few different ways to install &lt;code&gt;create-react-app&lt;/code&gt;.&lt;br&gt;
You can either do it globally or locally. You can see the detailed guide to set it up &lt;a href="https://create-react-app.dev/docs/getting-started"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now you have create-react-app installed in your machine, it's time to create your first React app&lt;/p&gt;

&lt;p&gt;Command - &lt;code&gt;create-react-app app-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Depending upon your internet speed, this will take some minutes.&lt;/p&gt;

&lt;p&gt;Once done, run "npm start"&lt;/p&gt;

&lt;p&gt;Your default browser will launch automatically and you will see the default react app screen at &lt;code&gt;localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SJD4CEys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w588inv9y2bukeije98l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SJD4CEys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w588inv9y2bukeije98l.png" alt="reactfront"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it. You just created your first react app. I tried my best to give a quick overview of how things work in React.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#if-you-would-also-like-to-know-how-to-host-a-react-app-on-github-pages-read-my-other-blog"&gt;
  &lt;/a&gt;
  If you would also like to know how to host a react app on GitHub pages, read my other blog:
&lt;/h3&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cenacr007_harsh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gHAd0jjF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nO18I-lK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641726/d1caf43e-4478-42c3-8ac3-f3b2980d031b.png" alt="cenacr007_harsh"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cenacr007_harsh/deploying-a-react-app-to-github-pages-370" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Deploying a React App to GitHub Pages&lt;/h2&gt;
      &lt;h3&gt;KUMAR HARSH ・ Jun 15 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Here is a great introductory course on React by &lt;a href="https://twitter.com/bobziroll"&gt;Bob Ziroll&lt;/a&gt; on &lt;a href="https://www.youtube.com/watch?v=DLX62G4lc44&amp;amp;t=997s"&gt;freecodecamp&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-love-react-its-my-favorite-javascript-library"&gt;
  &lt;/a&gt;
  I love React, it's my favorite JavaScript library.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#what-is-your-favorite-javascript-frameworklibrary-and-why-"&gt;
  &lt;/a&gt;
  What is your favorite JavaScript framework/library and why ?
&lt;/h2&gt;

&lt;p&gt;Do let me know in the comments.&lt;/p&gt;

&lt;p&gt;I hope you found this article valuable. If yes do let me know in the comments 😊&lt;/p&gt;

&lt;p&gt;This article was inspired by &lt;strong&gt;Pratham&lt;/strong&gt;. Follow him on &lt;a href="https://twitter.com/Prathkum"&gt;Twitter&lt;/a&gt; for more amazing content.&lt;/p&gt;

&lt;p&gt;Also if you got any question feel free to ping me on &lt;a href="https://twitter.com/cenacr007_harsh"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/in/kumarharsh22/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you"&gt;
  &lt;/a&gt;
  Thank You!
&lt;/h2&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Keyboard navigation</title>
      <author>Oliwia Połeć</author>
      <pubDate>Mon, 28 Jun 2021 12:20:51 +0000</pubDate>
      <link>https://dev.to/livechat/keyboard-navigation-e7p</link>
      <guid>https://dev.to/livechat/keyboard-navigation-e7p</guid>
      <description>&lt;p&gt;It should be possible to control any desktop application using just a keyboard. There are certain keys and key combinations that are de facto standard for most applications, and users should be able to expect them to work.&lt;/p&gt;

&lt;p&gt;This is a vastly important topic from the accessibility point of view. For a large group of people, a keyboard might be one of the primary ways of interacting with a computer. Pointer devices, while being commonly used by most, just don't work at all for people with visual disabilities, for example.&lt;/p&gt;

&lt;p&gt;It's a humane thing to design and put work into implementing an application with these concerns in mind. For example, all interactive elements should be reachable using the keyboard alone, and the navigation should happen in a logical sequence. In addition to that, a visual affordance such as a focus ring should &lt;strong&gt;always&lt;/strong&gt; be available for sighted (or partially sighted) users.&lt;/p&gt;

&lt;p&gt;In fact, this is a very important thing, and not only for people with disabilities. It's often crucial when it comes to supporting power users of your application. Using a keyboard can be much more effective than a mouse in some cases. However, it usually requires some manual skills and muscle memory to become really effective at this.&lt;/p&gt;

&lt;p&gt;Even if you are not a power user, you probably do some simple tasks using just a keyboard. There are things that we have all internalized and take for granted, but probably we don't appreciate them very much. They already feel natural to us, and it would feel weird if we were to ever find ourselves in a situation where they didn’t work. Can you imagine a chat application which doesn't send a message when hitting the Enter key? Or which wouldn't allow you to change the cursor position using the arrow keys? I can't either. This is just something so simple that we all take for granted. I can't even imagine how it would be to rely on the keyboard heavily, for everything, and having to deal with a plethora of applications with varying support for proper keyboard navigation.&lt;/p&gt;

&lt;p&gt;If those things don't work, the application in question doesn't work properly. It's not a matter of choice, priorities, or anything else. Luckily, people are becoming more and more aware of the subject of accessibility, and we can see a great uplift in concern about this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JSr7i4-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19676y7az52lwl29cgfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JSr7i4-8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19676y7az52lwl29cgfl.png" alt="LiveChat focus management"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#focus-management"&gt;
  &lt;/a&gt;
  Focus management
&lt;/h2&gt;

&lt;p&gt;When using the keyboard to navigate an application, it's important to always display a focus indicator, most commonly known as a focus ring, on the currently active element. The browser’s built-in styles, which historically have not been compatible with many website designs, were a reason for developers to disable them altogether. This is a serious accessibility concern; such actions should never be taken unconditionally. To accommodate the design of a site, a custom focus ring can be implemented that will be a better fit for the site.&lt;/p&gt;

&lt;p&gt;It's OK to hide these visual cues when the user is using a pointer device to navigate the site, but they should be visible as soon as the user switches to keyboard navigation. Usually, this behavior can be implemented by using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible"&gt;&lt;code&gt;:focus-visible&lt;/code&gt; selector&lt;/a&gt;, but keep in mind that &lt;a href="https://caniuse.com/css-focus-visible"&gt;it’s not yet supported by all the browsers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The topic of focus management is broader than just displaying a focus ring correctly, and for most patterns required for robust and correct keyboard navigation/focus management, a JavaScript-based solution is required.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wEBwJe6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz16u2f1zidq9v4gwpuv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEBwJe6P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz16u2f1zidq9v4gwpuv.gif" alt="LiveChat accessibility modal navigation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tabindex"&gt;
  &lt;/a&gt;
  tabindex
&lt;/h2&gt;

&lt;p&gt;Let’s recap what a tabindex is and what its different values mean for the browser.&lt;/p&gt;

&lt;p&gt;A value of 0 means that the element is focusable and participates in the tab sequence, whereas a value of -1 means that the element can be focused programmatically, but it doesn’t participate in the tab sequence.&lt;/p&gt;

&lt;p&gt;Other numeric values can, technically, be used as well. Positive ones actually change the order of the tab sequence; so it’s possible to move an element to the front of that sequence by providing a value higher than all others. This is, however, discouraged by all experts, and a consensus has been reached in the community that this should never be used as it creates a mismatch between the tab sequence and the visual order.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basis-patterns"&gt;
  &lt;/a&gt;
  Basis patterns
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tabbing"&gt;
  &lt;/a&gt;
  Tabbing
&lt;/h3&gt;

&lt;p&gt;This is something that usually comes for free if we use proper HTML structure. When pressing the Tab key, the focus should be switched to the very next &lt;strong&gt;interactive&lt;/strong&gt; element. When pressing Shift+Tab we should be switched to the previous element. When going forwards and backwards using those key combinations, we should cycle between the same elements. If we leave an element, we should be able to easily get back to it unless there is a strong reason why this shouldn't be possible (for example when the previous element was associated with some expirable content when the expiration would be properly announced to the user).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xfRcXxQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4l57lsyb8f6todneu036.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xfRcXxQO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4l57lsyb8f6todneu036.gif" alt="LiveChat accessibility tabbing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An important thing to remember is that all interactive elements should be reachable using a keyboard. So for example, if we have an element that appears when hovering over another element with a pointer device, then we should also display it when navigating using a keyboard.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arrow-navigation-in-menus"&gt;
  &lt;/a&gt;
  Arrow navigation in menus
&lt;/h3&gt;

&lt;p&gt;When it comes to navigation through menus, there are two options — one based on the &lt;code&gt;aria-activedescendant&lt;/code&gt; attribute, and the other one based on &lt;code&gt;tabindex&lt;/code&gt; manipulations. It's a matter of choice which one gets used. However, from the user experience perspective, both are equivalent — the up and down arrows can be used to go through the menu items, and Enter/Space keys can be used to select the currently active item (and thus also close the menu).&lt;/p&gt;

&lt;p&gt;The first option is to leave the focus on the menu button (the element which triggers the menu to be opened) and only &lt;strong&gt;highlight&lt;/strong&gt; visually the "active" list element by juggling the values of the &lt;code&gt;aria-activedescendant&lt;/code&gt; attribute in such a way that it points to the highlighted menu item using the global ID value of that active menu item.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ilkWYboz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfaabce2d28wswbx7zwv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ilkWYboz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfaabce2d28wswbx7zwv.gif" alt="LiveChat accessibility focus management"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The alternative to that is to exclude all menu items (apart from the active one) and the menu button itself from the tab sequence by setting &lt;code&gt;tabindex="-1"&lt;/code&gt; on them. The currently active menu item should have its tabindex set to &lt;code&gt;0&lt;/code&gt;. When navigating through menu items using arrows, the previous menu item should be excluded from the tab sequence and the next item should be included in it by properly manipulating the &lt;code&gt;tabindex&lt;/code&gt; attribute. To actually move the focus to the next menu item, it is also required that its &lt;code&gt;focus&lt;/code&gt; method be called.&lt;/p&gt;

&lt;p&gt;Note that, usually, pressing Tab or Shift+Tab while navigating through a menu should bring the user to the next (or previous) element outside of the menu (and its menu button). When using the second way of implementing arrow navigation, it might be required to bring back &lt;code&gt;tabindex="0"&lt;/code&gt; on the menu button so it can be navigated back to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#closing-with-escape"&gt;
  &lt;/a&gt;
  Closing with Escape
&lt;/h3&gt;

&lt;p&gt;When any element pops out to the user — be it a menu, tooltip, modal, or an emoji picker — then it should be closeable by pressing Escape. There are cases when it is permitted to not implement this pattern — for example, when an opened modal can't be reopened again, but not implementing this interaction should be a conscious design decision.&lt;/p&gt;

&lt;p&gt;To implement this it is often required to add a global &lt;code&gt;keydown&lt;/code&gt; listener on the &lt;code&gt;document&lt;/code&gt; element. The listener should check if the Escape key has been pressed, and if yes, then it should close the open element in response to that.&lt;/p&gt;

&lt;p&gt;If you are dealing with nested modals (or a tooltip within a modal, or any other cases that introduce this kind of nesting), then you should ensure that only the element that is open on the very top should be closed with a single Escape key. It would provide a bad user experience if, for example, both modals were to be closed at the same time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q40ESeFl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkn5pcfffrfkp4f8korw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q40ESeFl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkn5pcfffrfkp4f8korw.gif" alt="LiveChat accessibility closing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#item-activation"&gt;
  &lt;/a&gt;
  Item activation
&lt;/h3&gt;

&lt;p&gt;This is an easy one — most activatable elements should be activated by pressing Enter or Space. It's easy to forget one or the other when implementing custom buttons (which is sometimes the only way to satisfy the design/layout constraints) or when implementing custom input controls like checkboxes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advanced-patterns"&gt;
  &lt;/a&gt;
  Advanced patterns
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#focus-trapping"&gt;
  &lt;/a&gt;
  Focus trapping
&lt;/h3&gt;

&lt;p&gt;In a variety of scenarios, it is desirable to lock user navigation to a certain element. When pressing Tab on the very last interactive element within it, focus should be moved to the very first element in the enclosed group. This most commonly happens when a modal gets displayed to the user. In such a situation the background usually gets dimmed in one way or another; so it doesn't make sense to allow the user to navigate to any element outside the modal. They wouldn't see the active element then, or the modal would have to be closed.&lt;/p&gt;

&lt;p&gt;There is no HTML way to achieve this behavior, and a JavaScript-based solution is required to implement it. The idea behind popular solutions is to render additional sentinel elements (for example, empty spans) before and after the locked element. They can either be made focusable so, whenever they receive focus, the focus can be moved programmatically to the appropriate element within the trapped element, or the default action of pressing the Tab can be prevented, and the focus can be moved programmatically to the appropriate element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#auto-focus-amp-focus-restoration"&gt;
  &lt;/a&gt;
  Auto focus &amp;amp; focus restoration
&lt;/h3&gt;

&lt;p&gt;This pattern is important for most situations in which a new element that contains navigable elements gets opened in response to the user interaction or when an automatically opened element (like a modal) is meant to interrupt the user.&lt;/p&gt;

&lt;p&gt;Whenever we deal with such a situation, we need to move focus to the element that just got opened. Very often, the new element gets actually rendered to the body; so it isn't near the current navigation sequence anyway. If the element got opened in response to a user interaction, then it is a signal from the user that they want to interact with that element; so focus should not stay on the triggering element. By querying the DOM of the opened element, the focus should be placed on the first tabbable element in it, unless there is no such element, then the opened element itself should be focused.&lt;/p&gt;

&lt;p&gt;In a similar vein, it's desired that the focus should return to the triggering element when the opened element gets closed. It just makes the most sense as that's the last thing the user remembers. It brings the user to the same context that they previously left.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grid-pattern"&gt;
  &lt;/a&gt;
  Grid pattern
&lt;/h3&gt;

&lt;p&gt;While the pattern is very useful for handling tabular content (like spreadsheets), it's not limited to those kinds of use cases. Actually, it can be used purely to create a sort of navigation depth.&lt;/p&gt;

&lt;p&gt;The idea is that the particular container should only make a single element within it focusable, so only that single element acts as a stopgap when tabbing through an application. To navigate to other elements (cells within a grid), arrow keys can be used. This requires the application to have strict layout constraints since the direction of the pressed arrow key should always move focus to the other cell in that direction, and this should always match the visual layout. It would be confusing for the user if pressing a down arrow were to move focus to the element displayed on the right, or things like that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--edMd-SH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpx8cfg34rkc9idzxewo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--edMd-SH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jpx8cfg34rkc9idzxewo.gif" alt="LiveChat accessibility grid pattern"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This pattern is great for very long lists of repetitive elements, like, for example, a list of messages in a chat application. Without using it, the user would have to tab through the whole content of the chat (which grows with time) to get to the elements above or below that chat feed.&lt;/p&gt;

&lt;p&gt;In addition to that, certain cells can have interactive elements within them — a rich message card with interactive buttons can be a grid cell. One can enter such a grid cell by activating it using standard Enter/Space keys. While in the grid cell, the focus should be trapped within it; so pressing Tab repeatedly would not navigate the user to any element outside of this card, and to get back to the main grid navigation, one would press Escape. As you can see in this example, this combines many of the previously mentioned patterns to provide a very rich user experience.&lt;/p&gt;

&lt;p&gt;It’s worth noting that the last active element in the grid stays focusable when one tabs away from the grid. This makes coming back to the grid a better experience since the user is brought back to a familiar context.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2m1Mfl9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ps90xyiwor92bfb6cru.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2m1Mfl9P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ps90xyiwor92bfb6cru.gif" alt="LiveChat accessibility keyboard navigation showcase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;As we can see, implementing some of these patterns is quite involved. To do it right, we need to both understand the accessibility requirements and implement several JavaScript-based solutions that often require beyond-novice knowledge of the browser APIs. Doing that in a generic fashion for reusable components that can be rendered in a variety of scenarios is very hard.&lt;/p&gt;

&lt;p&gt;Luckily, there are packages that can help you with that, and we highly encourage using them. However, when combining several patterns like this for a single element, you might encounter some interoperability issues between packages. Our widget is implemented using React, and we have discovered that &lt;a href="https://react-spectrum.adobe.com/react-aria/"&gt;React Aria&lt;/a&gt; is a great project, focused on providing developers with a proper base for these and many more accessibility-oriented patterns while allowing developers to provide their own UI and styling solutions.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Code as Visual Component</title>
      <author>lepinekong</author>
      <pubDate>Mon, 28 Jun 2021 12:19:21 +0000</pubDate>
      <link>https://dev.to/lepinekong/code-as-visual-component-3l11</link>
      <guid>https://dev.to/lepinekong/code-as-visual-component-3l11</guid>
      <description>&lt;p&gt;This is the first post of a series to come on Code as Visual Component (NOT Yet Another Visual Programming Language ;)). &lt;/p&gt;

&lt;p&gt;After 2 years of research on DX (Developer's eXperience) I'm now sure of the proof of concept for a new Visual Code Design concept. Personal motivations are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I wanted to keep a dev journal while training on the jobs. I don't want to lose time and write much "literature" and it is not precise enough, I want to "picture" code with all its context. Git versioning is mandatory but as for getting a mental model it's not appealing enough.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I don't like all the Visual Programming Languages currently : they oblige you to code in a language I have to learn. I want to be able to use all mainstraim and not so mainstream languages (from javascript,...) or frameworks (react,...).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I want to capitalize on code by creating code as component or block, a bit like in scratch but for adults. I want to be able to create them quickly and visually so I chose figma platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I don't want to use drag &amp;amp; drop, it's not very productive, I want to type instead. I want to be able to use it as a complement or integrate with an IDE to be more productive and have clean code by capitalizing with a code knowledge management system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;and many more (build custom visual tool and playground,...).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is a very simple example of a component to select a node in figma as I'm eating my own dog food as self validation first. But as soon as possible (once I have fixed some pesky details), you'll be able to test also (join more than 1000 subscribers at &lt;a href="https://grafcet.online"&gt;https://grafcet.online&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Long term I intend to opensource.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TOmDwkHLH20"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>visualcodedesign</category>
      <category>visualprogramming</category>
      <category>domainspecificlanguage</category>
      <category>nocode</category>
    </item>
    <item>
      <title>25 Places Where You Can Launch Your Startup and Side Projects</title>
      <author>hrishikesh1990</author>
      <pubDate>Mon, 28 Jun 2021 12:17:55 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/25-places-where-you-can-launch-your-startup-and-side-projects-328d</link>
      <guid>https://dev.to/hrishikesh1990/25-places-where-you-can-launch-your-startup-and-side-projects-328d</guid>
      <description>&lt;p&gt;In the tech world, there is a common saying that building a product or a startup is just 20% of the work. The remaining you ask? It lies in distribution.&lt;/p&gt;

&lt;p&gt;Your product's success depends on how well it is distributed and marketed to your target audience. &lt;/p&gt;

&lt;p&gt;Getting users and customers in the early phases can be challenging.&lt;/p&gt;

&lt;p&gt;This is why I have compiled a list of 25 (mostly free) startup directories where you can launch your startup or product. By submitting your startup website to these platforms, you can easily gain exposure and attract early traction. &lt;/p&gt;

&lt;p&gt;So, let’s dive right in!&lt;/p&gt;




&lt;p&gt;I run a freelance marketplace, Flexiple, where we help top devs find quality jobs. If you're interested, you can &lt;a href="https://3.flexiple.com/freelancer-onboarding-form?ref=Dev"&gt;apply here&lt;/a&gt; OR you can check out the &lt;a href="https://2.flexiple.com/freelancer-projects?ref=Dev"&gt;current openings here&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-product-hunt"&gt;
  &lt;/a&gt;
  #1 Product Hunt
&lt;/h2&gt;

&lt;p&gt;Product Hunt is a curation of the best new products, every day. Discover the latest mobile apps, websites, and technology products that everyone's talking about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Ebooks, Extensions, Gadgets, Games, Guides, Mobile Apps, Newsletters, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR:&lt;/strong&gt; 90&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type: &lt;/strong&gt;Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Immediate/Flexible&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 4,350,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://www.producthunt.com/posts/new"&gt;https://www.producthunt.com/posts/new&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-remote-tools"&gt;
  &lt;/a&gt;
  #2 Remote Tools
&lt;/h2&gt;

&lt;p&gt;Remote Tools is a curation of the best remote tech products. Be part of the fastest growing online remote community to discuss, learn and grow remote work. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR:&lt;/strong&gt; 52&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 5 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 170,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://www.remote.tools/post-product"&gt;https://www.remote.tools/post-product&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-betalist"&gt;
  &lt;/a&gt;
  #3 BetaList
&lt;/h2&gt;

&lt;p&gt;BetaList is a community of makers and early adopters showcasing their startups and exchanging feedback. It specifically focuses on startups who are about to launch a private beta and are therefore not public&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR:&lt;/strong&gt; 72&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed: &lt;/strong&gt;Upto 30 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 177,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://betalist.com/"&gt;https://betalist.com/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-betapage"&gt;
  &lt;/a&gt;
  #4 BetaPage
&lt;/h2&gt;

&lt;p&gt;Betapage is a startup directory where you can discover, hunt and upvote the latest innovative startups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added:&lt;/strong&gt; Extensions, Guides, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 54&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type&lt;/strong&gt;: No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 35 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link&lt;/strong&gt;: &lt;a href="https://betapage.co/submit-startup"&gt;https://betapage.co/submit-startup&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-alternativeto"&gt;
  &lt;/a&gt;
  #5 AlternativeTo
&lt;/h2&gt;

&lt;p&gt;AlternativeTo is crowdsourced software that shows you a new approach to finding good software. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 79&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb): &lt;/strong&gt;5,120,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://alternativeto.net/"&gt;https://alternativeto.net/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-startup-stash"&gt;
  &lt;/a&gt;
  #6 Startup Stash
&lt;/h2&gt;

&lt;p&gt;Startup Stash is a curated directory of resources and tools for startups, techies and entrepreneurs. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 61&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Paid listing&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 174,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://startupstash.com/add-listing/"&gt;https://startupstash.com/add-listing/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#7-launching-next"&gt;
  &lt;/a&gt;
  #7 Launching Next
&lt;/h2&gt;

&lt;p&gt;Launching Next publishes the newest, trending tech startups and projects. Launching Next is home to more than 5,000 new startups, startup ideas and great business ideas. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Ebooks, Extensions, Games, Guides, Mobile Apps, Newsletters, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 47&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission&lt;/strong&gt;: High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed&lt;/strong&gt;: Upto 7 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://www.launchingnext.com/submit/"&gt;https://www.launchingnext.com/submit/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#8-startup-buffer"&gt;
  &lt;/a&gt;
  #8 Startup Buffer
&lt;/h2&gt;

&lt;p&gt;Startup Buffer is a premium startup directory presenting thousands of startups around the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Games, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 36&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type: &lt;/strong&gt;Paid&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt;  &lt;a href="https://startupbuffer.com/site/submit"&gt;https://startupbuffer.com/site/submit&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#9-appszoom"&gt;
  &lt;/a&gt;
  #9 AppsZoom
&lt;/h2&gt;

&lt;p&gt;Appszoom is an app discovery platform that helps users discover what app to install next.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Mobile Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 69&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No link&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed&lt;/strong&gt;: Upto 7 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 45 Thousand&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt;  &lt;a href="https://www.appszoom.com/add-app"&gt;https://www.appszoom.com/add-app&lt;/a&gt; &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#10-getapp"&gt;
  &lt;/a&gt;
  10 GetApp
&lt;/h1&gt;

&lt;p&gt;GetApp is a software recommendation engine for small businesses to help them make the right software choice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 81&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 7 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 1,660,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link: &lt;/strong&gt; &lt;a href="https://www.gartner.com/en/digital-markets/basic-listing"&gt;https://www.gartner.com/en/digital-markets/basic-listing&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#11-stackshare"&gt;
  &lt;/a&gt;
  #11 StackShare
&lt;/h2&gt;

&lt;p&gt;StackShare is a community-driven SaaS platform that lets you see all the best software tools and who’s using them both inside and outside your company.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR:&lt;/strong&gt; 79&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type&lt;/strong&gt;: Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb)&lt;/strong&gt;: 1,240,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:  &lt;/strong&gt;&lt;a href="https://stackshare.io/sign_in"&gt;https://stackshare.io/sign_in&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#12-eu-startups"&gt;
  &lt;/a&gt;
  #12 EU Startups
&lt;/h2&gt;

&lt;p&gt;EU-Startups is the leading online publication with a focus on startups in Europe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 75&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type: &lt;/strong&gt;No link&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb): &lt;/strong&gt;379,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://www.eu-startups.com/directory/?wpbdp_view=submit_listing"&gt;https://www.eu-startups.com/directory/?wpbdp_view=submit_listing&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#13-saashub"&gt;
  &lt;/a&gt;
  #13 SaaSHub
&lt;/h2&gt;

&lt;p&gt;SaaSHub is your independent software marketplace that has over 100,000 products.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 55&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 7 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 1,000,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link: &lt;/strong&gt;&lt;a href="https://www.saashub.com/submit"&gt;https://www.saashub.com/submit&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#14-betafy"&gt;
  &lt;/a&gt;
  #14 Betafy
&lt;/h2&gt;

&lt;p&gt;Betafy provides a place for founders to get relevant feedback from a community of startup supporters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 30&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 7 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="http://betafy.co/easysignup/startup"&gt;http://betafy.co/easysignup/startup&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#15-the-startup-pitch"&gt;
  &lt;/a&gt;
  #15 The Startup Pitch
&lt;/h2&gt;

&lt;p&gt;The Startup Pitch is an online community where startups can meet experts, mentors and investors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 40&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Paid&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 24 hours for paid listing&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://thestartuppitch.com/post-a-pitch/"&gt;https://thestartuppitch.com/post-a-pitch/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#16-launched"&gt;
  &lt;/a&gt;
  #16 Launched!
&lt;/h2&gt;

&lt;p&gt;Launched! is a community where makers showcase their startup/product and get feedback from early adopters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 24&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; Do-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 7 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://launched.io/SubmitStartup"&gt;https://launched.io/SubmitStartup&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#17-saasworthy"&gt;
  &lt;/a&gt;
  #17 SaaSworthy
&lt;/h2&gt;

&lt;p&gt;SaaSworthy helps stakeholders make better product decisions based on unbiased &amp;amp; insightful reviews, comparison, question &amp;amp; answers, social popularity and buyers guide&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 69&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type: &lt;/strong&gt;No link&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 225,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://mailchi.mp/caea48b0c7ac/saasworthy-product-listing"&gt;https://mailchi.mp/caea48b0c7ac/saasworthy-product-listing&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#18-startup-ranking"&gt;
  &lt;/a&gt;
  #18 Startup Ranking
&lt;/h2&gt;

&lt;p&gt;StartupRanking is a meta-startup that provides startups with important information about their metrics and statistics in the web and social worlds &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 56&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type&lt;/strong&gt;: Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Medium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission&lt;/strong&gt;: High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 90 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb): &lt;/strong&gt;194,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://www.startupranking.com/startup/create"&gt;https://www.startupranking.com/startup/create&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#19-webwiki"&gt;
  &lt;/a&gt;
  #19 Webwiki
&lt;/h2&gt;

&lt;p&gt;Webwiki is a web-based platform for consumers to find trustworthy websites and avoid scams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 74&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 7 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; 63,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://www.webwiki.com/info/add-website.html"&gt;https://www.webwiki.com/info/add-website.html&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#20-startup-collections"&gt;
  &lt;/a&gt;
  #20 Startup Collections
&lt;/h2&gt;

&lt;p&gt;Startup Collections contains 750+ resources and tools for entrepreneurs, designers, developers and marketers &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added:&lt;/strong&gt; Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 32&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type: &lt;/strong&gt;No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission: &lt;/strong&gt;High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed: &lt;/strong&gt;Upto 30 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb): &lt;/strong&gt;N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link: &lt;/strong&gt;&lt;a href="https://startupcollections.com/submit-product/"&gt;https://startupcollections.com/submit-product/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#21-bigstartups"&gt;
  &lt;/a&gt;
  #21 BigStartups
&lt;/h2&gt;

&lt;p&gt;BigStartups is a global networking platform for startups, members and startup communities to network, connect, communicate and collaborate&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added&lt;/strong&gt;: Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR:&lt;/strong&gt; 14&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type: &lt;/strong&gt;No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type: &lt;/strong&gt;Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 30 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb): &lt;/strong&gt;N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://bigstartups.co/overview/list-product"&gt;https://bigstartups.co/overview/list-product&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#22-startup-lister"&gt;
  &lt;/a&gt;
  #22 Startup Lister
&lt;/h2&gt;

&lt;p&gt;Startup Lister is platform to submit your startups and products&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added:&lt;/strong&gt; Ebooks, Extensions, Gadgets, Games, Guides, Mobile Apps, Newsletters, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR:&lt;/strong&gt; 33&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type: &lt;/strong&gt;No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 30 days&lt;/p&gt;

&lt;p&gt;Monthly Traffic in May 2021 (Similarweb): N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link&lt;/strong&gt;: &lt;a href="https://startuplister.com/"&gt;https://startuplister.com/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#23-prefundia"&gt;
  &lt;/a&gt;
  #23 Prefundia
&lt;/h2&gt;

&lt;p&gt;Prefundia is a pre-launch platform that helps crowdfunding projects get backers before they launch their campaigns.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added: &lt;/strong&gt;Ebooks, Extensions, Gadgets, Games, Guides, Mobile Apps, Newsletters, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 43&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type&lt;/strong&gt;: No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience&lt;/strong&gt;: Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission&lt;/strong&gt;: High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed&lt;/strong&gt;: Upto 30 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb):&lt;/strong&gt; N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link: &lt;/strong&gt;&lt;a href="https://prefundia.com/auth?ref=submit"&gt;https://prefundia.com/auth?ref=submit&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#24-side-projectors"&gt;
  &lt;/a&gt;
  #24 Side Projectors
&lt;/h2&gt;

&lt;p&gt;SideProjectors is a friendly marketplace to sell and buy interesting side projects from other people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added:&lt;/strong&gt; Extensions, Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 59&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type:&lt;/strong&gt; No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type&lt;/strong&gt;: Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience:&lt;/strong&gt; Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 30 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb): &lt;/strong&gt;87,000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://www.sideprojectors.com/"&gt;https://www.sideprojectors.com/&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#25-startup-base"&gt;
  &lt;/a&gt;
  #25 Startup Base
&lt;/h2&gt;

&lt;p&gt;StartupBase is a community for makers and early adopters to connect and discuss the latest products and ideas. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Type of products that can be added:&lt;/strong&gt; Mobile Apps, Tech products, Web Apps&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DR&lt;/strong&gt;: 52&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link type: &lt;/strong&gt;No-follow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing type:&lt;/strong&gt; Free&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reach to audience: &lt;/strong&gt;Low&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ease of submission:&lt;/strong&gt; High&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time taken for being listed:&lt;/strong&gt; Upto 30 days&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monthly Traffic in May 2021 (Similarweb): &lt;/strong&gt;N/A&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submission link:&lt;/strong&gt; &lt;a href="https://startupbase.io/submit"&gt;https://startupbase.io/submit&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.notion.so/flexiple/45-Places-Where-You-Can-Launch-Your-Startup-or-Product-9d667603138f4ee99cee81729e290f78"&gt;Click here to view or download the platforms in a table&lt;/a&gt;&lt;/p&gt;


&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;BONUS:&lt;/strong&gt; Apart from these platforms, you can also promote your product in communities such as &lt;a href="https://remoteclan.com/"&gt;Remote Clan&lt;/a&gt;, &lt;a href="https://www.slant.co/"&gt;Slant&lt;/a&gt; and &lt;a href="https://yourstack.com/"&gt;YourStack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All the best for your product launch! Hope this article is useful to you. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
      <category>startup</category>
      <category>remote</category>
    </item>
    <item>
      <title>How to Write Powerful Cold Email As a Software Engineer.</title>
      <author>Ankur Tyagi</author>
      <pubDate>Mon, 28 Jun 2021 12:16:05 +0000</pubDate>
      <link>https://dev.to/tyaga001/how-to-write-powerful-cold-email-as-a-software-engineer-2do7</link>
      <guid>https://dev.to/tyaga001/how-to-write-powerful-cold-email-as-a-software-engineer-2do7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-write-powerful-cold-email-as-a-software-engineer"&gt;
  &lt;/a&gt;
  How to Write Powerful Cold Email As a Software Engineer...
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;That Actually Get You:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Job&lt;/li&gt;
&lt;li&gt;Sales&lt;/li&gt;
&lt;li&gt;Business opportunity &lt;/li&gt;
&lt;li&gt;Freelance contract&lt;/li&gt;
&lt;li&gt;Internship &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Getting someone to respond to an ice-cold email can be tough.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In fact, maybe you’ve heard, or thought:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cold email is dead. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s SPAM!&lt;/p&gt;

&lt;p&gt;I’ve heard these complaints a lot. But I disagree.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Everyone writes cold emails, but who’s actually good at it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;I moved to Sweden &amp;amp; many other opportunities in my career, which I’ve achieved through cold email.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Just imagine:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can get a job, build a business and reach your goals … by mastering cold email.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fortunately, there are proven techniques to make cold email work for you!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;'Cold email' is an ugly term. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No one wants to send them, no one wants to receive them. But, when used correctly, cold emailing can be a powerful lead generation tool for you.&lt;/p&gt;

&lt;p&gt;Each line of a cold email must persuade a reader to read the next one, all the way through to your close.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-divide-this-art-into-simple-three-steps"&gt;
  &lt;/a&gt;
  I divide this art into simple three steps:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Define a Problem&lt;/li&gt;
&lt;li&gt;Offer a solution&lt;/li&gt;
&lt;li&gt;Present an incentive&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Done well and consistently, cold emailing for a job can open the door to your next great position.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-you-need-to-understand-what-cold-email-isnt"&gt;
  &lt;/a&gt;
  First, you need to understand what cold email isn’t.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cold email isn’t spam.&lt;/li&gt;
&lt;li&gt;Cold email isn’t about you.&lt;/li&gt;
&lt;li&gt;Cold email isn’t focused on the contract.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;People are always impressed with initiative, and cold e-mailing is a way to build a network without relying on friends, family, or acquaintances.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Does it always work? &lt;br&gt;
No, there are people who aren’t going to take the time to connect with a stranger.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-keep-it-short"&gt;
  &lt;/a&gt;
  1. Keep it short
&lt;/h2&gt;

&lt;p&gt;Your cold email must be concise and to the point. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Be smart—don’t waste their time with a foot-long page of information. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For now, it’s all about getting attention and creating curiosity.&lt;/p&gt;

&lt;p&gt;Cold email is a one-on-one, personal conversation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-write-a-great-subject-line"&gt;
  &lt;/a&gt;
  2- Write a Great Subject Line
&lt;/h2&gt;

&lt;p&gt;It’s the first thing the reader sees And it determines whether they’ll read further.&lt;/p&gt;

&lt;p&gt;Without an engaging subject line, nothing else you do matters.&lt;/p&gt;

&lt;p&gt;Curiosity makes your subject lines irresistible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Avoid SPAM trigger words"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-offer-a-solution"&gt;
  &lt;/a&gt;
  3- Offer a solution
&lt;/h2&gt;

&lt;p&gt;Now that you have your prospect’s attention, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can talk about you.&lt;/li&gt;
&lt;li&gt;You can talk about your product next. &lt;/li&gt;
&lt;li&gt;You can talk about your agency.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-be-lighthearted-or-humorous"&gt;
  &lt;/a&gt;
  4- Be light-hearted or humorous
&lt;/h2&gt;

&lt;p&gt;Humour is a great way to connect with your prospect and increase the chances of getting a response. &lt;/p&gt;

&lt;p&gt;But it needs to be done the right way.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It keeps people reading &lt;/li&gt;
&lt;li&gt;It shows you’re human&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-establish-credibility"&gt;
  &lt;/a&gt;
  5- Establish credibility
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Your GitHub, Portfolio, Personal website, Twitter are the best ambassadors for you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you get in touch with a prospect.&lt;/p&gt;

&lt;p&gt;Feel free to drop names, because social proof asserts credibility!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-write-compelling-body-copy"&gt;
  &lt;/a&gt;
  6- Write Compelling Body Copy
&lt;/h2&gt;

&lt;p&gt;At the end of the day, your message has one job: &lt;/p&gt;

&lt;blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;"To get your reader to say yes."&lt;/p&gt;

&lt;p&gt;If only it were that easy.&lt;/p&gt;

&lt;p&gt;Three to five sentences is the sweet spot.&lt;/p&gt;

&lt;p&gt;Make it personal, and provide just enough information for your reader to take the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-close-with-action"&gt;
  &lt;/a&gt;
  7- Close with Action
&lt;/h2&gt;

&lt;p&gt;Now it’s time to make the ask.&lt;/p&gt;

&lt;p&gt;Asking an action is pretty simple.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Focus on building trust and establishing a professional relationship.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;if your message doesn’t close with a clear ask, the chances of a positive response are dramatically diminished.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Avoid vague, hesitant endings like these:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let me know what you think.&lt;/li&gt;
&lt;li&gt;Hope to speak with you soon!&lt;/li&gt;
&lt;li&gt;Look forward to hearing from you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#some-beautiful-resources-from-which-you-can-start-today"&gt;
  &lt;/a&gt;
  Some beautiful resources from which you can start today:
&lt;/h2&gt;

&lt;p&gt;*&lt;em&gt;Learn cold emailing art from Ankur warikoo's videos. *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2VG1Px105Vc"&gt;"How to write cold emails | Steps to writing a perfect cold email | Ankur Warikoo"&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_wQGd6Crkaw"&gt;Cold emails: How to write an email | Ankur Warikoo | 3 steps to writing the perfect cold email.&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*&lt;em&gt;Great Templates and Examples on How to write a cold email for jobs by  &lt;a href="https://twitter.com/anmelano"&gt;anmelano&lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;People oftentimes ask, "what format should my resume be in to pass the ATS check?" &lt;br&gt;&lt;br&gt;My advice? Use cold emails instead.&lt;br&gt;&lt;br&gt;Here are three cold emails that worked. Check out what made them effective 👇&lt;/p&gt;— Anna Melano (@anmelano) &lt;a href="https://twitter.com/anmelano/status/1349035021751865345?ref_src=twsrc%5Etfw"&gt;January 12, 2021&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;**&lt;br&gt;
Great Tips on Using cold emails to help get a job, internship, or career advice by  &lt;a href="https://twitter.com/amyecheetham"&gt;amyecheetham&lt;/a&gt; **&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;I broke into investment banking &lt;a href="https://twitter.com/jpmorgan?ref_src=twsrc%5Etfw"&gt;@jpmorgan&lt;/a&gt; (from a non-target school🙄) via a cold email. To be clear, it wasn't just one, I probably sent 150, but it worked eventually.&lt;br&gt;&lt;br&gt;Here are my tips on using cold emails to help get a job, internship, or career advice -- THREAD 👇&lt;/p&gt;— Amy Cheetham (@amyecheetham) &lt;a href="https://twitter.com/amyecheetham/status/1273705596672344064?ref_src=twsrc%5Etfw"&gt;June 18, 2020&lt;/a&gt;
&lt;/blockquote&gt;  

&lt;p&gt;It's time to follow up if you still didn't receive an answer. &lt;/p&gt;

&lt;p&gt;It Is Your Responsibility to Follow Up. &lt;/p&gt;

&lt;p&gt;How to take a Follow-Up? &lt;/p&gt;

&lt;p&gt;Checkout --&amp;gt;  &lt;a href="https://guzey.com/follow-up/"&gt;link&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;p&gt;"Don't miss out" Follow your mentor  on Twitter 👉 &lt;a href="https://twitter.com/TheAnkurTyagi"&gt;TheAnkurTyagi&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you would like to discuss about your career growth issues in detail with me 1-1, you can hire me on HireTheAuthor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hiretheauthor.com/theankurtyagi"&gt;Book 1-1 Call or Chat Subscription &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You can buy me a beer if you feel generous. Happy coding!!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ankurtyagi"&gt;BUY Me a Beer.&lt;/a&gt; &lt;/p&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>javascript</category>
    </item>
    <item>
      <title>A magical way to fetch data in React</title>
      <author>Dhaiwat Pandya</author>
      <pubDate>Mon, 28 Jun 2021 12:07:51 +0000</pubDate>
      <link>https://dev.to/dhaiwat10/a-magical-way-to-fetch-data-in-react-52m6</link>
      <guid>https://dev.to/dhaiwat10/a-magical-way-to-fetch-data-in-react-52m6</guid>
      <description>&lt;p&gt;If you have ever used React, chances are that you have had to query an API. The importance of data fetching in a website is indispensable. To build a truly delightful experience, you must get your data fetching right. It is critical.&lt;/p&gt;

&lt;p&gt;Let me quickly run you through the traditional approach for querying in React applications. Most of this might seem trivial to you, but it is important that we go through it to see the difference &lt;a href="https://react-query.tanstack.com/"&gt;&lt;em&gt;react-query&lt;/em&gt;&lt;/a&gt; really makes. (it's magic, trust me😉)&lt;/p&gt;

&lt;p&gt;We will use the &lt;a href="https://jsonplaceholder.typicode.com/guide/"&gt;JSON Placeholder API&lt;/a&gt; as our source of data. We will primarily be making two types of queries: a list of all posts and an individual post. Let's write a hook to fetch the list of all posts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;baseUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/posts`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This should look familiar. You'll notice that we have not handled errors or the loading state. That's bad practice. Let's do that now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/posts`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
        &lt;span class="nx"&gt;setLoading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Woah... that certainly was &lt;em&gt;not&lt;/em&gt; pleasant. 😒 We had to add a ton of code just to make our hook support two simple states. And this query runs... basically every time your component re-renders? This is far from ideal. You deserve better.&lt;/p&gt;

&lt;p&gt;What about background updates? Stale data? Pagination? Programatically re-running queries? &lt;/p&gt;

&lt;p&gt;Good luck with all that. 🤷‍♂️&lt;/p&gt;

&lt;p&gt;This is where react-query comes to your rescue. Use &lt;a href="https://github.com/Dhaiwat10/react-query-tutorial"&gt;this repo&lt;/a&gt; as boilerplate if you want to follow along.&lt;/p&gt;

&lt;p&gt;Let's now re-factor our &lt;code&gt;usePosts&lt;/code&gt; hook using react-query. If you haven't used react-query before, you're in for a surprise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// hooks/hooks.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usePosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/posts`&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yeah. That's it. I told you. 😎&lt;/p&gt;

&lt;p&gt;The same can be done for the &lt;code&gt;usePost&lt;/code&gt; hook.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;usePost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;baseUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;useQuery&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;post&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;fetchData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This piece of code is all you need to handle everything we handled with the traditional approach — and we're barely scratching the surface. Let's dive deeper. &lt;/p&gt;

&lt;p&gt;Open the react-query devtools by clicking the icon shown in the screenshot below. Keep it open.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ceGBZlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fexport%3Dview%26id%3D1M803MA0DDNvH4kWQuHA0QIaRsrXgsqjx" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ceGBZlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fexport%3Dview%26id%3D1M803MA0DDNvH4kWQuHA0QIaRsrXgsqjx" alt="Open react-query devtools"&gt;&lt;/a&gt;&lt;br&gt;
Click around the web-app now and keep an eye out on the devtools. You will notice queries being logged as they are executed. It is pretty intuitive.&lt;/p&gt;

&lt;p&gt;I mentioned that react-query can do much more than just manage states like loading, error, etc. Let me walk you through one of those things — query invalidation. In simple words, query invalidation is you telling react-query to consider the respective query 'stale', and re-run the query. Let's try it out.&lt;/p&gt;

&lt;p&gt;We will be adding a re-fetch button at the top of our list of posts. Needless to say, clicking this button should make our app re-fetch the list of posts. Since we are using react-query for this, this is going to be a piece of cake for us. 😁&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// pages/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useQueryClient&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;queryClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useQueryClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reFetchPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;queryClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;invalidateQueries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;reFetchPosts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Re&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//...&lt;/span&gt;
      &lt;span class="p"&gt;})}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Container&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is all we need to add. Now try clicking our newly added re-fetch button and keep an eye out on the react-query devtools. You will notice that it re-runs the query as expected. You can also verify this by making use of the Network tab in your browser's devtools.&lt;/p&gt;

&lt;p&gt;In conclusion, we took 27 lines of code, narrowed it down to merely 7 lines, and ended up with more functionalities to work with. That sounds like a good deal to me. 🤝&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJZWBXPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fexport%3Dview%26id%3D1wA-iv6NaXBcz93sjsF8i4n0X5STZaPQV" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJZWBXPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://drive.google.com/uc%3Fexport%3Dview%26id%3D1wA-iv6NaXBcz93sjsF8i4n0X5STZaPQV" alt="Staggering difference."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Staggering. I promised it is magical. 😊&lt;/p&gt;

&lt;p&gt;If you like this article, please follow me here and &lt;a href="https://twitter.com/dhaiwat10"&gt;on Twitter&lt;/a&gt;. I mostly tweet rants about software &amp;amp; brag about my tiny wins. ⚡&lt;/p&gt;

&lt;p&gt;Please feel free to comment down below to start discussions or ask questions. I will happily answer them. 🤗&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://react-query.tanstack.com/overview"&gt;Official react-query docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=DocXo3gqGdI"&gt;All About React Query (with Tanner Linsley) — Learn With Jason&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=OorL3E7oCjA"&gt;React Query - Data Fetching Hooks — Leigh Halliday&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cover photo by &lt;a href="https://unsplash.com/photos/MxGPHq_UHaA"&gt;Simon Berger&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>7 GitHub projects essential for every Javascript developer 👨🏽‍💻 🚀</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Mon, 28 Jun 2021 12:01:52 +0000</pubDate>
      <link>https://dev.to/ankit01oss/7-github-projects-essential-for-every-javascript-developer-258i</link>
      <guid>https://dev.to/ankit01oss/7-github-projects-essential-for-every-javascript-developer-258i</guid>
      <description>&lt;p&gt;Javascript is so widely adopted that most developers can't avoid it entirely during the course of their careers. Sooner or later, you need to face JS, and when you do, you need to be ready with practical and fundamental concepts of the Javascript programming language.&lt;/p&gt;

&lt;p&gt;So today, I want to share 7 amazing GitHub projects that will help you become a better Javascript developer. These GitHub projects are quite popular and can be a go-to resource for anyone looking to learn, and let's face it - Devs are always learning.🤓&lt;/p&gt;

&lt;p&gt;So let's get started. 👊&lt;/p&gt;




&lt;p&gt;We are currently building &lt;a href="https://bit.ly/3A6k4an"&gt;SigNoz&lt;/a&gt; - an open-source application performance monitoring tool. The front-end is built in Typescript and Reactjs.&lt;/p&gt;

&lt;p&gt;If interested, then check out our GitHub repo👇&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
👇 Features:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#1-you-dont-know-js"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You don't know JS&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 141k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo is a series of books on core mechanisms of the Javascript language. The 2nd edition of the series is currently in progress, while the first edition is available and is entirely free to read online!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/getify"&gt;
        getify
      &lt;/a&gt; / &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;
        You-Dont-Know-JS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A book series on JavaScript. @YDKJS on twitter.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
You Don't Know JS Yet (book series) - 2nd Edition&lt;/h1&gt;
&lt;p&gt;This is a series of books diving deep into the core mechanisms of the JavaScript language. This is the &lt;strong&gt;second edition&lt;/strong&gt; of the book series:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanpub.com/ydkjsy-get-started" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtkSruB9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/get-started/images/cover.png" width="75"&gt;&lt;/a&gt;  
&lt;a href="https://leanpub.com/ydkjsy-scope-closures" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--shk0lBuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/scope-closures/images/cover.png" width="75"&gt;&lt;/a&gt;  ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To read more about the motivations and perspective behind this book series, check out the &lt;a href="https://raw.githubusercontent.com/getify/You-Dont-Know-JS/2nd-ed/preface.md"&gt;Preface&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you're looking for the previous &lt;strong&gt;first edition&lt;/strong&gt; books, &lt;a href="https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/README.md"&gt;they can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Premier Sponsor&lt;/h2&gt;
&lt;p&gt;This edition of the &lt;strong&gt;YDKJS&lt;/strong&gt; book series is exclusively sponsored by &lt;a href="https://frontendmasters.com" rel="nofollow"&gt;Frontend Masters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Frontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.&lt;/p&gt;

&lt;p&gt;I teach &lt;a href="https://frontendmasters.com/kyle-simpson" rel="nofollow"&gt;all my workshops&lt;/a&gt; exclusively through Frontend Masters. If you like this book content, please check out my video training courses.&lt;/p&gt;
&lt;p&gt;I want…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/getify/You-Dont-Know-JS"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-javascript-algorithms"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;Javascript Algorithms&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 111k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo is an amazing resource for anyone wanting to get a firm understanding of algorithms and data structure. It contains JavaScript based examples of many popular algorithms and data structures. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trekhleb"&gt;
        trekhleb
      &lt;/a&gt; / &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;
        javascript-algorithms
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
JavaScript Algorithms and Data Structures&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPiprYPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg" alt="CI"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/trekhleb/javascript-algorithms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ff751911f19ea8aefdbd2b20184c1ab5fba47caf8b31a02fb18f8d7df6e43ba/68747470733a2f2f636f6465636f762e696f2f67682f7472656b686c65622f6a6176617363726970742d616c676f726974686d732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains JavaScript based examples of many
popular algorithms and data structures.&lt;/p&gt;
&lt;p&gt;Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt;
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md"&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md"&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md"&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md"&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md"&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md"&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md"&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md"&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md"&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md"&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md"&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md"&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md"&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md"&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md"&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes
only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
Data Structures&lt;/h2&gt;
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trekhleb/javascript-algorithms"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3-30-seconds-of-code"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;30 seconds of code&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 78.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo can be a super-booster to your JS workflow. It contains short Javascript code snippets for all your development needs. Once you get used to this, there's no looking back.🙇‍♀️&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/30-seconds"&gt;
        30-seconds
      &lt;/a&gt; / &lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;
        30-seconds-of-code
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Short JavaScript code snippets for all your development needs
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://30secondsofcode.org/js/p/1" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7pFFcrnb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/30-seconds/30-seconds-of-code/master/logo.png" alt="Logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
30 seconds of code&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Visit &lt;a href="https://30secondsofcode.org" rel="nofollow"&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt;
&lt;li&gt;Use the &lt;a href="https://30secondsofcode.org/search" rel="nofollow"&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.&lt;/li&gt;
&lt;li&gt;Browse the &lt;a href="https://30secondsofcode.org/js/p/1" rel="nofollow"&gt;JavaScript Snippet collection&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt;
&lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt;
&lt;li&gt;You can use the button at the bottom of a snippet card to copy the code to clipboard.&lt;/li&gt;
&lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Want to contribute?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you want to help us improve, take a…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/30-seconds/30-seconds-of-code"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#4-frontend-checklist"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/thedaviddias/Front-End-Checklist"&gt;Front-End Checklist&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 54.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are a million things to take care of when you launch a website. So how do you ensure you have taken care of things that can break your product when it goes into production. Enter &lt;code&gt;Front-end Checklist&lt;/code&gt;✅. It is an exhaustive list of all elements you need to have/test before launching your website / HTML page to production.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thedaviddias"&gt;
        thedaviddias
      &lt;/a&gt; / &lt;a href="https://github.com/thedaviddias/Front-End-Checklist"&gt;
        Front-End-Checklist
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🗂 The perfect Front-End Checklist for modern websites and meticulous developers
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;br&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/thedaviddias/Front-End-Checklist/master/data/images/logo-front-end-checklist.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pRijHDR_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thedaviddias/Front-End-Checklist/master/data/images/logo-front-end-checklist.jpg" alt="Front-End Checklist" width="130"&gt;&lt;/a&gt;
  &lt;br&gt;
    &lt;br&gt;
  Front-End Checklist
  &lt;br&gt;
&lt;/h1&gt;

&lt;h3&gt;
🚨 Currently working on a V2 of frontendchecklist.io,&lt;br&gt;feel free to &lt;a href="https://github.com/thedaviddias/Front-End-Checklist/discussions"&gt;discuss&lt;/a&gt; any feature you would like to see in the next version&lt;/h3&gt;

&lt;h4&gt;
The Front-End Checklist is an exhaustive list of all elements you need to have / to test before launching your website / HTML page to production.&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome"&gt;
  &lt;/a&gt;
    &lt;a href="https://github.com/thedaviddias/Front-End-Checklist/graphs/contributors"&gt;
    &lt;img src="https://camo.githubusercontent.com/4aa098f8dd3ba3a7ef5d3cdf8a446144cc7c939e50ded629055e56c8a33deba1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f7468656461766964646961732f46726f6e742d456e642d436865636b6c6973742e7376673f7374796c653d666c61742d737175617265" alt="Contributors"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/thedaviddias/Front-End-Checklist/"&gt;
    &lt;img src="https://camo.githubusercontent.com/8072e14bbbee2ad3fa40a5b99d029bb33942dc45f2e596225ffee15f48100131/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f46726f6e74e28091456e645f436865636b6c6973742d666f6c6c6f7765642d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="Front‑End_Checklist followed"&gt;
  &lt;/a&gt;
    &lt;a href="https://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/7de1b7fd70687fa6d07e273737f0465ef27971f193842c2d2c4a4ac01b3946bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4343302d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="CC0"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://raw.githubusercontent.com/thedaviddias/Front-End-Checklist/master/#how-to-use"&gt;How To Use&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/thedaviddias/Front-End-Checklist/master/#contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://frontendchecklist.io" rel="nofollow"&gt;Website&lt;/a&gt; • &lt;a href="https://www.producthunt.com/posts/front-end-checklist" rel="nofollow"&gt;Product Hunt&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    &lt;span&gt;Other Checklists:&lt;/span&gt;
    &lt;br&gt;
  &lt;a href="https://github.com/thedaviddias/Front-End-Performance-Checklist#---------front-end-performance-checklist-"&gt;🎮 Front-End Performance Checklist&lt;/a&gt; • &lt;a href="https://github.com/thedaviddias/Front-End-Design-Checklist#front-end-design-checklist"&gt;💎 Front-End Design Checklist&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;It is based on Front-End developers' years of experience, with the additions coming from some other open-source checklists.&lt;/p&gt;




&lt;h2&gt;
How to use?&lt;/h2&gt;
&lt;p&gt;All items in the &lt;strong&gt;Front-End Checklist&lt;/strong&gt; are required for the majority of the projects, but some elements can be omitted or are not essential (in the case of an administration web app, you may not need RSS feed for example). We choose to use 3 levels of flexibility:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/thedaviddias/Front-End-Checklist/master/data/images/priority/low.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BEBePSfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/thedaviddias/Front-End-Checklist/master/data/images/priority/low.svg" alt="Low"&gt;&lt;/a&gt; means that the item is &lt;strong&gt;recommended&lt;/strong&gt; but can be…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/thedaviddias/Front-End-Checklist"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-front-end-interview-handbook"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/yangshun/front-end-interview-handbook"&gt;Front End interview handbook&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 29.5k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo promises to make you go from zero to front-end interview hero even if you don't have prior interview experience. And, from the number of stargazers it has, it looks like it delivers on that promise. It has answers to every question in the very famous question bank &lt;strong&gt;Front-end Job Interview Questions.&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/yangshun"&gt;
        yangshun
      &lt;/a&gt; / &lt;a href="https://github.com/yangshun/front-end-interview-handbook"&gt;
        front-end-interview-handbook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🕸  No-bullshit answers to the famous h5bp "Front-end Job Interview Questions"
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Front End Interview Handbook&lt;/h1&gt;
&lt;div&gt;
  &lt;a href="https://dribbble.com/shots/4263961-Front-End-Interview-Scroll" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaGPmtVq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/yangshun/front-end-interview-handbook/master/assets/scroll.svg" alt="Front End Interview Handbook" width="400"&gt;
    &lt;/a&gt;
  &lt;br&gt;
  &lt;p&gt;
    &lt;em&gt;Credits: &lt;a href="https://dribbble.com/shots/4263961-Front-End-Interview-Scroll" rel="nofollow"&gt;Illustration&lt;/a&gt; by &lt;a href="https://dribbble.com/yangheng" rel="nofollow"&gt;@yangheng&lt;/a&gt;
    &lt;/em&gt;
  &lt;/p&gt;
  &lt;h3&gt;
    &lt;a href="https://frontendinterviewhandbook.com" rel="nofollow"&gt;Read on the website&lt;/a&gt;
  &lt;/h3&gt;
&lt;/div&gt;

&lt;h2&gt;
What is this?&lt;/h2&gt;
&lt;p&gt;Unlike typical software engineer job interviews, front-end job interviews have less emphasis on algorithms and have more questions on intricate knowledge and expertise about the domain — HTML, CSS, JavaScript, just to name a few areas.&lt;/p&gt;
&lt;p&gt;While there are some existing resources to help front end developers in preparing for interviews, they aren't as abundant as materials for a software engineer interview. Among the existing resources, probably the most helpful question bank would be &lt;a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions"&gt;Front-end Developer Interview Questions&lt;/a&gt;. Unfortunately, I couldn't find many complete and satisfactory answers to these questions online, hence here is my attempt at answering them. Being an open source repository, the project can live on with the support of the community as the state of web evolves.&lt;/p&gt;
&lt;h2&gt;
Why do I want this?&lt;/h2&gt;
&lt;h3&gt;
Go From Zero to Hero&lt;/h3&gt;
&lt;p&gt;Go from zero…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/yangshun/front-end-interview-handbook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-webdev-for-beginners"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web-Dev for Beginners&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 27.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo is maintained by Azure Cloud Advocates at Microsoft and offers a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/microsoft"&gt;
        microsoft
      &lt;/a&gt; / &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;
        Web-Dev-For-Beginners
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      24 Lessons, 12 Weeks, Get Started as a Web Developer
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/9193963a1f6c74908c6a2c26b74e3db4e6418701318ba74a63edf08bf2faf1f7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6963726f736f66742f5765622d4465762d466f722d426567696e6e6572732e737667" alt="GitHub license"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/"&gt;&lt;img src="https://camo.githubusercontent.com/414bad781e032d72c348ce0472ccddcb2b9eeda4442ca798be0115b374f8f82c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6d6963726f736f66742f5765622d4465762d466f722d426567696e6e6572732e737667" alt="GitHub contributors"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/"&gt;&lt;img src="https://camo.githubusercontent.com/6595f503e0e63326780d520b990c3728257766a752b05abcf7c1af32ceaca39a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6d6963726f736f66742f5765622d4465762d466f722d426567696e6e6572732e737667" alt="GitHub issues"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/"&gt;&lt;img src="https://camo.githubusercontent.com/9ebbc945cf409eac09343ef65cc22e3ba3b292e6778d0676f90b9bca766a90ad/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f6d6963726f736f66742f5765622d4465762d466f722d426567696e6e6572732e737667" alt="GitHub pull-requests"&gt;&lt;/a&gt;
&lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/"&gt;&lt;img src="https://camo.githubusercontent.com/f44c3d4112fe701371f7e9ad6d952996ed9bae4eccafe3471f926b5b4b7183f0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f77617463686572732f6d6963726f736f66742f5765622d4465762d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d5761746368266d61784167653d32353932303030" alt="GitHub watchers"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/"&gt;&lt;img src="https://camo.githubusercontent.com/0eefedc51bf25869f525243241197a2e5daaa8a85d705c71d0edcbeb4d374c48/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f6d6963726f736f66742f5765622d4465762d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d466f726b266d61784167653d32353932303030" alt="GitHub forks"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/"&gt;&lt;img src="https://camo.githubusercontent.com/edcce4696932bd846a82db3e2acfb54b5b82abe74774cdf499056de861424320/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d6963726f736f66742f5765622d4465762d466f722d426567696e6e6572732e7376673f7374796c653d736f6369616c266c6162656c3d53746172266d61784167653d32353932303030" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Web Development for Beginners - A Curriculum&lt;/h1&gt;
&lt;p&gt;Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about JavaScript, CSS, and HTML basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hearty thanks to our authors Jen Looper, Chris Noring, Christopher Harrison, Jasmine Greenaway, Yohan Lasorsa, Floor Drees, and sketchnote artist Tomomi Imura!&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
Getting Started&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md"&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. We'd love your feedback &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner"&gt;in our discussion forum&lt;/a&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Students&lt;/strong&gt;, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#7-reactjs-interview-questions"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/sudheerj/reactjs-interview-questions"&gt;Reactjs Interview Questions&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 14k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo has a list of top 500 ReactJS Interview Questions &amp;amp; Answers.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sudheerj"&gt;
        sudheerj
      &lt;/a&gt; / &lt;a href="https://github.com/sudheerj/reactjs-interview-questions"&gt;
        reactjs-interview-questions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      List of top 500 ReactJS Interview Questions &amp;amp; Answers....Coding exercise questions are coming soon!!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Interview Questions &amp;amp; Answers&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Click ⭐if you like the project. Pull Request are highly appreciated. Follow me &lt;a href="https://twitter.com/SudheerJonna" rel="nofollow"&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div&gt;
        &lt;a href="https://www.fullstack.cafe/?utm_source=github&amp;amp;utm_medium=sud" rel="nofollow"&gt;
            3600 Tech Interview Questions. &lt;b&gt;Answered&lt;/b&gt;
            &lt;div&gt;
                &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L4xC4Pdx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/13550565/76382460-cc784d80-6393-11ea-8837-2b89265ac853.png" width="150" alt="FullStack.Cafe"&gt;
            &lt;/div&gt;
        &lt;/a&gt;
&lt;/div&gt;

&lt;div&gt;
Learn to code and get hired with &lt;a href="https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=reactjs-interview-questions" rel="nofollow"&gt;Zero To Mastery:&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;This &lt;a href="https://links.zerotomastery.io/react_sudheer" rel="nofollow"&gt;React course&lt;/a&gt; is good if you’re struggling to learn React beyond the basics&lt;/li&gt;
&lt;li&gt;This &lt;a href="http://links.zerotomastery.io/mci_sudheer" rel="nofollow"&gt;coding interview bootcamp&lt;/a&gt; is helpful if you’re serious about getting hired as a developer&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repository is specific to ReactJS. Please check &lt;a href="https://github.com/sudheerj/javascript-interview-questions"&gt;Javascript Interview questions&lt;/a&gt; for core javascript questions.&lt;/p&gt;
&lt;h2&gt;
Downloading PDF/Epub formats&lt;/h2&gt;
&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href="https://github.com/sudheerj/reactjs-interview-questions/actions"&gt;actions tab&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Table of Contents&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Questions&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Core React&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react"&gt;What is React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react"&gt;What are the major features of React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx"&gt;What is JSX?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component"&gt;What is the difference between Element and Component?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react"&gt;How to create components in React?&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component"&gt;When to use&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sudheerj/reactjs-interview-questions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;I hope you enjoyed this list. I will be coming up with more such amazing resources soon. So, stay tuned! 🙂&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>github</category>
    </item>
    <item>
      <title>Developer vs. programmer</title>
      <author>.Onion</author>
      <pubDate>Mon, 28 Jun 2021 11:52:15 +0000</pubDate>
      <link>https://dev.to/dotonion/developer-vs-programmer-33nh</link>
      <guid>https://dev.to/dotonion/developer-vs-programmer-33nh</guid>
      <description>&lt;p&gt;Hello Buddies. This is a bit of a different topic and I hope you don't scold me. Actually, most developers are also good programmers. But there is a little difference between &lt;strong&gt;developer&lt;/strong&gt; and &lt;strong&gt;programmer&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"A developer and a programmer are essential to the whole process of software development, but the responsibilities differ between the two. Take it this way: the developer is someone who takes an abstract picture described by a person who wants that picture to be painted. You put the responsibility of getting that picture on the shoulders of the developer. The programmer is the painter with the brush who brings the picture to life, while the developer guides him to bring that picture to life."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#programmer"&gt;
  &lt;/a&gt;
  Programmer
&lt;/h2&gt;

&lt;p&gt;A programmer's duties include writing code, testing, and fixing bugs.&lt;br&gt;
A programmer converts a design into instructions that a computer can follow. These instructions are coded using one of many programming languages. They are usually familiar with several of these languages, including Java, C#, PHP, Oracle, SQL Server, JavaScript, etc.&lt;br&gt;
Specialized programmers focus on one type of programming. General programmers write code for many types of software.&lt;br&gt;
Typically, programmers work in groups or teams under a lead programmer (team leader) who oversees their work.&lt;br&gt;
A programmer can be an expert in several areas such as databases, web development, security development and more. Depending on their programming skills and areas of expertise, they may specialize as application programmers, systems programmers, AI and machine learning engineers, or game programmers.&lt;br&gt;
Just as a competent cook can turn a recipe into a great dish, programmers translate ideas they've taken from other people and turn them into clean and efficient code. Think of programmers as the technicians of the software development process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer"&gt;
  &lt;/a&gt;
  Developer
&lt;/h2&gt;

&lt;p&gt;Their duties include writing code, but they also contribute to many other aspects of the project/software development process. In addition to coding, a developer's duties often include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Software Design&lt;/li&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;li&gt;Research&lt;/li&gt;
&lt;li&gt;Writing Documentation and Specs&lt;/li&gt;
&lt;li&gt;Maintenance&lt;/li&gt;
&lt;li&gt;Testing Software&lt;/li&gt;
&lt;li&gt;Core Implementation&lt;/li&gt;
&lt;li&gt;Analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basically, a developer is primarily a programmer, but with greater responsibility for other aspects of the project.&lt;br&gt;
If a programmer is like a reasonably competent cook, then a developer is more like a professional chef. Not only can they cook at a high level, but they can be more creative and conceptual about what they make. This means figuring out what their target market wants, creating a plan for how to make it, and coming up with a set of instructions to give to other chefs. Chefs do this for restaurants and developers do this for programmers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-work-as-a-programmer-in-excel"&gt;
  &lt;/a&gt;
  How to work as a programmer in Excel
&lt;/h2&gt;

&lt;p&gt;These are a bonus for reading this article. In addition to a solid basic knowledge of computer science, a programmer should also know how to write clear, logical code. To excel as an effective programmer, you also need to be able to read and edit other people's code. Reviewing existing code gives you the ability to understand what works and what doesn't: insight that is valuable when updating another programmer's application. Reading another programmer's code can also encourage you to learn new languages and see how multiple languages interact.&lt;br&gt;
It is essential for a good programmer to have debugging skills. This becomes important when dealing with malfunctioning software, in which case the programmer must trace back to the root of the problem. These skills can help a programmer to create a flow document. Flow documents help the programmer to examine the code and find the specific problem instead of changing the code completely.&lt;br&gt;
Apart from the technical aspect, a programmer must also be a strong team player. He should remain optimistic even in the face of failure and enjoy doing research: Good programmers are able to learn from their mistakes and constantly improve their craft. To become a good programmer, you should have read Become a &lt;a href="https://ayushirawat.com/become-a-better-programmer"&gt;Better Programmer&lt;/a&gt; by &lt;a href="https://hashnode.com/@ayushi7rawat"&gt;Ayushi Rawat&lt;/a&gt;. And also remember to read &lt;a href="https://obayuwanapaul.hashnode.dev/5-mistakes-you-should-not-make-when-starting-your-career-as-a-software-developer"&gt;5 Mistakes You Shouldn't Make When Starting Your Career as a Software Developer&lt;/a&gt; &lt;a href="https://hashnode.com/@Pauxiel"&gt;Obayuwana Paul&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-work-as-a-developer-in-excel"&gt;
  &lt;/a&gt;
  How to work as a developer in Excel
&lt;/h2&gt;

&lt;p&gt;Every successful developer must be a good programmer. If you want to be a developer, you need to understand how to read and write code. Skilled programming is an art that is a prerequisite to becoming a developer. Even if a software developer has more than ten years of experience, he must continue to practice programming to remain competent.&lt;br&gt;
If you want to know what code languages every developer needs to know, we have some recommendations. If you want to be a developer, don't strive for the exact or perfect solution; there isn't one. Instead, focus on getting closer to your desired goal as quickly as possible. Practicing your skills by taking on personal projects outside of the workplace will help you become a faster, more efficient programmer. Last but not least, despite all your experience, an efficient developer should avoid blindly using third-party libraries without checking the source code.&lt;br&gt;
In addition to programming skills, a developer must also be equipped with project management skills and soft skills. And to improve your development skills, you should also develop games. Read &lt;a href="https://lo-victoria.com/why-software-developers-should-build-games"&gt;Why Software Developers Should Build Games&lt;/a&gt; from &lt;a href="https://hashnode.com/@victoria"&gt;Victoria Lo&lt;/a&gt; and if you are an aspiring web developer, you must read &lt;a href="https://girlthatlovestocode.com/tips-for-newbies"&gt;Roadmap for aspiring web developers&lt;/a&gt; from &lt;a href="https://hashnode.com/@GirlThatLovesToCode"&gt;GirlThatLovesToCode&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programmer-vs-developer"&gt;
  &lt;/a&gt;
  Programmer vs Developer
&lt;/h2&gt;

&lt;p&gt;If you’re still unclear, the key difference between a programmer vs developer is their scope of work. Programmers, while being competent at what they do, have a more limited capacity of work in comparison to a developer. A developer is involved in the full project scope whereas a programmer is generally limited to coding.&lt;/p&gt;




&lt;p&gt;This article on &lt;a href="https://dotonion.medium.com/developer-vs-programmer-9ca34e8d787a"&gt;&lt;strong&gt;Medium&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
This article on &lt;a href="https://dotonion.hashnode.dev/developer-vs-programmer"&gt;&lt;strong&gt;HashNode&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>developer</category>
      <category>programming</category>
      <category>programmer</category>
      <category>coding</category>
    </item>
  </channel>
</rss>
