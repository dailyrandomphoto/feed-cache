<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Winning Wars (Literally) with Agile &amp; DevOps w/ Adam Furtado of Kessel Run</title>
      <author>Conor Bronsdon</author>
      <pubDate>Tue, 20 Jul 2021 18:54:25 +0000</pubDate>
      <link>https://dev.to/linearb/winning-wars-literally-with-agile-devops-w-adam-furtado-of-kessel-run-2bhf</link>
      <guid>https://dev.to/linearb/winning-wars-literally-with-agile-devops-w-adam-furtado-of-kessel-run-2bhf</guid>
      <description>&lt;p&gt;The wars of the future will be fought with software and system architecture, as much as any other weapon. That’s why the US armed forces needed to start applying modern software methodologies at scale. &lt;/p&gt;

&lt;p&gt;The beginning of this incredible digital transformation began in 2017 when the US Air Force started a project called Kessel Run. Leading the project then, and now Chief of Platform of over 400 Kessel Run developers, is Adam Furtado.&lt;/p&gt;

&lt;p&gt;Translating engineering to executives is a regular challenge for many of us, but I can almost guarantee translating engineering to military officials is way harder. When he’s not explaining why DevOps matters to his higher ups, Adam spends his time scaling Kessel Run operations by building systems of systems. This week’s episode of &lt;a href="https://devinterrupted.com/podcast/winning-wars-literally-with-agile-devops/"&gt;Dev Interrupted&lt;/a&gt; chronicles everything Adam has learned during his journey from 5 developers to over 400. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/1yEGsyHYL7BJlNcYG0vQ0b"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Effective tactics for translating engineering to non-technical people&lt;/li&gt;
&lt;li&gt;Why having a mission driven culture is critical to success&lt;/li&gt;
&lt;li&gt;How to continue the momentum of early wins for organization success&lt;/li&gt;
&lt;li&gt;When you need to start thinking about metrics and visibility while scaling&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>agile</category>
      <category>culture</category>
      <category>metrics</category>
    </item>
    <item>
      <title>Laravel 8.0 CRUD Tutorial Using Mysql Database
</title>
      <author>devcse</author>
      <pubDate>Tue, 20 Jul 2021 18:28:30 +0000</pubDate>
      <link>https://dev.to/jewelcse/laravel-8-0-crud-tutorial-using-mysql-database-4ecf</link>
      <guid>https://dev.to/jewelcse/laravel-8-0-crud-tutorial-using-mysql-database-4ecf</guid>
      <description>&lt;p&gt;Hello Artisan,&lt;/p&gt;

&lt;p&gt;Today we will create a CRUD application in Laravel using Mysql Database. CRUD extends Create, Read, Update, Delete. We performing This operation in our new fresh laravel project. So, let’s start.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a Laravel Project first, run this command&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;composer create-project --prefer-dist laravel/laravel blog&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After completion the creation of laravel project, lets go…&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Make databse Connection  *&lt;/em&gt;&lt;br&gt;
create a databse in the mysql database after that go to the .env file&lt;/p&gt;

&lt;p&gt;and add the code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel_crud
DB_USERNAME=root
DB_PASSWORD=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Set your Databasae name,username and password.&lt;/p&gt;

&lt;p&gt;Now, run this command to migrate&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan migrate&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create Product model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan make:model Product&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create migration for products table, run this command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan make:migration create_products_table --create=products&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;let’s add products table column propertise to the migration file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Schema::create('products', function (Blueprint $table) {
    $table-&amp;gt;id();
    $table-&amp;gt;string('title');
    $table-&amp;gt;text('details');
    $table-&amp;gt;timestamps();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create Controller, run this command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan make:controller ProductController --resource&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In web.php add our route, &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;web.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\ProductController;
use App\Http\Controllers\UserController;
/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

Route::get('/', function () {
    return view('index');
});

Route::resource('product',ProductController::class);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see out all route, run this command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php artisan route:list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Output&lt;/p&gt;

&lt;p&gt;FULL CRUD GET HERE: &lt;a href="https://codesnipeet.com/laravel-8-crud-tutorial-using-mysql-database/"&gt;Link&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Loan Calculator Library</title>
      <author>Stephen</author>
      <pubDate>Tue, 20 Jul 2021 18:15:20 +0000</pubDate>
      <link>https://dev.to/knock/loan-calculator-library-4ogg</link>
      <guid>https://dev.to/knock/loan-calculator-library-4ogg</guid>
      <description>&lt;p&gt;As part of Knock’s mission to make home buying and selling easy, we launched the Knock &lt;a href="https://blog.knock.com/knock-home-swap/"&gt;Home Swap&lt;/a&gt;™ almost exactly one year ago. Offering competitive financial products to our clients brought with it a host of opportunities, challenges, and new features for Knockstars to develop!&lt;/p&gt;

&lt;p&gt;For example, take this Home Swap interest rates card from Knock HomePro (&lt;a href="https://play.google.com/store/apps/details?id=com.knockpoc&amp;amp;hl=en_US&amp;amp;gl=US"&gt;Android&lt;/a&gt; / &lt;a href="https://apps.apple.com/us/app/knock-homepro/id1446291303"&gt;iOS&lt;/a&gt;), our app for Real Estate agents:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jv_TRKpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r22g18fdr5khom1obga0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jv_TRKpV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r22g18fdr5khom1obga0.png" alt="Screen Shot 2021-07-20 at 9.53.25 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We brought mortgage rates into the HomePro app to show agents and their customers that we offer competitive interest rates. We are also legally required to show the Annual Percentage Rate (APR) whenever we provide an interest rate. This gives agents and customers a uniform metric to compare interest rates and fees across lenders.&lt;/p&gt;

&lt;p&gt;To our surprise, it was difficult to find a simple &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt; module to convert an interest rate to APR the way that innumerable online calculators do (&lt;a href="https://www.calculator.net/apr-calculator.html"&gt;1&lt;/a&gt;, &lt;a href="https://www.calculatorsoup.com/calculators/financial/apr-calculator.php"&gt;2&lt;/a&gt;, &lt;a href="https://www.calculatestuff.com/financial/apr-calculator"&gt;3&lt;/a&gt;, the list goes on!). In particular, we could not find a module that would properly account for the various parameters (payment frequency, loaned fees, upfront fees, etc.) which are readily available in many of the online tools.&lt;/p&gt;

&lt;p&gt;And so, we created this open source module: &lt;a href="https://npm.im/@knockaway/loan-calculator"&gt;@knockaway/loan-calculator&lt;/a&gt;. The goal of this project is to make loan calculations as simple as using any one of the free online loan calculators. Just inputs and outputs! The first release includes methods to calculate APR, APY, periodic payments, and to convert compounding frequencies.&lt;/p&gt;

&lt;p&gt;Have an idea for a new loan calculator function? Visit our &lt;a href="https://github.com/knockaway/loan-calculator"&gt;GitHub&lt;/a&gt; page to make a contribution or feature request. Happy calculating!&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>node</category>
    </item>
    <item>
      <title> Top Javascript Project For Beginners</title>
      <author>Rocky</author>
      <pubDate>Tue, 20 Jul 2021 18:05:33 +0000</pubDate>
      <link>https://dev.to/codelivly/top-javascript-project-for-beginners-2ca4</link>
      <guid>https://dev.to/codelivly/top-javascript-project-for-beginners-2ca4</guid>
      <description>&lt;p&gt; &lt;span&gt;This page lists over &lt;/span&gt;&lt;span&gt;10 JavaScript projects for beginners&lt;/span&gt;&lt;span&gt;! There are no frameworks and each completed project includes the description, my summary, and the source files to download. We've compiled the list with over 100 JavaScript projects for beginners because the key to becoming a great JavaScript Developer is to practice, practice, practice. You know this, and I know this.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;10 Days of Code challenges you to code for 10 days. Wouldn't it be nice if you actually built a new JavaScript project each day? It's very difficult to find a comprehensive list of JavaScript projects for beginners on the internet.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So, how do you, as a beginner to intermediate JavaScript developer begin to find projects for #100DaysofCode to consistently code for 100 days? Where do you get your motivation to make your own JavaScript projects?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It's a tough decision.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I know.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is why I created this site with over &lt;/span&gt;&lt;span&gt;10 JavaScript projects for beginners&lt;/span&gt;&lt;span&gt;! I wanted you to no longer have to endlessly surf the internet to find 100 projects in 100 different locations that you could do as a JavaScript beginner!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This list is composed of over 100 recommended JavaScript projects for beginners and intermediate JavaScript developers alike! In other words, now you have no more excuses! You're going to do better because &lt;/span&gt;&lt;span&gt;you are determined to be the best JavaScript developer in your field&lt;/span&gt;&lt;span&gt;. And because you've come across this page looking for JavaScript projects for beginners, boy do I have a list of JavaScript projects for you!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;You'll find more than 10 small to medium sized JavaScript projects that I challenge you to build BEFORE you jump to learning a new Framework such as React, Angular, or Vue. And you should definitely do each and every one of the projects on this list of JavaScript projects for beginners &lt;/span&gt;&lt;span&gt;before&lt;/span&gt;&lt;span&gt; moving on to client-side scripting with Node.js.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;List of 10+ JavaScript Projects for Beginners&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Follow the link to read the project's objective, see it in action, and to download the source files. &lt;/span&gt;&lt;span&gt;If no link, I haven't completed it&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;yet&lt;/span&gt;&lt;span&gt;. But you can get all the projects and the video solutions from the recommended courses below this list on this page.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span&gt;&lt;span&gt;Read More: &lt;a href="https://www.codelivly.com/the-best-beginner-javascript-projects-for-2021/"&gt;Javascript Project For Beginners&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>How to send the authorization header using Axios
</title>
      <author>devcse</author>
      <pubDate>Tue, 20 Jul 2021 17:51:07 +0000</pubDate>
      <link>https://dev.to/jewelcse/how-to-send-the-authorization-header-using-axios-a70</link>
      <guid>https://dev.to/jewelcse/how-to-send-the-authorization-header-using-axios-a70</guid>
      <description>&lt;p&gt;Axios is mostly used javascript promise-based HTTP client for end-to-end requesting resources from the serve side application. Generally, in simple application we don’t have to put the header for any get or post request. but most of the cases, security is a big issue sometimes we need to add authorization header to get resources from the server or save resource to the server. That’s why we need to add the headers with request.&lt;/p&gt;

&lt;p&gt;So, let’s create a header object according you needs:&lt;/p&gt;

&lt;p&gt;const token = "your_token"&lt;/p&gt;

&lt;p&gt;let headers = {&lt;br&gt;
        "Content-type": "application/json; charset=UTF-8",&lt;br&gt;
        "Authorization": 'Bearer ' + token&lt;br&gt;
 };&lt;/p&gt;

&lt;p&gt;Learn more: &lt;a href="https://codesnipeet.com/how-to-send-the-authorization-header-using-axios/"&gt;https://codesnipeet.com/how-to-send-the-authorization-header-using-axios/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 20 Jul 2021 17:40:57 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-4jge</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-4jge</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-different-way-of-looking-at-interviews"&gt;
  &lt;/a&gt;
  A Different Way of Looking at Interviews
&lt;/h2&gt;

&lt;p&gt;Interviews are high-pressure and often make us feel that we're lacking power in the situation. But as &lt;a class="mentioned-user" href="https://dev.to/kethmars"&gt;@kethmars&lt;/a&gt;
 explains, it's crucial to interview a prospective employer just as they're interviewing you. Find out how to do it in this article. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kethmars" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WcjFDq4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4W84d8qj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/191155/4f698e5c-1c92-4a97-b3bb-b4afa81e9e26.jpg" alt="kethmars"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kethmars/how-to-choose-your-future-employer-questions-to-ask-during-your-next-interview-4hof" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to choose your future employer? Questions to ask during your next interview&lt;/h2&gt;
      &lt;h3&gt;kethmars ・ Jul 13 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#commenting-on-code-vs-collaborating-on-code"&gt;
  &lt;/a&gt;
  Commenting on Code v.s. Collaborating on Code
&lt;/h2&gt;

&lt;p&gt;There is a difference! &lt;a class="mentioned-user" href="https://dev.to/dangoslen"&gt;@dangoslen&lt;/a&gt;
 walks us through their thinking about code reviews and how we can approach them in a better way. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dangoslen" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WgdTeBXy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--aDzX0Ihz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/323683/ff3d73a5-9824-48d8-92d1-828f0727faf5.jpg" alt="dangoslen"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dangoslen/i-m-changing-how-i-review-code-328g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I'm Changing How I Review Code&lt;/h2&gt;
      &lt;h3&gt;Dan Goslen ・ Jul 14 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codereview&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#teamwork&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#all-about-axios"&gt;
  &lt;/a&gt;
  All About Axios
&lt;/h2&gt;

&lt;p&gt;There are so many advanced Axios features to learn about.  &lt;a class="mentioned-user" href="https://dev.to/nilanth"&gt;@nilanth&lt;/a&gt;
 is here to help us approach them in a scalable and optimized way. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/nilanth" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIOawU8_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--pANBZ-qG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/561035/f0dd96a3-bc20-4bb3-8717-03125438c6ab.jpeg" alt="nilanth"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nilanth/how-to-use-axios-in-an-optimized-and-scalable-way-with-react-518n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How To Use Axios in an Optimized and Scalable Way With React&lt;/h2&gt;
      &lt;h3&gt;Nilanth ・ Jul 14 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#getting-back-in-control-of-your-time"&gt;
  &lt;/a&gt;
  Getting Back in Control of Your Time
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/dragosbln"&gt;@dragosbln&lt;/a&gt;
 tracked every single minute of their time in order to optimize it. A HUGE undertaking and maybe even one that makes some feel defensive of their own productivity tactic. Yet, in the process, they learned a ton that we can take advantage of, just by reading this post!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dragosbln" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YX1jhFvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---usCDb2U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/667037/9cecb184-ee2a-4249-9a4b-09008692eb32.jpeg" alt="dragosbln"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dragosbln/i-tracked-every-minute-of-my-time-for-the-last-4-months-here-are-7-totally-unexpected-results-2dna" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I tracked every minute of my time for the last 4 months. Here are 7 totally unexpected results&lt;/h2&gt;
      &lt;h3&gt;Bilaniuc Dragos ・ Jul 14 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#motivation&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#being-good-at-algorithm-challenges-doesnt-mean-youre-good-at-building-things"&gt;
  &lt;/a&gt;
  Being Good at Algorithm Challenges Doesn't Mean You're Good at Building Things
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/nicolealdurien"&gt;@nicolealdurien&lt;/a&gt;
 is full of incredible takes for both developer-focused hiring managers &lt;em&gt;and&lt;/em&gt; developers in this post. Don't sleep on their insights and sound advice!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/nicolealdurien" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AC1W4obW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--k5AyATeL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/581351/4f4c72cd-a614-4190-b66b-2c23d91f3cdc.jpeg" alt="nicolealdurien"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nicolealdurien/job-searches-and-career-changes-when-you-re-not-the-default-4c4p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Job Searches and Career Changes When You're Not the "Default"&lt;/h2&gt;
      &lt;h3&gt;Nicole Aldurien ・ Jul 15 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#inclusion&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hiring&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#negotiation&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#go-ahead-and-follow-along"&gt;
  &lt;/a&gt;
  Go Ahead and Follow Along
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/aurelievache"&gt;@aurelievache&lt;/a&gt;
 has kicked off a new series devoted to Go and understanding it with approachable examples. Super helpful!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aurelievache" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lQqiAAKF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AoAQyG0h--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/9688/g2T2qehD.jpg" alt="aurelievache"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aurelievache/learning-go-by-examples-introduction-448n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learning Go by examples: Introduction &lt;/h2&gt;
      &lt;h3&gt;Aurélie Vache ・ Jul 15 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#go&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#diving-into-type-system"&gt;
  &lt;/a&gt;
  Diving Into Type System
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/kalashin1"&gt;@kalashin1&lt;/a&gt;
 is a huge fan of TypeScript. In this article, they go over one of their favorite TS features: Type System.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kalashin1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WTfoD9W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--C2So3Ds7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/444740/616b7e59-a732-437f-b6d1-14c5955d9ae7.jpg" alt="kalashin1"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kalashin1/a-type-system-3a8j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A Type System&lt;/h2&gt;
      &lt;h3&gt;Kinanee Samson ・ Jul 14 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>NocoDB : The Open Source Airtable Alternative</title>
      <author>o1lab</author>
      <pubDate>Tue, 20 Jul 2021 17:27:19 +0000</pubDate>
      <link>https://dev.to/o1lab/nocodb-the-open-source-airtable-alternative-18h2</link>
      <guid>https://dev.to/o1lab/nocodb-the-open-source-airtable-alternative-18h2</guid>
      <description>&lt;h1&gt;
  &lt;a href="#nocodb"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nocodb/nocodb"&gt;&lt;strong&gt;NocoDB&lt;/strong&gt;&lt;/a&gt;
&lt;/h1&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nocodb"&gt;
        nocodb
      &lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;
        nocodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔥 🔥  The Open Source Airtable alternative.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Hey Everybody, Hey Everybody 👋 👋&lt;/p&gt;

&lt;p&gt;We are really excited to show NocoDB on Dev.to today. &lt;/p&gt;

&lt;p&gt;NocoDB is a free &amp;amp; open source Airtable alternative. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#just-six-weeks-ago-we-launched-nocodb-and-we-saw-"&gt;
  &lt;/a&gt;
  Just six weeks ago we &lt;a href="https://www.producthunt.com/posts/nocodb/"&gt;launched&lt;/a&gt; NocoDB and we saw :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;660,000+ Docker downloads.&lt;/li&gt;
&lt;li&gt;13,600+ Github stars.&lt;/li&gt;
&lt;li&gt;1,100+ strong discord community.&lt;/li&gt;
&lt;li&gt;And NocoDB has been the &lt;a href="https://runacap.com/ross-index/q2-2021/"&gt;fastest growing open source project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Evan You - Creator Vue.js tweeted about us
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--m_HxOLkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1206997998900850688/cTXTQiHm_normal.jpg" alt="Evan You profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Evan You
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @youyuxi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Open source AirTable alternative built with Vue 🤯 &lt;a href="https://t.co/nw9Z6ds5hw"&gt;twitter.com/nocodb/status/…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:44 PM - 31 May 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            nocodb
          &lt;/span&gt;
          @nocodb
        &lt;/div&gt;
        @nocodb has been trending on top of Github for all languages and currently with @vuejs

Sending much love to makers of underlying libs we use  #express @vuejs @nuxt_js @vuetifyjs and their makers &lt;a class="mentioned-user" href="https://dev.to/tjholowaychuk"&gt;@tjholowaychuk&lt;/a&gt;
 @youyuxi @IamNuxt &lt;a class="mentioned-user" href="https://dev.to/atinux"&gt;@atinux&lt;/a&gt;
 @zeroskillz 🙏🚀

https://t.co/yE0769fAlr
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1399345926884532224" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1399345926884532224" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1399345926884532224" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#did-we-anticipate-this-coming-"&gt;
  &lt;/a&gt;
  Did we anticipate this coming ?
&lt;/h4&gt;

&lt;p&gt;Surely not and we were totally overwhelmed by the response of community. And want to share more on the product &amp;amp; the journey here in Dev.to&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -p 8080:8080 nocodb/nocodb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-nocodb-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;NocoDB simply works by connecting to your existing databases and transforming them into a smart spreadsheet interface! This allows you to build no-code applications collaboratively with your teams. &lt;/p&gt;

&lt;p&gt;NocoDB currently works with &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MySQL &lt;/li&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;Amazon Aurora &amp;amp; MariaDB databases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also NocoDB's app store allows you to build business workflows on views with combination of Slack, Microsoft Teams, Discord, Twilio, Whatsapp, Email &amp;amp; any 3rd party APIs too. Plus NocoDB provides programmatic access to APIs so that you can build integrations with Zapier / Integromat and custom applications too.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#features-"&gt;
  &lt;/a&gt;
  FEATURES :
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#rich-spreadsheet-interface-"&gt;
  &lt;/a&gt;
  Rich Spreadsheet Interface :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;⚡ Sort, search, filter, hide columns with ease&lt;/li&gt;
&lt;li&gt;⚡ Create Views : Grid, Gallery, Kanban, Gantt, Form&lt;/li&gt;
&lt;li&gt;⚡ Share Views : public &amp;amp; password protected&lt;/li&gt;
&lt;li&gt;⚡ Personal &amp;amp; locked Views&lt;/li&gt;
&lt;li&gt;⚡ Upload images to cells (Works with S3, Minio, GCP, Azure &amp;amp; many more)!!&lt;/li&gt;
&lt;li&gt;⚡ Roles : Owner, Creator, Editor, Commenter, Viewer, Commenter, Custom.&lt;/li&gt;
&lt;li&gt;⚡ Access Control : Fine-grained access control even to column level.&lt;/li&gt;
&lt;li&gt;⚡ API tokens to integrate with n8n, Zapier &amp;amp; Integromat.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#automations-amp-app-store-"&gt;
  &lt;/a&gt;
  Automations &amp;amp; App store :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;⚡ Chat : Microsoft Teams, Slack, Discord, Mattermost&lt;/li&gt;
&lt;li&gt;⚡ Email : SMTP, SES, Mailchimp&lt;/li&gt;
&lt;li&gt;⚡ SMS : Twilio&lt;/li&gt;
&lt;li&gt;⚡ Whatsapp&lt;/li&gt;
&lt;li&gt;⚡ Any 3rd Party APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#programmatic-api-access-via-"&gt;
  &lt;/a&gt;
  Programmatic API access via :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;⚡ REST APIs (Swagger)&lt;/li&gt;
&lt;li&gt;⚡ GraphQL APIs.&lt;/li&gt;
&lt;li&gt;⚡ Includes JWT Authentication &amp;amp; Social Auth&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IpZIf9Ml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw4ffyp96ydvp0s0fpxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IpZIf9Ml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xw4ffyp96ydvp0s0fpxk.png" alt="NocoDB: Gallery View"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QlWWtbQC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ogsaes3fb0xyqmlxlfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QlWWtbQC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ogsaes3fb0xyqmlxlfj.png" alt="NocoDB: Collaborative spreadsheet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AhtQRz69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kisqg2o1f075w7rn0so3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AhtQRz69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kisqg2o1f075w7rn0so3.png" alt="NocoDB: app store "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iufSJPiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9nz0987bww8o5yi1o7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iufSJPiG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c9nz0987bww8o5yi1o7d.png" alt="NocoDB: programmatic API access "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XK8DsR3B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2krutazl9td985wd26h4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XK8DsR3B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2krutazl9td985wd26h4.png" alt="NocoDB : Integrate with zapier"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#nocodbs-journey-so-far"&gt;
  &lt;/a&gt;
  🔦  NocoDB's journey so far..
&lt;/h1&gt;

&lt;p&gt;We open sourced two API solutions before NocoDB :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;⚡ A no-code REST APIs generator for any MySQL DB. ~4000+ Github Stars. This was a hobby project &amp;amp; had no GUI. 📈&lt;/li&gt;
&lt;li&gt;⚡ A low-code REST-GraphQL APIs generator for any database with GUI. Used by 100s of companies. Including fortune 500s &amp;amp; publicly trading companies. 📈&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The thing that surprised us the most was that even non-developers started using our API products &amp;amp; rooting for us. 🚀 🚀  Whilst everybody loved instant API access to databases, it was slow-and-painful for them to build UI and collaborate with their teams. 💔 💔 .. This made us to rethink &amp;amp; combine the power of our 2 API products then transform them into something better.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#why-we-building-this-"&gt;
  &lt;/a&gt;
  🎯  Why we building this ?
&lt;/h3&gt;

&lt;p&gt;Most internet businesses equip themselves with either spreadsheet or a database to solve their business needs. Spreadsheets are used by a hundreds of millions humans collaboratively every single day. However, we are way off working at similar speeds on databases which are way more powerful tools when it comes to computing. Attempts to solve this with SaaS offerings has meant horrible access controls, vendor lockin, data lockin, abrupt price changes &amp;amp; most importantly a glass ceiling on what's possible in future.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#our-mission-"&gt;
  &lt;/a&gt;
  ❤️   Our Mission :
&lt;/h3&gt;

&lt;p&gt;Our mission is to provide the most powerful no-code interface for databases which is open source to every single internet business in the world. This would not only democratise access to a powerful computing tool but also bring forth a billion+ people who will have radical tinkering-and-building abilities on internet.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#and-there-is-one-last-thing-this-makes-it-insanely-good-"&gt;
  &lt;/a&gt;
  💊  And.. There is.. One last thing.. this makes it insanely good :
&lt;/h3&gt;

&lt;p&gt;NocoDB can be run from a single node.js file with just SIX lines of code in it! This minimalism means NocoDB runs even on the smallest of servers. Not just AWS, DigitalOcean, Heroku but also in A2Hosting &amp;amp; similar.&lt;/p&gt;

&lt;p&gt;Hope you loved it. ❤️&lt;/p&gt;



&lt;p&gt;Also please join our community at :&lt;br&gt;
📣   Github : &lt;a href="https://github.com/nocodb/nocodb"&gt;https://github.com/nocodb/nocodb&lt;/a&gt;&lt;br&gt;
📣   Discord : &lt;a href="https://discord.gg/5RgZmkW"&gt;https://discord.gg/5RgZmkW&lt;/a&gt;&lt;br&gt;
📣   Twitter : &lt;a href="https://twitter.com/nocodb"&gt;https://twitter.com/nocodb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Would love to hear your usecases &amp;amp; feedbacks. 🙌&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nocodb"&gt;
        nocodb
      &lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;
        nocodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔥 🔥  The Open Source Airtable alternative.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
    &lt;b&gt;
        &lt;a href="https://www.nocodb.com" rel="nofollow"&gt;NocoDB &lt;/a&gt;&lt;br&gt;
    &lt;/b&gt;
    ✨ The Open Source Airtable Alternative ✨ &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;
Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp;amp; MariaDB into a smart-spreadsheet
&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/github/NocoDB/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e084bac046962268fcf7a8aaf3d4ac422d3327564f9685c9d1b57aa56b142e9/68747470733a2f2f7472617669732d63692e6f72672f6477796c2f657374612e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://nodejs.org/download/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78a6449b07220242899619ce10cd5c39cc1e74992b768d308bd98f2a7e9995ae/68747470733a2f2f62616467656e2e6e65742f6e706d2f6e6f64652f6e657874" alt="Node version"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec77e5fb18e5c0eef7b879f7b1473bc68ce6a354bdfdb9510c3bf70ad168eded/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f4e6f636f44422e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f772532302534304e6f636f4442" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
    &lt;a href="http://www.nocodb.com" rel="nofollow"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://twitter.com/nocodb" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;  

&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/open-source-airtable-alternative/OpenSourceAirtableAlternative.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMZ6a_f6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/open-source-airtable-alternative/OpenSourceAirtableAlternative.png" width="100%"&gt;&lt;/a&gt;
    &lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/nocodb?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-nocodb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9cff91c3d5ada7906ec16f4adbde10de461bf84718d3cfbb0d37c8ca1ffc2a2d/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d323937353336267468656d653d6461726b" alt="NocoDB - The Open Source Airtable alternative | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
Quick try&lt;/h1&gt;

&lt;h3&gt;
1-Click Deploy&lt;/h3&gt;

&lt;h4&gt;
Heroku&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://heroku.com/deploy?template=https://github.com/npgia/nocodb-seed-heroku" rel="nofollow"&gt;&lt;br&gt;
    &lt;img src="https://camo.githubusercontent.com/6979881d5a96b7b18a057083bb8aeb87ba35fc279452e29034c1e1c49ade0636/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" width="300px" alt="Deploy NocoDB to Heroku with 1-Click"&gt;&lt;br&gt;
&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
Using Docker&lt;/h3&gt;

&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;docker run -d --name nocodb -p 8080:8080 nocodb/nocodb&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Using Npm&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npx create-nocodb-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Using Git&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/nocodb/nocodb-seed
cd nocodb-seed
npm install
npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
GUI&lt;/h3&gt;
&lt;p&gt;Access Dashboard using : &lt;a href="http://localhost:8080/dashboard" rel="nofollow"&gt;http://localhost:8080/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Join Our Community&lt;/h1&gt;
&lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8a7e4d7b3342da59bf8e778636f0860c8045593cc8003a834f88b0315782760e/68747470733a2f2f696e7669646765742e737769746368626c6164652e78797a2f3552675a6d6b57" alt="Join NocoDB : Free &amp;amp; Open Source Airtable Alternative"&gt;
&lt;/a&gt;
&lt;br&gt;
&lt;h1&gt;
Screenshots&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CEx7gNxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kjC1Rfu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xgb2Ihpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KRKF5Vnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h3Ax6upd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qfba9NxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/4.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5CtBr2_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/11.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ARqJB_0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/11.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/10.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B60sWTWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/10.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ktJkSF1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/9.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0TM_ycTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/9.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;h3&gt;
Rich Spreadsheet Interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Search, sort, filter, hide columns with uber ease&lt;/li&gt;
&lt;li&gt;
⚡  Create Views : Grid, Gallery, Kanban, Gantt, Form&lt;/li&gt;
&lt;li&gt;
⚡  Share Views : public &amp;amp; password protected&lt;/li&gt;
&lt;li&gt;
⚡  Personal &amp;amp; locked Views&lt;/li&gt;
&lt;li&gt;
⚡  Upload images to cells (Works with S3, Minio, GCP, Azure, DigitalOcean, Linode, OVH, BackBlaze)!!&lt;/li&gt;
&lt;li&gt;
⚡  Roles : Owner, Creator, Editor, Commenter, Viewer, Commenter, Custom Roles.&lt;/li&gt;
&lt;li&gt;
⚡  Access Control : Fine-grained access control even at database, table &amp;amp; column level.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
App Store for workflow automations :&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Chat : Microsoft…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nocodb/nocodb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Happy Tinkering,&lt;br&gt;
Team NocoDB&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__206222"&gt;
  
    .ltag__user__id__206222 .follow-action-button {
      background-color: #0030b3 !important;
      color: #ffffff !important;
      border-color: #0030b3 !important;
    }
  
    &lt;a href="/o1lab" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mv1ezE2T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2e0HS0JA--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/206222/84f8c787-328a-4599-bfab-38dceb2fe038.png" alt="o1lab image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/o1lab"&gt;o1lab&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/o1lab"&gt;&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__user ltag__user__id__670698"&gt;
  
    .ltag__user__id__670698 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/pranavcbalan" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-_3O0aG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--_PTigu_E--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/670698/b74ffc59-5da2-4d8e-8099-41dbac471c50.jpeg" alt="pranavcbalan image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/pranavcbalan"&gt;Pranav C&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/pranavcbalan"&gt;&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>showdev</category>
      <category>typescript</category>
      <category>vue</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Web Scraping using Python! Create your own Dataset</title>
      <author>Prashant Kumar</author>
      <pubDate>Tue, 20 Jul 2021 17:17:10 +0000</pubDate>
      <link>https://dev.to/prashant2018/web-scraping-using-python-create-your-own-dataset-50n5</link>
      <guid>https://dev.to/prashant2018/web-scraping-using-python-create-your-own-dataset-50n5</guid>
      <description>&lt;p&gt;Machine Learning requires a lot of data and not always it is easy to get the data you want. Have you ever wondered how Kaggle and other such websites provide us with huge datasets? The answer is web scraping. So, let us see how we can extract data from the web.&lt;br&gt;
Let’s assume we are building a model which requires movie information such as title, summary, and rating of a number of movies. When it comes to movies, we know IMDB has the largest database. Let us dig into it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-exactly-we-do-to-scrape-a-webpage"&gt;
  &lt;/a&gt;
  What exactly we do to scrape a webpage?
&lt;/h3&gt;

&lt;p&gt;There’s a pattern in everything. We need to observe and find a pattern in the HTML code of the web page to extract relevant data. Let’s go step by step. We will be doing everything using python and scrape the data from the following URL :&lt;br&gt;
 &lt;a href="https://dev.toLink"&gt;https://www.imdb.com/search/title?release_date=2019&amp;amp;sort=user_rating,desc&amp;amp;ref_=adv_nxt&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Install dependencies&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# To download the webpage
pip install requests
# To scrape data from the downloaded webpage
pip install beautifulsoup4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Download the webpage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Requests” is a great HTTP library to make request calls. We will use it to download the webpage of the given URL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import requests
url = "https://www.imdb.com/search/title?release_date=2019&amp;amp;sort=user_rating,desc&amp;amp;ref_=adv_nxt"
# get() method downloads the entire HTML of the provided url
response = requests.get(url)
# Get the text from the response object
response_text = response.text
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Inspecting elements and finding the pattern&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now the data we have downloaded is exactly the same you see when you right-click and do inspect element in the browser. Let’s right-click on the rating and see how we can extract it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dVnV939g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626586216655/iNe-dzemU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dVnV939g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626586216655/iNe-dzemU.png" alt="medium1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we look closely we will see the class “&lt;strong&gt;ratings-bar&lt;/strong&gt;” contains the rating of the movie. If we inspect other movies, we will find all the movies have the same class name for the ratings on that page. Here, we found a pattern to extract all the ratings from the page. Similarly, we can extract summary, title, genre, etc.&lt;/p&gt;

&lt;p&gt;Not only using &lt;strong&gt;class&lt;/strong&gt; but you can select a specific part of the HTML code using &lt;strong&gt;id&lt;/strong&gt;, &lt;strong&gt;tags&lt;/strong&gt;, etc as well.&lt;/p&gt;

&lt;p&gt;Let’s jump into the code!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BeautifulSoup&lt;/strong&gt; allows us to extract data(more precisely parse data) from HTML using the class name, id, tags, etc. Isn’t it Beautiful? :-D&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
from bs4 import BeautifulSoup
# Create a BeautifulSoup object
# response_text -&amp;gt; The downloaded webpage
# lxml -&amp;gt; Used for processing HTML and XML pages
soup = BeautifulSoup(response_text,'lxml')

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To select the content from the page we use &lt;em&gt;CSS Selectors&lt;/em&gt;. CSS Selectors allows us to select different &lt;em&gt;classes&lt;/em&gt;, &lt;em&gt;ids&lt;/em&gt;, &lt;em&gt;tags&lt;/em&gt;, and other html elements easily. CSS Selector for &lt;em&gt;Class*is *&lt;/em&gt;"."** and for &lt;em&gt;ID&lt;/em&gt; is &lt;strong&gt;"#"&lt;/strong&gt;. To select a class we need to prefix a &lt;strong&gt;"."&lt;/strong&gt; to the class name we want to extract and similarly, for ID we need to prefix &lt;strong&gt;"#"&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# As we saw the rating's class name was "ratings-bar" 
# we prefix "." since its a class
rating_class_selector = ".ratings-bar"
# Extract the all the ratings class
rating_list = soup.select(rating_class_selector)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This “&lt;strong&gt;rating_list&lt;/strong&gt;” is the list of object containing all the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements containing “&lt;strong&gt;ratings-bar&lt;/strong&gt;” as class name. We need to get the text from within the div element.&lt;/p&gt;

&lt;p&gt;Here’s how a single rating object looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="ratings-bar"&amp;gt;
&amp;lt;div class="inline-block ratings-imdb-rating" data-value="10" name="ir"&amp;gt;
&amp;lt;span class="global-sprite rating-star imdb-rating"&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;strong&amp;gt;10.0&amp;lt;/strong&amp;gt;
&amp;lt;/div&amp;gt;
...
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to get the rating value from the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag. We can extract the tags using &lt;strong&gt;find(‘tagName’)&lt;/strong&gt; method and get the text using &lt;strong&gt;getText()&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This List will store all the ratings
ratings = []
# Iterate through all the ratings object
for rating_object in rating_list:
    # Find the &amp;lt;strong&amp;gt; tag and get the Text
    rating_text = rating_object.find('strong').getText() 
    # Append the rating to the list
    ratings.append(rating_text)
print(ratings)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we are &lt;strong&gt;done&lt;/strong&gt;. Similarly, you can extract &lt;strong&gt;Titles&lt;/strong&gt;, &lt;strong&gt;Summary&lt;/strong&gt;, &lt;strong&gt;Genre&lt;/strong&gt; using the above method with the appropriate class name and tag names.&lt;/p&gt;

&lt;p&gt;You can store the data to CSV or excel file and use it for your Machine Learning model.&lt;/p&gt;

&lt;p&gt;Full Code present on my &lt;strong&gt;Github&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.toLink"&gt;https://github.com/prashant2018/Medium-Article-Code-Snippets/tree/master/Web-Scraping-Using-Python&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Follow me on &lt;strong&gt;Twitter&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.toLink"&gt;https://twitter.com/prash2018&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>programming</category>
    </item>
    <item>
      <title>I Build This Amazing Drum Kit Project in Vanilla JavaScript – Day 1 of JavaScript30 + Tutorial</title>
      <author>Ashutosh Mishra</author>
      <pubDate>Tue, 20 Jul 2021 17:01:23 +0000</pubDate>
      <link>https://dev.to/ashutoshmishra4/i-build-this-amazing-drum-kit-project-in-vanilla-javascript-day-1-of-javascript30-tutorial-2pc</link>
      <guid>https://dev.to/ashutoshmishra4/i-build-this-amazing-drum-kit-project-in-vanilla-javascript-day-1-of-javascript30-tutorial-2pc</guid>
      <description>&lt;p&gt;Hey Everyone 👋, first things first, this project is the part of JavaScript30 challenge from Wes Bos,&lt;/p&gt;

&lt;p&gt;For those of you who don’t know JavaScript30 is a challenge from Wes Bos where you have to build 30 simple projects in Vanilla JavaScript in 30 days.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2Df21S3J1GQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Check out 👉 this to know more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starter-files"&gt;
  &lt;/a&gt;
  Starter Files
&lt;/h2&gt;

&lt;p&gt;If you want to get a feel of how our finished project will look like, go here&lt;/p&gt;

&lt;p&gt;Now before going further, set up your environment and download the starter files from this repository,&lt;/p&gt;

&lt;p&gt;For your ease I have provide the HTML CSS files below 👇, but you still need to download sound files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;JS Drum Kit&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"keys"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"65"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;A&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;clap&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"83"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;S&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;hihat&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"68"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;D&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;kick&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"70"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;F&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;openhat&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"71"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;G&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;boom&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"72"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;H&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;ride&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"74"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;J&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;snare&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"75"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;K&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;tom&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"76"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"key"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;L&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sound"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;tink&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"65"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/clap.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"83"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/hihat.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"68"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/kick.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"70"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/openhat.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"71"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/boom.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"72"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/ride.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"74"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/snare.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"75"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/tom.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;data-key=&lt;/span&gt;&lt;span class="s"&gt;"76"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"sounds/tink.wav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url('./background.jpg')&lt;/span&gt; &lt;span class="nb"&gt;bottom&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.keys&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.key&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.4rem&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;.07s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;text-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;.5rem&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.playing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffc600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;#ffc600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;kbd&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.sound&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffc600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you’ve copy pasted these files in your local development environment, your HTML file will look like this 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRlGNXLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtjy53lwii11k9qg2aan.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRlGNXLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtjy53lwii11k9qg2aan.png" alt="Drum Kit Project in Vanilla JavaScript Screenhot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is great because we don’t have to start from scratch now and can focus on the most essential part of the project, i.e., JavaScript Logic&lt;/p&gt;

&lt;p&gt;But before moving towards JavaScript, we have to first understand how our HTML file has been set up – &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-file-structure"&gt;
  &lt;/a&gt;
  HTML File Structure
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;All the individual keys are wrapped inside individual divs which is further wrapped inside another div.&lt;/li&gt;
&lt;li&gt;Apart from CSS classes, there is another attribute attached to these divs called “data-key” with a code number.&lt;/li&gt;
&lt;li&gt;For those of you who don’t know, data-* is an HTML attribute used to store custom data private to the page or application. This attribute then can be used with JavaScript to provide better experience to the user.&lt;/li&gt;
&lt;li&gt;In this tutorial, data-* attribute is used to store the codes attached to the particular keys of your keyboard, i.e., data-key=”65″ or “83” or whatever.&lt;/li&gt;
&lt;li&gt;There is another element in the above code which most of you might not know, i.e.,

&lt;code&gt;&amp;lt;kbd&amp;gt;&amp;lt;/kbd&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;It represents a span of inline text which represents user input from keyboard, voice input or any other text entry device.&lt;/li&gt;
&lt;li&gt;And finally, we can see the  elements which holds our sound files for the project&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#javascript-logic"&gt;
  &lt;/a&gt;
  JavaScript Logic
&lt;/h2&gt;

&lt;p&gt;Now comes my favorite part, JavaScript logic which will finally make our project come alive.&lt;/p&gt;

&lt;p&gt;We mainly have 3 objective with JavaScript part – &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Play the sound when user presses the key&lt;/li&gt;
&lt;li&gt;Transition the key which has been pressed&lt;/li&gt;
&lt;li&gt;End the transition&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s look at each of them one by one&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#play-sound-and-transition"&gt;
  &lt;/a&gt;
  Play Sound and Transition
&lt;/h3&gt;

&lt;p&gt;To make this happen, we will first – &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a function called playSound(), you can choose whatever name you like.&lt;/li&gt;
&lt;li&gt;Then create variables which holds audio files and divs of different keys.&lt;/li&gt;
&lt;li&gt;And then check if there is an audio file present with key user pressed, if no then return nothing, if yes, then play it.&lt;/li&gt;
&lt;li&gt;And also add the class name ‘playing’ which contains the transition effect of the active state of the key(check the image below)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lC0NICFt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/clearprogrammer.com/wp-content/uploads/2021/07/Screenshot-2021-07-20-at-18-07-13-JS-Drum-Kit.png%3Fresize%3D1024%252C482%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lC0NICFt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/clearprogrammer.com/wp-content/uploads/2021/07/Screenshot-2021-07-20-at-18-07-13-JS-Drum-Kit.png%3Fresize%3D1024%252C482%26ssl%3D1" alt="Transitioned state of Drum Kit Project made in Vanilla JavaScript"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;playSound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`audio[data-key="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"]`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// selects the audio file present with the pressed key&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`div[data-key="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keyCode&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"]`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// stores the div element of the pressed key in the variable&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// If no audio then nothing return&lt;/span&gt;

    &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;playing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Add class 'playing' to the key variable&lt;/span&gt;
    &lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Set current time position to 0 seconds&lt;/span&gt;
    &lt;span class="nx"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Play the audio file&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our playSound() function is complete, but the problem is that our website now looks like this 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PyvUkLyh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/clearprogrammer.com/wp-content/uploads/2021/07/Screenshot-2021-07-20-at-18-20-43-JS-Drum-Kit.png%3Fresize%3D1024%252C482%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PyvUkLyh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/clearprogrammer.com/wp-content/uploads/2021/07/Screenshot-2021-07-20-at-18-20-43-JS-Drum-Kit.png%3Fresize%3D1024%252C482%26ssl%3D1" alt="Transition still active in Vanilla JavaScript Drum Kit Project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the key is pressed, the transition is attached permanently, to tackle this issue, we’ll create another function removeTransition()&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;removeTransition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propertyName&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;transform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Our statement will return nothing if there is not any property with the property name of 'transform'&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;playing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// If there is 'transform' property, 'playing' class will be removed from the element&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our work is mostly finished, we just have to attach these functions to their respective ‘event listeners’ so that the functions invoke themselves once the event fires.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keydown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;playSound&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// This event listener ensure that playSound() calls itself if any key is pressed in the browser window&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;playSound() is done, but removeTransition is tricky so be attentive&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// All the keys are selected&lt;/span&gt;
  &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;transitionend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;removeTransition&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// A forEach method is run which invokes the removeTransition() when the 'transitionend' event is fired after pressing an key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations, you have made this far and your project should be up and running fine most probably at this time,&lt;/p&gt;

&lt;p&gt;If not, then check everything again or comment down below your problem, I will very much be happy to solve them.&lt;/p&gt;

&lt;p&gt;Happy Coding 🙂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>This is what gatekeeping looks like in the cloud industry (or how to not be a reply guy)</title>
      <author>Andrew Brown 🇨🇦</author>
      <pubDate>Tue, 20 Jul 2021 16:43:45 +0000</pubDate>
      <link>https://dev.to/andrewbrown/this-is-what-gatekeeping-look-like-in-the-cloud-industry-j17</link>
      <guid>https://dev.to/andrewbrown/this-is-what-gatekeeping-look-like-in-the-cloud-industry-j17</guid>
      <description>&lt;p&gt;I was recently working on expanding the definition of &lt;strong&gt;multi-cloud&lt;/strong&gt; based on what I had observed as a shift in language being used by cloud vendors and cloud service providers.&lt;/p&gt;

&lt;p&gt;So I thought to go to twitter to give a two sentence example of the expansion of the term to gauge interest before I wrote a new article.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlDT_3Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1410937091274547203/dg1bmjmO_normal.jpg" alt="Andrew Brown profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Andrew Brown
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/andrewbrown"&gt;@andrewbrown&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Multi-cloud doesn't just mean I a combination of cloud service providers eg. AWS and Azure. It can mean also cloud services: Fastly, BamboHR, Github, Godaddy, Heroku Auth0, JIRA.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:34 AM - 20 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417311864338403332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417311864338403332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417311864338403332" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;My primary goal is to make cloud more accessible by being inclusive of people who do not yet use a cloud service provider (CSP) but primary rely on cloud services like Heroku, Github, JIRA to treat them like first-class cloud citizens.&lt;/p&gt;

&lt;p&gt;I am open to hearing people voice their thoughts, but when it becomes a back and forth, where I've been pulled into unwanted argument that doesn't relent, when my replies serve to save face and the end the conversation for future discussion on a more suited platform, and yet the person continues I know I am experiencing gatekeeping.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlDT_3Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1410937091274547203/dg1bmjmO_normal.jpg" alt="Andrew Brown profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Andrew Brown
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/andrewbrown"&gt;@andrewbrown&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      What does gatekeeping look like? 👇&lt;br&gt;&lt;br&gt;When someone argues DevOps isn't a thing, because they were doing this stuff before DevOps existed, and they relentlessly argue the dismantling of the term.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:33 PM - 20 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417507981999190019" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417507981999190019" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417507981999190019" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#what-does-gatekeeping-look-like-in-the-cloud-industry"&gt;
  &lt;/a&gt;
  What does gatekeeping look like in the cloud industry? 👇
&lt;/h2&gt;

&lt;p&gt;Gatkeeping comes in many forms, and one form of gatekeeping which is the easiest to come across is the argument around the definition of emerging terminologies. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When someone argues &lt;strong&gt;DevOps&lt;/strong&gt; isn't a thing, because they were doing this stuff before DevOps existed, and they relentlessly argue the dismantling of the term.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When someone argues &lt;strong&gt;Zero Trust Model&lt;/strong&gt; isn't a thing, because they were doing this stuff before Zero Trust Model existed, and they relentlessly argue the dismantling of the term.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When someone argues &lt;strong&gt;Multi-cloud term&lt;/strong&gt; can't be expanded or changed, because they were doing this stuff and have an expected definition, and they relentlessly argue any form of change of the term.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When someone argues that &lt;strong&gt;Serverless&lt;/strong&gt; has to be described as a mindset and can't just be utilizing serverless services because they were doing this stuff before anyone else was doing this stuff.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While it's possible that terms may be overused and become annoying, you need to consider terms like DevOps have done more to bring people into the fold of systems operations than would not have been.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-gatekeepers-thoughts-about-gatekeeping"&gt;
  &lt;/a&gt;
  The gatekeeper's thoughts about gatekeeping
&lt;/h2&gt;

&lt;p&gt;If you were to confront a gatekeeper, its not hard to predict the outcome:&lt;/p&gt;

&lt;p&gt;A gatekeeper's first thought is we cannot have any discussion around tech terminologies because they'll be viewed upon as gatekeeping! Evenly possibly its a silencing or muting tactic to surpass criticism. &lt;/p&gt;

&lt;p&gt;To which I say, we can have productive conversations, but you need to be aware of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;your position in the hierarchy relative to who you're talking to&lt;/li&gt;
&lt;li&gt;the format of the discussion and its limitations&lt;/li&gt;
&lt;li&gt;the intended shared outcome &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;before you &lt;strong&gt;open your mouth to begin a discussion&lt;/strong&gt; so it does not become an argument.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#once-a-gatekeeper-not-always-a-gatekeeper"&gt;
  &lt;/a&gt;
  Once a gatekeeper not always a gatekeeper
&lt;/h2&gt;

&lt;p&gt;I am certain that I have had instances of gatekeeping in the past. (I am Star Trek fan!) &lt;/p&gt;

&lt;p&gt;But it's not a permanent label, and it can be mild to severe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-it-gatekeeping-and-selfpreservation"&gt;
  &lt;/a&gt;
  Is it Gatekeeping and Self-preservation?
&lt;/h2&gt;

&lt;p&gt;I think Chris had a good thought here.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--u23mS3JE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1389597126515122176/nd88JyLk_normal.jpg" alt="Chris Munns profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Chris Munns
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @chrismunns
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/andrewbrown"&gt;@andrewbrown&lt;/a&gt; One way to look at this (as I've found with both DevOps and serverless) is that these things threaten previous models and so making them seem lesser helps make people reduce that threat (mentally). it's less gatekeeping and more self preservation IMO
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:51 PM - 20 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1417527527107665923" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1417527527107665923" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1417527527107665923" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Is there a distinguish between Gatekeeping and Self-preservation, and can one be acting in a Self-preservation way without also being a gatekeeper?&lt;/p&gt;

&lt;p&gt;I would think that to preserve one's position, a bi-product of that would be gatekeeping.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It's not my goal here to convince a person they are gatekeeping, for you to confront instances of gatekeepers, but to validate that it does occur, and what I think it looks like.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What does gatekeeping look like to you? &lt;/li&gt;
&lt;li&gt;Do you have any personal stories you can could share with us?&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>career</category>
      <category>aws</category>
      <category>azure</category>
    </item>
    <item>
      <title>How to Create Background-Changer Using HTML, CSS and JavaScript.</title>
      <author>Ajay Sharma</author>
      <pubDate>Tue, 20 Jul 2021 16:36:32 +0000</pubDate>
      <link>https://dev.to/ajaysharma12799/how-to-create-background-changer-using-html-css-and-javascript-1fi7</link>
      <guid>https://dev.to/ajaysharma12799/how-to-create-background-changer-using-html-css-and-javascript-1fi7</guid>
      <description>&lt;p&gt;Hello Everyone, In this Post We Will be Seeing How to Create Background Changer Using HTML, CSS and JavaScript.&lt;/p&gt;

&lt;p&gt;Here is The Live Link of Page &lt;a href="https://bg-changer-js.netlify.app/"&gt;https://bg-changer-js.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow Me on LinkedIn &lt;a href="https://www.linkedin.com/in/ajaysharma12799/"&gt;https://www.linkedin.com/in/ajaysharma12799/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow Me on Github &lt;a href="https://www.github.com/ajaysharma12799/"&gt;https://www.github.com/ajaysharma12799/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Steps to Create :-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose Any Text Editor (VSCode Recommended).&lt;/li&gt;
&lt;li&gt;Create 3 Files in Current Project Directory, index.html, style.css and app.js.&lt;/li&gt;
&lt;li&gt;Use Below HTML, CSS and JS Code To Build Your Page.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Background Changer&amp;lt;/title&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;div id="container"&amp;gt;
        &amp;lt;div class="title"&amp;gt;
            Click To Change Background
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;script src="./app.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
#container {
    cursor: pointer;
    border: none;
    width: 50%;
    margin: 0 auto;
    margin-top: 50vh;
    background-color: #1B98F5;
    box-shadow: 0 0 20px #fff;
}
.title {
    color: #fff;
    font-size: 30px;
    font-weight: lighter;
    text-align: center;
    padding: 20px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let containerElement = document.getElementById("container");

containerElement.addEventListener("click", changeColor);

function changeColor() {
    let random1 = Math.floor(Math.random() * 255 + 1);
    let random2 = Math.floor(Math.random() * 255 + 1);
    let random3 = Math.floor(Math.random() * 255 + 1);
    document.body.style.backgroundColor = `rgb(${random1}, ${random2}, ${random3})`;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Which versioning should be use for my project? - Versioning system comparison</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 20 Jul 2021 16:27:03 +0000</pubDate>
      <link>https://dev.to/adaendra/which-versioning-should-be-use-for-my-project-versioning-system-comparison-3h2k</link>
      <guid>https://dev.to/adaendra/which-versioning-should-be-use-for-my-project-versioning-system-comparison-3h2k</guid>
      <description>&lt;p&gt;Depending of the kind of project you are working on or if it's your first project, you may ask you which versioning system you want to use. &lt;/p&gt;

&lt;p&gt;And the answer is simple&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What ever you want!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, for sure! You can do what ever you want! You can establish your standard. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But is it great to be understandable by everyone? &lt;em&gt;May be not. (It will depend the context)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So here are some versioning standard which are ready to use, or ready to use as basis to create your standard.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#versioning-system"&gt;
  &lt;/a&gt;
  Versioning System
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#3-digits-versioning"&gt;
  &lt;/a&gt;
  3 digits versioning
&lt;/h2&gt;

&lt;p&gt;The 3 digits versioning is the most common version presentation that we will found on IT projects. But here I will talk about a particular one which I saw on multiple projects in my career. &lt;em&gt;(So there may be is a standard somewhere, but I haven't found it.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The version contains 3 numbers :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MAJOR&lt;/strong&gt; . &lt;strong&gt;MINOR&lt;/strong&gt; . &lt;strong&gt;BUG&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;MAJOR&lt;/strong&gt; : Change when you add a new big feature or a new feature related to any existing feature&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MINOR&lt;/strong&gt; : Change when you add a little feature on an existing feature or do an update&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;BUG&lt;/strong&gt; : When you correct a bug&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a frontend project, it can be ok. For a backend project... it will be confusing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- 0.1.0 -&amp;gt; Start first feature
- 0.2.0 -&amp;gt; Code update
- ...
- 0.5.1 -&amp;gt; Correct a bug
- ...
- 1.0.0 -&amp;gt; Release of the first feature
- 1.1.0 -&amp;gt; Code update
- 1.1.1 -&amp;gt; Correct a bug
- ...
- 2.0.0 -&amp;gt; Release of a new big feature
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;








&lt;h2&gt;
  &lt;a href="#semantic-versioning"&gt;
  &lt;/a&gt;
  Semantic Versioning
&lt;/h2&gt;

&lt;p&gt;If you want to have a clear versioning for your backend project, use the &lt;a href="https://semver.org/"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also based on a 3 digits versioning, it will be easier for your and your consumer to know what's happening in a quick look.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MAJOR&lt;/strong&gt;.&lt;strong&gt;MINOR&lt;/strong&gt;.&lt;strong&gt;BUGFIX&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, the &lt;strong&gt;MAJOR&lt;/strong&gt; stay at 0 until you go in prod. Then you update it when you &lt;strong&gt;have a breaking change in your API&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;MINOR&lt;/strong&gt; will change for every changed until you go in prod. Then, it will change everytime you do a change which is not a breaking change and not a bugfix.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;BUGFIX&lt;/strong&gt; will change every time you have to do a correction in prod.&lt;/p&gt;

&lt;p&gt;So clearly, when your customer will see a new version, they will know if they have to do an update or not.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- 0.1.0 -&amp;gt; Start of your project
- ...
- 0.14.0 -&amp;gt; Code update
- 0.15.0 -&amp;gt; Bug correction
- ...
- 1.0.0 -&amp;gt; First release in prod
- 1.0.1 -&amp;gt; Bug correction
- 1.1.0 -&amp;gt; New feature
- 1.2.0 -&amp;gt; Update without breaking change
- ...
- 2.0.0 -&amp;gt; Update with a breaking change
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;








&lt;h2&gt;
  &lt;a href="#4-digits-versioning"&gt;
  &lt;/a&gt;
  4 digits versioning
&lt;/h2&gt;

&lt;p&gt;Another kind of versioning is with 4 digits. Here is an &lt;a href="https://www.sos.state.co.us/pubs/elections/VotingSystems/systemsDocumentation/HartIntercivic/FullEAC-TDP/2-11-ConfigurationManagement/2-11-3-ConfigurationManagementAndReleaseProcesss/Software-Versioning-Procedure1001070-C00-Redacted.pdf"&gt;example about it&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MAJOR&lt;/strong&gt; . &lt;strong&gt;MINOR&lt;/strong&gt; . &lt;strong&gt;REVISION&lt;/strong&gt; . &lt;strong&gt;BUILD&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;The following description is coming from the pdf file.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Major Release&lt;/strong&gt; is a full product release of the software. It generally contains new customer-facing functionality and represents a significant change to the code base comprising the software product or family of products, or is used to represent a significant marketing change or direction in the product. Major version numbers are generally incremented by the product management team, and generally are accompanied with a new&lt;br&gt;
marketing push, or to communicate a significant improvement to the product. The major version number is identified by the digit or set of digits to the left of the decimal point (e.g., x.0, segment 1 with a placeholder value of x).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Minor Release&lt;/strong&gt; of the software may be comprised a rollup of several branched releases, enhancements/extensions to existing features or interfaces driven by internal or external requirements, external requirements could be driven by enhancements to meet new sales area (State specific features or rules), internal requirements could be enhancements aligned&lt;br&gt;
to a new marketing push. The minor version number is identified by the digit or set of digits to the right of the decimal point separating it from the Major Release number (e.g., 2.x, x&lt;br&gt;
indicates the Minor Release placeholder).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Revision&lt;/strong&gt; (Rev) is a build of all or part of the software that is initially distributed to an internal audience, specifically software quality assurance, for software validation. If the Rev is successfully validated and accepted, this version is “released” to manufacturing. If defects are found that prevent the Rev from successfully being validated and prevent the release to&lt;br&gt;
manufacturing, the Rev value will be incremented prior to the next validation cycle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A &lt;strong&gt;Build Release&lt;/strong&gt; is a build of all or part of the software distributed to an internal audience, these releases should have targeted feature enhancements and issue resolution documented to allow testing in the targeted/specific areas where the changes were implemented. The Build version number is denoted by a fourth digit or set of digits (e.g. 2.4.7.x, segment 4 with a placeholder value of x), corresponding to an internal build number. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;h2&gt;
  &lt;a href="#calendar-versioning"&gt;
  &lt;/a&gt;
  Calendar versioning
&lt;/h2&gt;

&lt;p&gt;A completly other kind of versioning is the &lt;a href="https://calver.org/"&gt;Calendar versioning&lt;/a&gt;. As it said in the name, we are using a date as version.&lt;/p&gt;

&lt;p&gt;Depending the project, a lot of format can be used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows : YY/YYYY -&amp;gt; 95, 98, 2000&lt;/li&gt;
&lt;li&gt;Ubuntu : YY.0M -&amp;gt; 16.04&lt;/li&gt;
&lt;li&gt;JetBrains : YYYY.MINOR.MICRO -&amp;gt; 2017.1.2&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, you can add &lt;strong&gt;MINOR&lt;/strong&gt; and &lt;strong&gt;MICRO&lt;/strong&gt; if your date is too large and you have a lot of small releases to do.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#modifiers"&gt;
  &lt;/a&gt;
  Modifiers
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#alphabetarc"&gt;
  &lt;/a&gt;
  Alpha-beta-RC
&lt;/h2&gt;

&lt;p&gt;And depending the kind of versioning you are using, you can use &lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle"&gt;&lt;strong&gt;modifiers&lt;/strong&gt;&lt;/a&gt;. It is a complementary element to your version.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MAJOR.MINOR.BUGFIX-&lt;strong&gt;MODIFIER&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see, the modifier is an element that you can add at the end of your version after a "-".&lt;/p&gt;

&lt;p&gt;The major modifier are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle#Alpha"&gt;&lt;strong&gt;Alpha&lt;/strong&gt;&lt;/a&gt; : For an internal release to do white box tests&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle#Beta"&gt;&lt;strong&gt;Beta&lt;/strong&gt;&lt;/a&gt; : For a release which can be accessible to customers and we know that several errors can exists&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Software_release_life_cycle#Release_candidate"&gt;&lt;strong&gt;RC&lt;/strong&gt; (Release Candidate)&lt;/a&gt; : Is a beta version which we think stable to be delivered in production.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please don't hesitate to give me a feedback to improve my writing skills! Thanks!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
