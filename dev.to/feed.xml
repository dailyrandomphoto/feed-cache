<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Javascript Questions </title>
      <author>Esraa</author>
      <pubDate>Mon, 21 Jun 2021 13:05:48 +0000</pubDate>
      <link>https://dev.to/esraarefaat/javascript-questions-11n8</link>
      <guid>https://dev.to/esraarefaat/javascript-questions-11n8</guid>
      <description>&lt;p&gt;💡 for (var i = 0; i &amp;lt; 3; i++) &lt;br&gt;
      {&lt;br&gt;
    setTimeout(() =&amp;gt; &lt;br&gt;
    console.log(i), 1);&lt;br&gt;
      }&lt;/p&gt;

&lt;p&gt;for (let i = 0; i &amp;lt; 3; i++) {&lt;br&gt;
  setTimeout(() =&amp;gt; console.log(i), 1);&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;A: 0 1 2 and 0 1 2&lt;br&gt;
B: 0 1 2 and 3 3 3&lt;br&gt;
C: 3 3 3 and 0 1 2&lt;/p&gt;

&lt;p&gt;Answer: C&lt;br&gt;
Because of the event queue in JavaScript, the setTimeout callback function is called after the loop has been executed. Since the variable i in the first loop was declared using the var keyword, this value was global. During the loop, we incremented the value of i by 1 each time, using the unary operator ++. By the time the setTimeout callback function was invoked, i was equal to 3 in the first example.&lt;/p&gt;

&lt;p&gt;In the second loop, the variable i was declared using the let keyword: variables declared with the let (and const) keyword are block-scoped (a block is anything between { }). During each iteration, i will have a new value, and each value is scoped inside the loop.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>intermediate</category>
    </item>
    <item>
      <title>How to Become a Remote Developer</title>
      <author>Adrian Twarog</author>
      <pubDate>Mon, 21 Jun 2021 12:35:39 +0000</pubDate>
      <link>https://dev.to/adriantwarog/how-to-become-a-remote-developer-3ddj</link>
      <guid>https://dev.to/adriantwarog/how-to-become-a-remote-developer-3ddj</guid>
      <description>&lt;p&gt;Finding a job can take a lot of effort and energy, especially in the current climate of the world. &lt;strong&gt;But now, remote work and learning is something we can all take seriously.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Going to work in a physical location such as an office is no longer the only way to learn or work. There are multiple ways we can work, especially for developers.&lt;/p&gt;

&lt;p&gt;I've had direct experience making the switch to remote work. So I wanted to share some things I have done to find remote work and to work effectively away from the office. And all of things have meant that I enjoy my life and have a lot more freedom when it comes to work.&lt;/p&gt;

&lt;p&gt;For those who might not have the time to read the whole article, here is a quick &lt;strong&gt;TLDR&lt;/strong&gt; you can quickly check out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Request a single day for remote work to start&lt;/li&gt;
&lt;li&gt;Produce better outcomes as a result of working remotely&lt;/li&gt;
&lt;li&gt;Use the evidence of performance to request more remote options&lt;/li&gt;
&lt;li&gt;Ensure a good remote work/learning/life balance&lt;/li&gt;
&lt;li&gt;Go full remote!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MumZlUA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu7bfdk2p3faj7qy0p8i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MumZlUA0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bu7bfdk2p3faj7qy0p8i.gif" alt="Remote Developer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requesting-a-single-day-for-remote-work"&gt;
  &lt;/a&gt;
  Requesting a single day for remote work
&lt;/h2&gt;

&lt;p&gt;It may seem like a simple request, and it is. But it's also one of the most difficult to complete. Once you actually ask to start working remotely, the rest is relatively easy.&lt;/p&gt;

&lt;p&gt;It's always good to see if there are other people at the company who already work remotely, whether you already have the job or not. Some online applications only state full time on site positions, but those options are much more flexible when discussed in person.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The first step&lt;/strong&gt; will be to &lt;strong&gt;organise a meeting in person with the supervisor&lt;/strong&gt;, manager or recruiter to discuss the ability for you to work remotely. You want to introduce the concept, test the waters with the idea, but also be firm in your resolve that this is something you are interested in. &lt;/p&gt;

&lt;p&gt;In this conversation, you want to bring up points in favor of remote work. For example, discuss how working remotely is well accepted, and talk about how you believe you will do a better job if you can take advantage of space outside of the office.&lt;/p&gt;

&lt;p&gt;Even if your company isn't immediately open to remote work, this conversation can be used as a stepping stone in future negotiations. They'll probably slowly ease into the idea of remote work. &lt;/p&gt;

&lt;p&gt;For me, this took several conversations and negotiating, but I was able to start with a single day. Then I moved on to 2, and finally complete remote work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t9ml9thC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qovvwozvoc4znbvq198.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t9ml9thC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qovvwozvoc4znbvq198.gif" alt="Remote Developer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#produce-better-outcomes-as-a-result-of-working-remotely"&gt;
  &lt;/a&gt;
  Produce better outcomes as a result of working remotely
&lt;/h2&gt;

&lt;p&gt;It's great that you have gotten your first day(s) of working remotely, congratulations! However if &lt;strong&gt;you want to prove that you deserve&lt;/strong&gt; to keep them (or increase your remote work time), you need to indeed show evidence that you are more productive from home.&lt;/p&gt;

&lt;p&gt;This shouldn't be too hard, since a number of key areas will allow you to deliver better results. By working remotely you will no longer need to spend time getting ready to go to work, traveling, having those pre-office rituals of grabbing coffee, checking email, conversing with colleagues, meetings, and heaps of other generalities which don't overall help productivity.&lt;/p&gt;

&lt;p&gt;Instead, working remotely means you can now immediately start work (from home, at the park, or anywhere remotely). This time savings alone will show you can produce better results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But, make sure you organise follow up meetings with your supervisor&lt;/strong&gt; where you can clearly express and show the improved productivity you now achieve on your remote day(s).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---t5s8nUI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h101o6ndhci5oli180s7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---t5s8nUI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h101o6ndhci5oli180s7.gif" alt="Remote Programming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-that-evidence-to-request-more-remote-options"&gt;
  &lt;/a&gt;
  Use that evidence to request more remote options
&lt;/h2&gt;

&lt;p&gt;You are on a great path now where you've started working remotely, and you've shown the positive results. The next step is to use this evidence to request a little more. The goal is to find the right balance of working in the office and working remotely that fits for you. For some people, they are most effective entirely remote, while others prefer a 50/50 balance.&lt;/p&gt;

&lt;p&gt;Find out what works for you, and work towards that result.&lt;/p&gt;

&lt;p&gt;There are new possibilities that working remotely provides. &lt;strong&gt;With the additional time you have, you will be able to learn new things, such as doing tutorials, guides, or course online that can improve your skillset.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This can help you become better at your job. And this in turn helps provide evidence that you are performing better and producing results. Your company will see that remote work is a good option for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h8PXlpIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4thjreh9v1ozgpdu3fy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h8PXlpIB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4thjreh9v1ozgpdu3fy.gif" alt="Remote Coding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ensure-a-good-worklearninglife-balance"&gt;
  &lt;/a&gt;
  Ensure a good work/learning/life balance
&lt;/h2&gt;

&lt;p&gt;The transition into remote work as a developer can be scary at first, since you will be managing your own time. Starting out on a single day might be easy, but if you have the whole week to yourself, you might lose track of your work life balance.&lt;/p&gt;

&lt;p&gt;Therefore, it's important to schedule out your day to make sure you have time for learning, working, and your own life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You don't want to suddenly be working more&lt;/strong&gt; than you did in the past because you forgot where the lines start and stop. You might also find that you underestimate the time certain activities take and leave them to the last moment. &lt;/p&gt;

&lt;p&gt;These are traps that I and others have fallen into, and sometimes the only way to avoid them is to learn through experience. Hopefully this advice will help you steer clear of (or at least deal with) these mistakes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--symUBJyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxjlwzzmhm7h75n21dwn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--symUBJyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxjlwzzmhm7h75n21dwn.gif" alt="Code Programming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-full-remote"&gt;
  &lt;/a&gt;
  Go full remote!
&lt;/h2&gt;

&lt;p&gt;If you have started working remotely, and you're up to half the week or more, then you will be ready to go fully remote. I personally started working fully remote about 5 years ago, and haven't stopped since. I have monthly in office meetings, and weekly Monday meetings, but the rest of the week is mine to utilise as I see fit.&lt;/p&gt;

&lt;p&gt;Some days I am able to spend the morning learning and teaching, and the evenings working and producing websites. Others, I wake up before the sun rises feeling extra productive and finishing the day before lunch. &lt;/p&gt;

&lt;p&gt;This freedom is something that has allowed me to grow as a developer in a way I would have never been able to do in the past.&lt;/p&gt;

&lt;p&gt;For anyone who has ever even considered working remotely, I would definitely recommend trying it. The worst that could happen is that you might actually like it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-and-support-me"&gt;
  &lt;/a&gt;
  Follow and support me:
&lt;/h2&gt;

&lt;p&gt;Special thanks if you subscribe to my channel :)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCvM5YYWwfLwpcQgbRr68JLQ?sub_confirmation=1"&gt;🎞️ Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/adrian_twarog"&gt;🐦 Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#want-to-see-more"&gt;
  &lt;/a&gt;
  Want to see more:
&lt;/h2&gt;

&lt;p&gt;I will try to post new great content every day. Here are the latest items:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/adriantwarog/vs-code-in-virtual-reality-4ja2"&gt;VS Code in Virtual Reality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/adriantwarog/vs-code-on-my-phone-how-i-did-it-1fme"&gt;VS Code on my Phone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/adriantwarog/40-amazing-developers-you-should-follow-on-youtube-5bhh"&gt;40 Amazing Developers You Should Follow On Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/adriantwarog/enhancing-ui-design-for-developers-3peg"&gt;Enhance UI - Design for Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>career</category>
      <category>programming</category>
    </item>
    <item>
      <title>😡 Agonies, Despair and self hosted Redash BI server on Microsoft Azure cloud platform 😋 part 2</title>
      <author>alxizr</author>
      <pubDate>Mon, 21 Jun 2021 12:21:09 +0000</pubDate>
      <link>https://dev.to/alxizr/agonies-despair-and-self-hosted-redash-bi-server-on-microsoft-azure-cloud-platform-part-2-2p78</link>
      <guid>https://dev.to/alxizr/agonies-despair-and-self-hosted-redash-bi-server-on-microsoft-azure-cloud-platform-part-2-2p78</guid>
      <description>&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;Thank you for joining in today for part 2 to talk about the open source BI tool named Redash and how to set up a self hosted Redash server in the cloud.&lt;br&gt;
We finished &lt;a href="https://dev.to/alxizr/agonies-despair-and-self-hosted-redash-bi-server-on-microsoft-azure-cloud-platform-4e73"&gt;part 1&lt;/a&gt; with a working instance in our local development environment and now we want to proceed on to the cloud. We will continue on from where we left off and if for any reason at all you didn't read the first part, i would suggest that you do that first.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#moving-on-to-the-cloud-azure"&gt;
  &lt;/a&gt;
  Moving on to the cloud (Azure)
&lt;/h2&gt;

&lt;p&gt;Another thing i wanted to talk about is the base for this setup. In the website there is a section for setting up a self hosted instance, here is the &lt;a href="https://redash.io/help/open-source/setup"&gt;link&lt;/a&gt;. In order to see the full picture we need also to visit the &lt;a href="https://github.com/getredash/setup"&gt;GitHub project&lt;/a&gt;. The issue i have with this specif setup is that in aims using a dedicated vm that runs the Redash using docker compose. This is a very wasteful approach in terms of resources and cost. We decided to change the approach for our use case utilizing Azure App Services that can run a multi container application with docker compose. We also need to remember that we want to utilize the cloud platform and not create all the services locally in the web app because of the management involved in it regarding the database. We want to use a managed service from Azure for it. Azure has it and its called Azure Database for PostgreSQL servers.&lt;/p&gt;

&lt;p&gt;Let's list what we will need for our setup in Azure. As we already said, we will need a multi container web app under Azure App Services, we need a managed PostgreSQL database under Azure Database for PostgreSQL servers and of course we can't move forward without an account with &lt;a href="https://azure.microsoft.com/en-us/free/"&gt;Azure&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will start from easy and proceed to the more challenging steps we need to accomplish in order to have a working instance.&lt;/p&gt;

&lt;p&gt;Step 1 is to create a managed PostgreSQL server in Azure. In order to accomplish it locate the search bar on the top of the screen in Azure portal and type Azure Database for PostgreSQL servers. Click on the option and navigate to the dedicate page. Locate the create button with ➕ sign on the top left hand side and click on it. In the next screen we will need to select the plan we need for production use so we will choose 'Single server' and in the following screen you will need to fill the details for this instance. Choose a subscription and create new resource group name, provide a name for this instance, choose location that is near you, leave the data source as 'none' and choose the PostgreSQL version. Pay attention that in the 'Compute + storage' option to choose 'General Purpose' this is very important. At the bottom you can provide the credentials for the admin user to PostgreSQL server, save these details because we will need them soon. Click next until you get to 'Review and Create' and click create. This may take couple of minutes. In case your review fails then go back to the 'Tags' tab and fill in these values: BusinessOwner, BusinessUnit, Application, Environment if any of them are empty. Once we got it to get into the creation process we can go on to the next step, as i said it may take a few minutes and we want to be efficient and not to waste time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D1T87-T0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cug776zmgr2zeqda6tuc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D1T87-T0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cug776zmgr2zeqda6tuc.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nb9o1-KT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6l9ovwagos63tnsrikjv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nb9o1-KT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6l9ovwagos63tnsrikjv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bfvkf_Op--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcg5c6wl9av414pcb3qm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bfvkf_Op--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcg5c6wl9av414pcb3qm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 2 is to create a multi container web application under Azure App Services. As before let's locate the search bar on the top of the screen in Azure portal and type App Services. Click on the option and navigate to the dedicate page. Locate the create button with ➕ sign on the top left hand side and click on it. You can see that the window we got is very similar to the one we had before when wanted to create a managed database server. Fill the details for this web app instance. Choose a subscription and the same resource group name you created in the previous step, provide a name for this web app instance, choose a region that is near you, under the publish option choose Docker container, under the operating system option choose Linux and choose a plan for the web app. Pay attention that we will not drill down yet with the web app configurations until we create it and proceed with this article. We want to understand what we need to proceed with it. The default is an empty Nginx docker instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk0V984j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/854lvh3gje87kdcpi7hr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk0V984j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/854lvh3gje87kdcpi7hr.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 3 is to create a docker compose file that we can apply on the multi container web application. Now, in theory you could use the one that we already have from part 1 of this series and we are going to do this actually and then we will change what we need in order to fit it to our needs. We discussed about why we don't want to do it. This is the reason we create in the first step a managed PostgreSQL server. Hopefully by the time we are done with step 2, both the web app and the database server are created. You should see the progress under the bell icon 🔔 on the top right hand side in Azure portal. Once the web application created lets navigate to it. You can either look it up in the search bar or via the App Services screen pick it from the list. As we are in the specific web app management screen we need to check that the web app is working with a public IP address. You should be in the overview page, on the top left next to the menu, locate the 'browse' button and click on it. You should see a new web page that shows the default Nginx welcome page. We confirmed that the web app is up and alive. Now locate in the left hand side menu the option called 'App Service Logs'. We want to enable the log stream from docker into the web app itself. Under 'Application logging' choose 'file system' and under 'Quota' and 'Days' choose 50 (it doesn't really matter) and click save. Now locate the 'Deployment Center' in the same menu. In this screen under the 'Settings' tab first of all let's set the source to be container registry. Now under the 'Registry settings' we will choose container type to be docker compose, registry source to be Docker hub and the repository access to be public. In the config area paste the content of our docker-compose.yml file from the previous article and click save. Scroll up to the very top and click on the logs tab. You will be able to see the process of the image pulling and starting up docker compose. Once it is done you can click on the browse button to navigate to the public web page of this web application or if you didn't close the tab we opened earlier when we checked that the web app is alive just refresh it. You should at this point, in theory, see the same screen, Redash welcome window where you need to create the admin user, but we know that this is not the case. We need to go through the same process as before to create the management database and run the setup script. Well, we can't do that here! There was a time, not long ago, with the previous version of the Azure portal and the web application where we could specify a command that runs on the first startup, it is not available anymore. Let's see how we can fix our situation.&lt;/p&gt;

&lt;p&gt;If we pause for a moment and review what happened until this point, we would basically think that not much is different from the local environment except for the fact that our 'local' environment is now a web app that is running in the cloud! Well, yes! And this is the exact experience i was trying to make you go through. Some of you who maybe paused in between the readings and read the information behind the links that I left would see that the process and the experience that Redash docs takes you is just insane. There are nuances to pay attention to and development environment is not the damn same as the production one, which is crazy, in my opinion! Why would i have 2 or more completely different configurations that are not keeping me in harmony with the service 😵 ?! We all know the first and simple rule - keep your development environment as close as you can to your production environment. You could also examine the docker compose configurations file carefully and find that even in development we didn't use the suggested development setup, we went all the way to prod from the start. Surprise! 💥💥💥&lt;/p&gt;

&lt;p&gt;As we reveal this discovery, we now want to pay attention to the configurations themselves and we understand that we can omit the PostgreSQL database service along with the pgAdmin service. We could argue that we don't actually need the nginx service as well, but there is a reason its here, so we are going to leave it (we will talk about this later in the future). Now, what is about the Redis server ❓❓❓ Well , if you think that we should drop it as well together with the pgAdmin and PostgreSQL you are right, but this is actually would be the wrong thing to do. I will explain it momentarily. Let's fix the cloud version docker compose configurations file, update the multi container web application so it will do its thing and then fix our Redash server, but before that we need one very important piece of information and its the connection string for the managed PostgreSQL server. Navigate the instance we created and on the left hand side menu locate the option called connection string. This is the format of the connection string, just copy your details to replace the place holders.&lt;/p&gt;

&lt;p&gt;There are couple of reasons we decided to leave the Redis service locally inside the web app running in a seperate container. The first is that Redis use case in the eyes of the Redash server is used for queueing and caching only, since it all happens in the memory, we need the memory to be available to it from the same machine. The second is the speed, caching or not, these containers are all in the same place and there is no latency caused because we need to be dependant on a remote service. The third is actually pricing. Spinning up a Redis resource or Azure container instances running Redis in a different remote location is a bit costly and not efficient.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// Azure PostgreSQL connection string format&lt;/span&gt;

    &lt;span class="nx"&gt;postgresql&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//&amp;lt;your-admin-username&amp;gt;@&amp;lt;your-managed-server-name&amp;gt;:&amp;lt;your-password&amp;gt;@&amp;lt;your-host&amp;gt;:5432/redash?sslmode=require&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we have this connection string ready for us to use, let's update it first in the file. Locate the key REDASH_DATABASE_URL and update the value with the connection string. Pay attention that we do specify the name of the actual database name that we are looking to get access to and its 'redash' on purpose.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;x-environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;base_environment&lt;/span&gt;
  &lt;span class="na"&gt;PYTHONUNBUFFERED&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
  &lt;span class="na"&gt;REDASH_WEB_WORKERS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;
  &lt;span class="na"&gt;REDASH_LOG_LEVEL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;INFO"&lt;/span&gt;
  &lt;span class="na"&gt;REDASH_RATELIMIT_ENABLED&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;false"&lt;/span&gt;
  &lt;span class="na"&gt;REDASH_REDIS_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redis://redis_server:6379/0"&lt;/span&gt;
  &lt;span class="na"&gt;REDASH_MAIL_DEFAULT_SENDER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redash@example.com"&lt;/span&gt;
  &lt;span class="na"&gt;REDASH_ADDITIONAL_QUERY_RUNNERS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redash.query_runner.python"&lt;/span&gt;

  &lt;span class="na"&gt;REDASH_DATABASE_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;YOUR&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CONNECTION&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;STRING&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;GOES&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;HERE"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we will locate the pgAdmin and the PostgreSQL services and delete them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# delete these 2 services under the service object&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# database&lt;/span&gt;
  &lt;span class="na"&gt;postgresdb&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgres:alpine&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgresdb_server_local&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5432:5432"&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;POSTGRES_HOST_AUTH_METHOD&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;trust"&lt;/span&gt;
    &lt;span class="na"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgresuser&lt;/span&gt;
    &lt;span class="na"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;postgrespassword&lt;/span&gt;
    &lt;span class="na"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redash&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./postgres-data:/var/lib/postgresql/data&lt;/span&gt;

  &lt;span class="c1"&gt;# pgAdmin&lt;/span&gt;
  &lt;span class="na"&gt;pgAdmin&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;pgAdmin_local"&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dpage/pgadmin4&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;11180:80"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;11443:443"&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;False"&lt;/span&gt;
    &lt;span class="na"&gt;PGADMIN_DEFAULT_EMAIL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pguser@mail.com&lt;/span&gt;
    &lt;span class="na"&gt;PGADMIN_DEFAULT_PASSWORD&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pgpassword&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgresdb&lt;/span&gt;

    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./pgadmin:/var/lib/pgadmin&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./pgadmin/backup:/var/lib/pgadmin/storage&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is one small step to do before we forget and it is to delete the dependency on the local PostgreSQL service under the Redash server service. We also want to delete the port 8080 as we do not use it at all in the web app because we are using the nginx reverse proxy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;    &lt;span class="c1"&gt;# delete the postgresdb dependency&lt;/span&gt;
    &lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# redash server&lt;/span&gt;
        &lt;span class="na"&gt;server&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
            &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
            &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5000:5000"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5678:5678"&lt;/span&gt;

            &lt;span class="c1"&gt;# delete this 1 port&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8081:8080"&lt;/span&gt;
            &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;redis_server&lt;/span&gt;

            &lt;span class="c1"&gt;# delete this dependency&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;postgresdb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are left with this file content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;    &lt;span class="c1"&gt;# Azure App Services docker-compose.yml Version&lt;/span&gt;

    &lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3.9"&lt;/span&gt;

    &lt;span class="na"&gt;x-environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;base_environment&lt;/span&gt;
        &lt;span class="na"&gt;PYTHONUNBUFFERED&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
        &lt;span class="na"&gt;REDASH_WEB_WORKERS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;
        &lt;span class="na"&gt;REDASH_LOG_LEVEL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;INFO"&lt;/span&gt;
        &lt;span class="na"&gt;REDASH_RATELIMIT_ENABLED&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;false"&lt;/span&gt;
        &lt;span class="na"&gt;REDASH_REDIS_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redis://redis_server:6379/0"&lt;/span&gt;
        &lt;span class="na"&gt;REDASH_MAIL_DEFAULT_SENDER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redash@example.com"&lt;/span&gt;
        &lt;span class="na"&gt;REDASH_ADDITIONAL_QUERY_RUNNERS&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;redash.query_runner.python"&lt;/span&gt;

        &lt;span class="c1"&gt;# do not forget to update this key&lt;/span&gt;
        &lt;span class="na"&gt;REDASH_DATABASE_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;YOUR&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CONNECTION&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;STRING&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;GOES&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;HERE"&lt;/span&gt;


    &lt;span class="na"&gt;x-base_redash&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;&amp;amp;base_redash&lt;/span&gt;
        &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redash/redash:8.0.2.b37747&lt;/span&gt;
        &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;


    &lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# redis&lt;/span&gt;
        &lt;span class="na"&gt;redis_server&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redis:alpine&lt;/span&gt;
            &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redis_server_local&lt;/span&gt;
            &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;unless-stopped&lt;/span&gt;

        &lt;span class="c1"&gt;# redash server&lt;/span&gt;
        &lt;span class="na"&gt;server&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
            &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
            &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5000:5000"&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5678:5678"&lt;/span&gt;
            &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;redis_server&lt;/span&gt;

        &lt;span class="c1"&gt;# redash scheduler&lt;/span&gt;
        &lt;span class="na"&gt;scheduler&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
            &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;scheduler&lt;/span&gt;
            &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
            &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
            &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;celery"&lt;/span&gt;
            &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

        &lt;span class="c1"&gt;# redash worker 1&lt;/span&gt;
        &lt;span class="na"&gt;scheduled_worker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
            &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
            &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
            &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
            &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;scheduled_queries"&lt;/span&gt;
            &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

        &lt;span class="c1"&gt;# redash worker 2&lt;/span&gt;
        &lt;span class="na"&gt;adhoc_worker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
            &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
            &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
            &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
            &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;queries"&lt;/span&gt;
            &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;

        &lt;span class="c1"&gt;# redash worker 3&lt;/span&gt;
        &lt;span class="na"&gt;scheduled_worker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_redash&lt;/span&gt;
            &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;worker&lt;/span&gt;
            &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
            &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="s"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;*base_environment&lt;/span&gt;
            &lt;span class="na"&gt;QUEUES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;schemas"&lt;/span&gt;
            &lt;span class="na"&gt;WORKERS_COUNT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

        &lt;span class="c1"&gt;# nginx&lt;/span&gt;
        &lt;span class="na"&gt;nginx&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;redash/nginx:latest&lt;/span&gt;
            &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8080:80"&lt;/span&gt;
            &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server&lt;/span&gt;
            &lt;span class="na"&gt;links&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;server:redash&lt;/span&gt;
            &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can save it now and upload it to the web application. If you recall we did it in step 3. Just repeat the step with this new file. A spoiler - nothing is going to change yet.&lt;/p&gt;




&lt;p&gt;Can you guess what our next step is to make things work ? I want to challenge you actually. I can tell you that you ladies and gentlemen have the power to fix the issue without me telling you what to do! I really want you to try to think about it for couple of minutes and solve it. Just for the sports. I promise that i will tell you what to do next even if you are not successful.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;⏰ ⏰ ⏰ ⏰ ⏰ Count to 600: This is your time window to solve it on your own and you got 540 seconds more than you need.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Alrighty then! We will need 2 things. The first is our local setup and the second is the new connection string. What we are going to do is actually spin up the local environment with the use of the database service being in the cloud rather the one we declared locally. So update the connection string, open a terminal, run the commands from part 1 and go back to the web application, in the overview screen restart it and then proceed to blibk on the browse button and wait to see that we have what we asked for. Just a friendly reminder go through the exact process as we did in the previous part in case you encounter issues.&lt;/p&gt;

&lt;p&gt;First command to run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="c"&gt;# local environment version&lt;/span&gt;
    &lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose &lt;span class="nt"&gt;-f&lt;/span&gt; docker-compose.yml up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Second command to run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    &lt;span class="c"&gt;# local environment version&lt;/span&gt;
    &lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose &lt;span class="nt"&gt;-f&lt;/span&gt; docker-compose.yml run server create_db
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can understand that we are ignoring the local environment just for the sake of setting up the remote database. I will tell you that there is also another way to accomplish the same fix and it is to do a backup on the local PostgreSQL instance and restore it in the remote instance, but this approach is way to complex comparing to what we actually did for the fix. The backup and restore option is a great choice if you are not starting from scratch. Not our scenario here.&lt;/p&gt;

&lt;p&gt;Well,&lt;br&gt;
I hope you guys enjoyed it. It surely was a bumpy ride, but heck, we learned something. It's all about the nuances.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#learn-redash"&gt;
  &lt;/a&gt;
  Learn Redash
&lt;/h2&gt;

&lt;p&gt;At this point we have a working instance of Redash and we can start using it. We can add data sources, write queries, setup scheduled tasks or queries, create visualizations and more. I will refer you to the &lt;a href="https://redash.io/help/"&gt;official website&lt;/a&gt; and the &lt;a href="https://www.youtube.com/channel/UCZWXs5WDtDKlmDDX5A84YPQ"&gt;YouTube channel&lt;/a&gt; for more information. I urge you guys to go over the Redash docs and learn how to use it. It is handy 👍&lt;/p&gt;




&lt;p&gt;Stay tuned for next&lt;br&gt;
Like, subscribe, comment and whatever ...&lt;br&gt;
Goodbye&lt;/p&gt;

</description>
      <category>docker</category>
      <category>redash</category>
      <category>devops</category>
      <category>azure</category>
    </item>
    <item>
      <title>🔥Awesome 3d navbar you have never seen it before 🔥🔥</title>
      <author>Techy Programmers</author>
      <pubDate>Mon, 21 Jun 2021 11:48:46 +0000</pubDate>
      <link>https://dev.to/kunaal438/navbar-in-css-how-to-make-3d-navigation-in-css-4g4d</link>
      <guid>https://dev.to/kunaal438/navbar-in-css-how-to-make-3d-navigation-in-css-4g4d</guid>
      <description>&lt;p&gt;Hello, glad you are here. I am kunaal and today we will see how to make an awesome 3D navigation system in CSS. You can see demo below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/ZEeZgEM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SNAkksixAs4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope you understood everything. If you have any doubt or you find any mistake that I made or you have any suggestion feel free to ask me in comment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you are interested in programming and want to know how I a 15yr old teen do coding make these design. You can follow me on my Instagram. I am also planning to post my game development stuff on Instagram.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/TechyProgrammers/"&gt;My youtube Channel&lt;/a&gt;, &lt;a href="https://www.instagram.com/techy_programmers/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>3 ways to send emails with only few lines of code and Gmail - Ruby - Part 2</title>
      <author>François</author>
      <pubDate>Mon, 21 Jun 2021 11:48:01 +0000</pubDate>
      <link>https://dev.to/fralps/3-ways-to-send-emails-with-only-few-lines-of-code-and-gmail-ruby-part-2-23nc</link>
      <guid>https://dev.to/fralps/3-ways-to-send-emails-with-only-few-lines-of-code-and-gmail-ruby-part-2-23nc</guid>
      <description>&lt;p&gt;&lt;em&gt;We will see how to send a simple email with the help of three different programming languages: Javascript, Ruby and Python&lt;br&gt;
Before you start you need to create a Gmail account.&lt;br&gt;
Do not forget to accept and allow the "Less secure apps" access in order use your scripts with your Gmail smtp connection.&lt;br&gt;
I'll let you do this on your own, you don't need a tutorial for this&lt;/em&gt; 😜&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ruby"&gt;
  &lt;/a&gt;
  Ruby 💎
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;We are going to use the &lt;a href="https://github.com/mikel/mail"&gt;Mail&lt;/a&gt; gem:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gem install mail
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Require it at the beginning of your &lt;code&gt;send_email.rb&lt;/code&gt;:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'mail'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Declare Gmail account info:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Gmail account info&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="ss"&gt;address: &lt;/span&gt;&lt;span class="s1"&gt;'smtp.gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;port: &lt;/span&gt;&lt;span class="mi"&gt;587&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# gmail smtp port number&lt;/span&gt;
  &lt;span class="ss"&gt;domain: &lt;/span&gt;&lt;span class="s1"&gt;'gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;user_name: &lt;/span&gt;&lt;span class="s1"&gt;'youremail@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;password: &lt;/span&gt;&lt;span class="s1"&gt;'yourpassword'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;authentication: &lt;/span&gt;&lt;span class="s1"&gt;'plain'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Initialize Mail &lt;code&gt;delivery_method&lt;/code&gt; info:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;defaults&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;delivery_method&lt;/span&gt; &lt;span class="ss"&gt;:smtp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Send email 📧 :
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;deliver&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s1"&gt;'myfriend@yopmail.com'&lt;/span&gt;
  &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'youremail@gmail.com'&lt;/span&gt;
  &lt;span class="n"&gt;subject&lt;/span&gt; &lt;span class="s1"&gt;'Sending email using Ruby'&lt;/span&gt;
  &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="s1"&gt;'Easy peasy lemon squeezy'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here the final code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'mail'&lt;/span&gt;

&lt;span class="c1"&gt;# Gmail account info&lt;/span&gt;
&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="ss"&gt;address: &lt;/span&gt;&lt;span class="s1"&gt;'smtp.gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;port: &lt;/span&gt;&lt;span class="mi"&gt;587&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;domain: &lt;/span&gt;&lt;span class="s1"&gt;'gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;user_name: &lt;/span&gt;&lt;span class="s1"&gt;'youremail@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;password: &lt;/span&gt;&lt;span class="s1"&gt;'yourpassword'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;authentication: &lt;/span&gt;&lt;span class="s1"&gt;'plain'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="no"&gt;Mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;defaults&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;delivery_method&lt;/span&gt; &lt;span class="ss"&gt;:smtp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;deliver&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="s1"&gt;'myfriend@yopmail.com'&lt;/span&gt;
  &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'youremail@gmail.com'&lt;/span&gt;
  &lt;span class="n"&gt;subject&lt;/span&gt; &lt;span class="s1"&gt;'Sending email using Ruby'&lt;/span&gt;
  &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="s1"&gt;'Easy peasy lemon squeezy'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Email sent'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-ease-of-ruby"&gt;
  &lt;/a&gt;
  The ease of Ruby 💎
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/dWy2WwcB3wvX8QA1Iu/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/dWy2WwcB3wvX8QA1Iu/giphy.gif" alt="Easy Ruby"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/fralps/3-ways-to-send-emails-with-only-few-lines-of-code-and-gmail-javascript-part-1-4i92"&gt;Javascript 🚀 - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ruby 💎 - Part 2&lt;/li&gt;
&lt;li&gt;Python 🐍 - Part 3 - coming next week...&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ruby</category>
      <category>smtp</category>
      <category>email</category>
      <category>gem</category>
    </item>
    <item>
      <title>What is API Observability</title>
      <author>K</author>
      <pubDate>Mon, 21 Jun 2021 11:46:36 +0000</pubDate>
      <link>https://dev.to/moesif/what-is-api-observability-4f51</link>
      <guid>https://dev.to/moesif/what-is-api-observability-4f51</guid>
      <description>&lt;p&gt;API Observability is a key component to properly execute APIOps Cycles and ensure you’re building something of value for your API users. If you’re not familiar with APIOps Cycles, &lt;a href="https://www.apiopscycles.com/"&gt;take a look at this guide&lt;/a&gt; which provides an agile framework to quickly build APIs that are business oriented and serve customer needs. API Observability itself is an evolution of traditional monitoring and born out of control systems theory.&lt;/p&gt;

&lt;p&gt;Traditional monitoring focuses on tracking known unknowns. This means you already know what to measure like Request Per Second or Errors Per Second. While the metric value may be unknown beforehand, you already know what to measure or probe such as a counter to track requests into buckets. This makes it possible to report on the health of a system (like Red, Yellow, Green), but is a bad tool for troubleshooting engineering or business issues, which usually require asking arbitrary questions.&lt;/p&gt;

&lt;p&gt;How can you determine you’re at the limits of traditional monitoring? Well, it’s when you are investigating an issue and you tell your colleague “We could resolve this but we don’t have the right context”. Context is a loaded word, but it means your solution is not able to answer unknown unknowns. Instead, you need to modify the metrics you are tracking, redeploy, and then finally see the result to get that context.&lt;/p&gt;

&lt;p&gt;API observability was born out of control systems theory to observe as much as possible the internal workings of a system from its outputs by inferring state and behavior. With a sophisticated analytics tool to analyze all this data, you are able to answer any arbitrary question around your API behavior, not just a few predefined metrics that are directly measurable. This means you are able to answer any question around how your “black box” got into this state or even reproduce that state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfxK8iX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.moesif.com/images/posts/technical/api-observability/api-metrics.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfxK8iX_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.moesif.com/images/posts/technical/api-observability/api-metrics.svg" alt="API Metrics Graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-the-businessside"&gt;
  &lt;/a&gt;
  What about the business-side?
&lt;/h2&gt;

&lt;p&gt;API Observability is not just used to troubleshoot engineering issues that your API exhibits, it can also help troubleshoot business problems. These may be more abstract in nature, but have the same principles as observing your physical service, but expanding the scope. In order for this to happen, you need full observability into not only the physical infrastructure, but the other inputs as well such as revenue, growth, and sales efficiency metrics. This enables you to expand your “black box” beyond just a service to an entire product or business unit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YoEIyzHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.moesif.com/images/posts/technical/api-observability/api-payload-analytics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YoEIyzHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.moesif.com/images/posts/technical/api-observability/api-payload-analytics.png" alt="API Payload Analytics Graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By tying together what happens within your APIs to broader business information like customer demographics, we are now able to answer business questions. For example, we can see which customers have requested items that are out of stock. We do not need to directly have a counter measuring number of out of stock items for each customer. Instead, a high-cardinality, high-dimension analytics system like Moesif is able to track all information flowing out of the API, enabling us to create this report on the fly. In this case, all the information is already available to create an arbitrary report.&lt;/p&gt;




&lt;p&gt;Looking for a complete customer-centric API analytics solution? &lt;a href="https://www.moesif.com/?utm_source=devto&amp;amp;utm_medium=paid&amp;amp;utm_campaign=placed-article&amp;amp;utm_term=what-is-api-observability"&gt;Check out Moesif!&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This article was written by Moesif CEO, Derric Gilling &lt;a href="https://www.moesif.com/blog/api-engineering/api-observability/What-is-API-Observability/?utm_source=devto&amp;amp;utm_medium=paid&amp;amp;utm_campaign=placed-article&amp;amp;utm_term=what-is-api-observability"&gt;for the Moesif blog.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>api</category>
      <category>observability</category>
    </item>
    <item>
      <title>CSS preloaders from scratch</title>
      <author>Mohammad Abdul Alim</author>
      <pubDate>Mon, 21 Jun 2021 11:40:04 +0000</pubDate>
      <link>https://dev.to/alim1496/css-preloaders-from-scratch-n92</link>
      <guid>https://dev.to/alim1496/css-preloaders-from-scratch-n92</guid>
      <description>&lt;p&gt;Most of the websites now-a-days fetch data from remote server and then display it to the user. This very fetching of data being an asynchronous task it takes some times to be displayed. In the meantime preloader or loader is shown to the user. Using css &lt;code&gt;selectors&lt;/code&gt; and &lt;code&gt;animations&lt;/code&gt; we can design a lot of preloaders easily. Lets have a look at some simple preloaders developed with css.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#circular-loader-1"&gt;
  &lt;/a&gt;
  Circular Loader 1
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alim1496/embed/mdWLZrZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you have a look at the css code, the &lt;code&gt;border-top&lt;/code&gt; property is the bluish portion on the cirular path. If &lt;code&gt;animation&lt;/code&gt; property is not used then it will remain fixed on the top of whitish cirular path. The &lt;code&gt;animation&lt;/code&gt; does the trick here. This is &lt;code&gt;linear&lt;/code&gt; means its speed will be uniform &amp;amp; it will continue &lt;code&gt;infinite&lt;/code&gt; times and take &lt;code&gt;1s&lt;/code&gt; to complete one cycle.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#circular-loader-2"&gt;
  &lt;/a&gt;
  Circular Loader 2
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alim1496/embed/MWpXaWJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This very code is similar to that of Loader 1 just have a look at the &lt;code&gt;border-right-color&lt;/code&gt; and &lt;code&gt;border-left-color&lt;/code&gt; properties. Instead of &lt;code&gt;border-top&lt;/code&gt; those two properties have been added and made &lt;code&gt;transparent&lt;/code&gt; what did the trick. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#circular-wave-loader"&gt;
  &lt;/a&gt;
  Circular Wave Loader
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alim1496/embed/eYvQKLQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here we can see that the circular loader is loading like wave. This wave effect has been created with the help of &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; selectors along with &lt;code&gt;transform: scale()&lt;/code&gt; property. This very &lt;code&gt;scale&lt;/code&gt; property along with the animation is creating the wave effect continuously.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#circular-dot-loader"&gt;
  &lt;/a&gt;
  Circular Dot Loader
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alim1496/embed/MWpRWXG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here there are total 8 dots. Initially without &lt;code&gt;animation&lt;/code&gt; property three dots will be visible. Each dot has been created with the help of &lt;code&gt;box-shadow&lt;/code&gt; property. The &lt;code&gt;dotSpin&lt;/code&gt; keyframe is divided into 8 percentage areas representing each dot. Each percentage area's &lt;code&gt;box-shadow&lt;/code&gt; has 8 values 3 of which are &lt;code&gt;bluish&lt;/code&gt; colored and rest 5 are white or invisible. Thus the animation has been created.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ellipsis-loader"&gt;
  &lt;/a&gt;
  Ellipsis Loader
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alim1496/embed/RwpOOvZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We know about the &lt;code&gt;text-overflow: ellipsis&lt;/code&gt; property that shows &lt;code&gt;...&lt;/code&gt; when text is overflowed. Here such ellipsis has been used as a loader. Here the ASCII code of ellipsis &lt;code&gt;\2026&lt;/code&gt; has been added at &lt;code&gt;after&lt;/code&gt; selector and the &lt;code&gt;width&lt;/code&gt; property is varying in the &lt;code&gt;keyframe&lt;/code&gt; which does the trick for the animation.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>preloader</category>
      <category>html</category>
    </item>
    <item>
      <title>Today I have learned to wave the  form Input</title>
      <author>Ahtsham Ajus</author>
      <pubDate>Mon, 21 Jun 2021 11:37:07 +0000</pubDate>
      <link>https://dev.to/ahtshamajus/today-i-have-learned-to-wave-the-form-input-19hh</link>
      <guid>https://dev.to/ahtshamajus/today-i-have-learned-to-wave-the-form-input-19hh</guid>
      <description>&lt;p&gt;This tutorial will mainly focus on how to use transitions in CSS to create a form input label wave.i used javascript to create the wave effect input label.when input is focused. Let's dive into the world of transition!&lt;/p&gt;

&lt;p&gt;Today I have learned to wave the form input, in this I have done HTML CSS and JavaScript, also with the help of CSS, I have given the transition of the label in the input.&lt;/p&gt;

&lt;p&gt;Here's My HTML code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"./style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Form Input Wave&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;PLease Login&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Email&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

           &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-control"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Password&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

           &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Login&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

           &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Don't have an account?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Register&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"./script.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's My CSS code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url("https://fonts.googleapis.com/css?family=Ubuntu")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;steelblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Ubuntu"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:valid&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-bottom-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-0.55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.265&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.55&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.form-control&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:valid&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-30px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's My JAVASCRIPT code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.form-control label&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="s2"&gt;`&amp;lt;span style="transition-delay:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;ms"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/span&amp;gt;`&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's output on Code pen lets see..&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/ahtshamajus4772/embed/wvJZLmW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Postgres indexes</title>
      <author>Marcell Cruz</author>
      <pubDate>Mon, 21 Jun 2021 11:32:10 +0000</pubDate>
      <link>https://dev.to/____marcell/postgres-indexes-4603</link>
      <guid>https://dev.to/____marcell/postgres-indexes-4603</guid>
      <description>&lt;p&gt;Indexing is a technique to make queries run faster, different indexes are suitable for different queries, the main differences are between an exact match, ranges and a full-text, in a nutshell if your query has a exact match or a range you should use the default method, otherwise use gin.&lt;/p&gt;

&lt;p&gt;most of the information from this post came from &lt;a href="https://devcenter.heroku.com/articles/postgresql-indexes"&gt;here&lt;/a&gt;, have a read if you want to dig deeper.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-index"&gt;
  &lt;/a&gt;
  How to create a index
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;UNIQUE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;INDEX_NAME&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="k"&gt;TABLE_NAME&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;USING&lt;/span&gt; &lt;span class="k"&gt;METHOD&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;COLUMN_NAME&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="k"&gt;FIRST&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;LAST&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;e.g:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;idx_title&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;cards&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#remove-an-index"&gt;
  &lt;/a&gt;
  Remove an index
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;CONCURRENTLY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;IF&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="n"&gt;index_name&lt;/span&gt; 
&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="k"&gt;CASCADE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;RESTRICT&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#identify-if-a-query-uses-an-index"&gt;
  &lt;/a&gt;
  identify if a query uses an index
&lt;/h2&gt;

&lt;p&gt;You can use &lt;a href="https://www.postgresql.org/docs/9.1/sql-explain.html"&gt;EXPLAIN&lt;/a&gt; to identify if a query is using an specific index&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;EXPLAIN&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;BOOKS&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;BOOK&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;"MY BOOK"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if your query is using the index something like "Index Scan "&lt;br&gt;
will appear e.g:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#index-is-not-being-used"&gt;
  &lt;/a&gt;
  index is not being used
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                        QUERY PLAN
---------------------------------------------------------------
 Seq Scan on cards  (cost=0.00..62.50 rows=828 width=242)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#index-is-being-used"&gt;
  &lt;/a&gt;
  index is being used
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                               QUERY PLAN
-----------------------------------------------------------------------------
 Index Scan using my_index on cards  (cost=0.28..8.29 rows=1 width=242)
   Index Cond: ((title)::text = 'a'::text)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;my_index is the name of the index, cards is the name of the table and &lt;br&gt;
title is the name of the column&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#list-all-indexes-in-a-table"&gt;
  &lt;/a&gt;
  List all indexes in a table
&lt;/h2&gt;

&lt;p&gt;the following will list all indexes related to your tables, you can also &lt;br&gt;
filter indexes for a specific table or field&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;tablename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indexname&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;pg_indexes&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;schemaname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'public'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#index-methods"&gt;
  &lt;/a&gt;
  Index Methods
&lt;/h1&gt;

&lt;p&gt;The following are the most common index methods.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#generalized-inverted-indexesgin"&gt;
  &lt;/a&gt;
  Generalized Inverted Indexes(GIN)
&lt;/h1&gt;

&lt;p&gt;Good for full-text search, maps multiple values to a column&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generalized-serch-treegist"&gt;
  &lt;/a&gt;
  Generalized Serch Tree(Gist)
&lt;/h2&gt;

&lt;p&gt;Allows for balanced btree, good for full-text search, used for geometric data types(poligons points etc..)&lt;br&gt;
are usefull for operations besides comparison and range.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#hash-index"&gt;
  &lt;/a&gt;
  Hash Index
&lt;/h2&gt;

&lt;p&gt;It's trash, not worth the complexity and work to manage it, coudn't find any common example that couldn't be done with the other methods in an easier way with better results, you can try to convince me otherwise in the comments if you want.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#btree-index"&gt;
  &lt;/a&gt;
  btree index
&lt;/h2&gt;

&lt;p&gt;Doesn't work with like queries, works pretty well with caching, it's the default index, if you don't pass the method option when creating the index it will be created with this method.&lt;/p&gt;

&lt;p&gt;These are all the most common indexes, now let's talk about some techniques when creating indexes&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#expression-indexes"&gt;
  &lt;/a&gt;
  Expression Indexes
&lt;/h2&gt;

&lt;p&gt;expression indexes are usefull when you need to convert the data before searching it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;USERS_LOWER_EMAIL&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;USERS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;LOWER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EMAIL&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the above index will be used in searches like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;lowercased-email&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE INDEX articles_day ON articles ( date(published_at) )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the above can will be used for&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WHERE date(articles.published_at) = date('2011-03-07')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#partial-indexes"&gt;
  &lt;/a&gt;
  Partial Indexes
&lt;/h2&gt;

&lt;p&gt;partial index is a index applied to just part of the data, the following is a usefull partial index&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="n"&gt;articles_flagged_created_at_index&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;flagged&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#unique-indexes"&gt;
  &lt;/a&gt;
  Unique Indexes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;unique&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;.....&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Improves query performance, if you try to create a uniq index in a column that has rows with the same value the index creation will fail.&lt;br&gt;
if you try to insert values that already exist in a column with a uniq index a error occurs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ERROR:  duplicate key value violates unique constraint "uniq_index"
DETAIL:  Key (title)=(title 1) already exists.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#when-it-makes-sense-to-use-indexes"&gt;
  &lt;/a&gt;
  When it makes sense to use indexes?
&lt;/h2&gt;

&lt;p&gt;The general rule is, the bigger your table is the better&lt;br&gt;
index only makes sense when the cost of reading data from the index(hitting the disc) and then reading data from the table is lower than a table scan, so in general big tables &lt;br&gt;
are better for indexes because you don't need to scan the whole table and the cost of reading two different values in two different tables isn't very high comparatively with the full table scan, when in doubt just create a test case and test it or better yet, always test it first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-decides-when-to-use-an-index-or-not"&gt;
  &lt;/a&gt;
  Who decides when to use an index or not?
&lt;/h2&gt;

&lt;p&gt;The query planner decides to use an index or not, just because an index exists and your query&lt;br&gt;
matches the initial criteria for using that index, doesn't mean that the index will be used.&lt;br&gt;
the query planner decides when to use the index or not based on a multitude of factors, the biggest&lt;br&gt;
one is how much data the query will hit, if it's a lot it's more likely that the query planner will use the index&lt;br&gt;
indexes make more sense the bigger the table is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-need-a-lot-of-data-to-test-indexes-properly"&gt;
  &lt;/a&gt;
  You need a lot of data to test indexes properly,
&lt;/h2&gt;

&lt;p&gt;A good general rule is to test as close to production as you can. the query planer might decide not to use your index if you test it locally in small sets of data, which will make you waste a lot of time benchmarking with non sensical data, trust me I've learned the hard way.&lt;br&gt;
so you should create a lot of data to test your indexes, the general rule is to test as close to production as possible&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-indexes-locks-your-db"&gt;
  &lt;/a&gt;
  creating indexes locks your db
&lt;/h2&gt;

&lt;p&gt;If it's a big table your db can be locked for hours, use create index concurrently to mitigate the problem&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reindexing"&gt;
  &lt;/a&gt;
  Reindexing
&lt;/h2&gt;

&lt;p&gt;after sometime your index will not be optimized anymore, that's when you need to reindex it&lt;br&gt;
a good reindex technique is to create another index with a different name and then droping the old one.&lt;/p&gt;

&lt;p&gt;and that's pretty much all the basic information that you need to start creating indexes, go create some indexes and make your queries run faster!&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>postgres</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to extend an Ant Design component</title>
      <author>Juraj Pavlović</author>
      <pubDate>Mon, 21 Jun 2021 11:00:33 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/how-to-extend-an-ant-design-component-1mgb</link>
      <guid>https://dev.to/bornfightcompany/how-to-extend-an-ant-design-component-1mgb</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Developers using Javascript frameworks/libraries such as &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; or &lt;a href="https://angularjs.org/"&gt;Angular&lt;/a&gt; often use a component library. Those provide completed components tied with plenty of functionalities and customisable design.&lt;/p&gt;

&lt;p&gt;In this post we will learn about such a library and how to provide even more desired behaviours, functionalities and options to its components. &lt;br&gt;
This is called component extension and it makes components even more reusable and easier to use. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This post will be based on React, Typescript and AntDesign.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#the-what-and-the-why"&gt;
  &lt;/a&gt;
  The what and the why
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://ant.design/"&gt;Ant Design&lt;/a&gt; (AntD for short) is the protagonist in this story. It is an extensive component library primarily made for React. It has versions for &lt;a href="https://www.antdv.com/docs/vue/introduce/"&gt;Vue&lt;/a&gt; and &lt;a href="https://ng.ant.design/docs/introduce/en"&gt;Angular&lt;/a&gt; too! &lt;/p&gt;

&lt;p&gt;AntD offers plenty of components such as forms, inputs, menus, modals, loaders, notifications and much much more. We have been working with AntD for a while now and we have been greatly thankful for it.&lt;/p&gt;

&lt;p&gt;As your applications grows, you start to use more and more components. These components tend to have very similarly written props and they start to stack up. Or in a completely different scenario, the component's design needs a change or its functionality needs more options. We developers try to use &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt; principle as much as we can. Therefore the component extension is born.&lt;/p&gt;

&lt;p&gt;You may be asking yourself when is a good time to extend a component? The correct answer is - whenever you start to use identical component on multiple places. This way you have a full control of it in the project.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#how-to-do-it"&gt;
  &lt;/a&gt;
  How to do it
&lt;/h1&gt;

&lt;p&gt;It is actually pretty simple.&lt;br&gt;
Step one is to create a new .tsx component and name it accordingly to one's needs. Then we must import the actual component we want to extend and modify it to fit our needs.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#datepicker-extend-example"&gt;
  &lt;/a&gt;
  DatePicker extend example
&lt;/h2&gt;

&lt;p&gt;We create a component called DatePickerLocalised.tsx (the name is totally up to you) and import the AntD's DatePicker inside with the following import.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DatePicker&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;AntdDatePicker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;DatePickerProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;antd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This imports the DatePicker component and its interface for the props. Now all we have to do is make a functional component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DatePickerLocalised&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FunctionComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DatePickerProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;  
  &lt;span class="nx"&gt;props&lt;/span&gt;  
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;  
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AntdDatePicker&lt;/span&gt;
      &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  
    &lt;span class="sr"&gt;/&amp;gt; &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is now a component which is an exact copy of the one from the component library AntD. Let's extend it by adding a locale date format. &lt;br&gt;
What goes in the format prop can be seen in the &lt;a href="https://ant.design/components/date-picker/#API"&gt;AntD documentation for the DatePicker component&lt;/a&gt;.&lt;br&gt;
Since I'm from Croatia, I'm going to use Croatian formats.&lt;/p&gt;

&lt;p&gt;The whole component now looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DatePicker&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;AntdDatePicker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;DatePickerProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;antd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;FunctionComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultDateFormats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DD.MM.YYYY.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DD.MM.YYYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DDMMYYYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DDMMYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
&lt;span class="p"&gt;];&lt;/span&gt;  

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DatePickerLocalised&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FunctionComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DatePickerProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;  
  &lt;span class="nx"&gt;props&lt;/span&gt;  
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AntdDatePicker&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;defaultDateFormats&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;; &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can use this “localised” date picker throughout our whole app. No longer do we have to worry about the locale format being wrong! Amazing!&lt;/p&gt;

&lt;p&gt;But what if we want to extend it even more, by adding custom props? It is also quite simple! &lt;br&gt;
We have to create a new type with its DatePickerProps and add our own interface to the extension. All that remains is passing it down to the newly created component. &lt;/p&gt;

&lt;p&gt;I have added fullWidth custom prop to the new interface ExtendedDatePickerProps and added a style prop in the AntdDatePicker.&lt;br&gt;
Take a look at the following snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DatePicker&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;AntdDatePicker&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;DatePickerProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;antd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;FunctionComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;ExtendedDatePickerProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="nl"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;DatePickerLocalisedProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;DatePickerProps&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;  
  &lt;span class="nx"&gt;ExtendedDatePickerProps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultDateFormats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DD.MM.YYYY.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DD.MM.YYYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DDMMYYYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DDMMYY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  
&lt;span class="p"&gt;];&lt;/span&gt;  

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DatePickerLocalised&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FunctionComponent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DatePickerLocalisedProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;  
  &lt;span class="nx"&gt;props&lt;/span&gt;  
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;  
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AntdDatePicker&lt;/span&gt;  
      &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fullWidth&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  
      &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;defaultDateFormats&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  
      &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  
    &lt;span class="sr"&gt;/&amp;gt; &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can use the component with the custom prop anywhere in the application like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DatePickerLocalised&lt;/span&gt;  
  &lt;span class="nx"&gt;fullWidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;newDate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setDateState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newDate&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;  
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the destructuring of props {...props} always goes at the bottom of the extended component. This is because of a need of overriding. E.g. the format prop which is set inside of the extend can be also passed when using the component. It will override the default created behaviour.&lt;/p&gt;

&lt;p&gt;You can add anything you desire in your extends. From enums to creating validator functions. The components can be extended as far the eye can see.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;You can now imagine the possibility of different reusable components you can create with the extension. It is really useful to customise the components and make them suitable for your needs.&lt;/p&gt;

&lt;p&gt;We have reached the end, thank you for reading. I hope you have learned something new in this post. &lt;br&gt;
Do you have something to add, do you have your own way of extending components? Tell me more in the comments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-out-some-of-my-other-content"&gt;
  &lt;/a&gt;
  Check out some of my other content!
&lt;/h3&gt;

&lt;p&gt;If you are new to the Hooks world check out &lt;a href="https://dev.to/bornfightcompany/react-hooks-cheat-sheet-3kl9"&gt;this article&lt;/a&gt;&lt;br&gt;
If you have wondered about Top 10 React hook libraries? Then &lt;a href="https://dev.to/bornfightcompany/top-10-react-hook-libraries-4065"&gt;this&lt;/a&gt; is a perfect post for you!&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>components</category>
      <category>antdesign</category>
      <category>engineeringmonday</category>
    </item>
    <item>
      <title>Rushing the process to make more progress</title>
      <author>Amber Shand</author>
      <pubDate>Mon, 21 Jun 2021 10:29:58 +0000</pubDate>
      <link>https://dev.to/amberleeshand/rushing-the-process-to-make-more-progress-5gn2</link>
      <guid>https://dev.to/amberleeshand/rushing-the-process-to-make-more-progress-5gn2</guid>
      <description>&lt;p&gt;&lt;em&gt;Confession time!&lt;/em&gt; Last week, I caught myself skim reading through the Codecademy articles from the pro course I'm working on, in an attempt to get through more of the course. Urgh. I wanted to tick things off because I just wanted to things done as quickly as possible.&lt;/p&gt;

&lt;p&gt;The problem with this logic is that you can say, okay great, I've gone from (for example) 19% of the course to now 26% - I've gotten through so much! But in reality, because you didn't take time to read through things properly, practice, break things and keep learning, you're doing yourself a disservice more than anything (bummer, I know).&lt;/p&gt;

&lt;p&gt;So now what? What do you do when all you just want to learn something super quick to prepare for job applications, a project you're working on or whatever reason you've given yourself.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Recognize that this is a marathon and not a sprint. It's not about getting things done as quickly as possible, but instead it's about practicing, being kind to yourself, and actually trying to understand what you're learning - this takes time. Check out this weekly study template by &lt;a href="https://www.instagram.com/simplexcode/"&gt;Simplex Code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bDwwB1nV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yua8zg8oues6w9s2huzo.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bDwwB1nV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yua8zg8oues6w9s2huzo.jpeg" alt="Weekly study template by Simplex Cod"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm reading Atomic Habits by James Clear and came across this great quote: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"We often expect progress to be linear. At the very least, we hope it will come quickly. In reality, the results of our efforts are often delayed. It is not until months or years later that we realize the true value of the previous work we have done. This can result in a “valley of disappointment” where people feel discouraged after putting in weeks or months of hard work without experiencing any results. However, this work was not wasted. It was simply being stored. It is not until much later that the full value of previous efforts is revealed."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Understand that you're not going to get (some) things straight away. Sounds obvious right? But it's so easy to become impatient when you so eagerly want everything to just click - but this just isn't always going to be the case! So be patient (and kind to yourself) with how long it takes to learn new concepts, no one becomes an expert developer overnight so it's totally fine if it takes a while to get your head around certain things.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Switch up what resources you're using. There are such an abundance of free resources out there - go use them! I found that when I was rushing through the exercises on Codecademy, I decided to watch some YouTube videos on the topic, took some notes and set aside some time to experiment with what I just learnt. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BREATHE. Be mindful of your breath and do your best to clear your head. Okay, definitely easier said than done! As an overthinker (and over-feeler) as Mayuko once said, this is a tricky one but definitely still super important. When you're overthinking about all the things you need to learn (which is why you're rushing in the first place), it can lead you to feeling super overwhelmed and not exactly in the right headspace to grasp a challenging new concept. When you find yourself doing this, try and do a short breathing exercise and see how you feel afterwards! &lt;a href="(https://www.youtube.com/watch?v=tybOi4hjZFQ&amp;amp;ab_channel=WimHof)"&gt;Here's a good one by Wim Hof&lt;/a&gt; &lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you have a mentor - reach out to them! I'm fortunate enough to be have taken a number of mentorship schemes such as &lt;a href="https://blackvalley.co.uk/"&gt;Black Valley&lt;/a&gt;, &lt;a href="https://www.theguardian.com/info/2020/dec/18/pairing-with-coding-black-females"&gt;Coding Black Females x The Guardian Mentorship&lt;/a&gt;, the &lt;a href="https://codefirstgirls.org.uk/code-first-girls-bank-of-america/"&gt;Bank of America FinTech Mentoring&lt;/a&gt; and even some people I've reached out to on LinkedIn!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope that was helpful, do let me know what tips you would add in the comments below!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Thank you to &lt;a href="https://codefirstgirls.org.uk/"&gt;Code First Girls&lt;/a&gt; for the feature! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4wyIgfPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kvk0oaiw76vd6oxg527.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4wyIgfPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kvk0oaiw76vd6oxg527.jpeg" alt="A picture of Amber Shand with a quote: &amp;quot;My advice is to be patient with how long it takes to learn new concepts, no one becomes an expert developer overnight so it's totally fine if it takes a while to get your head around certain things. When you're learning how to code, you also learn how to learn - work out which way is best for you whether that's interactive/immersive courses, online tutorials, or even a combination of everything. You totally got this!&amp;quot;"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>23 - Observer</title>
      <author>Mangirdas Kazlauskas 🚀</author>
      <pubDate>Mon, 21 Jun 2021 10:23:29 +0000</pubDate>
      <link>https://dev.to/mkobuolys/23-observer-1c54</link>
      <guid>https://dev.to/mkobuolys/23-observer-1c54</guid>
      <description>&lt;p&gt;In the last article, I have analysed a behavioural design pattern that reduces dependencies between a set of interacting objects by decoupling the interaction logic from the objects and moving it to a dedicated controller — Mediator. In this article, I would like to analyse and implement another behavioural design pattern that lets you define a publish-subscribe mechanism to notify multiple objects about any events that happen to the object they’re subscribed to — it is Observer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What is the Observer design pattern?&lt;/li&gt;
&lt;li&gt;Analysis&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;li&gt;Your Contribution&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-observer-design-pattern"&gt;
  &lt;/a&gt;
  What is the Observer design pattern?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WEVtN9AD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d2efifmnas8vzuvppqz.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WEVtN9AD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d2efifmnas8vzuvppqz.jpeg" alt="Neale Donald Walsch Quote About The Observer Effect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Observer&lt;/strong&gt;, also known as &lt;strong&gt;Dependents&lt;/strong&gt; or &lt;strong&gt;Publish-Subscribe&lt;/strong&gt;, belongs to the category of behavioural design patterns. The intention of this design pattern is described in the &lt;a href="https://en.wikipedia.org/wiki/Design_Patterns"&gt;GoF book&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Define a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Spoiler alert&lt;/strong&gt;: if you have ever heard about reactive programming or even used the related frameworks/libraries/tools such as &lt;a href="http://reactivex.io/"&gt;ReactiveX&lt;/a&gt;, &lt;a href="https://pub.dev/packages/rxdart"&gt;RxDart&lt;/a&gt; or just basic streams in Dart, this design pattern won’t be a game-changer to you. But it is still worth knowing how reactive programming ideas are implemented in the OOP context from the ground up, though.&lt;/p&gt;

&lt;p&gt;The motivation for this design pattern comes from the problem of having a collection of tightly coupled objects in the system where changes for one object should trigger changes in the others (one-to-many relationship). An inflexible way to implement this is to define an object that implements updating the state of other dependent ones. Such object becomes hard to implement, maintain, test and reuse because of the dependency chaos.&lt;/p&gt;

&lt;p&gt;A better way to approach this is to implement a publish-subscribe mechanism that sends the update events to dependent objects so they could implement and maintain the update logic on their own. To achieve this, the Observer design pattern introduces two roles: &lt;strong&gt;Subject&lt;/strong&gt; and &lt;strong&gt;Observer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The subject is the publisher of notifications that also defines a way for the observers to subscribe/unsubscribe from those notifications. A subject may have any number of dependent observers — the same idea of maintaining a one-to-many relationship just in a more flexible way. When a subject changes state, all registered observers are notified and updated automatically. This way the subject could trigger an update on dependent objects without even knowing who its observers are — this enables loose coupling between subject and observers.&lt;/p&gt;

&lt;p&gt;Let’s move to the analysis and implementation parts to understand and learn the details about this pattern and how to implement it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#analysis"&gt;
  &lt;/a&gt;
  Analysis
&lt;/h2&gt;

&lt;p&gt;The general structure of the Observer design pattern looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tdp9q_WI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9hzwpgbxft8milgca6c9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tdp9q_WI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9hzwpgbxft8milgca6c9.png" alt="Observer Class Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Publisher (Subject)&lt;/em&gt; — provides an interface for attaching and detaching &lt;em&gt;Subscriber (Observer)&lt;/em&gt; objects, contains a list of observers;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;(Optional) Concrete Publishers&lt;/em&gt; — stores state of interest for &lt;em&gt;Concrete Subscribers&lt;/em&gt; and sends a notification to its observers when the state changes. This class is optional when only a single type of &lt;em&gt;Publisher&lt;/em&gt; is needed. In such case, the state and notification logic is handled by the &lt;em&gt;Publisher&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Subscriber (Observer)&lt;/em&gt; — declares the notification interface for objects that should be notified of changes in a &lt;em&gt;Subject&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Concrete Subscribers&lt;/em&gt; — implements the &lt;em&gt;Subscriber (Observer)&lt;/em&gt; interface to keep its state consistent with the subject’s state;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Client&lt;/em&gt; — creates &lt;em&gt;Subject&lt;/em&gt; and &lt;em&gt;Observer&lt;/em&gt; objects, attaches observers to subject updates.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#observer-vs-mediator"&gt;
  &lt;/a&gt;
  Observer vs Mediator
&lt;/h3&gt;

&lt;p&gt;If you have read the previous article in the series or are familiar with the Mediator design pattern you could feel some kind of &lt;em&gt;déjà vu&lt;/em&gt; — isn’t the Observer design pattern the same thing? Let me explain.&lt;/p&gt;

&lt;p&gt;The primary goal of the Mediator design pattern is to replace many-to-many relationships between objects with one-to-many relationship by using the dedicated mediator object that handles the communication part. Observer allows establishing a dynamic one-way connection between objects, where some objects act as subordinates of others.&lt;/p&gt;

&lt;p&gt;If you have only one mediator that allows subscriptions to its state, this implementation is based on the Observer design pattern but the Mediator design pattern could be also used only as a part of the publish-subscribe communication. Now, if we have multiple publishers and multiple subscribers (which could be publishers as well), there won’t be any mediator object only a distributed set of observers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#applicability"&gt;
  &lt;/a&gt;
  Applicability
&lt;/h3&gt;

&lt;p&gt;The Observer design pattern should be used when a change to one object requires changing others, but you don’t know how many objects need to be changed and how. The pattern allows subscribing to such object events and changing the dependent object’s state accordingly.&lt;/p&gt;

&lt;p&gt;Also, this pattern should be used when some objects must observe others, but only for a limited time. The subscription mechanism allows dependent objects to listen to the update events on demand and change this behaviour at run-time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a757CfSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjuaohboq9ba03j4rbud.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a757CfSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjuaohboq9ba03j4rbud.gif" alt="Bring It On"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the implementation part, we will use the Observer design pattern to implement a stock market prototype.&lt;/p&gt;

&lt;p&gt;In the stock market, there are hundreds and thousands of different stocks. Of course, not all of them are relevant to you, so you would like to subscribe and track only the specific ones.&lt;/p&gt;

&lt;p&gt;The prototype allows subscribing to 3 different stocks — GameStop (GME), Alphabet Inc. a.k.a. Google (GOOGL) and Tesla Motors (TSLA). Also, there are two different types of subscriptions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Default stock subscription — notifies about every subscribed stock change.&lt;/li&gt;
&lt;li&gt;Growing stock subscription — notifies only about the growing stock changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Such stocks’ tracker could be easily implemented by using the Observer design pattern. Of course, the prototype only supports 3 different stock types, but new stock tickers or even new subscription types could be easily added later on without affecting the existing code. Let’s check the class diagram first and then implement the pattern!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#class-diagram"&gt;
  &lt;/a&gt;
  Class diagram
&lt;/h3&gt;

&lt;p&gt;The class diagram below shows the implementation of the Observer design pattern:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2e_rN5Mg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dgva29llgzxlu3ocrs5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2e_rN5Mg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9dgva29llgzxlu3ocrs5.png" alt="Observer Implementation Class Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;StockTicker&lt;/em&gt; is an abstract class that is used as a base class for all the specific stock ticker classes. The class contains &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;stockTimer&lt;/em&gt; and &lt;em&gt;stock&lt;/em&gt; properties, &lt;em&gt;subscribers&lt;/em&gt; list, provides several methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;subscribe()&lt;/em&gt; — subscribes to the stock ticker;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;unsubscribe()&lt;/em&gt; — unsubscribes from the stock ticker;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;notifySubscribers()&lt;/em&gt; — notifies subscribers about the stock change;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;setStock()&lt;/em&gt; — sets stock value;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;stopTicker()&lt;/em&gt; — stops ticker emitting stock events.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;GameStopStockTicker&lt;/em&gt;, &lt;em&gt;GoogleStockTicker&lt;/em&gt; and &lt;em&gt;TeslaStockTicker&lt;/em&gt; are concrete stock ticker classes that extend the abstract class &lt;em&gt;StockTicker&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Stock&lt;/em&gt; class contains &lt;em&gt;symbol&lt;/em&gt;, &lt;em&gt;changeDirection&lt;/em&gt;, &lt;em&gt;price&lt;/em&gt; and &lt;em&gt;changeAmount&lt;/em&gt; properties to store info about the stock.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;StockTickerSymbol&lt;/em&gt; is an enumerator class defining supported stock ticker symbols — GME, GOOGL and TSLA.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;StockChangeDirection&lt;/em&gt; is an enumerator class defining stock change directions — growing and falling.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;StockSubscriber&lt;/em&gt; is an abstract class that is used as a base class for all the specific stock subscriber classes. The class contains &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;stockStreamController&lt;/em&gt; properties, &lt;em&gt;stockStream&lt;/em&gt; getter and defines the abstract &lt;em&gt;update()&lt;/em&gt; method to update subscriber state.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;DefaultStockSubscriber&lt;/em&gt; and &lt;em&gt;GrowingStockSubscriber&lt;/em&gt; are concrete stock subscriber classes that extend the abstract class &lt;em&gt;StockSubscriber&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stockticker"&gt;
  &lt;/a&gt;
  StockTicker
&lt;/h3&gt;

&lt;p&gt;An abstract class implementing base methods for all the specific stock ticker classes. Property &lt;em&gt;title&lt;/em&gt; is used in the UI for stock ticker selection, &lt;em&gt;stockTimer&lt;/em&gt; periodically emits a new stock value that is stored in the &lt;em&gt;stock&lt;/em&gt; property by using the &lt;em&gt;setStock()&lt;/em&gt; method. The class also stores a list of stock subscribers that can subscribe to the stock ticker and unsubscribe from it by using the &lt;em&gt;subscribe()&lt;/em&gt; and &lt;em&gt;unsubscribe()&lt;/em&gt; respectively. Stock ticker subscribers are notified about the value change by calling the &lt;em&gt;notifySubscribers()&lt;/em&gt; method. The stock timer could be stopped by calling the &lt;em&gt;stopTicker()&lt;/em&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ODOJxTXR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mn29r9r0zri2h4orarjo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ODOJxTXR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mn29r9r0zri2h4orarjo.png" alt="stock_ticker.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#concrete-stock-ticker-classes"&gt;
  &lt;/a&gt;
  Concrete stock ticker classes
&lt;/h3&gt;

&lt;p&gt;All of the specific stock ticker classes extend the abstract &lt;em&gt;StockTicker&lt;/em&gt; class.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;GameStopStockTicker&lt;/em&gt; — a stock ticker of the GameStop stocks that emits a new stock event every 2 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s92RAfDU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blv3nc2h1fguiqgkp34z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s92RAfDU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/blv3nc2h1fguiqgkp34z.png" alt="gamestop_stock_ticker.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;TeslaStockTicker&lt;/em&gt; — a stock ticker of the Tesla stocks that emits a new stock event every 3 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MHMh_1Gu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z12mpq12rnrmec9jfpsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MHMh_1Gu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z12mpq12rnrmec9jfpsg.png" alt="tesla_stock_ticker.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;GoogleStockTicker&lt;/em&gt; — a stock ticker of the Google stocks that emits a new stock event every 5 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ModYbwq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbd3s7td1wgwtz4tcgqy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ModYbwq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbd3s7td1wgwtz4tcgqy.png" alt="google_stock_ticker.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stock"&gt;
  &lt;/a&gt;
  Stock
&lt;/h3&gt;

&lt;p&gt;A simple class to store information about the stock. Stock class contains data about the stocker ticker symbol, stock change direction, current price and the change amount.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iltd66IC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6zprqkmp64j5yka90xq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iltd66IC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6zprqkmp64j5yka90xq.png" alt="stock.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stocktickersymbol"&gt;
  &lt;/a&gt;
  StockTickerSymbol
&lt;/h3&gt;

&lt;p&gt;A special kind of class — &lt;em&gt;enumeration&lt;/em&gt; — to define supported stock ticker symbols. Also, there is a &lt;em&gt;StockTickerSymbolExtension&lt;/em&gt; defined where the &lt;em&gt;toShortString()&lt;/em&gt; method returns a short version of the enumeration string value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rmDN0sAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ambr8huzkj4ddgmjq9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rmDN0sAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ambr8huzkj4ddgmjq9p.png" alt="stock_ticker_symbol.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stockchangedirection"&gt;
  &lt;/a&gt;
  StockChangeDirection
&lt;/h3&gt;

&lt;p&gt;A special kind of class — &lt;em&gt;enumeration&lt;/em&gt; — to define stock change directions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qtV3G3D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yilwp5t3w1x178jw3zfx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtV3G3D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yilwp5t3w1x178jw3zfx.png" alt="stock_change_direction.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stocksubscriber"&gt;
  &lt;/a&gt;
  StockSubscriber
&lt;/h3&gt;

&lt;p&gt;An abstract class containing base properties for all the specific stock ticker classes. Property &lt;em&gt;title&lt;/em&gt; is used in the UI for stock subscriber selection, &lt;em&gt;id&lt;/em&gt; uniquely identifies the subscriber. Updated stock values are added to the &lt;em&gt;stockStreamController&lt;/em&gt; and emitted via the &lt;em&gt;stockStream&lt;/em&gt;. Abstract method &lt;em&gt;update()&lt;/em&gt; is defined and must be implemented by all the concrete stock subscriber classes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--81e8oUC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxqx5sn0xkqw934x0q3m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81e8oUC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxqx5sn0xkqw934x0q3m.png" alt="stock_subscriber.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#concrete-stock-subscriber-classes"&gt;
  &lt;/a&gt;
  Concrete stock subscriber classes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;DefaultStockSubscriber&lt;/em&gt; — a default stock subscriber that emits every stock change on update.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pok-sewe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h7kqatklsymmkhnxu5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pok-sewe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h7kqatklsymmkhnxu5e.png" alt="default_stock_subscriber.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;GrowingStockSubscriber&lt;/em&gt; — a growing stock subscriber that emits only growing stock changes on update.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MSABlpJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pugeqvb98zk6b6tbb2a8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSABlpJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pugeqvb98zk6b6tbb2a8.png" alt="growing_stock_subscriber.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;First of all, a markdown file is prepared and provided as a pattern’s description:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--od9pHyce--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oaaua58cxjt8t64lhv3v.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od9pHyce--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oaaua58cxjt8t64lhv3v.gif" alt="Observer Markdown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ObserverExample&lt;/em&gt; contains a list of &lt;em&gt;StockSubscriber&lt;/em&gt; as well as a list of &lt;em&gt;StockTickerModel&lt;/em&gt; objects (specific &lt;em&gt;StockTicker&lt;/em&gt; class with a flag of whether the user is subscribed to the stock ticker or not).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jCjVK23a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nblt9l6t063g84ywtn9g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jCjVK23a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nblt9l6t063g84ywtn9g.png" alt="observer_example.dart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A specific subscriber class could be easily changed by using the &lt;em&gt;StockSubscriberSelection&lt;/em&gt; widget. Also, &lt;em&gt;StockTickerSelection&lt;/em&gt; allows easily subscribe/unsubscribe from the specific stock ticker at run-time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jdteCTTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o69l10vy7hn2cay0c7ue.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jdteCTTa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o69l10vy7hn2cay0c7ue.gif" alt="Observer Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the example, the subscription type could be easily changed at run-time, you could start and stop tracking of the specific stocks at any point as well.&lt;/p&gt;

&lt;p&gt;All of the code changes for the Observer design pattern and its example implementation could be found &lt;a href="https://github.com/mkobuolys/flutter-design-patterns/pull/29"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-contribution"&gt;
  &lt;/a&gt;
  Your Contribution
&lt;/h2&gt;

&lt;p&gt;💖 or 🦄 this article to show your support and motivate me to write better!&lt;br&gt;
💬 Leave a response to this article by providing your insights, comments or wishes for the next topic.&lt;br&gt;
📢 Share this article with your friends, colleagues on social media.&lt;br&gt;
➕ Follow me on dev.to or any other social media platform.&lt;br&gt;
⭐ Star the &lt;a href="https://github.com/mkobuolys/flutter-design-patterns"&gt;Github&lt;/a&gt; repository.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>oop</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
