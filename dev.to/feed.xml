<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build GitHub star history tracker in 10 minutes using low-code</title>
      <author>Shubhendra Singh Chauhan</author>
      <pubDate>Fri, 21 Jan 2022 08:59:14 +0000</pubDate>
      <link>https://dev.to/tooljet/build-github-star-history-tracker-in-10-minutes-using-low-code-1ge7</link>
      <guid>https://dev.to/tooljet/build-github-star-history-tracker-in-10-minutes-using-low-code-1ge7</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In this tutorial, we’re going to build an app that can be used to track the stars count of public GitHub repositories over time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HVeewpLZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ei6zmbw571tenwk17he.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVeewpLZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ei6zmbw571tenwk17he.png" alt="demo" width="880" height="572"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;If you’re a developer who owns/maintains a project on GitHub and wants to track the growth of GitHub stars of your repository then this app is going to be very useful for you. You can either build this app or you can use the live demo that we built here - &lt;a href="https://apps.tooljet.com/github-star-history"&gt;https://apps.tooljet.com/github-star-history&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;For building this application we will use &lt;strong&gt;ToolJet&lt;/strong&gt; (&lt;a href="https://github.com/tooljet/tooljet"&gt;https://github.com/tooljet/tooljet&lt;/a&gt;) which is a free and open-source, low-code platform that allows you to quickly build tools, &lt;strong&gt;GitHub APIs&lt;/strong&gt; for getting the repository information like stars count and date, &lt;strong&gt;GitHub personal access token&lt;/strong&gt; only if the stars count of a repository is higher than 5000.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 ToolJet provides an option to import and export applications. You can download the exported source code of this app from &lt;a href="https://gist.github.com/akshaysasidrn/09dc7a0456dddc20759c2f41b18caf8e"&gt;here&lt;/a&gt; and import it to your personal ToolJet account.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Building this application using ToolJet is super easy and I have broken down the whole tutorial into the following parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build the UI&lt;/li&gt;
&lt;li&gt;Create the queries&lt;/li&gt;
&lt;li&gt;Add properties to widgets&lt;/li&gt;
&lt;li&gt;Make app live&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#build-the-ui"&gt;
  &lt;/a&gt;
  Build the UI
&lt;/h2&gt;

&lt;p&gt;Let’s start with building the user interface of our application first. To build the user interface, we will be using widgets like containers, text, text-input, button, and chart. Here’s my version of user-interface built using the following widgets:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;container&lt;/strong&gt; that includes a &lt;strong&gt;text&lt;/strong&gt; widget inside it to build the header including the title of application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KiCvOq-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hb2xznf0j3jsrqjhk3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KiCvOq-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hb2xznf0j3jsrqjhk3k.png" alt="heading" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;text-input&lt;/strong&gt; and a &lt;strong&gt;button&lt;/strong&gt; next to it. The text-input will be used to get the repository name in this format: &lt;code&gt;account/repo-name&lt;/code&gt; and the button will be used to perform the action to run the query.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--crcERC4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u98oixrhuryrm3mqaup.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--crcERC4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u98oixrhuryrm3mqaup.png" alt="text-input" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;chart&lt;/strong&gt; widget (line graph) to display the changes in stars count over time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alBu2KNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/he0bqwlwah7ig85npedp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alBu2KNu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/he0bqwlwah7ig85npedp.png" alt="chart" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;password-input&lt;/strong&gt; widget and a &lt;strong&gt;text&lt;/strong&gt; widget below it. Password-input widget to hold the GitHub personal access token and the text widget to add the display the message.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SnyR9sem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuwtq8onrpyflj2jfkjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SnyR9sem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuwtq8onrpyflj2jfkjf.png" alt="password" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;And finally a &lt;strong&gt;container&lt;/strong&gt; that includes &lt;strong&gt;two text widgets&lt;/strong&gt;, one to display the total stars count of the repository and the other to display the time when the repository was created.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---bOlmOsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ysns6k5d7rlu79r4483.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bOlmOsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ysns6k5d7rlu79r4483.png" alt="two" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 You can always make use of more widgets to build a better UI and customize or style widgets by changing their property from the inspect panel.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#create-the-queries"&gt;
  &lt;/a&gt;
  Create the queries
&lt;/h2&gt;

&lt;p&gt;Now, we will create the queries that will get the repository information like stars count and date. &lt;/p&gt;

&lt;p&gt;We will be creating two queries - one using REST API datasource and the other using custom JavaScript code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-query-using-rest-api"&gt;
  &lt;/a&gt;
  First query using REST API
&lt;/h3&gt;

&lt;p&gt;This query will get the data from GitHub like &lt;code&gt;stargazers_count&lt;/code&gt; and the the time when the repository was &lt;code&gt;created_at&lt;/code&gt; . Let’s create the query:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to the query editor at the bottom and click on the &lt;code&gt;+&lt;/code&gt; button to create a new query&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;REST API&lt;/strong&gt; from the datasource dropdown&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;General&lt;/strong&gt; tab, Select &lt;code&gt;GET&lt;/code&gt; method and enter the GitHub’s API endpoint &lt;code&gt;https://api.github.com/repos/{{components.textinput1.value}}&lt;/code&gt; - at the end of URL we have used JavaScript inside double curly brackets. This will use the value from the text-input widget.&lt;/li&gt;
&lt;li&gt;We will use &lt;strong&gt;Transformation&lt;/strong&gt; to convert the data received from the response of API into JSON format. Enter &lt;code&gt;return { starGazers: data.stargazers_count };&lt;/code&gt; - this will get the &lt;code&gt;stargazers_count&lt;/code&gt; from the response received using API and will create a key value pair. (You can check the &lt;a href="https://docs.tooljet.com/docs/tutorial/transformations"&gt;documentation&lt;/a&gt; to know more about the Transformation)&lt;/li&gt;
&lt;li&gt;Now you can click on &lt;strong&gt;Preview&lt;/strong&gt; button to check result of the query in preview section and then click on &lt;strong&gt;Save&lt;/strong&gt; to create the query.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mFhszbrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pf75ko148ggtwxsqptdd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mFhszbrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pf75ko148ggtwxsqptdd.png" alt="query1" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perfect! we have created our first query that will get the repository data like total stargazers at the moment and the date when the repository was created. Let’s move on to build another query.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#second-query-using-custom-javascript-code"&gt;
  &lt;/a&gt;
  Second query using custom JavaScript code
&lt;/h3&gt;

&lt;p&gt;To build this query we will be writing some JavaScript code to get the data specifically of stargazers. We will be fetching the data like the number of stargazers on a particular date and then we will use this data to create &lt;code&gt;key: value&lt;/code&gt; pairs of &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;number of stargazers&lt;/code&gt; on that particular date. This will be used to build the line chart for graphical representation of change in stargazers over time. Let’s create the query:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to the query editor and click on the &lt;code&gt;+&lt;/code&gt; button to create a new query&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Run JavaScript code&lt;/strong&gt; from the datasource dropdown&lt;/li&gt;
&lt;li&gt;Write the JavaScript code in the editor:

&lt;ul&gt;
&lt;li&gt;Let’s define a variable starsgazerURL and assign the GitHub API to it - const stargazersURL = &lt;code&gt;https://api.github.com/repos/${components.textinput1.value}/stargazers?per_page=100&amp;amp;page={page}&lt;/code&gt;; .&lt;/li&gt;
&lt;li&gt;totalPages variable that will store the parsed integer value of total number of pages - const totalPages = parseInt(queries.restapi1.data.starGazers/100); &lt;/li&gt;
&lt;li&gt;pages variable that will create an array from total number of pages - let pages = [...Array(totalPages).keys()]; &lt;/li&gt;
&lt;li&gt;Create an empty object dates - let dates = {};&lt;/li&gt;
&lt;li&gt;Create an empty array results - let results = []; &lt;/li&gt;
&lt;li&gt;For headers we will assign the media type supported by GitHub’s REST API - let headers = {'Accept': 'application/vnd.github.v3.star+json'} &lt;/li&gt;
&lt;li&gt;If condition to accept the GitHub personal access token from the text-input -  if(components.passwordinput1.value !== '') { headers['Authorization'] = &lt;code&gt;token ${components.passwordinput1.value}&lt;/code&gt;} &lt;/li&gt;
&lt;li&gt;A for-loop that will replace the page number in the starGazersURL and then iterating through all the stars to get a list of all stars and the time at which they starred:
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stargazersURL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;{page}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="p"&gt;})).&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;starredAt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;starred_at&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;endOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yyyy-MM-DD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;starredAt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;starredAt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And at last the assigning total to 0 and iterating through every date in dates object. Then creating array of objects and pushing to results array:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt; Once done writing the code, &lt;strong&gt;Save&lt;/strong&gt; this query.
&lt;strong&gt;Here’s the complete code:&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stargazersURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.github.com/repos/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textinput1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/stargazers?per_page=100&amp;amp;page={page}`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;totalPages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;restapi1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;starGazers&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;totalPages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Accept&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/vnd.github.v3.star+json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwordinput1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Authorization&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`token &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwordinput1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stargazersURL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;{page}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="p"&gt;})).&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;starredAt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;moment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;star&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;starred_at&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;endOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yyyy-MM-DD&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;starredAt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;starredAt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will also &lt;strong&gt;add an event handler&lt;/strong&gt; to our first query to run the second query every time the first query is successful. To do that we need to go to the &lt;strong&gt;Advanced&lt;/strong&gt; tab of our first query and then create a new handler. Select the &lt;strong&gt;On Success&lt;/strong&gt; Event and in Action dropdown select &lt;strong&gt;Run Query&lt;/strong&gt;, then select the second query and save it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#adding-properties-to-widgets"&gt;
  &lt;/a&gt;
  Adding properties to widgets
&lt;/h2&gt;

&lt;p&gt;So now that we have successfully built the user interface and created the queries, all we need to do now is configure the widgets to function correctly. Let’s configure the widgets:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#textinput"&gt;
  &lt;/a&gt;
  Text-input
&lt;/h3&gt;

&lt;p&gt;We don’t need to configure anything specific in this widget. It is used to get the input from user. Once the user has entered the repository name in the correct form then the queries will automatically fetch the value from the widget. We can add a placeholder for the users to understand the correct format to enter. Just click any where on the widget to open the inspect-panel on the right and in the Placeholder box enter &lt;code&gt;account-name/repo-name&lt;/code&gt; . &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#button"&gt;
  &lt;/a&gt;
  Button
&lt;/h3&gt;

&lt;p&gt;We will need to make several changes in the property of the button widget. It is the widget that will be used to trigger the queries and make our whole application work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The first thing that we can do is add a text to our button like &lt;code&gt;Fetch data&lt;/code&gt; and change the colour of button from the &lt;strong&gt;Style&lt;/strong&gt; tab. This will improve the UI of button.&lt;/li&gt;
&lt;li&gt;Let’s add functionality, we can add the &lt;strong&gt;Loading state&lt;/strong&gt; to our button so that it shows a loader until the a query has done getting the results. To do this, just add &lt;code&gt;{{queries.runjs2.isLoading || queries.restapi1.isLoading}}&lt;/code&gt; this will display a loading state to the button while either of the queries run.&lt;/li&gt;
&lt;li&gt;Now finally, add an event handler to the button so that whenever the button is clicked an action is performed. In this case, we will create &lt;code&gt;On Click&lt;/code&gt; event, add &lt;code&gt;Run Query&lt;/code&gt; action to it, and will select the first query. When the button will be clicked it will run the first query in the backend.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GpJaCN_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4cziauakkkboma16wsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GpJaCN_W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4cziauakkkboma16wsz.png" alt="button" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passwordinput"&gt;
  &lt;/a&gt;
  Password-input
&lt;/h3&gt;

&lt;p&gt;Just like the text-input widget, all we need to do is add a &lt;strong&gt;Placeholder&lt;/strong&gt; to this widget - &lt;code&gt;GitHub token&lt;/code&gt; so that the user knows to input the GitHub token. Learn how to get GitHub personal access token &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#text-widget-below-passwordinput"&gt;
  &lt;/a&gt;
  Text widget below password-input
&lt;/h3&gt;

&lt;p&gt;We will use this text to display it as a message for the password input field. Just click on the widget and add the text - &lt;code&gt;&amp;lt;small&amp;gt;Required if more than 5000 stars. Token is not stored or sent to backend.&amp;lt;/small&amp;gt;&lt;/code&gt; and from &lt;strong&gt;Style&lt;/strong&gt; tab use the color picker to change the font color to red.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 You can use HTML to customize the text.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#text-widgets-inside-containers"&gt;
  &lt;/a&gt;
  Text widgets inside containers
&lt;/h3&gt;

&lt;p&gt;We will use two text widgets inside the container. The first one is to display the number of total stars. Click on the widget to edit its property and add the following text: &lt;code&gt;This repository has {{queries.restapi1.data.starGazers}} stars 🌟&lt;/code&gt; this uses JavaScript inside double curly brackets to get the number of &lt;code&gt;starGazers&lt;/code&gt; from the &lt;code&gt;data&lt;/code&gt; fetched by the &lt;code&gt;restapi1&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fLSPHWCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwhwtt2b1bpz7z5gq5lb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fLSPHWCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwhwtt2b1bpz7z5gq5lb.png" alt="text1" width="725" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the second text displays the time when the repository was first created. Click on the widget to edit its property and add the following text: &lt;code&gt;Repository was created {{moment(queries.restapi1.rawData.created_at).fromNow()}} ago&lt;/code&gt; this will use JS functions to &lt;code&gt;moment&lt;/code&gt; and &lt;code&gt;fromNow&lt;/code&gt; to convert the &lt;code&gt;created_at&lt;/code&gt; date received in &lt;code&gt;data&lt;/code&gt; fetched by the &lt;code&gt;restapi1&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h2yR5Hpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipql5cra09s1jrdtz6bz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2yR5Hpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ipql5cra09s1jrdtz6bz.png" alt="text2" width="713" height="294"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chart"&gt;
  &lt;/a&gt;
  Chart
&lt;/h3&gt;

&lt;p&gt;We will edit 4 properties of the Chart:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Title:&lt;/strong&gt; This title will display at the top-center of the chart &lt;code&gt;Stars over time&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chart type:&lt;/strong&gt; ToolJet support different chart types including line, bar, and pie. We will use &lt;strong&gt;line chart&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chart data:&lt;/strong&gt; We will use the data fetched and converted into array of objects by the query &lt;code&gt;runjs2&lt;/code&gt; - &lt;code&gt;{{queries.runjs2.data}}&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Loading state:&lt;/strong&gt; The chart will display a loading state until the query has successfully fetched and converted the results - &lt;code&gt;{{queries.runjs2.isLoading || queries.restapi1.isLoading}}&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Zgk3M3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxvv3l2qrabzqh9tcewa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Zgk3M3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxvv3l2qrabzqh9tcewa.png" alt="chart" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great! we are almost done with our app, now we will see how to deploy it and share it with our friends and community.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#make-app-live"&gt;
  &lt;/a&gt;
  Make app live
&lt;/h2&gt;

&lt;p&gt;To do this just click on the &lt;strong&gt;Deploy&lt;/strong&gt; button on the top-right corner. On the dialog box:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the &lt;strong&gt;+Version&lt;/strong&gt; button to create a version of the app&lt;/li&gt;
&lt;li&gt;Click on the &lt;strong&gt;Save&lt;/strong&gt; button to save the progress and then click on the &lt;strong&gt;Deploy&lt;/strong&gt; button to deploy on the server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Making app shareable:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on the Share button on the top-right&lt;/li&gt;
&lt;li&gt;In the dialog box, click on the toggle switch to &lt;strong&gt;make the application public&lt;/strong&gt; and &lt;strong&gt;shareable&lt;/strong&gt; through the link in the box&lt;/li&gt;
&lt;li&gt;You can also edit the URL according to your choice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rcpHyAxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blog.tooljet.com/content/images/2021/12/deploy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rcpHyAxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blog.tooljet.com/content/images/2021/12/deploy.gif" alt="https://blog.tooljet.com/content/images/2021/12/deploy.gif" width="880" height="430"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congrats&lt;/strong&gt; 🎉 **** : You’ve successfully built an app that lets you track the GitHub stars history just by entering the repository name and get the details like Total stargazer over time and time when it was created. If you run into any problems, always feel free to reach out to us on our &lt;a href="https://join.slack.com/t/tooljet/shared_invite/zt-r2neyfcw-KD1COL6t2kgVTlTtAV5rtg"&gt;slack community&lt;/a&gt; or email us at &lt;a href="//mailto:hello@tooljet.com"&gt;hello@tooljet.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Making Jamstack &amp; Figma Templates for Landing Pages</title>
      <author>Fajar Siddiq</author>
      <pubDate>Fri, 21 Jan 2022 08:12:45 +0000</pubDate>
      <link>https://dev.to/euphorya/making-jamstack-figma-templates-for-landing-pages-249p</link>
      <guid>https://dev.to/euphorya/making-jamstack-figma-templates-for-landing-pages-249p</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kCm2s_s0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qji6vk8lxdel3etxbah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kCm2s_s0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3qji6vk8lxdel3etxbah.png" alt="Image description" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I spent time building designs in 2021 on Figma &amp;amp; also Jamstack templates for landing pages, button toggle &amp;amp; resume design and now is available in year 2022. I hope this will help others like finding a job with the resume &amp;amp; landing pages to create a productized services.&lt;/p&gt;

&lt;p&gt;Products to help you:&lt;br&gt;
✅ Productized Yours&lt;br&gt;
✅ Create a Modern Resume&lt;br&gt;
✅ Create a Landing Page&lt;br&gt;
🔥 Available now for &lt;a href="https://fajarsiddiq.gumroad.com/"&gt;download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-lZ8ekV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7t77pgsupd02xi6bc6pk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-lZ8ekV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7t77pgsupd02xi6bc6pk.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bcfhlsSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmoqboa49v5h162py7zm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bcfhlsSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vmoqboa49v5h162py7zm.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3z7ukZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbucqz1ulsq9pldg10qo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3z7ukZw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dbucqz1ulsq9pldg10qo.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iVPBg3yB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eb60yusi606xouz87gd6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVPBg3yB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eb60yusi606xouz87gd6.png" alt="Image description" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aa8L-avZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvw83bb34isofdqhzr3a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aa8L-avZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvw83bb34isofdqhzr3a.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hHb0pGD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e81wqfd7wuncbb13jk0e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hHb0pGD1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e81wqfd7wuncbb13jk0e.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔥 Available now for &lt;a href="https://fajarsiddiq.gumroad.com/"&gt;download&lt;/a&gt;&lt;/p&gt;

</description>
      <category>jamstack</category>
      <category>figma</category>
      <category>templates</category>
      <category>gumroad</category>
    </item>
    <item>
      <title>JS Coding Question #11: Are Two Object Equal (💥3 Solutions💥)</title>
      <author>Let's Code</author>
      <pubDate>Fri, 21 Jan 2022 06:59:54 +0000</pubDate>
      <link>https://dev.to/frontendengineer/js-coding-question-11-are-two-object-equal-3-solutions-56g4</link>
      <guid>https://dev.to/frontendengineer/js-coding-question-11-are-two-object-equal-3-solutions-56g4</guid>
      <description>&lt;p&gt;...And the series continues after couple of React Interview Questions and Coding articles. 👍 &lt;/p&gt;

&lt;p&gt;Now, this interview question can be tricky as you would need to know how to recurse in order to solve this problem/challenge. Even seasoned engineers often stumble to answer this question so better not to underestimate this problem but be ready. Video format is available below if you don't feel like reading. Here is a &lt;a href="https://codepen.io/angelo_jin/pen/abLKKaX"&gt;Codepen&lt;/a&gt; if you want to edit/play around the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interview-question-11"&gt;
  &lt;/a&gt;
  Interview Question #11:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Write a function or program that checks if two objects are equal.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There can be many solutions to problems/challenges that are efficient and less efficient, elegant and less elegant. If you have any other than the 3 solutions I have, please share so others may benefit. Below is my 3 solutions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution-1"&gt;
  &lt;/a&gt;
  Solution #1:
&lt;/h3&gt;

&lt;p&gt;JSON.stringify&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sortString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// sort so it will handle object properties that are not in order&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;sortString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;sortString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;This is an approach that looks very dirty/hacky but may still be useful if one is comparing smaller objects. It is easy and fast to write and do not need any libraries which adds overhead to the final js bundle. Since this is fast to write, it may also be useful for quick sanity check or verifying if two objects are equal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#solution-2"&gt;
  &lt;/a&gt;
  Solution #2:
&lt;/h3&gt;

&lt;p&gt;Using a lib&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;lodashEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Most codebases have js utility already. What I like about libraries are that they solve common problems effectively and are well-tested to cover edge cases. I love open source libs and I am firm believer not to reinvent the wheel for problems that are already been solved.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#solution-3"&gt;
  &lt;/a&gt;
  Solution #3:
&lt;/h3&gt;

&lt;p&gt;Custom Approach&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;deepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ensure that arguments are objects&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="c1"&gt;// return false right away if objects properties length are not equal&lt;/span&gt;
      &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class="c1"&gt;// use reduce setting the initial value to equal which is true&lt;/span&gt;
        &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// then recurse as deep as possible and keep recursing if values are objects&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;deepEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;// just do normal compare if not an object&lt;/span&gt;
      &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;This custom approach requires recursion to be able to compare nested, deep objects. Many interviewers would want to see interviewees show/draft their own solution as they want to see how they communicate, think and code at the same time. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts:
&lt;/h2&gt;

&lt;p&gt;If I am interviewing someone and they can tell me that solution maybe using a libraries AND sudo code a custom solution trying to recurse through it, I would be satisfied with those answer. How about you? What are your thoughts?&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2j8L8RsHQpM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>challenge</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>career</category>
    </item>
    <item>
      <title>Front-End Developer Roadmap</title>
      <author>itgitnit</author>
      <pubDate>Fri, 21 Jan 2022 06:08:54 +0000</pubDate>
      <link>https://dev.to/itgitnit/front-end-developer-roadmap-302i</link>
      <guid>https://dev.to/itgitnit/front-end-developer-roadmap-302i</guid>
      <description>&lt;p&gt;So you are an absolute beginner who is trying to learn web development and more interested in the front-end part of it and you are looking forward to having an absolute guided path or a roadmap so that you can learn front-end development. Let me give it to you in the very easiest and the cleanest manner. HTML, CSS, and Javascript and that’s it, that is your front-end developer guide. But hey, you have also heard that XYZ YouTuber was saying that you should also be learning react, is he wrong? No, absolutely not. We have also heard about Chakra UI, Tailwind CSS, Bootstrap, So you shouldn't be learning that, no it’s not like that. So there is a lot more context here that you should understand. So, let me explain it in a little bit more in-depth. See the ultimate guide of front-end development is still the basic HTML, CSS, and Javascript, but it is a lot more information that is exposed to you without understanding the context of that information. So, in this blog, I’ll give you not only the roadmap, but actually the understandable, contextual roadmap so that you can figure out which tech stack you should pick up and which you can leave. &lt;/p&gt;

&lt;p&gt;Let’s start with not everybody's favorite which is HTML. Now I understand the context of HTML, everybody knows it but nobody knows it, this is the ultimate reality of HTML, you know enough that you can figure out what this tag is going to do, but sometimes beginner faces a really challenging situation that they don’t want to write this much of HTML for designing the page. But the ultimate reality is that the page is going to be no matter what, is going to build with HTML, and this is exactly the point when you have to do something but you don’t want to do something, this is where exactly more tools come into the front-end development. See, when you build a web application let's just say there is a product on the web page, somebody needs to actually write HTML for that product. Now surely we have programming languages that help us to give us loops and conditional so that we can either conditionally replace those products with something else, or maybe can repeat that product probably a hundred times with different values. Now, this is all a little bit of an advanced side we don’t want to go there, first, we want to capture the front-end part of it. But something you must really understand is that no matter what happens, somebody needs to write HTML for those buttons, for those images, and something else. Now, this something else can be buttons, unlisted elements, listed elements, and a whole bunch of other things. So in order to make sure that you write faster HTML, Emmet comes into the picture which gives you a lot of shortcuts so that you don’t really feel tiresome to write those HTML, yet somebody actually writes them. So this is the first introduction to the additional tool in the front-end journey, Emmet.&lt;/p&gt;

&lt;p&gt;Now, moving on to our second part of the front-end development which is CSS. Now it’s not just about structuring the web page it should look also decently beautiful. And that’s where CSS comes into the picture. But writing the CSS with position absolute or position relative and providing all these elements to be arranged at the exact place where you want is not the easiest task of all and hence since again, the picture comes in, we want to do something but we really don’t want to do it, that’s exactly when the same things come in. Some of the helper tools, now writing CSS you can absolutely write that, you don’t need to use any tools, libraries, frameworks, anything at all, you can use plain vanilla CSS to write everything. But since we don’t want to and that’s where the new libraries, frameworks of CSS come into the picture. These libraries and frameworks help you to actually arrange things nicely and beautifully, some provide a really powerful grid so that you can arrange your web pages into the easiest format. Some even give you more things to make things beautiful like buttons and navigation bar and a whole lot of other things. And trust me there is no shortage of these CSS frameworks, some people love one, some people love others. Bootstrap, Material CSS, MD Bootstrap, Chakra, Tailwind CSS, and there is so much of them. Now my personal recommendation is to go ahead and get started with bootstrap and eventually explore others. You may fall in love with Tailwind CSS or the Chakra CSS or something else, but again one thing is sure, these are all helper libraries if you don’t want to use them, you absolutely can avoid them and, hence comes into the picture that CSS is the foundation of the front-end development. And also the reason why I’m recommending to get started with Bootstrap is because it gives you the ultimate knowledge and the sense of, how things should be arranged on the web page. Once you understand the bootstrap understanding Material or the Chakra or the Tailwind is relatively easier but it’s not true for everyone. So, again, if you are getting started with Material that’s also totally fine.&lt;/p&gt;

&lt;p&gt;Now, finally moving into the third part of the front-end development guide which is Javascript. Now Javascript is really one of the most powerful and proving to be more powerful than we expected it to be. Now the question is can we build everything in Vanilla Javascript? Absolutely yes, there is no one who is stopping you to do so. Javascript can actually make server calls and can bring up some of the JSON data and then you can actually place these JSON data nicely and there is nothing that is stopping you. But is it tiresome? Yes, Of Course, writing a Web application that is governed entirely by Javascript without imposing some of the rules that what you should do? What you should not do? Can become an absolute nightmare, adding more team members to this and this actually gets out of hand pretty quickly and pretty easily and this is exactly where some of the rules are imposed on the entire team or the entire project, that hey, if you are going to change this object in the javascript so this is the way how you are going to do it, if you need to render some condition this is how you are going to do it. Previously, people used to do this kind of rules and regulations on the project basis or the company basis, but eventually, somebody realizes that hey, we need to just roll out these standards to everyone and thus a lot of libraries and frameworks in the Javascript came into the picture, but one thing you need to absolutely understand that the final output of these all things React, Vue or whatever we learning is HTML, CSS, and Javascript. So, ultimately your code is compiled into these three things only. So the more we are going to understand the Javascript paradigm more easily, it’s going to be easier for you to switch between React or angular or Vue. So, ultimately it boils down to the basic javascript. &lt;/p&gt;

&lt;p&gt;Now in order to make sure that your web applications follow some of the standard practices and these same practices are being followed by your team members also, we pick up some of the libraries or the frameworks, and famous ones are React, Angular, Vue and there is a lot more other than that. A whole lot of companies are using even those frameworks as well, some due to legacy reasons, some due to other conditional reasoning that this is the best fit for us, so, there is no shortage of them. Now in this vast world where Javascript frameworks are dropping every next day, my personal recommendation is to get started with React because React standards are being utilized by a whole lot of other frameworks and libraries too. Once you understand, how to write these codes into React you will be able to quickly migrate into Vue, Meteor, and tonnes of other frameworks. Now, once you understand React, obviously your project is going to go more complex and that’s where you start exploring more of these libraries and frameworks may be Vue is much more suitable for your project, or maybe you need something more complex may be NextJS but again this is all can go like really crazy. But again, my recommendation is to get started with React, understand this as basic, and explore things later on.&lt;/p&gt;

&lt;p&gt;Now let me give you an additional tip to you that is going to make you even a better front-end developer. Now, as things are getting more complex, there are things something known as State Management. So, what basically happens, let's just say this is your name and you want to display this name onto 10 different places on the website, and what happens if one place changes that name how you are going to make sure that 9 different places get to know about this change. And that’s where the State Management Library comes in. The State Management Library can be a little bit intimidating at first, but they are not, it is just a centralized place from which all the data goes in and goes out, and thus State Management Library is also an essential part if you want to become a front-end developer. Now, since this is also a common problem there is no shortage of such State Management Library my personal recommendation is to get started with Redux. I know this is a little bit tough compared to others, but this is going to give you the ultimate knowledge of why we are doing and what we are doing once you understand the Redux rest of the things are gonna fine and are gonna seem like absolutely easy. So, I told you that ultimately it is just HTML, CSS, and Javascript rest of all the libraries, and all the front-end roadmaps which are including all these extra things, yes they are helpful but not too much necessary. But is it going to be necessary if you are looking for a job? Or want to become a modern front-end developer? Yes, it’s going to be. But the most important thing is, now you know the context of why this is happening and why there are so many things to learn. So, I think you can make a better decision now to pick what’s library I can choose and what I can learn later on in life.&lt;/p&gt;

&lt;p&gt;I hope you have enjoyed this demystifying the front-end developer roadmap!!!!!!......&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Fetch GitHub Markdown and Show on Blog Post or Website ft. showdownjs
</title>
      <author>Shaswat Raj</author>
      <pubDate>Fri, 21 Jan 2022 05:52:40 +0000</pubDate>
      <link>https://dev.to/sh20raj/fetch-github-markdown-and-show-on-blog-post-or-website-ft-showdownjs-4dm3</link>
      <guid>https://dev.to/sh20raj/fetch-github-markdown-and-show-on-blog-post-or-website-ft-showdownjs-4dm3</guid>
      <description>&lt;p&gt;Previous Post :- &lt;a href="https://dev.to/sh20raj/convert-markdown-or-md-url-to-html-markdowntohtml-using-javascript-ft-showdownjs-1med"&gt;https://dev.to/sh20raj/convert-markdown-or-md-url-to-html-markdowntohtml-using-javascript-ft-showdownjs-1med&lt;/a&gt;&lt;br&gt;
Video Documentation :- &lt;a href="https://youtu.be/omtgsLp9hOI"&gt;https://youtu.be/omtgsLp9hOI&lt;/a&gt;&lt;br&gt;
Article Source :- &lt;a href="https://codexdindia.blogspot.com/2022/01/convert-markdown-or-md-url-to-html-using-javascript.html"&gt;https://codexdindia.blogspot.com/2022/01/convert-markdown-or-md-url-to-html-using-javascript.html&lt;/a&gt;&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#convert-a-markdown-containing-url-to-html-and-show-it"&gt;
  &lt;/a&gt;
  Convert a Markdown Containing URL to HTML and Show it.
&lt;/h1&gt;

&lt;p&gt;For this we will Use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"&gt;fetch Api&lt;/a&gt;.&lt;br&gt;
Here is the raw URL of &lt;a href="http://showdownjs.com/"&gt;showdownjs&lt;/a&gt; readme.md :- &lt;a href="https://github.com/showdownjs/showdown/raw/master/README.md"&gt;https://github.com/showdownjs/showdown/raw/master/README.md&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;We will fetch content of this URL then convert it to HTML and show on our website. See Demo on &lt;a href="https://codepen.io/SH20RAJ/pen/bGoyJqJ?editors=1010"&gt;Codepen&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://cdn.jsdelivr.net/npm/showdown/dist/showdown.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;div id="mypost"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
fetch('https://raw.githubusercontent.com/showdownjs/showdown/master/README.md').then(response =&amp;gt; response.text())
  .then(data =&amp;gt; {
  console.log(data);
  var converter = new showdown.Converter();
var md = data;
var html = converter.makeHtml(md);
  document.querySelector('#mypost').innerHTML = html;
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the result on Codepen :- &lt;a href="https://codepen.io/SH20RAJ/pen/bGoyJqJ?editors=1010"&gt;https://codepen.io/SH20RAJ/pen/bGoyJqJ?editors=1010&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>sh20raj</category>
      <category>showdownjs</category>
      <category>markdown</category>
    </item>
    <item>
      <title>Top 17 web scraping tools for data extraction in 2022</title>
      <author>Rajat Thakur</author>
      <pubDate>Fri, 21 Jan 2022 05:48:12 +0000</pubDate>
      <link>https://dev.to/digitallyrajat/top-17-web-scraping-tools-for-data-extraction-in-2022-1p5h</link>
      <guid>https://dev.to/digitallyrajat/top-17-web-scraping-tools-for-data-extraction-in-2022-1p5h</guid>
      <description>&lt;p&gt;Web scraping tools are software specially developed to extract useful information from websites. These tools are useful for anyone looking to collect any form of data from the Internet.&lt;br&gt;
Here is a curated list of the best web scraping tools This list includes commercial and open source tools with popular features and the latest download link.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-bright-data"&gt;
  &lt;/a&gt;
  1. Bright Data
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bright Data&lt;/strong&gt; is number one. 1 in the world, which provides a cost-effective way to perform large-scale, fast, and stable public web data collection, effortlessly convert unstructured data into structured data and deliver a superior customer experience, all while being completely transparent and compliant.&lt;/p&gt;

&lt;p&gt;Bright Data’s Nextgen Data Collector provides automated, personalized data flow in a single dashboard, regardless of collection size. From eCom trends and social media data to competitive intelligence and market research, datasets are tailored to business needs. Focus on your core business by accessing reliable industry data on autopilot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most efficient&lt;/li&gt;
&lt;li&gt;Most reliable&lt;/li&gt;
&lt;li&gt;Most flexible&lt;/li&gt;
&lt;li&gt;Fully Compliant&lt;/li&gt;
&lt;li&gt;24/7 Customer Support&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-scrapingbee"&gt;
  &lt;/a&gt;
  2) Scrapingbee
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scrapingbee&lt;/strong&gt; is a web scraping API that handles headless browsers and proxy management. It can run Javascript on pages and rotate proxies for every request so you get the raw HTML page without being blocked. They also have a dedicated API for Google search scraping&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supports JavaScript rendering&lt;/li&gt;
&lt;li&gt;It provides automatic proxy rotation.&lt;/li&gt;
&lt;li&gt;You can directly use this application on Google Sheet.&lt;/li&gt;
&lt;li&gt;The application can be used with a chrome web browser.&lt;/li&gt;
&lt;li&gt;Great for scraping Amazon&lt;/li&gt;
&lt;li&gt;Support Google search scraping&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-scrapingbot"&gt;
  &lt;/a&gt;
  3) Scraping-Bot
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ScrapingBot.io&lt;/strong&gt; is an effective tool for extracting data from a URL. Provides APIs tailored to your scraping needs: a generic API for fetching raw HTML from a page, a specialized API for scraping retail websites, and an API for scraping property listings from websites real estate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JS rendering (Headless Chrome)&lt;/li&gt;
&lt;li&gt;High-quality proxies&lt;/li&gt;
&lt;li&gt;Full Page HTML&lt;/li&gt;
&lt;li&gt;Up to 20 concurrent requests&lt;/li&gt;
&lt;li&gt;Geotargeting&lt;/li&gt;
&lt;li&gt;Allows for large bulk scraping needs&lt;/li&gt;
&lt;li&gt;Free basic usage monthly plan&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-newsdataio"&gt;
  &lt;/a&gt;
  4) Newsdata.io
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Newsdata.io&lt;/strong&gt; is a great tool if you want to extract news data from the web, as it is a news API, it crawls and stores huge amounts of news data in their database that you can access through Newsdata.io’s &lt;a href="https://newsdata.io/"&gt;news API&lt;/a&gt;. It provides access to structured news data in JSON format and allows access to its historical news database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get the latest news data with their news API&lt;/li&gt;
&lt;li&gt;The best alternative for Google news API.&lt;/li&gt;
&lt;li&gt;Advanced filters to get the most relevant data.&lt;/li&gt;
&lt;li&gt;Has massive news database to access.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-scraper-api"&gt;
  &lt;/a&gt;
  5) Scraper API
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scraper API&lt;/strong&gt; tool helps you manage proxy, browser, and CAPTCHA. This allows you to get HTML from any web page with a simple API call. It’s easy to integrate as you just need to send a GET request to the API endpoint with your API key and URL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Helps you to render JavaScript&lt;/li&gt;
&lt;li&gt;It allows you to customize the headers of each request as well as the request type&lt;/li&gt;
&lt;li&gt;The tool offers unparalleled speed and reliability which allows building scalable web scrapers&lt;/li&gt;
&lt;li&gt;Geolocated Rotating Proxies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-scrapestack"&gt;
  &lt;/a&gt;
  6) Scrapestack
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scrapestack&lt;/strong&gt; is a REST API for real-time web scraping. More than 2,000 companies use scrapestack and trust this dedicated API supported by apilayer. The scrapestack API allows businesses to scrape web pages in milliseconds, managing millions of proxy IPs, browsers, and CAPTCHAs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Uses a pool of 35+ million data centers and global IP addresses.&lt;/li&gt;
&lt;li&gt;Access to 100+ global locations to originate web scraping requests.&lt;/li&gt;
&lt;li&gt;Allows for simultaneous API requests.&lt;/li&gt;
&lt;li&gt;Supports CAPTCHA solving and JavaScript rendering.&lt;/li&gt;
&lt;li&gt;Free &amp;amp; premium options.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-agenty"&gt;
  &lt;/a&gt;
  7) Agenty
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Agenty&lt;/strong&gt; is a robotic process automation software for data scraping, text mining, and OCR.&lt;/p&gt;

&lt;p&gt;Creates an agent with just a few mouse clicks. This app helps you reuse all your processed data for your analytics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It enables you to integrate with Dropbox and secure FTP.&lt;/li&gt;
&lt;li&gt;Provides you with automatic email updates when your job is completed.&lt;/li&gt;
&lt;li&gt;You can view all activity logs for all events.&lt;/li&gt;
&lt;li&gt;Helps you to boost your business performance.&lt;/li&gt;
&lt;li&gt;Enables you to add business rules and custom logic with ease.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-importio"&gt;
  &lt;/a&gt;
  8) Import.io
&lt;/h2&gt;

&lt;p&gt;This web scraping tool helps you train your datasets by importing data from a specific webpage and exporting the data in CSV format. It is one of the best data scraper tools that allows you to integrate data into applications using APIs and webhooks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy interaction with webforms/logins&lt;/li&gt;
&lt;li&gt;Schedule data extraction&lt;/li&gt;
&lt;li&gt;You can store and access data by using Import.io cloud&lt;/li&gt;
&lt;li&gt;Gain insights with reports, charts, and visualizations&lt;/li&gt;
&lt;li&gt;Automate web interaction and workflows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-dexi-intelligent"&gt;
  &lt;/a&gt;
  9) Dexi Intelligent
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dexi intelligent&lt;/strong&gt; is a web scraping tool that allows you to convert an unlimited amount of web data into immediate business value. This web scraping tool allows you to save money and time for your company.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increased efficiency, accuracy, and quality&lt;/li&gt;
&lt;li&gt;Ultimate scale and speed for data intelligence&lt;/li&gt;
&lt;li&gt;Fast, efficient data extraction&lt;/li&gt;
&lt;li&gt;High scale knowledge capture&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#10-outwit"&gt;
  &lt;/a&gt;
  10) Outwit
&lt;/h2&gt;

&lt;p&gt;It’s a Firefox extension that you can get from the Firefox add-ons store. To purchase this product, you will have three distinct options based on your needs. 1. Professional edition, 2. Expert edition, and 3. Enterprise edition&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This data scraper tool allows you to grab contacts from the web and email source simply&lt;/li&gt;
&lt;li&gt;No programming skill is needed to exact data from sites using Outwit hub&lt;/li&gt;
&lt;li&gt;With just a single click on the exploration button, you can launch the scraping on hundreds of web pages&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#11-paresehub"&gt;
  &lt;/a&gt;
  11) PareseHub
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;ParseHub&lt;/strong&gt; is a free web scraping application. This advanced web scraper makes data extraction as simple as clicking the data you require. It is one of the best data scraping tools, allowing you to save your scraped data in any format for further analysis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clean text &amp;amp; HTML before downloading data&lt;/li&gt;
&lt;li&gt;The easy to use graphical interface&lt;/li&gt;
&lt;li&gt;This website scraping tool helps you to collect and store data on servers automatically&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#12-diffbot"&gt;
  &lt;/a&gt;
  12) Diffbot
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Diffbot&lt;/strong&gt; enables you to easily obtain various types of useful data from the web. You don’t have to pay for expensive web scraping or manual research. With AI extractors, the tool will allow you to extract structured data from any URL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Offers multiple sources of data form a complete, accurate picture of every entity&lt;/li&gt;
&lt;li&gt;Provide support to extract structured data from any URL with AI Extractors&lt;/li&gt;
&lt;li&gt;Helps you to scale up your extraction to 10,000s domains with &lt;/li&gt;
&lt;li&gt;Crawlbot&lt;/li&gt;
&lt;li&gt;Knowledge Graph feature offers accurate, complete, and deep data from the web that BI needs to produce meaningful insights.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#13-data-streamer"&gt;
  &lt;/a&gt;
  13) Data streamer
&lt;/h2&gt;

&lt;p&gt;The Data Stermer tool allows you to retrieve social media content from all over the internet. It is one of the best web scrapers for extracting critical metadata via natural language processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrated full-text search powered by Kibana and Elasticsearch&lt;/li&gt;
&lt;li&gt;Integrated boilerplate removal and content extraction based on information retrieval techniques&lt;/li&gt;
&lt;li&gt;Built on a fault-tolerant infrastructure and ensure high availability of information&lt;/li&gt;
&lt;li&gt;Easy to use and comprehensive admin console&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#14-fminer"&gt;
  &lt;/a&gt;
  14) FMiner
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;FMiner&lt;/strong&gt; is another popular web scraping, data extraction, crawling screen scraping, macro, and web support tool for Windows and Mac OS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Allows you to design a data extraction project by using an easy to use the visual editor&lt;/li&gt;
&lt;li&gt;Helps you to drill l through site pages using a combination of link structures, drop-down selections, or url pattern matching&lt;/li&gt;
&lt;li&gt;You can extract data from hard to crawl Web 2.0 dynamic websites&lt;/li&gt;
&lt;li&gt;Allows you to target website CAPTCHA protection with the help of third-party automated decaptcha services or manual entry&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#15-sequentum"&gt;
  &lt;/a&gt;
  15) Sequentum
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Sequentum&lt;/strong&gt; is a robust big data solution for dependable web data extraction. It is one of the best web scrapers for scaling your organization. It includes user-friendly features such as a visual point-and-click editor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract web data faster and faster way compares to other solution&lt;/li&gt;
&lt;li&gt;Help you to build web apps with the dedicated web API that allow you to execute web data directly from your website&lt;/li&gt;
&lt;li&gt;Helps you move between various platforms&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#16-mozenda"&gt;
  &lt;/a&gt;
  16) Mozenda
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Mozenda&lt;/strong&gt; extracts text, images, and PDF content from web pages. It is one of the best web scraping tools for organizing and preparing data files for publication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can collect and publish your web data to your preferred Bl tool or database&lt;/li&gt;
&lt;li&gt;Offers point-and-click interface to create web scraping agents in minutes&lt;/li&gt;
&lt;li&gt;Job Sequencer and Request Blocking features to harvest web data in a real-time&lt;/li&gt;
&lt;li&gt;Best in class account management and customer support&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#17-data-miner-chrome-extension"&gt;
  &lt;/a&gt;
  17) Data Miner Chrome Extension
&lt;/h2&gt;

&lt;p&gt;This &lt;strong&gt;Data Miner chrome extension&lt;/strong&gt; aids in web scraping and data acquisition. It allows you to scrape multiple pages and provides dynamic data extraction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scraped data is stored in local storage&lt;/li&gt;
&lt;li&gt;Multiple data selection types&lt;/li&gt;
&lt;li&gt;Web Scraper Chrome extension extracts data from dynamic pages&lt;/li&gt;
&lt;li&gt;Browse scraped data&lt;/li&gt;
&lt;li&gt;Export scraped data as CSV&lt;/li&gt;
&lt;li&gt;Import, Export sitemaps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Original Post:&lt;/strong&gt; &lt;a href="https://www.guru99.com/web-scraping-tools.html"&gt;https://www.guru99.com/web-scraping-tools.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>saas</category>
      <category>python</category>
    </item>
    <item>
      <title>Convert Markdown or md URL to HTML - MarkdownToHTML - Using JavaScript ft. showdownjs</title>
      <author>Shaswat Raj</author>
      <pubDate>Fri, 21 Jan 2022 05:47:12 +0000</pubDate>
      <link>https://dev.to/sh20raj/convert-markdown-or-md-url-to-html-markdowntohtml-using-javascript-ft-showdownjs-1med</link>
      <guid>https://dev.to/sh20raj/convert-markdown-or-md-url-to-html-markdowntohtml-using-javascript-ft-showdownjs-1med</guid>
      <description>&lt;p&gt;Markdown is a lightweight markup language for creating formatted text using a plain-text editor. John Gruber and Aaron Swartz created Markdown in 2004 as a markup language that is appealing to human readers in its source code form. &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Documentation :- &lt;a href="https://youtu.be/omtgsLp9hOI"&gt;https://youtu.be/omtgsLp9hOI&lt;/a&gt;&lt;br&gt;
Article Source :- &lt;a href="https://codexdindia.blogspot.com/2022/01/convert-markdown-or-md-url-to-html-using-javascript.html"&gt;https://codexdindia.blogspot.com/2022/01/convert-markdown-or-md-url-to-html-using-javascript.html&lt;/a&gt;&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;Using Markdown you will write(code) less and get more(static content).&lt;br&gt;
Code given below are basic JavaScript Codes. Easy to Understand you can modify it and make the functions more dynamic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will Use - &lt;a href="http://showdownjs.com/"&gt;showdownjs&lt;/a&gt; to do so :- &lt;a href="https://github.com/SH20RAJ/markdowntohtml"&gt;https://github.com/SH20RAJ/markdowntohtml&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Here is the code you can use to change your markdown to HTML and show the html on your Website.&lt;/p&gt;




&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://cdn.jsdelivr.net/npm/showdown/dist/showdown.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;div id="mycontent"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;

var converter = new showdown.Converter();
var md = '[**Showdown**](http://www.showdownjs.com) is *great*\n' +
         'because:\n\n' +
         ' - it\'s easy to use\n' +
         ' - it\'s extensible\n' +
         ' - works in the server and in the browser';
var html = converter.makeHtml(md);
  document.querySelector('#mycontent').innerHTML = html;

&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;See the Result Here :-&lt;/p&gt;



&lt;p&gt;&lt;a href="http://www.showdownjs.com/"&gt;Showdown&lt;/a&gt; is great because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it's easy to use&lt;/li&gt;
&lt;li&gt;it's extensible&lt;/li&gt;
&lt;li&gt;works in the server and in the browser&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;To Know more about showdownjs functions Visit &lt;a href="https://github.com/showdownjs/showdown/"&gt;GitHub&lt;/a&gt; or I will embed the markdown of GitHub here using the following code.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pro Tip :- Instead of Writing Code of MD in Js or Js Variable.&lt;br&gt;
-&amp;gt; write the Markdown Inside a div&lt;br&gt;
-&amp;gt; Make a variable and get the inner text of the div into it.&lt;br&gt;
-&amp;gt; Convert the md to html using showdown and&lt;br&gt;
change the innerHTML of that div to the new generated HTML&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#convert-a-markdown-containing-url-to-html-and-show-it"&gt;
  &lt;/a&gt;
  Convert a Markdown Containing URL to HTML and Show it.
&lt;/h1&gt;

&lt;p&gt;For this we will Use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"&gt;fetch Api&lt;/a&gt;.&lt;br&gt;
Here is the raw URL of showdownjs readme.md :- &lt;a href="https://github.com/showdownjs/showdown/raw/master/README.md"&gt;https://github.com/showdownjs/showdown/raw/master/README.md&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;We will fetch content of this URL then convert it to HTML and show on our website. See Demo on &lt;a href="https://codepen.io/SH20RAJ/pen/bGoyJqJ?editors=1010"&gt;Codepen&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://cdn.jsdelivr.net/npm/showdown/dist/showdown.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;div id="mypost"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
fetch('https://raw.githubusercontent.com/showdownjs/showdown/master/README.md').then(response =&amp;gt; response.text())
  .then(data =&amp;gt; {
  console.log(data);
  var converter = new showdown.Converter();
var md = data;
var html = converter.makeHtml(md);
  document.querySelector('#mypost').innerHTML = html;
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See the result on Codepen :- &lt;a href="https://codepen.io/SH20RAJ/pen/bGoyJqJ?editors=1010"&gt;https://codepen.io/SH20RAJ/pen/bGoyJqJ?editors=1010&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>sh20raj</category>
      <category>showdownjs</category>
      <category>markdown</category>
    </item>
    <item>
      <title>Basit Şekilde Test Ortamlarını  Otomatize Etmek</title>
      <author>Zeki Ahmet Bayar</author>
      <pubDate>Fri, 21 Jan 2022 05:33:29 +0000</pubDate>
      <link>https://dev.to/zeki/basit-sekilde-test-ortamlarini-otomatize-etmek-472m</link>
      <guid>https://dev.to/zeki/basit-sekilde-test-ortamlarini-otomatize-etmek-472m</guid>
      <description>&lt;p&gt;Gerek evde gerekse iş yerinde test ortamları hazırlamak çoğu zaman bir kabusa dönüşebiliyor. Bazı durumlarda ortam hazırlamak amacın yerine geçip saatleri aldığındaysa hem verim iş verimi oldukça düşüyor hem de dakikalar alacak bir task yerini saatlere bırakabiliyor.&lt;/p&gt;

&lt;p&gt;Bunun uzunca süredir farkında olsam da basit ortamlarımı otomatize edebilmek için sonunda bir adım attım. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%C5%9Fablon-haz%C4%B1rlamak"&gt;
  &lt;/a&gt;
  Şablon Hazırlamak
&lt;/h2&gt;

&lt;p&gt;Bu kısma testlerde sıkça kullandığım GNU/Linux dağıtımlarını listelemekle başladım. Listenin önde gelenleri ise &lt;strong&gt;Pardus 19.5 Server/XFCE&lt;/strong&gt;, &lt;strong&gt;Pardus 21.0 Server/XFCE&lt;/strong&gt; oldu. &lt;/p&gt;

&lt;p&gt;Bu dağıtımlar için ilk adımda sıklıkla ihtiyaç duyduğum gereksinimlerim ise,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SSH, git, dbus paketlerinin kurulu olması,&lt;/li&gt;
&lt;li&gt;Şablonu her klonladığımda basitçe hostname değiştirebilmek,&lt;/li&gt;
&lt;li&gt;Şablonu her klonladığımda basitçe ip adresini değiştirebilmek oldu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Paketleri kurmak kolaydı ancak son iki madde için birer betik yazmam gerekti. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#debian-tabanl%C4%B1-sistemlerde-hostname-de%C4%9Fi%C5%9Ftirmek"&gt;
  &lt;/a&gt;
  Debian Tabanlı Sistemlerde Hostname Değiştirmek
&lt;/h2&gt;

&lt;p&gt;El ile yapmak çok kolay da olsa şablonun içerisine yerleştirilecek bir script her ihtimalde işi çok daha kolaylaştıracağından bu iş için basit bir &lt;a href="https://gist.github.com/zekiahmetbayar/dc3ccb633710229475bf522c2ea8dc71"&gt;betik&lt;/a&gt; yazdım.&lt;/p&gt;

&lt;p&gt;Kullanımı ise şu şekilde;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod +x hostname_change.sh
sudo ./hostname_change.sh yeni_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#debian-tabanl%C4%B1-sistemlerde-ip-de%C4%9Fi%C5%9Ftirmek"&gt;
  &lt;/a&gt;
  Debian Tabanlı Sistemlerde Ip Değiştirmek
&lt;/h2&gt;

&lt;p&gt;Bu adımda ise bir ön gereksinim bulunmakta. Şablonun içerisinde bu betiği yerleştirmeden önce bir kez ip adresini sabitlemek gerekiyor. Bunun için &lt;a href="https://docs.liman.dev/sistem-yonetimi/kurulum/kurulum-sonrasi-temel-ayarlar"&gt;buradaki adres&lt;/a&gt; kullanılabilir.&lt;/p&gt;

&lt;p&gt;Sonrasında &lt;a href="https://gist.github.com/zekiahmetbayar/73800fd1155abacf658b75a49abf4544"&gt;betiği&lt;/a&gt; şablona yerleştirip aşağıdaki gibi kullanılabilir;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod +x ip_change.sh
sudo ./ip_change.sh yeni_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>testing</category>
      <category>linux</category>
      <category>bash</category>
    </item>
    <item>
      <title>Google Drive Beginners Guide: Tips and Tutorials</title>
      <author>Dome Poh</author>
      <pubDate>Fri, 21 Jan 2022 04:54:03 +0000</pubDate>
      <link>https://dev.to/domepoh/google-drive-beginners-guide-tips-and-tutorials-1j8l</link>
      <guid>https://dev.to/domepoh/google-drive-beginners-guide-tips-and-tutorials-1j8l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-google-drive"&gt;
  &lt;/a&gt;
  What is Google Drive?
&lt;/h2&gt;

&lt;p&gt;Google Drive is a popular cloud storage service that is powerful and easy to use. However, if you're new to cloud storage and haven't used competitors like Dropbox or Box, learning how to use Google Drive can be overwhelming. This guide will help make it easy. If you don't already have it on your phone, also click the download buttons below to download the app for Android or iOS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-google-drive-works"&gt;
  &lt;/a&gt;
  How Google Drive works?
&lt;/h2&gt;

&lt;p&gt;To get started with Google Drive, first the end user must create or sign in to a Google account. The end user then types &lt;a href="//drive.google.com"&gt;drive.google.com&lt;/a&gt; into his or her browser. Then, he or she clicks My Drive and sees all of his or her Drive folders. Then, the user can either upload files from his or her computer or create files in Google Drive. Alternatively, the end user can download an app to his or her device. Once the device is connected to the internet, the user can access his or her Drive from within the app. Files that the user adds to one Google Drive folder are available through the Google Drive web app or the Google Drive folder on each device.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-docs-slides-and-sheets"&gt;
  &lt;/a&gt;
  What are Docs, Slides and Sheets?
&lt;/h2&gt;

&lt;p&gt;Google Drive's suite of office applications comprises Google Docs, Google Slides and Google Sheets. The suite can be compared to Microsoft Office's word processor, presentation and spreadsheet programs. However, Google Docs lacks some features that those Microsoft Office programs have. The suite is simple, collaborative, and free. Each application enables users to create and edit documents, presentations and spreadsheets that they can store in Google Drive. Users can access the apps on the web using browsers including Google Chrome, Microsoft Internet Explorer, Edge, Mozilla Firefox, Apple Safari and Opera. There are also mobile apps for Google Android and Apple iOS. Each application also enables users to save, edit and share files in Microsoft Office formats.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-supported-files"&gt;
  &lt;/a&gt;
  Types of supported files
&lt;/h2&gt;

&lt;p&gt;As an online storage service, the primary concern for most cloud storage solutions is space, but the type of files supported may be significant to your users. Thankfully, Google Drive supports a lot of file types, including.jpg,.png,.gif, MPEG,.mov, and.avi - Learn more here.&lt;/p&gt;

&lt;p&gt;There are no file size limits on Google Drive. However, there may be limits on what can be stored depending on the type of file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documents:&lt;/strong&gt; Up to 1.02 million characters. If you convert a text document to Google Docs format, it can be up to 50 MB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spreadsheets:&lt;/strong&gt; Up to five million cells for spreadsheets that are created in or converted to Google Sheets.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Presentations:&lt;/strong&gt; Up to 100MB for presentations converted to Google Slides.&lt;/p&gt;

&lt;p&gt;All other files: Up to 5TB.&lt;/p&gt;

&lt;p&gt;This is all we have to get started using Google Drive. Follow this &lt;a href="https://gdrivetips.com"&gt;gdrivetips.com&lt;/a&gt; to learn more about google drive tips and tutorials.&lt;/p&gt;

</description>
      <category>googledrive</category>
      <category>tips</category>
      <category>cloudstorage</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What a Jar of Buttons Is Teaching Me About Trust</title>
      <author>Ashlee (she/her)</author>
      <pubDate>Fri, 21 Jan 2022 03:58:52 +0000</pubDate>
      <link>https://dev.to/ashleemboyer/what-a-jar-of-buttons-is-teaching-me-about-trust-jof</link>
      <guid>https://dev.to/ashleemboyer/what-a-jar-of-buttons-is-teaching-me-about-trust-jof</guid>
      <description>&lt;p&gt;For most of 2021, I felt defeated as a disabled woman in tech. Sexism and ableism were in every part of my life at a level I'd not experienced before. I'm very used to seeing both on the internet, but even that became too much. &lt;a href="https://ashleemboyer.com/blog/speaking-my-truth"&gt;In a job I held for most of the year, I suffered pay discrimination, biased treatment, and sexual harassment&lt;/a&gt;. When I escaped that situation, I knew I'd have a lot of healing ahead of me but I had no idea how much.&lt;/p&gt;

&lt;p&gt;One thing I've learned about what I went through is that far more people than I thought have a similar experience. What we went through may not have been very similar, but the effect of the trauma was. I think it has something to do with being in a survival mode, where all you can really think about and focus on is making it through. I think this is also a reason it can take so long to fully realize we're in traumatic situations.&lt;/p&gt;

&lt;p&gt;As soon as we're out of immediate danger, the full gravity of a the situation can set in. We can slow down and think about what happened because we're in a place that is safer than before. In the first several weeks of my job I currently hold, I was anxious &lt;em&gt;all of the time&lt;/em&gt;. The list of things contributing to that is long, but here are a few things that are top of mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Pressure to do well in a new job at a well-known company in the industry I work in.&lt;/strong&gt; I would consider this a normal pressure of being a working person.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Waiting for the other shoe to drop, because it always has.&lt;/strong&gt; If you don't know what this phrase means, I think &lt;a href="https://gothamist.com/arts-entertainment/the-phrase-waiting-for-the-other-shoe-to-drop-was-born-in-nyc"&gt;the explanation on gothamist.com&lt;/a&gt; is good.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Expecting toxic behavior and having a guard up ready to protect myself.&lt;/strong&gt; In the past, I've been called names, gaslit about facts clearly backed by documentation and timestamps, bullied into changing my mind (or caving into pressure, rather), severely under-leveled and underpaid, held to different and unexplained standards than men on my team, not taken seriously when reporting issues, ignored in team channels whether asking for help or proposing a discussion, and more. These things didn't just happen at my previous job, they've happened in many places. But the level of toxicity in that environment is the highest I've experienced.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I've seen the same therapist since right before the pandemic started. We have talked &lt;em&gt;&lt;strong&gt;endlessly&lt;/strong&gt;&lt;/em&gt; about the occupational dimension of wellness. We've talked about it so much, we also talk about overwhelming that dimension has been for me over the years.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Skipping ahead in my story a tiny bit, we joked last time we spoke that we have nothing to talk about now since my work stress is very low now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I told my therapist about the struggles I was having, where I felt anxious immediately after sending messages in team channels, was spending a lot of time figuring out how to word messages in what should be easy conversations, she asked me if I'd heard of Brené Brown's marble jar metaphor. You can see her explain the metaphor &lt;a href="https://brenebrown.com/videos/anatomy-trust-video/"&gt;in a talk on her website&lt;/a&gt;, but the gist is this: when people do even the smallest thing that improves your trust in them, it counts as a marble towards the marble jar. The more the jar fills up with marbles, the more you trust them.&lt;/p&gt;

&lt;p&gt;The lesson is that trust is built over time with seemingly small and insignificant moments. After taking some time to think and process the metaphor, I decided I wanted to make rebuilding trust a prioritized and visual experience. So I decided to get a jar but fill it with buttons instead of marbles. Dropping a marble in the jar would've been too noisy of an experience, and this endeavor could double as a cute and fun button-collecting journey. I picked up some regular-sized colorful buttons and some much larger diamond-looking buttons. I designated the extra special buttons for trust-building moments that made me feel incredibly valued and grateful.&lt;/p&gt;




&lt;p&gt;So far, this experience has been exactly what I need. Looking for all the good in my days had a similar effect to gratitude journals, I assume. I am looking more towards the good things than the bad, but not in a way that subscribes to toxic positivity. I'm still keenly aware that some bad things might happen, but I'm not expecting them to. I'm retraining my brain to look at situations in a more balanced and healthy way.&lt;/p&gt;

&lt;p&gt;Examples of moments that are button jar worthy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Getting thanked for vulnerability from multiple managers on my team.&lt;/strong&gt; Many of my previous experiences involve being told that I'm too emotional. Vulnerability has been the main thing that's brought me closer to the majority of people I know, so it's a relief to know that vulnerability is so valued.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Teammates engaging in discussions I start, and doing so in genuine and authentic ways.&lt;/strong&gt; In previous experiences, I've often gotten silence or dismissive responses. When teammates engage kindly and with interest, it shows we have a mutual goal to learn together and teach one another.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Getting asked questions about accessibility.&lt;/strong&gt; This is the first time I've been asked about accessibility regularly at work. It is so refreshing to be asked questions about my area of focus that is so deeply personal to me as a disabled person.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Having normal conversations in code review.&lt;/strong&gt; Code review is one area that I have a hard time in because in my experience, they either weren't a part of the development process or they weren't done in healthy ways with the right intentions. Seeing teammates regularly give each other compliments, share resources, discuss pros and cons, and being treated with all of that same kindness... it's hard to describe how valued it makes me feel.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To add to the very last point, I even found myself putting buttons in the jar for things that had nothing to do with me directly. Seeing teammates treat each other with kindness and respect showed me how they would likely treat me as well.&lt;/p&gt;




&lt;p&gt;In the new year, I plan to keep doing what I'm doing. I don't really subscribe to annual resolutions. I'll do this until it's not valuable for me anymore, which I hope is far off because I'm excited to see the jar fill up with buttons and become a really beautiful item on my desk. I want it to be a constant visual reminder of how far I've come on this journey to healing.&lt;/p&gt;

</description>
      <category>mentalhealth</category>
      <category>trust</category>
      <category>vulnerability</category>
      <category>workplacetrauma</category>
    </item>
    <item>
      <title>Laravel 8 Export Buttons In Datatables Example</title>
      <author>Techsolutionstuff</author>
      <pubDate>Fri, 21 Jan 2022 03:41:13 +0000</pubDate>
      <link>https://dev.to/techsolutionstuff/laravel-8-export-buttons-in-datatables-example-4pkh</link>
      <guid>https://dev.to/techsolutionstuff/laravel-8-export-buttons-in-datatables-example-4pkh</guid>
      <description>&lt;p&gt;In this tutorial I will give you example of laravel 8 export buttons in datatables example. If you want to export data in excel, pdf or csv file format in datatable then you have to add export button in your datatable. So, here I am show you how to add export button in datatable using jquery or  how to enable export button in datatable.&lt;/p&gt;

&lt;p&gt;Datatables provides datatable buttons plugin for add export buttons in datatable using jquery. After adding of export button, you can easily export data to CSV, Excel and PDF file also you can copy all datatable data in html format.&lt;/p&gt;

&lt;p&gt;So, let's see how to add export button in datatable using jquery.&lt;/p&gt;

&lt;p&gt;You need to add below javascript file cdn to add export button in datatable.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://code.jquery.com/jquery-3.5.1.js
https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js
https://cdn.datatables.net/buttons/1.6.2/js/dataTables.buttons.min.js
https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js
https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js
https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js
https://cdn.datatables.net/buttons/1.6.2/js/buttons.html5.min.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;And also add following CSS library files are loaded for use in this example to provide the styling of the table.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css
https://cdn.datatables.net/buttons/1.6.2/css/buttons.dataTables.min.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Add below javascript code in your script tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$(document).ready(function() {
    $('#export_example').DataTable( {
        dom: 'Bfrtip',
        buttons: [
            'copyHtml5',
            'excelHtml5',
            'csvHtml5',
            'pdfHtml5'
        ]
    } );
} );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;You might also like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://techsolutionstuff.com/post/laravel-8-remove-hide-columns-while-export-data-in-datatables"&gt;Read Also : Laravel 8 Remove/Hide Columns While Export Data In Datatables&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://techsolutionstuff.com/post/how-to-convert-php-array-to-json-object"&gt;Read Also : How To Convert PHP Array To JSON Object&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://techsolutionstuff.com/post/how-to-increase-session-lifetime-in-laravel"&gt;Read Also : How To Increase Session Lifetime In Laravel&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>laravel</category>
      <category>laravel8</category>
      <category>datatable</category>
      <category>export</category>
    </item>
    <item>
      <title>Fixing my BF1942 woes with Win32 APIs</title>
      <author>James Turner</author>
      <pubDate>Fri, 21 Jan 2022 03:40:44 +0000</pubDate>
      <link>https://dev.to/turnerj/fixing-my-bf1942-woes-with-win32-apis-48bh</link>
      <guid>https://dev.to/turnerj/fixing-my-bf1942-woes-with-win32-apis-48bh</guid>
      <description>&lt;p&gt;Battlefield 1942 was one of a number of great games I played when I was growing up. I was first introduced to the game through a demo disc on a magazine - it was the expansion "Secret Weapons of WWII". I spent many hours playing that demo and eventually managed to snag the complete set of the game with both expansions. It was game that ran pretty well on old hardware and have a lot of fun memories playing it.&lt;/p&gt;

&lt;p&gt;Jumping forward &lt;em&gt;several&lt;/em&gt; years, I wanted to give the old game another play. I knew the graphics wouldn't hold up but to play in its nostalgic sandbox would more than overcome that. I installed the game and the various patches, modified configuration files to use my monitor's native resolution (1080p) and tried to launch it. Unfortunately, it wouldn't launch at all.&lt;/p&gt;

&lt;p&gt;Some people online suggest it was issues with SecureROM as &lt;a href="https://www.rockpapershotgun.com/windows-10-safedisc-securom-drm"&gt;that no longer works with Windows 10&lt;/a&gt; while others suggest it is an issue with Direct Play. What ultimately solved it for me was an unofficial patch by a group called &lt;a href="https://team-simple.org/"&gt;Team Simple&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now with the game launching, I start to hear &lt;a href="https://www.youtube.com/watch?v=kaopMpvMZbg"&gt;the classic BF1942 main menu music&lt;/a&gt;. Sped through the profile setup, jumped to instant battle, picked my favourite level (Hellendoorn) and pressed start. The music changes to, in my opinion, &lt;a href="https://www.youtube.com/watch?v=IPMnEmkoPFs"&gt;an even more iconic piece when the level is loading&lt;/a&gt;. The progress bar moves maybe a quarter of the way and then... I'm back on my desktop.&lt;/p&gt;

&lt;p&gt;After going back and forth with settings and the resolution changes I made, I found it just didn't want to work in full screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DCr1QM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-initial-window-mode.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DCr1QM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-initial-window-mode.jpg" alt="Battlefield 1942 in Window mode" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For the sharp-eyed individuals, you might notice that this is actually playing through &lt;a href="https://parsec.app/"&gt;Parsec&lt;/a&gt; - this is part of &lt;a href="https://turnerj.com/blog/remote-desktop-experience-part-1-planning"&gt;my vision for a remote desktop experience&lt;/a&gt;. It actually plays great (no noticeable input lag) via Parsec, over Wi-Fi, from my desktop to my laptop. That said, I did try the game directly on that machine and it still crashed so something else was to blame.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While I could play in window mode, I couldn't actually move the window so I could see the whole screen. Anytime I attempted to drag the window, it would just bring the cursor back in the game. Tried shortcuts to maximise the window but none of those worked either.&lt;/p&gt;

&lt;p&gt;So what would any good programmer do? &lt;del&gt;Search for an existing solution online.&lt;/del&gt; Write their own program to fix it!&lt;/p&gt;

&lt;p&gt;Seemed like the fun thing to do anyway.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-plan"&gt;
  &lt;/a&gt;
  The Plan
&lt;/h2&gt;

&lt;p&gt;This is what I wanted to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get rid of the game's window border as it was just taking space&lt;/li&gt;
&lt;li&gt;Position the window so it is centered to the monitor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The second point is important - the menu displays at 800x600 but the game when loading and playing is at whatever resolution I configured in window mode. My plan was to build a launcher that would bootstrap the main game.&lt;/p&gt;

&lt;p&gt;I've messed around with removing borders from applications years back when I wanted to run a console application in the background. The way I achieved it back then was to invoke Win32 APIs from .NET and figured that would be a good starting place. My initial task was to find the APIs I need to use.&lt;/p&gt;

&lt;p&gt;Fortunately &lt;a href="https://github.com/dtgDTGdtg/SRWE/blob/b439859e15ca44b6c4715fdb015c321a49ef634a/SRWE/Window.cs"&gt;someone already found the APIs to use to remove borders and reposition the window&lt;/a&gt;. My job then was to work out how to bring that into my application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="c1"&gt;//A snippet of the code that helped me with the Win32 APIs from the Simple Runtime Window Editor (SRWE)&lt;/span&gt;
&lt;span class="c1"&gt;//Source: https://github.com/dtgDTGdtg/SRWE/blob/b439859e15ca44b6c4715fdb015c321a49ef634a/SRWE/Window.cs&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;RemoveBorders&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint&lt;/span&gt; &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_THICKFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_DLGFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_BORDER&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;^&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_THICKFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_DLGFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_BORDER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nStyle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nStyle&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_DLGMODALFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_WINDOWEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_CLIENTEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_STATICEDGE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;^&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_DLGMODALFRAME&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_WINDOWEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_CLIENTEDGE&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_STATICEDGE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nStyle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kt"&gt;uint&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSIZE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOMOVE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOACTIVATE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOOWNERZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSENDCHANGING&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_FRAMECHANGED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowPos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m_hWnd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I put together bits and pieces from that codebase like the remove border and window positioning code and combined it with additional API calls for monitor information. I needed the following Win32 APIs to do everything I wanted:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowinfo"&gt;GetWindowInfo&lt;/a&gt; (for the current window bounds)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-MonitorFromWindow"&gt;MonitorFromWindow&lt;/a&gt; (getting the monitor handle the window is on)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-GetMonitorInfoW"&gt;GetMonitorInfoW&lt;/a&gt; (getting the monitor bounds)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-SetWindowPos"&gt;SetWindowPos&lt;/a&gt; (setting the window position)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-SendMessageW"&gt;SendMessageW&lt;/a&gt; (to send &lt;code&gt;WM_EXITSIZEMOVE&lt;/code&gt; to the window, a tip from &lt;a href="https://github.com/dtgDTGdtg/SRWE#exitsizemove"&gt;SRWE&lt;/a&gt; - never checked if it was strictly necessary for BF1942 though)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowlongw"&gt;GetWindowLongW&lt;/a&gt; (getting window settings)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowlongw"&gt;SetWindowLongW&lt;/a&gt; (updating window settings)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After doing a rough integration with pieces from that codebase, I gave it a run and... my application crashed. I was using &lt;code&gt;process.MainWindowHandle&lt;/code&gt; to get BF1942's game window. Turns out that it isn't set till, well, there is a main window available. So I wrote some code to wait for that and bingo - it launched the game and worked!&lt;/p&gt;

&lt;p&gt;Well, it mostly worked - see BF1942 has an interesting quirk where it launches a new process when you end a match and go back to the main menu. This required me to write logic to track when processes changed while also still allowing it to exit when BF1942 is closed properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improving-the-win32-apis"&gt;
  &lt;/a&gt;
  Improving the Win32 APIs
&lt;/h2&gt;

&lt;p&gt;While my prototype worked, cobbled together from bits of SRWE and my own bits, I wasn't entirely happy with how I integrated the Win32 APIs. Below is the snippet of code I had that takes a window handle, gets the window's size, the monitor's size, calculates the position and finally sets it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;unsafe&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateWindowPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WINDOWINFO&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ref&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;windowDimensions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcWindow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorHandle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MonitorFromWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;LPMONITORINFO&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;cbSize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LPMONITORINFO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetMonitorInfoA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;monitorHandle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ref&lt;/span&gt; &lt;span class="n"&gt;monitorInfo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorDimensions&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcMonitor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowDimensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSIZE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOACTIVATE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOOWNERZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSENDCHANGING&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_FRAMECHANGED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowPos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HWND_TOPMOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uFlags&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WinAPI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WM_EXITSIZEMOVE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What I would prefer is to actually have it feel more like a typical .NET API, something more like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;UpdateWindowPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Window&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;monitorBounds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetCurrentMonitor&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;GetBounds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;windowBounds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetBounds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;monitorBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;windowBounds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Height&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All I'm doing is abstracting away the Win32 APIs but it makes my "business logic" here far cleaner. While doing this, I also decided to remove the pieces of SRWE and replace it with a more maintainable interface to the APIs.&lt;/p&gt;

&lt;p&gt;I tried out both &lt;a href="https://github.com/terrafx/terrafx.interop.windows"&gt;TerraFX.Interop.Windows&lt;/a&gt; and &lt;a href="https://github.com/microsoft/CsWin32"&gt;CsWin32&lt;/a&gt;, ultimately settling on the latter. CsWin32 was a little less intimidating as the API is generated based on strings in a text file rather than containing everything at once. Also I like jumping to definition of types to read more and explore APIs etc and doing that to one of the types in the TerraFX library crashed Visual Studio. That's more of a VS problem than a TerraFX library but still - CsWin32 would work great for what I'm doing.&lt;/p&gt;

&lt;p&gt;The way I went about achieving my desired interface to the Win32 APIs I needed was via creating record-struct wrappers around the various native handles and having instance methods wrap the API calls themselves. For example, below is my &lt;code&gt;Window&lt;/code&gt; type that I have most of my functionality hanging off of.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;Window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nint&lt;/span&gt; &lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="n"&gt;HWND&lt;/span&gt; &lt;span class="n"&gt;Win32Handle&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Monitor&lt;/span&gt; &lt;span class="nf"&gt;GetCurrentMonitor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;nint&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MonitorFromWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SetPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSIZE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOACTIVATE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOOWNERZORDER&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_NOSENDCHANGING&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SET_WINDOW_POS_FLAGS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SWP_FRAMECHANGED&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowPos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HWND_TOPMOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WM_EXITSIZEMOVE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Rectangle&lt;/span&gt; &lt;span class="nf"&gt;GetBounds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;windowInfo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;WINDOWINFO&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;ref&lt;/span&gt; &lt;span class="n"&gt;windowInfo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;From&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;windowInfo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcWindow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;RemoveBorders&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="p"&gt;~(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;WINDOW_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_THICKFRAME&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_DLGFRAME&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_BORDER&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_STYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;style&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;=&lt;/span&gt; &lt;span class="p"&gt;~(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_DLGMODALFRAME&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_WINDOWEDGE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_CLIENTEDGE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WINDOW_EX_STYLE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WS_EX_STATICEDGE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SetWindowLong&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WINDOW_LONG_PTR_INDEX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GWL_EXSTYLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SendMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Win32Handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PInvoke&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WM_EXITSIZEMOVE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-end-result"&gt;
  &lt;/a&gt;
  The End Result
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mR3JsVcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-menu-window.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mR3JsVcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-menu-window.jpg" alt="BF1942 in a borderless window for the intro cinematics" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9togV0ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-borderless-fullscreen.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9togV0ai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://turnerj.com/blog/images/fixing-bf1942-borderless-fullscreen.jpg" alt="BF1942 in a borderless window at fullscreen" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I called my project &lt;em&gt;Borderless 1942&lt;/em&gt; and &lt;a href="https://github.com/Turnerj/Borderless1942"&gt;is available on GitHub&lt;/a&gt;. It is a self-contained, single-file .NET 6 application. Because it is self-contained, you don't need .NET 6 installed to run it.&lt;/p&gt;

&lt;p&gt;I'm quite happy that I got this working and could enjoy the game again. In terms of the code, the main thing I'd want to change is to move from a constant loop resetting the window position to something that listens on window resize events. This is possible via the Win32 APIs but has its own complications which I haven't got around to addressing yet.&lt;/p&gt;

&lt;p&gt;I'm also looking at turning the style of wrapper I wrote into a dedicated library. There seems to be &lt;a href="https://www.reddit.com/r/dotnet/comments/r1pz3x/would_you_wantuse_an_improved_interface_to_native/"&gt;some interest&lt;/a&gt; in improved access to the Win32 APIs. I don't know how far I'd go with it (what Win32 APIs I'd support) but I think it could make this a lot easier for developers in certain situations.&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>win32</category>
    </item>
  </channel>
</rss>
