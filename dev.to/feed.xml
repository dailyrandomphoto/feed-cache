<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>New benchmark: Mezon Router VS Power Router</title>
      <author>alexdodonov</author>
      <pubDate>Wed, 23 Jun 2021 09:42:29 +0000</pubDate>
      <link>https://dev.to/alexdodonov/new-benchmark-mezon-router-vs-power-router-5h4g</link>
      <guid>https://dev.to/alexdodonov/new-benchmark-mezon-router-vs-power-router-5h4g</guid>
      <description>&lt;p&gt;Hi all! Today we have one more benchmark.&lt;/p&gt;

&lt;p&gt;As usual we have two cases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;http server accepts request, launches php script, which handles this request, and then all script data is removed from memory. All following requests are processed in the same way. In this case very critical to launch script as soon as possible and we do not have time for long pre-compilations and preparations. Because all of it will be lost after the script will finish working;&lt;/li&gt;
&lt;li&gt;php script is launching, initiating all internal components (and router is one of them) and then starting processing requests. This case can be organized via for example react-php. It differs from the previous case because we can spend reasonable time to pre-compile routes for faster processing.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#the-first-case"&gt;
  &lt;/a&gt;
  The first case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-second-case"&gt;
  &lt;/a&gt;
  The second case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ok-what-do-we-have"&gt;
  &lt;/a&gt;
  OK What do we have?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#the-first-case-static-routes"&gt;
  &lt;/a&gt;
  The first case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| benchmark                          | subject     | set | revs | its | mem_peak    | best          | mean          | mode          | worst         | stdev        | rstdev | diff    |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| CoffeeSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 2,936,232b  | 41,057.300μs  | 84,148.370μs  | 47,592.655μs  | 249,780.200μs | 74,221.744μs | 88.20% | 48.66x  |
| DVKSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,392,992b  | 25,714.700μs  | 26,682.450μs  | 26,362.514μs  | 28,618.500μs  | 819.301μs    | 3.07%  | 15.43x  |
| HoaSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,847,864b  | 44,176.400μs  | 47,097.030μs  | 45,321.883μs  | 63,058.400μs  | 5,365.782μs  | 11.39% | 27.23x  |
| IBSingleRequestStaticBench         | benchStatic | 0   | 10   | 10  | 3,471,624b  | 126,073.700μs | 130,365.100μs | 128,767.356μs | 143,720.600μs | 4,833.922μs  | 3.71%  | 75.39x  |
| MezonSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 2,287,376b  | 9,073.900μs   | 9,357.890μs   | 9,297.606μs   | 9,896.300μs   | 236.985μs    | 2.53%  | 5.41x   |
| MiladSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 33,649,608b | 29,915.300μs  | 30,749.180μs  | 30,291.549μs  | 33,174.000μs  | 977.528μs    | 3.18%  | 17.78x  |
| PeceeSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 7,085,072b  | 36,595.500μs  | 37,232.050μs  | 37,031.929μs  | 38,438.600μs  | 554.518μs    | 1.49%  | 21.53x  |
| PowerSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 3,862,216b  | 19,049.200μs  | 20,140.870μs  | 19,808.905μs  | 21,000.000μs  | 643.417μs    | 3.19%  | 11.65x  |
| SteampixelSingleRequestStaticBench | benchStatic | 0   | 10   | 10  | 2,566,392b  | 207,734.200μs | 210,574.660μs | 210,950.748μs | 212,526.200μs | 1,389.866μs  | 0.66%  | 121.77x |
| ToroSingleRequestStaticBench       | benchStatic | 0   | 10   | 10  | 1,745,216b  | 1,476.200μs   | 1,729.290μs   | 1,583.368μs   | 2,666.700μs   | 346.981μs    | 20.06% | 1.00x   |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-first-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The first case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+---------------+--------+--------+
| benchmark                         | subject    | set | revs | its | mem_peak     | best          | mean          | mode          | worst         | stdev         | rstdev | diff   |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+---------------+--------+--------+
| CoffeeSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 3,903,272b   | 53,137.000μs  | 53,669.140μs  | 53,434.041μs  | 54,304.600μs  | 398.649μs     | 0.74%  | 4.85x  |
| DVKSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 3,385,376b   | 29,081.100μs  | 30,110.190μs  | 29,726.930μs  | 31,490.000μs  | 755.289μs     | 2.51%  | 2.72x  |
| HoaSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 4,165,464b   | 45,786.400μs  | 46,825.120μs  | 46,833.564μs  | 47,952.800μs  | 583.437μs     | 1.25%  | 4.23x  |
| IBSingleRequestParamBench         | benchParam | 0   | 10   | 10  | 3,592,344b   | 145,910.100μs | 147,746.210μs | 147,306.262μs | 150,106.800μs | 1,239.601μs   | 0.84%  | 13.36x |
| MezonSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 139,508,728b | 124,171.600μs | 126,109.060μs | 125,425.730μs | 130,917.500μs | 1,915.883μs   | 1.52%  | 11.41x |
| MiladSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 34,508,144b  | 35,645.000μs  | 36,320.080μs  | 36,141.269μs  | 37,270.600μs  | 527.261μs     | 1.45%  | 3.28x  |
| PeceeSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 6,669,256b   | 75,824.900μs  | 84,586.110μs  | 78,820.332μs  | 109,839.700μs | 10,653.230μs  | 12.59% | 7.65x  |
| PowerSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 3,862,216b   | 20,937.700μs  | 28,584.620μs  | 24,077.098μs  | 40,265.800μs  | 7,123.452μs   | 24.92% | 2.59x  |
| SteampixelSingleRequestParamBench | benchParam | 0   | 10   | 10  | 2,666,344b   | 235,446.700μs | 348,940.010μs | 297,900.248μs | 691,357.600μs | 128,878.867μs | 36.93% | 31.56x |
| ToroSingleRequestParamBench       | benchParam | 0   | 10   | 10  | 1,866,176b   | 9,774.800μs   | 11,056.990μs  | 10,512.857μs  | 12,358.000μs  | 835.968μs     | 7.56%  | 1.00x  |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+---------------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-static-routes"&gt;
  &lt;/a&gt;
  The second case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+-----------------+---------------+--------+------------+
| benchmark                  | subject     | set | revs | its | mem_peak   | best          | mean          | mode          | worst           | stdev         | rstdev | diff       |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+-----------------+---------------+--------+------------+
| CoffeeReactStaticBench     | benchStatic | 0   | 10   | 10  | 2,409,400b | 7,916.900μs   | 8,434.210μs   | 8,309.219μs   | 9,401.900μs     | 425.183μs     | 5.04%  | 410.30x    |
| DVKReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,652,296b | 10,289.710μs  | 10,796.560μs  | 10,512.391μs  | 13,365.110μs    | 864.430μs     | 8.01%  | 525.23x    |
| HoaReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,893,936b | 3,576.030μs   | 3,622.525μs   | 3,606.191μs   | 3,731.710μs     | 43.214μs      | 1.19%  | 176.23x    |
| IBReactStaticBench         | benchStatic | 0   | 10   | 10  | 3,034,880b | 25,829.300μs  | 26,309.220μs  | 26,380.221μs  | 26,774.000μs    | 303.353μs     | 1.15%  | 1,279.88x  |
| MezonReactStaticBench      | benchStatic | 0   | 100  | 10  | 1,908,208b | 18.630μs      | 20.556μs      | 18.987μs      | 25.150μs        | 2.436μs       | 11.85% | 1.00x      |
| MiladReactStaticBench      | benchStatic | 0   | 10   | 10  | 5,275,192b | 15,524.100μs  | 16,269.690μs  | 16,402.613μs  | 17,264.100μs    | 511.121μs     | 3.14%  | 791.48x    |
| PeceeReactStaticBench      | benchStatic | 0   | 10   | 10  | 4,243,936b | 19,101.900μs  | 20,167.700μs  | 19,701.218μs  | 22,467.300μs    | 1,012.717μs   | 5.02%  | 981.11x    |
| PowerReactStaticBench      | benchStatic | 0   | 10   | 10  | 3,029,632b | 15,172.800μs  | 15,635.430μs  | 15,559.212μs  | 16,680.100μs    | 397.706μs     | 2.54%  | 760.63x    |
| SteampixelReactStaticBench | benchStatic | 0   | 10   | 10  | 2,605,560b | 239,026.100μs | 346,973.110μs | 250,424.922μs | 1,209,825.800μs | 288,217.061μs | 83.07% | 16,879.41x |
| ToroReactStaticBench       | benchStatic | 0   | 10   | 10  | 1,734,616b | 351.800μs     | 382.130μs     | 364.151μs     | 480.600μs       | 39.107μs      | 10.23% | 18.59x     |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+-----------------+---------------+--------+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The second case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| benchmark                 | subject    | set | revs | its | mem_peak   | best          | mean          | mode          | worst         | stdev        | rstdev | diff    |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| CoffeeReactParamBench     | benchParam | 0   | 10   | 10  | 2,409,368b | 8,548.600μs   | 9,257.830μs   | 8,950.739μs   | 10,758.200μs  | 640.445μs    | 6.92%  | 6.19x   |
| DVKReactParamBench        | benchParam | 0   | 100  | 10  | 2,656,688b | 14,344.960μs  | 18,446.126μs  | 16,842.581μs  | 31,828.310μs  | 4,840.866μs  | 26.24% | 12.34x  |
| HoaReactParamBench        | benchParam | 0   | 100  | 10  | 3,360,824b | 3,862.030μs   | 4,972.977μs   | 4,750.023μs   | 6,237.760μs   | 730.301μs    | 14.69% | 3.33x   |
| IBReactParamBench         | benchParam | 0   | 10   | 10  | 3,157,360b | 43,412.000μs  | 59,080.640μs  | 54,258.725μs  | 95,701.400μs  | 14,431.920μs | 24.43% | 39.52x  |
| MezonReactParamBench      | benchParam | 0   | 100  | 10  | 3,129,488b | 1,178.510μs   | 1,494.984μs   | 1,341.991μs   | 2,096.520μs   | 283.938μs    | 18.99% | 1.00x   |
| MiladReactParamBench      | benchParam | 0   | 10   | 10  | 5,402,688b | 22,573.900μs  | 28,562.900μs  | 24,596.006μs  | 49,765.900μs  | 8,124.021μs  | 28.44% | 19.11x  |
| PeceeReactParamBench      | benchParam | 0   | 10   | 10  | 4,625,032b | 47,438.500μs  | 53,523.160μs  | 49,062.308μs  | 71,146.100μs  | 8,897.750μs  | 16.62% | 35.80x  |
| PowerReactParamBench      | benchParam | 0   | 10   | 10  | 3,029,632b | 16,629.600μs  | 17,320.220μs  | 17,040.916μs  | 18,338.400μs  | 523.710μs    | 3.02%  | 11.59x  |
| SteampixelReactParamBench | benchParam | 0   | 10   | 10  | 2,664,712b | 250,206.800μs | 270,897.140μs | 256,660.290μs | 299,426.700μs | 16,652.239μs | 6.15%  | 181.20x |
| ToroReactParamBench       | benchParam | 0   | 10   | 10  | 1,785,112b | 8,329.400μs   | 8,866.510μs   | 8,599.075μs   | 9,795.400μs   | 478.527μs    | 5.40%  | 5.93x   |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in some cases Power Router is the fastest router, in some cases it is not, but still shows good results.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h1&gt;

&lt;p&gt;More articles can be found in my &lt;a href="https://twitter.com/mezonphp"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-mezonrouter"&gt;
  &lt;/a&gt;
  What is mezon/router?
&lt;/h1&gt;

&lt;p&gt;mezon/router now is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;framework for routing with &lt;strong&gt;100% code coverage&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10.0 points&lt;/strong&gt; on scrutinizer-ci.com&lt;/li&gt;
&lt;li&gt;router is a part of the &lt;a href="https://github.com/alexdodonov/mezon"&gt;Mezon Project&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repo on github.com: &lt;a href="https://github.com/alexdodonov/mezon-router"&gt;https://github.com/alexdodonov/mezon-router&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#it-will-be-great-if-you-will-contribute-something-to-this-project-documentation-sharing-the-project-in-your-social-media-bug-fixing-refactoring-or-even-submitting-issue-with-question-or-feature-request-thanks-anyway-"&gt;
  &lt;/a&gt;
  It will be great if you will contribute something to this project. Documentation, sharing the project in your social media, bug fixing, refactoring, or even &lt;strong&gt;&lt;a href="https://github.com/alexdodonov/mezon-router/issues"&gt;submitting issue with question or feature request&lt;/a&gt;&lt;/strong&gt;. Thanks anyway )
&lt;/h1&gt;

</description>
      <category>php</category>
      <category>router</category>
      <category>mezon</category>
      <category>benchmark</category>
    </item>
    <item>
      <title>Django Custom Commands - Tutorial for Beginners</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 23 Jun 2021 09:40:53 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-custom-command-2mj5</link>
      <guid>https://dev.to/sm0ke/django-custom-command-2mj5</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article explains how to write our own &lt;strong&gt;Django custom commands&lt;/strong&gt; that might help us to test, upload data or extract valuable information in a production environment from a Django project. For newcomers, Django is a popular web framework designed and written in Python by experienced developers. The main advantage of &lt;strong&gt;custom command&lt;/strong&gt; is that all Django machinery is loaded and ready to be used. That means you can import models, execute queries to the database using &lt;strong&gt;Django&lt;/strong&gt;’s ORM and interact with all your project’s resources.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new Django App and Update Django to use it&lt;/li&gt;
&lt;li&gt;Visualize the required directory structure inside the app&lt;/li&gt;
&lt;li&gt;Code end execute a few custom commands:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;cmd_time.py&lt;/code&gt; - show current timestamp&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cmd_apps&lt;/code&gt;    - list all registered apps&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cmd_models&lt;/code&gt;  - list all apps and associated models&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cmd_showcfg&lt;/code&gt; - list all CFG keys and values&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://github.com/app-generator/django-learn-by-coding"&gt;source code&lt;/a&gt; can be found on Github (MIT License)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#create-a-new-django-app"&gt;
  &lt;/a&gt;
  Create a new Django App
&lt;/h2&gt;

&lt;p&gt;This tutorial assumes that we have a working Django project and we will move forward and create a new app via &lt;code&gt;startapp&lt;/code&gt; subcommand:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py startapp app_customcmd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the new &lt;code&gt;app&lt;/code&gt; directory, we need to create a directory structure as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt; PROJECT ROOT &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                          &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; project directory
 |
 |-- app_customcmd/                                &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; app directory
 |    |-- management/
 |    |    +-- __init__.py
 |    |    +-- commands/
 |    |         +-- __init__.py
 |    |         +-- cmd_....py  &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; module where all commands are saved
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have built and configure Django to use the new app, all commands defined in &lt;code&gt;commands&lt;/code&gt; directory are automatically discovered even without an application restart. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Configure Django to use the app&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To execute our custom commands we need to activate &lt;code&gt;app_customcmd&lt;/code&gt; in the project configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.admin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.auth'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.contenttypes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.sessions'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.messages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.staticfiles'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'app_customcmd'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;               &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#custom-commands"&gt;
  &lt;/a&gt;
  Custom Commands
&lt;/h2&gt;

&lt;p&gt;This section presents for custom commands that will access and report a few things related to a Django project internals - Let's go! &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#show-current-time"&gt;
  &lt;/a&gt;
  Show Current Time
&lt;/h3&gt;

&lt;p&gt;This simple custom command help us to accommodate with the concept. Here is the code, saved in the &lt;code&gt;app_customcmd/management/commands&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays current time'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%X'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"It's %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The actual executed code resides in the &lt;code&gt;handle&lt;/code&gt; method and the execution should display something similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py cmd_time
It&lt;span class="s1"&gt;'s 09:18:08                &amp;lt;-- The output from our custom CMD
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The most important aspect regarding the code is the usage of &lt;code&gt;BaseCommand&lt;/code&gt; as a super-class for our definition. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#show-registered-apps"&gt;
  &lt;/a&gt;
  Show Registered Apps
&lt;/h3&gt;

&lt;p&gt;This sample will iterate over all registered and active apps and print their names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.apps&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays registered apps'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_app_configs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" APP -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Script execution and output:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py cmd_apps
 APP -&amp;gt; Administration                     &lt;span class="c"&gt;# Default Django App   &lt;/span&gt;
 APP -&amp;gt; Authentication and Authorization   &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Content Types                      &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Sessions                           &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Messages                           &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Static Files                       &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; App_Customcmd                      &lt;span class="c"&gt;# &amp;lt;-- Our NEW App   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#show-models-for-each-app"&gt;
  &lt;/a&gt;
  Show models for each app
&lt;/h3&gt;

&lt;p&gt;This command is quite similar with the previous one, but provide also the registered models for each app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.apps&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays registered apps and models'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="c1"&gt;# Iterate over apps
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_app_configs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" APP -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# Iterate over models                                # &amp;lt;-- New Code 
&lt;/span&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_models&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;                       &lt;span class="c1"&gt;# &amp;lt;-- New Code 
&lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt; |- (model) -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;-- New Code
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The execution and output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py cmd_models
 APP -&amp;gt; Administration
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.admin.models.LogEntry'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 APP -&amp;gt; Authentication and Authorization
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.auth.models.Permission'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.auth.models.Group'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.auth.models.User'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 APP -&amp;gt; Content Types
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.contenttypes.models.ContentType'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 APP -&amp;gt; Sessions
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.sessions.models.Session'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;        
 APP -&amp;gt; Messages
 APP -&amp;gt; Static Files
 APP -&amp;gt; App_Forms
 APP -&amp;gt; App_Pdf
 APP -&amp;gt; App_Customcmd
 APP -&amp;gt; App
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'app.models.Book'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#print-config-variables"&gt;
  &lt;/a&gt;
  Print Config Variables
&lt;/h3&gt;

&lt;p&gt;This custom command scan the &lt;code&gt;settings&lt;/code&gt; object for proprieties and print all values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays project config'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="c1"&gt;# type( settings ) =&amp;gt; &amp;lt;class 'django.conf.LazySettings'&amp;gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# settings.__dict__
&lt;/span&gt;
        &lt;span class="c1"&gt;# Iterate over apps
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" Cfg Key: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The output and execution:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;env&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; PS D:&lt;span class="se"&gt;\w&lt;/span&gt;ork&lt;span class="se"&gt;\r&lt;/span&gt;epo-samples&lt;span class="se"&gt;\d&lt;/span&gt;jango-learn-by-coding&amp;gt; python manage.py cmd_showcfg
 Cfg Key: _wrapped -&amp;gt; &amp;lt;Settings &lt;span class="s2"&gt;"config.settings"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 Cfg Key: INSTALLED_APPS -&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'django.contrib.admin'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.auth'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.contenttypes'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.sessions'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.messages'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.staticfiles'&lt;/span&gt;, &lt;span class="s1"&gt;'app_forms'&lt;/span&gt;, &lt;span class="s1"&gt;'app_pdf'&lt;/span&gt;, &lt;span class="s1"&gt;'app_customcmd'&lt;/span&gt;, &lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
 Cfg Key: DEBUG -&amp;gt; True
 Cfg Key: LOGGING_CONFIG -&amp;gt; logging.config.dictConfig
 Cfg Key: LOGGING -&amp;gt; &lt;span class="o"&gt;{}&lt;/span&gt;
 Cfg Key: DEFAULT_EXCEPTION_REPORTER -&amp;gt; django.views.debug.ExceptionReporter
 Cfg Key: FORCE_SCRIPT_NAME -&amp;gt; None
 Cfg Key: DEFAULT_TABLESPACE -&amp;gt;
 Cfg Key: DEFAULT_AUTO_FIELD -&amp;gt; django.db.models.BigAutoField
 Cfg Key: ABSOLUTE_URL_OVERRIDES -&amp;gt; &lt;span class="o"&gt;{}&lt;/span&gt;
 Cfg Key: AUTH_USER_MODEL -&amp;gt; auth.User
 Cfg Key: DATABASES -&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'default'&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'ENGINE'&lt;/span&gt;: &lt;span class="s1"&gt;'django.db.backends.sqlite3'&lt;/span&gt;, &lt;span class="s1"&gt;'NAME'&lt;/span&gt;: WindowsPath&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'D:/work/repo-samples/django-learn-by-coding/db.sqlite3'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="s1"&gt;'ATOMIC_REQUESTS'&lt;/span&gt;: False, &lt;span class="s1"&gt;'AUTOCOMMIT'&lt;/span&gt;: True, &lt;span class="s1"&gt;'CONN_MAX_AGE'&lt;/span&gt;: 0, &lt;span class="s1"&gt;'OPTIONS'&lt;/span&gt;: &lt;span class="o"&gt;{}&lt;/span&gt;, &lt;span class="s1"&gt;'TIME_ZONE'&lt;/span&gt;: None, &lt;span class="s1"&gt;'USER'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'PASSWORD'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'HOST'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'PORT'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'TEST'&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'CHARSET'&lt;/span&gt;: None, &lt;span class="s1"&gt;'COLLATION'&lt;/span&gt;: None, &lt;span class="s1"&gt;'MIGRATE'&lt;/span&gt;: True, &lt;span class="s1"&gt;'MIRROR'&lt;/span&gt;: None, &lt;span class="s1"&gt;'NAME'&lt;/span&gt;: None&lt;span class="o"&gt;}}}&lt;/span&gt;
...
&lt;span class="o"&gt;(&lt;/span&gt;truncated output&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Writing custom commands in our Django projects might help us to extract stats, execute cron jobs, and check the health of a project that runs in production. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources and support, feel free to access: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.djangoproject.com/en/3.2/howto/custom-management-commands/"&gt;Writing custom commands&lt;/a&gt; - official docs&lt;/li&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/admin-dashboards/django"&gt;Django starters&lt;/a&gt; provided by &lt;strong&gt;AppSeed&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://appseed.us/"&gt;Support&lt;/a&gt; (email and Discord) - for &lt;strong&gt;registered users&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>P42 for Visual Studio Code</title>
      <author>Lars Grammel</author>
      <pubDate>Wed, 23 Jun 2021 09:09:49 +0000</pubDate>
      <link>https://dev.to/p42/p42-for-visual-studio-code-1k8o</link>
      <guid>https://dev.to/p42/p42-for-visual-studio-code-1k8o</guid>
      <description>&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/manage/publishers/p42ai"&gt;P42 for Visual Studio Code&lt;/a&gt; is now available in the Visual Studio Marketplace. &lt;br&gt;
The &lt;strong&gt;free extension includes all refactorings and code modernizations&lt;/strong&gt; that are available in P42. It can be used on all repositories and runs entirely locally.&lt;/p&gt;

&lt;p&gt;When you open a JavaScript or TypeScript file, P42 will automatically detect code that could be modernized and highlight it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S_NlXgXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/em34ngxdy3enqtma8j9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_NlXgXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/em34ngxdy3enqtma8j9p.png" alt="P42 for Visual Studio Code example highlight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then effortlessly update your code using the Quick Fix function. &lt;/p&gt;

&lt;p&gt;With P42 for Visual Studio Code, you can learn new JavaScript patterns right in your IDE, make sure new code follows best practices, and modernize older code gradually.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/manage/publishers/p42ai"&gt;Try out P42 for Visual Studio Code today!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Dynamic Classes and Styles</title>
      <author>Lakshya Singh</author>
      <pubDate>Wed, 23 Jun 2021 08:31:45 +0000</pubDate>
      <link>https://dev.to/king11/dynamic-classes-and-styles-3lff</link>
      <guid>https://dev.to/king11/dynamic-classes-and-styles-3lff</guid>
      <description>&lt;p&gt;In this article, I aim to provide a not so new but also not so known way of adding &lt;strong&gt;dynamic features&lt;/strong&gt; into your application, ensuring that you can achieve what you wish to simply &lt;strong&gt;without&lt;/strong&gt; writing &lt;em&gt;boilerplate code&lt;/em&gt; and meddling with &lt;em&gt;string concatenation&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When writing Dynamic UI Components that respond to user actions and events, we require methods to respond to these events by translating them into our DOM. Change in DOM is usually achieved by changing &lt;em&gt;styles&lt;/em&gt; and &lt;em&gt;classes&lt;/em&gt; based on certain &lt;strong&gt;reactive data&lt;/strong&gt; that we have in our javascript. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mW_2s21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yydg0rqygblvb6ptde80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mW_2s21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yydg0rqygblvb6ptde80.png" alt="old methods work but we can do better"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While we can certainly do string concatenation, calculate a string and then bind a string to class or style... this method is error-prone and cumbersome at times to deal with. That's where Vue.js's clean suite of enhancements come into vue &lt;em&gt;( french for 'view' )&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#quick-recap-data-binding"&gt;
  &lt;/a&gt;
  Quick Recap Data Binding
&lt;/h2&gt;

&lt;p&gt;If you aren't familiar with what data binding is....it's essentially binding any attribute of an element in your &lt;code&gt;template&lt;/code&gt; to the data available in your &lt;code&gt;script&lt;/code&gt; tag, which can be props,  data or computed properties.&lt;/p&gt;

&lt;p&gt;Data binding is one of the most elegant features of Vue.js because it provides reactive data binding with a straightforward syntax using &lt;code&gt;v-bind&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; 
  &lt;span class="na"&gt;v-bind:class=&lt;/span&gt;&lt;span class="s"&gt;"dynamicClass"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello World!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A shorthand for data binding is but just using &lt;code&gt;:&lt;/code&gt; and then the attribute name, which I guess anyone would prefer using more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"dynamicClass"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello World!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's suppose that the above class is not &lt;em&gt;a once initialized and stays the same&lt;/em&gt; kind of class it changes based on user input, so we have to use a &lt;code&gt;computed&lt;/code&gt; property or &lt;code&gt;watch&lt;/code&gt; to make changes to our &lt;code&gt;dynamicClass&lt;/code&gt; variable. So things will start to look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;changingBoolean&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;dynamicClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="na"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center text-lg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-justify text-xl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Looking at the code above we can see that for a simple switch in classes based on a variable we had to write so much code. So simply creating a dynamic class won't work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUIPGl8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrk2i5plh0gmifib1bi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUIPGl8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrk2i5plh0gmifib1bi.gif" alt="we don't do simple data binding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#array-syntax-for-classes"&gt;
  &lt;/a&gt;
  Array Syntax for Classes
&lt;/h2&gt;

&lt;p&gt;Enter array syntax which makes the previous task less cumbersome and also keeps it DRY at times when needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"[changingBoolean : ? 'text-center' : 'text-justify']"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Hello World!
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This looks so much cleaner than the previous method right ≧◠‿◠≦✌. But it's an array so we can add multiple values into it too :). Now we can toggle the text alignment class while flex and width will always be present.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"[changingBoolean : ? 'text-center' : 'text-justify', 'flex w-2']"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Hello World!
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#object-syntax-for-classes"&gt;
  &lt;/a&gt;
  Object Syntax for Classes
&lt;/h2&gt;

&lt;p&gt;Sometimes we just want to add toggle a single class on/off when a boolean is &lt;code&gt;true&lt;/code&gt; and nothing when it's &lt;code&gt;false&lt;/code&gt;. Using ternary operator it will look as below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex w-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can do better, enter &lt;strong&gt;object syntax&lt;/strong&gt; because eventually, everything is an object in javascript so why not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/gkEwPJyg6CxtVQ5rzK/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/gkEwPJyg6CxtVQ5rzK/giphy-downsized.gif" alt="I object as in javascript everything is an object"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex w-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also bind an object directly to &lt;em&gt;class&lt;/em&gt; instead of keeping it inside an array and it also supports multiple togglable classes just like an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute"&lt;/span&gt;
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ active: isActive, 'text-xl': largeText }"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;active&lt;/code&gt; is a simple string variable for class whereas &lt;code&gt;isActive&lt;/code&gt; and &lt;code&gt;largeText&lt;/code&gt; are boolean variables. Also if you noticed &lt;em&gt;class&lt;/em&gt; and &lt;em&gt;&lt;code&gt;:class&lt;/code&gt;&lt;/em&gt; can simultaneously exist on a single element ツ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#passing-in-objects"&gt;
  &lt;/a&gt;
  Passing in Objects
&lt;/h3&gt;

&lt;p&gt;We can also pass in reactive &lt;code&gt;array/object&lt;/code&gt; stored in our &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;computed&lt;/code&gt; to classes. This can be a more powerful pattern at times when you have to do multiple checks and toggling which when accommodated into HTML won't look good and readable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"classObject"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#modifying-child-classes"&gt;
  &lt;/a&gt;
  Modifying Child Classes
&lt;/h2&gt;

&lt;p&gt;Suppose we have a nice and shiny icon element we have specified several classes to it which works for most cases so we didn't bother making it a prop. But a time came when we had to change its colour in that case we want to pass down a new class to our child.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;my-icon&lt;/span&gt;
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"text-blue-600"&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the &lt;code&gt;:class&lt;/code&gt; will be appended at the end of the class inside of our component's parent. We can obviously also send in a simple &lt;code&gt;_class_&lt;/code&gt; too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#array-and-object-syntax-for-styles"&gt;
  &lt;/a&gt;
  Array and Object Syntax for Styles
&lt;/h2&gt;

&lt;p&gt;The array and object syntax for classes and style looks exactly identical except for a very minor change. It's not about the truthiness of variables anymore it's about assigning them to the right CSS property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; 
&lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ marginTop: marginTop + 'px', backgroundColor: infoColor }"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Doge Coin
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we are assigning the &lt;code&gt;color&lt;/code&gt; property a dynamic value and a similar operation for &lt;code&gt;fontSize&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can write properties as kebab case too just ensure to wrap them in quotes&lt;/li&gt;
&lt;li&gt;It can be more powerful to directly pass in an object to &lt;code&gt;style&lt;/code&gt; which is a more readable and cleaner method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose for array syntax in style reduces to allowing us to pass in multiple objects &lt;em&gt;( Duhhh that's what arrays do right :P )&lt;/em&gt; for style as passing a string to style works won't make much sense in the special syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; 
&lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"[marginObject, backgroundObject]"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Doge Coin
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus-treats"&gt;
  &lt;/a&gt;
  Bonus Treats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ZAXpoT2WEYO3u/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ZAXpoT2WEYO3u/giphy.gif" alt="Bonus treats extra vue knowledge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some CSS properties require us to use vendor prefixes. Vue will apply them for us implicitly but if you want to be explicit you can pass in multiple values for a single property through object syntax and providing an array of values. Vue will only render the last value in the array which the browser supports.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading! :). Please share your thoughts about the array and object syntax would you prefer them over strings?&lt;/p&gt;

&lt;p&gt;Reach out to me on &lt;a href="https://twitter.com/1108King"&gt;Twitter&lt;/a&gt; to share your feedback or for any queries. I'd be more than happy to help!&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>HASP dongle emulator</title>
      <author>Oscar</author>
      <pubDate>Wed, 23 Jun 2021 08:27:08 +0000</pubDate>
      <link>https://dev.to/oscar37921395/hasp-dongle-emulator-4ioe</link>
      <guid>https://dev.to/oscar37921395/hasp-dongle-emulator-4ioe</guid>
      <description>&lt;p&gt;Put simply, a USB security dongle is a small gadget you can connect to your computer’s port and instantly get access to some protected hardware or software. More’s the pity, using them on a daily basis is not free from shortcomings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;All modern computers, especially laptops, have very few USB ports. Sometimes, that’s just not enough to plug in another license key that you need to launch that app you can’t follow up with your project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some software distributors only supply one or two dongles with every license. If you have a sizable staff, having to share those keys will become a real problem. Plus, you’re going to spend a small fortune for replacements, every time one (or both) of those is damaged or just somehow disappears into thin air.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Accessing a USB security dongle from a virtual environment also involves some difficulties. Very few guest operating systems come with a built-in function that can help you connect to USB devices plugged into the host machine’s ports.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The good news is, all of these issues and many more can be easily resolved by applying HASP dongle emulator software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-most-convenient-app-for-dongle-emulation"&gt;
  &lt;/a&gt;
  The most convenient app for dongle emulation
&lt;/h2&gt;

&lt;p&gt;If you’re after an easy-to-use failsafe dongle emulator, download &lt;a href="https://www.donglify.net/"&gt;Donglify&lt;/a&gt;. With its aid, you can make a HASP key accessible from multiple users’ PCs in parallel, and from about anywhere, as long as that place has network coverage. Best of all, dongle emulation is perfectly legal and has absolutely nothing to do with any sort of cracking or unauthorized copying.&lt;/p&gt;

&lt;p&gt;Being a topline dongle emulator for HASP keys, Donglify creates fully functional virtual copies of a USB device you can attach to a whole host of remote operating systems, both real and virtual. Also, it is compatible with every dongle brand on the market, and specifically with all HASP security models.&lt;/p&gt;

&lt;p&gt;Caution! Don’t risk losing your license trying to crack a security dongle or make illegal copies. We strongly encourage going with fair virtual copies, created by dedicated dongle emulsion software, e.g. Donglify.&lt;/p&gt;

&lt;p&gt;Keep on reading and you’ll find out how easy it is to use this specific dongle HASP emulator.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#easy-and-quick-usb-dongle-key-emulation"&gt;
  &lt;/a&gt;
  Easy and quick USB dongle key emulation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s9HPkJ6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gwan8jfp7jz92m4uvex.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s9HPkJ6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gwan8jfp7jz92m4uvex.jpeg" alt="doglify interface"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;Donglify&lt;/strong&gt;, emulating a USB dongle key will only take you a few simple steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Start with &lt;a href="https://account.donglify.net/user/login/?_ga=2.238071232.1343017826.1623680568-144886415.1618985525"&gt;signing up for your own Donglify account&lt;/a&gt; on the official website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then download the app and install it both on the machine that is directly connected to a security key (server) and on all the client PCs or virtual guest systems that you want to have an emulated copy of that key.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run &lt;strong&gt;Doinglify&lt;/strong&gt; on the server and use your login credential to enter your account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once you click the “+” icon, you’ll see a list of shareable local USB devices. Find the security key you need and click “Share” next to its name. After that, the security dongle becomes available for emulation on every remote PC that needs it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, run the app and log into your account on a client machine or guest OS. Find your key on the list and click “Connect” next to its name.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it! From this point on, the dongle key appears in the Device Manager of a remote PS or the guest OS, like if it was connected to that machine directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some top-of-the-league dongle options&lt;/strong&gt;&lt;br&gt;
Donglify has no limits as to the brand or model of supported dongle keys. Still and all, we’ve prepared this the best of the best list for you to start out strong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sentinel-hl-pro"&gt;
  &lt;/a&gt;
  Sentinel HL Pro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1nSQxYvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igpv0m8k4pcpfzvmk9wa.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1nSQxYvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igpv0m8k4pcpfzvmk9wa.jpeg" alt="Sentinel HL dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Sentinel HL Pro is known and loved for its top-tier security level. On top of that, it comes with a read-only memory and performs onboard read/write operations.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Up to 64,000 AES encryption keys to use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Over 39 features or apps can be protected with a single key.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;32 and 64-bit Windows-compatible ApOnChip (with upgrades).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3 cryptographic algorithms: AES 128, ECC 163, and RSA 2048.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SmartCard chip for extra speed and efficiency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remote firmware upgrades for the field devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complete match with the Sentinel HASP dongle emulator (i.a. Donglify).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hasp-hl-%E2%80%8B%E2%80%8Bpro"&gt;
  &lt;/a&gt;
  HASP HL ​​Pro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hj7JrH_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4zcg0v1i7xl51ecmm8e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hj7JrH_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4zcg0v1i7xl51ecmm8e.gif" alt="Sentinel HASP HL dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Sentinel HASP HL Pro is a multi-platform security dongle prevalently used for licensed software protection.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Over 39 features or apps protected with a single key.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Works in Windows, Linux, and Mac.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;128-bit AES encryption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remote firmware upgrades for the field devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;112 bytes of protected memory with 3 config options: protected read/write, read-only, and backward compatibility.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#safenet-etoken-5110"&gt;
  &lt;/a&gt;
  SafeNet eToken 5110
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udJLe8q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tefs6et9nktggnsnorh7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udJLe8q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tefs6et9nktggnsnorh7.jpeg" alt="SafeNet eToken 5110 dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The SafeNet eToken 5110 with its two-factor authentication is widely used by electronic commerce companies to secure their online and network assets, and comply with data security and privacy regulations.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No reader device is needed for portable USB tokens.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Digital signatures and pre-boot authentication for enhanced security.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2 versions: Common Criteria and FIPS-certified.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Secure access to remote digital assets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can be used with no technical knowledge or specific training.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#codemeter-cmstick"&gt;
  &lt;/a&gt;
  CodeMeter CmStick
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oOUJU5wn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ip6t9gge03niqa5zl29c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oOUJU5wn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ip6t9gge03niqa5zl29c.jpeg" alt="CodeMeter CmStick dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CodeMeter CmStick has 328 Kb of memory and can store multiple licenses at the same time. Mostly used in scenarios when a host of license-protected apps are distributed by the same company as a package deal.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Infineon SLM97 smart card chip.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hyperstone U9 flash controller for robust data protection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Patented hymap firmware to ensure zero power loss.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Encrypted CmSecureDisk partition for software-generated and config data protection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Full compatibility with CodeMeter dongle emulator (i.a. Donglify).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aladdin-hasp4-dongle"&gt;
  &lt;/a&gt;
  Aladdin HASP4 Dongle
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NgpMes6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1anf334i2i20rfe818co.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NgpMes6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1anf334i2i20rfe818co.jpeg" alt="Aladdin HASP Dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aladdin HASP Dongle was originally created for Parallel Ports (LPT) and is still extremely popular with software developers, e.g. Time Limit and Module Definition, that use those dongles as MCU chips and EPROOM.&lt;/p&gt;

&lt;p&gt;Key features of Aladdin HASP Dongle Emulator:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Digitally signed for smooth functioning in 64 bit Windows systems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If there is a Time Limit, it can be removed completely.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All modules connected to the dongle will be defined in the software you use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Optional hardware reproduction. ( Hardware Clone ).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Aladdin USB dongle emulator is compatible with VMWare, Virtualbox, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dongle</category>
      <category>usbkey</category>
      <category>emulator</category>
    </item>
    <item>
      <title>Damn Vulnerable GraphQL Application</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Wed, 23 Jun 2021 08:24:42 +0000</pubDate>
      <link>https://dev.to/graphqleditor/damn-vulnerable-graphql-application-1jf5</link>
      <guid>https://dev.to/graphqleditor/damn-vulnerable-graphql-application-1jf5</guid>
      <description>&lt;p&gt;Usually in these when I write about some library or app I try to highlight its strengths. Well this time I’m going to do the complete opposite and talk about weaknesses. Rest assured it won't be some scorching review, because we’re looking at &lt;a href="https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application"&gt;Damn Vulnerable GraphQL Application&lt;/a&gt; where weaknesses are completely intentional and exploiting them is the whole point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-why-and-the-how"&gt;
  &lt;/a&gt;
  The Why and the How
&lt;/h2&gt;

&lt;p&gt;As for why it's fairly obvious, as GraphQL continues to grow and become more popular so too do the concerns about its vulnerabilities. After all, if you want to use it for your app you probably want it to be secure. So yes Damn Vulnerable GraphQL Application is full of weaknesses by design, it's meant to test GraphQL’s safety against various attacks. Let’s look at these types of attacks (or scenarios) you can try out:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#denial-of-service"&gt;
  &lt;/a&gt;
  Denial of Service
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Batch Query Attack&lt;/li&gt;
&lt;li&gt;Deep Recursion Query Attack&lt;/li&gt;
&lt;li&gt;Resource Intensive Query Attack&lt;/li&gt;
&lt;li&gt;Field Duplication Attack&lt;/li&gt;
&lt;li&gt;Aliases based Attack&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#information-disclosure"&gt;
  &lt;/a&gt;
  Information Disclosure
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Field Suggestions&lt;/li&gt;
&lt;li&gt;GraphQL Introspection&lt;/li&gt;
&lt;li&gt;GraphiQL Interface&lt;/li&gt;
&lt;li&gt;GraphQL Field Suggestions&lt;/li&gt;
&lt;li&gt;Server Side Request Forgery&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#code-execution"&gt;
  &lt;/a&gt;
  Code Execution
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;OS Command Injection #1&lt;/li&gt;
&lt;li&gt;OS Command Injection #2&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#injection"&gt;
  &lt;/a&gt;
  Injection
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Stored Cross-Site Scripting&lt;/li&gt;
&lt;li&gt;Log spoofing / Log injection&lt;/li&gt;
&lt;li&gt;HTML Injection&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#authorization-bypass"&gt;
  &lt;/a&gt;
  Authorization Bypass
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Interface Protection Bypass&lt;/li&gt;
&lt;li&gt;GraphQL Query Deny List Bypass&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Query Weak Password Protection&lt;/li&gt;
&lt;li&gt;Arbitrary File Write / Path Traversal&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qYLd8joe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5g3wyrp4y058wxh44ly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qYLd8joe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5g3wyrp4y058wxh44ly.png" alt="Damn Vulnerable GraphQL Application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-githubcomdolevfdamnvulnerablegraphqlapplication"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application"&gt;github.com/dolevf/Damn-Vulnerable-GraphQL-Application&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#safe-and-sound"&gt;
  &lt;/a&gt;
  Safe and sound
&lt;/h2&gt;

&lt;p&gt;So as you can see it provides you with a bunch of attacks you can try out against GraphQL using some pretty well known methods from DoS to directory traversal attack. It's safe because by default the application is listening on 127.0.0.1 (ie. localhost) so you don't have to be afraid someone can actually attack your app. You can change that, but because of its vulnerabilities opening it up to the internet is not advisable. On the technical side DVGA also has two operation modes, Beginner and Expert, which change the exploitation difficulty. As far as requirements go you will need some Python3 libraries for it to actually work: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python3, &lt;/li&gt;
&lt;li&gt;Flask, &lt;/li&gt;
&lt;li&gt;Flask-SQLAlchemy,&lt;/li&gt;
&lt;li&gt;Graphene and Graphene-SQLAlchemy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#and-also-fun"&gt;
  &lt;/a&gt;
  ...and also fun!
&lt;/h2&gt;

&lt;p&gt;At first glance it might look like something for security experts, but it's actually pretty fun to just try and poke around looking for holes. There’s no risk involved so you can actually just have some fun while learning a thing or two about the various types of vulnerabilities and attacks. So if you’re interested in app security in general or just always wanted to play hacker for a bit definitely give DVGA a spin.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Michał Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" alt="New features of GraphQL Editor gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>security</category>
      <category>webdev</category>
      <category>testing</category>
    </item>
    <item>
      <title>Top 7 Popular Npm Packages</title>
      <author>Innocent Coder</author>
      <pubDate>Wed, 23 Jun 2021 08:22:00 +0000</pubDate>
      <link>https://dev.to/innocentcoder/top-7-popular-npm-packages-45n7</link>
      <guid>https://dev.to/innocentcoder/top-7-popular-npm-packages-45n7</guid>
      <description>&lt;p&gt;Node.Js Applications Benefit From More Than A Million Open-Source Packages Available In The NPM Package Registry.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dotenv"&gt;
  &lt;/a&gt;
  Dotenv
&lt;/h1&gt;

&lt;p&gt;.env file into process.env. storing configuration in the environment eparate from code is based on the twelve-factor app methodology.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JAzPmEY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gc6am7dhot6s10f1zny.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JAzPmEY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gc6am7dhot6s10f1zny.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#bcrypt"&gt;
  &lt;/a&gt;
  Bcrypt
&lt;/h1&gt;

&lt;p&gt;bcrypt is a library that help youeasily hash password and compare&lt;br&gt;
the in node.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ClnGcBcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kxbvin838mt0dxt2qku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ClnGcBcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kxbvin838mt0dxt2qku.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#uuid"&gt;
  &lt;/a&gt;
  Uuid
&lt;/h1&gt;

&lt;p&gt;uuid is a unique random ids values generator. it generates strong random values &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l8dO02Lw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd0ufidy7k2naafek8q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l8dO02Lw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd0ufidy7k2naafek8q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#axios"&gt;
  &lt;/a&gt;
  Axios
&lt;/h1&gt;

&lt;p&gt;axios is a popular promise based http client for the browser and&lt;br&gt;
node.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---pzZN7fj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvecwxm963k15muecayl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---pzZN7fj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvecwxm963k15muecayl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#socketio"&gt;
  &lt;/a&gt;
  Socket.Io
&lt;/h1&gt;

&lt;p&gt;socket.io enables realtime bi-directional communication between web clients and servers &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IpjSfXg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdhf1t8v2eqxqjrmuo9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IpjSfXg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdhf1t8v2eqxqjrmuo9b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#moment"&gt;
  &lt;/a&gt;
  Moment
&lt;/h1&gt;

&lt;p&gt;moment.js is a data library for parsing, validating, manipulating&lt;br&gt;
and formatting dates &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rnb2oRPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8mnellhezhj5leld3md.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rnb2oRPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8mnellhezhj5leld3md.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h1&gt;

&lt;p&gt;loadsh is very useful, when working with numbers, array, objects,&lt;br&gt;
strings, etc. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---sSJwhxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u137dz6bpqcr1s6vdd0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---sSJwhxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u137dz6bpqcr1s6vdd0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow on instagram for more content like this&lt;/strong&gt;:- &lt;a href="https://instagram.com/innocentcoderr/"&gt;https://instagram.com/innocentcoderr/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/my-secret-design-resources-27f4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My Secret Design Resources&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ Jun 11 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#design&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>npm</category>
      <category>node</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>4 no code code tools I actually use and love as a developer</title>
      <author>Budibase</author>
      <pubDate>Wed, 23 Jun 2021 08:20:14 +0000</pubDate>
      <link>https://dev.to/budibase/4-no-code-code-tools-i-actually-use-and-love-as-a-developer-4lk4</link>
      <guid>https://dev.to/budibase/4-no-code-code-tools-i-actually-use-and-love-as-a-developer-4lk4</guid>
      <description>&lt;p&gt;No code and low code platforms will not replace developers. And I vehemently disagree with the following article/statement:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;'80% of tech could be built outside IT by 2024, thanks to low-code tools' &lt;br&gt;
&lt;a href="https://venturebeat.com/2021/06/14/80-of-tech-could-be-built-outside-it-by-2024-thanks-to-low-code-tools/"&gt;Venture Beat&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The tools that promote this balderdash are misdirected, and generally out-of-touch with the development ecosystem.&lt;/p&gt;

&lt;p&gt;On the other hand, the following 4 no code and low code tools are major productivity boosts and help me, as a developer, produce more in less amount of time. In some cases, the quality of my output has increased too. These tools, from using their products, reading their materials and engaging with their communities, are developer-led with an ambition of facilitating, accelerating and improving the developer experience. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's not about replacing the dev experience, it's about augmenting it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moving on, let me present to you the 4 no-code / low-code tools I actually use and love as a developer:&lt;/p&gt;







&lt;h2&gt;
  &lt;a href="#budibase"&gt;
  &lt;/a&gt;
  Budibase
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OV9XGWz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9fziylxhh2y7kmms81o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OV9XGWz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9fziylxhh2y7kmms81o.png" alt="Budibase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Budibase is an open source low code platform for building internal tools / CRUD apps in minutes. Since its release into beta ~6 months ago, it's amassed 3.8k Github stars, and 50,000 downloads.&lt;/p&gt;

&lt;p&gt;Budibase differs from other low code platforms in a number of ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It has a built-in database&lt;/li&gt;
&lt;li&gt;It offers a simple, streamlined SQL experience &lt;/li&gt;
&lt;li&gt;Users can create apps with multiple screens&lt;/li&gt;
&lt;li&gt;It has an automations section allowing users to automate tedious, manual tasks&lt;/li&gt;
&lt;li&gt;Components are accessible&lt;/li&gt;
&lt;li&gt;It outputs real SPAs and the apps are 10x more performant than other platforms&lt;/li&gt;
&lt;li&gt;It outputs responsive apps&lt;/li&gt;
&lt;li&gt;It's open source and free&lt;/li&gt;
&lt;li&gt;The UI is slick and comes with dark mode 🌚&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#check-out-the-budibase"&gt;
  &lt;/a&gt;
  Check out the &lt;a href="https://github.com/Budibase/budibase"&gt;Budibase&lt;/a&gt;
&lt;/h3&gt;







&lt;h2&gt;
  &lt;a href="#n8n"&gt;
  &lt;/a&gt;
  n8n
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jkZ-yHpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cq17bncc004rpi98r6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkZ-yHpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cq17bncc004rpi98r6i.png" alt="n8n"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My life would reach max CPU levels if weren't for n8n. From Discord notifications to weather updates, n8n keeps me informed and automates a plethora of manual tasks. &lt;/p&gt;

&lt;p&gt;It's license fair code and pretty straight forward to get started with. Previous to n8n, I used Integromat which is also a wonderful tool. I made the move to n8n because I found the community more helpful and the product more extensible. The user experience is very developer focused, and in my opinion, n8n is very much in the low-code category rather than no-code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-out-n8n"&gt;
  &lt;/a&gt;
  Check out &lt;a href="https://github.com/n8n-io/n8n"&gt;n8n&lt;/a&gt;
&lt;/h3&gt;







&lt;h2&gt;
  &lt;a href="#voiceflow"&gt;
  &lt;/a&gt;
  Voiceflow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4A80u_yC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09wxidjk0cyh0tbezhf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4A80u_yC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09wxidjk0cyh0tbezhf8.png" alt="Voiceflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I love Voiceflow. As a smart speaker fanatic, I love creating games, quizzes, and other voice apps. Voiceflow is my tool of choice and allows me to design, prototype, and build all my voice apps without messing about with code.&lt;/p&gt;

&lt;p&gt;Voiceflow has a very generous free plan, which includes unlimited projects, all the core features, and community support. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-out-voiceflow"&gt;
  &lt;/a&gt;
  Check out &lt;a href="https://www.voiceflow.com/"&gt;Voiceflow&lt;/a&gt;
&lt;/h3&gt;







&lt;h2&gt;
  &lt;a href="#stripe-payment-links"&gt;
  &lt;/a&gt;
  Stripe payment links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fXTALaSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzrxx50r48olwyjtq9hz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXTALaSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzrxx50r48olwyjtq9hz.png" alt="Stripe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have created many, many side projects over the years as a developer. I loved building side projects, I didn't mind marketing them, but I downright detested creating contracts and payment workflows. &lt;/p&gt;

&lt;p&gt;But, thankfully, the other week, this changed. My girlfriend's sister sells these &lt;a href="https://www.etsy.com/uk/shop/jennieandcompany"&gt;cool teddy bears online&lt;/a&gt;, and asked me to setup a quick way to accept payments outside of Etsy (I'm the "IT person" in my family). I was a little lacklustre about the whole affair, until I experienced Stripe Payment Links. Wow. It is  incredible! The whole end to end project took a few mins and the UX was, as expected, seamless. If you need to sell something online, in a rush, Stripe payment links is perfecto!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-out-stripe-payment-links"&gt;
  &lt;/a&gt;
  Check out &lt;a href="https://stripe.com/en-gb/payments/payment-links"&gt;Stripe Payment links&lt;/a&gt;
&lt;/h3&gt;







&lt;p&gt;I hope you find this post, and the above tools helpful. I wish you the best of luck on your development journey.&lt;/p&gt;

&lt;p&gt;Thank-you ❤️&lt;/p&gt;

</description>
      <category>lowcode</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>nocode</category>
    </item>
    <item>
      <title>Build dark mode theme toggle in React</title>
      <author>Ravi Ojha</author>
      <pubDate>Wed, 23 Jun 2021 07:47:59 +0000</pubDate>
      <link>https://dev.to/raviojha/part-2-build-dark-mode-theme-toggle-4c25</link>
      <guid>https://dev.to/raviojha/part-2-build-dark-mode-theme-toggle-4c25</guid>
      <description>&lt;p&gt;I got my inspiration for this post from &lt;a href="https://dev.to/murtuzaalisurti/dark-mode-toggle-animation-using-css-27il"&gt;Article&lt;/a&gt; By &lt;a class="mentioned-user" href="https://dev.to/murtuzaalisurti"&gt;@murtuzaalisurti&lt;/a&gt;
 &lt;/p&gt;

&lt;p&gt;Pre-requisite:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/raviojha" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OOR3vEAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ECwz9yqj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/377054/04887500-a4f8-4086-99f4-d16f6b772d54.jpeg" alt="raviojha"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/raviojha/setting-up-react-project-from-scratch-1g3k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Setting up React Project from Scratch&lt;/h2&gt;
      &lt;h3&gt;Ravi Ojha ・ May 30 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;In this post we will build a dark mode theme toggle. This is what we are aiming for:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RvHYnaRN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rujidbrcznzs10apd1jo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RvHYnaRN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rujidbrcznzs10apd1jo.gif" alt="sun-moon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nice, Let's start !!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-follow-everything-from-here-also-mentioned-in-prerequisite-to-start-with-react-project-from-basic"&gt;
  &lt;/a&gt;
  1. Follow everything from &lt;a href="https://dev.to/raviojha/setting-up-react-project-from-scratch-1g3k"&gt;Here&lt;/a&gt; (Also mentioned in pre-requisite) to start with react project from basic.
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;I just created a new folder &lt;code&gt;sun-moon&lt;/code&gt; and copied everything from the previous &lt;a href="https://dev.to/raviojha/setting-up-react-project-from-scratch-1g3k"&gt;post&lt;/a&gt; (&lt;code&gt;react-from-scratch&lt;/code&gt;) except &lt;code&gt;node_modules&lt;/code&gt; and did a fresh &lt;code&gt;npm i&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#2-add-raw-cssloader-endraw-and-raw-minicssextractplugin-endraw-as-dependency"&gt;
  &lt;/a&gt;
  2. Add &lt;code&gt;css-loader&lt;/code&gt; and &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; as dependency:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i css-loader mini-css-extract-plugin &lt;span class="nt"&gt;-D&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will allow us to import &lt;code&gt;css&lt;/code&gt; in our &lt;code&gt;js&lt;/code&gt; file, as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// in App.js file&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, let's create &lt;code&gt;App.css&lt;/code&gt; in &lt;code&gt;src&lt;/code&gt; folder and import it in &lt;code&gt;App.js&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-update-raw-webpackconfigjs-endraw-to-include-raw-cssloader-endraw-and-raw-minicssextractplugin-endraw-to-this"&gt;
  &lt;/a&gt;
  3. Update &lt;code&gt;webpack.config.js&lt;/code&gt; to include &lt;code&gt;css-loader&lt;/code&gt; and &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; to this:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;html-webpack-plugin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MiniCssExtractPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mini-css-extract-plugin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bundle.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js|jsx&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(\.&lt;/span&gt;&lt;span class="sr"&gt;scss|&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;css&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;MiniCssExtractPlugin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;css-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./public/index.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MiniCssExtractPlugin&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#4-create-raw-sun-endraw-and-raw-moon-endraw-component"&gt;
  &lt;/a&gt;
  4. Create &lt;code&gt;Sun&lt;/code&gt; and &lt;code&gt;Moon&lt;/code&gt; component
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;This is basically going to contain &lt;code&gt;Sun/Moon&lt;/code&gt; &lt;code&gt;svg&lt;/code&gt; as react component.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can get Sun and Moon SVG from here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.svgrepo.com/svg/19198/sun"&gt;Sun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.svgrepo.com/svg/327439/moon"&gt;Moon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although, We can manually create &lt;code&gt;React Component&lt;/code&gt; from &lt;code&gt;SVG&lt;/code&gt; but we can also use this &lt;code&gt;playground&lt;/code&gt; which will just convert the &lt;code&gt;SVG&lt;/code&gt; to react component for us: &lt;a href="https://react-svgr.com/playground/"&gt;React SVGR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, After doing all above, this is how our project will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="nb"&gt;sun&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;moon&lt;/span&gt;
  &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;node_modules&lt;/span&gt;
  &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;
     &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
     &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;
     &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
     &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;Sun&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
     &lt;span class="o"&gt;|--&lt;/span&gt;&lt;span class="nx"&gt;Moon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-create-raw-darkcontext-endraw-context"&gt;
  &lt;/a&gt;
  5. Create &lt;code&gt;DarkContext&lt;/code&gt; context
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Create a file &lt;code&gt;DarkContext.js&lt;/code&gt; in &lt;code&gt;src&lt;/code&gt; folder, with this content:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DarkContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This creates a context object &lt;code&gt;DarkContext&lt;/code&gt; using createContext method from React library.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DarkContext&lt;/code&gt; has the default theme value as &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#6-wrap-the-raw-app-endraw-with-raw-darkcontextprovider-endraw-"&gt;
  &lt;/a&gt;
  6. Wrap the &lt;code&gt;App&lt;/code&gt; with &lt;code&gt;DarkContext.Provider&lt;/code&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Wrap &lt;code&gt;App&lt;/code&gt; with &lt;code&gt;DarkContext.Provider&lt;/code&gt; and specify the initial value.&lt;/li&gt;
&lt;li&gt;Now, other components can access the value of the theme by using &lt;code&gt;DarkContext&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For our example, &lt;code&gt;Sun&lt;/code&gt; and &lt;code&gt;Moon&lt;/code&gt; Component needs to know if current context is &lt;code&gt;Dark&lt;/code&gt; or &lt;code&gt;Light&lt;/code&gt; (not-dark).&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We could have passed the value of theme using props, and that would also be okay, but let's try to get a feel of react's context api.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, after this our &lt;code&gt;App.js&lt;/code&gt; will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DarkContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./DarkContext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DarkContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;instruction&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt; &lt;span class="nx"&gt;On&lt;/span&gt; &lt;span class="nx"&gt;Sun&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Moon&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;128071&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`app&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/DarkContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;App&lt;/code&gt; is also &lt;code&gt;maintaining&lt;/code&gt; an internal state &lt;code&gt;isDark&lt;/code&gt;, which helps to update our context value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DarkContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/DarkContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#7-create-raw-themeicon-endraw-component-to-hold-raw-sun-endraw-amp-raw-moon-endraw-component"&gt;
  &lt;/a&gt;
  7. Create &lt;code&gt;ThemeIcon&lt;/code&gt; component to hold &lt;code&gt;Sun&lt;/code&gt; &amp;amp; &lt;code&gt;Moon&lt;/code&gt; component:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Moon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Moon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Sun&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Sun&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ThemeIcon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;theme-icon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Sun&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Sun&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Moon&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Moon&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ThemeIcon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nothing fancy here, it's just a component which holds our &lt;code&gt;Sun&lt;/code&gt; and &lt;code&gt;Moon&lt;/code&gt; component, it also needs to have an &lt;code&gt;onClick&lt;/code&gt; handler which will change the value of &lt;code&gt;isDark&lt;/code&gt; from &lt;code&gt;App's&lt;/code&gt; internal state and that has to be passed down from &lt;code&gt;App&lt;/code&gt; component.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-include-raw-themeicon-endraw-component-in-raw-app-endraw-component-and-pass-down-the-raw-onclick-endraw-handler"&gt;
  &lt;/a&gt;
  8. Include &lt;code&gt;ThemeIcon&lt;/code&gt; component in &lt;code&gt;App&lt;/code&gt; component and pass down the &lt;code&gt;onClick&lt;/code&gt; handler:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DarkContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./DarkContext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ThemeIcon&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./ThemeIcon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DarkContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`app&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ThemeIcon&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsDark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ThemeIcon&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/DarkContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we look at this line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`app&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And also take a look at some corresponding &lt;code&gt;css&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.app&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dark&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will notice that, We are saying html element &lt;code&gt;div.app&lt;/code&gt; is going to be &lt;code&gt;full width&lt;/code&gt; and &lt;code&gt;full height&lt;/code&gt;. And whenever the value of &lt;code&gt;isDark&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; i am going to add css class &lt;code&gt;dark&lt;/code&gt; as well. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-use-context-in-raw-sun-endraw-and-raw-moon-endraw-component"&gt;
  &lt;/a&gt;
  9. Use context in &lt;code&gt;Sun&lt;/code&gt; and &lt;code&gt;Moon&lt;/code&gt; Component:
&lt;/h4&gt;

&lt;p&gt;As for the &lt;code&gt;useContext&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It accepts a React Context object as an input. For us it will be &lt;code&gt;DarkContext&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The output of &lt;code&gt;useContext&lt;/code&gt; is the current value of the context (&lt;code&gt;true/false&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, we will use &lt;code&gt;useContext&lt;/code&gt; to get the current value of the context in &lt;code&gt;Sun/Moon&lt;/code&gt; component.&lt;/p&gt;

&lt;p&gt;This is how we will be doing it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;DarkContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our, &lt;code&gt;Sun&lt;/code&gt; and &lt;code&gt;Moon&lt;/code&gt; will now look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;prop-types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DarkContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./DarkContext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Sun&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Things to notice here:&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;DarkContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;
      &lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Capa_1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;viewBox&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 0 457.32 457.32&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="c1"&gt;// Things to notice here:&lt;/span&gt;
      &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`sun &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; sun-dark&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/svg&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Sun&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will exactly be same for &lt;code&gt;Moon&lt;/code&gt; component as well.&lt;br&gt;
Now, if we do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm run start:dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should be able to see our app at &lt;code&gt;http://localhost:8080/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The only thing that we didn't discuss in entirety is it's &lt;code&gt;css&lt;/code&gt; part, but if we are able to understand how &lt;code&gt;sun&lt;/code&gt; is disappearing and how &lt;code&gt;moon&lt;/code&gt; comes up, and how &lt;code&gt;moon&lt;/code&gt; disappears and &lt;code&gt;sun&lt;/code&gt; comes up, then we can say we understood it completely.&lt;/p&gt;

&lt;p&gt;Although, we can see the &lt;code&gt;css&lt;/code&gt; code here or in &lt;code&gt;github&lt;/code&gt; (link shared at the end of this post) and try to understand what is going on, but instead let's look at these two screenshots, I believe that should be enough to understand the logic, rest all is just writing code for that logic.&lt;/p&gt;

&lt;p&gt;So, to understand this, Let's look at this screenshot first, this is our initial state:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dXu6zLi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbs7usg0o0fu1fi9xsgv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dXu6zLi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbs7usg0o0fu1fi9xsgv.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, We see there is &lt;code&gt;IconContainer&lt;/code&gt; (in terms or our code it is &lt;code&gt;ThemeIcon&lt;/code&gt; component, that we created above), that is holding &lt;code&gt;Sun&lt;/code&gt; icon/component, the opacity of sun is &lt;code&gt;1&lt;/code&gt; and there we also see &lt;code&gt;Moon&lt;/code&gt; but it's not going to be visible because it's opacity is &lt;code&gt;0&lt;/code&gt; &lt;code&gt;{opacity: 0}&lt;/code&gt;, when i click on &lt;code&gt;IconContainer&lt;/code&gt; our &lt;code&gt;Sun&lt;/code&gt; is going to be invisible by making its opacity as &lt;code&gt;Zero(0)&lt;/code&gt; (by adding extra class &lt;code&gt;sun-dark&lt;/code&gt;) and moon's opacity will become &lt;code&gt;One(1)&lt;/code&gt; (by adding extra class, &lt;code&gt;moon-dark&lt;/code&gt; to the moon svg, based on the value of &lt;code&gt;isDark&lt;/code&gt;), we can have another look at &lt;code&gt;Sun/Moon&lt;/code&gt; component and see how &lt;code&gt;css&lt;/code&gt; &lt;code&gt;classes&lt;/code&gt; are getting added.&lt;/p&gt;

&lt;p&gt;When we click on &lt;code&gt;IconContainer&lt;/code&gt;, this is what it will look like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YO46p9_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeok9xws34trwx4fkjyb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YO46p9_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeok9xws34trwx4fkjyb.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;So, this is what happened when we clicked:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;DarkContext&lt;/code&gt;'s value is going to be true.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Sun/Moon&lt;/code&gt; is going to know that change, through context, based on that they are going to act.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Sun&lt;/code&gt; is going to attach &lt;code&gt;sun-dark&lt;/code&gt; class to it's &lt;code&gt;SVG&lt;/code&gt;, which will make it invisible (&lt;code&gt;opacity: 0&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Moon&lt;/code&gt; is going to attach &lt;code&gt;moon-dark&lt;/code&gt; class as well to it's &lt;code&gt;SVG&lt;/code&gt;, which will make it visible (&lt;code&gt;opacity: 1&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we click again, same thing is going to happen just in reverse.&lt;/p&gt;

&lt;p&gt;There are some &lt;code&gt;transitions&lt;/code&gt; and &lt;code&gt;transformation&lt;/code&gt; that I have added to make it more interesting, but not to worry, if we are able to understand the logic above, things will be easy.&lt;/p&gt;

&lt;p&gt;We can see the live demo here: &lt;a href="https://sun-moon.vercel.app/"&gt;Sun Moon&lt;/a&gt;&lt;br&gt;
We can see the entire code &lt;a href="https://github.com/rojha-mdsol/devto-my-examples/tree/master/theme-using-hooks"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;--Thanks, Ravi&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How did I processed half a million transactions in AWS Lambda within minutes?</title>
      <author>Mohamed Latfalla</author>
      <pubDate>Wed, 23 Jun 2021 06:45:50 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-did-i-processed-half-a-million-transactions-in-aws-lambda-within-minutes-ch2</link>
      <guid>https://dev.to/aws-builders/how-did-i-processed-half-a-million-transactions-in-aws-lambda-within-minutes-ch2</guid>
      <description>&lt;p&gt;Processing data could be an intensive task, especially on the computing units as the read and write operations takes a lot of resources. Luckily, if you have the right tools, you can achieve it easily. But, is it worthy? Let’s find out.&lt;/p&gt;

&lt;p&gt;In this article I will share my experience with you on how did I achieved that. It is really simple and complicated at the same time. Why? Because of how Lambda works and what you have to think of when you “Code” because that really makes a difference.&lt;/p&gt;

&lt;p&gt;Why did I thought about it?&lt;/p&gt;

&lt;p&gt;Few years ago, my manager told me to think about a processing architecture to process BIG volumes of records but not that heavy operations. Like 800k rows of data, with 16 columns, that the amount of work needs to be done over each row isn’t complicated. So, Event-Driven Architecture!!&lt;/p&gt;

&lt;p&gt;I went through a lot of issues on how to deal with the limited resources in Lambda and how to deal with my records dropping because of timing out and OS errors. S3 was another story also to learn how to tune it for my use-case. A dear friend who works as senior consultant in AWS Bahrain helped me getting some tools in place to achieve this promising idea. It was one of the best experiences I ever got dealing with AWS resources.&lt;/p&gt;

&lt;p&gt;Enough talking lets get some diagram in place..&lt;/p&gt;

&lt;p&gt;Solution Digram:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vs20iKcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up13okhe5haad4opreit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vs20iKcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up13okhe5haad4opreit.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diagram looks scary? Trust me, it isn’t.&lt;/p&gt;

&lt;p&gt;Let me break it down for you in some steps:&lt;/p&gt;

&lt;p&gt;1- Initiate the process:&lt;/p&gt;

&lt;p&gt;Because I’m adopting Serverless architecture, it means Event-Driven events that if something happened, things will act based on it and the results will trigger another actions, till the end of the process.&lt;/p&gt;

&lt;p&gt;So, in our case is S3 Put request. When we upload the file into S3, it will put the file inside a bucket and when the file fully uploaded into it, Lambda will get triggered with S3 payload. Our first step just got finished. Whats next?&lt;/p&gt;

&lt;p&gt;2- Clean data:&lt;/p&gt;

&lt;p&gt;Because we got a csv file, some columns and rows could contain spaces, some special characters that MIGHT break your code. So, clean it up.&lt;/p&gt;

&lt;p&gt;Cleaning these records will prepare it to be ready for insertion. But, since we have a lot of records and the function might fail, how to track what was added and what left over?&lt;/p&gt;

&lt;p&gt;3- Add clean data into a queue:&lt;/p&gt;

&lt;p&gt;We will add the cleaned records into a queue. The reason is to track what has been added and what did not got added. Basically, SQS will act as an organizer. It will send small batches into Lambda, Lambda will add it into DynamoDB, then it will return success message to SQS to remove it from the queue.&lt;/p&gt;

&lt;p&gt;What will happen in case of failed record is SQS will retry 3 times, as per my configuration, to try insert operation. If these 3 tries failed, then it will move it into Dead Letter Queue (DLQ) which is another SQS queue that have the failed records. Then, you can debug why these records never make it into DynamoDB and can be processed again or even reject it.&lt;/p&gt;

&lt;p&gt;4- DynamoDB:&lt;/p&gt;

&lt;p&gt;Because we are trying to process massive chunks of data, we need some sort of Database that can handle the extreme load or records. DynamoDB solves this issue. There were a lot of experiments on how to handle the number of records and how to behave with the limited read/write throughput as write can handle 1kb data per unit. So, DynamoDB on-demand solve the issue.&lt;/p&gt;

&lt;p&gt;As per AWS documentation, using on-demand DynamoDB throughput is the option when you cannot predict your workload. Because it will prepare the max throughput just in case its needed.&lt;/p&gt;

&lt;p&gt;We moved the records from csv to DynamoDB, then what?&lt;/p&gt;

&lt;p&gt;5- Stream records to SQS:&lt;/p&gt;

&lt;p&gt;DynamoDB is really good event executer for Lambda. When you enable Stream, you can specify a Lambda function that react to your passed payloads from it. The good thing is you need to act based on type of record. We are dealing now with the newly added records. So, when we verify the tag, we add the record into another SQS.&lt;/p&gt;

&lt;p&gt;The reason for this queue is the consistency of records delivery. You are adding the record once, capture it and add it into the queue so you can deal with it. If not, then you have to scan the table to get unprocessed records and process them. Why the hassle? Let the queue deal with it.&lt;/p&gt;

&lt;p&gt;6- Process data:&lt;/p&gt;

&lt;p&gt;We reached the latest stages of record lifecycle in this architecture. When it reaches the Process Queue, it pass the records in batches, process them, and then pass them to another queue. As I clarified earlier, for consistency purposes.&lt;/p&gt;

&lt;p&gt;7- Update the processed record:&lt;/p&gt;

&lt;p&gt;Finally, the record will be grabbed from the Finished queue and passed into the Lambda function that will update the record with the processed information. If records failed to be passed, DLQ will gather them for your further debugging and actions.&lt;/p&gt;

&lt;p&gt;challenges:&lt;/p&gt;

&lt;p&gt;These points seems to be a straight-forward scenario, BUT, its not. Let me walk you through some problems and how it got solved.&lt;/p&gt;

&lt;p&gt;1- Lambda Lambda Lambda:&lt;/p&gt;

&lt;p&gt;Lambda is the key player here, we have limited time to execute the logic in your code. How can you insure the records were red from the file, cleaned, and added into the queue? Its hard but what you will need is speed. I code in Python and I used Multiprocessing library to speed things up. I used Multiprocessing Process function to use every single possible processing unit in Lambda. This action made my process to clean (in some tests) 558k transaction in 1:30 min! It was really fast. Again, it is not straight-forward scenario. Lambda can handle around 500 process when you allocate the max memory. Any other process will raise “OS Error 38: too many files open”. Why did I faced this issue? Because I joined all running processes and it was not closing finished processes. So, I run half the batch and loop over the running processes. If it finished, I force it to close. Problem solved…&lt;/p&gt;

&lt;p&gt;2- Keep an eye on CloudWatch:&lt;/p&gt;

&lt;p&gt;I made a big mistake by passing event variable into CloudWatch even when I was running the big batches. This resulted to write 6.6TB of data because of my many tests. The price of CloudWatch put log action is expensive so use it wisely.I made a big mistake by passing event variable into CloudWatch even when I was running the big batches. This resulted to write 6.6TB of data because of my many tests. The price of CloudWatch put log action is expensive so use it wisely.&lt;/p&gt;

&lt;p&gt;3- DynamoDB on-demand is the keyword:&lt;/p&gt;

&lt;p&gt;I started my configuration with making my DynamoDB provisioned, which is something for predicted workload. I made it 5 read and write throughput and that was an issue. I faced the issue that out of 558k records, only 1k was inserted into my table. I raised it into 100 throughput and still at least 60% out of the file get lost and not added! Then I reread the documentation and noticed my issue, DynamoDB on-demand is the solution for unpredicted load. I added all the 558k+ records within 5 min! Pretty FAST!&lt;/p&gt;

&lt;p&gt;4- SQS can be tricky:&lt;/p&gt;

&lt;p&gt;SQS is a great service and has a lot options and opportunities. But, you need to know what is the size of the batch you’re passing every time and what is the predicted time for your batch to finish. The reason for that is when you tell SQS to wait x seconds before making this batch available again, it might get processed multiple times. Know your code and your data, test test test and then configure it for heavy workload.&lt;/p&gt;

&lt;p&gt;These points were my top concerns, S3 was interesting but not that complicated as I expected. But the main question, does it worth it?&lt;/p&gt;

&lt;p&gt;Everything in this life depends on conditions, if you don’t want to manage instances or you want it with the minimal effort then yes, this scenario is valid for you. Keep in mind that debugging these use-cases can be tense because of how connected and how one mistake in one step can affect the coming steps.&lt;/p&gt;

&lt;p&gt;Stay Safe.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>eventdriven</category>
    </item>
    <item>
      <title>Weekly web development resources #79</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 23 Jun 2021 06:00:12 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-79-1og7</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-79-1og7</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#nushell"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nushell/nushell"&gt;nushell&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/nushell/nushell"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GndyRsOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/nushell.jpg" alt="nushell"&gt;&lt;/a&gt;&lt;br&gt;
A cross-platform, extendable shell to control your system with powerful pipelines.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#utopia"&gt;
  &lt;/a&gt;
  &lt;a href="https://utopia.app/"&gt;Utopia&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://utopia.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ric0lIdQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/utopia.jpg" alt="Utopia"&gt;&lt;/a&gt;&lt;br&gt;
A design and coding environment for React projects and components.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#super-agent"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.super-agent.com/"&gt;Super Agent&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.super-agent.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iqxri11F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/super-agent.jpg" alt="Super Agent"&gt;&lt;/a&gt;&lt;br&gt;
A browser extension and web service that will auto-accept cookies for you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#rescript"&gt;
  &lt;/a&gt;
  &lt;a href="https://rescript-lang.org/"&gt;ReScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://rescript-lang.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntNbhWJI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/rescript.jpg" alt="ReScript"&gt;&lt;/a&gt;&lt;br&gt;
A language that compiles into JavaScript.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#denodb"&gt;
  &lt;/a&gt;
  &lt;a href="https://deno.land/x/denodb"&gt;DenoDB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://deno.land/x/denodb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3YwUHxUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/denodb.jpg" alt="DenoDB"&gt;&lt;/a&gt;&lt;br&gt;
A new library for using databases with Deno.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vektors"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.vektors.pro/"&gt;Vektors&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.vektors.pro/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dd1PFaxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/vektors.jpg" alt="Vektors"&gt;&lt;/a&gt;&lt;br&gt;
Illustrations, that are free for personal and commercial use.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#free-dev-stuff"&gt;
  &lt;/a&gt;
  &lt;a href="https://freestuff.dev/"&gt;Free Dev Stuff&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://freestuff.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ueEfqRN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/freedevstuff.jpg" alt="Free Dev Stuff"&gt;&lt;/a&gt;&lt;br&gt;
A list of free stuff or services for developer by developer to use&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#snk"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Platane/snk"&gt;snk&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/Platane/snk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAiu0oz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/snk.jpg" alt="snk"&gt;&lt;/a&gt;&lt;br&gt;
Generate a snake game from a github user contributions graph.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mega-creator"&gt;
  &lt;/a&gt;
  &lt;a href="https://icons8.com/mega-creator"&gt;Mega creator&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://icons8.com/mega-creator"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vzunkxds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/mega-creator.jpg" alt="Mega creator"&gt;&lt;/a&gt;&lt;br&gt;
An online creator for graphic design for social media graphic design.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#aspect-ratio-in-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://ishadeed.com/article/css-aspect-ratio/"&gt;Aspect Ratio In CSS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ishadeed.com/article/css-aspect-ratio/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6ZdWyLx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/aspect-ratio.jpg" alt="Aspect Ratio In CSS"&gt;&lt;/a&gt;&lt;br&gt;
An article on how to use the native aspect ratio in CSS.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>weekly</category>
    </item>
    <item>
      <title>Top 5 Password managers for Mac</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 23 Jun 2021 05:56:59 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/top-5-password-managers-for-mac-3dmc</link>
      <guid>https://dev.to/dailydevtips1/top-5-password-managers-for-mac-3dmc</guid>
      <description>&lt;p&gt;The first thing I install is a password manager on every new device. I have so many accounts I want to keep safe and secure. The only way to do this is a good password manager.&lt;/p&gt;

&lt;p&gt;Today's article will walk you through my top 5 password managers for Mac.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TL;DR: I'm currently using &lt;a href="https://1password.com/"&gt;1Password&lt;/a&gt; as my password manager. It has an excellent user experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-a-password-manager"&gt;
  &lt;/a&gt;
  Why a password manager?
&lt;/h2&gt;

&lt;p&gt;You might wonder why you should use a password manager, and I've written down some advantages that are trademarks of every password manager.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Safely store passwords and notes in a vault&lt;/li&gt;
&lt;li&gt;Generate safe passwords on the fly&lt;/li&gt;
&lt;li&gt;Watch passwords, keep track of leaked passwords&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-1password"&gt;
  &lt;/a&gt;
  1 1Password
&lt;/h2&gt;

&lt;p&gt;I'm currently using 1Password as my password manager for Mac and iPhone. To me, it has a lot of awesome features like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g1lijzbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082068832/lEJiQ7TsD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g1lijzbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082068832/lEJiQ7TsD.png" alt="1Password for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Family account and vault&lt;/li&gt;
&lt;li&gt;Travel mode (remove accounts for x time)&lt;/li&gt;
&lt;li&gt;Two-factor for certain websites&lt;/li&gt;
&lt;li&gt;Apps for all browsers and devices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1Password is a paid application and starts at \$2.99 per month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://1password.com/"&gt;Check out 1Password&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-lastpass"&gt;
  &lt;/a&gt;
  2 LastPass
&lt;/h2&gt;

&lt;p&gt;At the company, we are using LastPass, and it's a good second choice for me personally as well.&lt;br&gt;
It's less focused on UX to me, as it can be annoying to find a password on the fly.&lt;br&gt;
But some really good features are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tjoTTODw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082362284/hk05bEwiR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tjoTTODw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082362284/hk05bEwiR.png" alt="LastPass for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Local Encryption&lt;/li&gt;
&lt;li&gt;Great team management&lt;/li&gt;
&lt;li&gt;Emergency backup&lt;/li&gt;
&lt;li&gt;Apps for all browsers and devices&lt;/li&gt;
&lt;li&gt;Dark web monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LastPass has a free mode, so great option to start with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.lastpass.com/"&gt;View LastPass for Mac&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-dashlane"&gt;
  &lt;/a&gt;
  3 Dashlane
&lt;/h2&gt;

&lt;p&gt;Dashlane is a super popular free-tiered option as your new password manager.&lt;br&gt;
The app is very good at analyzing current password strengths and advice on upgrades. You can even set up a VPN to keep your online activities safe.&lt;br&gt;
It also has the following features:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVPwm-Aa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082656875/TMgtbPiqB.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVPwm-Aa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082656875/TMgtbPiqB.jpeg" alt="Dashlane for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auto logins&lt;/li&gt;
&lt;li&gt;Alert for account breaches&lt;/li&gt;
&lt;li&gt;Emergency contact mode&lt;/li&gt;
&lt;li&gt;VPN wifi protection&lt;/li&gt;
&lt;li&gt;U2F authentication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.dashlane.com/"&gt;Get Dashlane for Mac&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-bitwarden"&gt;
  &lt;/a&gt;
  4 Bitwarden
&lt;/h2&gt;

&lt;p&gt;This free option has unlimited storage, which is unheard of for these kinds of systems.&lt;br&gt;
Premium will come with even more advantages like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ow1UdMtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082876409/nLgLyZXNl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ow1UdMtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082876409/nLgLyZXNl.png" alt="Bitwarden for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Family plan&lt;/li&gt;
&lt;li&gt;Password analysis&lt;/li&gt;
&lt;li&gt;Secure file sharing&lt;/li&gt;
&lt;li&gt;Open-source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://bitwarden.com/"&gt;Get bitwarden now&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-keeper"&gt;
  &lt;/a&gt;
  5 Keeper
&lt;/h2&gt;

&lt;p&gt;And the last option is keeper, which comes as a fair prices option.&lt;br&gt;
Very focusses on breach detection so you won't get held with ransomware attacks.&lt;br&gt;
It comes with a lot of cool features that include:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rCp1-V4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624083138465/_J5RrVM7_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rCp1-V4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624083138465/_J5RrVM7_.png" alt="Keeper for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BreachWatch, alert for breaches&lt;/li&gt;
&lt;li&gt;Encrypted private messenger&lt;/li&gt;
&lt;li&gt;Import existing passwords&lt;/li&gt;
&lt;li&gt;Password sharing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.keepersecurity.com/"&gt;Try out Keeper&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>mac</category>
      <category>password</category>
      <category>tooling</category>
    </item>
  </channel>
</rss>
