<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Day 28 of 100 Days of Code &amp; Scrum: Next.js Is Supercharged For Production</title>
      <author>Rammina</author>
      <pubDate>Fri, 05 Nov 2021 10:01:10 +0000</pubDate>
      <link>https://dev.to/rammina/day-28-of-100-days-of-code-scrum-nextjs-is-supercharged-for-production-363e</link>
      <guid>https://dev.to/rammina/day-28-of-100-days-of-code-scrum-nextjs-is-supercharged-for-production-363e</guid>
      <description>&lt;p&gt;Happy Friday, everyone!&lt;/p&gt;

&lt;p&gt;I enjoyed learning about a lot of things today, even if it was a grind. It feels great to be productive.&lt;/p&gt;

&lt;p&gt;Next.js is such an interesting framework to learn about! It performs really well on production and also comes with a lot of quality-of-life features built-in. I most likely will use Next.js for most of my projects from here on, because it has amazing performance and SEO benefits.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I was working on my company website, and I finished a temporary, prototype banner for it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I learned about the &lt;a href="https://github.com/garmeeh/next-seo"&gt;next-seo package&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;next-seo makes SEO configuration a lot easier with its built-in components:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;NextSeo /&amp;gt;&lt;/code&gt; - allows you to change various meta tag values that is usually in &lt;code&gt;&amp;lt;Head /&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;DefaultSeo /&amp;gt;&lt;/code&gt; - it enables you to set default SEO properties that affect all pages. It can be overridden by &lt;code&gt;&amp;lt;NextSeo /&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;kind of random, but it seems &lt;code&gt;&amp;lt;Container /&amp;gt;&lt;/code&gt; in Next.js is deprecated.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I wrote some user stories and tasks for my company website.&lt;/li&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading! Have a good day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uXVpW_IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5khh0okv8g7solnh2w4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uXVpW_IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5khh0okv8g7solnh2w4.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/garmeeh/next-seo"&gt;next-seo | Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Cherry-Pick Your Teammate's Changes Without Push 'n Pull-ing To Your Repo In WebStorm</title>
      <author>Agnieszka</author>
      <pubDate>Fri, 05 Nov 2021 09:58:15 +0000</pubDate>
      <link>https://dev.to/gitlive/cherry-pick-your-teammates-changes-without-push-n-pull-ing-to-your-repo-in-webstorm-5h41</link>
      <guid>https://dev.to/gitlive/cherry-pick-your-teammates-changes-without-push-n-pull-ing-to-your-repo-in-webstorm-5h41</guid>
      <description>&lt;p&gt;You asked your teammate for help with a piece of code and they showed you the solution in their editor. Now you need to fetch those changes. Usually, this would mean a series of tedious Git commands for both of you (not to mention that the changes will forever grace your git history), but no longer - GitLive allows you to cherry-pick your teammate's changes straight from their local files without having to push and pull to Git.&lt;/p&gt;

&lt;p&gt;In WebStorm, open up the team window by clicking on the GitLive icon on the bottom tool window bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6g5NEu9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636043004823/mLTXn9qUk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6g5NEu9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636043004823/mLTXn9qUk.png" alt="IMG-1.png" width="880" height="487"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will show a list of your teammates, if they are online (or away) and the issue they are currently working on. Click the arrow on the left-hand side of the teammate that helped you to see the repositories they have cloned, locate the one they made the changes to and click the arrow beside that too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mVKFE_VB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636040361139/9UIvwDqxV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mVKFE_VB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636040361139/9UIvwDqxV.png" alt="IMG-2.png" width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, you can see the list of files changed by your teammate on their branch compared to the main branch. Files with asterisks next to the file icon contain changes made locally by your teammate that have not yet been pushed to the remote repository.&lt;/p&gt;

&lt;p&gt;Since we are only interested in their local changes, click the filter icon at the bottom of the team window to filter to only the unpushed changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JVYXbLe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636044027568/Lu7qC-CJu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JVYXbLe7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636044027568/Lu7qC-CJu.png" alt="IMG-3(2).png" width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can see the single file that contains the solution we want to copy! Clicking on it will open a diff of the changes so we can make sure it contains only the changes we need. Now all we need to do is to right click on the file and select the cherry-pick option to pick the changes. And voil√† - no need for any git push- or git pull -ing!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQRfSMsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636040373331/gYKKUXoB0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQRfSMsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636040373331/gYKKUXoB0.png" alt="IMG-4.png" width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also perform the cherry pick at the level above if you want to pick all changes from multiple files at once by right-clicking on the repository and selecting the cherry-pick option.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dPaM8gD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636040379492/TuZp7N4Ts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPaM8gD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636040379492/TuZp7N4Ts.png" alt="IMG-5.png" width="880" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't have the GitLive extension installed yet? You can &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;find GitLive here&lt;/a&gt;, and if you want to learn more, check out &lt;a href="https://blog.git.live/gitlive-8-0-Cherry-picking-your-teammates-changes"&gt;this blog post&lt;/a&gt; or the &lt;a href="https://docs.git.live/docs/cherrypicking/"&gt;GitLive docs&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>git</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Making Sites Because I Can't Stop Buying Domains</title>
      <author>iivii</author>
      <pubDate>Fri, 05 Nov 2021 09:54:45 +0000</pubDate>
      <link>https://dev.to/iiviigames/making-sites-because-i-cant-stop-buying-domains-5dmn</link>
      <guid>https://dev.to/iiviigames/making-sites-because-i-cant-stop-buying-domains-5dmn</guid>
      <description>&lt;p&gt;Now, don't leave when I show it to you, just read on - but today, I came across this awesome post. &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/do-you-own-a-domain-name-without-a-purpose-let-me-give-you-a-project-for-it-5kn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Do you own a domain name without a purpose? Let me give you a project for it!&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial „Éª Nov 1 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#startup&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
.

&lt;p&gt;The guy asked for people to submit domain names they own that they just aren't doing anything with. I own about &lt;em&gt;100&lt;/em&gt;, so I gave him 3.&lt;/p&gt;

&lt;p&gt;These were his recommendations.&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/inhuofficial"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--BmbVmdkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HHg2q6g4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_66%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/inhuofficial"&gt;
        &lt;span class="comment-username"&gt;InHuOfficial&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2 m:pl-0"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/inhuofficial/comment/1jel8" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Nov 5
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;pxl.monster&lt;/strong&gt; - You take any image and turn it into one gigantic pixel. It is useful for finding the average colour in an image. It has a second mode where users can decide how many colours they would like extracting from the image (2 to 100) and it then creates a palette for them based on colour frequency.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;devdo.me&lt;/strong&gt; - you play with ancient and dead (or nearly dead) programming languages to see what you can create and learn from them. It is a play on "DoDo" being extinct so is pronounced "Dev Doh".&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;gamefight.me&lt;/strong&gt; - a bot scours twitter looking for people who use the words "fight me bro" or "come at me bro". At that point it invites all the people in that conversation to a fighting game. Like Street Fighter but every attack is an insult. At the end of the fight someone is crowned the winner and then you remind them that it is only the internet and there is no need to be salty. &lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;What a wonderful, creative individual we have.&lt;/p&gt;

&lt;p&gt;I retorted with my own ideas that I had.&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/iiviigames"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DPVmObO7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zYP1Un8n--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/301406/98008fab-7860-43f1-8bb2-3dffa6c06547.png" alt="iiviigames profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/iiviigames"&gt;
        &lt;span class="comment-username"&gt;iivii&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2 m:pl-0"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/iiviigames/comment/1jeme" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Nov 5
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Well, looks like I've got my work cut out for me. &lt;br&gt;
I think I'll tackle these (or a variation on them) in a series of posts right here on dev.to!&lt;/p&gt;

&lt;p&gt;As for what I had planned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;pxl.monster&lt;/strong&gt; - A site similar to the SCP wiki where users create an entry in the database using  a built in sprite editor, write up an entry and boom. Pixel horror.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;devdo.me&lt;/strong&gt; - I read this as "Dev Dome", and it would be a place for me to write my bloggings about programming. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;gamefight.me&lt;/strong&gt; - This was going to be a big one where I troll the big game databases, and when a visitor comes to the site they are presented with a "VS" screen.   &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;em&gt;Castlevania: Symphony of the Night&lt;/em&gt; &lt;strong&gt;VS&lt;/strong&gt; &lt;em&gt;Super Mario 64&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Whoever wins the bout gains a point, and a ranking board starts to form.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our ideas aren't incompatible. Especially &lt;strong&gt;devdo.me&lt;/strong&gt;. If you wanna help make any, get in touch!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PS &lt;strong&gt;THANKS FOR THE IDEAS&lt;/strong&gt;!!!&lt;/p&gt;
&lt;/blockquote&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Together, with powers combined, I think I can pull something awesome out of some or all of these ideas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-next-steps"&gt;
  &lt;/a&gt;
  The Next Steps
&lt;/h2&gt;

&lt;p&gt;This is the first post in a series of what will become a journey of website development just for the fun of it. I want to teach those who want to learn more, including myself, and so - we will venture together on this journey. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating for creation's sake&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let me know what you think we should start with, or if you have any ideas that can help improve what we've brainstormed so far!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>learning</category>
      <category>design</category>
      <category>programming</category>
    </item>
    <item>
      <title>Automatically Format Code On File Save in Visual Studio Code Using Prettier</title>
      <author>Yogesh Chavan</author>
      <pubDate>Fri, 05 Nov 2021 09:48:57 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/automatically-format-code-on-file-save-in-visual-studio-code-using-prettier-3ebe</link>
      <guid>https://dev.to/myogeshchavan97/automatically-format-code-on-file-save-in-visual-studio-code-using-prettier-3ebe</guid>
      <description>&lt;p&gt;Whenever we're working on any project, It's important to have a default formatter set up for your Code Editor.&lt;/p&gt;

&lt;p&gt;This will improve your productivity by not wasting time in formatting the code If the line gets longer and does not fit on screen.&lt;/p&gt;

&lt;p&gt;Also, using a formatter avoids bugs in your code so you will clearly see where your specific block starts and where it ends and helps to identify matching brackets in the code.&lt;/p&gt;

&lt;p&gt;So in this article, we will see how to set up Prettier formatter in Visual Studio Code(VS Code).&lt;/p&gt;

&lt;p&gt;So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatically-format-code-on-file-save"&gt;
  &lt;/a&gt;
  Automatically Format Code On File Save
&lt;/h2&gt;

&lt;p&gt;Install the &lt;code&gt;Prettier&lt;/code&gt; extension for VS Code which formats code written in Javascript, Angular, Vue, React, Typescript and many other languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Click on the extensions icon in VS Code&lt;/li&gt;
&lt;li&gt;Search for &lt;code&gt;prettier&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You will see the extension from Prettier&lt;/li&gt;
&lt;li&gt;Click on the install button&lt;/li&gt;
&lt;li&gt;Hit the Reload button or restart the VS Code, once the extension is installed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3mP_7Etr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636104393798/kBV71rBdp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3mP_7Etr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636104393798/kBV71rBdp.png" alt="prettier_extension.png" width="880" height="212"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To automatically format the file on save, In Visual Studio Code, press &lt;code&gt;Control + Shift + P&lt;/code&gt; or &lt;code&gt;Command + Shift + P (Mac)&lt;/code&gt; to open the command palette and type &lt;code&gt;setting&lt;/code&gt; and then select &lt;code&gt;Preferences: Open User Settings&lt;/code&gt; option.&lt;/li&gt;
&lt;li&gt;Search for &lt;code&gt;format on save&lt;/code&gt; setting and check the checkbox.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v5AL1aUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636099352985/0JVnX5tdL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v5AL1aUC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636099352985/0JVnX5tdL.png" alt="format_on_save.png" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs it! Congratulation! You have configured prettier to format as per the default settings.&lt;/p&gt;

&lt;p&gt;Now, open any JavaScript/React code. Let's say your code looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VV6MAiqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636099402433/kmCp-a3M_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VV6MAiqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636099402433/kmCp-a3M_.png" alt="todo_format1.png" width="880" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you save the file using &lt;code&gt;Ctrl + S&lt;/code&gt; or &lt;code&gt;Command + S (Mac)&lt;/code&gt;, the prettier will format your code as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dY3LFxUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636099477019/_xX26axUY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dY3LFxUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636099477019/_xX26axUY.png" alt="todo_format2.png" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you don't see the code formatted automatically on file save then it might be because you have multiple formatters installed in VS Code. Follow the below steps to get it working.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Open any of the file in the VS Code &lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Control + Shift + P&lt;/code&gt; or &lt;code&gt;Command + Shift + P (Mac)&lt;/code&gt; to open the command palette and type &lt;code&gt;format document&lt;/code&gt; and then select &lt;code&gt;Format Document&lt;/code&gt; option.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I1eKAkFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636104711794/UzG-Rc-xi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I1eKAkFV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636104711794/UzG-Rc-xi.png" alt="format_document.png" width="880" height="278"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then you will be asked to select the default formatter&lt;/li&gt;
&lt;li&gt;Select prettier formatter from the options list&lt;/li&gt;
&lt;li&gt;You're done&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now If you save any file then you will see the file formatted properly.&lt;/p&gt;

&lt;p&gt;If you have code like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G6MPzvgl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636103645200/uZRY87q8K.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G6MPzvgl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636103645200/uZRY87q8K.png" alt="format_router1.png" width="880" height="312"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then on saving, it will be formatted like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---l1UVpdg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636103686447/Pwec15pYo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---l1UVpdg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636103686447/Pwec15pYo.png" alt="format_router3.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So now, you don‚Äôt have to worry about adding or removing space or moving code to the second line if it does not fit on one line. Prettier does that job for you.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, write the code any way you want and just save the file to format it.&lt;/p&gt;

&lt;p&gt;This will make you more productive as you will not be wasting your time in formatting code.&lt;/p&gt;

&lt;p&gt;But sometimes, it may happen that, you don't want the formatting done by prettier and you want to keep your own formatting for a particular file, then you can follow the following step:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Visual Studio Code, press &lt;code&gt;Control + Shift + P&lt;/code&gt; or &lt;code&gt;Command + Shift + P (Mac)&lt;/code&gt; to open the command palette and type &lt;code&gt;save&lt;/code&gt; and then select the &lt;code&gt;Save without Formatting&lt;/code&gt; option&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A5p5fPAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636103771406/vvvjMd_nZ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A5p5fPAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636103771406/vvvjMd_nZ.gif" alt="save_without_formatting.gif" width="692" height="432"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advanced-configurations"&gt;
  &lt;/a&gt;
  Advanced Configurations
&lt;/h3&gt;

&lt;p&gt;If you want more control over the formatting, prettier also allows that.&lt;/p&gt;

&lt;p&gt;Create a file with the name &lt;code&gt;.prettierrc&lt;/code&gt; (dot prettierrc) in the root of your project and add the configuration as required.&lt;/p&gt;

&lt;p&gt;For example, add the following JSON in the &lt;code&gt;.prettierrc&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;singleQuote&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;trailingComma&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;SingleQuote: false&lt;/code&gt; will use double quotes instead of single quotes for strings in your code&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;trailingComma: "none"&lt;/code&gt; will remove all trailing commas from object declaration in your file&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find more configuration options &lt;a href="https://prettier.io/docs/en/options.html"&gt;HERE&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Check out my recently published &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;

&lt;p&gt;In this course, you will build 3 apps along with a food ordering app and you'll learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic and advanced Redux&lt;/li&gt;
&lt;li&gt;How to manage the complex state of array and objects&lt;/li&gt;
&lt;li&gt;How to use multiple reducers to manage complex redux state&lt;/li&gt;
&lt;li&gt;How to debug Redux application&lt;/li&gt;
&lt;li&gt;How to use Redux in React using react-redux library to make your app reactive.&lt;/li&gt;
&lt;li&gt;How to use redux-thunk library to handle async API calls and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and then finally we'll build a complete &lt;a href="https://www.youtube.com/watch?v=2zaPDfCKAvM"&gt;food ordering app&lt;/a&gt; from scratch with stripe integration for accepting payments and deploy it to the production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg" width="867" height="291"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
      <category>node</category>
    </item>
    <item>
      <title>An Overview of UI | UX</title>
      <author>Dylan Oh</author>
      <pubDate>Fri, 05 Nov 2021 09:44:23 +0000</pubDate>
      <link>https://dev.to/ohdylan/an-overview-of-ui-ux-7f</link>
      <guid>https://dev.to/ohdylan/an-overview-of-ui-ux-7f</guid>
      <description>&lt;p&gt;We are going to discuss a little bit about the differences between UI and UX in this article. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UI&lt;/strong&gt;, which stands for User Interface, acts as a bridge between users and the visual content on the screens. The screens could range from desktops, laptops, tablets to our mobile phones. UI is more towards tangible and visible design. For example the buttons, scroll bar and even the colour palettes used by the website are also parts of UI. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXor8LLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0yd2s5d20z2ut0448ynp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXor8LLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0yd2s5d20z2ut0448ynp.jpg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;br&gt;
       &lt;em&gt;Image from &lt;a href="https://www.freepik.com/vectors/technology"&gt;Technology vector created by freepik - www.freepik.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;UI decides the aesthetic and feel for the website. Either you want your app to be more playful (e.g. A travelling information website), or to be more serious (e.g. Scientific research), UI plays an important role. UI design has also evolved and improved over time as it has to be responsive to different screen sizes. An example would be we are not going to show a huge side bar when the website is displayed on a phone's browser, instead we could hide it with a togglable hamburger menu. In this case, UI designers have to draft out different wireframes and figure out how do they look the best with all the elements on the screen. They will normally create sample pattern library, mood boards and static interface to determine the design of an app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WSLYQ8aA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nq2fwfpocm51g1iomk69.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSLYQ8aA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nq2fwfpocm51g1iomk69.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nXc2MCv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icgizthzndsak5njzm98.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nXc2MCv5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/icgizthzndsak5njzm98.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;br&gt;
¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UX&lt;/strong&gt; refers to User Experience design, including research, testing, planning etc. UX design cares about how users feel when accessing and navigating through the app. The workflow of UX design (from ideation to the creation of prototype) will be covered in the future articles. This is an example of simple wireframes and the navigation routes for an app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uoq3u9fa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mshhi2jjglivgp8s9s1h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uoq3u9fa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mshhi2jjglivgp8s9s1h.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;UX design also involves getting users' feedback (in the early stages of designing phase), and make improvements to the flow. For example, when user clicks on an icon, he or she found out that some important information on the interface is blocked by the popped up modal window. In this case, the layout can be adjusted to optimize the overall experience of our app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me for more future articles on web design, programming and self-improvement üòä&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>ui</category>
      <category>ux</category>
      <category>design</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create a Temperature converter using NextJs, Tailwind CSS &amp; Strapi</title>
      <author>Shada </author>
      <pubDate>Fri, 05 Nov 2021 09:37:54 +0000</pubDate>
      <link>https://dev.to/strapi/create-a-temperature-converter-using-nextjs-tailwind-css-strapi-2h3h</link>
      <guid>https://dev.to/strapi/create-a-temperature-converter-using-nextjs-tailwind-css-strapi-2h3h</guid>
      <description>&lt;p&gt;This article will show you how to build a Temperature Converter with Next.js and Tailwind CSS as frontend and Strapi headless CMS as backend. You can find a link to the finished frontend code &lt;a href="https://github.com/chyke007/strapi-nextjs-tutorial-temperature"&gt;here&lt;/a&gt;, as well as the finished backend &lt;a href="https://github.com/chyke007/strapi-tutorial-temperature"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;Before starting this tutorial, you need to have&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.js installed on your local machine (v12 or v14) - Check this &lt;a href="https://codex.so/how-to-install-the-latest-node-js-npm-and-yarn"&gt;tutorial&lt;/a&gt; for instructions on how to install Node.js&lt;/li&gt;
&lt;li&gt;Basic understanding of Strapi - Get started with this &lt;a href="https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html"&gt;quick guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Basic knowledge of &lt;a href="https://nextjs.org/docs/getting-started"&gt;Next.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Basic knowledge of &lt;a href="https://tailwindcss.com/docs"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-next-js"&gt;
  &lt;/a&gt;
  What is Next Js
&lt;/h2&gt;

&lt;p&gt;Next.js is an awesome React framework for building highly dynamic applications. It comes with pre-rendering, automatic code-splitting amongst many other great features out of the box.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-tailwind-css"&gt;
  &lt;/a&gt;
  What is Tailwind CSS
&lt;/h2&gt;

&lt;p&gt;Tailwind is a utility-first CSS framework for rapidly building custom user interfaces. By using Tailwind, we can write our css directly in our HTML classes. This leads to a faster development time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-strapi"&gt;
  &lt;/a&gt;
  What is Strapi
&lt;/h2&gt;

&lt;p&gt;Strapi is a Node.js open-source headless CMS that allows us to develop APIs and manage content easily without the hassle of building out a project from scratch.&lt;/p&gt;

&lt;p&gt;We can easily build out APIs faster and consume the contents via APIs using any REST API client or GraphQL.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scaffolding-a-strapi-project"&gt;
  &lt;/a&gt;
  Scaffolding a Strapi Project
&lt;/h2&gt;

&lt;p&gt;To setup a new Strapi Project is quite straightforward and simple as running these few commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npx create-strapi-app temperature-converter &lt;span class="nt"&gt;--quickstart&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change &lt;code&gt;temperature-converter&lt;/code&gt; to the preferred name of your project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nb: During the setup we would not be using any Strapi template&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will install and create a Strapi application and set up the project locally.&lt;/p&gt;

&lt;p&gt;After installation, the browser would open a page on localhost:1337 which would prompt to set up first admin account to proceed with Strapi.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-the-temperature-collection"&gt;
  &lt;/a&gt;
  Building the Temperature collection
&lt;/h2&gt;

&lt;p&gt;Next, we will create a new collection type that will store the details of each temperature converter.&lt;br&gt;
In this article, we will create a collection type called ‚Äòtemperature‚Äô that has these fields: from, to, multiplier, offset, offset_add&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KF6uPgUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1633617995927_Screenshot%2B2021-10-07%2Bat%2B15.46.29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KF6uPgUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1633617995927_Screenshot%2B2021-10-07%2Bat%2B15.46.29.png" alt="" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clicking ‚ÄúContinue‚Äù would bring up another screen to select the fields for this collection. Choose the ‚ÄúText‚Äù field from the list and provide &lt;code&gt;from&lt;/code&gt; as its name. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R0lwKMoC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1633618391565_Screenshot%2B2021-10-07%2Bat%2B15.53.03.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R0lwKMoC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1633618391565_Screenshot%2B2021-10-07%2Bat%2B15.53.03.png" alt="" width="880" height="454"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click ‚ÄúAdvanced settings‚Äù and check the ‚ÄúRequired field‚Äù box to ensure this field is required when creating a new temperature converter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FUDoe6HT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634595892206_Screenshot%2B2021-10-18%2Bat%2B23.24.46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FUDoe6HT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634595892206_Screenshot%2B2021-10-18%2Bat%2B23.24.46.png" alt="" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We click on the Add another field to add the remaining fields. Below is a table showing the properties for each field in this collection:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Field Name&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Field Type&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;from&lt;/td&gt;
&lt;td&gt;short text&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;to&lt;/td&gt;
&lt;td&gt;short text&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;multiplier&lt;/td&gt;
&lt;td&gt;number(decimal)&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;offset&lt;/td&gt;
&lt;td&gt;number(float)&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;offset_add&lt;/td&gt;
&lt;td&gt;number(decimal)&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#seeding-strapi"&gt;
  &lt;/a&gt;
  Seeding Strapi
&lt;/h2&gt;

&lt;p&gt;We would now need to seed our collection to have the predefined parameters we need in our formula.&lt;/p&gt;

&lt;p&gt;To add data to the collection, we select the Temperature Collection on the left sidebar, click ‚ÄúAdd New Temperature‚Äù and fill in the details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Btw8CrUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634596425965_Screenshot%2B2021-10-18%2Bat%2B23.33.42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Btw8CrUT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634596425965_Screenshot%2B2021-10-18%2Bat%2B23.33.42.png" alt="" width="880" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After Seeding we would have the collection populated as such:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdffzOEl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634597346696_Screenshot%2B2021-10-18%2Bat%2B23.49.02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZdffzOEl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634597346696_Screenshot%2B2021-10-18%2Bat%2B23.49.02.png" alt="" width="880" height="449"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#allowing-public-access"&gt;
  &lt;/a&gt;
  Allowing Public access
&lt;/h2&gt;

&lt;p&gt;By default, whenever you create an API, Strapi creates six endpoints from the name given to the API. The endpoints generated for temperature should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-swUpvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634597663434_Screenshot%2B2021-10-18%2Bat%2B23.54.19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-swUpvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634597663434_Screenshot%2B2021-10-18%2Bat%2B23.54.19.png" alt="" width="880" height="662"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By default, they‚Äôre all going to be restricted from public access. We need to tell Strapi that you‚Äôre okay with exposing these checked endpoints to the public. Go to &lt;em&gt;Settings &amp;gt; Users &amp;amp; Permissions Plugin&lt;/em&gt;  ****** &lt;em&gt;&amp;gt; Roles&lt;/em&gt; and click to edit the &lt;em&gt;Public Role&lt;/em&gt;. Next scroll down to permissions and check &lt;code&gt;find&lt;/code&gt;  for Temperature.&lt;/p&gt;

&lt;p&gt;This endpoint: &lt;a href="http://localhost:1337/temperatures"&gt;http://localhost:1337/temperatures&lt;/a&gt; should now be available&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#scaffolding-a-nextjs-project"&gt;
  &lt;/a&gt;
  Scaffolding a NextJs project
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Create a Next.js app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To create a Next.js app, open your terminal, &lt;code&gt;cd&lt;/code&gt; into the directory you‚Äôd like to create the app in, and run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    npx create-next-app &lt;span class="nt"&gt;-e&lt;/span&gt; with-tailwindcss nextjs-temperature
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This would also configure Tailwind CSS with the project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the&lt;/strong&gt; &lt;strong&gt;Next.js&lt;/strong&gt; &lt;strong&gt;development server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next we &lt;code&gt;cd&lt;/code&gt; into the newly created directory, in our case that would be &lt;code&gt;nextjs-temperature&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    cd nextjs-temperature
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After which we start up the development server, by running this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything was set up fine, the next.js server should now be running on &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; we should get this shown on our browser:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vr2ocKp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634387555599_Screenshot%2B2021-10-16%2Bat%2B13.32.30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vr2ocKp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634387555599_Screenshot%2B2021-10-16%2Bat%2B13.32.30.png" alt="" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-nextjs-components"&gt;
  &lt;/a&gt;
  Building NextJs Components
&lt;/h2&gt;

&lt;p&gt;After setup we should have a folder structure such as this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lSen-48O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634568345150_Screenshot%2B2021-10-18%2Bat%2B15.45.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lSen-48O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634568345150_Screenshot%2B2021-10-18%2Bat%2B15.45.40.png" alt="" width="626" height="1374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we create the temperature converter page. We open the &lt;code&gt;index.js&lt;/code&gt; file in our favourite text editor, we delete its contents and replace them with the file content below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import Head from 'next/head'
    import { useState, useEffect } from 'react'
    import { converter, fetchQuery, getUniqueTemp } from '../utils/helper'
    export default function Home({ temperatures }) {
      const [answer, setAnswer] = useState('')
      const [from, setFrom] = useState('C')
      const [to, setTo] = useState('F')
      const [temperature, setTemperature] = useState(1)
      const [options, setOptions] = useState([])
      useEffect(() =&amp;gt; {
        setOptions(getUniqueTemp(temperatures, 'from'))
      }, [temperatures])

      const handleSubmit = (e) =&amp;gt; {
        e.preventDefault()
        setAnswer(`${converter(temperatures, from, to, Number(temperature))} ${to}`)
      }

      return (
        &amp;lt;div className="flex flex-col items-center justify-center min-h-screen py-2"&amp;gt;
          &amp;lt;Head&amp;gt;
            &amp;lt;title&amp;gt;Temperature Converter&amp;lt;/title&amp;gt;
            &amp;lt;link rel="icon" href="/favicon.ico" /&amp;gt;
          &amp;lt;/Head&amp;gt;
          &amp;lt;main className="flex flex-col items-center justify-center w-full flex-1 px-20 text-center"&amp;gt;
            &amp;lt;h1 className="text-6xl font-bold"&amp;gt;
              Temperature {' '}
              &amp;lt;a className="text-blue-600" href="https://nextjs.org"&amp;gt;
               Converter
              &amp;lt;/a&amp;gt;
            &amp;lt;/h1&amp;gt;
            &amp;lt;form className="space-y-4 text-gray-700" onSubmit={handleSubmit}&amp;gt;
      &amp;lt;div className="flex flex-wrap"&amp;gt;

      &amp;lt;/div&amp;gt;
      &amp;lt;div className="flex flex-wrap -mx-2 space-y-4 md:space-y-0"&amp;gt;
        &amp;lt;div className="w-full px-2 md:w-1/2"&amp;gt;
          &amp;lt;label className="block mb-1"&amp;gt;From&amp;lt;/label&amp;gt;
          &amp;lt;select className="w-full h-10 pl-3 pr-6 text-base placeholder-gray-600 border rounded-lg appearance-none focus:shadow-outline" placeholder="Select From" value={from} onChange={ (e) =&amp;gt; { setFrom(e.target.value)}}&amp;gt;
          {options.map(e =&amp;gt; (
             &amp;lt;option value={e} key={e}&amp;gt;{e}&amp;lt;/option&amp;gt;
          ))}
         &amp;lt;/select&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div className="w-full px-2 md:w-1/2"&amp;gt;
          &amp;lt;label className="block mb-1" &amp;gt;To&amp;lt;/label&amp;gt;
          &amp;lt;select className="w-full h-10 pl-3 pr-6 text-base placeholder-gray-600 border rounded-lg appearance-none focus:shadow-outline" placeholder="Select To" value={to} onChange={ (e) =&amp;gt; { setTo(e.target.value)}}&amp;gt;
          {options.map(e =&amp;gt; (
             &amp;lt;option value={e} key={e}&amp;gt;{e}&amp;lt;/option&amp;gt;
          ))}
         &amp;lt;/select&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div className="flex flex-wrap -mx-2 space-y-4 md:space-y-0"&amp;gt;
        &amp;lt;div className="w-full px-2 md:w-1/2"&amp;gt;
          &amp;lt;label className="block mb-1"&amp;gt;Value&amp;lt;/label&amp;gt;
          &amp;lt;input className="w-full h-10 px-3 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline" type="number" value={temperature} onChange={ (e) =&amp;gt; { setTemperature(e.target.value)}}/&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div className="w-full px-2 md:w-1/2"&amp;gt;
        &amp;lt;input className="w-full h-10 px-3 my-7 cursor-pointer text-base placeholder-gray-600 border rounded-lg focus:shadow-outline hover:bg-blue-600 hover:text-white" type="submit" value="Convert"/&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/form&amp;gt;
            &amp;lt;div&amp;gt;
              Result is : {answer}
            &amp;lt;/div&amp;gt;
          &amp;lt;/main&amp;gt;
        &amp;lt;/div&amp;gt;
      )
    }
    export async function getStaticProps() {
      const temperatures = await fetchQuery('temperatures')
      return {
        props: {
          temperatures
        }
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file is the entry point to our app. We use it to  create out a design for the app, and also set up our functionalities to handle the conversion process. We proceed to create a &lt;strong&gt;utils&lt;/strong&gt; folder at the root of our project and create a file called &lt;code&gt;helper.js&lt;/code&gt; in it, this file would be where we place all helper functions.&lt;/p&gt;

&lt;p&gt;This &lt;code&gt;helper.js&lt;/code&gt; file would contain basic helper functions that would help us convert the temperature as well as get data from the Strapi backend server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const baseUrl = process.env.BASE_URL || 'localhost:1337'
    export const converter = (temperatures, from, to, val) =&amp;gt; {
      let temperature = {}
      let answer = 0
      switch(`${from}-${to}`){
        case 'F-C':
          temperature = getFields(temperatures, from, to)
          answer = (((val + temperature.offset) * temperature.multiplier ) + temperature.offset_add)
          break;
        case 'C-F':
          temperature = getFields(temperatures, from, to)
          answer = (((val + temperature.offset) * temperature.multiplier ) + temperature.offset_add)
          break;
        case 'C-K':
          temperature = getFields(temperatures, from, to)
          answer = (((val + temperature.offset) * temperature.multiplier ) + temperature.offset_add)
          break;
        case 'K-C':
          temperature = getFields(temperatures, from, to)
          answer = (((val + temperature.offset) * temperature.multiplier ) + temperature.offset_add)
          break;
        case 'F-K':
          temperature = getFields(temperatures, from, to)
          answer = (((val + temperature.offset) * temperature.multiplier ) + temperature.offset_add)
          break;
        case 'K-F':
          temperature = getFields(temperatures, from, to)
          answer = (((val + temperature.offset) * temperature.multiplier ) + temperature.offset_add)
          break;
        default:
          answer = val
          break;
      }
      return answer
    }
    export const getFields = (array, from, to) =&amp;gt; {
      return array.find(x =&amp;gt; x.from === from &amp;amp;&amp;amp; x.to === to)
    }
    export const fetchQuery = async (path, params = null) =&amp;gt; {
      let url
      if (params !== null) {
        url = `${baseUrl}/${path}/${params}`
      } else {
        url = `${baseUrl}/${path}`
      }
      const response = await fetch(`http://${url}`)
      const data = await response.json()
      return data
    }
    export const getUniqueTemp = (arr, key) =&amp;gt; {
      let keys = arr.map(function(item) { return item[key]; })
      return [...new Set(keys)]
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finished-app"&gt;
  &lt;/a&gt;
  Finished App
&lt;/h2&gt;

&lt;p&gt;The finished app looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vrJLS-jR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634732683979_Screenshot%2B2021-10-20%2Bat%2B13.24.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vrJLS-jR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_1F009F9E3EE9CBA1F20D406E4458E971D06EA9323A4B53D1F0303E815DE8B180_1634732683979_Screenshot%2B2021-10-20%2Bat%2B13.24.38.png" alt="" width="880" height="510"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;And that's it, we saw how to set up a temperature converter using Strapi, Next.js and Tailwind CSS. This article can be taken further to be used as a base for other kinds of conversions. This goes to show what we can achieve using this setup and the possibilities therein.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>tailwindcss</category>
      <category>strapi</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Guest Post Reach Blog Links</title>
      <author>ravitejafe</author>
      <pubDate>Fri, 05 Nov 2021 09:30:56 +0000</pubDate>
      <link>https://dev.to/tejattt/guest-post-reach-blog-links-d5g</link>
      <guid>https://dev.to/tejattt/guest-post-reach-blog-links-d5g</guid>
      <description>&lt;p&gt;Guest Post Reach blog is one of the top guest blogging websites that accept posts from guest posts anywhere in this technological universe - Technology Write for us. Because we are aware that guest bloggers need opportunities to post regularly&lt;/p&gt;

&lt;p&gt;Do you wish to write on anything related to technology,business, fashion, entertainment, travel, health, sports and news, or any topic of your choice, you have to come the right place. We have Guest Blog Posting depending on the subject you wish to write on. If you are a content writer, this is the right platform for you. You can join our team of writers by posting your article which will be shared the people of similar interests.&lt;/p&gt;

&lt;p&gt;Technology Write For Us&lt;br&gt;
&lt;a href="https://guestpostreach.com/write-for-us/"&gt;https://guestpostreach.com/write-for-us/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y2Mate Youtube Downloader free&lt;br&gt;
&lt;a href="https://guestpostreach.com/y2mate-youtube-downloader-free/"&gt;https://guestpostreach.com/y2mate-youtube-downloader-free/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RomsMania Is Safe&lt;br&gt;
&lt;a href="https://guestpostreach.com/romsmania/"&gt;https://guestpostreach.com/romsmania/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Where is the Armory in WoW Classic&lt;br&gt;
&lt;a href="https://guestpostreach.com/what-is-wow-classic-armorywhere-is-the-armory-in-wow-classic/"&gt;https://guestpostreach.com/what-is-wow-classic-armorywhere-is-the-armory-in-wow-classic/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/jio-rockers-website-watch-and-download-hd-latest-movies/"&gt;https://guestpostreach.com/jio-rockers-website-watch-and-download-hd-latest-movies/&lt;/a&gt;&lt;br&gt;
Jio Rockers website : watch and Download Hd latest Movies&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/filmyzilla/"&gt;https://guestpostreach.com/filmyzilla/&lt;/a&gt;&lt;br&gt;
Filmyzilla : Watch and Download movies&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/ssrmovies-illegal-movies-download-website-free/"&gt;https://guestpostreach.com/ssrmovies-illegal-movies-download-website-free/&lt;/a&gt;&lt;br&gt;
SSRMovies : Illegal Movies Download Website free&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/yts-yify-movies/"&gt;https://guestpostreach.com/yts-yify-movies/&lt;/a&gt;&lt;br&gt;
YTS ‚Äì YIFY Movies ‚Äì Torrent Downloads &amp;amp; Alternatives&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/tamilyogi/"&gt;https://guestpostreach.com/tamilyogi/&lt;/a&gt;&lt;br&gt;
Tamilyogi ‚Äì Illegal latest HD Movies Download Website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/movierulz/"&gt;https://guestpostreach.com/movierulz/&lt;/a&gt;&lt;br&gt;
Find Latest Movies and Shows on the Internet With the Movierulz Website&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/ways-to-solve-pii_pn_21b3e8d4b4164fdf-error-code-with-solutions/"&gt;https://guestpostreach.com/ways-to-solve-pii_pn_21b3e8d4b4164fdf-error-code-with-solutions/&lt;/a&gt;&lt;br&gt;
solve pii pn 21b3e8d4b4164fdf errorcode&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/how-to-fix-pii_email_7f50b3874b546a6ddaaf-error-code-is-ms-outlook-mail/"&gt;https://guestpostreach.com/how-to-fix-pii_email_7f50b3874b546a6ddaaf-error-code-is-ms-outlook-mail/&lt;/a&gt;&lt;br&gt;
fix pii email 7f50b3874b546a6ddaaf&lt;/p&gt;

&lt;p&gt;&lt;a href="https://guestpostreach.com/how-to-fix-solve-a-solution-of-pii_email_5d94daa1541973bf76f2-error-code/"&gt;https://guestpostreach.com/how-to-fix-solve-a-solution-of-pii_email_5d94daa1541973bf76f2-error-code/&lt;/a&gt;&lt;br&gt;
How to Fix &amp;amp; solve a Solution of [pii_email_5d94daa1541973bf76f2] Error Code&lt;/p&gt;

</description>
    </item>
    <item>
      <title>p2p crypto exchange development</title>
      <author>jonathan carter</author>
      <pubDate>Fri, 05 Nov 2021 09:26:21 +0000</pubDate>
      <link>https://dev.to/jonathancarthe/p2p-crypto-exchange-development-54n2</link>
      <guid>https://dev.to/jonathancarthe/p2p-crypto-exchange-development-54n2</guid>
      <description>&lt;p&gt;Cryptocurrencies are the currency of the future. One of the main reasons that they are becoming so popular among people is that the central banks can‚Äôt have control over the transaction or the funds. Peer-to-peer cryptocurrency exchange can be known as a platform where traders from all around the world trade directly with each other. Because there is no middle person here so the individuals don‚Äôt need to pay any transaction fee. Also because there are only two participants in the transaction, the speed of interaction has increased significantly. Plus, blockchain technology boosts the revolution of cryptocurrencies. Some popular p2p exchanges are: remitano, Binance,Buycoins, localbitcoins .&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i3w5ngIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhvebbaie4nzshrm0kac.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3w5ngIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhvebbaie4nzshrm0kac.jpg" alt="Image description" width="612" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-p2p-cryptocurrency-exchange-platform-work"&gt;
  &lt;/a&gt;
  How does a p2p cryptocurrency exchange platform work?
&lt;/h2&gt;

&lt;p&gt;P2p exchange is a decentralized platform working on the blockchain technology. It connects buyers and sellers directly so here the third parties will be deleted. &lt;a href="https://radindev.com/p2p-crypto-exchange-script/"&gt;P2P crypto exchange development&lt;/a&gt; is the best way to grow your business. A p2p crypto exchange development is safe, secure and it has control over information and funds with more privacy.&lt;br&gt;
When you sign up for a peer-to-peer exchange you will be asked to verify your details. As soon as you are verified you can start your trading with other verified buyers or sellers. Any buyers or sellers can create their own orders or browse the existing ones to find their match.&lt;br&gt;
‚Ä¢ Users register on the p2p exchange platform&lt;br&gt;
‚Ä¢ Users will go through a KYC verification process&lt;br&gt;
‚Ä¢ Buyer places a buy order&lt;br&gt;
‚Ä¢ An address for a wallet will be created for the user&lt;br&gt;
‚Ä¢ The matching engine will match the seller with the right buyer&lt;br&gt;
‚Ä¢ The buyer and the seller agree on the terms of the trade&lt;br&gt;
‚Ä¢ Smart contract-based escrow holds sellers' crypto assets to be sold.&lt;br&gt;
‚Ä¢ Buyers make the payment for crypto assets to be purchased&lt;br&gt;
‚Ä¢ The seller will confirm that he has received the payment&lt;br&gt;
‚Ä¢ Escrow wallet will release the crypto assets, transferring to the same buyers' wallet address&lt;br&gt;
‚Ä¢ The buyers can transfer the new assets to the cold wallet&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZ1e-xvK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpz3y01x8rt8oq7fq4z2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZZ1e-xvK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpz3y01x8rt8oq7fq4z2.jpg" alt="Image description" width="612" height="330"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-features-that-a-p2p-crypto-exchange-platform-must-have"&gt;
  &lt;/a&gt;
  What are the features that a p2p crypto exchange platform must have?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Multiple cryptocurrencies: Bitcoin, ethereum, Dogecoin,etc. are very popular in the market but there are over 10,000 cryptocurrencies out there ready to be traded. Having the support for various cryptocurrencies users can have transactions in any crypto that they would prefer. By implementing this feature in the platform you make sure that users don‚Äôt need to shuffle between the different platforms to trade different coins.&lt;/li&gt;
&lt;li&gt; Multi-language support: providing content or the platform in multiple languages is a great step to a better understanding of users.&lt;/li&gt;
&lt;li&gt; Payment gateway: a payment gateway is an online payment service. The process to receive payments includes the process of asking the user to fill in some details such as credit/debit card numbers and some other info like this. This technology is used to accept debit or credit card purchases from customers.&lt;/li&gt;
&lt;li&gt; Multi-factor authentication: this feature is also available for users and not only for admins. This feature helps to increase the security level. This platform will keep the verified users updated with emails.&lt;/li&gt;
&lt;li&gt; Ad-based trading: buyers can publish an ad on the platform and determine their way of accepted payments, the price of the cryptos that they accept. And buyers can browse among the previously published ad or they can publish new ads. If a buyer chooses one of the ads and they both agree on the forms they can start trading.&lt;/li&gt;
&lt;li&gt; Secure transaction: users are going to invest their valuable funds and asses in this platform, they will transfer their cryptos and execute transactions through this platform so it is important to develop a secure p2p exchange for the traders. &lt;/li&gt;
&lt;li&gt; Private messaging: as the traders agree on terms to trade with each other they can send a message and connect with each other directly. This will boost the speed of transactions. It is an encrypted chat system that only the user can have the access to it.&lt;/li&gt;
&lt;li&gt; Real market value: it is the price an asset would have in the marketplace or the value that a particular community gives to particular equity or business. Users can have the access to the real market value in the platform. &lt;/li&gt;
&lt;li&gt; KYC and profile verification:  Automated KYC/ID/AML verification is a must-have feature in an exchange platform in recent days. It helps the administrator to find the right user quickly for a better solution. It helps to eliminate the hackers and other problems that may happen.&lt;/li&gt;
&lt;li&gt;Crypto swap: the crypto swap basically allows the crypto holders to easily exchange one cryptocurrency for another one without leaving the current digital wallet. With this feature, the crypto holder can exchange their cryptocurrencies in the private key wallet or in the trading account. &lt;/li&gt;
&lt;li&gt;Trading engine:  used for protocol and security handling. It enables investors and traders to place trades and monitor accounts through financial intermediaries.&lt;/li&gt;
&lt;li&gt;Preferred trading:  Nowadays exchanges provide options for trading, so users can choose a preferred way of trading and make a big profit. Users can always choose their preferred sellers to make it easier for them to make the best possible profit in a limited amount of time.&lt;/li&gt;
&lt;li&gt;Admin panel: The admin panel gives admin the control over different actions, such as tracking the users‚Äô transactions, finding out suspicious actions and users to ban them, viewing the users‚Äô activity and information.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-p2p-crypto-exchange-development"&gt;
  &lt;/a&gt;
  Benefits of p2p crypto exchange development
&lt;/h3&gt;

&lt;p&gt;‚Ä¢ Blockchain development solutions&lt;br&gt;
‚Ä¢ high-speed transactions &lt;br&gt;
ability to run the business &lt;br&gt;
‚Ä¢ globally&lt;br&gt;
‚Ä¢ cost-effective &lt;br&gt;
‚Ä¢ No need for banks or a third parties.24/7 customer support &lt;br&gt;
‚Ä¢ Secure payments methods&lt;br&gt;
‚Ä¢ Reaching the high level of security: fraud prevention, privacy matters&lt;br&gt;
‚Ä¢ Anonymity&lt;br&gt;
‚Ä¢ No commission&lt;br&gt;
‚Ä¢ Convenient payment terms&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XmHq0Gww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a059i0w9j33vqsxp0x39.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XmHq0Gww--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a059i0w9j33vqsxp0x39.jpg" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-p2p-crypto-exchange-development"&gt;
  &lt;/a&gt;
  The p2p crypto exchange development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step1:&lt;/strong&gt; researching, collecting the requirements, and deciding the exchange preparation that suits your business model. Do you have to decide in which blockchain you want to develop your p2p exchange platform? How much is your budget? In this step.&lt;br&gt;
&lt;strong&gt;Step2:&lt;/strong&gt; Essential technology integrations such as UX /UI, the enhanced security with legal compliance based on the geography of the exchange. Make sure the design of the platform is easy to understand and engaging.&lt;br&gt;
&lt;strong&gt;Step3:&lt;/strong&gt; In this step, all of the ready requirements are brought together to build a solution that is 100% functional. The trading engine installation occurs in this step.&lt;br&gt;
&lt;strong&gt;Step4:&lt;/strong&gt; inputting various blockchains into the platform. Testing that technologically the blockchain solution is reliable to compete in the market.&lt;br&gt;
&lt;strong&gt;Step5:&lt;/strong&gt; various tokens, coins, and altcoins list: making sure that the tokens are listed in a proper manner in the platform.&lt;br&gt;
&lt;strong&gt;Step6:&lt;/strong&gt; Launch the platform with enabled change and updates. Make sure that all the features and functions are included and it‚Äôs working correctly.&lt;/p&gt;

</description>
      <category>p2p</category>
      <category>blockchain</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Creating a React component with TDD</title>
      <author>Matti Bar-Zeev</author>
      <pubDate>Fri, 05 Nov 2021 09:23:20 +0000</pubDate>
      <link>https://dev.to/mbarzeev/creating-a-react-component-with-tdd-2jn8</link>
      <guid>https://dev.to/mbarzeev/creating-a-react-component-with-tdd-2jn8</guid>
      <description>&lt;p&gt;Join me in this post as I create a React component using Test Driven Development (TDD) approach.&lt;/p&gt;

&lt;p&gt;I am going to create a confirmation component, which has the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A static title&lt;/li&gt;
&lt;li&gt;A confirmation question - and this can be any question the app would like to confirm&lt;/li&gt;
&lt;li&gt;A button for confirming, supporting an external handler&lt;/li&gt;
&lt;li&gt;A button for canceling, supporting an external handler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both buttons are not aware of what happens when they are clicked, since it is out of the component‚Äôs responsibilities, but the component should enable other components/containers which use it to give it a callback for these buttons.&lt;br&gt;
Here how it should look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gpGiOkb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puc6lqexks3itbver70r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gpGiOkb6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puc6lqexks3itbver70r.png" alt="Image description" width="820" height="364"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;So with that let‚Äôs get started.&lt;br&gt;
The process of TDD is a cycle of writing a test =&amp;gt; watch it fail =&amp;gt; write the minimum code for it to pass =&amp;gt; watch it succeed =&amp;gt; refactor (if needed) =&amp;gt; repeat, and this is what I‚Äôm going to practice here. It may, at some point, appear to you as tedious or perhaps impractical, but I insist on doing this by-the-book and leave it to you to decide whether it serves your purposes well, or you‚Äôd like to cut some corners on the way.&lt;/p&gt;

&lt;p&gt;Off we go with the test file first. I got my Jest testing env running on watch mode and created the component‚Äôs directory named ‚ÄúConfirmation‚Äù and an ‚Äúindex.test.js‚Äù file residing in it.&lt;br&gt;
The first test is pretty abstract. I want to check that rendering the component renders something (anything) to make sure my component exists. In practice I will render my (still not existing) component to see if I can find it on the document by its ‚Äúdialog‚Äù role:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@testing-library/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Confirmation component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should render&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, you guessed it - Jest does not know what ‚ÄúConfirmation‚Äù is, and it is right. Let‚Äôs create that component just enough to satisfy this test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I imported this Component to my test and it passed now. Great.&lt;/p&gt;

&lt;p&gt;Next we would like to have a title for this component. For the purpose of this walkthrough the title is static and should say ‚ÄúConfirmation‚Äù. Let‚Äôs create a test for it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have a title saying "Confirmation"&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Confirmation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The test fails, now we write the code to make it pass:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Moving to the next feature we want to make sure that there is a confirmation question in this component. I want this question to be dynamic so it can be given from outside the component and I think that having the question as the ‚Äúchildren‚Äù of the Confirmation component is the right way to go about it, so here‚Äôs how the test for that looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have a dynamic confirmation question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;question&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Do you confirm?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Confirmation&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again the test fails so I write the code to make it pass:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On for the buttons. I will start with the confirm button. We first want to check that there is a button on the component which says ‚ÄúOK‚Äù. From now on I will write the test first and the code which satisfy it after:&lt;/p&gt;

&lt;p&gt;Test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have an "OK" button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OK&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I‚Äôm using the ‚Äúname‚Äù option here since I know there will be at least one more button in this component and I need to be more specific about which I‚Äôd like to assert&lt;/p&gt;

&lt;p&gt;Component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;OK&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let‚Äôs do the same thing for the ‚ÄúCancel‚Äù button:&lt;/p&gt;

&lt;p&gt;Test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have an "Cancel" button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cancel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;OK&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Cancel&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, nice.&lt;br&gt;
So we got the component rendering what we want (not styled, but that‚Äôs another story) and now I would like to make sure I can pass handlers for the buttons of this component from outside, and make sure that they are being called when the buttons are clicked.&lt;br&gt;
I will start from the test for the ‚ÄúOK‚Äù button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should be able to receive a handler for the "OK" button and execute it upon click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onConfirmationHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="nx"&gt;onConfirmation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onConfirmationHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;okButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OK&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

       &lt;span class="nx"&gt;fireEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;okButton&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onConfirmationHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalled&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What I did was to create a spy function, give it to the component as the ‚ÄúonConfirmation‚Äù handler, simulate a click on the ‚ÄúOK‚Äù button, and assert that the spy has been called.&lt;br&gt;
The test obviously fails, and here is the code to make it happy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onConfirmation&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onConfirmation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nx"&gt;OK&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Cancel&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sweet, let‚Äôs do the same for the ‚ÄúCancel‚Äù button:&lt;/p&gt;

&lt;p&gt;Test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should be able to receive a handler for the "Cancel" button and execute it upon click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onCancellationHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="nx"&gt;onCancellation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onCancellationHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cancelButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cancel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

       &lt;span class="nx"&gt;fireEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cancelButton&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onCancellationHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalled&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onConfirmation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onCancellation&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onConfirmation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nx"&gt;OK&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onCancellation&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
               &lt;span class="nx"&gt;Cancel&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is the full tests file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fireEvent&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@testing-library/react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Confirmation component&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should render&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dialog&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have a title saying "Confirmation"&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Confirmation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have a dynamic confirmation question&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;question&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Do you confirm?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Confirmation&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;question&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have an "OK" button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OK&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should have an "Cancel" button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cancel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})).&lt;/span&gt;&lt;span class="nx"&gt;toBeInTheDocument&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should be able to receive a handler for the "OK" button and execute it upon click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onConfirmationHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="nx"&gt;onConfirmation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onConfirmationHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;okButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OK&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

       &lt;span class="nx"&gt;fireEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;okButton&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onConfirmationHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalled&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;

   &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should be able to receive a handler for the "Cancel" button and execute it upon click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onCancellationHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Confirmation&lt;/span&gt; &lt;span class="nx"&gt;onCancellation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onCancellationHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;       &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cancelButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getByRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cancel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

       &lt;span class="nx"&gt;fireEvent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cancelButton&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

       &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onCancellationHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalled&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And I think that that‚Äôs it! We have all the building blocks and logic of our component implemented and fully tested:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QwWLM2K6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/585wpjzgx9gmv3khya1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QwWLM2K6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/585wpjzgx9gmv3khya1k.png" alt="Image description" width="880" height="288"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, I know, the style is off but this is something we can fix after we are certain our building blocks are intact and all works according to spec.&lt;/p&gt;

&lt;p&gt;Aside from walking with me in creating this component using TDD, this post is clear evidence TDD can be applied, and rather easily, when developing UI components. TDD will guide you step by step through your component features spec and help you focus on what matters while supplying a safety net for future refactoring. This is really awesome!  &lt;/p&gt;

&lt;p&gt;As always, if you have any ideas on how to make this better or any other technique, be sure to share with the rest of us!&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hey! If you liked what you've just read check out &lt;a href="https://twitter.com/mattibarzeev?ref_src=twsrc%5Etfw"&gt;@mattibarzeev&lt;/a&gt; on Twitter&lt;/em&gt;  üçª&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;small&gt;&lt;small&gt;Photo by &lt;a href="https://unsplash.com/@joszczepanska?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jo Szczepanska&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/craft?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/small&gt;&lt;/small&gt;&lt;/small&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Cryptocurrency exchange script</title>
      <author>isabella ciao</author>
      <pubDate>Fri, 05 Nov 2021 09:19:03 +0000</pubDate>
      <link>https://dev.to/isabellaciao/cryptocurrency-exchange-script-4ikn</link>
      <guid>https://dev.to/isabellaciao/cryptocurrency-exchange-script-4ikn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#first-what-is-a-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  First, What is a cryptocurrency exchange?
&lt;/h2&gt;

&lt;p&gt;A cryptocurrency exchange, or a digital currency exchange (DCE), is a business that allows customers to trade cryptocurrencies or digital currencies for other assets, such as conventional fiat money or other digital currencies. Exchanges may accept credit card payments, wire transfers or other forms of payment in exchange for digital currencies or cryptocurrencies. A cryptocurrency exchange can be a market maker that typically takes the bid‚Äìask spreads as a transaction commission for is service or, as a matching platform, simply charges fees. Some brokerages which also focus on other assets such as stocks, like Robinhood and eToro, let users purchase but not withdraw cryptocurrencies to cryptocurrency wallets. Dedicated cryptocurrency exchanges such as Binance and Coinbase do allow cryptocurrency withdrawals, however.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HqKzdiU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8avh2plu6ouhifwqsut.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqKzdiU9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8avh2plu6ouhifwqsut.png" alt="Cryptocurrency Exchange script development" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-cryptocurrency-exchange-work"&gt;
  &lt;/a&gt;
  How does a cryptocurrency exchange work?
&lt;/h2&gt;

&lt;p&gt;In simplified terms, a cryptocurrency exchange is a script that allows crypto traders to conduct their trades. This platform allows you to buy or sell your cryptocurrencies conveniently when you want to. A crypto exchange also allows traders to convert one digital currency for another.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cryptocurrency-exchange-script-development"&gt;
  &lt;/a&gt;
  what is Cryptocurrency Exchange Script development?
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency exchange script development to build your desired cryptocurrency exchange script. Share your dreamy crypto projects to cryptocurrency experts who start work on crypto exchange with latest technology-stack and result-driven business solutions. The robust cryptocurrency exchange script will provide an opportunity to make a business using blockchain technology. With High-quality interface, high level of security and great performance. Companies have ready-made solutions that will allow you to run your own exchange business in the shortest time. Their script has a professional design and a high level of security. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  Cryptocurrency Exchange Script
&lt;/h2&gt;

&lt;p&gt;Cryptocurrency Exchange Script is a ready to launch Cryptocurrency Trading Script inbuilt with advanced features that allow you launch a profitable cryptocurrency exchange immediately. There are various layers of high security which prevents from fraudulent activities and assure that your money would be safe.The flexibility offered with white label exchange script empowers any customization to facilitate customers as per their requisites. You get 100% un-encrypted source code of this exchange script. Customize at your will, Add/ Edit any feature easily. The exchange script is based on micro-service, and each micro-service can be utilized/exchanged with an external solution.&lt;br&gt;
It includes High liquidity, Ultra-Secure Admin Panel, Hot &amp;amp; Cold Wallet, Mobile Apps, Order book, Escrow based service, Advanced tech stack, White label solution. A Glance of some of them:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#liquidity-module"&gt;
  &lt;/a&gt;
  Liquidity module
&lt;/h3&gt;

&lt;p&gt;An exchange script requires liquidity and order book which helps to attract business. A white-label exchange script offers multiple options for liquidity that include market makers and order books.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#p2p-exchange"&gt;
  &lt;/a&gt;
  P2P Exchange
&lt;/h3&gt;

&lt;p&gt;Apart from having the normal exchange features, script has P2P exchange option. P2P exchanges allow the participants of the market to trade directly with each other without any trusted third party to process all trades.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#admin-panel"&gt;
  &lt;/a&gt;
  Admin Panel
&lt;/h3&gt;

&lt;p&gt;Define the responsibilities and rights of admins. Manage users and control all finance operation. Comprehensive reporting tools that provide details information about transactions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hot-amp-cold-wallet"&gt;
  &lt;/a&gt;
  Hot &amp;amp; Cold Wallet
&lt;/h3&gt;

&lt;p&gt;The exchange script comes with a built-in Hot Wallet. The money can be easily extended to a Cold Wallet. The operation of the "cold wallet" allows preventing the risks of storage of funds.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7mzE5dsU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebxvrqzjh2gzsz66ix30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mzE5dsU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebxvrqzjh2gzsz66ix30.png" alt="White Label Cryptocurrency Exchange Script" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-label-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  White Label Cryptocurrency Exchange Script
&lt;/h2&gt;

&lt;p&gt;cryptocurrency exchange script permits everyone to start their own cryptocurrency exchange script with minimal cost and faster deployment. Companies‚Äô white labeled, ready-made exchange script has built with secure back-end, and a set of functionality which is ready to be arranged. Enhanced Cryptocurrency trading script can be simply customized by carry out your brand logo, templates, themes with your desired UI/UX design that saves development time and cost.&lt;br&gt;
Companies built featured bitcoin exchange script to build your cryptocurrency exchange script as all in one stop solution like an easy to use dashboard that permits users to manage and trade cryptos, trading pairs and coin listings, as well as multi payment and multi lingual support &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-various-type-of-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  The various type of cryptocurrency exchange script
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#centralized-crypto-exchange"&gt;
  &lt;/a&gt;
  Centralized crypto exchange
&lt;/h3&gt;

&lt;p&gt;Centralized Crypto Exchange. Centralized exchanges are the most commonly used exchanges among investors in the current market. The customers deposit their funds directly into the exchange, and the third party initiates the transaction process. ... And the exchange depends upon the third party who is in control of the funds&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#decentralized-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  Decentralized Cryptocurrency Exchange
&lt;/h3&gt;

&lt;p&gt;What is a decentralized exchange? A decentralized exchange, also known as DEX, offers a new type of pair-matching that allows traders to place orders and trade cryptocurrencies without an intermediary institution controlling the funds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hybrid-crypto-exchange"&gt;
  &lt;/a&gt;
  Hybrid crypto exchange
&lt;/h3&gt;

&lt;p&gt;The hybrid exchange combines the best of centralized and decentralized exchanges ‚Äì offering high liquidity and fast transactions of centralized exchanges and anonymity and protection of decentralized exchanges. Owing to these benefits, hybrid exchanges are gaining popularity among traders and businesses planning to launch a crypto exchange.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#p2p-crypto-exchange-peer-to-peer"&gt;
  &lt;/a&gt;
  P2P crypto exchange (peer to peer)
&lt;/h3&gt;

&lt;p&gt;We know that P2P (Peer to Peer) - Decentralized Exchanges actually allow users of the market to trade cryptocurrencies directly with each participant without any 3rd party involvements to process all cryptocurrency trading.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#p2a-crypto-exchange-peer-to-admin"&gt;
  &lt;/a&gt;
  P2A crypto exchange (peer to admin)
&lt;/h3&gt;

&lt;p&gt;Bitcoin trading always happens through a bitcoin trading website. Here admin (owner) of the website has the power to set the selling price and buying price of bitcoin. So traders are allowed to trade only with the specified price rate. Since the admin has the control over the price fixing, he can gain a huge profit from every successful trade.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#escrow-crypto-exchange"&gt;
  &lt;/a&gt;
  Escrow Crypto Exchange
&lt;/h3&gt;

&lt;p&gt;Escrow based exchange built by programming like PHP, JavaScript, MEAN and MERN that will act as a trusted 3rd party interface sends and receives cryptocurrencies on end of two parties.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TTdHMcNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s12c5k0j0h4nmxw8tlxm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TTdHMcNr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s12c5k0j0h4nmxw8tlxm.png" alt="FEATURES OF CRYPTOCURRENCY EXCHANGE SCRIPT" width="880" height="589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  FEATURES OF CRYPTOCURRENCY EXCHANGE SCRIPT
&lt;/h2&gt;

&lt;p&gt;‚Ä¢ Robust admin and users dashboard&lt;br&gt;
‚Ä¢ Secure cryptocurrency transaction&lt;br&gt;
‚Ä¢ Premium UI/UX&lt;br&gt;
‚Ä¢ Record complete history of cryptocurrency transactions&lt;br&gt;
‚Ä¢ Seamless communication between buyer and seller&lt;br&gt;
‚Ä¢ Flawless trade of cryptocurrency&lt;br&gt;
‚Ä¢ Two factor authentication&lt;br&gt;
‚Ä¢ Advanced Smart contract&lt;br&gt;
‚Ä¢ Payment gateway integration&lt;br&gt;
‚Ä¢ Instant alert and notification&lt;br&gt;
‚Ä¢ Easy to Use Platform&lt;br&gt;
‚Ä¢ Reliable cryptocurrency Exchange on Blockchain&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-feature"&gt;
  &lt;/a&gt;
  User Feature
&lt;/h3&gt;

&lt;p&gt;‚Ä¢ Atomic Swap&lt;br&gt;
‚Ä¢ Spot Trading&lt;br&gt;
‚Ä¢ OTC Trading&lt;br&gt;
‚Ä¢ Mobile Trading&lt;br&gt;
‚Ä¢ Referral Program&lt;br&gt;
‚Ä¢ Market Price&lt;br&gt;
‚Ä¢ Limit Price&lt;br&gt;
‚Ä¢ Review All Coin Info&lt;br&gt;
‚Ä¢ Payment Method&lt;br&gt;
‚Ä¢ Check Ticket Status&lt;br&gt;
‚Ä¢ Track Live Order Book&lt;br&gt;
‚Ä¢ Recent Crypto Orders&lt;br&gt;
‚Ä¢ Complaint Status&lt;br&gt;
‚Ä¢ Check Hot Wallet Balance&lt;br&gt;
‚Ä¢ Transaction History&lt;br&gt;
‚Ä¢ Biometric Authentication&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-features"&gt;
  &lt;/a&gt;
  Security Features
&lt;/h3&gt;

&lt;p&gt;‚Ä¢ Two-Factor Authentication (2FA)&lt;br&gt;
‚Ä¢ DDOs Withstand Ability&lt;br&gt;
‚Ä¢ Jail Login Method&lt;br&gt;
‚Ä¢ Escrow Management&lt;br&gt;
‚Ä¢ Firebase, Firewall Implementation&lt;br&gt;
‚Ä¢ End-To-End Encrypted Transactions&lt;br&gt;
‚Ä¢ SSL Integration&lt;br&gt;
‚Ä¢ Encrypted Crypto Wallets&lt;br&gt;
‚Ä¢ Anti-Phishing Software&lt;br&gt;
‚Ä¢ Multi-Sig Wallets&lt;br&gt;
‚Ä¢ Browser Detection Security&lt;br&gt;
‚Ä¢ KYC and AML Verification&lt;br&gt;
‚Ä¢ DB Encryption&lt;br&gt;
‚Ä¢ CSRF Protection&lt;br&gt;
‚Ä¢ Decentralized Data Handling&lt;br&gt;
‚Ä¢ IP Login Restriction&lt;br&gt;
‚Ä¢ Regular Security Audits&lt;br&gt;
‚Ä¢ Face &amp;amp; Fingerprint ID&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jB4K1iZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iocjssnlsh9mkobzne84.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jB4K1iZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iocjssnlsh9mkobzne84.png" alt="How to Create a Cryptocurrency Exchange script for Business" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-cryptocurrency-exchange-script-for-business"&gt;
  &lt;/a&gt;
  How to Create a Cryptocurrency Exchange script for Business?
&lt;/h2&gt;

&lt;p&gt;Here we list the crucial steps involved to build a secure cryptocurrency exchange script.&lt;br&gt;
‚Ä¢ Go through market research&lt;br&gt;
‚Ä¢ Evaluate your business requirements&lt;br&gt;
‚Ä¢ Find the Right Location for your bitcoin exchange business&lt;br&gt;
‚Ä¢ Analysis the laws and compliance requirements&lt;br&gt;
‚Ä¢ Select the right type of bitcoin exchange to launch&lt;br&gt;
‚Ä¢ Design the Architecture of your cryptocurrency exchange script&lt;br&gt;
‚Ä¢ Project feasibility&lt;br&gt;
‚Ä¢ Discovery the outstanding cryptocurrency exchange script provider&lt;br&gt;
‚Ä¢ Integrate latest features&lt;br&gt;
‚Ä¢ Implement high-level security features&lt;br&gt;
‚Ä¢ Perform beta testing&lt;br&gt;
‚Ä¢ Deployment&lt;br&gt;
‚Ä¢ maintenance&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-go-through-market-research"&gt;
  &lt;/a&gt;
  1 Go through Market Research
&lt;/h3&gt;

&lt;p&gt;First of all, even though it is all about the cryptocurrency exchange and cryptocurrency trade, you will need to do an updated market analysis that can help you to manage the marketing strategy. For example, BTC prices are rising and so other major cryptocurrencies. But it is an undeniable fact that some other cryptocurrencies are going down. If you have done proper market research, you can consult the best coin to invest in, and if the reader or investor gains more, whom do you think he will consult the next time? It is obviously you. So, it is best to do thorough market research than to jump into the market without any outside interference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-evaluate-your-business-requirements"&gt;
  &lt;/a&gt;
  2 Evaluate Your Business Requirements
&lt;/h3&gt;

&lt;p&gt;As a crypto exchange owner, you need to know the requirements of your exchange. Never fail to document your requirements as a Business Requirement Specification document. This will help you to track what your exchange will hold with. The crypto exchange solution providers will take your Business Requirement Specification (BRS) document and they will analyze the feasibility of the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-find-the-right-location-for-your-bitcoin-exchange-business"&gt;
  &lt;/a&gt;
  3 Find the Right Location for your bitcoin exchange business
&lt;/h3&gt;

&lt;p&gt;You need to decide which would be the right and best place for starting the cryptocurrency exchange business. Because, some major countries like Russia, Bolivia, Ecuador, and Nepal are saying ‚ÄúNo‚Äù to cryptocurrency. Which means it is considered to be illegal and forbidden in those countries. So you cannot build a bitcoin exchange website there to make lucrative money. But some countries are allowing people to trade cryptos and to create a crypto exchange script. Those cryptocurrency-friendly countries are listed below. Such as: &lt;br&gt;
‚Ä¢ The United States of America&lt;br&gt;
‚Ä¢ Canada&lt;br&gt;
‚Ä¢ Japan&lt;br&gt;
‚Ä¢ Singapore&lt;br&gt;
‚Ä¢ Malta&lt;br&gt;
‚Ä¢ Australia&lt;br&gt;
‚Ä¢ European Union countries&lt;br&gt;
So you need to analyze which would be the right location for starting the bitcoin exchange site and plan accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-analysis-the-laws-and-compliance-requirements"&gt;
  &lt;/a&gt;
  4 Analysis the Laws and Compliance Requirements
&lt;/h3&gt;

&lt;p&gt;The whole idea of cryptocurrency still does not reach well to many major countries except a few. The law differs in every country so check the laws in the country that you are planning to start a cryptocurrency exchange business. Thus, Proper licensing is needed on which your crypto exchange plans to operate. In many places, crypto exchange script operates without significant oversight. In the US, digital currency operators must get proper licenses from the government for Money Transmitter businesses. Also, they must follow SEC &amp;amp; CFTC rules and regulations. Thus, consult a legal and professional expert in the crypto business field before starting a bitcoin exchange business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-select-the-right-type-of-bitcoin-exchange-to-launch"&gt;
  &lt;/a&gt;
  5 Select the Right Type of bitcoin exchange to Launch
&lt;/h3&gt;

&lt;p&gt;Deciding the type of cryptocurrency exchange script is more crucial before leaping into the bitcoin exchange business. There are three different types of cryptocurrency exchanges in the crypto industry. They are:&lt;br&gt;
‚Ä¢ Centralized cryptocurrency exchange&lt;br&gt;
‚Ä¢ Decentralized cryptocurrency exchange&lt;br&gt;
‚Ä¢ Hybrid Cryptocurrency exchange&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-design-the-architecture-of-your-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  6 Design the Architecture of your Cryptocurrency Exchange script
&lt;/h3&gt;

&lt;p&gt;After choosing the type of crypto exchange for your business, you must design the architecture of your exchange script. For designing the effective architecture, you must enable four essential components. They are:&lt;br&gt;
a) Trade engine&lt;br&gt;
Without this core part, the whole mechanism cannot work. A trading engine should have unhindered access to the order book, match all the purchasing and selling orders, process transactions and calculate balances&lt;br&gt;
b) Crypto wallet development &amp;amp; integration&lt;br&gt;
The cryptocurrency currency can be well compared with a bank account. It lets you store your sum and also transact when required. To ensure safety a two-way authentication process is maintained. A cryptocurrency wallet is mostly used to store, receive, and transfer a wide range of cryptos in a risk-free manner. Implement hot or cold storage systems to offer a hack-free environment in your exchange. In the hot wallet, the user can instantly withdraw cryptos without the approval of the exchange owner and it is completely online storage. So it enables real-time transactions. Cold storage wallet is completely offline storage and it is advisable to integrate a cold storage wallet since it is not vulnerable to cyberattacks and other malware activities.&lt;br&gt;
c) Admin Control Panel&lt;br&gt;
This powerful dashboard is ought to help the administrator run the trading operations as well as verifying processes, create liquidity, and provide helpful and professional customer support.&lt;br&gt;
d) User Interface (UI/IX)&lt;br&gt;
The user interface is one of the important components that you must take into account while building a bitcoin exchange website. The user interface must be fascinating and friendly because it helps to provide an amazing trading experience to your users. You need to make sure that the user-interface is compatible with multiple devices like smartphones, iPad, and tablets. Also, you can enhance trading engagements by developing crypto trading mobile apps for your users. To satisfy your global users, you must enable some reliable functions.&lt;br&gt;
‚Ä¢ Register and access the account at any time in a risk-free manner.&lt;br&gt;
‚Ä¢ Deposit, bank, and withdraw user‚Äôs digital assets at any time&lt;br&gt;
‚Ä¢ Viewing the history of transactions, balances, statistics, and performance charts.&lt;br&gt;
‚Ä¢ Allowing your users to buy and sell major digital currencies at any time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-project-feasibility"&gt;
  &lt;/a&gt;
  7 Project Feasibility
&lt;/h3&gt;

&lt;p&gt;The project feasibility will be based on the cost, time, and resources needed for the cryptocurrency exchange development. Apart from this, the deep analysis will be done by the crypto exchange solution providers like the following essential factors.&lt;br&gt;
Economic ‚Äì Whether the project can be completed within the allotted budget&lt;br&gt;
Legal ‚Äì Whether we have the potential to handle this project as cyber law and other regulatory compliance.&lt;br&gt;
Operational Feasibility ‚Äì Whether we can create operations as per the client‚Äôs expectations and requirements&lt;br&gt;
Technical ‚Äì Need to check whether the current computer system supports the advanced technology that is involved in the project.&lt;br&gt;
Schedule ‚Äì Decide whether the project can be completed within the given time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-find-the-outstanding-cryptocurrency-exchange-script-provider"&gt;
  &lt;/a&gt;
  8 Find the Outstanding Cryptocurrency Exchange Script provider
&lt;/h3&gt;

&lt;p&gt;It is the most essential step of creating a crypto exchange script. Because in this current time, there are lots and lots of crypto exchange script providers in the global marketplace. But everyone doesn‚Äôt offer the best-quality crypto exchange products. There are two ways that you can follow to build a bitcoin exchange script. Either from scratch or else by using the premium Cryptocurrency exchange script. But the fact is many people prefer ready-made bitcoin exchange Script to create a crypto exchange script rather than developing from scratch. Because it is cheap, fast, and secure with all the customizable options and outstanding trading features. So choose the best cryptocurrency exchange Script provider to start a crypto exchange business that will leverage top-notch results.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-integrate-latest-features"&gt;
  &lt;/a&gt;
  9 Integrate Latest Features
&lt;/h3&gt;

&lt;p&gt;Features play a vital role in developing a successful crypto exchange script. The Trading features must be more effective for the users in your exchange. So it may grab many crypto users from various countries and helps to increase the overall user base of your exchange. There are some ideal technical features that you must integrate into your crypto exchange script. &lt;br&gt;
By incorporating these essential features, both the experienced and the new crypto traders will get the best trading experience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-implement-highlevel-security-features"&gt;
  &lt;/a&gt;
  10 Implement High-level Security Features
&lt;/h3&gt;

&lt;p&gt;As of now, bitcoins and crypto exchanges are the main targets for anonymous hackers. Many bitcoin exchange scrpit have lost millions worth of crypto assets due to improper security systems and loopholes. So, here we list some high-level security mechanisms that you must enable into your cryptocurrency exchange script.&lt;br&gt;
By integrating these protective systems, your exchange can eliminate hacking and other fraudulent activities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-perform-beta-testing"&gt;
  &lt;/a&gt;
  11 Perform Beta Testing
&lt;/h3&gt;

&lt;p&gt;After integrating all the essential features and security features, you can run a beta test for your exchange. By performing the beta testing, you can collect the errors, bugs, issues, and feedback. If unfortunately, your crypto exchange faces any issues in testing, then you can easily rectify them instantly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-deployment"&gt;
  &lt;/a&gt;
  12 Deployment
&lt;/h3&gt;

&lt;p&gt;After the beta testing is over, your exchange is ready for the deployment phase. In this phase, you will get your fully functional and ready to go live crypto exchange script. Once your exchange gets deployed with the help of a professional crypto exchange script provider, you need to market your exchange through promotions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-maintenance"&gt;
  &lt;/a&gt;
  13 Maintenance
&lt;/h3&gt;

&lt;p&gt;The process of creating your crypto exchange does not stop with the deployment. Maintenance has to be done periodically for your platform. Because there will be some anonymous attackers who will look for some security hole to inject threats. This is not to threaten you; this is just a word of caution from our side. Thus, make sure whether your crypto exchange script is maintained with upgraded security modules or not. These are the stages involved in launching a secure and successful crypto exchange. By considering all these vital steps, you can create your bitcoin exchange script within 7 days. The only part that lies in your hand is preparing your required business documents and approaching a genuine cryptocurrency exchange script provider.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9sxF-cbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjn7ooi62sw6zvpnmw53.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9sxF-cbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjn7ooi62sw6zvpnmw53.png" alt="Advantages of Starting a Cryptocurrency Exchange Business" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-starting-a-cryptocurrency-exchange-business-using-cryptocurrency-exchange-script"&gt;
  &lt;/a&gt;
  Advantages of Starting a Cryptocurrency Exchange Business Using Cryptocurrency Exchange script
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; If you are an admin in the exchange, you can charge fees for every successful cryptocurrency trading&lt;/li&gt;
&lt;li&gt; If you are integrating the IEO module in the exchange script, then you can earn separate profitable money through listing fees.&lt;/li&gt;
&lt;li&gt; cryptocurrency exchange script has high customization scope. So you can easily customize the theme, logo, name, and other front-end designs as per your business needs&lt;/li&gt;
&lt;li&gt; You can expand your business and improve your brand visibility in the market quickly&lt;/li&gt;
&lt;li&gt; You can gain a plenty amount of profits in a short time.&lt;/li&gt;
&lt;li&gt; Your global crypto users can get immediate and safe crypto transactions.&lt;/li&gt;
&lt;li&gt; You can neglect to spend more money &amp;amp; time on making a superfine crypto exchange script.&lt;/li&gt;
&lt;li&gt; Deploying the cryptocurrency exchange script will be easy and simple&lt;/li&gt;
&lt;li&gt; You can get productive 24*7 technical and customer support from the cryptocurrency exchange script provider.
## How much does Cryptocurrency exchange script development cost?
Cryptocurrency exchange script development follows the average cost similar to building an application. Crypto technology has a vast pool of features that may vary the cost of development. The features include multiple platforms, multiple wallets, and currency; two-way authentication, chatbots, additional backups, large servers and much more. It is suggested to share your requirements with the blockchain developers and calculate the average cost based on the features.
## Which is the best cryptocurrency exchange script?
### Top 10 Cryptocurrency Exchange Scripts:
‚Ä¢ Binance clone script.
‚Ä¢ LocalBitcoins clone script.
‚Ä¢ Coinbase clone script.
‚Ä¢ Paxful clone script.
‚Ä¢ Remitano clone script.
‚Ä¢ Bitstamp clone script.
‚Ä¢ Bithumb clone script.
‚Ä¢ Wazirx clone script&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
      <category>cryptocurrency</category>
      <category>exchange</category>
    </item>
    <item>
      <title>Rules Engine Ë¶èÂâáÂºïÊìé</title>
      <author>Leon</author>
      <pubDate>Fri, 05 Nov 2021 09:17:52 +0000</pubDate>
      <link>https://dev.to/leon0824/rules-engine-gui-ze-yin-qing-2jbh</link>
      <guid>https://dev.to/leon0824/rules-engine-gui-ze-yin-qing-2jbh</guid>
      <description>&lt;p&gt;ÊúÄËøëÂú®Êüê‰∫õÊ©üÁ∑£‰∏ãË™çË≠ò‰∫ÜË¶èÂâáÂºïÊìéÔºå‰ª•ËèØÊñá‰ªãÁ¥πË¶èÂâáÂºïÊìéÁöÑÊñáÁ´†Â•ΩÂÉè‰∏çÂ§öÔºåÈÄôÈÇäË©¶ËëóÁ≤óÊ∑∫ÁöÑË®ò‰∏ãÊàëÂ∞çË¶èÂâáÂºïÊìéÁöÑË™çË≠ò„ÄÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E4%BB%80%E9%BA%BC%E6%98%AF%E8%A6%8F%E5%89%87%E5%BC%95%E6%93%8E"&gt;
  &lt;/a&gt;
  ‰ªÄÈ∫ºÊòØË¶èÂâáÂºïÊìéÔºü
&lt;/h2&gt;

&lt;p&gt;Âú®Á®ãÂºèÁöÑ‰∏ñÁïåÔºåË¶èÂâáÂºïÊìéÈÄöÂ∏∏‰ª•Â•ó‰ª∂ÁöÑÊñπÂºèÂ≠òÂú®ÔºåÂú®Á≥ªÁµ±ÂÖßËóâÁî±Ë¶èÂºïÊìéÂ•ó‰ª∂ÁöÑÂºïÂÖ•ÔºåÂèØ‰ª•Âà©Áî®Ë¶èÂâáÂºïÊìéÊèê‰æõÁöÑÁâπÂÆöÊñπÊ≥ï‰æÜÂÆöÁæ©‰∏ÄÁ≥ªÂàóÁöÑÂïÜÊ•≠ÈÇèËºØÔºåÂåÖÊã¨ÊØèÂÄãÂïÜÊ•≠ÈÇèËºØË¢´Ëß∏ÁôºÁöÑÊ¢ù‰ª∂Ôºå‰ª•ÂèäË¢´Ëß∏ÁôºÂæåÁöÑË°åÁÇ∫„ÄÇ&lt;/p&gt;

&lt;p&gt;‰∏ÄÂÄãÊúÄÂÖ∏ÂûãÁöÑ‰æãÂ≠êÔºöË©ïÂàÜÊ©üÂà∂Ôºå‰πùÂçÅÂàÜ‰ª•‰∏äÁöÑÁÇ∫Áî≤Á¥öÔºå‰∫´ÊúâÊüê‰∫õÁâπÊÆäÂÑ™ÊÉ†Ôºõ‰∏ÉÂçÅËá≥‰πùÂçÅÂàÜÁöÑÁÇ∫‰πôÁ¥öÔºå‰∫´ÊúâÁï•‰ΩéÊñºÁî≤Á¥öÁöÑÂÑ™ÊÉ†Ôºõ‰∏ÉÂçÅÂàÜ‰ª•‰∏ãÁöÑÁÇ∫‰∏ôÁ¥öÔºå‰∏ç‰∫´ÊúâÂÑ™ÊÉ†„ÄÇÁîüÊ¥ª‰∏≠Â∏∏Ë¶ãÁöÑÊúÉÂì°ÂàÜÁ¥ö„ÄÅÈäÄË°åÁöÑ‰ø°Áî®Ë©ïÂàÜÈÉΩÊòØÈ°û‰ººÁöÑË©ïÂàÜÊ©üÂà∂ÁöÑÂØ¶ÈöõÊáâÁî®„ÄÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E5%92%8C-if-elseswitch-case-%E6%9C%89%E4%BB%80%E9%BA%BC%E4%B8%8D%E5%90%8C"&gt;
  &lt;/a&gt;
  Âíå if / else„ÄÅswitch / case Êúâ‰ªÄÈ∫º‰∏çÂêåÔºü
&lt;/h2&gt;

&lt;p&gt;‰∏äÈù¢ÁöÑ‰æãÂ≠êÁúãËµ∑‰æÜÂ•ΩÂÉèÁî®ÂéüÁîüÁöÑ &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; Êàñ &lt;code&gt;switch&lt;/code&gt; / &lt;code&gt;case&lt;/code&gt; Â∞±ÂèØ‰ª•ÂÅöÂà∞ÂêåÊ®£ÁöÑ‰∫ãÔºüÁÑ∂ËÄåÂú®Êüê‰∫õ‰∏çÂêåÁöÑÂ†¥ÊôØ‰∏äÔºåÁî® &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; ÊòØ‰∏çÈÅ©ÂêàÁöÑ„ÄÇ&lt;/p&gt;

&lt;p&gt;È¶ñÂÖàÊòØÈóúÊ≥®ÁöÑÁÑ¶Èªû‰∏çÂêåÔºå‰∏çË´ñÊòØ &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; Êàñ &lt;code&gt;switch&lt;/code&gt; / &lt;code&gt;case&lt;/code&gt;Ôºå‰ªñÂÄëÁöÑË™ûÊ≥ïÈÉΩÂ∞àÁÇ∫Âà§Êñ∑Á®ãÂºèÈÅã‰ΩúÈÇèËºØËÄåË®≠Ë®àÔºå‰∏¶‰∏çÈÅ©ÂêàÊãø‰æÜÂÅöÂïÜÊ•≠ÈÇèËºØÁöÑÂà§Êñ∑ÔºåÂõ†ÁÇ∫ÂïÜÊ•≠ÈÇèËºØÁöÑË¶èÂâáÂæÄÂæÄÊõ¥Ë§áÈõúÔºõË¶èÂâáÂºïÊìéÁöÑÈóúÊ≥®ÁÑ¶ÈªûÂ∞±ÊòØÂïÜÊ•≠ÈÇèËºØËÄåÈùûÁ®ãÂºèÈÇèËºØ„ÄÇÁ°¨Ë¶ÅÁî® &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; ‰æÜÂÅöÂïÜÊ•≠ÈÇèËºØÂæàÊúâÂèØËÉΩÈï∑Âá∫Â§öÂ±§Â∑¢ÁãÄÁöÑ &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt;Ôºå‰∏¶‰∏îÂú®ÂïÜÊ•≠ÈÇèËºØ‰∏äÔºåÈö®ËëóË¶èÂâáÁöÑË§áÈõúÂåñÔºåÁ≥ªÁµ±Ë¶ÅÂÅöÁöÑÂèØËÉΩ‰∏çÂè™ÊòØÂñÆÁ¥îÁöÑÂà§Êñ∑ÔºåËÄåÊòØÊé®Êñ∑ÔºåÊ†πÊìö‰∏ÄÁ≥ªÂàóÁöÑÊåáÊ®ôÊï∏ÊìöÁî±Á≥ªÁµ±ÂçîÂä©Êé®Êñ∑ÂæåÁ∫åÁöÑÂãï‰ΩúÔºå‰ª•ÈäÄË°åÁ≥ªÁµ±ÁÇ∫‰æãÔºåÊ†πÊìöÂÆ¢Êà∂ÁöÑÂêÑÈ†ÖÊåáÊ®ôÔºàÂπ¥ÈΩ°„ÄÅËÅ∑Ê•≠„ÄÅÊÄßÂà•„ÄÅÂÆ∂Â∫≠„ÄÅÂú∞ÂçÄ„ÄÅË≥áÁî¢„ÄÅÊî∂ÂÖ•„ÄÅ‰ø°Áî®„ÄÅÂÅ•Â∫∑Ôºâ‰æÜÊé®Êñ∑‰ªñÁöÑÈ¢®Èö™ÂÄºÔºå‰∏¶ÈÄ≤‰∏ÄÊ≠•Ê±∫ÂÆö‰ªñÁöÑÂÄüË≤∏Âà©ÁéáÔºåÂÉèÈÄôÊ®£ÁöÑË¶èÂâáÂºïÊìéÁöÑÊáâÁî®Ë¢´Á®±ÁÇ∫Â∞àÂÆ∂Á≥ªÁµ±ÔºåÂ∞àÂÆ∂Á≥ªÁµ±ÁöÑÊé®Êñ∑ÂèØ‰ª•Áî®ÊºîÁÆóÊ≥ïÊàñÊòØ‰∫∫Â∑•Êô∫ÊÖßÁöÑÊñπÂºèÂØ¶Áèæ„ÄÇ&lt;/p&gt;

&lt;p&gt;Á¨¨‰∫åÈªûÔºåË¶èÂâáÂºïÊìéÊèê‰æõÊõ¥ÈùàÊ¥ªÁöÑÂèÉÊï∏Ë™øÊï¥ÊñπÂºèÔºåÂú® &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;else&lt;/code&gt; Ë£°Èù¢ÁöÑÂà§Êñ∑Ê¢ù‰ª∂ÈÉΩÊòØÊ≠ªÁöÑÔºåÈõ£‰ª•Ë¢´ÈñãÁôºËÄÖ‰ª•Â§ñÁöÑÁáüÈÅã‰∫∫Âì°ËÆäÊõ¥ÔºåÊàñÊòØÂøÖÈ†àÁî±ÈñãÁôºËÄÖÊâãÂãïÂàªÂá∫ÂèÉÊï∏Ë™øÊï¥ÁöÑÁ®ãÂºè„ÄÅ‰ªãÈù¢ÔºåËÄåË¶èÂâáÂºïÊìéÂú®ÈÄôÊñπÈù¢ÈÉΩÊèê‰æõÊõ¥ÈùàÊ¥ªÁöÑË™øÊï¥ÊñπÊ≥ïÔºåÂèØËÉΩÊòØÁî®ËÆÄÂÖ•ÁâπÂÆöÊ†ºÂºèÁöÑÊ™îÊ°àÔºàcsv Êàñ xls Êàñ jsonÔºâ‰æÜÂØ¶ÁèæË¶èÂâáÁöÑË®≠ÂÆöÔºå‰∏¶‰∏îÈÄô‰∫õÊ†ºÂºèÂêåÊôÇÊòØ‰∫∫Ê©üÂèØËÆÄÁöÑÔºåËÆìÁáüÈÅã‰∫∫Âì°Êõ¥Á∞°ÊòìÁöÑËá™Ë°åË™øÊéß„ÄÇÁ¨¨‰∫åÁ®ÆÂÅöÊ≥ïÂ∞±ÊòØÁî±Ë¶èÂâáÂºïÊìéÊèê‰æõÁ®ãÂºè‰ªãÈù¢ÔºåÁî±ÈñãÁôº‰∫∫Âì°ÂØ¶ÁèæÊìç‰Ωú‰ªãÈù¢Áµ¶ÁáüÈÅã‰∫∫Âì°‰ΩøÁî®ÔºåÈÄôÁï∂ÁÑ∂Êúâ‰∏ÄÂÆöÁöÑË§áÈõúÂ∫¶ÔºåÈúÄË¶ÅËä±Ë≤ªÂøÉÂäõÂéªËÆÄË¶èÂâáÂºïÊìéÁöÑÊñá‰ª∂Ôºå‰ΩÜ‰ª•‰∏ÄÂÄãÂïÜÊ•≠Áî®Á≥ªÁµ±ÁöÑÈï∑ÈÅ†‰æÜÁúãÔºåÁî®Ë¶èÂâáÂºïÊìé‰æÜÂØ¶ÁèæÊáâË©≤ÊòØÂèØ‰ª•ÊúâÊõ¥‰ΩéÁöÑÈï∑ÊúüÁ∂≠ÈÅãÊàêÊú¨„ÄÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E8%A6%8F%E5%89%87%E5%BC%95%E6%93%8E%E7%9A%84%E6%87%89%E7%94%A8"&gt;
  &lt;/a&gt;
  Ë¶èÂâáÂºïÊìéÁöÑÊáâÁî®
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ÈáëËûç‰ø°Áî®Ë©ïÂàÜÁ≥ªÁµ±&lt;/li&gt;
&lt;li&gt;‰øùÈö™È¢®Èö™Ë©ï‰º∞Á≥ªÁµ±&lt;/li&gt;
&lt;li&gt;‰∫§ÊòìË°åÁÇ∫Áï∞Â∏∏Áõ£ÊéßÁ≥ªÁµ±&lt;/li&gt;
&lt;li&gt;ÊúÉÂì°ÂàÜÁ¥öÁ≥ªÁµ±&lt;/li&gt;
&lt;li&gt;‰∫§ÊòìÂÑ™ÊÉ†Á≥ªÁµ±&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‰ª•‰∏äÈÄô‰∫õÁ≥ªÁµ±ÁöÑÂÖ±ÂêåÁâπËâ≤ÔºöÂèÉÊï∏Â§ö„ÄÅË¶èÂâáË§áÈõú„ÄÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E8%A6%8F%E5%89%87%E5%BC%95%E6%93%8E%E7%9A%84%E5%A5%97%E4%BB%B6"&gt;
  &lt;/a&gt;
  Ë¶èÂâáÂºïÊìéÁöÑÂ•ó‰ª∂
&lt;/h2&gt;

&lt;p&gt;Ë¶èÂâáÂºïÊìéÂú® Java ÁîüÊÖãÁ≥ªÂÖßÊòØÊúÄÂ§öÁöÑÔºåÂ§ßÊ¶ÇÊòØÂõ†ÁÇ∫‰∏äÈù¢ÁöÑÊáâÁî®Â§ßÂ§öÊòØÂ§ßÂûãÁ≥ªÁµ±ÔºåËÄåÂ§ßÂûãÁ≥ªÁµ±‰πüÈÉΩÊòØ Java ÁöÑ‰∏ñÁïåÁöÑÁ∑£ÊïÖÂêßÔºÅ‰∏çÈÅéÂÖ∂ÂØ¶ÂÖ∂ÂÆÉË™ûË®Ä‰πüÈÉΩÊúâË¶èÂâáÂºïÊìéÂ•ó‰ª∂ÔºåÂéª PyPI„ÄÅnpm„ÄÅCrates.io„ÄÅRubyGems Á≠âÁ´ôÂè∞ÊêúÂ∞ã rules engine ÊáâË©≤ÈÉΩÊúÉÊúâÁõ∏Â∞çÊáâÁöÑÂ•ó‰ª∂Ôºå‰∏çÈÅéÊàêÁÜüÂ∫¶„ÄÅÁ∂≠Ë≠∑Á®ãÂ∫¶ÂêÑÁï∞ÔºåÊúçÁî®ÂâçÈúÄË¶ÅË©ï‰º∞„ÄÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E8%A6%8F%E5%89%87%E5%BC%95%E6%93%8E%E7%9A%84%E5%AF%A6%E5%81%9A%E5%88%86%E7%BA%87"&gt;
  &lt;/a&gt;
  Ë¶èÂâáÂºïÊìéÁöÑÂØ¶ÂÅöÂàÜÁ∫á
&lt;/h2&gt;

&lt;p&gt;ÂâçÈù¢ÊèêÂà∞ÈÅéÔºåË¶èÂâáÂºïÊìéÂú®ÂêÑË™ûË®ÄÈÉΩÊúâÔºå‰∏¶‰∏îÊòØ‰ª•Á¨¨‰∏âÊñπÂ•ó‰ª∂ÁöÑÂΩ¢ÂºèÊèê‰æõÔºå‰ΩÜ‰ª•ÊØèÂÄãË¶èÂâáÂºïÊìéÂ•ó‰ª∂ÁöÑÂØ¶ÂÅöÊñπÂºè‰æÜË™™ÔºåÊúâÂÖ©Â§ßÁ®ÆÂàÜÂà•ÔºöÊòØÂê¶‰ª• &lt;a href="https://en.wikipedia.org/wiki/Rete_algorithm"&gt;Rete ÊºîÁÆóÊ≥ï&lt;/a&gt;ÁÇ∫Âü∫Á§é„ÄÇ&lt;/p&gt;

&lt;p&gt;ËºÉÁ∞°ÂñÆÁöÑË¶èÂâáÂºïÊìéÂ•ó‰ª∂‰∏¶‰∏ç‰ª• Rete ÊºîÁÆóÊ≥ïÂØ¶ÁèæÔºåËÄåÊòØÁî®‰ΩúËÄÖËá™Â∑±ÁöÑÂÅöÊ≥ïÂØ¶ÁèæÔºåÈÄöÂ∏∏ÈÄôÁ®ÆË¶èÂâáÂºïÊìé‰∏çÊúÉÂÖ∑ÊúâËá™Ë°åÊé®Êñ∑ÁöÑËÉΩÂäõÔºåËÄåÂè™ÊòØÂØ¶Áèæ‰∫Ü‰∏ÄÂ±§ËºÉÈÅ©ÂêàÂïÜÊ•≠ÈÇèËºØÁöÑË®≠ÂÆöËàáÊí∞ÂØ´ÁöÑÁ®ãÂºè‰ªãÈù¢‰æõÊàëÂÄë‰ΩøÁî®ÔºåËºÉÂ•Ω‰∏äÊâãÂäüËÉΩ‰πüËºÉÂ∞ëÔºåËºÉÈÅ©ÂêàÁ∞°ÂñÆÁöÑÂïÜÊ•≠Â†¥ÊôØ„ÄÇ&lt;/p&gt;

&lt;p&gt;Á¨¨‰∫åÁ®ÆË¶èÂâáÂºïÊìéÂ•ó‰ª∂Âç≥‰ª• Rete ÊºîÁÆóÊ≥ïÁÇ∫Âü∫Á§éÂØ¶ÁèæÔºåÈóúÊñº Rete ÊºîÁÆóÊ≥ïÔºåÂèØ‰ª•Á∞°ÂñÆÁöÑÁêÜËß£ÁÇ∫Áî®ÊñºÊØîÂ∞ç&lt;strong&gt;Â§öÂÄã‰∫ãÂØ¶ÔºàÊ¢ù‰ª∂Ôºâ&lt;/strong&gt;Ëàá&lt;strong&gt;Â§öÂÄãË¶èÂâá&lt;/strong&gt;Ôºå‰∏¶ÂÅöÂá∫ÊúÄÁµÇ&lt;strong&gt;Êé®Êñ∑&lt;/strong&gt;ÁöÑ‰∏ÄÁ®ÆÊºîÁÆóÊ≥ïÔºåÈÄôÁ®ÆË¶èÂâáÂºïÊìéÈÅ©Áî®ÊñºÊõ¥Ë§áÈõúÁöÑÂ†¥ÊôØ„ÄÇ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E5%95%86%E6%A5%AD%E5%8C%96%E7%9A%84%E7%94%A2%E5%93%81"&gt;
  &lt;/a&gt;
  ÂïÜÊ•≠ÂåñÁöÑÁî¢ÂìÅ
&lt;/h2&gt;

&lt;p&gt;ÂïÜÊ•≠ÂåñÁöÑÁî¢ÂìÅÂõ†ÁÇ∫ÊòØË¶ÅË≥£Èå¢Èå¢ÁöÑÔºå‰∏çÊúÉÂè™Êúâ rules engineÔºåËÄåÊòØÂÜçÂä†‰∏ä‰∏Ä‰∫õ‰∫∫Ê©ü‰ªãÈù¢ËºîÂä©Á≠âÁ≠âÁöÑÈÄ±ÈÇäÂÖÉ‰ª∂ÂåÖË£ùÊàêÂÆåÊï¥ÁöÑÁî¢ÂìÅ„ÄÇ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/tw-zh/products/operational-decision-manager"&gt;IBM Operational Decision Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.redhat.com/zh/technologies/jboss-middleware/decision-manager"&gt;Á¥ÖÂ∏ΩÊ±∫Á≠ñÁÆ°ÁêÜÂô®&lt;/a&gt;Ôºà&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/decision-manager"&gt;Red Hat Desicision Manager&lt;/a&gt;Ôºâ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99"&gt;
  &lt;/a&gt;
  ÂèÉËÄÉË≥áÊñô
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/codingtown/rules-engine-in-the-node-js-6c4577aee2b0"&gt;Rules Engine in node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://microbuddy.blogspot.com/2009/01/blog-post_5382.html"&gt;Ë¶èÂâáÁ≥ªÁµ±ÁöÑÁôºÂ±ï&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/How-can-I-implement-a-Rete-algorithm"&gt;How can I implement a Rete algorithm?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rulesengine</category>
      <category>rete</category>
    </item>
    <item>
      <title>Intro to Emoji URLs</title>
      <author>Parth Agarwal</author>
      <pubDate>Fri, 05 Nov 2021 09:06:07 +0000</pubDate>
      <link>https://dev.to/ra101/intro-to-emoji-urls-10c9</link>
      <guid>https://dev.to/ra101/intro-to-emoji-urls-10c9</guid>
      <description>&lt;p&gt;I was looking for catchy domain names, And I came across emoji domains like &lt;a href="http://%F0%9F%93%99.ws/"&gt;üìô.ws&lt;/a&gt; or &lt;a href="http://i%E2%9D%A4%EF%B8%8F.ws/"&gt;i‚ù§Ô∏è.ws&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, I knew what my task of day is going to be. Below is the report of my 3 hour investigation into Emoji Domains.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-are-they-possible"&gt;
  &lt;/a&gt;
  How are they possible?
&lt;/h3&gt;

&lt;p&gt;To create standardization in Internet hostnames every domain name is encoded into punycode, a LDH (letters, digits, and hyphens) subset of ASCII, by browsers before URL encoding it. pseudo code for the flow can written as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;final_url = url.encode(
    punycode.encode(domain.name) + '/rest of the path'
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, by only using LDH, other ASCII char are converted into &lt;code&gt;xn--&lt;/code&gt; form, some examples are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;√º&lt;/code&gt; -&amp;gt; &lt;code&gt;xn--tda&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;‰∫∫&lt;/code&gt; -&amp;gt; &lt;code&gt;xn--gmq&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;üòÄ&lt;/code&gt; -&amp;gt; &lt;code&gt;xn--e28h&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;links: &lt;a href="//punycoder.com"&gt;punycoder.com&lt;/a&gt; | &lt;a href="//urlenc.com"&gt;urlenc.com&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-are-they-so-rare"&gt;
  &lt;/a&gt;
  Why are they so rare?
&lt;/h3&gt;

&lt;p&gt;With the restriction of LDH many hosting services also add the rule that &lt;code&gt;-&lt;/code&gt; must be surrounded by characters to decrease changes of scamming or exploits therefore making &lt;code&gt;--&lt;/code&gt; illegal. &lt;/p&gt;

&lt;p&gt;Click &lt;a href="https://www.20i.com/support/domain-names/domain-name-restrictions"&gt;Here&lt;/a&gt; to know more.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Loop-Hole: According to &lt;a href="https://en.wikipedia.org/wiki/Emoji_domain#Availability_and_registration"&gt;wikipedia&lt;/a&gt;, &lt;code&gt;As of April 2021, there are eleven top-level domains for which registration is possible: .uz, .cf, .ga, .gq, .ml, .tk, .st, .fm, .to, .kz and .ws&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-get-one"&gt;
  &lt;/a&gt;
  Lets get one!
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I noticed &lt;code&gt;.tk&lt;/code&gt;, and I remembered long ago they were giving redirector domain names for free that too without signup. I checked back, sadly that was not the case anymore, Although the fees was not that much, But I am not willing to pay for a detour in my evening.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Okay if we can't have domain name, lets get a subdomain, &lt;br&gt;
I already have a &lt;a href="//infinityfree.net"&gt;InfinityFree&lt;/a&gt; account, So lets try there, but it looked at &lt;code&gt;--&lt;/code&gt; and said &lt;code&gt;no latin letters&lt;/code&gt;, So, I looked around and found some websites but I had to input my card info, so i backed out.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finally, &lt;a href="//profreehost.com"&gt;ProFreeHost&lt;/a&gt; was my saviour, I quickly setup an account, found how to redirect the url&lt;/strong&gt;, only thing left was to think of a domain name, After ton of soul searching, there it was on my youtube feed, &lt;code&gt;Lightyear | Teaser Trailer&lt;/code&gt;. &lt;strong&gt;So I went to infinity and beyond and created my website:&lt;br&gt;
&lt;a href="http://2%EF%B8%8F%E2%83%A3%E2%99%BE%EF%B8%8F%E2%9E%95%F0%9F%9A%80.unaux.com/"&gt;2Ô∏è‚É£‚ôæÔ∏è‚ûïüöÄ.unaux.com&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;If you make/made your own Emoji Website, comment below and share with us as well.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
