<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>An Immersive Guide to Geospatial MongoDB Data</title>
      <author>Akash Shyam</author>
      <pubDate>Fri, 07 May 2021 10:28:43 +0000</pubDate>
      <link>https://dev.to/akashshyam/an-immersive-guide-to-geospatial-mongodb-data-13ci</link>
      <guid>https://dev.to/akashshyam/an-immersive-guide-to-geospatial-mongodb-data-13ci</guid>
      <description>&lt;p&gt;Dealing with coordinates can be a huge pain, so why not take the easy way? Instead of wrestling with coordinates in the frontend, push it away to the backend and let mongoDB do the work. Today, we'll look at dealing with geospatial data in mongoDB or mongoose. First on our list is GeoJSON.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#geojson"&gt;
  &lt;/a&gt;
  GeoJSON
&lt;/h3&gt;

&lt;p&gt;It has various data types to make dealing with coordinates easy. Keep in mind that longitude comes before latitude:&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#1-point"&gt;
  &lt;/a&gt;
  1) Point
&lt;/h5&gt;

&lt;p&gt;The simplest of all types, it's basically a coordinate i.e. a longitude and a latitude:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0jn9L5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmubs9kmaast0qlqfncz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y0jn9L5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmubs9kmaast0qlqfncz.png" alt="An image of a point"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A point&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Point&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#2-linestring"&gt;
  &lt;/a&gt;
  2) LineString
&lt;/h5&gt;

&lt;p&gt;It's an array of array of coordinates, which will be joined to form a line. It basically consists of an array of points.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3wvqd7TC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmauj819ce82r022pteu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3wvqd7TC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gmauj819ce82r022pteu.png" alt="An image of linestring"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// A linestring&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;LineString&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#3-polygon"&gt;
  &lt;/a&gt;
  3) Polygon
&lt;/h5&gt;

&lt;p&gt;It's a polygon, that's it! squares, rectangles, hexagons, decagons, quadrilaterals so on. This must be a closed figure(the first point must be the same as the last point, I'm sounding like my maths teacher now 😅).&lt;/p&gt;

&lt;p&gt;We draw the sides of the polygon using linestrings. Now, to illustrate this better, I'm going to draw a very very simple coordinate grid(don't worry, nothing complicated).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RxiG45ao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adyn8y9v5ydan0glqalr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RxiG45ao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/adyn8y9v5ydan0glqalr.png" alt="Screenshot 2021-05-07 at 12.40.50"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(I apologize on behalf of my bad designing skills for that crude grid)&lt;/p&gt;

&lt;p&gt;Now, let's draw a simple polygon:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--58sB0Qtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhkhm4554s0psznati31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58sB0Qtl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hhkhm4554s0psznati31.png" alt="Screenshot 2021-05-07 at 12.45.15"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's how we can represent this in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are a few to notice in this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The nested arrays go 3 levels deep, I'll get back to this in a minute&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the diagram, there are only 4 points but we have written 5 points in our code. This is because the first point and last point overlap in the diagram so it's not visible. To make this a closed figure and a valid &lt;code&gt;Polygon&lt;/code&gt;, we need to specify the last value the same as the first value to tell mongoDB that the figure has ended.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I promised earlier, I'm going to explain the secret of the nested arrays:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The first array holds all the rings(I'll explain this in a second).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second one holds each ring. Now, what are rings? It's basically a hole inside the polygon. So, the figure holds the area between the polygons. Here's a diagram:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AX8A27eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjbqzn5luac1deteuqsr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AX8A27eR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjbqzn5luac1deteuqsr.png" alt="Screenshot 2021-05-07 at 12.55.45"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The white triangle inside  is a &lt;code&gt;ring&lt;/code&gt;. The figure contains the area inside the outer polygon but outside the white area( the area shaded in red is contained).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finally, the 3rd array is our old friend, the array of coordinates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code for this polygon would look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That was a long (and hopefully not boring) maths lesson. Let's actually play around with these types and learn about more operators.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-geometry-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$geometry&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;It holds our geometrical data type (eg: &lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;Polygon&lt;/code&gt;) and is used in tandem with other operators.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-geointersects-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$geoIntersects&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;It checks if the coordinates in a document are intersecting(not necessarily completely inside) the provided geometrical type(It has to be a 2d type i.e. &lt;code&gt;Polygon&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="na"&gt;$geoIntersects&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
               &lt;span class="p"&gt;[&lt;/span&gt; 
                  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
               &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-geowithin-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$geoWithin&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Checks if the coordinates in a document are completely inside the provided &lt;code&gt;Polygon&lt;/code&gt;(single/multi ringed).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="na"&gt;$geoWithin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Polygon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;coordinates&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
               &lt;span class="p"&gt;[&lt;/span&gt; 
                  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
               &lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;]&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to do the same thing, but in a circle(i.e. in a particular radius from the coordinates) we use &lt;code&gt;$center&lt;/code&gt;. It takes in an array which has two elements. The first is the coordinates for the center and the second is the radius. The format is &lt;code&gt;[[coordinateX, coordinateY], radius]&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$geoWithin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;40.74&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;  
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-near-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;$near&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Fetches all documents which are have a certain distance from a specified coordinate which can be controlled using minimum and maximum lengths. Also, it will sort the documents from nearest to farthest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$near&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Point&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; 
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can optionally specify a &lt;code&gt;$minDistance&lt;/code&gt; and &lt;code&gt;$maxDistance&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Places&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;$near&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;$geometry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Point&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="na"&gt;$minDistance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;$maxDistance&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;You might be thinking, how is this useful? Well, &lt;br&gt;
Suppose our user is looking for restaurants near him, we can provide all restaurants in a 10 mile radius.&lt;/p&gt;

&lt;p&gt;Thanks for reading until here. If you liked the article and learn something today, don't forget to leave a like and follow me on dev.to!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Build a GMAIL Clone Using just HTML &amp; CSS - Beginners Tutorial</title>
      <author>Somanath Goudar</author>
      <pubDate>Fri, 07 May 2021 09:57:48 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/build-a-gmail-clone-using-just-html-css-476b</link>
      <guid>https://dev.to/somanathgoudar/build-a-gmail-clone-using-just-html-css-476b</guid>
      <description>&lt;p&gt;I Built Gmail Clone using just HTML &amp;amp; CSS. I Just Love to build these to practice my HTML &amp;amp; CSS Skills. I made a tutorial video to help beginners to improve there html &amp;amp; css skills to build real world projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorial Video:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ZgUehcvVx7g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/somanath-goudar/html-css-projects"&gt;https://github.com/somanath-goudar/html-css-projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you want to improve your HTML &amp;amp; CSS skills? Then Watch this video and follow along with me where we build GMAIL Clone using just HTML &amp;amp; CSS. We will be using flexbox and Google font Icons in this project.&lt;/p&gt;

&lt;p&gt;Hope You Guys Enjoyed the Video. Like Share Comment and Subscribe to my channel for more videos like these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Channel:&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA&lt;/a&gt;&lt;br&gt;
Subscribe to My YouTube Channel, Next Week I Will be building &lt;strong&gt;Tiktok Clone&lt;/strong&gt; &amp;amp; &lt;strong&gt;Instagram Reels Clone&lt;/strong&gt; with just HTML &amp;amp; CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You may also like my other posts:&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-youtube-clone-with-just-html-css-for-complete-beginners-4fk1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a YouTube Clone with just HTML &amp;amp; CSS + Responsive - For  Beginners&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ Mar 21 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-linkedin-clone-using-just-html-css-3p1n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a LinkedIn Clone Using just HTML &amp;amp; CSS - Beginners Tutorial&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ May 6 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>html</category>
    </item>
    <item>
      <title>Five classic SQL &amp; database posts - May 2021</title>
      <author>Helen Anderson</author>
      <pubDate>Fri, 07 May 2021 09:45:43 +0000</pubDate>
      <link>https://dev.to/helenanders26/five-classic-sql-database-posts-may-2021-48hd</link>
      <guid>https://dev.to/helenanders26/five-classic-sql-database-posts-may-2021-48hd</guid>
      <description>&lt;p&gt;Hi! I'm Helen, one of &lt;a href="https://dev.to/t/sql/top/infinity"&gt;#SQL&lt;/a&gt; and &lt;a href="https://dev.to/t/database/top/infinity"&gt;#database&lt;/a&gt; tag moderators.&lt;/p&gt;

&lt;p&gt;Each month I'll be taking a trip down memory lane and showcasing some classic data posts. Some of these might be your 'go-to' resources already, others may offer some new insight or ideas.&lt;/p&gt;

&lt;p&gt;Let's jump into the posts!&lt;/p&gt;




&lt;p&gt;First up &lt;a href="https://dev.to/jamesmh"&gt;James&lt;/a&gt; writes about building an e-commerce data model that’s scalable, flexible, and fast. This post shows what it takes to start building this infrastructure on your own. What are some of the areas to consider? What might the data model look like? How much work is involved?&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/jamesmh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t9fDHUdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--504Brk9K--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/93505/c8881a55-01b1-4504-a36c-24606b1bb3c6.png" alt="jamesmh image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fabric_commerce/building-a-scalable-e-commerce-data-model-p9l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Building a Scalable E-Commerce Data Model&lt;/h2&gt;
      &lt;h3&gt;James Hickey ・ Dec 29 '20 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This classic post from &lt;a href="https://dev.to/backendandbbq"&gt;Viach&lt;/a&gt; focuses on scanning a large table with 100 000 000 records using OFFSET with a primary key (keyset pagination). Check it out for three different approaches that might be right for your next project.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/backendandbbq" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lOOOak6F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xDqEgNUY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/25129/f5648ff9-4d7b-4dee-97f8-f757b4489cd2.jpg" alt="backendandbbq image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/backendandbbq/the-sql-i-love-chapter-one" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The SQL I Love. Efficient pagination of a table with 100M records&lt;/h2&gt;
      &lt;h3&gt;Viach Kakovskyi ・ Sep 24 '17 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#sql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Next up is a post from &lt;a href="https://dev.to/molly"&gt;Molly&lt;/a&gt; who writes about how to tackle the common issue of giving engineers access to the data they need to do their jobs while keeping sensitive data secure. Read more for how the Forem team solved this very problem.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/molly" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMrAIHhS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qARnw-JH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/119473/4fe2a414-c5d4-4cfe-b9da-8b9da90fb5e6.jpg" alt="molly image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/molly/how-to-give-engineers-filtered-database-access-8b6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How To Give Engineers Filtered Database Access&lt;/h2&gt;
      &lt;h3&gt;Molly Struve (she/her) ・ Mar 18 '20 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#ruby&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#rails&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This classic post from &lt;a href="https://dev.to/mdgale"&gt;Matthew&lt;/a&gt; shows you how a database index works 'under the hood'. We don’t all have to be DBAs to write sufficiently fast queries and we shouldn’t need to be. As developers, getting familiar with the core structures of a database is a sufficiently pragmatic way to spot and improve performance.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/mdgale" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LWeQ2nPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jtGFvf47--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242915/65de6792-dc10-446a-916e-d4c59ed262fc.png" alt="mdgale image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mdgale/we-re-not-all-dbas-indexes-for-developers-557f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;We’re not all DBAs: Indexes For Developers&lt;/h2&gt;
      &lt;h3&gt;Matthew Gale ・ Oct 24 '19 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#sql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#index&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#backend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#performance&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Our last post is from &lt;a href="https://dev.to/ronsoak"&gt;Ron Soak&lt;/a&gt; with lessons and learnings from building a Redshift specific VS Code syntax highlighter from scratch. Check it out for more on the process and if you're a Redshift user check out the extension too.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/ronsoak" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KSi--unr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wsKbBV0L--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/141003/2e555ee4-0ec3-4fc3-abf7-bcd45e2e069c.jpeg" alt="ronsoak image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ronsoak/i-built-my-own-vs-code-syntax-highlighter-from-scratch-and-here-s-what-i-learned-1h98" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I built my own VS Code Syntax Highlighter from scratch and here's what I learned.&lt;/h2&gt;
      &lt;h3&gt;ronsoak  ・ Jul 16 '19 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#data&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;








&lt;p&gt;That's all for this month! For more from the Data Community check out the #sql, #postgres, #mysql, and #database tags, and follow &lt;a href="https://twitter.com/TheDatabaseDev"&gt;@TheDatabaseDev on Twitter&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jJnjqEMK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6m19oidtq78smktb9haq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJnjqEMK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6m19oidtq78smktb9haq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>sql</category>
      <category>database</category>
      <category>bestofdev</category>
      <category>classicdev</category>
    </item>
    <item>
      <title>7 ways to improve developer productivity without getting drained</title>
      <author>Ranjali Roy</author>
      <pubDate>Fri, 07 May 2021 09:44:16 +0000</pubDate>
      <link>https://dev.to/ranjalir/7-ways-to-improve-developer-productivity-without-getting-drained-2cj2</link>
      <guid>https://dev.to/ranjalir/7-ways-to-improve-developer-productivity-without-getting-drained-2cj2</guid>
      <description>&lt;p&gt;Improving developer productivity isn’t straightforward.&lt;/p&gt;

&lt;p&gt;Because the day in the life of a developer doesn’t involve just writing code and solving problems. They’re expected to keep everyone updated on their progress. Share knowledge. Collaborate with their teammates — technical and non-technical. Handoff work. Do code reviews. &lt;/p&gt;

&lt;p&gt;Whew!&lt;/p&gt;

&lt;p&gt;And the list goes on…&lt;/p&gt;

&lt;p&gt;In my exploration on the topic of developer productivity, &lt;a href="https://news.ycombinator.com/item?id=25590846"&gt;I came across two camps&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Folks who constantly ask why you haven’t updated progress. These are people who believe tracking progress is essential because how can you improve productivity if you don’t know where you stand! If devs aren’t working on priority items, are off-target to timelines, are not following QA process, or not following agreed specs then the company could be losing money. And developers are expensive as hell.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Folks who absolutely loathe the idea of being tracked. These are people who believe tickets in your PM tool are not the work itself, never was and never will be, but it gets taken for the central thing. They just want to get the work done. Fixing a bug without filing a ticket is in itself progress. Moving a card without any other change is not. Yet the second is what’s visible and therefore what’s rewarded.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To be fair, both camps have some rather compelling points. You can’t completely stop tracking progress. And at the same time, you can’t constantly pester your teammate to share updates. &lt;/p&gt;

&lt;p&gt;So, what do you do? How do you improve a developer’s productivity and ship great software together?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-work-happens-in-git-why-not-let-it-do-the-grunt-work"&gt;
  &lt;/a&gt;
  1. Work happens in Git. Why not let it do the grunt work?
&lt;/h2&gt;

&lt;p&gt;According to &lt;a href="https://insights.stackoverflow.com/survey/2018#work-_-version-control"&gt;Stack Overflow’s 2018 survey of developers&lt;/a&gt;, 87% of developers use git around the world. Being one among them, having the ability to integrate git with your PM tool must be incredibly useful in getting work done and tracking its progress. &lt;/p&gt;

&lt;p&gt;But not many tools support such deep integration with GitHub, GitLab, and Bitbucket as Zepel does. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ARwHci7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no09d0agv9js7wstvoqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ARwHci7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no09d0agv9js7wstvoqm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you’ve integrated Zepel with &lt;a href="https://zepel.io/guide/integrations/github/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;GitHub&lt;/a&gt;, &lt;a href="https://zepel.io/guide/integrations/gitlab/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;GitLab&lt;/a&gt;, or &lt;a href="https://zepel.io/guide/integrations/bitbucket/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Bitbucket&lt;/a&gt;, there are a bunch of things you can do: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Automatically showing progress information,&lt;/li&gt;
&lt;li&gt;Creating a feature in Zepel when a branch is created as &lt;code&gt;feature/{squad-key}/feature-name&lt;/code&gt;, and
Creating a bug when a bug-fix branch is created as &lt;code&gt;bug/{squad-key}/bug-fix-name&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Because let’s be honest, sometimes developers begin working on a fix even before it can be logged in your PM tool. To interrupt and ask them to link to an item just so you can track their progress isn’t ideal. So why not just log it automatically?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-if-you-dont-automate-the-mundane-tasks-youre-doing-a-disservice-to-your-development-team"&gt;
  &lt;/a&gt;
  2. If you don’t automate the mundane tasks, you’re doing a disservice to your development team
&lt;/h2&gt;

&lt;p&gt;A developer’s time is expensive. Surely you’d prefer if they spent it solving problems and building software.&lt;/p&gt;

&lt;p&gt;So what boring tasks can you take off their plate? Updating statuses, sharing progress, and letting you know that they’re waiting for you to have a look at the PR, of course. &lt;/p&gt;

&lt;p&gt;Once you’ve connected your Zepel account with git (GitHub, GitLab, or Bitbucket), you can &lt;a href="https://zepel.io/guide/integrations/setup-git-workflow-automation/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;set up git workflow automation&lt;/a&gt; and make automatic status updates. Any item can be moved automatically from one status to another. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2Fhnd2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3vojtcj03kkef0wqg2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2Fhnd2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k3vojtcj03kkef0wqg2y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can set up triggers and appropriate actions to be carried out when those set of events occur. Some examples are shown in the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4IBOgg4---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnj2g8y1hzqqxeb0ztog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4IBOgg4---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnj2g8y1hzqqxeb0ztog.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, you don’t want to go overboard and automate every part of your development process. But when you automate key areas that are also considered by your developers as mundane, you aren’t just saving developers time and energy. You’re making sure they get to do what they love doing the most — building products and software.&lt;/p&gt;

&lt;p&gt;Psst… Here are &lt;a href="https://zepel.io/blog/5-git-workflows-to-improve-development/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;5 git workflow strategies&lt;/a&gt; that you can use for inspiration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-developer-controlled-system-automated"&gt;
  &lt;/a&gt;
  3. Developer controlled, System automated
&lt;/h2&gt;

&lt;p&gt;System notifications are probably the biggest culprits when it comes to a drop in productivity. But when you turn them off, you’re going to leave your teammates in the dark about your progress. &lt;/p&gt;

&lt;p&gt;Talk about a catch 22!&lt;/p&gt;

&lt;p&gt;Get control over what notifications you want (and don’t want) to send by connecting your Zepel account to your Slack channel. &lt;/p&gt;

&lt;p&gt;Don’t want to be notified when a task is completed? Sure. But want to be notified when a feature is marked as completed. Got it. And need a notification when a branch is opened for a feature that your developer was working on? Yep, you can get a notification for that too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LkK6SKkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayx0xrlxndtnw0qvlo1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LkK6SKkZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayx0xrlxndtnw0qvlo1k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you’ve got the Git Workflow Automation already set up, you now have one powerful automation in place that connects Zepel + Git + Slack. Since it’s all automated and under your control, it allows developers to stay focussed and managers to plan the next steps.&lt;/p&gt;

&lt;p&gt;Look ma, no hands!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FDAb-orq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqacbor42hmdrmm7txbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FDAb-orq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqacbor42hmdrmm7txbs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-dont-leave-developers-in-the-dark-especially-when-it-comes-to-customer-feedbackrequests"&gt;
  &lt;/a&gt;
  4. Don’t leave developers in the dark. Especially when it comes to customer feedback/requests
&lt;/h2&gt;

&lt;p&gt;For all the talk of agile and scrum and getting constant feedback, there’s actually very little information that your developers get about what your customers are saying about the feature you just built.&lt;/p&gt;

&lt;p&gt;This becomes all the more painful when you have multiple customers making several requests across multiple tools — help desks, live chat, error tracking tools, and more.&lt;/p&gt;

&lt;p&gt;And it gets painfully hard for the developer to get a sense of why they’re building what they’re building from an isolated ticket.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zepel.io/product/streams/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Streams&lt;/a&gt; in Zepel helps you bridge this gap. You can gather requests from popular tools such as Canny, Intercom, Zendesk, Sentry, and more with a few clicks. You can then prioritize these requests and delegate them to your &lt;a href="https://zepel.io/product/streams/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Squad&lt;/a&gt; as a feature, user story, enhancement, or bug to be worked on. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QormY1yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h684axihsiev4w7smsr1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QormY1yI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h684axihsiev4w7smsr1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Streams, your team won’t be cranking out software and features. They’ll be shipping customer-focussed software. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-your-devs-have-great-ideas-too"&gt;
  &lt;/a&gt;
  5. Your devs have great ideas too!
&lt;/h2&gt;

&lt;p&gt;Between all the emojis and memes and “Can you hear me?”, there’s a wealth of ideas that your teammates have that can help you build better products. &lt;/p&gt;

&lt;p&gt;These pop-up between conversations and “By the way, my friend said this about our product”. &lt;/p&gt;

&lt;p&gt;How do you capture them?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zepel.io/guide/streams/sources-catalog/slack/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;You can use Slack as a source for Streams&lt;/a&gt; in Zepel to collect all these ideas with just two clicks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---LTiv6im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmt4zchs4uwcpfcib286.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---LTiv6im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmt4zchs4uwcpfcib286.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once they’re captured inside Streams in Zepel, you can group them with other similar requests, prioritize them, and hand them over to your development team for execution. &lt;/p&gt;

&lt;p&gt;P.S. You can send any team member's Slack message as a request, not just yours.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-get-in-the-zone-with-my-tasks"&gt;
  &lt;/a&gt;
  6. Get in the “Zone” with My Tasks
&lt;/h2&gt;

&lt;p&gt;Everybody has a way of working. Some prefer to organize their work by deadlines. Some by Sprints. And some like to wing it. (It’s not productive. Trust me.)&lt;/p&gt;

&lt;p&gt;However you like to view your work, you can do it with My Tasks in Zepel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F420WsSq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnpcox3l3czyflwyi66d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F420WsSq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnpcox3l3czyflwyi66d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And with quick access to the ID, you can effortlessly link the task assigned to you to a branch, commit, or a PR.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-communicate-changes-with-images-after-all-an-image-screams-a-thousand-words"&gt;
  &lt;/a&gt;
  7. Communicate changes with images. After all, an image screams a thousand words.
&lt;/h2&gt;

&lt;p&gt;One of the crucial aspects of product development involves design. How do you communicate minute design changes? Or a front-end bug? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/zepel-capture/gdaolpfjnepcmcgfjmjdfgmdbkifdpcp?hl=en?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=ways-to-improve-developer-productivity"&gt;Zepel Capture&lt;/a&gt; lets you capture images, edit them, share them with your team as screenshots, and even add them as an attachment to a new item in Zepel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZI-1XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4h0rwwdtgvgorcdmmd3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiZI-1XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4h0rwwdtgvgorcdmmd3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-neednt-leave-your-current-workflow-and-switch-to-any-other-tool-take-screenshots-edit-them-and-then-share-these-with-the-team-or-attach-it-to-an-itemfeature"&gt;
  &lt;/a&gt;
  You needn’t leave your current workflow and switch to any other tool - take screenshots, edit them, and then share these with the team or attach it to an item/feature. 
&lt;/h2&gt;

&lt;p&gt;Impressed? Head to your &lt;a href="https://zepel.io/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=7-ways-to-improve-developer-productivity"&gt;Zepel&lt;/a&gt; account right away and tweak it to meet your needs. And if you’ve got any queries reach out to us; we’re always happy to help.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>devrel</category>
      <category>productivity</category>
      <category>softwaredevelopment</category>
    </item>
    <item>
      <title>JS interview in 2 minutes / this 🤯</title>
      <author>Nikita Kozlov</author>
      <pubDate>Fri, 07 May 2021 09:43:36 +0000</pubDate>
      <link>https://dev.to/kozlovzxc/js-interview-in-2-minutes-this-3hlm</link>
      <guid>https://dev.to/kozlovzxc/js-interview-in-2-minutes-this-3hlm</guid>
      <description>&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;br&gt;
Explain &lt;code&gt;this&lt;/code&gt; keyword in JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick answer:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;this&lt;/code&gt; keyword is referencing the current execution context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Longer answer:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;this&lt;/code&gt; works differently depending on where it was called.&lt;/p&gt;

&lt;p&gt;If you use &lt;code&gt;this&lt;/code&gt; in the global context, it will reference the &lt;code&gt;window&lt;/code&gt; object in the browser and the &lt;code&gt;global&lt;/code&gt; object in the node.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// browser&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;

&lt;span class="c1"&gt;// node&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For functions, it works similarly, but a still bit differently for the &lt;code&gt;strict&lt;/code&gt; mode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="c1"&gt;// default to global context&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrow functions have their own tricks as well, they always refer to enclosing &lt;code&gt;this&lt;/code&gt;. We will get into details in the next section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;f1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// Window, Window&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;// obj reference, Window&lt;/span&gt;
&lt;span class="c1"&gt;// ^^^ f1 changed reference, but f2 didn't&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As for the class context, &lt;code&gt;this&lt;/code&gt; refers object itself&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Tmp&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
  &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Tmp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Tmp {a: 10}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feels like these are the most popular cases, but there are much much more corner cases, take a look on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"&gt;mdn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Real-life applications:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think one of the most common caveats with &lt;code&gt;this&lt;/code&gt; is when you are using callbacks, which are popular in React and in Angular as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;_say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;sayHi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_say&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Works&lt;/span&gt;
&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Works&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Works&lt;/span&gt;

&lt;span class="c1"&gt;// callback will show an error, because `this` reference will change&lt;/span&gt;
&lt;span class="c1"&gt;// Uncaught TypeError: this._say is not a function at sayHello&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So be careful and stay safe!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other posts:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-encapsulation-oop-2ico"&gt;JS interview in 2 minutes / Encapsulation (OOP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-polymorphism-oop-3pla"&gt;JS interview in 2 minutes / Polymorphism (OOP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kozlovzxc/js-interview-in-2-minutes-inheritance-in-oop-53h2"&gt;JS interview in 2 minutes / Inheritance in OOP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Btw, I will post more fun stuff here and on &lt;a href="https://twitter.com/kozlovzxc"&gt;Twitter&lt;/a&gt;. Let's be friends 👋&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Five classic AWS posts - May 2021</title>
      <author>Helen Anderson</author>
      <pubDate>Fri, 07 May 2021 09:37:32 +0000</pubDate>
      <link>https://dev.to/aws-heroes/five-classic-aws-posts-may-2021-3cj8</link>
      <guid>https://dev.to/aws-heroes/five-classic-aws-posts-may-2021-3cj8</guid>
      <description>&lt;p&gt;Hi! I'm Helen, one of your AWS Heroes! &lt;/p&gt;

&lt;p&gt;Each month I'll be taking a trip down memory lane and showcasing some classic AWS posts. Some of these might be your 'go-to' resources already, others may offer some new insight or ideas.&lt;/p&gt;

&lt;p&gt;Let's jump into the posts!&lt;/p&gt;




&lt;p&gt;To get us started we have AWS Hero &lt;a href="https://dev.to/t04glovern"&gt;Nathan&lt;/a&gt; with an introduction to IoT. This is a great read for beginners as it breaks down some of the barriers people think exist when contemplating building an internet-connected project.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/t04glovern" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y6NxFBBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--4WGuYDm8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/91847/cf8f8065-aa21-43fd-9391-f29581844f12.png" alt="t04glovern image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/t04glovern/so-you-want-to-build-an-iot-project-2c0h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;So, you want to build an IoT Project?&lt;/h2&gt;
      &lt;h3&gt;Nathan Glover ・ Mar 1 '20 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#iot&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Next, we have &lt;a href="https://dev.to/vel12171"&gt;Veliswa&lt;/a&gt; and the incredible journey from mainframe developer, to business analyst, to AWS Certified Cloud Engineer (and since this post was written AWS Hero and now Senior Developer Advocate at AWS). Check out this inspiring story for more.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/vel12171" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjqSompz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5D1J8-M7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/173716/d7079eb3-3d89-41ce-b5de-81c4af292e7e.jpg" alt="vel12171 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/vel12171/my-life-changing-journey-to-being-aws-certified-2njn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My life changing journey to being AWS Certified&lt;/h2&gt;
      &lt;h3&gt;Veliswa_Boya 🇿🇦 ・ Aug 9 '19 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#womenwhocloud&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://dev.to/pubudusj"&gt;Pubudu&lt;/a&gt; then shares the learnings from a project building an intelligent door bell with AWS Serverless services and a raspberry pi.&lt;/p&gt;

&lt;p&gt;When someone presses the 'door bell', it not only captures an image and checks through an Amazon Rekognition faces collection to see if the faces are indexed. But it also sends a message to Slack with the scaled image and a message with the names of the people recognised.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/pubudusj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--awg5AFhh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6gX1VKZC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/353213/dadcca32-1581-4aec-bcbd-625554ed3cfb.png" alt="pubudusj image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pubudusj/how-i-created-a-door-bell-with-aws-serverless-3n9j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I created a door bell with AWS Serverless&lt;/h2&gt;
      &lt;h3&gt;Pubudu Jayawardana ・ Sep 22 '20 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lambda&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Moving on to another classic tutorial, this time from &lt;a href="https://dev.to/yashints"&gt;Yaser&lt;/a&gt; who shows how you can easily set up a VPN with AWS for free using OpenVPN. Yas went from setting it up and a couple of mins later had it up and running. &lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/yashints" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rFCyiC6s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EpAw1YMW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/151401/4259d1b6-8e5b-47f0-b16b-eaa71e02ec62.jpeg" alt="yashints image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/yashints/let-s-setup-a-vpn-server-for-free-on-aws-under-5-min-1mg4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Let's setup a VPN server, for free, on AWS, under 5 min 😱🤯🔥&lt;/h2&gt;
      &lt;h3&gt;Yaser Adel Mehraban  ・ Aug 21 '19 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#vpnserver&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#openvpn&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Our last classic post this month is from &lt;a href="https://dev.to/ceeoreo"&gt;Ceora&lt;/a&gt; with some great advice on keeping your AWS bill under control as you get started. If you follow some of the advice outlined in this post, you can be sure that unexpected costs won't be something you have to struggle with.&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/ceeoreo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnpPqWlY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xZCqZv2b--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/102841/e1a65308-9b86-49be-8dec-3a6ecac71489.jpeg" alt="ceeoreo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ceeoreo/never-get-an-unexpected-aws-bill-again-5526" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Never Get an Unexpected AWS Bill Again!&lt;/h2&gt;
      &lt;h3&gt;Ceora Ford ・ Sep 8 '20 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;








&lt;p&gt;That's all for this month! For more great posts check out the &lt;a href="https://dev.to/t/aws"&gt;#aws tag&lt;/a&gt; and the &lt;a href="https://dev.to/aws-heroes"&gt;AWS Heroes&lt;/a&gt;.&lt;/p&gt;




</description>
      <category>aws</category>
      <category>bestofdev</category>
      <category>classicdev</category>
    </item>
    <item>
      <title>Good Git Commits</title>
      <author>Lakshya Singh</author>
      <pubDate>Fri, 07 May 2021 09:37:29 +0000</pubDate>
      <link>https://dev.to/king11/good-git-commits-2deo</link>
      <guid>https://dev.to/king11/good-git-commits-2deo</guid>
      <description>&lt;p&gt;Git commits are everywhere, and you might be generating more than 1k commits over a year. So it becomes crucial to understand that commit should be structured and created in a scalable manner.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ta26ttc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30qsglopgioj7asgrt1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ta26ttc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30qsglopgioj7asgrt1p.png" alt="commit.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-bother"&gt;
  &lt;/a&gt;
  Why bother?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Writing better commits can make the difference between your debugging session lasting &lt;strong&gt;1 hour to a few minutes&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With good commits, it's easier for anyone to understand the progress of a project and get up to speed. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It also allows reviewers to understand your progress during the resolution of an issue clearly.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Generating good commits will allow you to track back changes/issues to a specific module/file and associate it to the code easily.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They enable you to understand how the issue crept in the codebase and how you can easily resolve it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Good commit messages can save you the hassle while creating release notes&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-good-commits"&gt;
  &lt;/a&gt;
  What are good commits?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#modular"&gt;
  &lt;/a&gt;
  Modular
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aLSLGzkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmae1n5tcyvqczufjk1c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aLSLGzkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmae1n5tcyvqczufjk1c.jpeg" alt="Modular Commits"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A commit should be &lt;strong&gt;modular&lt;/strong&gt; in nature, just like our codebase. Each commit should &lt;strong&gt;encapsulate&lt;/strong&gt; a single logical idea only that might span over several changes but as a whole is a single related group of changes.&lt;/p&gt;

&lt;p&gt;E.g., add CSS to a component, change the margin of all pages, strong typing your functions, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#type-of-commit"&gt;
  &lt;/a&gt;
  Type of Commit
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Categorising&lt;/strong&gt; your commits into types will clarify what type of change it made and be instantly identified. I usually keep a template file that contains those types, so I don't have to remember them :P&lt;/p&gt;

&lt;p&gt;Some of the subtypes can be a chore, feat, fix, refactor, style, etc. What meaning does each carry can vary based on your team or you as an individual as well. Below are the types that I use in my commits :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  feat: new feature&lt;/li&gt;
&lt;li&gt;  fix: bug fix&lt;/li&gt;
&lt;li&gt;  refactor: refactoring production code&lt;/li&gt;
&lt;li&gt;  style: formatting, missing semicolons, etc.; no code change&lt;/li&gt;
&lt;li&gt;  docs: changes to documentation&lt;/li&gt;
&lt;li&gt;  test: adding or refactoring tests no production code change&lt;/li&gt;
&lt;li&gt;  chore: updating dependencies etc. no production code change&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/kEFa2FuLcG0mn3t0ef/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/kEFa2FuLcG0mn3t0ef/giphy.gif" alt="Perfect Description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A commit message except for the subject line limited to &lt;code&gt;50&lt;/code&gt; chars should include a description broken into &lt;code&gt;72&lt;/code&gt; char lines/line. The description is separated from the subject by a blank line. The description should try to cover things like :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the current behaviour,&lt;/li&gt;
&lt;li&gt;what change are you making?&lt;/li&gt;
&lt;li&gt;why this fix is needed?&lt;/li&gt;
&lt;li&gt;why take the current approach for this change?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Commit message should be in the future tense, i.e. 'Fix' vs 'Fixed.' &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-treats"&gt;
  &lt;/a&gt;
  Bonus Treats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/Y0UmGpoLtAlrvdrK9Q/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Y0UmGpoLtAlrvdrK9Q/giphy.gif" alt="Treat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can specify a template for your git commits by adding the following config to your &lt;code&gt;$HOME/.gitconfig&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;commit]
    template &lt;span class="o"&gt;=&lt;/span&gt; ~/path/to/template
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My template looks like this, which allows constraining the number of characters in the subject and description line. I also add the types and just in case I don't remember :'(&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# &amp;lt;type&amp;gt;: &amp;lt;subject&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;##### Subject 50 characters ################# -&amp;gt; |&lt;/span&gt;


&lt;span class="c"&gt;# Body Message&lt;/span&gt;
&lt;span class="c"&gt;######## Body 72 characters ####################################### -&amp;gt; |&lt;/span&gt;

&lt;span class="c"&gt;# --- COMMIT END ---&lt;/span&gt;
&lt;span class="c"&gt;# Type can be&lt;/span&gt;
&lt;span class="c"&gt;#   feat    : new feature&lt;/span&gt;
&lt;span class="c"&gt;#   fix     : bug fix&lt;/span&gt;
&lt;span class="c"&gt;#   refactor: refactoring production code&lt;/span&gt;
&lt;span class="c"&gt;#   style   : formatting, missing semi colons, etc; no code change&lt;/span&gt;
&lt;span class="c"&gt;#   docs    : changes to documentation&lt;/span&gt;
&lt;span class="c"&gt;#   test    : adding or refactoring tests&lt;/span&gt;
&lt;span class="c"&gt;#             no production code change&lt;/span&gt;
&lt;span class="c"&gt;#   chore   : updating grunt tasks etc&lt;/span&gt;
&lt;span class="c"&gt;#             no production code change&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: For your template to be prompted, you have to use &lt;code&gt;git commit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is my first post hope you liked it =)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>firstpost</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Solution: Delete Operation for Two Strings</title>
      <author>seanpgallivan</author>
      <pubDate>Fri, 07 May 2021 09:11:28 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-delete-operation-for-two-strings-235k</link>
      <guid>https://dev.to/seanpgallivan/solution-delete-operation-for-two-strings-235k</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/delete-operation-for-two-strings/discuss/1195718"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-583-medium-delete-operation-for-two-strings"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/delete-operation-for-two-strings/"&gt;Leetcode Problem #583 (&lt;em&gt;Medium&lt;/em&gt;): Delete Operation for Two Strings&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given two strings &lt;code&gt;word1&lt;/code&gt; and &lt;code&gt;word2&lt;/code&gt;, return &lt;em&gt;the minimum number of &lt;strong&gt;steps&lt;/strong&gt; required to make &lt;code&gt;word1&lt;/code&gt; and &lt;code&gt;word2&lt;/code&gt; the same&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In one &lt;strong&gt;step&lt;/strong&gt;, you can delete exactly one character in either string.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;word1 = "sea", word2 = "eat"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;You need one step to make "sea" to "ea" and another step to make "eat" to "ea".&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;word1 = "leetcode", word2 = "etco"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= word1.length, word2.length &amp;lt;= 500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;word1&lt;/code&gt; and &lt;code&gt;word2&lt;/code&gt; consist of only lowercase English letters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This problem is basically asking us to identify the &lt;strong&gt;longest common subsequence&lt;/strong&gt; (&lt;strong&gt;LCS&lt;/strong&gt;) between the two words (&lt;strong&gt;W1, W2&lt;/strong&gt;). The answer will then be the combined difference between the length of the words and the length of the LCS.&lt;/p&gt;

&lt;p&gt;For a typical LCS solution, we would use a &lt;strong&gt;bottom-up&lt;/strong&gt; &lt;strong&gt;dynamic programming&lt;/strong&gt; (&lt;strong&gt;DP&lt;/strong&gt;) approach and use nested loops to compare each letter of each word against each other (&lt;strong&gt;W1[i], W2[j]&lt;/strong&gt;). This would normally call for a DP array of size &lt;strong&gt;(m + 1) * (n + 1)&lt;/strong&gt;, where &lt;strong&gt;m = W1.length&lt;/strong&gt; and &lt;strong&gt;n = W2.length&lt;/strong&gt;. Since the LCS process references the previous row and column for the target cell, we'll need the extra buffer of &lt;strong&gt;0&lt;/strong&gt;-filled cells. Each cell in the DP array at &lt;strong&gt;dp[i][j]&lt;/strong&gt; will represent the longest subsequence found between &lt;strong&gt;W1.substr(0,i)&lt;/strong&gt; and &lt;strong&gt;W2.susbtr(0,j)&lt;/strong&gt;. Our final answer will then be &lt;strong&gt;dp[m][n]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Since the DP array is being built iteratively, in order, we can reduce the normal &lt;strong&gt;space complexity&lt;/strong&gt; from &lt;strong&gt;O(N * M)&lt;/strong&gt; by only keeping the current and last rows (&lt;strong&gt;dpCurr, dpLast&lt;/strong&gt;) as we iterate through. This will drop the space complexity to &lt;strong&gt;O(N)&lt;/strong&gt;. Doing this, we can also ensure that the shorter word is used for &lt;strong&gt;N&lt;/strong&gt; by swapping the two words if necessary.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * M)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; and &lt;strong&gt;M&lt;/strong&gt; are the lengths of the two words&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of the smaller of the two words&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Javascript and Java will find it easier to iterate repeatedly through an array rather than a string, so we can initially &lt;strong&gt;split()&lt;/strong&gt; or &lt;strong&gt;toCharArray()&lt;/strong&gt; the two words (&lt;strong&gt;WA1, WA2&lt;/strong&gt;).&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;minDistance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;WA1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;WA2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nx"&gt;dpLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint16Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nx"&gt;dpCurr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint16Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
            &lt;span class="nx"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WA1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;WA2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;minDistance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
        &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpCurr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpCurr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;minDistance&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;W1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;W2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;W1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;W2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;tempStr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;W1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="no"&gt;W1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;W2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="no"&gt;W2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempStr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;tempInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempInt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;WA1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;W1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="no"&gt;WA2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;W2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dpCurr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;WA1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; 
                &lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;WA2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
                    &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                    &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;tempArr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;dpLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;dpCurr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempArr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;minDistance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;W1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
                &lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;W2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                    &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="n"&gt;swap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dpCurr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dpLast&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>A day in the life of a Software Engineer at Holland &amp; Barrett</title>
      <author>Jacob Herper</author>
      <pubDate>Fri, 07 May 2021 09:02:01 +0000</pubDate>
      <link>https://dev.to/jakeherp/a-day-in-the-life-of-a-software-engineer-at-holland-barrett-88p</link>
      <guid>https://dev.to/jakeherp/a-day-in-the-life-of-a-software-engineer-at-holland-barrett-88p</guid>
      <description>&lt;p&gt;A lot has changed for most tech companies over the last year. While we were all working from an office at least 3-4 days per week before the pandemic hit in early 2020, almost everybody works remotely now. At Holland &amp;amp; Barrett, we are in the lucky position to help people with their wellbeing during the pandemic. Therefore, our stores remained open throughout all the lockdowns, but we also saw a significantly increased demand in our digital platform. This is one of the main reasons our engineering team has grown from a small part of the organisation to over 150 people in less than one year - and we continue to grow beyond our wildest beliefs just one short year ago. This article should give you a rough idea of what a typical day in a software engineer's life for the UK's leading health and wellness retailer looks like.&lt;/p&gt;

&lt;p&gt;I usually start my workday at 8:00 am with a fresh cup of tea by opening up my email client to check on any issues that might have happened overnight or see if any meetings have been scheduled after I left work at 4:30 pm the day before. Next, I sign in to Jira to check the progress of the current sprint and see if any of my colleagues' tickets are ready for code review, at which point I open up Gitlab to look at open Pull Requests (or Merge Requests, how Gitlab calls them) and see if any of them require my attention. Furthermore, I connect to the VPN at this point to access any of our internal APIs and run code without interruption on my local machine. I typically spend around an hour on code reviews for my peers to ensure all our tickets move along smoothly.&lt;/p&gt;

&lt;p&gt;Now is a great time to catch up on Slack conversations that might have happened after I left the day before since our team works flexible hours, and while my workday ends at 4:30 pm, other colleagues work until six or even later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7diB0tOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4hhr9xs5cgpvlfwnfoq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7diB0tOg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4hhr9xs5cgpvlfwnfoq.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At 10 am, it's time for our daily standup where our cross-functional squad goes over what we did the day before, what we are planning to work on today and whether there are any issues or blockers that require a colleague to resolve before we can move forward. Standups are relatively quick in our team, and by 10:15 am, I usually find time to focus on actual development work. More often than not, the mornings are free of meetings, which allows us to either work on tickets alone or collaborate with a colleague to do some pair programming or discuss an issue we ran into in our code.&lt;/p&gt;

&lt;p&gt;With a short break in between to stretch my legs and grab another beverage, this takes me to around 1 pm – lunchtime!&lt;/p&gt;

&lt;p&gt;One of the great benefits of working remotely full-time is sharing my lunchtime with my wife and daughter and cooking a fresh meal every day and depending on how long it takes me to cook, I can either go for a quick walk with my daughter or find some time to play with her.&lt;/p&gt;

&lt;p&gt;At 2 pm it's time to get back to work, and if the day is free of meetings, I will try to wrap up my work from the morning, look at my implementation again and see what I can improve, add more tests or pick up a new ticket from the backlog. Most days, there will be a meeting or two in the afternoon, and I try to spend a few minutes before to prepare myself for the discussion and pour myself another cup of tea.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tGFtlAkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zo53fcw7odowwppfgn02.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tGFtlAkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zo53fcw7odowwppfgn02.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Towards the end of my workday, I make sure that all my changes are committed and pushed, ready for the next morning. At 4:30 pm, I say goodbye to the team on Slack, close my laptop and disconnect from work.&lt;/p&gt;

</description>
      <category>workstations</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The Evolution of Data Access Control</title>
      <author>Laura O. Tolentino</author>
      <pubDate>Fri, 07 May 2021 08:58:26 +0000</pubDate>
      <link>https://dev.to/ionorah14/the-evolution-of-data-access-control-42dh</link>
      <guid>https://dev.to/ionorah14/the-evolution-of-data-access-control-42dh</guid>
      <description>&lt;p&gt;Access management is an essential part of every cloud infrastructure. You cannot have an efficient cloud infrastructure without compartmentalizing access to cloud resources. Good access management is also the key element to good information security.&lt;/p&gt;

&lt;p&gt;There are several approaches to adopt when it comes to data access control specifically. In this article, we are going to review some of the approaches that can be implemented as well as the challenges with each method.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;DAC &amp;amp; MAC&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The two basic data access control methods are Discretionary Access Control (DAC) and Mandatory Access Control (MAC). DAC is very straightforward; the owner of the data decides which users get access to the data. In this model, the owner of the data can specify how data access control rules are defined.&lt;/p&gt;

&lt;p&gt;MAC is the opposite of DAC. In the MAC model, &lt;a href="https://resources.infosecinstitute.com/certification/access-control-models-and-methods/"&gt;a central figure is responsible&lt;/a&gt; for determining how data can be accessed. This means that access to data is based on rules that apply to everyone, regardless of the owner of the data. This centralized model, however, is often the source of bottlenecks in access management.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Role Based Access Control (RBAC)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;A transformation of the two previous methods is Role Based Access Control. As the name suggests, access to data is granted based on privileges given to roles. Only the roles that require access to data is given access, and the process happens automatically.&lt;/p&gt;

&lt;p&gt;RBAC allows for principles such as separation of privilege and “least required privilege” to be implemented across the organization. Users can have multiple roles that grant them access to different layers of data, providing maximum flexibility.&lt;/p&gt;

&lt;p&gt;For instance, someone with an Admin role can have access to data creation and modification, while another person with Operations role can only have access to things like adding comments or tagging certain data points.&lt;/p&gt;

&lt;p&gt;It is also worth noting that RBAC &lt;a href="https://www.csoonline.com/article/3251714/what-is-access-control-a-key-component-of-data-security.html"&gt;allows for role hierarchy&lt;/a&gt; to be used to manage access to data. The only challenge is that roles must be defined and assigned meticulously to prevent unauthorized access.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Attribute Based Access Control (ABAC)&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Attribute Based Access Control or ABAC expands RBAC by taking more attributes into account. ABAC can still use roles as one of the attributes for controlling data access, but it is also capable of adopting other attributes such as users, environment attributes, resource attributes, and more.&lt;/p&gt;

&lt;p&gt;A data access control engine determines if the attributes attached to a user allows that person to access specific parts of the data. When you compare &lt;a href="https://frontegg.com/blog/rbac-vs-abac"&gt;RBAC vs. ABAC&lt;/a&gt;, it is clear that ABAC offers extra flexibility. ABAC can also limit access to specific resources through inversed attribute rules.&lt;/p&gt;

&lt;p&gt;Is ABAC the perfect data access control method? The approach is certainly granular and very flexible, but it is not perfect yet. ABAC requires immense attention to details. Some organizations are starting to incorporate Entity Based Access Control or EBAC to bridge the gap between RBAC and ABAC.&lt;/p&gt;

&lt;p&gt;It is safe to say that data access control is still evolving. As organizations face bigger, more complex challenges, new models and approaches will be adopted to solve them.&lt;/p&gt;

</description>
      <category>dataaccess</category>
      <category>bigdata</category>
      <category>informationsecurity</category>
      <category>cloudresources</category>
    </item>
    <item>
      <title>Python3 Programming - Exercise 26</title>
      <author>Otu Michael</author>
      <pubDate>Fri, 07 May 2021 08:58:08 +0000</pubDate>
      <link>https://dev.to/otumianempire/python3-programming-exercise-26-16f4</link>
      <guid>https://dev.to/otumianempire/python3-programming-exercise-26-16f4</guid>
      <description>&lt;h1&gt;
  &lt;a href="#starting-a-project"&gt;
  &lt;/a&gt;
  Starting a project
&lt;/h1&gt;

&lt;p&gt;A project idea can make you procrastinate, do you believe that?&lt;/p&gt;

&lt;p&gt;Do you also know that it is better to have a broad view of the project you want to build before you start coding? Of course, having a broad view of the project doesn't mean implement it at once.&lt;/p&gt;

&lt;p&gt;Do you know that it is not, sometimes, the code that makes the project but the idea and documentation? Yes, what is an idea if it is just a paper project?&lt;/p&gt;

&lt;p&gt;Do you know that your project does not have to necessarily rock the world? I mean, if you want to do something. Your project can be function implementations of some mathematical concepts. Your projects can just be the solutions (implementations) of some algorithm and data structure course.&lt;/p&gt;

&lt;p&gt;We are telling you that, having an understanding of the programming concepts we have discussed so far and can use them is the whole purpose of this journey.&lt;/p&gt;

&lt;p&gt;A project may fit into one file. It depends. You should know when to separate concerns (functionalities) and when to use a class. You can separate some functions in a new file. If some of these functions and data required can fit into a class, do that.&lt;/p&gt;

&lt;p&gt;Get the project idea and write a story on it. This story will guide you on how you should implement the idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-environment"&gt;
  &lt;/a&gt;
  Virtual environment
&lt;/h2&gt;

&lt;p&gt;Whenever we want to start a project, it is recommended that we use a virtual environment. A virtual environment separates the requirements we need for our particular project from the modules on our local system. With this approach, we can choose a version of a module that is unique to our project.&lt;/p&gt;

&lt;p&gt;This will not affect the version of the local module if it exists. We recommend you use pipenv.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-management"&gt;
  &lt;/a&gt;
  Project management
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com"&gt;Github&lt;/a&gt; is one of the free servers that can host our project. You will have to create a Github repo for your project. This will allow others to contribute to your project. Again, if the unfortunate happens when you lose your PC, you still have the remote code available on &lt;a href="https://github.com"&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://trello.com"&gt;Trello&lt;/a&gt; can be used as a management tool for your project. It is a very great tool for managing projects for a small number of devs also.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unit-test"&gt;
  &lt;/a&gt;
  Unit test
&lt;/h2&gt;

&lt;p&gt;There are instances whereby we have to take another step to develop an interface for some functionalities. There is no need for these extra step when is not needed. Write a unit test instead. Try and break your code and fix it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h2&gt;

&lt;p&gt;Every project must have a story. This story tells onlookers and stakeholders what your project does and sometimes the benefit it comes with. It tells users and other devs how to use your application and sometimes how to extend it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-to-go-from-here"&gt;
  &lt;/a&gt;
  Where to go from here
&lt;/h2&gt;

&lt;p&gt;From here, try going through the resources below. (It is not compulsory). It is good for your programming health. The more you understand the better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-structure-a-project"&gt;
  &lt;/a&gt;
  How to structure a project
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python-guide.org/writing/structure/"&gt;The Hitchhiker's guide to python - Structuring Your Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://julien.danjou.info/starting-your-first-python-project/"&gt;Julien Danjou - Starting your first Python project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#more-on-virtual-environments"&gt;
  &lt;/a&gt;
  More on virtual environments
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python-guide.org/dev/virtualenvs/"&gt;The Hitchhiker's guide to python - Pipenv &amp;amp; Virtual Environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pipenv.pypa.io/en/latest/"&gt;Pipenv - Python Dev Workflow for Humans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/pipenv-guide/"&gt;Real Python - Pipenv: A Guide to the New Python Packaging Tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#more-projects-for-your-elbow"&gt;
  &lt;/a&gt;
  More Projects for your elbow
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.upgrad.com/blog/python-projects-ideas-topics-beginners/"&gt;42 Exciting Python Project Ideas &amp;amp; Topics for Beginners by Rohit Sharma &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://beginnerpythonprojects.com/"&gt;Python projects for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mikkegoes.com/python-projects-for-beginners/"&gt;10 Easy Python Programming Project Ideas by Mikke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dataquest.io/blog/python-projects-for-beginners/"&gt;DATAQUEST - 45 Fun (and Unique) Python Project Ideas for Easy Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#the-end-next-is-the-swiftpythonpracticals-and-sample-projects"&gt;
  &lt;/a&gt;
  The end - next is the &lt;a href="https://github.com/otumian-empire/swift-python-practicals"&gt;swift-python-practicals&lt;/a&gt; and sample projects.
&lt;/h1&gt;

</description>
      <category>python3</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>This will remove Your GitHub Fear </title>
      <author>Sanjay Singh Rajpoot</author>
      <pubDate>Fri, 07 May 2021 08:54:51 +0000</pubDate>
      <link>https://dev.to/sanjaysinghrajpoot/this-will-remove-your-github-fear-1995</link>
      <guid>https://dev.to/sanjaysinghrajpoot/this-will-remove-your-github-fear-1995</guid>
      <description>&lt;p&gt;I have seen a lot of people facing problem using Git and GitHub properly😢, with the help of this guide most of your problems will be sorted🙂.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-you-should-learn-git-and-github-"&gt;
  &lt;/a&gt;
  Why you should learn Git and Github 😕?
&lt;/h1&gt;

&lt;p&gt;Before starting you should know why this is important. Open-source software is a huge part of the tech industry. Over and over, we hear about the power of open source. Git and GitHub is the backbone of open source community, everything from Readme file to fixing bugs starts and ends with &lt;strong&gt;GitHub&lt;/strong&gt;. Let's start by discussing why you should be interested in getting involved with open source.&lt;/p&gt;

&lt;p&gt;There are many benefits of contributing to open source projects. Assess your career and development goals and you might be able to accomplish them by contributing to &lt;strong&gt;open source software&lt;/strong&gt;. Here's a brief and non-exhaustive list of some of the benefits of getting involved with open source:&lt;/p&gt;

&lt;p&gt;-Familiarize yourself with Git&lt;br&gt;
-Gain experience&lt;br&gt;
-Get attention from employers and recruiters&lt;br&gt;
-Connect with other developers in the community&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#learn-git-and-github-basics"&gt;
  &lt;/a&gt;
  Learn Git and GitHub Basics
&lt;/h1&gt;

&lt;p&gt;Before you can go scouting for an open-source project to work on, you should know the basics of Git and GitHub. You don't need to be an expert. But there are a few commands you should definitely know and understand:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git init -&amp;gt; to start git &lt;/li&gt;
&lt;li&gt;git clone&lt;/li&gt;
&lt;li&gt;git checkout -b &lt;/li&gt;
&lt;li&gt;git branch&lt;/li&gt;
&lt;li&gt;git add&lt;/li&gt;
&lt;li&gt;git commit -m  -&amp;gt; commit with message &lt;/li&gt;
&lt;li&gt;git merge &lt;/li&gt;
&lt;li&gt;git push&lt;/li&gt;
&lt;li&gt;git pull&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This article won't discuss what these commands do or how they work. This is a checklist for you to measure your understanding. To make sure you understand when and how to use each command, I suggest you create your own project locally using Git and push your project to GitHub.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#now-its-to-time-make-your-own-repository"&gt;
  &lt;/a&gt;
  Now It's to time make your own Repository
&lt;/h1&gt;

&lt;p&gt;Go ahead and log in with your email and password to GitHub. We are going to make our own repository so if anything gets wrong you can simply delete it and make a new one. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-go-to-githubcom"&gt;
  &lt;/a&gt;
  1. Go to GitHub.com
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In the upper-right corner of any page, use the  drop-down menu, and select New repository.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bfgbEEzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjjq8q10rlsm3gz66dw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bfgbEEzX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjjq8q10rlsm3gz66dw7.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Drop-down with option to create a new repository&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XkbsMENc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp03pwg6xvd1gyr36pue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XkbsMENc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp03pwg6xvd1gyr36pue.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Type a short, memorable name for your repository. For example, "hello-world".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Field for entering a repository name&lt;br&gt;
Optionally, add a description of your repository. For example, "My first repository on GitHub."&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Field for entering a repository description&lt;br&gt;
Choose a repository visibility. For more information, see "About repository visibility."&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select Initialize this repository with a README.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UOw4_7LR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgujldzg2l6gzldu0be3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UOw4_7LR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tgujldzg2l6gzldu0be3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initialize this repository with a README checkbox&lt;br&gt;
Click Create repository.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Button to create a repository&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--efWIua8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhpntk467gq902f5qorl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--efWIua8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhpntk467gq902f5qorl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Congratulations! You've successfully created your first repository.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2-clone-your-fork"&gt;
  &lt;/a&gt;
  2. Clone your fork
&lt;/h2&gt;

&lt;p&gt;To clone the fork you've created, click the "Code" button and copy the URL that's provided.&lt;/p&gt;

&lt;p&gt;In your terminal, change into the directory that you want to hold your forked project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd &amp;lt;directory_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now clone your forked repository using git clone and the URL you just copied&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone &amp;lt;URL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change into the folder that was just created. This will likely match the name of the project you forked. So if we're using the Sandpack repo as an example, that would be [sandpack]:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd &amp;lt;project_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-create-a-branch-locally"&gt;
  &lt;/a&gt;
  3. Create a branch locally
&lt;/h2&gt;

&lt;p&gt;Before you start working, create a separate branch that will hold all the code that you add or edit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -b &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-make-your-changes"&gt;
  &lt;/a&gt;
  4. Make your changes
&lt;/h2&gt;

&lt;p&gt;Now you can finally code! You may also be editing copy, fixing grammatical errors, or improving documentation. Whatever changes you're looking to make, you can finally do it at this step!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-commit-and-push-your-changes"&gt;
  &lt;/a&gt;
  5. Commit and push your changes
&lt;/h2&gt;

&lt;p&gt;Before you commit and push your changes, make sure to run and test your code. Once your sure that your code is functioning as desired, you can commit and push your changes to GitHub.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add .
git commit -m 'commit message here'
git push -u origin head
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#congrates-you-made-it"&gt;
  &lt;/a&gt;
  Congrates You made it 🥳🥳🎈🎉🎊
&lt;/h1&gt;

&lt;p&gt;If you have followed all the steps properly everything should work fine. To check everything worked go to your GitHub repository and you will find all your changes. &lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>codenewbie</category>
      <category>coding</category>
    </item>
  </channel>
</rss>
