<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Learning Programming is Non-Linear</title>
      <author>Renan Moura</author>
      <pubDate>Sat, 20 Nov 2021 12:28:14 +0000</pubDate>
      <link>https://dev.to/renanmouraf/learning-programming-is-non-linear-469c</link>
      <guid>https://dev.to/renanmouraf/learning-programming-is-non-linear-469c</guid>
      <description>&lt;p&gt;Learning is by no means a linear process, even in hard sciences like Math.&lt;/p&gt;

&lt;p&gt;It is very common to see people asking in groups, Reddit, and other forum-like places "What path should I take to become a Software Developer".&lt;/p&gt;

&lt;p&gt;Unfortunately, learning programming is not linear.&lt;/p&gt;

&lt;p&gt;You will find many lists and articles giving you a path like: learn HTML, CSS, JavaScript...&lt;/p&gt;

&lt;p&gt;They are not wrong in the sense that you should learn JavaScript before React, but they don't warn you that you should not worry about mastering the previous topic before jumping to the next.&lt;/p&gt;

&lt;p&gt;Those topics are all interconnected, which means they will "click" in your head only after you have some knowledge of each topic.&lt;/p&gt;

&lt;p&gt;Learn some JavaScript and then some React.&lt;/p&gt;

&lt;p&gt;If you decide to "master" Python before trying Django, good luck, you will never get to Django.&lt;/p&gt;

&lt;p&gt;Python is a massive language, you can learn the basics very quickly, but mastering it is another matter.&lt;/p&gt;

&lt;p&gt;That is what I had in mind when I wrote &lt;a href="https://renanmf.com/python-guide-beginners/"&gt;The Python Guide for Beginners&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can learn the core of the language as fast as possible, and then move on to dive into Web Development, Data Science, or general use of Python as a programming language to automate your everyday tasks.&lt;/p&gt;

&lt;p&gt;If you choose, say, Machine Learning, you will need to understand some details of the language specifically for some tasks, but you will have enough knowledge of the basics to google yourself out of any situation.&lt;/p&gt;

&lt;p&gt;The "click" also happens as you expand your arsenal of tools.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://renanmf.com/learn-more-than-one-programming-language/"&gt;Learn More Than One Programming Language&lt;/a&gt; and some concepts that you learned in language X will make much more sense after you learn language Y.&lt;/p&gt;

&lt;p&gt;I'm challenging myself at the moment to dive more into web3, which is a new realm of software development and solutions revolving around blockchain and the crypto space.&lt;/p&gt;

&lt;p&gt;Adaptation is &lt;a href="https://renanmf.com/the-top-skill-for-a-software-developer/"&gt;The Top Skill for a Software Developer&lt;/a&gt; and you have to keep improving yourself as new opportunities arise.&lt;/p&gt;

&lt;p&gt;This means I won't waste hundreds of hours to learn Solidity or understand every single concept about Smart Contracts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://renanmf.com/the-only-way-to-learn-programming/"&gt;The Only Way To Learn Programming&lt;/a&gt; is to take action with what you know.&lt;/p&gt;

&lt;p&gt;So I will learn some things, apply them to a project and then I will be able to adapt myself to any situation that comes to me.&lt;/p&gt;

&lt;p&gt;If you wait until you are 100% prepared, you will be already too late to take the best opportunities.&lt;/p&gt;

&lt;p&gt;You also can &lt;a href="https://renanmf.com/newsletter/"&gt;subscribe to my newsletter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Handling sensitive client-side API keys in Next</title>
      <author>Carlo Gino Catapang</author>
      <pubDate>Sat, 20 Nov 2021 12:14:38 +0000</pubDate>
      <link>https://dev.to/codegino/handling-sensitive-client-side-api-keys-in-next-2o0g</link>
      <guid>https://dev.to/codegino/handling-sensitive-client-side-api-keys-in-next-2o0g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-to-avoid-exposing-api-keys-to-the-browser"&gt;
  &lt;/a&gt;
  &lt;a href="https://codegino.com/blog/next-hide-api-key"&gt;How to avoid exposing API keys to the browser&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;p&gt;Create an &lt;a href="https://nextjs.org/docs/api-routes/introduction"&gt;API handler&lt;/a&gt; which will call the external API with the sensitive API key, then call that handler from the client-side.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h3&gt;

&lt;p&gt;Here's an example of how to call an API with a required API key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.test.com/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;some-secret-key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/hello?apiKey=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, we don't want it to be hardcoded or committed to the repo; As a workaround, we can create an environment variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;proccess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_EXTERNAL_API_HOST&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;API_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;proccess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NEXT_PUBLIC_API_KEY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;API_URL&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/hello?apiKey=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If you're wondering why variables start with &lt;code&gt;NEXT_PUBLIC_&lt;/code&gt; you can refer to this &lt;a href="https://codegino.com/blog/next-js-environment-variables"&gt;blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using the above example will surely help us not leak the API key in our codebase; however, it is still accessible to the client-side.&lt;/p&gt;



&lt;p&gt;Go to the Network tab in the browser, and you'll see the API key in the request headers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UDMMYaTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6ISSNTj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UDMMYaTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6ISSNTj.png" width="880" height="255"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Keep in mind that client-side code needs to be treated as publicly accessible by anyone.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;

&lt;p&gt;As mentioned in the &lt;code&gt;TL;DR&lt;/code&gt; section, we can prevent the exposure of API keys if the code is running on the server.&lt;/p&gt;

&lt;p&gt;The good thing is that Next.js is not only a client-side framework but is also used to run server-side code, which means no need to create a new backend service for this use case.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check this documentation to learn about creating an &lt;a href="https://nextjs.org/docs/api-routes/introduction"&gt;API in Next.js&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#heres-the-general-steps"&gt;
  &lt;/a&gt;
  Here's the general steps
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Remove the &lt;code&gt;NEXT_PUBLIC&lt;/code&gt; in the variable name(e.g. &lt;code&gt;NEXT_PUBLIC_API_KEY&lt;/code&gt; to &lt;code&gt;API_KEY&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create a handler named &lt;code&gt;hello.js&lt;/code&gt; under &lt;code&gt;pages/api&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Move the API call to the handler with the updated environment variable.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;`https://www.test.com/api/hello?apiKey=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;API_KEY&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Send the response&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The handler above is accessible via &lt;code&gt;localhost:3000/api/hello&lt;/code&gt; in a local environment or &lt;code&gt;https://www.ourhost.com/api/hello&lt;/code&gt; in production.&lt;/p&gt;



&lt;p&gt;But since we are pointing to the same host, we use &lt;code&gt;window.location.origin&lt;/code&gt; to avoid hardcoding the path or creating unnecessary environment variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/api/hello`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The API key should not be visible in the browser as the external API call executes from the server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9PEQLs0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/HDqx4oz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9PEQLs0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/HDqx4oz.png" width="880" height="218"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This article might be anti-climactic as the solution is very similar to all other solutions we've seen so far. However, it is worth mentioning that in Next.js, forwarding an API call to the server is straightforward since Next.js can be both used in the frontend and backend.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Know about 10 popular open-source projects in the end of 2021!</title>
      <author>Suchitra</author>
      <pubDate>Sat, 20 Nov 2021 11:35:11 +0000</pubDate>
      <link>https://dev.to/suchitra_13/know-about-10-popular-open-source-projects-in-the-end-of-2021-2ofp</link>
      <guid>https://dev.to/suchitra_13/know-about-10-popular-open-source-projects-in-the-end-of-2021-2ofp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#mozilla-firefox"&gt;
  &lt;/a&gt;
  Mozilla Firefox
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uV4wBtCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i20ty3vscz13hwziy2xz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uV4wBtCv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i20ty3vscz13hwziy2xz.png" alt="Mozilla" width="750" height="779"&gt;&lt;/a&gt;&lt;br&gt;
Mozilla Firefox is an open source web browser developed by Mozilla Foundation.First released in 2002 under the name Phoenix. It's available for most operating systems including Windows, macOS, Linux, and most phones and tablets.&lt;/p&gt;

&lt;p&gt;Technologies: C++, C, HTML, JavaScript&lt;br&gt;
List of repositories &lt;a href="https://github.com/topics/mozilla-firefox"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#linux"&gt;
  &lt;/a&gt;
  Linux
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CeqGvVay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/727mx98rkpv1pcpi9b0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CeqGvVay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/727mx98rkpv1pcpi9b0b.png" alt="Linux" width="750" height="894"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Linux is a free and open source project developed by Linus Torvald in 1991. Basically, it is an operating system kernel that is open and free for everyone.&lt;/p&gt;

&lt;p&gt;Technologies: C, Assembly language&lt;br&gt;
List of repositories &lt;a href="https://github.com/topics/linux"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apache-cassandra"&gt;
  &lt;/a&gt;
  Apache Cassandra
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xbpzj0EL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shcvt81h17diq8g1is99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xbpzj0EL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/shcvt81h17diq8g1is99.png" alt="Apache Cassandra" width="750" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apache Cassandra is an open source NoSQL distributed database designed to manage massive amount of structure and unstructured data across the world.&lt;br&gt;
It was developed at Facebook for inbox search and open sourced in July 2008. &lt;/p&gt;

&lt;p&gt;Technology: Java&lt;br&gt;
List of repositories &lt;a href="https://cassandra.apache.org/_/community.html#how-to-contribute"&gt;here&lt;/a&gt;&lt;br&gt;
Top Contributor: Jonathan Ellis, CTO &amp;amp; Co-Founder at DataStax&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tensorflow"&gt;
  &lt;/a&gt;
  TensorFlow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cl8xt2fW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmg7fcclxx4mblp2bxi9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cl8xt2fW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tmg7fcclxx4mblp2bxi9.png" alt="TensorFlow" width="880" height="295"&gt;&lt;/a&gt;&lt;br&gt;
TensorFlow is a free and open source software library for Machine Learning and Artificial Intelligence. It was created by Google Brain Team in 2015.&lt;/p&gt;

&lt;p&gt;Technologies: Python, C++&lt;br&gt;
List of repositories &lt;a href="https://github.com/topics/tensorflow"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#django"&gt;
  &lt;/a&gt;
  Django
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YaMl0NRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r73y46axxnwrieovkvde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YaMl0NRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r73y46axxnwrieovkvde.png" alt="Django" width="880" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Django is a Python based open source web framework that follows the model template views architectural pattern. It’s design to help developers achieve their most important objective, which rapid development.&lt;/p&gt;

&lt;p&gt;Technology: Python&lt;br&gt;
List of repositories &lt;a href="https://github.com/topics/django"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#kubernetes"&gt;
  &lt;/a&gt;
  Kubernetes
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qDqy7V8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zza5rwu9w4b21r39hkja.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qDqy7V8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zza5rwu9w4b21r39hkja.png" alt="Kubernetes" width="730" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kubernetes is an open source container orchestration system for automating computer application deployment, scaling, and management. It was originally designed by Google and is now maintained by the Cloud Native Computing Foundation.&lt;br&gt;
It aims to provide a "platform for automating deployment, scaling, and operations of application containers across clusters of hosts". It supports a range of container tools, including Docker&lt;/p&gt;

&lt;p&gt;Technology: Go&lt;br&gt;
List of repositories &lt;a href="https://github.com/topics/kubernetes"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ansible"&gt;
  &lt;/a&gt;
  Ansible
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iOwM9qK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9h3nyyr8ldc45uygky7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iOwM9qK2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9h3nyyr8ldc45uygky7.png" alt="Ansible" width="390" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ansilble is an open source community project sponsored by Red Hat. It is a radically simple IT automation engine that automates cloud provisioning, configuration management, application deployment, intra-service orchestration, and many other IT needs.&lt;/p&gt;

&lt;p&gt;Technologies : Python, PowerShell, Shell, Ruby&lt;br&gt;
List of repositories &lt;a href="https://github.com/ansible/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#geany"&gt;
  &lt;/a&gt;
  Geany
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jxPaBHU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqt3q6qfnkb6dnpnhd1t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jxPaBHU0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nqt3q6qfnkb6dnpnhd1t.png" alt="Geany" width="750" height="750"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Geany is a small and lightweight IDE that runs on Linux, Windows, MacOS, and every platform that is supported by GTK libraries.&lt;/p&gt;

&lt;p&gt;Technologies: C, C++&lt;br&gt;
List of repositories &lt;a href="http://github.com/geany/geany"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#renovate"&gt;
  &lt;/a&gt;
  Renovate
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9IhVl00E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gfuukbp8bqn5p3ycn27.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9IhVl00E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gfuukbp8bqn5p3ycn27.jpg" alt="Renovate" width="660" height="220"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Renovate is the essential “keep absolutely everything up-to-date” code maintenance tool. Acquired by WhiteSource in November 2019, Renovate is designed to save developers time and reduce security risk by automating dependency updates in software projects. &lt;/p&gt;

&lt;p&gt;Technologies: JavaScript, TypeScript&lt;br&gt;
List of repositories &lt;a href="https://github.com/renovatebot/renovate"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#jenkins"&gt;
  &lt;/a&gt;
  Jenkins
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2URulzbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85335ski46qrgzjg1q8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2URulzbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85335ski46qrgzjg1q8f.png" alt="Jenkins" width="750" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jenkins is an open source automation server. It helps automate the part of software development related to building, testing and deploying, facilitating continuous integration and continuous delivery.&lt;/p&gt;

&lt;p&gt;Technology: Java&lt;br&gt;
List of repository &lt;a href="https://www.jenkins.io/participate/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These projects are giant and managed by the community member, not managed by particular ownership. Also, open for everyone who wants to contribute to. Interesting right!!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#thanks-for-reading-hope-its-useful-to-you"&gt;
  &lt;/a&gt;
  &lt;em&gt;Thanks for reading, hope it's useful to you&lt;/em&gt;
&lt;/h2&gt;


&lt;div class="ltag__user ltag__user__id__449284"&gt;
  
    .ltag__user__id__449284 .follow-action-button {
      background-color: #a600ff !important;
      color: #ffd500 !important;
      border-color: #a600ff !important;
    }
  
    &lt;a href="/suchitra_13" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4xeM4t5L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7hzloJNB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/449284/d7520737-9b20-4d78-896c-f7725fe51850.jpg" alt="suchitra_13 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/suchitra_13"&gt;Suchitra&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/suchitra_13"&gt;I am enthusiastic about code and technology!!&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you like the contents and want to support:)&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/suchitra"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWYI_Yhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cawwn08bx5rh2s9bax2x.png" alt="image" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>programming</category>
      <category>devops</category>
    </item>
    <item>
      <title>🤷‍♂️ Chrome just changed emojis to outlines in headings? 🤷‍♂️ I have a fix for your site! 💪</title>
      <author>InHuOfficial</author>
      <pubDate>Sat, 20 Nov 2021 11:34:11 +0000</pubDate>
      <link>https://dev.to/inhuofficial/chrome-changed-emojis-in-headings-a-workaround-if-you-want-normal-emojis-again-4n4o</link>
      <guid>https://dev.to/inhuofficial/chrome-changed-emojis-in-headings-a-workaround-if-you-want-normal-emojis-again-4n4o</guid>
      <description>&lt;p&gt;Recently I noticed something a little different in Chrome, all emojis are now outlines only (and the same colour as text) if they are within Headings.&lt;/p&gt;

&lt;p&gt;I am not sure why this has happened, I can't seem to find anything about it and it certainly isn't an accessibility improvement (if that is what they were thinking)!&lt;/p&gt;

&lt;p&gt;Either way, here is a quick look at what they have done if you haven't seen it yet, or use a different browser!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--73Vrj8mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2g7nqpj4pkio7e8q1e7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--73Vrj8mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2g7nqpj4pkio7e8q1e7.png" alt="Google Chrome on left with simplified emojis in a single colour, Firefox on Right with coloured emojis" width="796" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It also appears that the emojis honour the text colour, which is one good thing (assuming the text colour has enough contrast that is!) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4cjaLi9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iymr41l2gp25z0bxi49e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4cjaLi9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iymr41l2gp25z0bxi49e.png" alt="emoji outline colour in chrome is same as text" width="864" height="326"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-workaround"&gt;
  &lt;/a&gt;
  The workaround
&lt;/h2&gt;

&lt;p&gt;If you make the &lt;code&gt;font-weight&lt;/code&gt; very low then Chrome will show the original emojis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwPUHl9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j4u0kt3r5izdwsdz2cpj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwPUHl9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j4u0kt3r5izdwsdz2cpj.png" alt="emojis in chrome are normal again if text weight is light" width="867" height="332"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So for now a quick workaround if you want normal emojis to show on your site would be to wrap the emojis in a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; with a very low &lt;code&gt;font-weight&lt;/code&gt; and everything will look normal again.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/inhuofficial/embed/NWvJoqW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshot-of-example"&gt;
  &lt;/a&gt;
  Screenshot of example
&lt;/h3&gt;

&lt;p&gt;Just in case your can't see what I am on about here is a screenshot of the above example using Chrome on Windows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZM6pQZyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bpoy74qwxay1k1j0znk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZM6pQZyu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3bpoy74qwxay1k1j0znk.png" alt="Content is same as above codepen" width="831" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-think"&gt;
  &lt;/a&gt;
  What do you think?
&lt;/h2&gt;

&lt;p&gt;I kind of like the new outline only emojis, but they don't work everywhere.&lt;/p&gt;

&lt;p&gt;What are your thoughts on it and can anyone actually find the change log item that explains it?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>css</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Dynamic Twitter header images with Dynacover GitHub Action!</title>
      <author>Erika Heidi</author>
      <pubDate>Sat, 20 Nov 2021 11:21:57 +0000</pubDate>
      <link>https://dev.to/erikaheidi/dynamic-twitter-header-images-with-dynacover-github-action-35nb</link>
      <guid>https://dev.to/erikaheidi/dynamic-twitter-header-images-with-dynacover-github-action-35nb</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;Earlier this year, I've built a command-line application to generate dynamic Twitter header images showing latest followers and GitHub sponsors, called &lt;a href="https://github.com/erikaheidi/dynacover"&gt;Dynacover&lt;/a&gt;. I shared &lt;a href="https://dev.to/erikaheidi/how-to-dynamically-update-twitter-cover-image-to-show-latest-followers-using-php-gd-and-twitteroauth-62n"&gt;the full tutorial on how I built this&lt;/a&gt; here on DEV.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G9ao9-Yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yilj90o4tysav70aeay8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G9ao9-Yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yilj90o4tysav70aeay8.png" alt="screenshot showing the dynamic header image on my Twitter profile" width="880" height="552"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the GitHub Actions Hackaton coming up, and considering it's also possible to run GH Actions on schedule, I thought it would be a very interesting challenge to containerize this application and package it as a GH Action. It took me a couple weeks to figure out how to optimize the build and how to allow users to customize their banner templates, but today I was finally able to wrap everything up.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/marketplace/actions/dynacover"&gt;Dynacover GitHub Action&lt;/a&gt; is now published to the Marketplace and can be used by anyone with a GitHub account.&lt;/p&gt;

&lt;p&gt;The action files are available in this repository:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/erikaheidi"&gt;
        erikaheidi
      &lt;/a&gt; / &lt;a href="https://github.com/erikaheidi/dynacover-actions"&gt;
        dynacover-actions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GitHub Actions to run Dynacover
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Dynacover Action&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/erikaheidi/dynacover"&gt;Dynacover&lt;/a&gt; is a CLI application that dynamically generates Twitter header images showcasing your latest followers and/or GitHub Sponsors
This action runs Dynacover to update the Twitter header image
of the account linked through the secret keys that must be previously defined as &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;repository secrets&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please refer to &lt;a href="https://github.com/erikaheidi/dynacover"&gt;erikaheidi/dynacover&lt;/a&gt; for more details on how Dynacover works, what are the customization options, and how to create custom templates.&lt;/p&gt;
&lt;h2&gt;
Requirements&lt;/h2&gt;
&lt;p&gt;You'll need to set up your Twitter API credentials and user tokens using &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;repository secrets&lt;/a&gt;, on the same repository
you set up your action workflow. The GitHub token is optional, only required if you want to use one of the covers that showcase GitHub Sponsors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_KEY&lt;/code&gt;: your Twitter application consumer key or App Key.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_SECRET&lt;/code&gt;: your Twitter application consumer secret or App Secret.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_TOKEN&lt;/code&gt;: your personal user token.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_TOKEN_SECRET&lt;/code&gt;: your personal user token secret.&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/erikaheidi/dynacover-actions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Wacky Wildcards&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;You'll need to set up your Twitter API credentials and user tokens using &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets"&gt;repository secrets&lt;/a&gt;, on the same repository&lt;br&gt;
you set up your action workflow. The GitHub token is optional, only required if you want to use one of the covers that showcase GitHub Sponsors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secrets&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_KEY&lt;/code&gt;: your Twitter application consumer key or App Key.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_SECRET&lt;/code&gt;: your Twitter application consumer secret or App Secret.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_TOKEN&lt;/code&gt;: your personal user token.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DYNA_TWITTER_TOKEN_SECRET&lt;/code&gt;: your personal user token secret.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;DYNA_GITHUB_TOKEN&lt;/code&gt; (optional): your GitHub personal token (for pulling GitHub Sponsors).
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update Twitter Header Image with Dynacover&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*"&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;dynacover_custom'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Update&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Dynacover&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;image&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;and&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;upload&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Twitter'&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;erikaheidi/dynacover-actions@v4.2&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Uncomment and change accordingly to customize your cover&lt;/span&gt;
          &lt;span class="c1"&gt;#DYNA_DEFAULT_TEMPLATE: dynacover.json&lt;/span&gt;
          &lt;span class="c1"&gt;#DYNA_TEMPLATES_DIR: ${{ github.workspace }}/dynacover_custom&lt;/span&gt;
          &lt;span class="c1"&gt;#DYNA_IMAGES_DIR: ${{ github.workspace }}/dynacover_custom&lt;/span&gt;
          &lt;span class="na"&gt;DYNA_TWITTER_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TW_CONSUMER_KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;DYNA_TWITTER_SECRET&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TW_CONSUMER_SECRET }}&lt;/span&gt;
          &lt;span class="na"&gt;DYNA_TWITTER_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TW_USER_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;DYNA_TWITTER_TOKEN_SECRET&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TW_USER_TOKEN_SECRET }}&lt;/span&gt;
          &lt;span class="na"&gt;DYNA_GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.DYNA_GITHUB_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;To see this workflow in action using a custom template and cover, check my own &lt;a href="https://github.com/erikaheidi/github-actions"&gt;erikaheidi/github-actions&lt;/a&gt; repository, where I have my own Dynacover set up.&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>opensource</category>
      <category>php</category>
    </item>
    <item>
      <title>CSS Variables</title>
      <author>Jordan Soo Yen Yih</author>
      <pubDate>Sat, 20 Nov 2021 11:13:02 +0000</pubDate>
      <link>https://dev.to/yenyih/css-variables-k5</link>
      <guid>https://dev.to/yenyih/css-variables-k5</guid>
      <description>&lt;p&gt;&lt;strong&gt;CSS variables&lt;/strong&gt; aka &lt;strong&gt;custom properties&lt;/strong&gt; allows you to reuse values throughout your stylesheet. It increases your efficiency, reduce code duplication and a lot of cool tricks you could do with them.🤩&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#global-variables"&gt;
  &lt;/a&gt;
  Global Variables
&lt;/h2&gt;

&lt;p&gt;We can define global variables that will be use throughout the entire website on the root element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
   --warning-color: yellow; 

   /* Format --&amp;lt;YOUR_VARIABLE_NAME&amp;gt;: &amp;lt;ANY_CSS_VALUE&amp;gt; */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start with the double dash, followed by whatever name you want to use for the variable. Then you can use any valid CSS value.&lt;/p&gt;

&lt;p&gt;Then you can use the variable with the &lt;em&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/em&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
   color: var(--warning-color);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Tips: When calling a CSS variable with the &lt;em&gt;&lt;strong&gt;var&lt;/strong&gt;&lt;/em&gt; function, You can pass in a second argument as a fallback value.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
   color: var(--warning-color, red);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As example above, if the variable is undefined or invalid CSS value, then it will use red instead.&lt;/p&gt;

&lt;p&gt;Now by using the CSS Variables, when we want to change the value, we just need to update once instead of go through every places.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#variable-cascade-downwards"&gt;
  &lt;/a&gt;
  Variable Cascade Downwards
&lt;/h2&gt;

&lt;p&gt;We can override the Global CSS variables value in the children. Let's say we have a global variable in previous example, and we have a &lt;em&gt;card&lt;/em&gt; class that change the --warning-color variable to red. So the HTML element with this &lt;em&gt;card&lt;/em&gt; class will use the red value instead of yellow value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/* Global */
:root {
   --warning-color: yellow;
}

/* Local */
.card {
   --warning-color: red;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That means we can change the appearance of our website by simply tweaking CSS Variables value. This concept very powerful when combine with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries"&gt;Media Queries&lt;/a&gt;💪.&lt;/p&gt;

&lt;p&gt;For example if the viewport is smaller, you may want to decrease the margin between HTML elements instead of updating potential more than 100 CSS classes😵🤯, just define a media query and change the CSS variables value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media screen and (min-width: 600px) {
   :root {
      --margin-base: 10px;
   }
}

/* Small Screens */
@media screen and (max-width: 600px) {
   :root {
      --margin-base: 6px;
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another example is we can use the &lt;em&gt;prefers-color-scheme&lt;/em&gt; media query to toggle between light theme and dark theme based on the user's device preferences.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media (prefers-color-scheme: dark) {
    :root {
       --text-color: white;
       --background-color: black;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Besides that, CSS variables also work great with &lt;em&gt;&lt;em&gt;calc&lt;/em&gt;&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.my-title {
   --regular-number: 8;

   margin: calc( var(--regular-number) * 1px );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Besides that, you are not limited to use a single variable in a property value. For example below we can define several variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
   --red: 86;
   --green: 23;
   --blue: 107;
}

.content-card {
   color: rgb( var(--red), var(--green), var(--blue) );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This makes CSS Variables extremely useful on building themes. This is because when we combine with Javascript and change the CSS classes on the fly, then the browser will automatically repaint the style of the website.✨🤩&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yfoMSGLX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wfeosg8cigqsoyya0eq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yfoMSGLX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3wfeosg8cigqsoyya0eq.gif" alt="thank_you_gif" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading.
&lt;/h2&gt;

&lt;p&gt;Above is what I learnt about CSS Variables and how to apply them. If you have any other interesting way on using CSS Variables, please comment below to share with me.🙏😊&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>css</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Day 66/100 JavaScript and the Browser</title>
      <author>Rio Cantre</author>
      <pubDate>Sat, 20 Nov 2021 11:01:28 +0000</pubDate>
      <link>https://dev.to/riocantre/day-64100-javascript-and-the-browser-3kf1</link>
      <guid>https://dev.to/riocantre/day-64100-javascript-and-the-browser-3kf1</guid>
      <description>&lt;p&gt;"The dream behind the Web is of a common information space in which we communicate by sharing information. Its universality is essential: the fact that a hypertext link can point to anything, be it personal, local or global, be it draft or highly polished."&lt;/p&gt;

&lt;p&gt;– Tim Berners-Lee, The World Wide Web: A very short personal history&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--igkLR17X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j5a9lveyu2k0nuht1ns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--igkLR17X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j5a9lveyu2k0nuht1ns.png" alt="computer" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>challenge</category>
      <category>programming</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Help build the Metaverse by Developing VR Websites </title>
      <author>Saji Wang</author>
      <pubDate>Sat, 20 Nov 2021 10:55:37 +0000</pubDate>
      <link>https://dev.to/codesphere/help-build-the-metaverse-by-developing-vr-websites-4mgp</link>
      <guid>https://dev.to/codesphere/help-build-the-metaverse-by-developing-vr-websites-4mgp</guid>
      <description>&lt;p&gt;I know what you're thinking, building VR apps requires a PHD in Mathematics and Computer Graphics, and will take you months just to get an app up and running.&lt;/p&gt;

&lt;p&gt;Well, I'm glad to say that you couldn't be more wrong. In this tutorial, we're going to be building a VR website in minutes (you don't even need a VR device to test it with)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UfluVlIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veus4znxc8s1gczrv0dk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UfluVlIH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veus4znxc8s1gczrv0dk.gif" alt="vr webapp final look" width="880" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That means you, yes YOU, can build VR experiences and contribute to the metaverse. Let's get started!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-the%C2%A0web"&gt;
  &lt;/a&gt;
  Why The Web?
&lt;/h3&gt;

&lt;p&gt;Now the web might not be the first thing you think of when you think about virtual reality. In reality, however, the web is one of the few truly cross platform technologies that exist.&lt;br&gt;
Building a VR app once with Javascript will allow it to run on virtually any VR system.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#what-are-the-relevant-technologies"&gt;
  &lt;/a&gt;
  What Are The Relevant Technologies?
&lt;/h3&gt;

&lt;p&gt;So what tech are we going to be using?&lt;/p&gt;

&lt;p&gt;First, we are going to be taking advantage of Aframe.io, a library for building and rendering VR scenes with some simple HTML and Javascript. Additionally, you may decide to use Three.js for more complex graphics. Aframe.io includes support for the Three.js API.&lt;/p&gt;

&lt;p&gt;Next, we are going to be taking advantage of WebXR, a library originally developed by Mozilla that allows you to interact with VR devices directly from the web. Additionally, I'm going to show you how you can test your apps without a VR device using a WebXR API extension.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#getting-started-with-aframeio"&gt;
  &lt;/a&gt;
  Getting Started With AFrame.io
&lt;/h3&gt;

&lt;p&gt;To gain access to Aframe.io, just add the following script via CDN:&lt;/p&gt;



&lt;p&gt;We can then create a simple scene with the following html:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJdkoBWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxsukywkdga1fkk9ovfw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJdkoBWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kxsukywkdga1fkk9ovfw.png" alt="intial vr scene" width="880" height="776"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the key piece to notice here is that we surround our VR scene with the  tag. We can then insert various shapes into our scene by including the relevant tag.&lt;/p&gt;

&lt;p&gt;You can find a full list of a-frame tags, as well as the full A-Frame docs here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aframe.io/docs/1.2.0/introduction/"&gt;https://aframe.io/docs/1.2.0/introduction/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll notice that while you can drag the screen to move the camera, you can't yet actually use a VR device. This is because the html file has to be served, it can't be run off a static file.&lt;/p&gt;

&lt;p&gt;This can be done fairly easily with nodeJS. Simply setup an npm project with the following javascript file:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Finally, we can get a little fancier, and manipulate our scene with Javascript like so:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rsM3Fie1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f84qc1mimioy6gk5aqeb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rsM3Fie1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f84qc1mimioy6gk5aqeb.gif" alt="animated vr scene" width="784" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there you have it! We successfully created an animated VR scene with less than 100 lines of code!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#testing-it-with-the-webxr%C2%A0api"&gt;
  &lt;/a&gt;
  Testing it with the WebXR API
&lt;/h3&gt;

&lt;p&gt;Now if you're anything like me and haven't shelled out for a VR headset yet, don't worry! You can test out your VR website in either Chrome or Firefox using the WebXR API. Just install the following extension:&lt;/p&gt;

&lt;p&gt;For Firefox: &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/webxr-api-emulator/"&gt;https://addons.mozilla.org/en-US/firefox/addon/webxr-api-emulator/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Chrome:&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/webxr-api-emulator/mjddjgeghkdijejnciaefnkjmkafnnje?hl=en"&gt;https://chrome.google.com/webstore/detail/webxr-api-emulator/mjddjgeghkdijejnciaefnkjmkafnnje?hl=en&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once installed, you can head to the WebXR tab when inspecting the page, and play with an emulated headset!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWjR6FD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h74ul5ati1a91z7cb2wa.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWjR6FD_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h74ul5ati1a91z7cb2wa.gif" alt="final vr scene with emulated headset" width="880" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what are you waiting for! Get started!&lt;/p&gt;




&lt;p&gt;Once you're ready to deploy your app, give &lt;a href="https://link.codesphere.com/GD"&gt;Codesphere&lt;/a&gt; a try! &lt;/p&gt;

&lt;p&gt;We're the first cloud platform that truly lets you get under the hood of your cloud environment&lt;br&gt;
Happy coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>vr</category>
    </item>
    <item>
      <title>Django Cookie-Cutter - Material Dashboard</title>
      <author>Sm0ke</author>
      <pubDate>Sat, 20 Nov 2021 10:43:50 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-cookie-cutter-material-dashboard-2l1m</link>
      <guid>https://dev.to/sm0ke/django-cookie-cutter-material-dashboard-2l1m</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article explains how to generate a simple &lt;strong&gt;Django Dashboard&lt;/strong&gt; using &lt;a href="https://blog.appseed.us/django-cookie-cutter-generator/"&gt;Cookiecutter&lt;/a&gt;, a well-known command-line utility that creates projects from project templates.  The customization process allows choosing the project name, database type, and other related information like project name, version and support email (if any).  For newcomers, &lt;strong&gt;Django&lt;/strong&gt; is a leading web framework created and actively supported by experienced developers using a batteries-included concept.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://django-material-dashboard.appseed-srv1.com/"&gt;Django Material Dashboard&lt;/a&gt; - preview the generated project&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://github.com/app-generator/cookiecutter-django"&gt;Django Cookie-Cutter&lt;/a&gt; - the generator sources&lt;/li&gt;
&lt;li&gt;✨ For &lt;code&gt;support&lt;/code&gt; via &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt; join &lt;code&gt;AppSeed&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  ✨ How it Works
&lt;/h2&gt;

&lt;p&gt;To start fast and generate a new project the workstation should have a minimal toolchain used by the generator: &lt;strong&gt;Python3&lt;/strong&gt;, &lt;strong&gt;GIT&lt;/strong&gt;, and (optional) a modern code editor like &lt;code&gt;VsCode&lt;/code&gt; or &lt;code&gt;Atom&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Step #1&lt;/strong&gt; - Create a &lt;code&gt;virtual environment&lt;/code&gt; for dependencies&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Step #2&lt;/strong&gt; - Install Modules&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;cookiecutter
&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;GitPython 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;👉 &lt;strong&gt;Step #3&lt;/strong&gt; -  Generate the project&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cookiecutter https://github.com/app-generator/cookiecutter-django.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;console output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; project_name &lt;span class="o"&gt;[&lt;/span&gt;Django Seed project]: Django Material
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; project_slug &lt;span class="o"&gt;[&lt;/span&gt;django_material]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; description &lt;span class="o"&gt;[&lt;/span&gt;A simple Django project]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; author_name &lt;span class="o"&gt;[&lt;/span&gt;AppSeed]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; domain_name &lt;span class="o"&gt;[&lt;/span&gt;example.com]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; email &lt;span class="o"&gt;[&lt;/span&gt;appseed@example.com]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; version &lt;span class="o"&gt;[&lt;/span&gt;0.0.1]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Select theme:
1 - volt
2 - soft-ui
3 - datta-able
4 - material-dashboard
Choose from 1, 2, 3, 4 &lt;span class="o"&gt;[&lt;/span&gt;1]: 4       &amp;lt;&lt;span class="nt"&gt;----&lt;/span&gt; SELECT the Material Design
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Select database:
1 - sqlite3
2 - mysql
3 - postgresql
Choose from 1, 2, 3 &lt;span class="o"&gt;[&lt;/span&gt;1]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; database_name &lt;span class="o"&gt;[&lt;/span&gt;appseed_django]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; database_user &lt;span class="o"&gt;[&lt;/span&gt;appseed_user]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; database_pass &lt;span class="o"&gt;[&lt;/span&gt;Pass1234]:
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; PRE Gen hook executed
 Cloning theme: &amp;lt;material-dashboard&amp;gt;, REPO: https://github.com/app-generator/django-dashboard-material.git
 ...done
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; POST Gen hook executed
 &lt;span class="k"&gt;***&lt;/span&gt; Copy assets
 ...done
 &lt;span class="k"&gt;***&lt;/span&gt; Copy templates
 ...done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the process is finished, we can change the directory inside the generated sources and use &lt;strong&gt;Docker&lt;/strong&gt; to start the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django_material
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, the app should be accessible in the browser at the address &lt;code&gt;http://localhost:85&lt;/code&gt;.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HKA4PthI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqfxmj05hnh4cflxoko7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HKA4PthI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqfxmj05hnh4cflxoko7.png" alt="Django Cookie-Cutter Material - Login Page." width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;✨ Django Cookie-Cutter - Dashboard Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4PfPDDyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztj14z8ujoa79b3bvjk0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4PfPDDyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztj14z8ujoa79b3bvjk0.png" alt="Django Cookie-Cutter Material - Dashboard Page." width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;✨ Django Cookie-Cutter - VR page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y8Cl2lMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y1juyd7dygzlz7ep33yp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y8Cl2lMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y1juyd7dygzlz7ep33yp.png" alt="Django Cookie-Cutter Material - VR Page." width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;👉 More &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Dashboards&lt;/a&gt; - a curated list&lt;/li&gt;
&lt;li&gt;👉 More &lt;a href="https://appseed.us/django"&gt;Django Starters&lt;/a&gt; - dashboards and apps&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>cookiecutter</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Integrating Percy and Cypress to your Next.js application.</title>
      <author>Karthikeyan</author>
      <pubDate>Sat, 20 Nov 2021 10:34:10 +0000</pubDate>
      <link>https://dev.to/imkarthikeyan/integrating-percy-and-cypress-to-your-nextjs-application-3fj0</link>
      <guid>https://dev.to/imkarthikeyan/integrating-percy-and-cypress-to-your-nextjs-application-3fj0</guid>
      <description>&lt;p&gt;In this blog post,  we will be seeing how to integrate Percy and Cypress to your Next.js application. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Visual Testing&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;End to End Testing&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Intro on&lt;/strong&gt; &lt;strong&gt;Percy&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Intro on Cypress&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Writing your first E2E test with Cypress.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connecting Percy with Cypress.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrating Visual Testing with CI pipeline&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#visual-testing-"&gt;
  &lt;/a&gt;
  Visual testing :
&lt;/h2&gt;

&lt;p&gt;Visual testing makes sure that UI looks the same for all the users. At the end of the build, a visual testing tool takes a screenshot so that it can check , analyse and give us information as how our application gets rendered on multiple environments like browsers, devices and how screen size can affect the layout of the application. &lt;/p&gt;

&lt;p&gt;Below are some of the visual testing tools&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Percy (BrowserStack)&lt;/li&gt;
&lt;li&gt;Kobiton&lt;/li&gt;
&lt;li&gt;Applitools&lt;/li&gt;
&lt;li&gt;LambdaTest&lt;/li&gt;
&lt;li&gt;CrossBrowserTesting (SMARTBEAR)&lt;/li&gt;
&lt;li&gt;Chromatic&lt;/li&gt;
&lt;li&gt;Screener by SauceLabs (Sauce Visuals)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#end-to-end-testing-"&gt;
  &lt;/a&gt;
  End to End Testing :
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;E2E or End-to-end testing&lt;/strong&gt; is a test strategy where we subject our application to test scenario which will closely impersonate how an end user will interact with application. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WebdriverJS.&lt;/li&gt;
&lt;li&gt;Protractor.&lt;/li&gt;
&lt;li&gt;WebdriverIO.&lt;/li&gt;
&lt;li&gt;NightwatchJS.&lt;/li&gt;
&lt;li&gt;Cypress.&lt;/li&gt;
&lt;li&gt;TestCafe.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oKIPlLZEbEbacWqOc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oKIPlLZEbEbacWqOc/giphy.gif" alt="https://media.giphy.com/media/3oKIPlLZEbEbacWqOc/giphy.gif" width="320" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alright now we know about the two high level testing strategies. Let's see short intro about the tools which we are going to use. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#percy"&gt;
  &lt;/a&gt;
  Percy:
&lt;/h2&gt;

&lt;p&gt;Percy &lt;strong&gt;helps teams automate visual testing&lt;/strong&gt;. It captures screenshots, compares them against the baseline, and highlights visual changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cypress"&gt;
  &lt;/a&gt;
  Cypress:
&lt;/h2&gt;

&lt;p&gt;Cypress is a JavaScript-based end-to-end testing framework built on top of Mocha which runs on the browser. It's make the testing process more reliable and faster.&lt;/p&gt;

&lt;p&gt;Let's code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2GjgvS5vA6y08/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2GjgvS5vA6y08/giphy.gif" alt="https://media.giphy.com/media/2GjgvS5vA6y08/giphy.gif" width="500" height="257"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: I will not be going in depth about writing E2E test. Please refer to the cypress documentation on &lt;a href="https://docs.cypress.io/guides/getting-started/writing-your-first-test"&gt;writing your first test&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bootstrapping-your-nextjs-application"&gt;
  &lt;/a&gt;
  Bootstrapping your Next.js application:
&lt;/h2&gt;

&lt;p&gt;We will be using the &lt;code&gt;create-next-app&lt;/code&gt; cli to bootstrap our demo application. Go to your terminal and type the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-next-app cypress-next-demo &lt;span class="nt"&gt;--ts&lt;/span&gt;

&lt;span class="nb"&gt;cd &lt;/span&gt;cypress-next-demo

yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will start up a brand new next.js application and spin up in your local machine. &lt;/p&gt;

&lt;p&gt;You can now visit &lt;a href="http://localhost:3000"&gt;localhost:3000&lt;/a&gt; in your browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KZgq32SF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399189323/pY3xsv3kP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KZgq32SF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399189323/pY3xsv3kP.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before writing our first test. Let's clean up the boilerplate code in the  &lt;code&gt;index.tsx&lt;/code&gt; file. Paste the following in your &lt;code&gt;pages/index.tsx&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NextPage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Head&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next/head&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next/image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../styles/Home.module.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NextPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Create Next App&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Generated by create next app"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/favicon.ico"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Cypress + Next.js + Percy
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
         playing around with cypress , next and percy
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

     &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are having a simple &lt;code&gt;h1&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; tags in our demo app. Save it and check in your browser to verify the changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zwtssFrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399213409/1SJCs9xpS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zwtssFrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399213409/1SJCs9xpS.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-your-first-e2e-test-with-cypress"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Writing your first E2E test with Cypress:&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Let's first install cypress. Head over to the terminal and run the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add cypress &lt;span class="nt"&gt;--dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the installation is done , open the &lt;code&gt;package.json&lt;/code&gt; add the following line to the script&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"cypress:open"&lt;/span&gt;: &lt;span class="s2"&gt;"cypress open"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and run the following command in your terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
yarn run cypress:open
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is will open up the cypress and generate the examples with recommended folder structure&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;➜  cypress git:&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-ltra&lt;/span&gt;

total 0
drwxr-xr-x   3 karthikeyan.shanmuga  253301862   96 Nov 16 22:11 plugins
drwxr-xr-x   6 karthikeyan.shanmuga  253301862  192 Nov 16 22:11 &lt;span class="nb"&gt;.&lt;/span&gt;
drwxr-xr-x   3 karthikeyan.shanmuga  253301862   96 Nov 16 22:11 fixtures
drwxr-xr-x   4 karthikeyan.shanmuga  253301862  128 Nov 16 22:11 support
drwxr-xr-x   3 karthikeyan.shanmuga  253301862   96 Nov 16 22:12 integration
drwxr-xr-x  19 karthikeyan.shanmuga  253301862  608 Nov 17 00:22 ..
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can run the sample test in the Cypress UI to see how it is working. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FQGki5zK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399255801/9ZNcxQRig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FQGki5zK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399255801/9ZNcxQRig.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's remove the example test and create our own. Do the following,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;integrations

&lt;span class="nb"&gt;touch &lt;/span&gt;app.spec.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following content to the &lt;code&gt;app.spec.ts&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// app.spec.ts &lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;home page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;checking for tags&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;be.visible&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;be.visible&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to add the &lt;code&gt;"baseUrl": "http://localhost:3000"&lt;/code&gt; to  &lt;code&gt;cypress.json&lt;/code&gt; configuration file. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-walkthrough"&gt;
  &lt;/a&gt;
  Code Walkthrough:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; come from &lt;a href="https://mochajs.org/"&gt;Mocha&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;expect&lt;/code&gt; comes from &lt;a href="http://www.chaijs.com/"&gt;Chai&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Since we have configured the baseUrl to our local development url. We will be replacing  We can just straight away visit the root of our application with &lt;code&gt;cy.visit('/')&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In next two consecutive lines , we are checking to see if &lt;code&gt;h1&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; we added to our &lt;code&gt;index.tsx&lt;/code&gt; file is visible in the DOM&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#running-your-cypress-tests"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Running your Cypress tests:&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Since Cypress is testing a real Next.js application, it requires the Next.js server to be running prior to starting Cypress. &lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;npm run build&lt;/code&gt; and &lt;code&gt;npm run start&lt;/code&gt;, then run &lt;code&gt;npm run cypress&lt;/code&gt; in another terminal window to start Cypress.&lt;/p&gt;

&lt;p&gt;Alright before automating by connecting it with Github actions CI. Let's connect it with Percy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connecting-with-percy-"&gt;
  &lt;/a&gt;
  Connecting with Percy :
&lt;/h2&gt;

&lt;p&gt;Install &lt;code&gt;@percy/cypress&lt;/code&gt; and &lt;code&gt;@percy/cli&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add &lt;span class="nt"&gt;--dev&lt;/span&gt; @percy/cli @percy/cypress

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to add Percy snapshots to your Cypress tests, you'll need to first import the &lt;code&gt;@percy/cypress&lt;/code&gt; package into your &lt;code&gt;cypress/support/index.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;import &lt;span class="s1"&gt;'@percy/cypress'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Head over to the &lt;code&gt;app.spec.ts&lt;/code&gt; file and add the following line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// for visual diffing&lt;/span&gt;
&lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percySnapshot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Home page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once done your &lt;code&gt;app.spec.ts&lt;/code&gt; file should look something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;home page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;checking for the tags&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;be.visible&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;should&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;be.visible&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;// Take a snapshot for visual diffing&lt;/span&gt;
        &lt;span class="nx"&gt;cy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percySnapshot&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Since our project is using typescript, please include the following types in the &lt;code&gt;tsconfig.json&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;types&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cypress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@percy/cypress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we have not connected to the CI yet , let's see how we can run the test in our local and send the screenshot to Percy for visual diffing. We need &lt;code&gt;PERCY_TOKEN&lt;/code&gt; for this.&lt;/p&gt;

&lt;p&gt;Create an account in Browserstack if you don't have one and navigate to Percy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new project and give the name as &lt;code&gt;percy-cypress-demo&lt;/code&gt; and connect it your github repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_VnCqCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399317076/npOYM6Wju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_VnCqCn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399317076/npOYM6Wju.png" alt="image.png" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Copy &lt;code&gt;PERCY_TOKEN&lt;/code&gt; from the new project screen, then run:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="nx"&gt;PERCY_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;your_token_here&lt;/span&gt;

&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;percy&lt;/span&gt; &lt;span class="nx"&gt;exec&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="nx"&gt;cypress&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will run the Percy test in your local environment and send the build to Percy. since it is the first build it will be considered as the base build and used for comparison. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T-Uds1m4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637403756780/3FALNivgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T-Uds1m4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637403756780/3FALNivgm.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's automate the process shall we. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connecting-with-ci-github-action"&gt;
  &lt;/a&gt;
  Connecting with CI - Github Action
&lt;/h2&gt;

&lt;p&gt;Let's connect it with our CI pipeline. We will be using Github actions to achieve this. Create a workflow file in our root directory. &lt;/p&gt;

&lt;p&gt;From &lt;a href="https://nextjs.org/docs/testing#running-your-cypress-tests"&gt;Next.js docs&lt;/a&gt;👇&lt;/p&gt;

&lt;p&gt;You can install the &lt;code&gt;start-server-and-test&lt;/code&gt; package and add it to the &lt;code&gt;package.json&lt;/code&gt; . In the scripts field: &lt;code&gt;"test": "start-server-and-test start http://localhost:3000 cypress"&lt;/code&gt; to start the Next.js production server in conjunction with Cypress. Remember to rebuild your application after new changes.&lt;/p&gt;

&lt;p&gt;We will also be doing the same. After updating the package.json as mentioned it should look something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cypress-percy-demo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"private"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"next dev"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"next build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"next start"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"next lint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cypress:open"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cypress open"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cypress:run"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cypress run"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"percy:cypress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"percy exec -- cypress run"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start:server"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"serve -l 3000 ."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"start-server-and-test start http://localhost:3000 percy:cypress"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"next"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"12.0.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"17.0.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"react-dom"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"17.0.2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@percy/cli"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.0.0-beta.70"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@percy/cypress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.1.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@types/node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"16.11.7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@types/react"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"17.0.35"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cypress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^9.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"eslint-config-next"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"12.0.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"serve"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^13.0.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start-server-and-test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.14.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"typescript"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"4.4.4"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we will using the above configured command &lt;code&gt;yarn run test&lt;/code&gt; in our CI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# .github/workflows/main.yml&lt;/span&gt;

&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CI&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yarn&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build Next.js&lt;/span&gt; 
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yarn run build&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run tests&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;percy/exec-action@v0.3.1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;custom-command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;npm&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;test"&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;PERCY_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.PERCY_TOKEN }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Walkthrough&lt;/strong&gt;: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Whenever we push the code to the main branch or send a pull request test will be triggered. &lt;/li&gt;
&lt;li&gt;Install the dependencies and build your Next.js application &lt;/li&gt;
&lt;li&gt;Run the test. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note: Please add the &lt;code&gt;PERCY_TOKEN&lt;/code&gt; to your Github secrets.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is the need to run the test when code gets pushed to main branch ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Percy needs a base screenshot which it can use it to compare with fixes which will be sent it's way. If it does not have the screenshots to compare to , then you will have only one screenshot of your &lt;code&gt;pull-request&lt;/code&gt; branch. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;From Percy docs&lt;/strong&gt; 👇&lt;/p&gt;

&lt;p&gt;We encourage you to run Percy builds for every commit on the main branch, as these provide the baseline builds for the pull request and feature builds. &lt;/p&gt;

&lt;p&gt;More info on &lt;a href="https://docs.percy.io/docs/baseline-picking-logic#why-do-all-of-my-snapshots-show-no-previous-snapshot"&gt;docs&lt;/a&gt; . &lt;/p&gt;

&lt;p&gt;You can also &lt;a href="https://docs.percy.io/docs/source-code-integrations"&gt;add Percy to your pull/merge requests&lt;/a&gt; to be notified when visual changes are detected, and when those changes are approved and ready to merge.&lt;/p&gt;

&lt;p&gt;Head to your  settings to give Percy access to &lt;a href="https://docs.percy.io/docs/github"&gt;GitHub&lt;/a&gt; or &lt;a href="https://docs.percy.io/docs/gitlab"&gt;GitLab&lt;/a&gt;. Once you’ve given access, connect your project on Percy to your project’s source repository. Then the next time you commit, Percy will show up in your pull/merge request checks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIladxpL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399383220/V9bz5Jwxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIladxpL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399383220/V9bz5Jwxn.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since the there is no visual difference , you don't have to approve the build in percy. Now head over to the &lt;code&gt;pages/index.tsx&lt;/code&gt; file and change the &lt;code&gt;p&lt;/code&gt; tag content and send in the pull request. &lt;/p&gt;

&lt;p&gt;Once the test run, you will get the screenshot appearing on Percy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_l1uYrTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399505248/FKLqrYtaA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_l1uYrTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637399505248/FKLqrYtaA.png" alt="image.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you approve it , you will be able to merge the Pull request and then it will trigger another action to compare the new and old &lt;code&gt;main&lt;/code&gt; branch screenshot. Since the new main branch screenshot is the latest one , it will auto-approved and considered as the base screenshot for the further comparison&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xT0xezQGU5xCDJuCPe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xT0xezQGU5xCDJuCPe/giphy.gif" alt="https://media.giphy.com/media/xT0xezQGU5xCDJuCPe/giphy.gif" width="498" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-have-we-achieved-so-far-"&gt;
  &lt;/a&gt;
  What have we achieved so far ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Learnt about visual and e2e testing.&lt;/li&gt;
&lt;li&gt;How to write your first e2e test using Cypress.&lt;/li&gt;
&lt;li&gt;How to connect Percy with Cypress. &lt;/li&gt;
&lt;li&gt;Automating visual test with CI pipeline. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have attached some reference blog post to get more familiar on Github actions and creating your own workflow. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion:&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;That's pretty much it. Thank you for taking the time to read the blog post. If you found the post useful , add ❤️ to it and let me know if I have missed something in the comments section. Feedback on the blog are most welcome.&lt;/p&gt;

&lt;p&gt;Link to the repository: &lt;a href="https://github.com/skarthikeyan96/cypress-next-demo"&gt;https://github.com/skarthikeyan96/cypress-next-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's connect on twitter : (&lt;strong&gt;&lt;a href="https://twitter.com/karthik_coder"&gt;https://twitter.com/karthik_coder&lt;/a&gt;&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" alt="https://media.giphy.com/media/eujb1tWaj3ZxS/giphy.gif" width="500" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.browserstack.com/guide/cypress-framework-tutorial"&gt;Cypress Framework tutorial — Browserstack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/testing"&gt;Next.js docs — testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.digitalocean.com/community/tutorials/getting-started-with-visual-testing-in-5-minutes"&gt;Visual testing with percy - digital ocean&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/quickstart"&gt;Creating your first github action &lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>todayilearned</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>ReactJS vs AngularJS: Which one is better for your project?</title>
      <author>Rithik Samanthula</author>
      <pubDate>Sat, 20 Nov 2021 10:21:57 +0000</pubDate>
      <link>https://dev.to/code2rithik/reactjs-vs-angularjs-which-one-is-better-for-your-project-2ca8</link>
      <guid>https://dev.to/code2rithik/reactjs-vs-angularjs-which-one-is-better-for-your-project-2ca8</guid>
      <description>&lt;p&gt;Heya Coders! What's poppin'?&lt;/p&gt;

&lt;p&gt;Today, I'll be talking about which is better: React or Angular. Feel free to share your opinions in the comments below!&lt;/p&gt;

&lt;p&gt;Let's get it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NvoQA38G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppapmyykm9580jme9na8.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvoQA38G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ppapmyykm9580jme9na8.jpeg" alt="Framework meme" width="500" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt; ✨ Javascript is one of the most popular languages ​​among developers today. There are many developers, newbies, and *seasoned aficionados* who build their application or project using Javascript, but still, there is confusion when choosing the right framework or library for their design. ✨ &lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GvFWwjJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o1yoc67mr69wdb66cdt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GvFWwjJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o1yoc67mr69wdb66cdt.jpeg" alt="Well Well Well Willy Wonka meme" width="600" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Soooo Angular and React are both popular &lt;strong&gt;but&lt;/strong&gt; developers can't really &lt;em&gt;decide&lt;/em&gt; upon WHICH is good for their project. 🤷‍♂️&lt;/p&gt;

&lt;p&gt;Most learners and students want to learn a framework that could help in getting them a good job in the market. 🤓&lt;/p&gt;

&lt;p&gt;Alright I honestly think I'm wasting your time lets get to the point. 😂&lt;/p&gt;

&lt;p&gt;Let's get to the BASICS.&lt;/p&gt;

&lt;h2&gt; React &lt;/h2&gt;

&lt;p&gt;Pretty sure y'all know what React is but for those of you who don't know, React is a framework created by and maintained by Facebook in 2013. Long story short, ReactJS is used to build interactive user-interfaces. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YTd-yHB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bd20dz2e1eoshz4pza2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YTd-yHB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bd20dz2e1eoshz4pza2.gif" alt="React Spinning Gif" width="880" height="275"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt; Angular &lt;/h2&gt;

&lt;p&gt;Angular is also a JavaScript framework that was created by google and was released in 2010. It's mainly used for developing SPAs (Single-Page Applications).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VNcSNiB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdxciukxs8syuk70opw0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VNcSNiB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdxciukxs8syuk70opw0.gif" alt="Angular gif" width="650" height="290"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt; The world's voice 🗣: &lt;/h2&gt;

&lt;p&gt;Lets see what Stack Overflow's AND Google Trends survey says about Angular and React! 📈&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UhqmSrsT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdf7e83u9canm7ketxa0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UhqmSrsT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdf7e83u9canm7ketxa0.png" alt="Stack Overflow Survey Result" width="880" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AND&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--njzw25uT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syew28tfsyo1pm8a6osi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--njzw25uT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syew28tfsyo1pm8a6osi.png" alt="Google Trends Survey" width="880" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can clearly see that React has more priority over Angular 😲&lt;/p&gt;

&lt;h2&gt; What I think 🧠: &lt;/h2&gt; &lt;br&gt;

&lt;h2&gt; Angular &lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Learning the Framework&lt;/strong&gt;: In order to learn Angular, you have to learn a lot of things like Typescript-in depth. There are a whole lot of other topics to learn such as directives, modules, decorators, components, services, dependency injection, pipes, and templates. So basically if you want to learn Angular, you have to learn a lot of in-depth concepts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Components and Size&lt;/strong&gt;: Angular runs on a real DOM.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updates and Community Support&lt;/strong&gt;: Angular releases a new version or community update every 6 months. There are 2 major updates per year. Its current version is Angular 12.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4KR0lpgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3iawso71aojql0794d1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4KR0lpgA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3iawso71aojql0794d1.jpeg" alt="and we told them" width="600" height="337"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt; React &lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Learning the Framework&lt;/strong&gt;: React is a library and has fewer concepts to learn in order to learn React. React uses JSX (JavaScript XML) which is a way of coding HTML into Javascript. You just need to learn the JSX syntax. React does the same task but in a different way. Its quicker to learn than Angular.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Components and Size&lt;/strong&gt;: React runs on a Virtual DOM which is more lightweight than a real dom. Its a javascript version of a DOM.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updates and Community Support&lt;/strong&gt;: React's current version is Version 17.0.0. Making updates in React is easier than making updates in Angular since famous companies like AirBNB and Twitter run on react.&lt;/p&gt;

&lt;h1&gt;SO AT THE END OF THE DAYY 😃&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MuyHGPRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a50tobwl990n4x6abgit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MuyHGPRv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a50tobwl990n4x6abgit.png" alt="Table" width="880" height="1058"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks Coders for reading this blog and remember...&lt;/p&gt;

&lt;h2&gt;Keep Coding Y'All 👨🏻‍💻&lt;/h2&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>angular</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>🚀 Executing Github Gist files from Linux Shell via cURL</title>
      <author>Thomas Gotwig</author>
      <pubDate>Sat, 20 Nov 2021 09:54:11 +0000</pubDate>
      <link>https://dev.to/tgotwig/executing-github-gist-files-from-linux-shell-via-curl-10fe</link>
      <guid>https://dev.to/tgotwig/executing-github-gist-files-from-linux-shell-via-curl-10fe</guid>
      <description>&lt;p&gt;We have two different URL options to fetch a Github Gist file via cURL:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;gist.githubusercontent.com&lt;/li&gt;
&lt;li&gt;api.github.com&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The second one is a bit more work, but always instant up-to-date! 🌟&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gistgithubusercontentcom"&gt;
  &lt;/a&gt;
  1️⃣ gist.githubusercontent.com
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-s&lt;/span&gt; https://gist.githubusercontent.com/[user]/[gist_id]/raw/[gist_file]?_&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;uuidgen&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
| bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;🌍 Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But this can run a older version of the file 😖&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apigithubcom"&gt;
  &lt;/a&gt;
  2️⃣ api.github.com
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#fix-limitations-of-apigithubcom"&gt;
  &lt;/a&gt;
  🔧 Fix limitations of api.github.com
&lt;/h3&gt;

&lt;p&gt;Using &lt;code&gt;api.github.com&lt;/code&gt; comes with &lt;a href="https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting"&gt;rate-limiting&lt;/a&gt; per hour:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-I&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; https://api.github.com/users/[user] | &lt;span class="nb"&gt;grep &lt;/span&gt;x-ratelimit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;x-ratelimit-limit: 60
x-ratelimit-remaining: 59
x-ratelimit-reset: 1636928776
x-ratelimit-resource: core
x-ratelimit-used: 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, we can get around this strong limitation by using a &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;PAT&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-I&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt; &amp;lt;user&amp;gt;:&amp;lt;pat&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    https://api.github.com/users/[user] | &lt;span class="nb"&gt;grep &lt;/span&gt;x-ratelimit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;x-ratelimit-limit: 5000
x-ratelimit-remaining: 4999
x-ratelimit-reset: 1636928894
x-ratelimit-used: 1
x-ratelimit-resource: core
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#executing-the-gist-file"&gt;
  &lt;/a&gt;
  🚀 Executing the Gist file!
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt; &amp;lt;user&amp;gt;:&amp;lt;pat&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="s2"&gt;"https://api.github.com/gists/[gist_id]?_=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;uuidgen&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    | jq &lt;span class="nt"&gt;--raw-output&lt;/span&gt; &lt;span class="s1"&gt;'.files."&amp;lt;GIST_FILE&amp;gt;".content'&lt;/span&gt; | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;🌍 Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Until now it was always up-to-date! 😊&lt;/p&gt;

</description>
      <category>bash</category>
      <category>github</category>
      <category>tutorial</category>
      <category>shell</category>
    </item>
  </channel>
</rss>
