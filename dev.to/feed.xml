<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Six Things You Thought Senior Devs Did (But We Don't)</title>
      <author>Jason C. McDonald</author>
      <pubDate>Fri, 21 May 2021 00:19:52 +0000</pubDate>
      <link>https://dev.to/codemouse92/six-things-you-thought-senior-devs-did-but-we-don-t-3k6e</link>
      <guid>https://dev.to/codemouse92/six-things-you-thought-senior-devs-did-but-we-don-t-3k6e</guid>
      <description>&lt;p&gt;If you're a junior or mid-level developer, you may have certain ideas about what constitutes a Senior Developer. There's almost certainly an idealized picture in your mind, and if so, I can safely bet you keep comparing yourself to that fictional ideal.&lt;/p&gt;

&lt;p&gt;But what &lt;em&gt;is&lt;/em&gt; a Senior Developer, really?&lt;/p&gt;

&lt;p&gt;It doesn't help matters that practically every company has its own definition. In general, a Senior Developer is simply someone who has enough experience with software development to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Independently understand a given problem that needs to be solved in their particular knowledge domain,&lt;/li&gt;
&lt;li&gt;Enumerate one or more viable solutions and their merits, and then&lt;/li&gt;
&lt;li&gt;Implement one of the better solutions, likely as a member of a team, using the idiomatic patterns of the language and framework being employed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Seriously. That's it.&lt;/p&gt;

&lt;p&gt;So what about all those other things you've always imagined were true of Senior Developers?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-we-dont-avoid-if-statements"&gt;
  &lt;/a&gt;
  1: We Don't Avoid "If" Statements
&lt;/h1&gt;

&lt;p&gt;A lot of junior developers seem to be under the impression that conditional statements are for sissies and n00bs. Nothing could be further from the truth!&lt;/p&gt;

&lt;p&gt;Often the best solution to a problem is also the simplest. While there are times and situations wherein there's a better solution that a conditional statement or a loop, senior developers still default to the classics. As Donald Knuth famously said...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Premature optimization is the root of all evil.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;The basics are the basics because they work. Don't go looking for a clever alternative solution to an already well-solved problem.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-we-arent-developing-algorithms"&gt;
  &lt;/a&gt;
  2: We Aren't Developing Algorithms
&lt;/h1&gt;

&lt;p&gt;For the most part, it's the propeller heads at the universities who are coming up with better sorting and pathfinding algorithms, and more power to 'em!&lt;/p&gt;

&lt;p&gt;A senior developer knows when to rely on the preexisting work of others who have come before. In other words...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Good programmers know what to write. Great ones know what to rewrite (and reuse).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Don't be afraid to use existing libraries, algorithms, and abstractions.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-we-dont-customize-our-kernels"&gt;
  &lt;/a&gt;
  3: We Don't Customize Our Kernels
&lt;/h1&gt;

&lt;p&gt;Seriously, we don't have time to be mucking about in the internals of our day-to-day operating system. A senior developer prefers to do the minimum necessary work to get a working environment that meets her needs...and then she leaves it alone!&lt;/p&gt;

&lt;p&gt;Most of the time, the only reason a senior developer will be recompiling their kernel is to solve a hardware issue, and even then, it's compiled from an unmodified source. The only real exception is the folks for whom kernel hacking is a hobby...and that has nothing to do with seniority.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Beware yak shaving! If it ain't broke, don't fix it.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-we-dont-have-regex-memorized-either"&gt;
  &lt;/a&gt;
  4: We Don't Have Regex Memorized Either
&lt;/h1&gt;

&lt;p&gt;Your average senior developer is going to have one of her ten thousand browser tabs open to regex101.com too. Regex is infamously esoteric, and we have more important things to remember.&lt;/p&gt;

&lt;p&gt;On a related note, if a typical senior developer is able to get the syntax for the &lt;code&gt;tar&lt;/code&gt; command on Unix right on the first try without checking the docs, he probably has it tattooed on his arm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't be ashamed to read the documentation, even if it's something you've looked up before.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-we-dont-know-all-top-10-hottest-languages"&gt;
  &lt;/a&gt;
  5: We Don't Know All Top 10 Hottest Languages
&lt;/h1&gt;

&lt;p&gt;Pick any random senior developer, and chances are that they know one or two languages very well, and have working proficiency in two or three others. They almost certainly won't have mastered a dozen different languages!&lt;/p&gt;

&lt;p&gt;This is on purpose. A good senior developer is mostly interested in gaining further mastery of their primary languages, frameworks, and knowledge domains. It's impossible to know everything there is to know for any one language!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You don't need to learn everything. When you find a language you love, dig deeper.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-we-dont-feel-like-senior-developers-either"&gt;
  &lt;/a&gt;
  6: We Don't Feel Like Senior Developers Either
&lt;/h1&gt;

&lt;p&gt;No, really. We don't. As soon as you crest one mountain, you discover a dozen higher peaks on the horizon. We &lt;em&gt;also&lt;/em&gt; have imposter syndrome. I've talked to 30-year-veteran software developers who still felt like they were faking it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software development is a life-long adventure. The destination is always changing; the &lt;em&gt;journey&lt;/em&gt; is the interesting part.&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Up and Running with Marko and Vite!</title>
      <author>Austin Gardner</author>
      <pubDate>Fri, 21 May 2021 00:02:57 +0000</pubDate>
      <link>https://dev.to/austingardner/up-and-running-with-marko-and-vite-3m32</link>
      <guid>https://dev.to/austingardner/up-and-running-with-marko-and-vite-3m32</guid>
      <description>&lt;p&gt;In this tutorial I will show you some of the basics of Marko.js and getting it set up with Vite.js!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-marko"&gt;
  &lt;/a&gt;
  Why Marko
&lt;/h2&gt;

&lt;p&gt;Marko.js is a JS framework that is SSR (server-side rendered) by default with an MPA (multi-page app) architecture. &lt;a href="//ebay.com"&gt;eBay&lt;/a&gt; runs on it. It has been around for a few years but has gotten a lot of updates lately, like the new Vite plugin. Additionally new features that are coming soon like a concise syntax and improved performance will make Marko.js a great choice for many JS devs. &lt;/p&gt;

&lt;p&gt;Did I mention even Dan Abramov (of the React core team) said we're on track to go where no JS framework has gone before? &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1YgPzW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336281436685541376/fRSl8uJP_normal.jpg" alt="Dan profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dan_abramov"&gt;@dan_abramov&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I haven’t closely looked at Marko but this 2014 article describes a mechanism that’s ahead of what most mainstream solutions (including React!) do in 2020.&lt;br&gt;&lt;br&gt;We’ve been working to add this to React since 2018 but it’s peculiar how this is almost lost art. &lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/75ENOYUleO"&gt;tech.ebayinc.com/engineering/as…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:32 PM - 31 Mar 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1377343141485764610" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1377343141485764610" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1377343141485764610" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#mpa-ssr-by-default"&gt;
  &lt;/a&gt;
  MPA + SSR -- By Default!
&lt;/h2&gt;

&lt;p&gt;Marko's MPA architecture allows it to run without needing a router like React Router or Vue Router, making things that much simpler for devs. And because it is SSR by default, there is no need to worry about anything like Next.js or Gatsby. &lt;/p&gt;

&lt;p&gt;In this tutorial I will show how this all works. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-vitejs"&gt;
  &lt;/a&gt;
  Why Vite.js
&lt;/h2&gt;

&lt;p&gt;Vite, like Webpack, takes care of your bundling needs, putting all of your HTML, CSS, JS and in our case &lt;code&gt;.marko&lt;/code&gt; files together to serve to the browser.&lt;/p&gt;

&lt;p&gt;Unlike Webpack, Vite is WAY faster and has an extremely minimal configuration. In this case we'll just use the command line and we won't have to worry about any configuration! &lt;/p&gt;

&lt;p&gt;Vite also gives us hot module reloading, so when you save, the page automatically reloads. This is a very nice feature  because you don't have to restart your dev server when you make changes to your code, it just reloads itself for you. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-go"&gt;
  &lt;/a&gt;
  Let's Go!
&lt;/h2&gt;

&lt;p&gt;First, you need NPX installed. If you haven't done that yet, go &lt;a href="https://github.com/nvm-sh/nvm"&gt;here&lt;/a&gt; and follow the instructions to install NVM, which will then allow you to get Node.js and NPX on your device.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/austingardner/marko-vite-blog"&gt;Here&lt;/a&gt; is the repo for the finished code if you don't want to go through the tutorial step-by-step.&lt;/p&gt;

&lt;p&gt;We'll call our app's directory marko-vite. Let's run &lt;code&gt;npx @marko/create marko-vite&lt;/code&gt; in the command line. Then arrow down to &lt;code&gt;Example from marko-js/examples&lt;/code&gt;, hit enter, then arrow to &lt;code&gt;vite-express&lt;/code&gt; and hit enter again. &lt;/p&gt;

&lt;p&gt;A directory named marko-vite will be generated for us. &lt;/p&gt;

&lt;p&gt;Open it up in your code editor, and let's nuke some things. &lt;br&gt;
Delete the components, pages, and services directories.&lt;/p&gt;

&lt;p&gt;Next, make a new pages directory and put a file called index.js into it, with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./template.marko&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marko&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This just tells our server when it comes to this page, to load in our Marko template.&lt;/p&gt;

&lt;p&gt;Next, let's make a basic Marko page! &lt;/p&gt;

&lt;p&gt;Make a new file in the src/pages/ directory and call it &lt;code&gt;template.marko&lt;/code&gt;, and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Marko + Vite&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/goodbye"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Goodbye!&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/counters"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Count!&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;WAIT! Doesn't that look just like HTML? Marko is a superset of HTML, so anything that is HTML can be taken care of by Marko. &lt;/p&gt;

&lt;p&gt;Next, let's make a file named goodbye.js in the src/pages directory and put the following code in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;goodbye&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./goodbye.marko&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marko&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;goodbye&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and another file called goodbye.marko:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Marko + Vite&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;See you later world!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
        Bye Bye!
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    👋
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello Again!&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then let's update the src/index.js file to make sure we have the right routes. We'll worry about the &lt;code&gt;/counters&lt;/code&gt; in a little bit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;indexPage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/index&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;goodbyePage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/goodbye&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;indexPage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/goodbye&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;goodbyePage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#running-the-project"&gt;
  &lt;/a&gt;
  Running the project
&lt;/h2&gt;

&lt;p&gt;Now let's run the project! run &lt;code&gt;npm run dev&lt;/code&gt; and navigate to &lt;code&gt;localhost:3000&lt;/code&gt;. You should see something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dXhqioux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofe9qujunkrjwf408rwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dXhqioux--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofe9qujunkrjwf408rwe.png" alt="Screen Shot 2021-05-20 at 4.03.13 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and then if you navigate to the goodbye link, you should see something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uofSoSkF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t48rkpaysr96sssm0eiz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uofSoSkF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t48rkpaysr96sssm0eiz.png" alt="Screen Shot 2021-05-20 at 4.03.23 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But wait! We haven't added JS to the browser yet! Let's keep rolling!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-components"&gt;
  &lt;/a&gt;
  Adding Components!
&lt;/h2&gt;

&lt;p&gt;let's make a file in &lt;code&gt;src/pages/&lt;/code&gt; called &lt;code&gt;counters.js&lt;/code&gt; and add the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;counters&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./counters.marko&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marko&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then another file in &lt;code&gt;src/pages/&lt;/code&gt; called &lt;code&gt;counters.marko&lt;/code&gt; and add the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Marko + Vite&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Count 'em up!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;counter/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;counter/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;counter/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;counter/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;counter/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Back to home&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Woah! This looks different... where are those counter tags coming from? That's no longer valid HTML! You see, Marko automatically detects Marko components in our &lt;code&gt;src/&lt;/code&gt; directory, and then adds them into their respective places. Pretty nifty!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-counters"&gt;
  &lt;/a&gt;
  Adding Counters
&lt;/h2&gt;

&lt;p&gt;Let's make a new directory under &lt;code&gt;src&lt;/code&gt; called &lt;code&gt;components&lt;/code&gt; and then make the file &lt;code&gt;src/components/counter.marko&lt;/code&gt;. Then let's add the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;class {
    onCreate() {
        this.state = {
            count: 0
        };
    }
    increment() {
        this.state.count++;
    }
}

&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    Count is: &lt;span class="nt"&gt;&amp;lt;output&amp;gt;&lt;/span&gt;${state.count}&lt;span class="nt"&gt;&amp;lt;/output&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on-click&lt;/span&gt;&lt;span class="err"&gt;('&lt;/span&gt;&lt;span class="na"&gt;increment&lt;/span&gt;&lt;span class="err"&gt;')&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Click Here!   
    &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we have a basic counter, which increments based on the on-click handler we added to the button. Marko allows us to combine the JS and the HTML in one page in this way! &lt;/p&gt;

&lt;p&gt;(There are cases where you can or should separate out the JS from the .marko file -&amp;gt; see &lt;a href="https://markojs.com/docs/class-components/"&gt;Marko docs&lt;/a&gt; for more info).&lt;/p&gt;

&lt;p&gt;Now we're almost ready to show off our counters! We just need to add the new &lt;code&gt;&amp;lt;a/&amp;gt;&lt;/code&gt; tag into our &lt;code&gt;template.marko&lt;/code&gt; file and add the routes into our &lt;code&gt;src/index.js&lt;/code&gt; file. &lt;/p&gt;

&lt;p&gt;Now our &lt;code&gt;src/index.js&lt;/code&gt; file will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;indexPage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/index&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;goodbyePage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/goodbye&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;countersPage&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./pages/counters&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;indexPage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/goodbye&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;goodbyePage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/counters&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;countersPage&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and our &lt;code&gt;src/pages/template.marko&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Marko + Vite&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/goodbye"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Goodbye!&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/counters"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Count!&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how on saving the files, Vite re-runs things for us - that is hot module reloading at work. Then from our base page, clicking on the &lt;code&gt;count!&lt;/code&gt; link gives us a lot of buttons to click on! Alright!! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5aXMNKzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qtlovipix0yal3gqq56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5aXMNKzk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9qtlovipix0yal3gqq56.png" alt="Screen Shot 2021-05-20 at 4.15.31 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Here we can see that using Marko with Vite allows us to use some shortcuts compared to React. SSR by default, no router needed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-more-about-the-future-of-marko"&gt;
  &lt;/a&gt;
  Read more about the future of Marko!
&lt;/h2&gt;

&lt;p&gt;See Ryan Carniato's posts &lt;a href="https://dev.to/ryansolid/fluurt-re-inventing-marko-3o1o"&gt;FLUURT overview&lt;/a&gt; for an overview of the future changes to Marko; &lt;a href="https://dev.to/ryansolid/marko-designing-a-ui-language-2hni"&gt;UI language&lt;/a&gt; for more specifics on the conciseness of Marko's future syntax; and Michael Rawling's &lt;a href="https://medium.com/@mlrawlings/maybe-you-dont-need-that-spa-f2c659bc7fec"&gt;Maybe you don't need that SPA&lt;/a&gt; about how Marko's server-native architecture puts Marko on the path to sub-component level hydration, enabling high levels of SSR performance.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>marko</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Shift Left on Security: EXPLAINED Easily</title>
      <author>Davide Benvegnù</author>
      <pubDate>Thu, 20 May 2021 22:37:40 +0000</pubDate>
      <link>https://dev.to/n3wt0n/shift-left-on-security-explained-easily-16e5</link>
      <guid>https://dev.to/n3wt0n/shift-left-on-security-explained-easily-16e5</guid>
      <description>&lt;p&gt;Application Security in DevOps is important, but often underrated. So much so that someone has created the DevSecOps word for it. But what does shift left mean? And how to shift left on security?&lt;/p&gt;

&lt;p&gt;We will see all of these and more today.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation and demo&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/94AIX5oArIw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/94AIX5oArIw"&gt;Link to the video: https://youtu.be/94AIX5oArIw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meaning-of-shift-left"&gt;
  &lt;/a&gt;
  Meaning of "Shift Left"
&lt;/h3&gt;

&lt;p&gt;First, what is the meaning of "shift left".&lt;/p&gt;

&lt;p&gt;Shift left is a &lt;strong&gt;principle&lt;/strong&gt; that focuses on executing a practice, implementing a process, or using a tool &lt;strong&gt;as early as possible&lt;/strong&gt; in the development chain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JwdO08Fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apwql714x4sp91dkfxt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JwdO08Fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apwql714x4sp91dkfxt3.png" alt="SDLC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is called "shift left" because the software development lifecycle is commonly represented as a &lt;strong&gt;straight line with multiple phases&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T3WU8ZI7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eikmp98wgfj0i6ltkfo9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T3WU8ZI7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eikmp98wgfj0i6ltkfo9.png" alt="Security Traditional"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Traditionally, companies apply security just after the deployment, which is on the right side of that flow chart. But the better practice is to do so during development itself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--roP4KaBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovew1gxguiljsr9h2thi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--roP4KaBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovew1gxguiljsr9h2thi.png" alt="Shifted Left"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, since the development phase is on the left of the chart, we "pushed" that arrow to the left... hence shift left.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uc8TSx14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/muv9mn4ug697wxw9o237.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uc8TSx14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/muv9mn4ug697wxw9o237.png" alt="Complete"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also notice that this doesn't mean you will do security just once, &lt;strong&gt;it should be applied all the way&lt;/strong&gt; from day one of development to after having your application in production.&lt;/p&gt;

&lt;p&gt;And we have seen it for security, but &lt;strong&gt;this can and should be applied to other practices&lt;/strong&gt; as well, like for example testing.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-shifting-left-on-security"&gt;
  &lt;/a&gt;
  Benefits of Shifting Left on Security
&lt;/h3&gt;

&lt;p&gt;Moving on... let's talk about the benefits of shifting left on security. There are &lt;strong&gt;several benefits&lt;/strong&gt; that can be obtained by adopting a shift left strategy.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#automation"&gt;
  &lt;/a&gt;
  Automation
&lt;/h4&gt;

&lt;p&gt;First one is a better automation.&lt;/p&gt;

&lt;p&gt;It is in fact &lt;strong&gt;much easier to automate&lt;/strong&gt; security testing and scanning when it runs against the source code, rather than running it on a deployed environment. And there are a lot of tools like SAST, DAST, etc which can help.&lt;/p&gt;

&lt;p&gt;And automation of course also means &lt;strong&gt;fewer human errors&lt;/strong&gt;, increased coverage and ultimately fewer to &lt;strong&gt;no issues in production&lt;/strong&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#time"&gt;
  &lt;/a&gt;
  Time
&lt;/h4&gt;

&lt;p&gt;Another benefit is time... if you apply security for the whole time you are developing and testing, then you have &lt;strong&gt;much more time to discover and fix vulnerabilities&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you do so just before going to production or, even worse, after deployment... well, you don't have much time to fix problems and also you have little time to scan and find vulnerabilities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-my-security-team"&gt;
  &lt;/a&gt;
  What About my Security Team
&lt;/h3&gt;

&lt;p&gt;Let's quickly address the elephant in the room. Every time I talk about this with companies and teams, I always get the same question: &lt;em&gt;what about the security team&lt;/em&gt;? &lt;em&gt;Should we get rid of it&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;The answer of course is "no"!&lt;/p&gt;

&lt;p&gt;While shifting left on security means that security is now a responsibility of the Development team, that doesn't mean it's only on them. &lt;strong&gt;Security teams still play a very important role&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;First of all, all the things like penetration testing, RBAC, etc are still important and &lt;strong&gt;should still be performed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Additionally, the development team should follow &lt;strong&gt;guidelines&lt;/strong&gt;, &lt;strong&gt;best practices&lt;/strong&gt;, and procedures... and who's better in defining them than the security team?&lt;/p&gt;

&lt;p&gt;The big difference here is that, as I've mentioned, &lt;strong&gt;application security is not just responsibility of a security team anymore&lt;/strong&gt;, everyone shares it. So much so that I don't actually like to talk about Dev, Ops, and Sec teams like different teams anymore, they should &lt;strong&gt;work together as a single team&lt;/strong&gt; from the very beginning of the development effort till the end.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-shift-left-on-security"&gt;
  &lt;/a&gt;
  How to Shift Left on Security
&lt;/h3&gt;

&lt;p&gt;Now that we have that out of the way, there is one last thing I wanna briefly talk about: how can a company shift left on security.&lt;/p&gt;

&lt;p&gt;There is &lt;strong&gt;not single way&lt;/strong&gt; of doing so, of course, but there are few &lt;strong&gt;practices that you should implement&lt;/strong&gt; if you wanna do it.&lt;/p&gt;

&lt;p&gt;First of all, add security and vulnerability scanning &lt;strong&gt;as early as possible&lt;/strong&gt; in your development lifecycle. Every time you open a Pull Request, there should be a security scan running for it and it should block the PR if vulnerabilities are present. This way, you stop vulnerable code to reach your main branch. Some tools allow you to scan your code even before committing to your repo, and that would be even better.&lt;/p&gt;

&lt;p&gt;Second, have the &lt;strong&gt;same scanning in your main CI&lt;/strong&gt;, meaning the CI on your main branch, for each push or merge. &lt;/p&gt;

&lt;p&gt;Furthermore, &lt;strong&gt;schedule a scan at a fixed interval&lt;/strong&gt;, perhaps weekly, so you can make sure that your codebase is constantly checked even if you do not commit or merge anything, should new vulnerabilities be discovered in the meantime.&lt;/p&gt;

&lt;p&gt;Additionally, you should &lt;strong&gt;treat any remediation or security work as part of your normal backlog&lt;/strong&gt;, not as extemporary work. I have a &lt;a href="https://youtu.be/_COrbeZMF1k"&gt;video dedicated to this&lt;/a&gt;, so check it out after you finish watching this post.&lt;/p&gt;

&lt;p&gt;Finally, as I've mentioned, have all your &lt;strong&gt;teams working together&lt;/strong&gt;. At the end of the day y'all have the same goal. Developers, Operations and Security should &lt;strong&gt;work together day in day out&lt;/strong&gt;. This is the only way to have truly secured software and environments.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Alright, I think I've covered everything... Don't get me wrong, there is much more to talk about, but at least we have covered the basics.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section below. I would also like to know how you currently do security where you work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/94AIX5oArIw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>security</category>
      <category>devops</category>
      <category>devsecops</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Top 5 DEV Comments of the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 20 May 2021 22:27:37 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-9ak</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-9ak</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It's the &lt;a href="https://dev.to/iamludal/tired-of-relative-imports-time-to-get-rid-of-them-1n48"&gt;little tricks&lt;/a&gt; that make long coding days go by easier. This tip from &lt;a class="mentioned-user" href="https://dev.to/valeriavg"&gt;@valeriavg&lt;/a&gt;
 is exactly the kind of support we're all about here at DEV! &lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/valeriavg"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--z3PT5xl1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--2fSvzvbJ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/473770/aad0a38a-ce60-457f-942d-1699421a16ef.jpeg" alt="valeriavg profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/valeriavg"&gt;
        &lt;span class="comment-username"&gt;Valeria&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/valeriavg/comment/1efeg" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    May 14
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;While this method does work everywhere for TypeScript, it won't work for JavaScript without a bundler (especially NodeJS).&lt;br&gt;
For NodeJS one could use &lt;code&gt;NODE_PATH=./src node index.js&lt;/code&gt; to achieve similar results.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This post on &lt;a href="https://dev.to/daryllukas/you-can-do-more-than-just-console-log-598a"&gt;consol.log()&lt;/a&gt; is a great read. And we've got another fantastic trick in the bag, thanks to &lt;a class="mentioned-user" href="https://dev.to/stephanie"&gt;@stephanie&lt;/a&gt;
 ! &lt;br&gt;
 &lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/stephanie"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--a4i8psM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fdK8Hy7O--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/24921/263e2e35-1535-48c4-9188-1b707657816a.png" alt="stephanie profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/stephanie"&gt;
        &lt;span class="comment-username"&gt;Stephanie Handsteiner&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/stephanie/comment/1ei8a" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    May 18
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;&lt;code&gt;console.trace()&lt;/code&gt; is also nice for debugging, clue is in the name, it outputs the stack trace to console. :) &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Sometimes we all feel like &lt;a href="https://dev.to/91sameer/i-think-there-is-too-much-to-learn-in-programming-16l6"&gt;the world of programming is just too vast&lt;/a&gt;. It can be difficult to pull yourself out of a slump like this, &lt;a class="mentioned-user" href="https://dev.to/91sameer"&gt;@91sameer&lt;/a&gt;
. But fellow developers like &lt;a class="mentioned-user" href="https://dev.to/nicozerpa"&gt;@nicozerpa&lt;/a&gt;
 coming through and offering support, guidance, and perspective can make those hard times just a little better  ❤️&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/nicozerpa"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--peNULOyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--TIMrFjqb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/592165/46614067-4880-40e4-bebd-74c6d7119182.png" alt="nicozerpa profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/nicozerpa"&gt;
        &lt;span class="comment-username"&gt;Nico Zerpa (he/him)&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/nicozerpa/comment/1ef58" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    May 14
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Hi! I have bad and good news (but the good news outweigh the bad news.)&lt;/p&gt;

&lt;p&gt;On the one hand, you're right. There's lots and lots of things to learn. I've started learning my first language (JavaScript) when I was 13, as a hobby. Now, I'm 31 and I'm still learning about the language.&lt;/p&gt;

&lt;p&gt;On the other hand, you don't need to know everything to be a good programmer. I became a professional dev at 18 years old. At that time, I knew far less about JavaScript and other languages than I know now, but that didn't prevent me from get jobs and build amazing things in my career.&lt;/p&gt;

&lt;p&gt;Think of programming languages as tools. The more tools you have, the more things you can do. But you already can do many things with the tools you already have.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I feel it's fair to say that anyone who codes loves a good &lt;a href="https://dev.to/yuvgeek/learn-the-hidden-feature-in-git-stash-k7b"&gt;hidden feature in Git&lt;/a&gt;! Thanks for a great addition to the post, &lt;a class="mentioned-user" href="https://dev.to/lucassperez"&gt;@lucassperez&lt;/a&gt;
 !&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/lucassperez"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBBrBa_Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wSj6Nv-v--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/490879/05e142c0-02ad-4b45-9947-48d41b5ba4b1.jpeg" alt="lucassperez profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/lucassperez"&gt;
        &lt;span class="comment-username"&gt;Lucas Perez&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/lucassperez/comment/1eghe" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    May 16
  &lt;/time&gt;

    • Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      May 16&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Git stash can sometimes be very useful, specially because we can't switch branches with modified files around.&lt;br&gt;
Another way is to simply type &lt;code&gt;git stash&lt;/code&gt;, it will put everything in the stash with a WIP message automatically. Then you can do &lt;code&gt;git stash pop&lt;/code&gt; to pop the last added entry to the stash (:&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;
 

&lt;p&gt;This is the ultimate &lt;a href="https://dev.to/devteam/what-was-your-win-this-week-7cj"&gt;weekly win&lt;/a&gt; in my book, &lt;a class="mentioned-user" href="https://dev.to/jessekphillips"&gt;@jessekphillips&lt;/a&gt;
. 😁&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/jessekphillips"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--k3k1NITw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--p3V4e8If--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/121016/0db96ddc-06d7-4a3c-a9b2-4f5d7d7b5797.png" alt="jessekphillips profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/jessekphillips"&gt;
        &lt;span class="comment-username"&gt;Jesse Phillips&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/jessekphillips/comment/1efj6" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    May 15
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I took two days of vacation. &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ✌&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
    <item>
      <title>Add Animation over your favorite Terminal in GNU/Linux.</title>
      <author>Antony Jr</author>
      <pubDate>Thu, 20 May 2021 20:58:50 +0000</pubDate>
      <link>https://dev.to/antonyjr/add-animation-over-your-favorite-terminal-in-gnu-linux-3g5e</link>
      <guid>https://dev.to/antonyjr/add-animation-over-your-favorite-terminal-in-gnu-linux-3g5e</guid>
      <description>&lt;p&gt;I've always wanted to animate my konsole with an animation over it's title bar. I searched everywhere but I can't find a program for that. That's why I've created spirit. It is a small program written in C++ which overlays a gif over your terminal. &lt;em&gt;This is only available currently for KDE Plasma, Gnome, XFCE, Mate and other major X11 based Desktop Environments for Gnu/Linux&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There are plans to support Windows and Mac in the future. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quick-start"&gt;
  &lt;/a&gt;
  Quick Start
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ wget "https://github.com/antony-jr/spirit/releases/download/v0.1.2/spirit"
 $ chmod +x spirit
 $ ./spirit init # That's it.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you should have a animation over your terminal window. &lt;strong&gt;You should restart your terminal to take full effect.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#terminate-the-application"&gt;
  &lt;/a&gt;
  Terminate the Application
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ ./spirit deinit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will stop spirit, you can just delete the binary if you don't need spirit in your system.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#animation-change-on-error-command"&gt;
  &lt;/a&gt;
  Animation Change on Error Command.
&lt;/h1&gt;

&lt;p&gt;When you execute error command in the terminal the gif will change. This can be used as a visual indicator when compiling code.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  Support
&lt;/h1&gt;

&lt;p&gt;If you think this project is cool then please share the word and give a star at &lt;strong&gt;&lt;a href="https://github.com/antony-jr/spirit"&gt;https://github.com/antony-jr/spirit&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stars in a project gives insight on how many people want this project to continue.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>cpp</category>
      <category>showdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Como crear un bot en discord.py</title>
      <author>Alexander G</author>
      <pubDate>Thu, 20 May 2021 20:57:09 +0000</pubDate>
      <link>https://dev.to/alexanderg/como-crear-un-bot-en-discord-py-4hgc</link>
      <guid>https://dev.to/alexanderg/como-crear-un-bot-en-discord-py-4hgc</guid>
      <description>&lt;p&gt;Hola que tal? hoy les traigo este post de como crear un bot de discord usando discord.py.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cabe destacar que es muy pero muy recomendable saber de python desde antes(&lt;a href="https://www.python.org/"&gt;python&lt;/a&gt; es un lenguaje de programación y usaremos la biblioteca de python discord.py para programar nuestro bot.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#requisitos"&gt;
  &lt;/a&gt;
  Requisitos
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python o Python3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Una cuenta en Discord&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tener permisos administrativos en un server&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#parte-1-discorddevelopers"&gt;
  &lt;/a&gt;
  Parte 1: discord/developers
&lt;/h1&gt;

&lt;p&gt;Lo mejor sera que primero crearnos nuestro bot e invitarlo a nuestro servers que usaremos para probarlo, esto lo haremos siguiendo este link &lt;a href="https://discordapp.com/developers/applications"&gt;Discord para desarrolladores. &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Al entrar en la pagina les pedirá autenticarse con su cuenta de discord, luego de eso deberá aparecer algo así y le dan a "New aplication"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sNCPd9-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0cdaqyn5eygri1liwww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sNCPd9-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0cdaqyn5eygri1liwww.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Al darle a ese boton("New aplication") ponen el nombre de su preferencia, ese es el nombre de su aplicación mas no de su bot luego les aclaro eso, les deberá aparecer algo asi:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_DKSF24X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydfvet1o8a9kwhk4rgqe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_DKSF24X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydfvet1o8a9kwhk4rgqe.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego de darle a "Create" les deberá mostrar el menú de nuestra aplicación, algo así:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uyry-Qss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ew9i23ehteum9zqvvs0a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uyry-Qss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ew9i23ehteum9zqvvs0a.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La pagina inicial no es muy interesante por ahora, lo que realmente estamos buscando es el Token de nuestro bot, el token es como la "llave" o "contraseña" de nuestro bot, eso lo haremos para cargar los comandos y demás, ese "token" lo encontramos en la parte de "bot" en el menú de la izquierda, luego de darle clic veremos algo así:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MVDtZBox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pq9vd3087fnk2k1r4ui.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MVDtZBox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4pq9vd3087fnk2k1r4ui.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego le damos clic a el botón que dice "add bot" y saldara un mensaje y le daremos a "Yes, do it"! y saldrá algo así:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eJvWzyIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kego7nfmt8m8tyhup2he.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJvWzyIF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kego7nfmt8m8tyhup2he.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ahí donde sale el icono de discord, esa es la foto de perfil o avatar de nuestro bot, ahí podemos subir una y ponerle otro perfil a nuestro gusto, también esta una parte de token, 3 textos hablan de token, el primero "Click to Reveal Token", el segundo "Copy" y el ultimo "Regenerate", expliquemos esto brevemente, el primero es para ver el token, el segundo para copiarlo al portapapeles y el tercero es para invalidar el token actual y crear otro. Copiamos el token y seguimos a ir a "OAutho2", en OAutho2 vamos al final de  la pagina y seleccionamos "bot" y veremos algo así:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FiWbvMvw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o478hm52ihngsththtr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FiWbvMvw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o478hm52ihngsththtr2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego seguimos bajamos mas y veremos algo así, que son los permisos del bot, yo siempre selecciono "Administrator" para los permisos asi no tengo que seleccionar todos&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hFR4Zaor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e2792xdpciz62omy4w6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hFR4Zaor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e2792xdpciz62omy4w6g.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y si nos fijamos veremos un link en el medio de los dos cuadros de selección, ese link es el famoso "link de invitación", copiamos el link y lo abrimos en una pestaña seleccionamos el server de nuestra preferencia, y veríamos algo así:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BAiQAqdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spwwbdgutfq9gu9idinc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BAiQAqdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/spwwbdgutfq9gu9idinc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego autorizamos los permisos de "administrador" o los que hayan elegido, comprobamos que no somos un bot y ya estaria listo. Si seguistes todos los pasos bien, tu deberia haberse unido al servidor selecionado, recuerda que tienes que esperar el mensaje que diga:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rou06OnG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilqiydnf7w1aqfmp58g1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rou06OnG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilqiydnf7w1aqfmp58g1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ya tendríamos nuestro bot en el servidor, claro pero no esta activo, podemos comprobarlo, en la hilera de la derecha, sale Desconectado, TestBot y es lógico, nosotros solo hemos creado un bot  y lo hemos metido en nuestro server, pero no tiene ni prefix ni nada y eso lo arreglaremos a continuación.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RsCTAN_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42v2r9286owzq11o3d8v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RsCTAN_G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42v2r9286owzq11o3d8v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;# Parte 2: Intalaciòn de lo que necesitaremos&lt;/p&gt;

&lt;p&gt;Ahora, si no lo tenemos ya, vamos a la pestaña  de bot y copiamos el token, ahora comprobemos que tenemos python&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;y deberia dar como respuesta:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UGpCPbZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt8kykpqwglljqsmpyj2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UGpCPbZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt8kykpqwglljqsmpyj2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O si no tienes python3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGVAlgPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nddqyk9ogrsa48wh8555.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGVAlgPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nddqyk9ogrsa48wh8555.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si no te funciona ninguno de los dos, y te sale algo parecido a esto:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Command 'python' not found
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Significa que no tienes python instalado en tu SO(sistema operativo) y entonces debemos instalarlo. Nos dirijimos a la &lt;a href="https://www.python.org/"&gt;pagina de python&lt;/a&gt; y encontraremos algo asi:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PZFT0Uj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/316bm9g8y3povb4rl7u1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PZFT0Uj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/316bm9g8y3povb4rl7u1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En la navegación(el menú de arriba) encontramos:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ff81NZlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dw9bagv9koxm7wrt42z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ff81NZlp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2dw9bagv9koxm7wrt42z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lo que nos importa es "&lt;strong&gt;Downloads&lt;/strong&gt;" al posicionar el cursos sobre downloads, nos mostrar el paquete a descargar segun nuestro so y abajo de donde dice "Download for Windows" o "Download for Mac OS X" hay un botón, que dice python 3.9.5 o superior dependiendo de cuando veas este post, le das clic ahí y comenzara la descargar ...&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#instalacion-en-windows"&gt;
  &lt;/a&gt;
  Instalacion en Windows
&lt;/h1&gt;

&lt;p&gt;Luego de que se instale el  archivo, vamos a la carpeta que lo contiene y lo abrimos como administrador("ejecutar como administrador") luego de dar nuestra credenciales para ejecutarlo como administrador, nos saldrá algo así:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkLO2fsM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okqwopmycr6hdpqe62ac.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkLO2fsM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okqwopmycr6hdpqe62ac.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;La versión de el python en la captura es algo vieja pero igual deben ser los mismos pasos&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Importante es pinchar en el recuadro de el final que dice "Add Python 3.7 to PATH"&lt;/p&gt;

&lt;p&gt;Luego en la parte superior encontramos dos opciones: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install Now:  que incluye :IDLE, pip and documetation
&lt;/li&gt;
&lt;li&gt;Customize Installation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Con la opción "Add Python 3.7(o superior dependiendo de la fecha) to PATH" previamente pinchada, presionamos "install Now", comienza la instalacion y cuando termine, seleccionamos close en la esquina inferior derecha.&lt;/p&gt;

&lt;p&gt;Luego al irnos al menú debería estar el IDLE y Python  en "agregados recientemente"&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#instalaci%C3%B3n-en-linux"&gt;
  &lt;/a&gt;
  Instalación en Linux
&lt;/h1&gt;

&lt;p&gt;Nos dirigimos a la terminal, en ella escribimos el siguente comando:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install python3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Luego les pedirá confirmación presiona Y + Enter, y comenzara la descarga.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--87R2IKLT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ud7mdi26rnyducb80312.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--87R2IKLT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ud7mdi26rnyducb80312.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yo ya lo tengo por eso me salio ese mensaje&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Proseguimos instalando el IDLE de python:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install idle
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yvfB2h5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rf10pzvqwq6rqiotblj2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yvfB2h5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rf10pzvqwq6rqiotblj2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego desde el menu podemos conseguir el IDLE si lo instalamos bien, al abrirlo desde el menu saldria algo asi:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tx6NlxCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv6q8zx2m4zbg7sblq2r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tx6NlxCt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hv6q8zx2m4zbg7sblq2r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#parte-3-creaci%C3%B3n-del-c%C3%B3digosecci%C3%B3n-1"&gt;
  &lt;/a&gt;
  Parte 3: Creación del código(sección 1)
&lt;/h1&gt;

&lt;p&gt;Nos dirigimos al directorio que queramos, comúnmente el Escritorio  y creamos un carpeta, el nombre no importa, pero la llamaremos "bot", nos abrimos la carpeta y seleccionamos "abrir en terminal" o algo parecido con eso ya deberias tener la terminal dentro de la carpeta, deberia salir toda la direccion algo así: &lt;code&gt;user/Escritorio/bot&lt;/code&gt;, donde user es tu usuario y lo demás es la ubicación donde yo tengo el bot.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#consejos"&gt;
  &lt;/a&gt;
  Consejos
&lt;/h1&gt;

&lt;p&gt;Si no sabes moverte desde consola estos comandos te ayudaran un poco:&lt;/p&gt;

&lt;p&gt;Cuando abras la terminal dándole click a el icono o con algún atajo de teclado, usa el comandos :&lt;br&gt;
&lt;code&gt;ls&lt;/code&gt; o &lt;code&gt;dir&lt;/code&gt; en windows&lt;/p&gt;

&lt;p&gt;Ahí veras una serie de archivos y carpetas que estan en la carpeta personal, si creaste la carpeta en el escritorio deberás hacer esto:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dir
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;si tu pc esta en ingles usa luego de dir:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd Desktop&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;si esta en español:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd Escritorio&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Luego de estar dentro de Escritorio  usa cd mas el nombre de tu carpeta, en mi caso bot&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd bot&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#parte-3-creaci%C3%B3n-del-c%C3%B3digosecci%C3%B3n-2"&gt;
  &lt;/a&gt;
  Parte 3: Creación del código(sección 2)
&lt;/h1&gt;

&lt;p&gt;Instalamos pipenv, es para crear un entorno virtual y estar mas seguros.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install pipenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;eso con python3&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install pipenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;con python &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seguidamente iniciamos el entorno virtual en nuestra carpeta&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pipenv shell
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instalamos la librería discord.py para programar los comandos de nuestro bot&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pipenv install discord.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hechos los anteriores pasos debería crearse un archivo Pipfile que vendría siendo muy parecido en uso a el package.json&lt;/p&gt;

&lt;p&gt;Si nos metemos en el archivo Pipfile, y bajamos un poco deberíamos ver algo así:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

**[packages]
"discord.py" = "*"**

[dev-packages]

[requires]
python_version = "3.9"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Y si vemos en packages dice discord.py.Eso significa que instalamos discord.py correctamente&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#parte-3-creaci%C3%B3n-del-c%C3%B3digosecci%C3%B3n-3"&gt;
  &lt;/a&gt;
  Parte 3 Creación del código(sección 3)
&lt;/h1&gt;

&lt;p&gt;Adentro de nuestra carpeta, bot o como vos la llamaste, tenemos nuestro archivo Pipfile y un archivo Pipfile.lock, ninguno de estos archivos debemos modificar &lt;/p&gt;

&lt;p&gt;Listo con las dependencias creamos una carpeta llamada src, adentro creamos un archivo main.py ese contendrá el código de nuestro bot, ahora toca, echar código.... No importa que editor de código uses, puede ser Atom, SublimeText, Nvim, Vscode, el IDLE  no importa.&lt;/p&gt;

&lt;p&gt;Ahora si no tenias ningún editor de código antes de ver este post, puedes usar el IDLE que instalamos, lo abrimos y vemos en la esquina superior izquierda que dice -entre otras cosas- file le damos clic ahí, luego nos aparecerá otro menú, le damos a "open" y de ahí navegamos a donde este nuestro archivo del bot(el main.py)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5-DYeAQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4jhq09dww0rxun3hhnc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5-DYeAQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4jhq09dww0rxun3hhnc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;# Comencemos con las importaciones&lt;/p&gt;

&lt;p&gt;En la parte superior de nuestro archivo ponemos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import discord #importamos para conectarnos con el bot
from discord.ext import commands #importamos los comandos
import datetime 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ahora declaramos la variable bot, que es la que nos ayudara a conectarnos con el bot.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bot = commands.Bot(command_prefix='_', description="this is a testing bot")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eso lo que dice es que el prefix de nuestro bot es : “  _  “. El prefix es el la forma de llamar a nuestro bot.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cabe decir que, yo he visto varios códigos de bot y también se usa mucho client en vez de bot, aunque eso no importa dado que es solo el nombre de una variable, pero a la hora de trabajar conjunto a otros dev's si que es de suma importancia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahora vamos a crear el primer comando, como sabrás en programación es una buena practica que para iniciar se  haga el famoso "Hola mundo", pues en los bot hay algo parecido que es el "ping" y el bot te devuelve "pong", agreguemosle esa tarea a nuestro bot:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#Ping-pong
@bot.command()
async def ping():
     await ctx.send('pong')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Que hicimos ahi? simple: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1) &lt;a class="mentioned-user" href="https://dev.to/bot"&gt;@bot&lt;/a&gt;
.command(): simplemente nos crea un comando.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2) asyng def ping():  una función, ella es la que se encarga de manejar ese comando, el nombre de la función sera el nombre del comando en este caso "ping" y se le pasa el contexto(ctx).  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3) luego en la siguiente linea està el envió del mensaje.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El código completo hasta ahora seria:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import discord #importamos para conectarnos con el bot
from discord.ext import commands #importamos los comandos
import datetime 

bot = commands.Bot(command_prefix='_', description="this is a testing bot")


#Ping-pong
@bot.command()
async def ping(ctx):
     await ctx.send('pong')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pongamos un estado a nuestro bot, los típicos, viendo, jugando, escuchando y trasmitiendo, eso son todos para que vean:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# `Playing ` status
await bot.change_presence(activity=discord.Game(name="a game"))

# `Streaming ` status
await bot.change_presence(activity=discord.Streaming(name="My Stream", url=my_twitch_url))

# `Listening ` status
await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.listening, name="a song"))

# `Watching ` status
await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="a movie"))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;No le pongas todos, ponle solo uno&lt;br&gt;
 Yo en mi caso, usare viendo como casi todos los bot:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@bot.event
async def on_ready():
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="_help"))
    print('My bot is ready')

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Y ahora la hora de la verdad, hay que poner el token para activar nuestro bot, y lo haremos de la siguiente forma de hacer que nuestro bot se conecte con el código que hemos escrito. Lo primero debemos tener el token en portapapeles, y lo ponemos entre comillas, algo asi:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bot.run('ODI0ODY3NjkyODg0MDYF1n5wH6REonj68UCLK3UT3zWyXz7Y8Pc')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Consejos: no compartan su token, no pongan este codigo en replit, les pueden robar el token, en otro post hablare de variables de entorno(.env)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahora juntemos todo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import discord #importamos para conectarnos con el bot
from discord.ext import commands #importamos los comandos
import datetime 

bot = commands.Bot(command_prefix='_', description="this is a testing bot")


#Ping-pong
@bot.command()
async def ping(ctx):
     await ctx.send('pong')

@bot.event
async def on_ready():
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="_help"))
    print('My bot is ready')

bot.run('ODI0ODY3NjkyODg0MDAwNzc4.YF1n5w.H6REonj68UCLK3UT3zWyXz7Y8Pc')

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#parte-4-probando-el-bot"&gt;
  &lt;/a&gt;
  Parte 4: Probando el bot
&lt;/h1&gt;

&lt;p&gt;Ahora vamos a nuestro server y probemos el bot, con el único comando, _ping:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3KrDeMkU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txxe5bp34ksz8q63xds3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3KrDeMkU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txxe5bp34ksz8q63xds3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#parte-5-helpcommand"&gt;
  &lt;/a&gt;
  Parte 5: help_command
&lt;/h1&gt;

&lt;p&gt;También podemos usar el comando _help pero no es así muy bonito véanlo ustedes mismos: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AhwTzfvB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqj5vvm3r5wa3cb2bzdo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AhwTzfvB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqj5vvm3r5wa3cb2bzdo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para cambiar eso, simplemente ponemos algo a nuestra variable bot:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bot = commands.Bot(command_prefix='_', description="this is a testing bot", help_command=None)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;help_command:None invalida el comando help para que nosotros podamos crear uno libremente, de otra forma daria un error similar a este:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nA2Jgyvf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epsxec1x7z8j0dipl7q2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nA2Jgyvf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epsxec1x7z8j0dipl7q2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nos informa que hay un comando help ya &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bueno luego de poner el código de arriba escribimos nuestro help_command personalizado:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@bot.command()
async  def  help(ctx):
  des = """
  Comandos de TestBot\n

  &amp;gt; ping: El bot te responde pong\n

  &amp;gt; Prefix:  _\n
  Hecho con amor en Python\n

  """
  embed = discord.Embed(title="I'm TestBot",url="https://cdn.discordapp.com/avatars/809827305295314967/babea11271bbf5a89d5bf15220e7c278.webp?size=1024",description= des,
  timestamp=datetime.datetime.utcnow(),
  color=discord.Color.blue())
  embed.set_footer(text="solicitado por: {}".format(ctx.author.name))
  embed.set_author(name="AlexanderG",       
  icon_url="https://cdn.discordapp.com/avatars/809827305295314967/babea11271bbf5a89d5bf15220e7c278.webp?size=1024%22")


  await ctx.send(embed=embed)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Los \n son saltos de linea nada más &lt;br&gt;
 Se vería así nuestro help_command:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0J1Z49lx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h7hdjdbbof535djzmbe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0J1Z49lx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h7hdjdbbof535djzmbe.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#parte-5-conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  Parte 5: Conclusión
&lt;/h1&gt;

&lt;p&gt;Y todo junto seria:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import discord #importamos para conectarnos con el bot
from discord.ext import commands #importamos los comandos
import datetime 

bot = commands.Bot(command_prefix='_', description="this is a testing bot", help_command=None)


#Ping-pong
@bot.command()
async def ping(ctx):
  await ctx.send('pong')



@bot.command()
async  def  help(ctx):
  des = """
  Comandos de TestBot\n

  &amp;gt; ping: El bot te responde pong\n

  &amp;gt; Prefix:  _\n
  Hecho con amor en Python\n

  """
  embed = discord.Embed(title="I'm TestBot",url="https://cdn.discordapp.com/avatars/809827305295314967/babea11271bbf5a89d5bf15220e7c278.webp?size=1024",description= des,
  timestamp=datetime.datetime.utcnow(),
  color=discord.Color.blue())
  embed.set_footer(text="solicitado por: {}".format(ctx.author.name))
  embed.set_author(name="AlexanderG",       
  icon_url="https://cdn.discordapp.com/avatars/809827305295314967/babea11271bbf5a89d5bf15220e7c278.webp?size=1024%22")


  await ctx.send(embed=embed)
@bot.event
async def on_ready():
    await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="_help"))
    print('My bot is ready')

bot.run('ODI0ODY3NjkyODg0MDAwNzc4.YF1n5w.H6REonj68UCLK3UT3zWyXz7Y8Pc')

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Esto es un post introductorio, no insinuó que esto es todo lo que se pueda hacer con los bot porq la verdad hay muchas posibilidades, esto es solo lo básico para comenzar con esta fabuloso y divertido mundo de los bot. Sin nada mas que agregar, Dios mediante seguiré escribiendo, El próximo post seguramente tratara de variables de entorno.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Espero haya sido de su agrado bye :) alguna duda o error por favor déjamelo en los comentarios.&lt;/p&gt;

&lt;p&gt;dedicacion a: &lt;a class="mentioned-user" href="https://dev.to/adeodato"&gt;@adeodato&lt;/a&gt;
 &lt;/p&gt;

</description>
      <category>discord</category>
      <category>discordpy</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>Let's Build An Instagram Clone With The PETAL(Phoenix, Elixir, TailwindCSS, AlpineJS, LiveView) Stack [PART 7]</title>
      <author>Anthony Gonzalez</author>
      <pubDate>Thu, 20 May 2021 20:37:27 +0000</pubDate>
      <link>https://dev.to/elixirprogrammer/let-s-build-an-instagram-clone-with-the-petal-phoenix-elixir-tailwindcss-alpinejs-liveview-stack-part-7-4mde</link>
      <guid>https://dev.to/elixirprogrammer/let-s-build-an-instagram-clone-with-the-petal-phoenix-elixir-tailwindcss-alpinejs-liveview-stack-part-7-4mde</guid>
      <description>&lt;p&gt;In &lt;a href="https://dev.to/elixirprogrammer/let-s-build-an-instagram-clone-with-the-petal-phoenix-elixir-tailwindcss-alpinejs-liveview-stack-part-6-52f1"&gt;part 6&lt;/a&gt; we added the homepage, in this part, we will work on the search functionality in our top header navigation menu. You can catch up with the &lt;a href="https://github.com/elixirprogrammer/InstagramClonePETAL"&gt;Instagram Clone GitHub Repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The search functionality will give the ability to search users by username or full name, we will only need a map with the avatar URL, username, and full name, let's add a function to get that in our accounts context. Inside &lt;code&gt;lib/instagram_clone/accounts.ex&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;
&lt;span class="o"&gt;...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;search_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="no"&gt;User&lt;/span&gt;
    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ilike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="s2"&gt;"%&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;or_where&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ilike&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;full_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="s2"&gt;"%&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:avatar_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:full_name&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Repo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will be handling the event to search inside our header nav component, open &lt;code&gt;lib/instagram_clone_web/templates/layout/live.html.leex&lt;/code&gt;, and let's send an ID to our component to be able to handle the event:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;current_user&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_component&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;InstagramCloneWeb.HeaderNavComponent&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id:&lt;/span&gt; &lt;span class="err"&gt;1,&lt;/span&gt; &lt;span class="na"&gt;current_user:&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;current_user&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;else&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;live_action&lt;/span&gt; &lt;span class="err"&gt;!==&lt;/span&gt; &lt;span class="na"&gt;:root_path&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_component&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;InstagramCloneWeb.HeaderNavComponent&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id:&lt;/span&gt; &lt;span class="err"&gt;1,&lt;/span&gt; &lt;span class="na"&gt;current_user:&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;current_user&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container mx-auto max-w-full md:w-11/12 2xl:w-6/12 pt-24"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert alert-info"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt;
    &lt;span class="na"&gt;phx-click=&lt;/span&gt;&lt;span class="s"&gt;"lv:clear-flash"&lt;/span&gt;
    &lt;span class="na"&gt;phx-value-key=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_flash&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;flash&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:info&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert alert-danger"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt;
    &lt;span class="na"&gt;phx-click=&lt;/span&gt;&lt;span class="s"&gt;"lv:clear-flash"&lt;/span&gt;
    &lt;span class="na"&gt;phx-value-key=&lt;/span&gt;&lt;span class="s"&gt;"error"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_flash&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;flash&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:error&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;inner_content&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &lt;code&gt;lib/instagram_clone_web/live/header_nav_component.html.leex&lt;/code&gt; let's use AlpineJs to open the UL where we are going to display the results when the input has at least one letter, if nothing is inside or click away the input, nothing will be displayed. Let's use the &lt;code&gt;phx-change&lt;/code&gt; form events to run our search, also we will assign to our socket a &lt;code&gt;@overflow_y_scroll_ul&lt;/code&gt; to display the scrollbar when results are greater than 6.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;x-data=&lt;/span&gt;&lt;span class="s"&gt;"{open: false, inputText: null}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-2/5 flex justify-end relative"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"search-users-form"&lt;/span&gt; &lt;span class="na"&gt;phx-change=&lt;/span&gt;&lt;span class="s"&gt;"search_users"&lt;/span&gt; &lt;span class="na"&gt;phx-target=&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;%= @myself %&amp;gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
          &lt;span class="na"&gt;phx-debounce=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt;
          &lt;span class="na"&gt;x-model=&lt;/span&gt;&lt;span class="s"&gt;"inputText"&lt;/span&gt;
          &lt;span class="na"&gt;x-on:input=&lt;/span&gt;&lt;span class="s"&gt;"[(inputText.length != 0) ? open = true : open = false]"&lt;/span&gt;
          &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"q"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt;
          &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt;
          &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-7 bg-gray-50 shadow-sm border-gray-300 focus:ring-gray-300 focus:ring-opacity-50 focus:border-gray-400  px-0.5 rounded-sm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt;
      &lt;span class="na"&gt;x-show=&lt;/span&gt;&lt;span class="s"&gt;"open"&lt;/span&gt;
      &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click.away=&lt;/span&gt;&lt;span class="s"&gt;"open = false"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;%= @overflow_y_scroll_ul %&amp;gt; absolute top-10 -right-24 w-96 shadow-md h-96 bg-gray-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the UL that we will be displaying our search results we will need 3 assigns, &lt;code&gt;@searched_users&lt;/code&gt; that will be the results which we are going to loop through, &lt;code&gt;@while_searching_users?&lt;/code&gt; that will be a boolean to determine when to display a loading indicator in the case that the connection is slow or takes a while, for user interface friendly feedback, &lt;code&gt;@users_not_found?&lt;/code&gt; another boolean to display a no results found message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt;
      &lt;span class="na"&gt;x-show=&lt;/span&gt;&lt;span class="s"&gt;"open"&lt;/span&gt;
      &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click.away=&lt;/span&gt;&lt;span class="s"&gt;"open = false"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;%= @overflow_y_scroll_ul %&amp;gt; absolute top-10 -right-24 w-96 shadow-md h-96 bg-gray-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;-&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;searched_users&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_redirect&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.user_profile_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:index&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;user.username&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center px-4 py-3 hover:bg-gray-100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;img_tag&lt;/span&gt; &lt;span class="na"&gt;Avatar.get_thumb&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;user.avatar_url&lt;/span&gt;&lt;span class="err"&gt;),&lt;/span&gt; &lt;span class="na"&gt;class:&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;w-10&lt;/span&gt; &lt;span class="na"&gt;h-10&lt;/span&gt; &lt;span class="na"&gt;rounded-full&lt;/span&gt; &lt;span class="na"&gt;object-cover&lt;/span&gt; &lt;span class="na"&gt;object-center&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ml-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"truncate font-bold text-sm text-gray-500"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;user.username&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"truncate text-sm text-gray-500"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;user.full_name&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;while_searching_users&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-center items-center h-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animate-spin -ml-1 mr-3 h-5 w-5 text-gray-300"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;circle&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"opacity-25"&lt;/span&gt; &lt;span class="na"&gt;cx=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;cy=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;r=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/circle&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"opacity-75"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;users_not_found&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-sm text-gray-400 flex justify-center items-center h-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;No results found.&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our updated &lt;code&gt;lib/instagram_clone_web/live/header_nav_component.html.leex&lt;/code&gt; should look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-14 border-b-2 flex fixed w-full bg-white z-40"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center container mx-auto max-w-full md:w-11/12 2xl:w-6/12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_redirect&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.page_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:index&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-2xl font-bold italic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;#InstagramClone&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;x-data=&lt;/span&gt;&lt;span class="s"&gt;"{open: false, inputText: null}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-2/5 flex justify-end relative"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"search-users-form"&lt;/span&gt; &lt;span class="na"&gt;phx-change=&lt;/span&gt;&lt;span class="s"&gt;"search_users"&lt;/span&gt; &lt;span class="na"&gt;phx-target=&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;%= @myself %&amp;gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
          &lt;span class="na"&gt;phx-debounce=&lt;/span&gt;&lt;span class="s"&gt;"800"&lt;/span&gt;
          &lt;span class="na"&gt;x-model=&lt;/span&gt;&lt;span class="s"&gt;"inputText"&lt;/span&gt;
          &lt;span class="na"&gt;x-on:input=&lt;/span&gt;&lt;span class="s"&gt;"[(inputText.length != 0) ? open = true : open = false]"&lt;/span&gt;
          &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"q"&lt;/span&gt;
          &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt;
          &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt;
          &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-7 bg-gray-50 shadow-sm border-gray-300 focus:ring-gray-300 focus:ring-opacity-50 focus:border-gray-400  px-0.5 rounded-sm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt;
      &lt;span class="na"&gt;x-show=&lt;/span&gt;&lt;span class="s"&gt;"open"&lt;/span&gt;
      &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click.away=&lt;/span&gt;&lt;span class="s"&gt;"open = false"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;%= @overflow_y_scroll_ul %&amp;gt; absolute top-10 -right-24 w-96 shadow-md h-96 bg-gray-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;for&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="na"&gt;-&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;searched_users&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_redirect&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.user_profile_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:index&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;user.username&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex items-center px-4 py-3 hover:bg-gray-100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;img_tag&lt;/span&gt; &lt;span class="na"&gt;Avatar.get_thumb&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;user.avatar_url&lt;/span&gt;&lt;span class="err"&gt;),&lt;/span&gt; &lt;span class="na"&gt;class:&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;w-10&lt;/span&gt; &lt;span class="na"&gt;h-10&lt;/span&gt; &lt;span class="na"&gt;rounded-full&lt;/span&gt; &lt;span class="na"&gt;object-cover&lt;/span&gt; &lt;span class="na"&gt;object-center&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ml-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"truncate font-bold text-sm text-gray-500"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;user.username&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"truncate text-sm text-gray-500"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;user.full_name&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;while_searching_users&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-center items-center h-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"animate-spin -ml-1 mr-3 h-5 w-5 text-gray-300"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;circle&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"opacity-25"&lt;/span&gt; &lt;span class="na"&gt;cx=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;cy=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;r=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/circle&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"opacity-75"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;users_not_found&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-sm text-gray-400 flex justify-center items-center h-full"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;No results found.&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-3/5 relative"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;x-data=&lt;/span&gt;&lt;span class="s"&gt;"{open: false}"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex justify-end"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;if&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;current_user&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-7 h-7 text-gray-600"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_redirect&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.page_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:index&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-7 h-7 ml-6 text-gray-600"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_redirect&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.live_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;InstagramCloneWeb.PostLive.New&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-7 h-7 ml-6 text-gray-600"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-7 h-7 ml-6 text-gray-600"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-7 h-7 ml-6 text-gray-600"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt;
            &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"open = true"&lt;/span&gt;
            &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-7 h-7 ml-6 shadow-md rounded-full overflow-hidden cursor-pointer"&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;img_tag&lt;/span&gt; &lt;span class="na"&gt;InstagramClone.Uploaders.Avatar.get_thumb&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;current_user.avatar_url&lt;/span&gt;&lt;span class="err"&gt;),&lt;/span&gt;
            &lt;span class="na"&gt;class:&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;w-full&lt;/span&gt; &lt;span class="na"&gt;h-full&lt;/span&gt; &lt;span class="na"&gt;object-cover&lt;/span&gt; &lt;span class="na"&gt;object-center&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute top-14 w-56 bg-white shadow-md text-sm -right-8"&lt;/span&gt;
              &lt;span class="na"&gt;x-show=&lt;/span&gt;&lt;span class="s"&gt;"open"&lt;/span&gt;
              &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click.away=&lt;/span&gt;&lt;span class="s"&gt;"open = false"&lt;/span&gt;
              &lt;span class="na"&gt;x-transition:enter=&lt;/span&gt;&lt;span class="s"&gt;"transition ease-out duration-200"&lt;/span&gt;
              &lt;span class="na"&gt;x-transition:enter-start=&lt;/span&gt;&lt;span class="s"&gt;"opacity-0 transform scale-90"&lt;/span&gt;
              &lt;span class="na"&gt;x-transition:enter-end=&lt;/span&gt;&lt;span class="s"&gt;"opacity-100 transform scale-100"&lt;/span&gt;
              &lt;span class="na"&gt;x-transition:leave=&lt;/span&gt;&lt;span class="s"&gt;"transition ease-in duration-200"&lt;/span&gt;
              &lt;span class="na"&gt;x-transition:leave-start=&lt;/span&gt;&lt;span class="s"&gt;"opacity-100 transform scale-100"&lt;/span&gt;
              &lt;span class="na"&gt;x-transition:leave-end=&lt;/span&gt;&lt;span class="s"&gt;"opacity-0 transform scale-90"&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_redirect&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.user_profile_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:index&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;current_user.username&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-2 px-4 hover:bg-gray-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Profile&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-2 px-4 hover:bg-gray-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Saved&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;live_redirect&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.live_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;InstagramCloneWeb.UserLive.Settings&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"py-2 px-4 hover:bg-gray-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Settings&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.user_session_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:delete&lt;/span&gt;&lt;span class="err"&gt;),&lt;/span&gt; &lt;span class="na"&gt;method:&lt;/span&gt; &lt;span class="na"&gt;:delete&lt;/span&gt; &lt;span class="na"&gt;do&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"border-t-2 py-2 px-4 hover:bg-gray-50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Log Out&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;else&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;Log&lt;/span&gt; &lt;span class="na"&gt;In&lt;/span&gt;&lt;span class="err"&gt;",&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.user_session_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:new&lt;/span&gt;&lt;span class="err"&gt;),&lt;/span&gt; &lt;span class="na"&gt;class:&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;w-24&lt;/span&gt; &lt;span class="na"&gt;py-1&lt;/span&gt; &lt;span class="na"&gt;px-3&lt;/span&gt; &lt;span class="na"&gt;border-none&lt;/span&gt; &lt;span class="na"&gt;shadow&lt;/span&gt; &lt;span class="na"&gt;rounded&lt;/span&gt; &lt;span class="na"&gt;text-gray-50&lt;/span&gt; &lt;span class="na"&gt;hover:bg-light-blue-600&lt;/span&gt; &lt;span class="na"&gt;bg-light-blue-500&lt;/span&gt; &lt;span class="na"&gt;font-semibold&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%=&lt;/span&gt; &lt;span class="na"&gt;link&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;Sign&lt;/span&gt; &lt;span class="na"&gt;Up&lt;/span&gt;&lt;span class="err"&gt;",&lt;/span&gt; &lt;span class="na"&gt;to:&lt;/span&gt; &lt;span class="na"&gt;Routes.user_registration_path&lt;/span&gt;&lt;span class="err"&gt;(@&lt;/span&gt;&lt;span class="na"&gt;socket&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt; &lt;span class="na"&gt;:new&lt;/span&gt;&lt;span class="err"&gt;),&lt;/span&gt; &lt;span class="na"&gt;class:&lt;/span&gt; &lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="na"&gt;w-24&lt;/span&gt; &lt;span class="na"&gt;py-1&lt;/span&gt; &lt;span class="na"&gt;px-3&lt;/span&gt; &lt;span class="na"&gt;border-none&lt;/span&gt; &lt;span class="na"&gt;text-light-blue-500&lt;/span&gt; &lt;span class="na"&gt;hover:text-light-blue-600&lt;/span&gt; &lt;span class="na"&gt;font-semibold&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt; &lt;span class="na"&gt;end&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &lt;code&gt;lib/instagram_clone_web/live/header_nav_component.ex&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;&lt;span class="k"&gt;defmodule&lt;/span&gt; &lt;span class="no"&gt;InstagramCloneWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;HeaderNavComponent&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="no"&gt;InstagramCloneWeb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:live_component&lt;/span&gt;

  &lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="no"&gt;InstagramClone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Uploaders&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Avatar&lt;/span&gt;

  &lt;span class="nv"&gt;@impl&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:ok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;socket&lt;/span&gt;
      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;while_searching_users?:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;users_not_found?:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;overflow_y_scroll_ul:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;searched_users:&lt;/span&gt; &lt;span class="p"&gt;[])}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="nv"&gt;@impl&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;handle_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"search_users"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="s2"&gt;"q"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:noreply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;self&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;__MODULE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:search_users_event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:noreply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;socket&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;users_not_found?:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;searched_users:&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;overflow_y_scroll_ul:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;while_searching_users?:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our handle event function, first, we are checking if our param is an empty string, nothing will happen. When the param is not empty first we will send a message with the search param to run the search in our parent LiveView, that way we can display the loading indicator while searching, we have to reset our assigns every time that the form is changed and make &lt;code&gt;while_searching_users?&lt;/code&gt; boolean true to display the loading indicator while searching.&lt;/p&gt;

&lt;p&gt;We have to send the message because if we try to do it in our header nav component socket, the assigns happen at the same time first, so if we do that we will not be able to display the loading indicator while searching, and inside a component, we cannot &lt;code&gt;handle_info&lt;/code&gt; messages it has to be sent to the parent and update the assigns in our parent back to the component. &lt;/p&gt;

&lt;p&gt;The header navigation component is used on every page, so instead of handling the message on each LiveView, let's just do it once for every LiveView, inside &lt;code&gt;lib/instagram_clone_web.ex&lt;/code&gt; on line 45, inside the &lt;code&gt;live_view()&lt;/code&gt; function, add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight elixir"&gt;&lt;code&gt;
&lt;span class="o"&gt;...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;live_view&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="kn"&gt;quote&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="no"&gt;Phoenix&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;LiveView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;layout:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="no"&gt;InstagramCloneWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;LayoutView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"live.html"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kn"&gt;unquote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;view_helpers&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="no"&gt;InstagramCloneWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;LiveHelpers&lt;/span&gt;

      &lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="no"&gt;InstagramClone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Accounts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;User&lt;/span&gt;
      &lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="no"&gt;InstagramClone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;Accounts&lt;/span&gt;

      &lt;span class="nv"&gt;@impl&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;handle_info&lt;/span&gt;&lt;span class="p"&gt;(%{&lt;/span&gt;&lt;span class="ss"&gt;event:&lt;/span&gt; &lt;span class="s2"&gt;"logout_user"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;payload:&lt;/span&gt; &lt;span class="p"&gt;%{&lt;/span&gt;&lt;span class="ss"&gt;user:&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id:&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}}},&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt;&lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;id:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assigns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_user&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:noreply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;socket&lt;/span&gt;
            &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;to:&lt;/span&gt; &lt;span class="s2"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;|&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;put_flash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:info&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Logged out successfully."&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="n"&gt;_any&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:noreply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="nv"&gt;@impl&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;handle_info&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="no"&gt;InstagramCloneWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;HeaderNavComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:search_users_event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="no"&gt;Accounts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
          &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;send_update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;InstagramCloneWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;HeaderNavComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;id:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;searched_users:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
              &lt;span class="ss"&gt;users_not_found?:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;while_searching_users?:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:noreply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

          &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;send_update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;InstagramCloneWeb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="no"&gt;HeaderNavComponent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;id:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;searched_users:&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;users_not_found?:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;while_searching_users?:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="ss"&gt;overflow_y_scroll_ul:&lt;/span&gt; &lt;span class="n"&gt;check_search_result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;:noreply&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;defp&lt;/span&gt; &lt;span class="n"&gt;check_search_result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"overflow-y-scroll"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="o"&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a case with the function that we added in our accounts context, we &lt;a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html#send_update/3"&gt;&lt;code&gt;send_update/3&lt;/code&gt;&lt;/a&gt; to our header nav component, setting &lt;code&gt;while_searching_users?&lt;/code&gt;  to false on each case to not display the loading indicator because the search is done.&lt;/p&gt;

&lt;p&gt;That's it, now you have a fully functional search input, a lot to be done, a lot of features that can be added, but we have come a long way, and we have a big app that we can be proud of, until next time.&lt;/p&gt;

&lt;p&gt;I really appreciate your time, thank you so much for reading.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checkout-the-instagram-clone-github-repo"&gt;
  &lt;/a&gt;
  CHECKOUT THE &lt;a href="https://github.com/elixirprogrammer/InstagramClonePETAL"&gt;INSTAGRAM CLONE GITHUB REPO&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt; &lt;br&gt;
 &lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;a href="https://elixirprogrammer.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTpLgSX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cv2q172ztuekdtw82vo9.png" alt="Join The Elixir Army"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elixir</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Explain Middleware like I'm five</title>
      <author>Peter Kim Frank</author>
      <pubDate>Thu, 20 May 2021 20:30:22 +0000</pubDate>
      <link>https://dev.to/peter/explain-middleware-like-i-m-five-4ekn</link>
      <guid>https://dev.to/peter/explain-middleware-like-i-m-five-4ekn</guid>
      <description>&lt;p&gt;Cover image courtesy of &lt;a href="https://unsplash.com/@willfrancis"&gt;Will Francis&lt;/a&gt; &lt;a href="https://unsplash.com/photos/Rm3nWQiDTzg"&gt;via Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>explainlikeimfive</category>
    </item>
    <item>
      <title>Web Components 101: What are Web Components?</title>
      <author>Stefan Nieuwenhuis</author>
      <pubDate>Thu, 20 May 2021 20:10:36 +0000</pubDate>
      <link>https://dev.to/stefannieuwenhuis/web-components-101-what-are-web-components-3fdi</link>
      <guid>https://dev.to/stefannieuwenhuis/web-components-101-what-are-web-components-3fdi</guid>
      <description>&lt;p&gt;Welcome to the Web Components 101 Series! We're going to discuss the state of Web Components, provide expert advice, give tips and tricks and reveal the inner workings of Web Components.&lt;/p&gt;

&lt;p&gt;Today, more than 10% of all page loads in Google Chrome are pages that contain Web Components! Big tech companies like Apple, Google and Facebook are also investigating ways of using Web Components in their applications and JavaScript Frameworks (e.g. Angular and React). Quite impressive for a technology officially introduced in 2011 and standardized only recently.&lt;/p&gt;

&lt;p&gt;Web Components are getting more popular everyday, that's why this is the perfect moment to start learning about this awesome technology!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#posts-in-the-web-components-101-series"&gt;
  &lt;/a&gt;
  Posts in the Web Components 101 series
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What are Web Components? (&lt;em&gt;this post&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Why do you need Web Components? (&lt;em&gt;coming soon&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-web-components"&gt;
  &lt;/a&gt;
  What are Web Components?
&lt;/h2&gt;

&lt;p&gt;Web Components are full HTML elements with custom templates, APIs and Tag Names. They allow you to create new HTML tags, extend existing HTML tags or extend the components from other developers. They can be used in any web application, are compatible with (or without) any JavaScript library or framework (e.g. React, Angular, Vue.js, Next.js) and will work with &lt;a href="#web-components-and-browser-support"&gt;all modern browsers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Its foundation is its API, which brings a Web Standards-based way to create reusable components using nothing more than vanilla JavaScript, HTML and CSS.&lt;/p&gt;

&lt;p&gt;The four Standards used are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Custom Elements.&lt;/li&gt;
&lt;li&gt;HTML Templates.&lt;/li&gt;
&lt;li&gt;Shadow DOM.&lt;/li&gt;
&lt;li&gt;ES Modules.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's have a more detailed look at these Web Standards.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-custom-elements"&gt;
  &lt;/a&gt;
  1. Custom Elements
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements" rel="noopener noreferrer"&gt;Custom Elements&lt;/a&gt; is a set of APIs that allows you to create new HTML tags. With this API, we can instruct the parser how to properly create an element and how it reacts to changes.&lt;/p&gt;

&lt;p&gt;There are two types of custom elements:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;An &lt;strong&gt;autonomous custom element&lt;/strong&gt;, which can be used to create completely new HTML elements.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;customized built-in element&lt;/strong&gt;, which can be used to &lt;em&gt;extend&lt;/em&gt; existing HTML elements or other Web Components.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, the Custom Elements API is very useful for creating new HTML elements, but for extending existing or other Web Components as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-html-templates"&gt;
  &lt;/a&gt;
  2. HTML Templates
&lt;/h3&gt;

&lt;p&gt;With HTML templates, we can create reusable code fragments inside a normal HTML flow that aren't rendered immediately. They can be cloned and inserted in the document during runtime with JavaScript and scripts, and resources inside will not be fetched or executed until the template is stamped out. It also doesn't matter how many times a template is used, since it's cloned in the browser and only parsed once; A great performance boost!&lt;/p&gt;

&lt;p&gt;A HTML Template syntax looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Web Components 101&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;HTML Templates are awesome!&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the page renders, a template is empty. The contents are stored in a &lt;code&gt;DocumentFragment&lt;/code&gt; without browsing context. This is done to prevent it from interfering with the rest of the application, meaning that it only renders when requested; Another performance boost!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-shadow-dom"&gt;
  &lt;/a&gt;
  3. Shadow DOM
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6KIKvEBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nhswd.com/static/83a8d9e62441891887f045a1bd36958f/21b4d/shadow-dom-logo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6KIKvEBI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nhswd.com/static/83a8d9e62441891887f045a1bd36958f/21b4d/shadow-dom-logo.png" alt="The Shadow DOM Logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Shadow DOM API allows web browsers to isolate DOM fragments (including all HTML and CSS) from the main documents DOM tree. Its inner working are almost similar to that of an &lt;code&gt;&amp;lt;iframe/&amp;gt;&lt;/code&gt; where the content is isolated from the rest of the document, with the main difference that we still have full control over it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#what-is-the-dom"&gt;
  &lt;/a&gt;
  What is the DOM?
&lt;/h4&gt;

&lt;p&gt;With HTML, we're able to easily create pages that have both presentation and structure. It's very easy for us humans to understand, but computers need a bit more help: Enter the &lt;strong&gt;D&lt;/strong&gt;ocument &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;M&lt;/strong&gt;odel, or DOM.&lt;/p&gt;

&lt;p&gt;When the browser loads a web page, it translates the author's HTML into a data model, which is stored in a tree of nodes. This tree is called the DOM and is a live representation of the page. It has properties, methods and the best part is that it can be manipulated by...JavaScript!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Shadow DOM shields it contents from its surrounding environment (a process called encapsulation), which prevents CSS and JavaScript code from leaking from and to a custom element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#es-modules"&gt;
  &lt;/a&gt;
  ES Modules
&lt;/h3&gt;

&lt;p&gt;Before ES Modules, JavaScript did not have a module system like other programming languages. Developers resorted to using &lt;code&gt;&amp;lt;script/&amp;gt;&lt;/code&gt; tags to load JavaScript files into their applications and later on, several module definitions started (e.g CommonJS, AMD &amp;amp; UMD) to appear but none matured to a standard. This changed with the introduction of ES Modules and we finally have a standard module system.&lt;/p&gt;

&lt;p&gt;The ES Modules API brings a standardized module system to JavaScript, which provides a way of bundling a collection of features into a library that can be reused in other JavaScript files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-components-and-browser-support"&gt;
  &lt;/a&gt;
  Web Components and Browser Support
&lt;/h2&gt;

&lt;p&gt;Which browsers support Web Components? Currently, all Evergreen browsers (Chrome, Firefox and Edge) offer full support for Web Components. That means, all APIs (i.e. Custom Elements, HTML Templates, Shadow DOM and ES Modules) are fully supported!&lt;/p&gt;

&lt;p&gt;This screenshot from &lt;a href="https://webcomponents.org" rel="noopener noreferrer"&gt;WebComponents.org&lt;/a&gt; shows the current browser support for Web Components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gM50Z9N5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nhswd.com/static/5fd802be3de1a8e7c6e5fb48640330a2/71c1d/which-browsers-support-web-components.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gM50Z9N5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://nhswd.com/static/5fd802be3de1a8e7c6e5fb48640330a2/71c1d/which-browsers-support-web-components.png" alt="Which browsers support Web Components?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The exceptions are Internet Explorer 11, and Safari. &lt;a href="https://techcommunity.microsoft.com/t5/microsoft-365-blog/microsoft-365-apps-say-farewell-to-internet-explorer-11-and/ba-p/1591666" rel="noopener noreferrer"&gt;Microsoft stops supporting IE11&lt;/a&gt; on August 17, 2021, and in the meantime, &lt;a href="https://github.com/WebComponents/webcomponentsjs" rel="noopener noreferrer"&gt;polyfills&lt;/a&gt; are available to simulate the missing browser capabilities as closely as possible. Unfortunately, Safari is falling behind as well and doesn't support Web Components, nor does Apple plan to fully support it in the future. Polyfills must be used for this browser as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-about-web-components"&gt;
  &lt;/a&gt;
  Closing thoughts about Web Components
&lt;/h2&gt;

&lt;p&gt;Modern Web Development becomes more complex everyday, and, now that the Web Platform and its standards are maturing, it makes more sense to use them more intensively. Web Components are the perfect example, based on 4 web-standard based APIs (Custom Elements, HTML Templates, Shadow DOM, and ES Modules).&lt;/p&gt;

&lt;p&gt;It's ever increasing popularity proofs that Web Components are here to stay and that now is the perfect time to start learning about this amazing technology!&lt;/p&gt;

&lt;p&gt;In the second post of the series, we're gonna discuss why Web Components are so amazing and why you want to use them.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webcomponents</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>The Top 5 Reasons I Switched to Vim</title>
      <author>Harvey</author>
      <pubDate>Thu, 20 May 2021 20:00:49 +0000</pubDate>
      <link>https://dev.to/harvey/the-top-5-reasons-i-switched-to-vim-3noo</link>
      <guid>https://dev.to/harvey/the-top-5-reasons-i-switched-to-vim-3noo</guid>
      <description>&lt;p&gt;I’ve been a happy Vim user for a very long time. I’ve used it at work, in university. I'm glad I did. In this post, I'll list the top five reasons why I've become an avid vim user.&lt;/p&gt;

&lt;p&gt;Before that, I used some regular editors like &lt;a href="https://www.nano-editor.org/"&gt;nano&lt;/a&gt; and &lt;a href="https://midnight-commander.org/"&gt;mc&lt;/a&gt;.  When I found that many people were using vim, I decided to give it a try.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-vim-is-everywhere-earthamericas"&gt;
  &lt;/a&gt;
  1: Vim is everywhere 🌎
&lt;/h3&gt;

&lt;p&gt;I can instantly switch between all my operating systems (OSX, Linux and Windows) without having to change anything. Even when logging in over an SSH connection to remote computers.&lt;/p&gt;

&lt;p&gt;It's what I use for everything. I edited almost all of my code with it, config files and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-vim-has-been-around-for-a-long-time-floppydisk"&gt;
  &lt;/a&gt;
  2: Vim has been around for a long time 💾
&lt;/h3&gt;

&lt;p&gt;Some editors come and go. It's good to have one workflow that you can stick with over the years, without having to learn new shortcuts every time the latest shiny IDE comes out.&lt;/p&gt;

&lt;p&gt;If you are new to vim, I suggest &lt;a href="https://vim.is"&gt;these exercises&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-vim-is-fast-fastforward"&gt;
  &lt;/a&gt;
  3: Vim is fast ⏩
&lt;/h3&gt;

&lt;p&gt;One of the things that annoys me is slow IDE's. You start the IDE and you can grab a coffee. Vim on the other hand, start immediately. And if you must use a slow IDE, a vim plugin is always available.&lt;/p&gt;

&lt;p&gt;Over the years I've used various IDEs for work, and one thing that annoyed me was the daily start up speed in Eclipse, Netbeans and others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-record-and-replay-keystrokes"&gt;
  &lt;/a&gt;
  4: Record and replay keystrokes
&lt;/h3&gt;

&lt;p&gt;This is such a time save. Vim lets you record your keystrokes using &lt;code&gt;qh&lt;/code&gt;. Stop recording with &lt;code&gt;q&lt;/code&gt; and replay with &lt;code&gt;@h&lt;/code&gt;. If you ever need to edit 100 lines at once, this saves so much time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qschRMa9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gc5sun7cyvp3pu0woj7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qschRMa9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gc5sun7cyvp3pu0woj7.gif" alt="keyboard macro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-simple-interface"&gt;
  &lt;/a&gt;
  5: Simple interface
&lt;/h3&gt;

&lt;p&gt;Looking for some overly feature-filled program with an intimidating interface? Me neither. Vim always has the same keystrokes and gets out of your way once you learn it.&lt;/p&gt;

&lt;p&gt;The awesome thing is that vim is everywhere if you want, even in your web browser (&lt;a href="https://vimium.github.io/"&gt;Vimium&lt;/a&gt;), the terminal, the GUI (gvim) and inside IDEs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_49cGR5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4gtpzl55c1hajggwp1n.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_49cGR5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4gtpzl55c1hajggwp1n.gif" alt="linux penguin"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>programming</category>
      <category>vim</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Contributing to back-end codebase as a front-end for first time.</title>
      <author>Eulier Gonzalez</author>
      <pubDate>Thu, 20 May 2021 19:13:22 +0000</pubDate>
      <link>https://dev.to/eulier/contributing-to-back-end-codebase-as-a-front-end-for-first-time-3i27</link>
      <guid>https://dev.to/eulier/contributing-to-back-end-codebase-as-a-front-end-for-first-time-3i27</guid>
      <description>&lt;p&gt;I’ve 4 years of experience working with client-side code (HTML, CSS, JS and Node.js). Thanks to &lt;a href="https://zerotomastery.io/"&gt;Zero To Mastery&lt;/a&gt; i could deep dive in the some major computer science concepts through &lt;a href="https://www.udemy.com/course/master-the-coding-interview-data-structures-algorithms/"&gt;Data Structure and Algorithm Course on Udemy&lt;/a&gt;, &lt;a href="https://www.udemy.com/course/advanced-javascript-concepts/"&gt;JS Advanced Concepts&lt;/a&gt; and improve my journey as a Software Developer by following the &lt;a href="https://www.udemy.com/course/the-complete-junior-to-senior-web-developer-roadmap"&gt;Junior to Senior Web Development 2021&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It took me (as a non-native english speaker) from april 2020 to feb 2021 to improve myself, daily on it, and eventually i got hired by a startup.&lt;/p&gt;

&lt;p&gt;So, after a month of bootstrap the roadmap in which I made some proof of concepts about chat &amp;amp; authentication systems for Node.js and Django respectively, we finally now gonna build this app.&lt;/p&gt;

&lt;p&gt;There is a backend developer that sets up the basis.&lt;br&gt;
So I want to be effective on learning/understanding the concepts so i can give value to the codebase as soon as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#approach"&gt;
  &lt;/a&gt;
  Approach
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Investigate/Read through each package at the package.json&lt;/li&gt;
&lt;li&gt;Learn the “why” and “how” it works&lt;/li&gt;
&lt;li&gt;Listen concepts’s pronunciation and verbalize out loud&lt;/li&gt;
&lt;li&gt;Apply those concepts by following the conventions and good practices to our needs (tasks)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let see how it works.&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>node</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>File sharing web app made using React.Js</title>
      <author>Ayaan Farooqui</author>
      <pubDate>Thu, 20 May 2021 19:10:56 +0000</pubDate>
      <link>https://dev.to/thecoderelite/file-sharing-web-app-made-using-react-js-322p</link>
      <guid>https://dev.to/thecoderelite/file-sharing-web-app-made-using-react-js-322p</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Etso3c4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1z7iuiqaqa94cd53q00q.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Etso3c4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1z7iuiqaqa94cd53q00q.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;This is a file-sharing web app I have made using react.js and firebase!&lt;/h1&gt;

&lt;p&gt;Checkout the web app and the code:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://swift-share.web.app/"&gt;Link to web app (swift-share.web.app)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/thecoder-elite/SwiftShare"&gt;Link to GitHub repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using this web app the user can share any type of file with anyone using the internet.&lt;/p&gt;

&lt;p&gt;when the user uploads a file a QR code and a text code is generated along with a shareable URL any of which can be shared and used to download the files by the other user/s.&lt;/p&gt;

&lt;p&gt;Please leave your feedback below in the comments. I would love to hear your thoughts on this❤️.&lt;/p&gt;

</description>
      <category>react</category>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
