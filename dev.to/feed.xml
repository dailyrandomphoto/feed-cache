<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10+ Best React Material-UI Admin Template</title>
      <author>Rakesh S Nakrani</author>
      <pubDate>Wed, 05 May 2021 15:36:52 +0000</pubDate>
      <link>https://dev.to/rakesh_nakrani/10-best-react-material-ui-admin-template-51ob</link>
      <guid>https://dev.to/rakesh_nakrani/10-best-react-material-ui-admin-template-51ob</guid>
      <description>&lt;p&gt;Here I am coming up with the collection of best &lt;em&gt;react material-UI admin template&lt;/em&gt; of 2021. All are built with &lt;a href="https://material-ui.com/getting-started/installation/"&gt;Material-UI&lt;/a&gt;, a top-rated components library that strictly follows Material Design Guidelines. Also, it is quite a popular &lt;a href="https://github.com/mui-org/material-ui"&gt;repository&lt;/a&gt; in GitHub for a long period of time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To make this post worth for you I have filtered the list with its Usability, Flexibility, and compatibility criteria. So you can get a powerful template for your project. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Few templates are newbies but those are in high demand to fulfill your backend needs.&lt;/p&gt;

&lt;p&gt;Almost all templates have common features like Axios, React Hooks, React-Redux, Authentication methods like Auth0, Firebase, and JWT. Few of them support both JavaScript &amp;amp; TypeScript language.&lt;/p&gt;

&lt;p&gt;Based upon my research, I found the below react templates. Hope you like this post and find your desired react dashboard template.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Template List&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Materially&lt;/li&gt;
&lt;li&gt;Devias&lt;/li&gt;
&lt;li&gt;Minimal&lt;/li&gt;
&lt;li&gt;Fuse React&lt;/li&gt;
&lt;li&gt;Berry React&lt;/li&gt;
&lt;li&gt;Material Dashboard Pro&lt;/li&gt;
&lt;li&gt;Jumbo&lt;/li&gt;
&lt;li&gt;Tokyo&lt;/li&gt;
&lt;li&gt;Material App Pro&lt;/li&gt;
&lt;li&gt;React Material Admin by FlatLogic&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#materially"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Materially&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XlK2bGoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcrl07qykfv2dhaaixi3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XlK2bGoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcrl07qykfv2dhaaixi3.jpg" alt="Materially React Dashboard Template"&gt;&lt;/a&gt;&lt;br&gt;
The reason to choose Materially is for its Simplicity and flexibility. If you want a Material design-specific admin template then you can go with Materially. Its color, card styles, shadow, pages are similar to material design guidelines. On the other hand, You can get a lot of pages, as well as pre-build apps like sass, e-commerce, chat, mail, and many more. The materially react dashboard template is a perfect duo of user experience design and coding standards.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-materially-react"&gt;
  &lt;/a&gt;
  Why Choose Materially React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Pure Material Look and feel.&lt;/li&gt;
&lt;li&gt;5+ Working Apps and Advance UI components.&lt;/li&gt;
&lt;li&gt;Authentication Methods - Auth0, JWT, Firebase.&lt;/li&gt;
&lt;li&gt;Multilanguage and RTL Support.&lt;/li&gt;
&lt;li&gt;Form components and included 3’rd party plugins like MUI Data Table, Modal, Formik, and many more.&lt;/li&gt;
&lt;li&gt;Easy to access Documentation guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://codedthemes.com/demos/admin-templates/materially/react/default"&gt;Live Preview&lt;/a&gt; &lt;a href="https://codedthemes.com/item/materially-reactjs-admin-dashboard/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://codedthemes.com"&gt;CodedThemes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devias"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Devias&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Edm3abhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt4iz41zv1cmy39yszwp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Edm3abhm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wt4iz41zv1cmy39yszwp.jpg" alt="Devias material-ui admin template"&gt;&lt;/a&gt;&lt;br&gt;
If you want a professional backend template then Devias is the priority choice for you. I am considering Devias for its performance and highly flexible code structure along with always updated code. Devias also serve you better if you consider complex projects. It has ready-to-use Material-UI components developed with one common goal in mind, to help you build faster &amp;amp; beautiful applications. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-devias-material-kit"&gt;
  &lt;/a&gt;
  Why Choose Devias Material Kit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Error Free tested design &amp;amp; pure code.&lt;/li&gt;
&lt;li&gt;The design follows all the Material design guidelines.&lt;/li&gt;
&lt;li&gt;TypeScript support along with Figma &amp;amp; Sketch Design resource files.&lt;/li&gt;
&lt;li&gt;Authentication Methods with Amplify Auth support.&lt;/li&gt;
&lt;li&gt;Ready to deploy Folder structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://react-material-kit.devias.io/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/devias-kit-pro/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;strong&gt;Devias&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minimal"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Minimal&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yFY-uoyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6qnb073dd17iwol4hnd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yFY-uoyH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6qnb073dd17iwol4hnd.jpg" alt="minimal react"&gt;&lt;/a&gt;&lt;br&gt;
Minimal is worth it for its UI and excellent user experience. You must say “WOW! What a masterpiece” when you see it. Minimal React is not just the ordinary backend template, It has everything that makes your project finish. From UI components to working apps you feel the Minimal experience is the same as its name. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-minimal-react"&gt;
  &lt;/a&gt;
  Why Choose Minimal React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Minimal design &amp;amp; timely support.&lt;/li&gt;
&lt;li&gt;Strong components and utility foundation.&lt;/li&gt;
&lt;li&gt;Working apps Mail, Chat, Calendar, and many more.&lt;/li&gt;
&lt;li&gt;Organized Structuring patterns in code and folder directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://minimals.cc/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/minimal-dashboard/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;strong&gt;Trinh Minimal&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fuse-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Fuse React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHyYj1_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qeupqegn7sz0t0lrtnqo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHyYj1_f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qeupqegn7sz0t0lrtnqo.jpg" alt="Fuse React Dashboard"&gt;&lt;/a&gt;&lt;br&gt;
Fuse React is top selling Material-UI Admin Template in Themeforest. It includes 5 example apps, 20+ pages, lots of reusable react components, and more. If you're looking for a powerful and professional admin template for Web Applications, CRM, CMS, Admin Panels then you may choose Fuse. This template isn't only a good place to start, but it also has a bunch of advanced stuff to learn.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-fuse-react"&gt;
  &lt;/a&gt;
  Why Choose Fuse React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Private GitHub Repository access.&lt;/li&gt;
&lt;li&gt;Multiple Layouts &amp;amp; Theme Styling options with having Multilanguage &amp;amp; RTL Support.&lt;/li&gt;
&lt;li&gt;E-commerce, Academy, To-do, File Manager, Mail, Contact, Chat, Srumboard, and many more full-featured applications.&lt;/li&gt;
&lt;li&gt;Extensive Documentation.&lt;/li&gt;
&lt;li&gt;Helper classes and Authentication Methods support.&lt;/li&gt;
&lt;li&gt;Typography font size selection.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://react-material.fusetheme.com/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://themeforest.net/item/fuse-react-react-redux-material-design-admin-template/21769397"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="http://www.withinpixels.com/"&gt;withinpixels&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#berry-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Berry React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--li8gWwAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5g4ol0lkpce8o5bqh4t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--li8gWwAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5g4ol0lkpce8o5bqh4t.jpg" alt="berry react material-ui admin template"&gt;&lt;/a&gt;&lt;br&gt;
Berry is the newly launched Admin Template build for simplifying your development by having performance-centric code. Also, You can build your web applications faster and beautifully. At first glance, you definitely fall in love with Berry’s design. Berry gives you wings to fly high with your project for their standardized code structure, beautiful user interface, and feature-rich material-UI react admin template.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-berry-react"&gt;
  &lt;/a&gt;
  Why Choose Berry React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Simple yet minimal Design with warm color palettes gives you the best User Experience.&lt;/li&gt;
&lt;li&gt;TypeScript Support.&lt;/li&gt;
&lt;li&gt;Figma Design resource file.&lt;/li&gt;
&lt;li&gt;Light/Dark Layouts with RTL and Multi-Language support.&lt;/li&gt;
&lt;li&gt;5+ working Apps for User Management, Customer, Email, Chat, Calendar, Contact.&lt;/li&gt;
&lt;li&gt;Material UI extended and advanced form components.&lt;/li&gt;
&lt;li&gt;Supports Auth0, JWT, Firebase Authentication Methods.&lt;/li&gt;
&lt;li&gt;Easy folder structure and well-optimized code standard.&lt;/li&gt;
&lt;li&gt;Knowledgebase, Tutorials series, and extensive Documentation guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://berrydashboard.io"&gt;Live Preview&lt;/a&gt; &lt;a href="https://berrydashboard.io"&gt;Soon available for Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://codedthemes.com"&gt;CodedThemes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-dashboard-pro"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Material Dashboard Pro&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qjYDLe8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7x35wfqc3s5qrxl4r5d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qjYDLe8K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7x35wfqc3s5qrxl4r5d.jpg" alt="material dashboard pro by creative-tim"&gt;&lt;/a&gt;&lt;br&gt;
If you know the Creative-Tim, then I guarantee that you know the Material Dashboard PRO template. It is out of the box and a popular material admin template. Material Dashboard Pro has a simple structure and minimal pages with stylish cards. The smooth animation flows make a super-intuitive user experience.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-material-dashboard-pro"&gt;
  &lt;/a&gt;
  Why Choose Material Dashboard Pro?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;If you are a novice developer, You can easily make work using Material Dashboard Pro.&lt;/li&gt;
&lt;li&gt;Sidebar filters with options of color, image, layout variants.&lt;/li&gt;
&lt;li&gt;Extended Forms and Form wizard pages.&lt;/li&gt;
&lt;li&gt;UI Components with extra useful pages like Pricing, Authentication, Maps, Charts, and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://demos.creative-tim.com/material-dashboard-pro-react/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://www.creative-tim.com/product/material-dashboard-pro-react"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://www.creative-tim.com"&gt;Creative-Tim&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jumbo-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Jumbo React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oceaIQBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brsusojnrcv81tn4imaa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oceaIQBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brsusojnrcv81tn4imaa.jpg" alt="Jumbo react"&gt;&lt;/a&gt;&lt;br&gt;
I love the Jumbo React for its jumbo features like theme &amp;amp; sidebar variants, 8+ Layout options, 3 Container settings, Sidebar sizes, theme color presets with RTL support. “You demand &amp;amp; Jumbo have it” - all combo in just one template. G-axon is a team passionate about helping others get results and have fun doing it.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-jumbo-react"&gt;
  &lt;/a&gt;
  Why Choose Jumbo React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Multi variants of Pages &amp;amp; Color Presets.&lt;/li&gt;
&lt;li&gt;Along with Material-UI components, Jumbo has Coremat components included.&lt;/li&gt;
&lt;li&gt;360 Degree after-sales support - Video Tutorials, Slack community, Online documentation, and ticket support system.&lt;/li&gt;
&lt;li&gt;Private GitHub Repo Access.&lt;/li&gt;
&lt;li&gt;Useful widgets and apps like Social, wall, chat, contact, and many more.&lt;/li&gt;
&lt;li&gt;Multi-Language support&lt;/li&gt;
&lt;li&gt;Layout Builder&lt;/li&gt;
&lt;li&gt;Micro Interaction-based Interactivity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://jumbo.g-axon.work/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://themeforest.net/item/react-material-bootstrap-4-admin-template/20978545"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://g-axon.com/"&gt;g-axon&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tokyo-react"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Tokyo React&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vembLE3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lr260p599xod95dz6wj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vembLE3y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lr260p599xod95dz6wj.jpg" alt="tokyo material-ui backend template"&gt;&lt;/a&gt;&lt;br&gt;
If you ever need the app pages for your project then Tokyo React is your one-stop admin template. Featured with 12 niche dashboard pages, 6 applications, 5 Management sections, Multiple Auth methods, Translations ready text, and lots more make Tokyo a really powerful react backend template.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-tokyo-react"&gt;
  &lt;/a&gt;
  Why Choose Tokyo React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Best Google Lighthouse performance, SEO-ready pages.
PWA optimized.&lt;/li&gt;
&lt;li&gt;Starter Kit.&lt;/li&gt;
&lt;li&gt;Figma design resource file.&lt;/li&gt;
&lt;li&gt;TypeScript supported react admin template.&lt;/li&gt;
&lt;li&gt;Multiple Layout options with RTL Support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://bloomui.com/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/tokyo-react-admin-dashboard/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://bloomui.com/"&gt;bloom-ui&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#material-app-pro"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Material App Pro&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PH-LGlGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emn1m1flgepko059v8eq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PH-LGlGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emn1m1flgepko059v8eq.jpg" alt="material app pro"&gt;&lt;/a&gt;&lt;br&gt;
Material App Pro is a damn good full-fledged template built on top of the most popular front-end React Material-UI library in the world. You can say, It is a professional grade admin template in terms of usability and flexibility. It featured up to 50+ pages that give you the freedom of choosing and combining. If you're familiar with Material-UI, then you'll certainly love this theme!. They said - “The sky is the limit!”&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-material-app-pro-react"&gt;
  &lt;/a&gt;
  Why Choose Material App Pro React?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Professional design with a sense of Typography and spacing.&lt;/li&gt;
&lt;li&gt;Figma/Sketch design resource files that easing your pre-development plan.&lt;/li&gt;
&lt;li&gt;Besides the components, it has Dashboards, Settings, Pricing,
&lt;/li&gt;
&lt;li&gt;Project, Task, Calendar, and many more pages included.&lt;/li&gt;
&lt;li&gt;Free updates and 12 months support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://material-app.bootlab.io/"&gt;Live Preview&lt;/a&gt; &lt;a href="https://material-ui.com/store/items/material-app/"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://bootlab.io/"&gt;BootLab&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-material-admin-by-flatlogic"&gt;
  &lt;/a&gt;
  &lt;strong&gt;React Material Admin by FlatLogic&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qus0SSuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiuj8raf3vwu1uiwp8kg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qus0SSuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiuj8raf3vwu1uiwp8kg.jpg" alt="react material admin"&gt;&lt;/a&gt;&lt;br&gt;
FlatLogic is one of the top players in the template market. They make enterprise-grade admin templates and UI kits. “React Material Admin” which is very easy to get started with your project in no time. They are committed to constantly update their portfolio on a regular basis. So you can always get updated code. &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why-choose-it"&gt;
  &lt;/a&gt;
  Why Choose it?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Private GitHub repo access to receive future updates.&lt;/li&gt;
&lt;li&gt;Various Chart Libraries.&lt;/li&gt;
&lt;li&gt;Fully Documented Codebase.&lt;/li&gt;
&lt;li&gt;The Perfect Folder Structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://flatlogic.github.io/react-material-admin-full"&gt;Live Preview&lt;/a&gt; &lt;a href="https://flatlogic.com/templates/react-material-admin-full"&gt;Purchase&lt;/a&gt;&lt;br&gt;
Made by - &lt;a href="https://flatlogic.com"&gt;FlatLogic&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have any other Material-UI Admin Template that is likely to add to this post. Please comment here with the link. I would love to see it.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>discord.py Project 4: 
 ✍🏽Partnership Bot!</title>
      <author>Mikey</author>
      <pubDate>Wed, 05 May 2021 15:21:20 +0000</pubDate>
      <link>https://dev.to/mikeywastaken/discord-py-project-4-partnership-bot-5oo</link>
      <guid>https://dev.to/mikeywastaken/discord-py-project-4-partnership-bot-5oo</guid>
      <description>&lt;p&gt;In this article, we're going to create a Discord bot that can guide users through an automatic partnership process!&lt;/p&gt;

&lt;p&gt;
  &lt;strong&gt;What's a Discord server partnership?&lt;/strong&gt;
  &lt;p&gt;A discord server partnership is when two servers will send the other's invite link in a designated channel, to share members. &lt;/p&gt;

&lt;/p&gt;

&lt;p&gt;Our end product will look something like &lt;a href="https://mikey.has-no-bra.in/94mVgD"&gt;this&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;The staff of your server will see this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6hNrTxgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20zk0m25hokdaejofn3y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6hNrTxgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20zk0m25hokdaejofn3y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And will be able to click the checkmark or cross to accept or deny the request!&lt;/p&gt;

&lt;p&gt;When it is accepted, it will automatically post the ad in a designated channel!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xN3xg1dW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0exowuqyvbux63ulzusx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xN3xg1dW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0exowuqyvbux63ulzusx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#installing-discordextforms"&gt;
  &lt;/a&gt;
  Installing discord.ext.forms 🔧
&lt;/h1&gt;

&lt;p&gt;Discord.ext.forms is a module designed specifically to assist bot developers with making forms and surveys! To install it, you need to open a shell and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;discord-ext-forms
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Once that's done, you're ready to start coding!&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#coding-the-bot-%E2%9A%99"&gt;
  &lt;/a&gt;
  Coding the bot ⚙
&lt;/h1&gt;

&lt;p&gt;To start this off, we will need to start our &lt;code&gt;commands.Bot&lt;/code&gt; instance.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;discord.ext&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;discord&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TOKEN_HERE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now that we have our bot, let's make our &lt;code&gt;partner&lt;/code&gt; command!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;discord.ext&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;discord&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;partner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TOKEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We need to import the &lt;code&gt;Form&lt;/code&gt; class from discord.ext.forms to make our form for the partnership command!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;discord.ext.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, let's start on our form! We likely want to ask for an invite link, a description, and an advertising server, but you can add or remove any of these questions!&lt;/p&gt;

&lt;p&gt;In our command, let's make our form:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Partnership Request"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To add a question, we use the &lt;code&gt;.add_question&lt;/code&gt; method of the form.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"What's the invite link to your server?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# The question which it will ask
&lt;/span&gt;        &lt;span class="s"&gt;"invitelink"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# What the form will call the result of this question
&lt;/span&gt;        &lt;span class="s"&gt;"invite"&lt;/span&gt; &lt;span class="c1"&gt;# The type the response should be
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Because we have &lt;code&gt;invite&lt;/code&gt; as the type, discord.ext.forms will check that the response is an invite and return an invite object.&lt;/p&gt;

&lt;p&gt;Now, let's add our other two questions!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;partner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Partnership Request"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"What's the invite link to your server?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# The question which it will ask
&lt;/span&gt;        &lt;span class="s"&gt;"invitelink"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# What the form will call the result of this question
&lt;/span&gt;        &lt;span class="s"&gt;"invite"&lt;/span&gt; &lt;span class="c1"&gt;# The type the response should be
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"What's a description of your server?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"description"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"What's your server's advertisement?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"advertisement"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The final two don't have a type, because we just want the message's content.&lt;/p&gt;

&lt;p&gt;Now, we'll want to begin the form!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;results&lt;/code&gt; will have 3 attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;invitelink&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;description&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;advertisement&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the keys that we set these values to earlier!&lt;/p&gt;

&lt;p&gt;Now, let's make our embed that shows the staff the submission:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;embed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Partnership Request from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"**Description:** &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;avatar_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, let's get our partnerships channel so that we can send our embed there!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;partnershipreq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partnership_request_channel_id_here&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Lastly, let's send it!&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;prompt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;partnershipreq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;For staff members to be able to accept and deny, we're going to need another form from discord.ext.forms: &lt;code&gt;ReactConfirm&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;discord.ext.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ReactConfirm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The reason we saved &lt;code&gt;prompt&lt;/code&gt; earlier is because we're going to need it for the accept/deny process. Use ReactConfirm to create a new form called &lt;code&gt;confirm&lt;/code&gt;, like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;confirm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReactConfirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;accepted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, the bot, after sending the message, will react with the ✔ and ❌ emoji, and wait for a staff member to choose one.&lt;/p&gt;

&lt;p&gt;We're nearly there! Now we just have to send the ad, in an embed of course, into the partnership channel if it gets accepted.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;accepted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;partners&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partners_channel_id_here&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advertisement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mh"&gt;0x2F3136&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;avatar_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;partners&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we're done! Our final code looks something like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;discord.ext&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;discord&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;discord.ext.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ReactConfirm&lt;/span&gt;

&lt;span class="n"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command_prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;partner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Partnership Request"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"What's the invite link to your server?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# The question which it will ask
&lt;/span&gt;        &lt;span class="s"&gt;"invitelink"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# What the form will call the result of this question
&lt;/span&gt;        &lt;span class="s"&gt;"invite"&lt;/span&gt; &lt;span class="c1"&gt;# The type the response should be
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"What's a description of your server?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"description"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_question&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"What's your server's advertisement?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"advertisement"&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;embed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Partnership Request from &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"**Description:** &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;avatar_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;partnershipreq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partnership_request_channel_id_here&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;prompt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;partnershipreq&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;confirm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ReactConfirm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;accepted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;partners&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;partners_channel_id_here&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;em&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Embed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advertisement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mh"&gt;0x2F3136&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;avatar_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invitelink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;icon_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;partners&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;em&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TOKEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;&lt;em&gt;If you want to see other use cases for this module, check it out here:&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/isigebengu-mikey"&gt;
        isigebengu-mikey
      &lt;/a&gt; / &lt;a href="https://github.com/isigebengu-mikey/discord-ext-forms"&gt;
        discord-ext-forms
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simpler way to make forms, surveys, and reaction input using discord.py.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>discord</category>
      <category>dpy</category>
      <category>discordpy</category>
      <category>discordbot</category>
    </item>
    <item>
      <title>Re-creating the floating label of Material Design</title>
      <author>𝙼𝚊𝚗𝚞𝚃𝚑𝚎𝙲𝚘𝚍𝚎𝚛</author>
      <pubDate>Wed, 05 May 2021 15:10:56 +0000</pubDate>
      <link>https://dev.to/manuthecoder/re-creating-the-floating-label-of-material-design-kjj</link>
      <guid>https://dev.to/manuthecoder/re-creating-the-floating-label-of-material-design-kjj</guid>
      <description>&lt;p&gt;If you're familiar with Material Design, it's a common UI trend nowadays, and creating the floating label for inputs can be hard to achieve with pure CSS. Here's how to do it easily using pure CSS and JavaScript. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-creating-the-css"&gt;
  &lt;/a&gt;
  1. Creating the CSS
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;      &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Roboto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;margin-top&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font-size&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;margin-left&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;padding&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border&lt;/span&gt; &lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;box-shadow&lt;/span&gt; &lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-active&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;13px&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;168&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border.input-active&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-filled-in-not-focus&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explained"&gt;
  &lt;/a&gt;
  Explained
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.input&lt;/code&gt; - this is the input's container. &lt;br&gt;
&lt;code&gt;.input label&lt;/code&gt; - Targeting the input's label&lt;br&gt;
&lt;code&gt;.input-border&lt;/code&gt; - Just another example with a border-style input&lt;br&gt;
&lt;code&gt;.input input&lt;/code&gt; - Targeting the input container's input&lt;br&gt;
&lt;code&gt;.input-active&lt;/code&gt; - When the input is active, the label will float up&lt;br&gt;
&lt;code&gt;.input-filled-in-not-focus&lt;/code&gt; - If the input is filled in and not focused, sets the label to default color.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#2-creating-the-html"&gt;
  &lt;/a&gt;
  2. Creating the HTML
&lt;/h1&gt;

&lt;p&gt;This is the easy part. Just a couple of divs, labels, and inputs!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Name&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Email&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input input-border"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Bordered&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the last one is a bordered input&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-creating-the-js"&gt;
  &lt;/a&gt;
  3. Creating the JS
&lt;/h1&gt;

&lt;p&gt;Now we're talking! Let's add a simple JS function to get all the inputs, and move the labels up and down on focus and blur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-filled-in-not-focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-filled-in-not-focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code!!!
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=Roboto&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'Roboto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;margin-top&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font-size&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;margin-left&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;padding&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border&lt;/span&gt; &lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;box-shadow&lt;/span&gt; &lt;span class="m"&gt;.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-active&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;13px&lt;/span&gt; &lt;span class="cp"&gt;!important&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;168&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-border.input-active&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#512da8&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nc"&gt;.input-filled-in-not-focus&lt;/span&gt; &lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#aaa&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
      Sign Up!
    &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Name&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Email&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Phone Number&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Address&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Password&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"password"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"input input-border"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Bordered&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;autocomplete=&lt;/span&gt;&lt;span class="s"&gt;"off"&lt;/span&gt; &lt;span class="na"&gt;autofocus&lt;/span&gt; &lt;span class="na"&gt;spellcheck=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-filled-in-not-focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input-filled-in-not-focus&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Demo: &lt;a href="https://webcode.rf.gd/index.php?id=65"&gt;https://webcode.rf.gd/index.php?id=65&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully this was useful.&lt;br&gt;
This would have in pure CSS easier if it had a parent element selector!&lt;/p&gt;

</description>
      <category>material</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Top 5 plataformas LMS de e-learning para la formación en empresas</title>
      <author>meydele</author>
      <pubDate>Wed, 05 May 2021 15:00:03 +0000</pubDate>
      <link>https://dev.to/feygele/top-5-plataformas-lms-de-e-learning-para-la-formacion-en-empresas-l70</link>
      <guid>https://dev.to/feygele/top-5-plataformas-lms-de-e-learning-para-la-formacion-en-empresas-l70</guid>
      <description>&lt;p&gt;Las plataformas de e-learning ya no son un privilegio exclusivo de las grandes empresas, debido a que hay muchos servicios accesibles e incluso gratuitos que pueden ser usados para la formación de los empleados. Sin embargo, aunque existen soluciones alternativas gratuitas, las empresas pequeñas están dispuestas a invertir en plataformas LMS o programas de gestión de formación que aseguren una implementación rápida, la mejor calidad en la entrega de dicha formación, soporte, y facilidad de uso.&lt;/p&gt;

&lt;p&gt;En este artículo, hemos revisado cinco sistemas populares para la formación online de empleados.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#las-mejores-plataformas-lms-de-gesti%C3%B3n-y-seguimiento-de-la-formaci%C3%B3n%C2%A0"&gt;
  &lt;/a&gt;
  Las mejores plataformas LMS de gestión y seguimiento de la formación 
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;iSpring Learn&lt;/li&gt;
&lt;li&gt;Docebo&lt;/li&gt;
&lt;li&gt;LearnUpon&lt;/li&gt;
&lt;li&gt;Litmos&lt;/li&gt;
&lt;li&gt;TalentLMS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Las cinco plataformas de e-learning presentadas en esta reseña son soluciones de “computación en la nube” o cloud-computing. “Cloud-computing” significa que el sistema funciona en línea y no necesita ser configurado. Normalmente, las soluciones en la nube son preferibles para los que quieren empezar a trabajar de inmediato y evitar implementaciones largas.&lt;/p&gt;

&lt;p&gt;En esta reseña, hemos omitido intencionalmente las características que las plataformas tienen en común, ya que todas son muy intuitivas, pueden ser usadas en dispositivos móviles, y tienen funciones geniales como gamificación. En cambio, nos hemos centrado en las características que las hacen destacar y hemos definido ejemplos de usos para cada una.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-ispring-learn"&gt;
  &lt;/a&gt;
  1. iSpring Learn
&lt;/h2&gt;

&lt;p&gt;Calificación: 4,7 / 5 – 87 reseñas (/&lt;a href="https://www.capterra.com/p/144871/iSpring-Learn"&gt;Capterra&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Promesa del vendedor: “LMS rápido para tu proyecto esencial para la misión.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5VqX4DdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1e4z4a2ofd4jqm6xxtm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5VqX4DdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1e4z4a2ofd4jqm6xxtm.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ispring.es/ispring-learn"&gt;iSpring Learn&lt;/a&gt;&lt;br&gt;
es una plataforma LMS de computación en la nube fácil de usar para enseñar y evaluar empleados online.&lt;/p&gt;

&lt;p&gt;Lo que diferencia iSpring Learn de sus competidores es iSpring Suite, un poderoso &lt;a href="https://www.ispring.es/blog/mejores-herramientas-de-autor-de-elearning-para-usar"&gt;kit de herramientas de autor&lt;/a&gt; integrado con el LMS. A diferencia de los programas incorporados para la creación de cursos que tienen algunos LMS, &lt;a href="https://www.ispring.es/ispring-suite"&gt;iSpring Suite&lt;/a&gt; ofrece funciones que van mucho más allá de añadir videos de YouTube y crear cursos simples de texto. Con su ayuda, puedes crear e-learning interactivo de alta calidad con evaluaciones avanzadas, videoconferencias, y simuladores de comunicaciones o diálogos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55dHvgtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkuxyd7duc8j9k6iqfuk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55dHvgtx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkuxyd7duc8j9k6iqfuk.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Ejemplo de contenido de formación que puede crearse fácilmente con iSpring Suite&lt;/p&gt;

&lt;p&gt;El archivo resultante puede subirse al sistema directamente desde el editor con 2 clics. Y dado que la plataforma LMS y el kit de herramientas de autor fueron desarrollados inicialmente para complementarse de forma natural, puedes obtener informes ampliados sobre el contenido y los usuarios.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#precio"&gt;
  &lt;/a&gt;
  Precio
&lt;/h3&gt;

&lt;p&gt;iSpring utiliza un modelo de precios basado en los usuarios activos. Esto significa que puedes registrar cualquier número de usuarios, pero un usuario se considera activo si él o ella ha iniciado sesión al menos una vez durante el período de facturación. El precio de los planes de iSpring Learn oscilan entre los 3,39 € por usuario activo al mes para 100 usuarios y 2,64 €/usuario/mes para 500 usuarios. Si el número de usuarios excede los 500, ofrecen un plan personalizado.&lt;/p&gt;

&lt;p&gt;Con cualquier plan, obtienes todas las funciones del LMS. Además, el precio incluye al menos una licencia para iSpring Suite, una poderosa herramienta de autor para crear cursos, cuestionarios, simulaciones de diálogos, y videos. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qu%C3%A9-dicen-los-clientes"&gt;
  &lt;/a&gt;
  ¿Qué dicen los clientes?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yEg_blHa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wn5lnef0jd5zvsmvciu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yEg_blHa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wn5lnef0jd5zvsmvciu.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Reseñas reales de los usuarios de iSpring Learn LMS. Fuente: &lt;a href="https://www.capterra.es/software/144871/ispring-learn&amp;lt;br&amp;gt;%0A"&gt;Capterra&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resumen"&gt;
  &lt;/a&gt;
  Resumen
&lt;/h3&gt;

&lt;p&gt;iSpring Learn es la solución que buscas si necesitas implementar formación corporativa fácilmente y en tan solo un día.&lt;/p&gt;

&lt;p&gt;Gracias a su simplicidad y a que tendrás que pagar solamente por los usuarios activos, el LMS es perfecto tanto para los que lo usan siempre como para los que lo usan de forma esporádica. Junto con la poderosa herramienta de autor (además de una app móvil para estudiantes y el excelente soporte técnico), iSpring Learn es una plataforma de e-learning completa para tus empleados, socios, y clientes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-docebo"&gt;
  &lt;/a&gt;
  2. Docebo
&lt;/h2&gt;

&lt;p&gt;Calificación: 4,2 / 5 — 108 reseñas (&lt;a href="https://www.capterra.com/p/127213/Docebo/"&gt;Capterra&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Promesa del vendedor: “Alinea las necesidades de formación de tu organización con las de tus estudiantes con un LMS que utiliza algoritmos de inteligencia artificial específicos para producir experiencias de aprendizaje más profundas y efectivas.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dNPiW1zm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5givwzf65st3iemm3tva.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dNPiW1zm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5givwzf65st3iemm3tva.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.docebo.com/es/"&gt;Docebo&lt;/a&gt; es una plataforma LMS flexible y escalable que ofrece una solución de aprendizaje empresarial completa.&lt;/p&gt;

&lt;p&gt;Dos de las características de Docebo que llaman la atención al registrarse, son sus opciones de etiqueta blanca y marca. En la mayoría de las plataformas de e-learning, tener numerosas opciones de personalización de páginas es un privilegio. En Docebo, puedes personalizar literalmente todo: desde el fondo de la página de registro hasta el aspecto del catálogo de cursos; incluso puedes añadir tu logo y elegir los colores para la aplicación móvil.&lt;/p&gt;

&lt;p&gt;Además de la personalización visual, Docebo también ofrece localización extensiva. Disponible en 40 idiomas, es una buena opción para empresas y compañías internacionales que necesitan ofrecer formación a empleados de todo el mundo. Hemos observado que algunas de las localizaciones parecen traducidas automáticamente. Sin embargo, una vez que tengas la traducción básica, puedes descargar una plantilla de tu idioma y mejorarla.&lt;/p&gt;

&lt;p&gt;Otro aspecto interesante de Docebo es Capacita y Comparte (Coach and Share), una solución para aprendizaje social informal que promueve crear contenido generado por los usuarios. Los empleados pueden compartir sus ideas y mejores prácticas contribuyendo con presentaciones, guías, o videotutoriales en canales. Los estudiantes también pueden hacer preguntas y obtener respuestas de otros usuarios o expertos internos en el tema de una manera similar a un helpdesk: los expertos pueden ver la lista de preguntas pendientes y responderlas.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#precio"&gt;
  &lt;/a&gt;
  Precio
&lt;/h3&gt;

&lt;p&gt;Los planes de precios de Docebo varían dependiendo del número de estudiantes, las características requeridas, y los servicios prestados. Según FindTheLMS, el coste anual mínimo es de 2000 $ y puede llegar a los 500.000 $. El precio exacto solamente se puede saber contactando al proveedor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qu%C3%A9-dicen-los-clientes"&gt;
  &lt;/a&gt;
  ¿Qué dicen los clientes?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IOAU6NW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3bdkgxog4n6g3t81x7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOAU6NW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3bdkgxog4n6g3t81x7w.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Reseñas reales de los usuarios de Docebo. Fuente: &lt;a href="https://www.capterra.es/software/127213/docebo"&gt;Capterra&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resumen"&gt;
  &lt;/a&gt;
  Resumen
&lt;/h3&gt;

&lt;p&gt;Gracias a las capacidades de su plataforma, Docebo merece estar en tu lista al seleccionar programas de gestión de formación para tu compañía. Al mismo tiempo, la sofisticación técnica también trae complejidad. Mientras algunos clientes de Docebo están satisfechos con sus numerosas características, a otros les decepciona el soporte ofrecido por el proveedor. Así que, si estás considerando Docebo, lo más probable es que necesites tiempo adicional para aprender a usarlo. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-learnupon"&gt;
  &lt;/a&gt;
  3. LearnUpon
&lt;/h2&gt;

&lt;p&gt;Calificación: 4,9 /5 — 69 reseñas (Capterra)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Promesa del vendedor: “Aprendizaje como debería ser. Capacita a tus empleados, socios, y clientes con el LMS de LearnUpon. Gestiona, monitoriza, y alcanza tus objetivos de aprendizaje usando una sola y poderosa solución.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ogyb-dlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/868u1cen4lum7u8qt1yn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ogyb-dlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/868u1cen4lum7u8qt1yn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.learnupon.com/"&gt;LearnUpon&lt;/a&gt; es una plataforma LMS versátil que puede ser usada tanto para la formación de empleados internos como de socios externos.&lt;/p&gt;

&lt;p&gt;Los diseñadores de LearnUpon hicieron un gran trabajo ya que la interfaz de la plataforma LMS parece estar ordenada y es fácil de usar, así que lo más probable es que sepas usar la mayoría de las funciones de la plataforma sin ningún entrenamiento. Al mismo tiempo, cada cliente tiene un gerente personal que le ayudará con cualquier posible problema.&lt;/p&gt;

&lt;p&gt;Aunque la compañía ofrece a sus clientes soporte de primera categoría para todos los planes de precios, las funciones de la plataforma LMS sí dependen del plan de precios elegido. Si empiezas con el plan Básico, cuyo precio es de 599 € (~ 663 $) al mes, no tendrás ciertas funciones como gamificación, tareas, y facilidades para aprendizaje combinado, que están disponibles en los planes más caros.&lt;/p&gt;

&lt;p&gt;Otra característica implementada sin problemas en LearnUpon (pero que depende del plan que elijas) es la facilidad de cambiar entre portales de aprendizaje. Esto te permite crear y personalizar ambientes de aprendizaje individuales para diferentes tipos de estudiantes, empleados o socios, u organizaciones.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#precio"&gt;
  &lt;/a&gt;
  Precio
&lt;/h3&gt;

&lt;p&gt;Un plan básico de LearnUpon te costará 699 € al mes con un máximo de 50 usuarios activos. Al elegir un plan más caso, el número de usuarios y características disponibles incrementará. Así que por 1,249 € al mes, puedes crear dos portales de aprendizaje, incorporar aprendizaje combinado, usar gamificación, tareas, y funciones para ventas online o eCommerce, y tener hasta 250 usuarios. Por 1,999 €, tendrás algunas integraciones adicionales, SSO, y más usuarios permitidos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qu%C3%A9-dicen-los-clientes"&gt;
  &lt;/a&gt;
  ¿Qué dicen los clientes?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BVK7jdHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b80mwwoz2yjxam1i9md.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVK7jdHf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0b80mwwoz2yjxam1i9md.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resumen"&gt;
  &lt;/a&gt;
  Resumen
&lt;/h3&gt;

&lt;p&gt;LearnUpon tiene reseñas muy amables de sus clientes, y casi todos hablan sobre lo fácil que es usar la interfaz fácil de la plataforma LMS, el diseño elegante, y la excelente atención al cliente. &lt;/p&gt;

&lt;p&gt;Para algunas compañías más pequeñas, los planes de precios pueden ser demasiado caros, y quizás no puedan permitírselo. Sin embargo, es una solución muy buena para la formación de empleados, socios, y en empresas extendidas; muy bien pensada, fácil de entender, y usar tanto para administradores como para usuarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-litmos"&gt;
  &lt;/a&gt;
  4. Litmos
&lt;/h2&gt;

&lt;p&gt;Calificación: 4,2 /5 — 238 reseñas (&lt;a href="https://www.capterra.com/p/133660/Litmos-LMS/#reviews"&gt;Capterra&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Promesa del vendedor: “Formación en el AHORA. La mejor plataforma de formación para empresas orientadas al cliente.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kc9XHldR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uaot4if8j7ic091wefgj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc9XHldR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uaot4if8j7ic091wefgj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://www.litmos.com/es-LA/"&gt;SAP Litmos&lt;/a&gt;) es una plataforma LMS en la nube diseñada para publicar, proporcionar, y monitorizar rápidamente formación bajo demanda para miles de estudiantes. Es también un sistema fácil de usar tanto por el administrador como por el estudiante, ya que tiene un diseño agradable, y la interfaz es intuitiva.&lt;/p&gt;

&lt;p&gt;SAP Litmos creó Litmos Heroes, un mercado gigante donde puedes tener acceso a más de 15.000 recursos de aprendizaje ya listos para usar. Los cursos están en formato video y son cortos (5 a 20 minutos de duración), por lo que mantendrán atento al estudiante.&lt;/p&gt;

&lt;p&gt;Junto a un editor incorporado que te permite crear contenido de e-learning sencillo, esta plataforma es una buena opción para las compañías que no tienen actualmente un diseñador instruccional o que quieren ahorrar tiempo y dinero a la hora de producir sus propios contenidos de formación.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#precio"&gt;
  &lt;/a&gt;
  Precio
&lt;/h3&gt;

&lt;p&gt;SAP Litmos ofrece dos planes de precios. Uno es para el LMS y es facturado por usuario al mes, y el otro incluye acceso a la colección de cursos Litmos Heroes.&lt;/p&gt;

&lt;p&gt;Para aquellos que solo buscan un LMS, serán 6 $ o 4 $ por usuario si la compañía entra en la categoría de 150-500 o 500-1,000 respectivamente. Si tienes menos de 150 usuarios al mes, solo puedes elegir el plan que incluye su librería de cursos (15 $ por usuario). Y, por supuesto, hay planes personalizados para aquellos con más de 1,000 estudiantes al mes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qu%C3%A9-dicen-los-clientes"&gt;
  &lt;/a&gt;
  ¿Qué dicen los clientes?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk3wZRG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/799eqdcsno3ib39l0j7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pk3wZRG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/799eqdcsno3ib39l0j7d.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Reseñas reales de los usuarios de SAP Litmos. Fuente: &lt;a href="https://www.capterra.es/software/133660/litmos-lms"&gt;Capterra&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resumen"&gt;
  &lt;/a&gt;
  Resumen
&lt;/h3&gt;

&lt;p&gt;Aunque a algunos clientes no les gusta la asistencia ofrecida por el equipo de SAP Litmos, a otros la plataforma les parece intuitiva y muy fácil de usar, así que quizás no sea necesario ponerse en contacto con el servicio al cliente. De hecho, para esta reseña, hicimos una pequeña prueba y descubrimos cómo usarla en poco tiempo.&lt;/p&gt;

&lt;p&gt;Por supuesto, algunos problemas solo se descubren después de usar la plataforma un cierto tiempo, por lo que una regla general al elegir un LMS es intentar contactar a los clientes existentes y preguntarles sobre su experiencia. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-talentlms"&gt;
  &lt;/a&gt;
  5. TalentLMS
&lt;/h2&gt;

&lt;p&gt;Calificación: 4,6/5 – 317 reseñas (&lt;a href="https://www.capterra.com/p/132935/TalentLMS/"&gt;Capterra&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Promesa del vendedor: “El camino más rápido hacia una mejor formación. Un programa en la nube muy fácil de usar para la formación de empleados, socios, y clientes.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tmY99raQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibp8j3g8lxm75ub8k2mj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tmY99raQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibp8j3g8lxm75ub8k2mj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aunque todas las plataformas LMS de esta lista son fáciles de usar (menos Docebo, quizás), &lt;a href="https://es.talentlms.com//"&gt;TalentLMS&lt;/a&gt; parece ser todavía más fácil. Después de registrarte para la versión de prueba, verás un tour del producto discreto, pero bien pensado que te muestra los primeros pasos y te ayuda a familiarizarte con las principales características que ofrece la plataforma.&lt;/p&gt;

&lt;p&gt;Esta plataforma de e-learning destaca también por sus ajustes flexibles para la gamificación. El programa de gamificación de TalentLMS te permite añadir juegos y elementos de competición en los lugares adecuados, y configurarlos para casos de usos particulares. Por ejemplo, puedes crear contenido adicional oculto que solo estará disponible para los estudiantes que hayan alcanzado cierto nivel.&lt;/p&gt;

&lt;p&gt;Los desarrolladores de TalentLMS también han trabajado en integraciones con muchas herramientas útiles. Hay más de 200 integraciones con servicios de terceros: Zapier, Shopify, Salesforce, WordPress, Slack, Zendesk, GoToMeeting, Trello, PayPal, Stripe, y más. Es perfecto para aquellos que usan diferentes servicios, ya que no tendrás que pagar extra para conectarlos todos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#precio"&gt;
  &lt;/a&gt;
  Precio
&lt;/h3&gt;

&lt;p&gt;Para empezar, TalentLMS te permite elegir si quieres pagar por el número total de usuarios registrados o por usuarios activos al mes. Después puedes elegir pagar una tarifa mensual o anual (la tarifa anual es más barata).&lt;/p&gt;

&lt;p&gt;El precio de los planes oscila entre los 59 $/mes por 40 usuarios registrados y los 429 $/mes por 1.000 usuarios. Para comparar, por 40 usuarios activos pagarás 129 $ al mes, mientras que para 100 pagarás 479 $/mes (casi no hay diferencia).&lt;/p&gt;

&lt;p&gt;Además, si quieres empezar poco a poco, puedes usar la versión de prueba gratuita. Con esta versión puedes tener solamente 5 usuarios registrados y 10 cursos en el portal de aprendizaje, lo cual es poco incluso para el negocio más pequeño, pero es suficiente para empezar. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#qu%C3%A9-dicen-los-clientes"&gt;
  &lt;/a&gt;
  ¿Qué dicen los clientes?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGX8DRJR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d54wpknwslwi2ckew41i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGX8DRJR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d54wpknwslwi2ckew41i.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resumen"&gt;
  &lt;/a&gt;
  Resumen
&lt;/h3&gt;

&lt;p&gt;Las funcionalidades de TalentLMS no dependen del plan de precios, ya que todos los planes incluyen las características principales. Esto significa que las empresas más pequeñas disfrutarán de las mismas funciones que los clientes de empresas más grandes.&lt;/p&gt;

&lt;p&gt;Gracias a su facilidad de uso que te permite empezar rápidamente, sin tener que pedir ayuda al servicio de atención al cliente y sin formación previa, TalentLMS es una buena opción si buscas un programa de formación y monitorización para empleados.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  Conclusión
&lt;/h2&gt;

&lt;p&gt;Esta es nuestra conclusión cuando se trata de elegir plataformas LMS de formación y monitorización. Como probablemente ya habrás notado, a pesar de tener muchas cosas en común como ser servicios en la nube fáciles de usar, cada uno de estos es un paquete de características, servicios y precios únicos.&lt;/p&gt;

&lt;p&gt;Nosotros te aconsejamos que uses las versiones de prueba gratuitas para ver cómo se adapta cada LMS a tus necesidades específicas y así encontrar la solución que mejor las satisfaga. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.ispring.es/blog/5-plataformas-lms-de-lanzamiento-rapido-para-la-gestion-y-seguimiento-de-capacitacion%20"&gt;Original source&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elearning</category>
    </item>
    <item>
      <title>WAO: How do you measure Developers?</title>
      <author>Nathan Kallman</author>
      <pubDate>Wed, 05 May 2021 14:48:18 +0000</pubDate>
      <link>https://dev.to/kallmanation/wao-how-do-you-measure-developers-1n8d</link>
      <guid>https://dev.to/kallmanation/wao-how-do-you-measure-developers-1n8d</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@michalmatlon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Michal Matlon&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/wrong-answer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#wrong-answers-only"&gt;
  &lt;/a&gt;
  Wrong Answers Only
&lt;/h1&gt;

&lt;p&gt;How do you measure a developer? How do you know that they're 10x or a ninja or a unicorn?&lt;/p&gt;




&lt;p&gt;Comment your wrong answer!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>wronganswersonly</category>
    </item>
    <item>
      <title>The Land Before Internet: How everyday computer terms got their names</title>
      <author>Matt Coady</author>
      <pubDate>Wed, 05 May 2021 14:28:34 +0000</pubDate>
      <link>https://dev.to/mattcoady/the-land-before-internet-how-everyday-computer-terms-got-their-names-3bm</link>
      <guid>https://dev.to/mattcoady/the-land-before-internet-how-everyday-computer-terms-got-their-names-3bm</guid>
      <description>&lt;p&gt;3 Years ago last month I made a simple tweet then went to bed.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVJmvoEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Dbj9s6TUQAE_VdD.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XNcoPMT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1092579771651842049/yPll15ZW_normal.jpg" alt="Matt Coady profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Matt Coady
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @themattcoady
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I've been working with HTML for about 20 years and just today I realized that Radio Buttons refer to actual radio buttons, where only one can be pressed at a time. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:38 PM - 24 Apr 2018
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=988819505534009344" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=988819505534009344" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=988819505534009344" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;It was one of those aha "I feel like an idiot for not making that obvious connection" moments... . &lt;/p&gt;

&lt;p&gt;Well as it turns out a lot of people felt the same way because I woke up to dozens of notifications. Years later, at 1.2 million impressions it's still my most active tweet (by a long shot). In the replies, twitter user "HTeuMeuLeu" followed up with this equally interesting bit of technology naming history:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oPMjLnDV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Dbo0pbiWkAErHPD.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5PP47bov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/876098522155712514/U5EX5vLT_normal.jpg" alt="HTeuMeuLeu profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        HTeuMeuLeu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @hteumeuleu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/themattcoady"&gt;@themattcoady&lt;/a&gt; Do you know about uppercase and lowercase? 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:16 PM - 25 Apr 2018
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=989161155716374528" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=989161155716374528" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=989161155716374528" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Referring to the 'case' of letters used by printing press operators and the upper part of the case and lower part of the case to store the letters. &lt;/p&gt;

&lt;p&gt;This got me thinking about what other terms have a long history hiding in plain sight. Wikipedia has a list dedicated to the subject: &lt;a href="https://en.wikipedia.org/wiki/List_of_computer_term_etymologies"&gt;https://en.wikipedia.org/wiki/List_of_computer_term_etymologies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm just going to pick out a few favourites:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cursor"&gt;
  &lt;/a&gt;
  Cursor
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rmznPqQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1flkdru1lmafh2wlqtag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rmznPqQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1flkdru1lmafh2wlqtag.jpg" alt="Cursor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cursor is Latin for 'runner.' A cursor is the name given to the transparent slide engraved with a hairline that is used for marking a point on a slide rule. The term was then transferred to computers through analogy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dashboard"&gt;
  &lt;/a&gt;
  Dashboard
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YHSW8uKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrejp8q62fzuufrbs668.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YHSW8uKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrejp8q62fzuufrbs668.png" alt="Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originally, the word dashboard applied to a barrier of wood or leather fixed at the front of a horse-drawn carriage or sleigh to protect the driver from mud or other debris "dashed up" (thrown up) by the horses' hooves.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#patch"&gt;
  &lt;/a&gt;
  Patch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tCiLB_u1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u1703l7w7of89mmens3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCiLB_u1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u1703l7w7of89mmens3.png" alt="Patch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Historically, software suppliers distributed patches on paper tape or on punched cards, expecting the recipient to cut out the indicated part of the original tape (or deck), and patch in (hence the name) the replacement segment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ping"&gt;
  &lt;/a&gt;
  Ping
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kx3aKrod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvl8bunm1ijlbfqrq0oi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kx3aKrod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvl8bunm1ijlbfqrq0oi.jpeg" alt="Ping"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The author of ping, Mike Muuss, named it after the pulses of sound made by a sonar called a "ping".&lt;/p&gt;

</description>
      <category>history</category>
      <category>etymology</category>
      <category>technology</category>
      <category>ui</category>
    </item>
    <item>
      <title>Announcing NubesGen, an Open Source tool to automate Azure deployments</title>
      <author>Julien Dubois</author>
      <pubDate>Wed, 05 May 2021 14:22:07 +0000</pubDate>
      <link>https://dev.to/azure/announcing-nubesgen-an-open-source-tool-to-automate-azure-deployments-1l4a</link>
      <guid>https://dev.to/azure/announcing-nubesgen-an-open-source-tool-to-automate-azure-deployments-1l4a</guid>
      <description>&lt;p&gt;&lt;strong&gt;Going to production on Azure is only one &lt;code&gt;git push&lt;/code&gt; away&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nubesgen"&gt;
  &lt;/a&gt;
  What is NubesGen?
&lt;/h2&gt;

&lt;p&gt;NubesGen &lt;a href="https://nubesgen.com/"&gt;https://nubesgen.com/&lt;/a&gt; is a Microsoft Open Source project, which provides a Web application that generates an Azure infrastructure graphically: you select easy-to-understand options ("an application server", "a PostgreSQL database"), and it'll generate a state-of-the-art Terraform configuration that you can import and tweak in your project.&lt;/p&gt;

&lt;p&gt;Using &lt;a href="https://github.com/microsoft/NubesGen/blob/main/docs/gitops-overview.md"&gt;GitOps practices&lt;/a&gt;, NubesGen can also fully automate applying that configuration: it provides one cloud infrastructure per branch in your project, and will build and deploy your code to this infrastructure.&lt;/p&gt;

&lt;p&gt;As a result, you can just &lt;code&gt;git push&lt;/code&gt; your code to Azure and both the infrastructure and the application deployment are handled for you. No need to go to the Azure portal, or learn how to configure everything!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-tour-of-nubesgen-in-less-than-15-minutes"&gt;
  &lt;/a&gt;
  Video tour of NubesGen, in less than 15 minutes
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BHAX8BIkP-s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-state-of-the-project"&gt;
  &lt;/a&gt;
  What is the state of the project?
&lt;/h2&gt;

&lt;p&gt;NubesGen is Open Source, and uses the &lt;a href="https://github.com/microsoft/NubesGen/blob/main/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's currently under development, but we already have a good number of people who tested it, which makes us confident to do a first technical preview release.&lt;/p&gt;

&lt;p&gt;You can already use it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is a running instance of the project at &lt;a href="https://nubesgen.com/"&gt;https://nubesgen.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The source code is available at &lt;a href="https://github.com/microsoft/nubesgen/"&gt;https://github.com/microsoft/nubesgen/&lt;/a&gt;, as well as pre-built packages and Docker images on our &lt;a href="https://github.com/microsoft/NubesGen/releases"&gt;release page&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributing-to-the-project"&gt;
  &lt;/a&gt;
  Contributing to the project
&lt;/h2&gt;

&lt;p&gt;Currently NubesGen supports Azure App Service and Azure Functions, as well as some of their most popular options (MySQL, PostgreSQL, Blob Storage, Redis, Cosmos DB, etc.). We're looking for feedback and contributions to improve this existing support first.&lt;/p&gt;

&lt;p&gt;Once we have a stable code base for those popular options, we'll then expand the number of supported services, with offers like Azure Kubernetes Services, Azure Spring Cloud, Azure Service Bus. So if you know any of those technologies and are willing to contribute, don't hesitate to ping us and join!&lt;/p&gt;

&lt;p&gt;And as any new project, we'll be delighted to count you as one of our stargazers at &lt;a href="https://github.com/microsoft/NubesGen/stargazers"&gt;https://github.com/microsoft/NubesGen/stargazers&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h2&gt;

&lt;p&gt;The best way to learn about NubesGen is to go to &lt;a href="https://nubesgen.com/"&gt;https://nubesgen.com/&lt;/a&gt; and use it!&lt;/p&gt;

</description>
      <category>azure</category>
      <category>terraform</category>
      <category>github</category>
      <category>docker</category>
    </item>
    <item>
      <title>Anotações Capítulo 1: Clean Code</title>
      <author>Jonilson Sousa</author>
      <pubDate>Wed, 05 May 2021 14:05:25 +0000</pubDate>
      <link>https://dev.to/jonilsonds9/anotacoes-capitulo-1-clean-code-4k79</link>
      <guid>https://dev.to/jonilsonds9/anotacoes-capitulo-1-clean-code-4k79</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sempre haverá um código!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Um código ruim sempre é ruim, pode nos atrasar, ou até mesmo acabar com uma empresa!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lei de LeBlanc: Nunca é tarde.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;O tempo gasto para limpar o código não é um desperdício e sim uma necessidade;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Atitude&lt;/strong&gt;: Programadores não devem ceder a vontade dos gerentes para fazer um código ruim.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;O principal dilema&lt;/strong&gt;: Bagunças antigas reduzem o tempo e mesmo assim são feitas para cumprir o tempo.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;A arte do código limpo&lt;/strong&gt;: &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Podemos saber o que é um código ruim, mas é difícil saber como transformar esse código ruim em um código bom.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A “sensibilidade ao código” (“code-sense”) ajuda a escolher a melhor alternativa para proteger o código de alterações futuras;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-um-c%C3%B3digo-limpo"&gt;
  &lt;/a&gt;
  O que é um código Limpo?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#bjarne-stroustrup"&gt;
  &lt;/a&gt;
  Bjarne Stroustrup:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Código natural, que possamos ler com naturalidade;&lt;/li&gt;
&lt;li&gt;Que não incita o crescimento do caos;&lt;/li&gt;
&lt;li&gt;Um código limpo requer bastante atenção aos detalhes;&lt;/li&gt;
&lt;li&gt;“Um código limpo faz bem apenas uma coisa”.
## Grady Booch:&lt;/li&gt;
&lt;li&gt;“Ler um código limpo deve ser como ler uma conversa bem escrita”;&lt;/li&gt;
&lt;li&gt;Um código limpo deve ser “claro”, ou seja direto, decisivo sem desvios ou detalhes desnecessários, portanto deve conter apenas o necessário.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dave-thomas"&gt;
  &lt;/a&gt;
  Dave Thomas:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“Um código limpa facilita para que outras pessoas o melhorem”;&lt;/li&gt;
&lt;li&gt;Um código sem testes não está limpo, não importa o quão elegante e legível ele seja.&lt;/li&gt;
&lt;li&gt;Um código limpo é pequeno, assim quanto menor, melhor!&lt;/li&gt;
&lt;li&gt;Deve ser fácil para os seres humanos entender!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#michael-feathers"&gt;
  &lt;/a&gt;
  Michael Feathers:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Um código limpo foi bem cuidado por alguém.&lt;/li&gt;
&lt;li&gt;Alguém manteve o código simples e organizado.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ron-jeffries"&gt;
  &lt;/a&gt;
  Ron Jeffries:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Código limpo: Sem duplicação, uma tarefa, expressividade (nomes), pequenas abstrações.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ward-cunnigham"&gt;
  &lt;/a&gt;
  Ward Cunnigham:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;O código limpo é óbvio, simples e convincente;&lt;/li&gt;
&lt;li&gt;Tudo está onde esperamos que esteja;&lt;/li&gt;
&lt;li&gt;É nossa responsabilidade fazer a linguagem parecer simples;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#escolas-de-pensamento"&gt;
  &lt;/a&gt;
  Escolas de pensamento:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Para Bob, o código limpo é várias coisas, pegando partes do que os outros acima já falaram, como nomes limpos de variáveis, funções limpas, classes limpas e etc.&lt;/li&gt;
&lt;li&gt;Nenhuma escola ou conceito está 100% certo, mas para aqueles que a seguem é uma certeza, por isso diversificar é o ideal, não ficar apenas com uma única escola ou abordagem mas várias.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#somos-autores"&gt;
  &lt;/a&gt;
  Somos Autores:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Escrevemos para outras pessoas através do código, e outros vão ler, e precisam entender, por isso o código deve ser de fácil leitura. Devemos sempre tornar o código de fácil leitura, isso vai fazer com que possamos fazer o código mais rápido e outros que vão usar o código futuramente também.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-regra-do-escoteiro"&gt;
  &lt;/a&gt;
  A regra do escoteiro:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;“Não basta escrever um código bom. Ele precisa ser mantido sempre limpo”.&lt;/li&gt;
&lt;li&gt;“Devemos deixar o código mais simples do que quando encontramos”.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>books</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Picture perfect image optimization for any web framework</title>
      <author>Ben Holmes</author>
      <pubDate>Wed, 05 May 2021 14:03:35 +0000</pubDate>
      <link>https://dev.to/bholmesdev/picture-perfect-image-optimization-for-any-web-framework-2o77</link>
      <guid>https://dev.to/bholmesdev/picture-perfect-image-optimization-for-any-web-framework-2o77</guid>
      <description>&lt;p&gt;💁 &lt;strong&gt;Intended audience:&lt;/strong&gt; &lt;em&gt;This is meant for developers building "template-driven"  static sites (11ty, Jekyll, Hugo, plain HTML) or "component-driven" web apps (NextJS, Gatsby, etc). If you're working with site builders like Wordpress or Shopify, this probably isn't the article for you!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you've been building websites for a while, "optimize your images" probably sounds like "eat your veggies." It's good for your website's health, it'll make your SEO big and strong... but that &lt;code&gt;.webp&lt;/code&gt; broccoli doesn't sound appetizing to me 🤢&lt;/p&gt;

&lt;p&gt;What we need are some "easy wins." Some cheese to melt over that beautifully compressed brussel sprouts. So let's explore:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;🥦 (Briefly) Why you should care about those pesky 4K images&lt;/li&gt;
&lt;li&gt;🌅 How the &lt;code&gt;picture&lt;/code&gt; element can change your optimization game&lt;/li&gt;
&lt;li&gt;🔨 A helpful 11ty script you can add to your static site generator of choice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Onwards!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-wrong-with-my-images-right-now"&gt;
  &lt;/a&gt;
  🥦 So what's wrong with my images right now?
&lt;/h2&gt;

&lt;p&gt;Before getting into the tips, let me remind you have just how badly images can hurt the performance of your website. Here's a lighthouse rating from one of my recent blog posts (images compressed with &lt;a href="https://tinyjpg.com/"&gt;tinyJPG&lt;/a&gt; mind you!)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TRn7Uyuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-opt-bad-lighthouse-score.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TRn7Uyuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-opt-bad-lighthouse-score.png" alt="List of poor image loadtimes from Chromium Lighthouse performance report"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Yikes!&lt;/em&gt; 10 seconds to grab all those images? Chromium definitely does some throttling to test on "slower" internet connections, but it's clear those KB rating are quite high (especially for mobile users).&lt;/p&gt;

&lt;p&gt;This just to show that &lt;strong&gt;there's much more to image optimization than compression!&lt;/strong&gt; There's also:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Serving the right format,&lt;/strong&gt; with JPGs preferrable and &lt;code&gt;.webp&lt;/code&gt; or &lt;code&gt;.avi&lt;/code&gt; &lt;em&gt;especially&lt;/em&gt; so&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Serving the right size,&lt;/strong&gt; ideally with &lt;em&gt;multiple copies&lt;/em&gt; of the same image at different widths and heights&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Loading at the right time,&lt;/strong&gt; reaching for "lazy" loading when we can&lt;/li&gt;
&lt;li&gt;Heck, even &lt;strong&gt;including &lt;code&gt;alt&lt;/code&gt; text&lt;/strong&gt; can affect your site from both accessibility and SEO standpoints! &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I learned a bit about addressing those format and size problems using &lt;code&gt;picture&lt;/code&gt; elements, and my lighthouse definitely thanked me for it 😄&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uul7oXYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EyK4-JjWQAIWHWf.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKQCujW1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1131721513026170883/kvrKqlHc_normal.png" alt="Ben Holmes profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ben Holmes
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/bholmesdev"&gt;@bholmesdev&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Dang, at first my performance on &lt;a href="https://t.co/iTZUPe5aBp"&gt;bholmes.dev&lt;/a&gt; was getting destroyed by a *ton* of fat JPGs I never condensed down (especially on blog posts). Installed &lt;a href="https://twitter.com/eleven_ty"&gt;@eleven_ty&lt;/a&gt; 's image plugin, put in an hour of work... and just look at it 🤩 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:37 AM - 05 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1378869249930842116" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1378869249930842116" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1378869249930842116" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#fixing-format-size-problems-with-the-raw-picture-endraw-element"&gt;
  &lt;/a&gt;
  🌅 Fixing format + size problems with the &lt;code&gt;picture&lt;/code&gt; element
&lt;/h2&gt;

&lt;p&gt;So how can we deliver different image files for the right people? Well, let's start with a humble image element like this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/mega-chonker.jpg"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Refer to &lt;a href="https://i.kym-cdn.com/photos/images/original/001/417/621/d9f.jpg"&gt;this handy chart&lt;/a&gt; for understanding "chonk" levels&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, say we've opened our image editor and saved a smaller version for mobile users sitting at, say, 600 pixels wide. You could probably set up some CSS to hot-swap your images depending on your screen width:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"desktop"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-1000w.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mobile"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600w.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.desktop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;601px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.mobile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...But this isn't very scalable. What if we're, say, working in a markdown file where we can't append class names? Or we have different formats we want to switch between depending on browser support (JPEG vs WEBP for example)?&lt;/p&gt;

&lt;p&gt;This is where the &lt;code&gt;picture&lt;/code&gt; element comes in. Take this example here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- List out all the WEBP images + WEBP sizes we can choose from --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600w.webp 600w, /assets/chonker-1000w.webp 1000w"&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- In case a browser doesn't support WEBP, fall back to this set of JPG sources --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600w.jpg 600w, /assets/chonker-1000w.jpg 1000w"&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- The actual, style-able img element that "receives" these sources --&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Also includes a default src in case no &amp;lt;source&amp;gt; can be applied --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Some big takeaways:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We can wrap our image tags in a &lt;code&gt;picture&lt;/code&gt; to unlock a "switch" case of sorts, with your browser picking the first &lt;code&gt;source&lt;/code&gt; element that it's able to render. But admittedly, &lt;em&gt;most&lt;/em&gt; modern browsers will reach for those shiny &lt;code&gt;.webp&lt;/code&gt; files listed under &lt;code&gt;type="image/webp"&lt;/code&gt; without needing the JPG fallbacks (&lt;a href="https://caniuse.com/?search=webp"&gt;current browser support here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Each source has a &lt;strong&gt;&lt;code&gt;srcset&lt;/code&gt; property&lt;/strong&gt;, which takes in a list of source URLs for a given image format. These sources are comma-separated, plus a pixel-value width using that &lt;code&gt;w&lt;/code&gt; on the end. The browser will then decide which source to use based on the &lt;code&gt;sizes&lt;/code&gt; property (more on that in the next section)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Picture elements are not images themselves!&lt;/strong&gt; This is an interesting gotcha when you start trying to style those images. So, you'll want to keep putting all your image-specific CSS (ex. &lt;code&gt;object-fit&lt;/code&gt;) on that &lt;code&gt;img&lt;/code&gt; element instead of the &lt;code&gt;picture&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-sizes-endraw-attribute"&gt;
  &lt;/a&gt;
  The &lt;code&gt;sizes&lt;/code&gt; attribute
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Sizes&lt;/code&gt; is an interesting beast. It &lt;em&gt;almost&lt;/em&gt; looks like CSS actually, with some small syntax differences.&lt;/p&gt;

&lt;p&gt;Remember those &lt;code&gt;mobile&lt;/code&gt; and &lt;code&gt;desktop&lt;/code&gt; helper classes from earlier? Well, &lt;code&gt;sizes&lt;/code&gt; let us do something rather similar. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/uGiG2VWkeSs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key takeaways from the video:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In general, the &lt;code&gt;sizes&lt;/code&gt; attribute is a way to tell the browser &lt;strong&gt;which image to use for a given screen size.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's say we have a banner image that takes up the full width of the screen for mobile users, but we have a table of contents that takes up half the width at &lt;code&gt;500px&lt;/code&gt; wide and above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pgi6oY_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-sizes-table-of-contents-demo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pgi6oY_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-sizes-table-of-contents-demo.png" alt="Table of contents taking up half the width of the screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Putting on our CSS hat, this means our image is &lt;code&gt;100vw&lt;/code&gt; (100% screen width) below &lt;code&gt;500px&lt;/code&gt;, and &lt;code&gt;50vw&lt;/code&gt; when we hit &lt;code&gt;@media (min-width: 500px)&lt;/code&gt;. This perfectly translates to &lt;code&gt;sizes&lt;/code&gt; 👉 &lt;code&gt;sizes="(min-width: 500px) 50vw, 100vw"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And in the context of a &lt;code&gt;picture&lt;/code&gt; element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!--stack up your media queries as sizes, delineated by commas ","--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-600.webp 600w, /img/6dfd7ac6-900.webp 900w..."&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(min-width: 500px) 50vw, 100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Blue and purple cluster of stars"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-600.jpeg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As a rule-of-thumb, you should probably use &lt;code&gt;100vw&lt;/code&gt; as a "base case" for smaller devices, and rack up media queries on top depending on how your layout changes. This does mean &lt;code&gt;sizes&lt;/code&gt; will be different depending on the &lt;em&gt;context&lt;/em&gt; your images are living in, so look out for that if you're using a component-based framework!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may be wondering why browsers can't do all this work for us. Well, this comes down to the unpredictable nature of "width" when you're throwing around CSS everywhere. If you're like me, you tend to use a lot of percentages like &lt;code&gt;width: 100%&lt;/code&gt; for image blocks, which may adjust depending on the container, padding, margins, etc that get applied. If the browser tried to decipher all this styling before loading an image, you'd be waiting a lot longer than you might want!&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#respecting-hd-displays"&gt;
  &lt;/a&gt;
  Respecting HD displays
&lt;/h3&gt;

&lt;p&gt;Note that our screen's pixel density can also affect which image gets picked from a given &lt;code&gt;srcset&lt;/code&gt;. For high-density mobile displays, it'll actually choose an image that's &lt;strong&gt;roughly double&lt;/strong&gt; the width you specify! Say we have a simple &lt;code&gt;picture&lt;/code&gt; declaration like this for instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/galaxy-600.webp 600w, /img/galaxy-1200.webp 1200w"&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're using &lt;code&gt;100vw&lt;/code&gt; here, so the browser should match the image source's width to the width of the display. Intuitively, we'd think that a &lt;code&gt;600px&lt;/code&gt; wide display would receive &lt;code&gt;/img/galaxy-600.webp&lt;/code&gt;... but for HD displays like Macbooks or modern smartphones, it'll actually reach for an image at 600 x 2 pixels wide (&lt;code&gt;/img/galaxy-1200.webp 1200w&lt;/code&gt; in this case). So when you're generating multiple image sizes, always reach for those higher values 💡&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applying-this-to-your-site-with-11ty-image"&gt;
  &lt;/a&gt;
  🔨 Applying this to your site with 11ty image
&lt;/h2&gt;

&lt;p&gt;Alright, so we see how useful the &lt;code&gt;picture&lt;/code&gt; element can be... but it's only as powerful as the pictures we can supply to it. Do we really want to create all those beautifully resized, optimized, multi-format images &lt;em&gt;by hand?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Luckily, there's a lot of tools to handle this process for us, and I'm going to hone in on the simplest I've found: &lt;a href="https://www.11ty.dev/docs/plugins/image/#output-directory"&gt;11ty's image plugin.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🚨 Now before you start scrolling to the next section, &lt;strong&gt;no, you don't need to build your site with 11ty to use this.&lt;/strong&gt; Playing around with this tool, I realized it's perfect for generating optimized images on-the-fly for &lt;em&gt;any&lt;/em&gt; use case, no command line prowess required 🔥 &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-optimized-images"&gt;
  &lt;/a&gt;
  Generating optimized images
&lt;/h3&gt;

&lt;p&gt;Let's play along at home! Seriously, drop everything and go open your code editor 🧑‍💻 Then, make a fresh directory / folder and create a basic &lt;code&gt;package.json&lt;/code&gt;. We'll be installing the &lt;code&gt;@11ty/eleventy-img&lt;/code&gt; dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;woah-11ty-image-is-cool &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;woah-11ty-image-is-cool
npm init &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="c"&gt;# Make a package.json with defaults for everything&lt;/span&gt;
npm i @11ty/eleventy-img
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now make a random JavaScript file for us to play with (I'll call mine &lt;code&gt;image-generator.js&lt;/code&gt;). Inside, just paste the example code at the top of &lt;a href="https://www.11ty.dev/docs/plugins/image/#output-directory"&gt;11ty's documentation&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@11ty/eleventy-img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://images.unsplash.com/photo-1608178398319-48f814d0750c&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hm, this looks pretty straightforward. Let's run it from our terminal and see what happens:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node ./image-generator.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With any luck, you should see a couple new faces appear:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A &lt;code&gt;/img&lt;/code&gt; directory&lt;/strong&gt; with 2 images inside: 1 JPG picture of a galaxy that's 300 pixels wide, and a matching &lt;code&gt;webp&lt;/code&gt; image of the same size. Notice how this matches up with our &lt;code&gt;widths&lt;/code&gt; array from the code snippet 👀&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A &lt;code&gt;/cache&lt;/code&gt; directory&lt;/strong&gt; with some strings of characters. Think of this like a note-to-self for the plugin about the image we downloaded. It's expensive to download images off the internet, so to avoid loading it &lt;em&gt;every time we run the script,&lt;/em&gt; 11ty checks the cache to see if we've already loaded the image in the past 👍&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You'll also see a &lt;a href="https://www.11ty.dev/docs/plugins/image/#usage"&gt;blob of "stats"&lt;/a&gt; logged to your console. Most of these properties are self-explanatory, and some should look familiar from our &lt;code&gt;picture&lt;/code&gt; walkthrough earlier on (namely the &lt;code&gt;sourceType&lt;/code&gt; and &lt;code&gt;srcset&lt;/code&gt; attributes). We even get the output &lt;code&gt;size&lt;/code&gt; of the image in bytes, in case you want to inspect the differences between formats and sizes.&lt;/p&gt;

&lt;p&gt;But wait, there's more! Let's try experimenting with different widths and formats:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1400&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;formats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gif&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should get a plethora of resolutions inside that &lt;code&gt;img&lt;/code&gt; directory. As you can imagine, this is perfect for our picture element from earlier. You can whip up all the &lt;code&gt;source&lt;/code&gt;s and &lt;code&gt;size&lt;/code&gt; attributes by hand as a learning exercise...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automating-our-picture-elements"&gt;
  &lt;/a&gt;
  Automating our picture elements
&lt;/h3&gt;

&lt;p&gt;...Or let the plugin do this for us! Along with that handy array of &lt;code&gt;stats&lt;/code&gt;, 11ty image will splice everything into a valid &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element. All we need is a call to the &lt;code&gt;generateHTML&lt;/code&gt; helper:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@11ty/eleventy-img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://images.unsplash.com/photo-1608178398319-48f814d0750c&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1400&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A blue and purple galaxy of stars&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// alt text is required!&lt;/span&gt;
    &lt;span class="na"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100vw&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// remember our training with "sizes" from earlier...&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With any luck, we should see a beautiful &lt;code&gt;picture&lt;/code&gt; we can use anywhere on our site:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
          &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-300.webp 300w, /img/6dfd7ac6-1000.webp 1000w,
                  /img/6dfd7ac6-1400.webp 1400w"&lt;/span&gt;
          &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt;
          &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-300.jpeg 300w, /img/6dfd7ac6-1000.jpeg 1000w,
                  /img/6dfd7ac6-1400.jpeg 1400w"&lt;/span&gt;
          &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A blue and purple galaxy of stars"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-300.jpeg"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1400"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1402"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#going-further"&gt;
  &lt;/a&gt;
  Going further
&lt;/h3&gt;

&lt;p&gt;This plugin has a whole host of extra options to explore too, like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.11ty.dev/docs/plugins/image/#caching-remote-images-locally-new-in-image-0.3.0"&gt;messing with cache options&lt;/a&gt; for faster build times&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.11ty.dev/docs/plugins/image/#synchronous-usage"&gt;generating image stats + picture elements synchronously&lt;/a&gt;, so you don't have wait for the images to &lt;em&gt;actually&lt;/em&gt; get generated&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.11ty.dev/docs/plugins/image/#advanced-control-of-sharp-image-processor"&gt;fine-tuning the Sharp image processor&lt;/a&gt; to tweak the output to your needs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-11ty-image-with-any-framework"&gt;
  &lt;/a&gt;
  📣 Using 11ty image with any framework
&lt;/h2&gt;

&lt;p&gt;If all this &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; madness excites you, go throw this 11ty image plugin at your own &lt;code&gt;/assets&lt;/code&gt; directory! I wrote this handy little script to crawl all the images in a directory (&lt;a href="https://coderrocketfuel.com/article/recursively-list-all-the-files-in-a-directory-using-node-js"&gt;not recursively mind you&lt;/a&gt;) and spit out some optimized files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@11ty/eleventy-img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readdir&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs/promises&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// node helper for reading folders&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;parse&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// node helper for grabbing file names&lt;/span&gt;

&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./images&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// match this to your assets directory&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageDir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1400&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// edit to your heart's content&lt;/span&gt;
      &lt;span class="na"&gt;filenameFormat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// make the filename something we can recognize.&lt;/span&gt;
        &lt;span class="c1"&gt;// In this case, it's just:&lt;/span&gt;
        &lt;span class="c1"&gt;// [original file name] - [image width] . [file format]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// remove this if you don't want the logs&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you &lt;em&gt;happen&lt;/em&gt; to use 11ty on your personal site (or at least want to try), you can automate the &lt;code&gt;picture&lt;/code&gt; element insertion as well. &lt;a href="https://www.11ty.dev/docs/plugins/image/#use-this-in-your-templates"&gt;Their guide&lt;/a&gt; covers building your own "shortcode" function to insert the right &lt;code&gt;picture&lt;/code&gt; for every unoptimized image on your site.&lt;/p&gt;

&lt;p&gt;Even without this luxury though, this script is a great addition to any JS-based build step. Here's a basic &lt;code&gt;Image&lt;/code&gt; component I could slap into any React app based on that script above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// consider using TypeScript for checking all these props!&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;imageProps&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;picture&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
        &lt;span class="na"&gt;srcSet&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-600.webp 600w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1000.webp 1000w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1400.webp 1400w`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt;
        &lt;span class="na"&gt;srcSet&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-600.jpeg 600w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1000.jpeg 1000w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1400.jpeg 1400w`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-600.jpeg`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;imageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;picture&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Assuming all my images get generated with this file naming convention (and I always have images at 600, 1000, and 1400 widths), this should pull all our optimized images no problem 👍&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's a brief rundown&lt;/strong&gt; on applying these learnings to &lt;code&gt;create-react-app&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RAzXB-qu22s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-try-it-yourself"&gt;
  &lt;/a&gt;
  Go try it yourself
&lt;/h3&gt;

&lt;p&gt;You can check out a running example of &lt;code&gt;create-react-app&lt;/code&gt; + 11ty image in &lt;a href="https://codesandbox.io/s/little-tree-dmr1w?file=/App.js"&gt;&lt;strong&gt;this CodeSandbox&lt;/strong&gt;&lt;/a&gt; 🪄&lt;/p&gt;

&lt;p&gt;This version will listen for new images during development as well. Feel free to &lt;a href="https://github.com/Holben888/create-react-app-with-11ty-image"&gt;fork the source code&lt;/a&gt; to try in your own project (and find the edge cases I inevitably missed 😉).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-options-for-next-nuxt-gatsby-and-more"&gt;
  &lt;/a&gt;
  Other options for Next, Nuxt, Gatsby and more
&lt;/h3&gt;

&lt;p&gt;As cool as 11ty image can be, I should definitely highlight some "native" options for popular meta-frameworks: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;For Next, &lt;a href="https://nextjs.org/docs/api-reference/next/image"&gt;their built-in Image component&lt;/a&gt; is perfect.&lt;/strong&gt; They'll also cover our sizes, formats, and image compression automatically, plus some neat props for eagerly loading images that are "above the fold" using &lt;code&gt;priority&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;For Nuxt, &lt;a href="https://image.nuxtjs.org/components/nuxt-img/"&gt;their &lt;code&gt;&amp;lt;nuxt-img&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;nuxt-picture&amp;gt;&lt;/code&gt; components&lt;/a&gt; should have you covered.&lt;/strong&gt; These offer most of the same benefits as our 11ty image plugin, letting you specify different formats, a &lt;code&gt;sizes&lt;/code&gt; attribute, and background image compression. Just be sure to use &lt;code&gt;nuxt-picture&lt;/code&gt; if you want to allow multiple image formats instead of just one!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;For Gatsby, &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-image"&gt;you've got the gold standard of image optimization&lt;/a&gt; 🏆&lt;/strong&gt; Their image plugin was actually my main reason for using the framework a few years back, and it's only gotten better. The nicest feature (beyond matching everything we've talked about) is their loading animations for images. You can fade in over vector traces of an image, use a blur effect, and a lot more. The only downside is the hefty JS bundle it loads into the browser to pull this off, which I've &lt;a href="https://bholmes.dev/blog/before-building-your-next-static-site-with-react-consider-this/"&gt;given my opinions on over here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Beyond the framework, you can &lt;a href="https://davidwalsh.name/image-optimization-cloudinary"&gt;optimize remotely using something like Cloudinary&lt;/a&gt;.&lt;/strong&gt; This is a great option if you don't own the build process for your website, or don't want to store your images inside your code repository. For example, you can point all your Wordpress images to a cloudinary bucket and pull different image widths and formats for there. The only downside is the cost, since Cloudinary is doing all this image processing and storage for you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#learn-a-little-something"&gt;
  &lt;/a&gt;
  Learn a little something?
&lt;/h2&gt;

&lt;p&gt;Groovy. In case you missed it, I launched an &lt;a href="https://tinyletter.com/bholmesdev"&gt;my "web wizardry" newsletter&lt;/a&gt; to explore more knowledge nuggets like this!&lt;/p&gt;

&lt;p&gt;This thing tackles the &lt;a href="https://www.swyx.io/first-principles-approach/"&gt;"first principles"&lt;/a&gt; of web development. In other words, what are all the janky browser APIs, bent CSS rules, and semi-accessible HTML that make all our web projects tick? If you're looking to go &lt;em&gt;beyond the framework&lt;/em&gt;, this one's for you dear web sorcerer 🔮&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tinyletter.com/bholmesdev"&gt;Subscribe away right here&lt;/a&gt;. I promise to always teach and never spam ❤️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>eleventy</category>
    </item>
    <item>
      <title>StorybookJS: Tips &amp; Tricks</title>
      <author>David Dal Busco</author>
      <pubDate>Wed, 05 May 2021 13:56:42 +0000</pubDate>
      <link>https://dev.to/daviddalbusco/storybookjs-tips-tricks-2h0j</link>
      <guid>https://dev.to/daviddalbusco/storybookjs-tips-tricks-2h0j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yYem5lVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A0yBFNNJGxc4vkhEPgV21aA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yYem5lVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A0yBFNNJGxc4vkhEPgV21aA.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@florenciaviadana?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Florencia Viadana&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/books?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I just migrated the &lt;a href="https://docs.deckdeckgo.com"&gt;documentation&lt;/a&gt; of DeckDeckGo to &lt;a href="https://storybook.js.org/"&gt;StorybookJS&lt;/a&gt;. More than its ability to simplify building and testing, I like to use it for documentation purpose because it allows me to integrate the README.md files that &lt;a href="https://stenciljs.com/"&gt;StencilJS&lt;/a&gt; generates automatically. Sparring steps between code and documentation is the best don’t you think?&lt;/p&gt;

&lt;p&gt;Here are a couple of tips &amp;amp; tricks I reused, or discovered, along the process.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#import-markdown-files-into-storybookjs"&gt;
  &lt;/a&gt;
  Import Markdown Files Into StorybookJS
&lt;/h3&gt;

&lt;p&gt;One particularly cool feature of StencilJS is that, out of the box, it auto-generates &lt;code&gt;readme.md&lt;/code&gt; files in markdown from the code’s comments. Isn’t that neat?&lt;/p&gt;

&lt;p&gt;I think it is. Therefore, to even push to concept further, I set up StorybookJS to import these Markdown files as Docs only pages. In that way, the documentation remains and, is edited as close as possible of the code and delivered to the end user without any interruption.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#meta"&gt;
  &lt;/a&gt;
  Meta
&lt;/h4&gt;

&lt;p&gt;At the time of writing the StorybookJS issue &lt;a href="https://github.com/storybookjs/storybook/issues/11981"&gt;#11981&lt;/a&gt; list miscellaneous solutions, including using the &lt;code&gt;transcludeMarkdown&lt;/code&gt; settings or raw loader. If following solution does not suit you, try one of these.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#limitation"&gt;
  &lt;/a&gt;
  Limitation
&lt;/h4&gt;

&lt;p&gt;Even though it works very well, I did not manage to highlight the block of codes displayed in the pages and imported from Markdown files. I &lt;a href="https://github.com/storybookjs/storybook/issues/11981#issuecomment-830158237"&gt;commented&lt;/a&gt; the issue accordingly.&lt;/p&gt;

&lt;p&gt;If you manage to solve this, let me now or, even better, send me a &lt;a href="https://github.com/deckgo/deckdeckgo/"&gt;Pull Request&lt;/a&gt; on GitHub 😉.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h4&gt;

&lt;p&gt;I am using the HTML version of Storybook, I handle my stories in &lt;code&gt;.js&lt;/code&gt; files as for example in a &lt;code&gt;Text.stories.js&lt;/code&gt; in which I document a paragraph that accepts a background color as argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Components/Text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p style="background: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;"&amp;gt;
    Hello World
  &amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#FF6900&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;According &lt;a href="https://storybook.js.org/docs/react/writing-docs/docs-page"&gt;StorybookJS&lt;/a&gt;, we can replace the DocsPage template on a Component-Level to showcase our own documentation with MDX docs or a custom component. That’s why, next to our story we create a new file &lt;code&gt;Text.mdx&lt;/code&gt; , which we import and provide as &lt;code&gt;page&lt;/code&gt; to our story.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Doc&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Text.mdx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Components/Text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Doc&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p style="background: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;"&amp;gt;
    Hello World
  &amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#FF6900&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, in our &lt;code&gt;.mdx&lt;/code&gt; file, we import our &lt;code&gt;README.md&lt;/code&gt; file (or any other Markdown files) and, we remix the DocsPage with a custom documentation, using the basic Storybook &lt;code&gt;Description&lt;/code&gt; block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@storybook/addon-docs/blocks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;readme&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./readme.md&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Description&lt;/span&gt; &lt;span class="nx"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;readme&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s it, the Markdown file is integrated as Docs pages in StorybookJS 🥳.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#use-a-cdn-to-load-dependencies"&gt;
  &lt;/a&gt;
  Use A CDN To Load Dependencies
&lt;/h4&gt;

&lt;p&gt;Not sure anyone would ever had that requirements but, if like me, you would need to load dependencies from a CDN, here’s the trick: add your &lt;code&gt;script&lt;/code&gt; to &lt;code&gt;./storybook/preview-head.html&lt;/code&gt; . It will be evaluated with your stories.&lt;/p&gt;

&lt;p&gt;Likewise, if you would like to define some &lt;code&gt;style&lt;/code&gt; or load a specific Google Font for your components, you can modify the same file as well.&lt;/p&gt;

&lt;p&gt;Some examples taken from my &lt;a href="https://github.com/deckgo/deckdeckgo/blob/main/docs/.storybook/preview-head.html"&gt;preview-head.html&lt;/a&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=JetBrains+Mono&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/@deckdeckgo/color@latest/dist/deckdeckgo-color/deckdeckgo-color.esm.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.prismjs&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#sort-stories"&gt;
  &lt;/a&gt;
  Sort Stories
&lt;/h4&gt;

&lt;p&gt;A specific order for the stories can be defined in &lt;code&gt;./storybook/preview.js&lt;/code&gt; using the property &lt;code&gt;storySort&lt;/code&gt;. Each chapter have to be provided as &lt;code&gt;string&lt;/code&gt; and their list of stories as an &lt;code&gt;array&lt;/code&gt; .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;argTypesRegex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^on[A-Z].*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;storySort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Introduction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Introduction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Getting Started&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Edit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;HTML&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lazy Loading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;theme&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The names should match these provided as &lt;code&gt;title&lt;/code&gt; in the stories.&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;MDX&lt;/code&gt; using &lt;code&gt;meta&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@storybook/addon-docs/blocks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Meta&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Introduction/Getting Started&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With &lt;code&gt;JS&lt;/code&gt; through the default &lt;code&gt;title&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Components/Lazy Image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;imgSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://stenciljs.com/"&gt;StencilJS&lt;/a&gt; + &lt;a href="https://storybook.js.org/"&gt;StorybookJS&lt;/a&gt; = Awesome 💪&lt;/p&gt;

&lt;p&gt;To infinity and beyond!&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;




&lt;p&gt;You can reach me on &lt;a href="https://twitter.com/daviddalbusco"&gt;Twitter&lt;/a&gt; or my &lt;a href="https://daviddalbusco.com"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Give a try to &lt;a href="https://deckdeckgo.com/"&gt;DeckDeckGo&lt;/a&gt; for your next slides!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://deckdeckgo.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q4yatxfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://deckdeckgo.com/assets/meta/deckdeckgo-meta.png" alt="DeckDeckGo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>storybook</category>
      <category>webdev</category>
      <category>webcomponents</category>
    </item>
    <item>
      <title>Awesome Button Hover Using CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Wed, 05 May 2021 13:25:48 +0000</pubDate>
      <link>https://dev.to/nikhil27b/awesome-button-hover-using-css-4dn7</link>
      <guid>https://dev.to/nikhil27b/awesome-button-hover-using-css-4dn7</guid>
      <description>&lt;p&gt;Today I created a Simple Button Hover Effect Like Accenture Using HTML &amp;amp; CSS. this hover effect is simple but it looks amazing when you hover on the button then box-shadow comes in the background also transform the button position. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/WNpeqmJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>GPT-3 and CSS Frameworks</title>
      <author>Vladimir Carrer</author>
      <pubDate>Wed, 05 May 2021 13:17:54 +0000</pubDate>
      <link>https://dev.to/vladocar/gpt-3-and-css-frameworks-2fpm</link>
      <guid>https://dev.to/vladocar/gpt-3-and-css-frameworks-2fpm</guid>
      <description>&lt;p&gt;Recently I gained access to the OpenAI GPT-3 API. I tried different things like content creation, code translation and other experiments. One of the amazing things of GPT-3 is the capacity to learn from simple textual examples.&lt;/p&gt;

&lt;p&gt;Programming is one of the most complex and problem solving tasks. But I wasn’t interested in training GPT-3 to program. For me it was more interesting how GPT-3 can speed up some boring repetitive code creation.&lt;/p&gt;

&lt;p&gt;GPT-3 works great with well structured code that has clear naming logic. I tried to train it to generate layout HTML with clear class syntax. &lt;/p&gt;

&lt;p&gt;I used my Smart CSS Grid Framework because it has simple naming logic. CSS Classes are named from one to twelve because it is a 12 grid system. &lt;/p&gt;

&lt;p&gt;The logic is the total of each row should be always 12 or something like this 3 + 3 + 4 + 2 = 12&lt;/p&gt;

&lt;p&gt;The idea was, when I write something like this: &lt;/p&gt;

&lt;p&gt;3 | 3 | 6 &lt;/p&gt;

&lt;p&gt;To receive something like this:&lt;/p&gt;

&lt;p&gt;After a couple examples GPT-3 started to work almost perfectly even with more complex layouts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BTEqZMmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3a4on98gs3mj4hrxbju.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BTEqZMmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3a4on98gs3mj4hrxbju.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the text I used to train GPT-3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;text: 4 | 4 | 4
code: &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 3 | 3 | 3
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt;

text: 2 | 2 | 2 | 6
code: &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="six"&amp;gt; 

text: 3 | 2 | 4 | 3
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 4 | 3 | 4 | 8
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="eight"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 4 | 2 | 2 | 8
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="eight"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 9 | 
4 | 4 | 12 | 
5 | 2 | 4
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="nine"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="twelve"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="five"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 9 | 
4 | 4 | 11 | 
5 | 2 | 4
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="nine"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="eleven"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="five"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt;

text:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Important to keep the “temperature” to 0, we don’t want GPT-3 to be creative. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5jA-gZIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8hnox1bdq7xfweoyr6f.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5jA-gZIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8hnox1bdq7xfweoyr6f.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a super simple example of how GPT-3 can be used to generate repetitive HTML code. Basically all CSS Frameworks follow certain rules that can be easily used for GPT-3 training.&lt;/p&gt;

</description>
      <category>gpt3</category>
      <category>css</category>
      <category>webdev</category>
      <category>machinelearning</category>
    </item>
  </channel>
</rss>
