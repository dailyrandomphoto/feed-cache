<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to make a Nuxt.Js application SEO friendly</title>
      <author>David Emaye</author>
      <pubDate>Fri, 31 Dec 2021 22:34:51 +0000</pubDate>
      <link>https://dev.to/davidemaye/how-to-make-a-nuxtjs-application-seo-friendly-132a</link>
      <guid>https://dev.to/davidemaye/how-to-make-a-nuxtjs-application-seo-friendly-132a</guid>
      <description>&lt;p&gt;If you want to use Nuxt.js for your web application's quick and responsive UI, you need also know how to use Nuxt.js to create an SEO-friendly application. In this article, we'll look at how we can improve the SEO performance of our Nuxtjs website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-seo"&gt;
  &lt;/a&gt;
  What is SEO
&lt;/h2&gt;

&lt;p&gt;SEO (Search Engine Optimization) is the process of taking efforts to improve the ranking of a website or piece of content on Google.&lt;br&gt;
The main distinction between SEO and sponsored content is that SEO involves "organic" ranking, which means you don't have to pay to be in that spot. To put it another way, search engine optimization is the process of improving a piece of online material so that it appears near the top of a search engine's page when someone searches for something.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nuxtjs-and-seo"&gt;
  &lt;/a&gt;
  Nuxt.js and SEO
&lt;/h2&gt;

&lt;p&gt;Nuxt, one of the most popular Vue frameworks for new web apps, can greatly improve your app performance and SEO. One of the most important Nuxt configurations is the mode, as it determines how your app is built, deployed, and served. There are three main types of web apps out there today:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Classic Single-Page App (SPA)&lt;/li&gt;
&lt;li&gt;Universal/Isomorphic Web App (UWA)&lt;/li&gt;
&lt;li&gt;Pre-Rendered Single-Page App&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is important to use the Universal mode for SEO and here is why:&lt;br&gt;
In a classic SPA, the HTML served to the client is relatively empty, and JavaScript dynamically renders HTML once it gets to the client. Because of this, you may see a "white flicker" before the webpage is fully loaded.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wAxDyLFI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xil6y2wwslh2xwukt9zi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wAxDyLFI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xil6y2wwslh2xwukt9zi.jpg" alt="Classic SPA" width="880" height="348"&gt;&lt;/a&gt;&lt;br&gt;
While in a UWA, JavaScript renders the initial HTML the same way SPAs do, but now the JavaScript runs on your Nuxt server before the content is sent back to the client. This way, the client receives the rendered HTML immediately, and will behave like a classic SPA afterwards. This is done so that search engine crawlers can interpret and index our website's pages. As a result, Universal mode is important for SEO.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J6ytbi-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9q5zuafbw6n6usr5pn3k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J6ytbi-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9q5zuafbw6n6usr5pn3k.jpg" alt="UWA" width="880" height="348"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;New App&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/js/app.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that our setup is complete, we should install some npm packages to improve our SEO by &lt;strong&gt;adding a Dynamic Sitemap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A sitemap is a blueprint of your website that help search engines find, crawl and index all of your website’s content. Sitemaps also tell search engines which pages on your site are most important. We will include a sitemap in our app, but first we must install the nuxt module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @nuxtjs/sitemap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @nuxtjs/sitemap
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We only need to add an entry to our nuxt.config.js file after installing the sitemap module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/sitemap&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Next we Add Google Analytics.&lt;/strong&gt;&lt;br&gt;
Google Analytics is a web analytics service that provides statistics and basic analytical tools for search engine optimization (SEO) and marketing purposes.To use Google Analytics with Nuxtjs, simply install the following module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save-dev @nuxtjs/google-analytics
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add --dev @nuxtjs/google-analytics
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;If you are using Nuxt &amp;lt; v2.9, you have to install the module as dependency (without --dev or --save-dev)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We also need to add an entry to our nuxt.config.js file after installing the Google Analytics module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;buildModules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/google-analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we must link this nuxt application to our Google Analytics account. To do so, we must include the Google Analytics ID in nuxt.config.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;googleAnalytics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UA-XXX-X&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Now we Add Meta Tags&lt;/strong&gt;&lt;br&gt;
Nuxt lets you define all default  tags for your application inside the nuxt.config.js file using the head property. This is very useful for adding a default title and description tag for SEO purposes or for setting the viewport or adding the favicon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;head&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my website title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;viewport&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;width=device-width, initial-scale=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;hid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my website description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;icon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image/x-icon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/favicon.ico&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note that this code above will give you the same title and description on every page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Adding titles and meta for each page can be done by setting the &lt;code&gt;head&lt;/code&gt; property inside your script tag on every page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;head&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Home page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;hid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Home page description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Use &lt;code&gt;head&lt;/code&gt; as an object to set a title and description only for the home page&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Home page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;hid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Home page description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all there is to it; these steps will undoubtedly boost your SEO performance. However, keep in mind that this isn't all there is to SEO; there are many other factors to consider.&lt;/p&gt;

&lt;p&gt;Thank you for Reading&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>nuxt</category>
      <category>seo</category>
    </item>
    <item>
      <title>Self-Taught Developer Journal, Day 29: TOP JavaScript Fundamentals Part 2 - Practice and Knowledge Check</title>
      <author>Jennifer Tieu</author>
      <pubDate>Fri, 31 Dec 2021 22:12:18 +0000</pubDate>
      <link>https://dev.to/jennifer_tieu/self-taught-developer-journal-day-29-top-javascript-fundamentals-part-2-practice-and-knowledge-check-10e0</link>
      <guid>https://dev.to/jennifer_tieu/self-taught-developer-journal-day-29-top-javascript-fundamentals-part-2-practice-and-knowledge-check-10e0</guid>
      <description>&lt;p&gt;Today I completed The Odin Project JS Fundamentals Part 2 Knowledge Check Section after reviewing all of the materials.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#knowledge-check"&gt;
  &lt;/a&gt;
  Knowledge Check
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;What are the eight data types in JavaScript?&lt;/strong&gt;
Numbers, BigInt, Strings, null, undefined, Boolean, Objects, Symbols&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Which data type is NOT primitive?&lt;/strong&gt;
Objects&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the relationship between null and undefined?&lt;/strong&gt;
The expression, &lt;code&gt;null == undefined&lt;/code&gt;, returns true when using the loose equality operator, "==", but not for, "==="&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the difference between single, double, and backtick quotes for strings?&lt;/strong&gt;
Single and double both behave the same. Backtick quotes can format strings with variables and expressions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the term for embedding variables/expressions in a string?&lt;/strong&gt;
Template literals&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Which type of quote lets you embed variables/expressions in a string?&lt;/strong&gt;
Backticks&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How do you embed variables/expressions in a string?&lt;/strong&gt;
${...}&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How do you escape characters in a string?&lt;/strong&gt;
Put a blackslash, "\", in front of a character&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What are methods?&lt;/strong&gt;
Actions performed on Objects&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the difference between slice/substring/substr?&lt;/strong&gt;
Slice extracts a part of a string and returns the extracted part in a new string.
Substring is similar to slice, but can't use negatives indices
Substr is similar to slice, but the second parameter specifies the length of the extracted part.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What are the three logical operators and what do they stand for?&lt;/strong&gt;
&amp;amp;&amp;amp; (AND), || (OR), ! (NOT) &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What are the comparison operators?&lt;/strong&gt;
Operators that compare values between operands&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What are truthy and falsy values?&lt;/strong&gt;
Values that return the boolean value true or false&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What are the falsy values in JavaScript?&lt;/strong&gt;
0, empty string, null, NaN, and undefined&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What are conditionals?&lt;/strong&gt;
evaluates whether a statement/expression is true or false&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the syntax for an if/else conditional?&lt;/strong&gt;
Refer to end&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the syntax for a switch statement?&lt;/strong&gt;
Refer to end&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is the syntax for a ternary operator?&lt;/strong&gt;
&lt;code&gt;condition ? value1: value2;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;What is nesting?&lt;/strong&gt;
Putting a statement inside of another statement, therefore nesting them.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Question 16:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if {
  ...
} else {
  ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;For Question 17:&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;switch (condition) {&lt;br&gt;
  case a:&lt;br&gt;
    code block&lt;br&gt;
    break&lt;br&gt;
  default:&lt;br&gt;
    code block&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#resources"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Resources&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/landing-page"&gt;The Odin Project Landing Page Project&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Module.createRequire is not a function</title>
      <author>Anayo Oleru</author>
      <pubDate>Fri, 31 Dec 2021 22:07:07 +0000</pubDate>
      <link>https://dev.to/anayooleru/modulecreaterequire-is-not-a-function-345a</link>
      <guid>https://dev.to/anayooleru/modulecreaterequire-is-not-a-function-345a</guid>
      <description>&lt;p&gt;&lt;em&gt;Anayo Debugging 2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is one simpler issue, but the simplest bug can be the biggest at times, so I made sure I document it and can help anyone out there too.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bug"&gt;
  &lt;/a&gt;
  Bug
&lt;/h1&gt;

&lt;p&gt;In my react project's root I have a GitLab-ci.yml file that automatically runs whenever I push a commit to the server. It triggers a notification to the runner I specified, and then it processes the series of tasks I specified.&lt;/p&gt;

&lt;p&gt;Which involves building and deploying.&lt;/p&gt;

&lt;p&gt;This is a legacy React project, and had long been updated. After upgrading the packages I git committed. Build built successfully but deployment failed. With the following error:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IUHPQ91I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2zgkx89i7undg7bpd0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IUHPQ91I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n2zgkx89i7undg7bpd0i.png" alt="Image description" width="869" height="425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h1&gt;

&lt;p&gt;I read through the error to understand what the problem really was, and I found it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Module.createRequire is not a function
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That was the only error that was reasonably clear indeed and meant something.&lt;/p&gt;

&lt;p&gt;So I Googled it, and I found out that it's an issue with Create React App, it's always on or looking for the latest, which means the Node engine version has to always be the latest and that includes my npm version, else some things might break.&lt;/p&gt;

&lt;p&gt;So in essence whatever machine running that project has to have Node &amp;gt;= 14.0.0 and npm &amp;gt;= 5.6&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#fix"&gt;
  &lt;/a&gt;
  Fix
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;My GitLab-ci.yml contains a Docker image with a node version of 10.15.3, so there is a need to upgrade.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;image: giona69/node-10.15.3-aws-eb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;And I temporarily replaced the docker image with the latest node.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;image: node:14.18.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Rebuilt Node-Sass&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I added &lt;br&gt;
&lt;code&gt;npm rebuild node-sass&lt;/code&gt; &lt;br&gt;
to the deploy script&lt;/p&gt;

&lt;p&gt;And Voila!! That fixed the issue. These weeks has been simple, this is the issues I have been experiencing.&lt;/p&gt;




&lt;p&gt;My name is Anayo Oleru, I specialise in Backend Development(NodeJS &amp;amp; ExpressJS), but I am experienced with Web frontend(ReactJS) and mobile(React-native). And I am open to offers in these fields.&lt;/p&gt;

&lt;p&gt;You can follow me on Twitter at &lt;a class="mentioned-user" href="https://dev.to/anayooleru"&gt;@anayooleru&lt;/a&gt; or send an email to: &lt;a href="mailto:anayo_oleru@outlook.com"&gt;anayo_oleru@outlook.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers and take care.&lt;/p&gt;

</description>
      <category>react</category>
      <category>gitlap</category>
      <category>deployment</category>
      <category>nodeversion</category>
    </item>
    <item>
      <title>DEV3L on DevOps Handbook</title>
      <author>Justin Beall</author>
      <pubDate>Fri, 31 Dec 2021 21:38:27 +0000</pubDate>
      <link>https://dev.to/dev3l/dev3l-on-devops-handbook-257m</link>
      <guid>https://dev.to/dev3l/dev3l-on-devops-handbook-257m</guid>
      <description>&lt;p&gt;DevOps is good for business - this is undeniable. Elite performers consistently outperform their peers in the market - regardless of the market segment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The DevOps Handbook, Second Edition - How to Create World-Class Agility, Reliability, &amp;amp; Security in Technology Organizations&lt;/strong&gt;, by &lt;em&gt;&lt;a href="https://twitter.com/RealGeneKim"&gt;Gene Kim&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href="https://twitter.com/jezhumble"&gt;Jez Humble&lt;/a&gt;&lt;/em&gt;, is a guided tour through the world of DevOps. The book provides principles, proven practices, and case studies for organizations that want to build safe and resilient systems, with minimal maintenance cost, and unimaginable levels of business agility.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ER6OKPCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez9f2lrudpd2c75ifu6n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ER6OKPCm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez9f2lrudpd2c75ifu6n.png" alt="" width="880" height="888"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DevOps isn't about automation,
just as astronomy isn't about telescopes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fast flow of planned work to production&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How technology work is managed and perform as leading indicator of market success&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4fDZF69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbsb14jd565mpvp0vkge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4fDZF69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbsb14jd565mpvp0vkge.png" alt="" width="861" height="756"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Downward Spiral&lt;/strong&gt; - traditional goals of operations (stability) and development (change) in opposition&lt;br&gt;
Cannot see the big picture when pickled&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g1eER8rH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsfzhfh1oiyietm5zjoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g1eER8rH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsfzhfh1oiyietm5zjoi.png" alt="" width="880" height="657"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating systems that cause feelings of powerlessness is one of the most damaging things we can do to fellow human beings&lt;/p&gt;

&lt;p&gt;Deploy during business hours,&lt;br&gt;
lead times in minutes to hours&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Empirically great for business&lt;/em&gt;&lt;br&gt;
Proven better business outcomes &lt;a href="https://itrevolution.com/accelerate-book/"&gt;Accelerate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Loosely coupled teams scale&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZVJmsIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u628fz0uenzhkqhww4wj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZVJmsIJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u628fz0uenzhkqhww4wj.png" alt="" width="799" height="638"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#part-i-the-three-ways"&gt;
  &lt;/a&gt;
  Part I - The Three Ways
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Flow (capabilities and practices)&lt;/li&gt;
&lt;li&gt;Feedback and monitoring&lt;/li&gt;
&lt;li&gt;Continuous learning (generative culture)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jh0LsHLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5ykt4hdp9hkhs8ghn1t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jh0LsHLD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5ykt4hdp9hkhs8ghn1t.png" alt="" width="736" height="759"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LdOe18KhtT4"&gt;10+ Deploys Per Day&lt;/a&gt; - 2009 &lt;em&gt;&lt;a href="https://twitter.com/allspaw"&gt;John Allspaw&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#configuration-and-infrastructure-managed-using-craftsmanship-principles"&gt;
  &lt;/a&gt;
  Configuration and Infrastructure managed using craftsmanship principles
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Improvement Kata&lt;/strong&gt; - daily practice improves outcomes...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Avoid cargo cult Lean/Agile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ceyvwgaF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edxe2xmbl1u46tumnp7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ceyvwgaF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/edxe2xmbl1u46tumnp7f.png" alt="" width="656" height="428"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Value Stream&lt;/strong&gt; - sequence of activities necessary to produce value&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FuGiN0Hc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl8f53t2uw4bkjptjm3d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FuGiN0Hc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl8f53t2uw4bkjptjm3d.png" alt="" width="876" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deployment Lead Time&lt;/strong&gt; - time from &lt;em&gt;Dev Complete&lt;/em&gt; to &lt;em&gt;Production&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shift Quality Left&lt;/strong&gt; - build quality in, not tacked on at the end&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Process Time (Touch Time) = Lead Time - Wait Time&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aRwxWq5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gbjwwwfdinis0l440hp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aRwxWq5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gbjwwwfdinis0l440hp.png" alt="" width="880" height="506"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flowframework.org/"&gt;Flow Framework&lt;/a&gt; by &lt;em&gt;&lt;a href="https://twitter.com/mik_kersten"&gt;Mik Kersten&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S-lLmrag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlr643n2126r8dve88ny.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S-lLmrag--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlr643n2126r8dve88ny.png" alt="" width="880" height="924"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-first-way"&gt;
  &lt;/a&gt;
  The First Way
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;increase flow&lt;/li&gt;
&lt;li&gt;make work visible - &lt;a href="https://prokanban.org/"&gt;Kanban&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;theory of constraints &lt;a href="https://www.goodreads.com/book/show/113934.The_Goal"&gt;Goal&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;reduce batch size&lt;/li&gt;
&lt;li&gt;eliminate waste&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n3IK0X02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lqgn62zotkyxoellv4i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n3IK0X02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lqgn62zotkyxoellv4i.png" alt="" width="861" height="706"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c-BIp_xe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofwi9h7jowd7xxxrjwwx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c-BIp_xe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofwi9h7jowd7xxxrjwwx.png" alt="" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xuLRaiA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qg2l2tuo9bbg89edfo71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xuLRaiA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qg2l2tuo9bbg89edfo71.png" alt="" width="596" height="842"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-second-way"&gt;
  &lt;/a&gt;
  The Second Way
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;fast feedback loops&lt;/li&gt;
&lt;li&gt;establish cause and effect&lt;/li&gt;
&lt;li&gt;enables learning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V1ID6mr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v155q8wz6ro9vfh8dohl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V1ID6mr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v155q8wz6ro9vfh8dohl.png" alt="" width="781" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Continually automate manual tasks - self service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical Andon Cord&lt;/strong&gt; - defect / second opinion - safety culture&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TERKbLX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a897eij26hsd1ml06mh4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TERKbLX6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a897eij26hsd1ml06mh4.png" alt="" width="822" height="636"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Push decision making down to where work is&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-third-way"&gt;
  &lt;/a&gt;
  The Third Way
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;continuous learning&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Transform local discoveries into global improvements&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Blameless Post Mortem&lt;/strong&gt; - learn from failures, not blame&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;More important than daily work,
Improvement of daily work 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U1ty4Nja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ma0t3k5geihwz1ori1mw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U1ty4Nja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ma0t3k5geihwz1ori1mw.png" alt="" width="851" height="911"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resilience through anti-fragility&lt;br&gt;
Experiment iteratively towards True North goal&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#part-ii-where-to-start"&gt;
  &lt;/a&gt;
  Part II - Where to Start
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yuN-0iXy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/479e7g45g3m6hhji2fsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yuN-0iXy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/479e7g45g3m6hhji2fsz.png" alt="" width="820" height="603"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thought process to guide decisions, actual steps to be taken, and case studies to visualize&lt;/p&gt;

&lt;p&gt;Start with &lt;strong&gt;enthusiastic early adopters&lt;/strong&gt; - find early winds - land and expand&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--59v03gPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcmkk0cc3wljhp3fqtzb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59v03gPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vcmkk0cc3wljhp3fqtzb.png" alt="" width="876" height="696"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Little fish learn to be big fish in little ponds&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Focus on wait times and rework&lt;br&gt;
Invest 20% (at least) in the "ilities" (NFRs)&lt;br&gt;
Shared pain reinforces shared goals&lt;/p&gt;

&lt;p&gt;Design systems with &lt;strong&gt;Conway's Law&lt;/strong&gt; in mind&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I19jKR7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgwmad4b6mwdlhy9jnvt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I19jKR7T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wgwmad4b6mwdlhy9jnvt.png" alt="" width="880" height="626"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#part-iii-technical-practices-of-flow"&gt;
  &lt;/a&gt;
  Part III - Technical Practices of Flow
&lt;/h1&gt;

&lt;p&gt;Environments like cattle, not snowflakes&lt;br&gt;
Production like on demand&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Design systems/architecture for testability&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Immutable Infrastructure&lt;/strong&gt; - all artifacts, source, and configuration in version control - removes variance &lt;/p&gt;

&lt;p&gt;&lt;em&gt;"Done"&lt;/em&gt; includes potentially shippable code deployed in a production-like environment&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Automated testing is principle/foundational&lt;/strong&gt; - manual testing cannot scale&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cf4dXmJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgoqdcp1ma8g9yv838r2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cf4dXmJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgoqdcp1ma8g9yv838r2.png" alt="" width="813" height="612"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CI+&lt;/strong&gt; - Continuous Integration built upon DevOps practices&lt;/p&gt;

&lt;p&gt;Slow and periodic feedback kills development effectiveness&lt;br&gt;
... especially at scale&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DCqNvKfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tc0wbyujezldcfau7k3z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DCqNvKfV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tc0wbyujezldcfau7k3z.png" alt="" width="878" height="310"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Non-idempotent test should be rewritten, or removed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#optimize-for-team-productivity"&gt;
  &lt;/a&gt;
  Optimize for team productivity
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Continuous Integration&lt;/li&gt;
&lt;li&gt;Trunk Based Development&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Deploy to production as frequently as possible&lt;/em&gt;&lt;br&gt;
Every commit for single piece flow&lt;br&gt;
Boring deployments lead to high agility&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#decouple-deployment-and-release"&gt;
  &lt;/a&gt;
  Decouple deployment and release
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;blue/green (environment)&lt;/li&gt;
&lt;li&gt;feature flags (code)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ugrUbKv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37e3xgplwqam3ydmhni5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ugrUbKv_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37e3xgplwqam3ydmhni5.png" alt="" width="880" height="345"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Continuous Integration &amp;lt;
Continuous Delivery    &amp;lt;
Continuous Deployment
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://youtu.be/CostXs2p6r0"&gt;Resource Utilization Trap&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Flow Efficiency&lt;/strong&gt; over&lt;br&gt;
&lt;em&gt;Resource Efficiency&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zwabQQCP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/civ7qiusqrb4xr0zblr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zwabQQCP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/civ7qiusqrb4xr0zblr7.png" alt="" width="795" height="567"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't Rewrite,&lt;br&gt;
Delegate and Decommission&lt;br&gt;
&lt;strong&gt;Strangler Fig Pattern&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNET69KV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn7ky6kexfp691la8z3l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNET69KV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dn7ky6kexfp691la8z3l.png" alt="" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#part-iv-the-second-way-technical-practices-of-feedback"&gt;
  &lt;/a&gt;
  Part IV - The Second Way - Technical practices of feedback
&lt;/h1&gt;

&lt;p&gt;Logging, monitoring, and visualizing telemetry/events as a first principle&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Make tracking anything easy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application Performance Monitoring&lt;/strong&gt; - if it's important enough to implement, it's important enough to instrument&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1gu_ckZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9v6vbcgq8fgqwx2rlx88.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1gu_ckZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9v6vbcgq8fgqwx2rlx88.png" alt="" width="568" height="735"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Allow self service of metrics&lt;/p&gt;

&lt;p&gt;Overlay system events - such as deployments, incidents, and/or maintenance periods - on top of business metrics&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GQNsCNYN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzqj3xmmr4fkpntifw5v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GQNsCNYN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzqj3xmmr4fkpntifw5v.png" alt="Image description" width="872" height="749"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use means and standard deviations to detect anomalies in clusters - do not need to know what normal is, just what it is not&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4K_5PB8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ijfqzmbudue6e7k3bty.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4K_5PB8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ijfqzmbudue6e7k3bty.png" alt="" width="821" height="701"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CweBYN-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cr9v3rswemkl09d5rp44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CweBYN-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cr9v3rswemkl09d5rp44.png" alt="" width="840" height="653"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rotate Pager Duty&lt;/strong&gt; through the entire team - empathy and visualization - Goldilocks alerting (just right)&lt;/p&gt;

&lt;p&gt;Validate assumptions empirically in lowest fidelity possible&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#part-v-the-third-way-the-technical-practices-of-continual-learning-and-experimentation"&gt;
  &lt;/a&gt;
  Part V - The Third Way - The Technical Practices of Continual Learning and Experimentation
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Pair programming is live peer review&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one repository to rule them all&lt;/li&gt;
&lt;li&gt;codify non-functional requirements&lt;/li&gt;
&lt;li&gt;create run books for manual operations&lt;/li&gt;
&lt;li&gt;guidance over Governance on architectural decisions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;In complex systems errors are inevitable&lt;/strong&gt;, utilize resilience engineering practices to accommodate - enable chat rooms to trigger events, notify status/results, and alerts&lt;/p&gt;

&lt;p&gt;Perform &lt;strong&gt;Blameless Postmortems&lt;/strong&gt; after production incidents (and near misses) - lower failure signals as error detection decreases&lt;/p&gt;

&lt;p&gt;Retrospect Early, Retrospect Often&lt;br&gt;
Make results globally available&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MBl8TEDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l96nh47cegyfjf879eb2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MBl8TEDp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l96nh47cegyfjf879eb2.png" alt="" width="605" height="689"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Transform documented knowledge, processes, and design standards into reusable code&lt;/p&gt;

&lt;p&gt;Create regular space for improvement blitzes - explicit time dedicated to learning and/or improvement of daily work - ensure cross pollination of teams/business units&lt;/p&gt;

&lt;p&gt;Allow everyone to teach and learn - most valuable thing employee can do is teach someone  or learn something new&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QwiQSBZk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt4ysxwudbwjltfvr0tp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QwiQSBZk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zt4ysxwudbwjltfvr0tp.png" alt="" width="841" height="668"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remove "I do not have time to test" as an excuse - &lt;a href="https://www.youtube.com/watch?v=Jtt7PAejrFA"&gt;Make It Easy&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Make the change easy,
Then make the easy change
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Automated testing, and automation in general, is foundational to all other DevOps practices&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#part-vi-the-technical-practices-of-integrating-information-security-change-management-and-compliance"&gt;
  &lt;/a&gt;
  Part VI - The Technical Practices of Integrating Information Security,  Change Management, and Compliance
&lt;/h1&gt;

&lt;p&gt;Integrate information security practices into daily work - shift left - &lt;em&gt;compliance by demonstration&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Spread &lt;strong&gt;&lt;a href="https://owasp.org/Top10/"&gt;OWASP&lt;/a&gt;&lt;/strong&gt; Top 10 throughout organization - create security learning opportunities&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--slDwykvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xf67guohl5piev64zcet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--slDwykvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xf67guohl5piev64zcet.png" alt="" width="880" height="738"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Utilize static/dynamic security analysis inside delivery pipeline - source, dependencies, and sub-dependencies are scanned for vulnerabilities&lt;/p&gt;

&lt;p&gt;Create paved road for developers to follow - all necessary information security checks - internal package management&lt;/p&gt;

&lt;p&gt;Classify &lt;em&gt;Change Types&lt;/em&gt; by risk&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;routine&lt;/li&gt;
&lt;li&gt;standard&lt;/li&gt;
&lt;li&gt;urgent&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Change Management Traceability&lt;/strong&gt; - link deployments to commits, and commits to work tickets&lt;/p&gt;

&lt;p&gt;Physically and logically separate components that require special compliance - do not force strict policies where not needed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lk6KXG52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1elfacqh8jt71scqik5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lk6KXG52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l1elfacqh8jt71scqik5.png" alt="" width="225" height="225"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;p&gt;Reference Journal Events: &lt;a href="https://twitter.com/dev3l_/status/1476242693311410176"&gt;Start&lt;/a&gt;, &lt;a href="https://twitter.com/dev3l_/status/1476779918335881223"&gt;Finish&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>agile</category>
      <category>craftsmanship</category>
    </item>
    <item>
      <title>The best SDLC Model to deploy in Software Dev.</title>
      <author>Azubuike Duru </author>
      <pubDate>Fri, 31 Dec 2021 21:30:21 +0000</pubDate>
      <link>https://dev.to/azubuikeduru/the-best-sdlc-model-to-deploy-in-software-dev-3ek</link>
      <guid>https://dev.to/azubuikeduru/the-best-sdlc-model-to-deploy-in-software-dev-3ek</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;IT Project Managers often times get confused of the best tools to help ensure satisfaction and successful implementation of software products. Well, this article provides a visible design, implementation and development steps needed for quick project delivery with a low cost budget. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goal"&gt;
  &lt;/a&gt;
  Goal
&lt;/h2&gt;

&lt;p&gt;The goal of each stages/phases in SDLC are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provide a framework for developing quality system and software products. &lt;/li&gt;
&lt;li&gt;Specify the activities to be performed in the next phase.&lt;/li&gt;
&lt;li&gt;Ensure that system development requirements are well defined and subsequently satisfied.&lt;/li&gt;
&lt;li&gt;Delivering quality and cost efficient systems which meets Costumers wants and specifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://dev.tourl"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objective"&gt;
  &lt;/a&gt;
  Objective
&lt;/h2&gt;

&lt;p&gt;The SDLC methodology will help to achieve this goals by: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Establishing appropriate levels of management authority to provide timely direction, coordination, control, review, and approval of the system development project.&lt;/li&gt;
&lt;li&gt;Ensuring project management accountability.&lt;/li&gt;
&lt;li&gt;Documenting requirements and maintaining trace ability of those requirements throughout the development and implementation process.&lt;/li&gt;
&lt;li&gt;Ensuring that projects are developed within the current and planned information technology infrastructure.&lt;/li&gt;
&lt;li&gt;Identifying project risks early.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-sdlc"&gt;
  &lt;/a&gt;
  What is SDLC?
&lt;/h2&gt;

&lt;p&gt;SDLC stands for Software Development Life Cycle and it is defined as a methodology that aims at software production with well-structured phases that help an organization with the highest quality and lowest cost in the shortest time possible. Software Development Life Cycle (SDLC) is a process used by the software industry to design, develop and test high quality softwares. Every IT firm need to deploy one suitable software technique in building any software production at all times. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#phases-of-sdlc"&gt;
  &lt;/a&gt;
  Phases of SDLC
&lt;/h2&gt;

&lt;p&gt;The common Software Development Life Cycle are arranged in different phases of processes which include: &lt;br&gt;
Phase1 -Requirement analysis and specification.&lt;br&gt;
Phase2 -Design.&lt;br&gt;
Phase3 -Implementation and integration. &lt;br&gt;
Phase4 -Testing(quality assurance).&lt;br&gt;
Phase5 -Operation and &lt;br&gt;
Phase6 -maintenance. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_IsEkx8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ubbafaqc84gpqlcbmgk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_IsEkx8k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ubbafaqc84gpqlcbmgk.jpeg" alt="Image description" width="783" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase1: Requirement analysis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Requirement analysis is the first and fundamental stage in software development. It involves a lot of  meetings. It is where documentation and researches are carried out and we find out what we are trying to build, what our client needs are and the purpose of building it. It involves interaction with the managers, consultants and people in charge. In this stage, all the planning that needs to be done are done and a feasibility(possibility) test is carried out to check if the product or software is profitable or worth venturing into in the first place. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase2: Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next phase is the design stage. During this phase, the software is designed to satisfy the functional requirements identified in the previous phase. It purely depends on how things was planned out to be or look like, the features to render, the architecture and environment/layout of the product to produce. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase3: Implementation and integration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Implementation and integration is after the layout has been done. It takes whatever that’s been designed and try to put them into coding. The software programmers come into play and codes are been written in whatever programming language that is necessary.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase4: Testing (quality assurance)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Testing is as important as the requirements stage. It is where things are ascertain and errors are corrected and functional requirements are met by the newly developed or modified software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase5: Operation, deployment and maintenance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the last phase of SDLC. After which the software has deployed, there is a need to monitor for continue functioning and operation of the software. Maintenance does the trick. It makes sure software products keep to date and functionalities keep improving. It is the phase that enables the sustenance of a product out there.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-sdlc-models"&gt;
  &lt;/a&gt;
  Types of SDLC Models
&lt;/h2&gt;

&lt;p&gt;There are different types of models that can be implemented when choosing the kind of software to build. They include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; The Water-fall model&lt;/li&gt;
&lt;li&gt; The Agile model&lt;/li&gt;
&lt;li&gt; The Incremental model&lt;/li&gt;
&lt;li&gt; The Re-use oriented software dev. cycle &lt;/li&gt;
&lt;li&gt; The Prototyping model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqDuT2sb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5af6ra8hw5kjuinkmnn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZqDuT2sb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5af6ra8hw5kjuinkmnn.png" alt="Image description" width="766" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All the models go through the same phase in software production but have different approaches to each phase/stage. And we won’t be able to cover all the available models in details. Our main focus is the Agile Model SDLC. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanation-sdlc-models"&gt;
  &lt;/a&gt;
  EXPLANATION: SDLC Models
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dTVfIHNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxx0ds2kvvkenw78sahl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dTVfIHNj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxx0ds2kvvkenw78sahl.png" alt="Image description" width="637" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; The Water-fall model: is the most common SDLC model approach to be introduced. Waterfall software development is dependent on phases. Simple to understand because it explains the process of software development in a linear progressive format. That means it moves to the next phase/stage only when its current phase is over. It is usually only good for short term project. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zbY9icSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zeqyopm2y3wv77fcgkej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zbY9icSm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zeqyopm2y3wv77fcgkej.png" alt="Image description" width="614" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; The incremental model: this kind of model achieve task by deploying finished versions of the whole entity one after the other until the task is completed. It is generally fast because of this method it uses and cost effective.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Sam3mlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr2ghwdfqxt579j4entf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Sam3mlF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jr2ghwdfqxt579j4entf.png" alt="Image description" width="810" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; The Prototyping model: prototyping is used when the client or customer don’t have the full idea of what they need. It is a way of cross-checking what the desire of the customer is. In prototyping model, prototypes or demo of the intended software is built so that the customer or client can check if it is what he/she wanted initially or Changes where need be. Client feedback is really of essence in this model type. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yKGH8Ido--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkoqvylu3v78ilt5opnw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yKGH8Ido--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkoqvylu3v78ilt5opnw.png" alt="Image description" width="691" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; The Agile model:   Agile kind of software development model is a set of values, beliefs and principles that aims at focusing on the benefits and what users want and need. It is an approach to help organization respond quicker to changes with rules and methodology and not just blindly following a given plan set to constrain flexibility at work. Agile is best for long term projects because it is more focused on Customer satisfaction over processes and tools. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#agile-manifesto-set-of-rules"&gt;
  &lt;/a&gt;
  AGILE MANIFESTO (SET OF RULES)
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Individuals and interactions over processes or tools: Agile modeling puts talking and discussion about the whole processes over just working and coding about it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Working software over comprehensive documentation: the experience the users gets by using the product is more important than how detailed the planning or requirement stage may sound or was. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Customer collaboration over contract negotiation: making sure the product is perfectly working first over worrying about what was said or signed initially in the requirement stage. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Responding to changes over following a plan: Agile kind of model want you to run the plan and not the plan running you. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-agile-model"&gt;
  &lt;/a&gt;
  Advantages Of Agile Model
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Increased Flexibility with a Fast Failure Mindset.&lt;/li&gt;
&lt;li&gt;Improved Team interaction and communication during work.&lt;/li&gt;
&lt;li&gt;Release of efficient softwares at a quicker time rate.&lt;/li&gt;
&lt;li&gt;Honesty and transparency.&lt;/li&gt;
&lt;li&gt;Late changes in requirements are welcomed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-agile-model"&gt;
  &lt;/a&gt;
  Disadvantages Of Agile Model
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;There is lack of emphasis on necessary designing and documentation.&lt;/li&gt;
&lt;li&gt;The project can easily get taken off track if the customer representative is not clear on what final outcome that they want.&lt;/li&gt;
&lt;li&gt;Only senior programmers are capable of taking the kind of decisions required during the development process. Hence it has no place for newbie programmers, unless combined with experienced resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Many contradictions have been raised over the years of the best kind of model to deploy in SDLC. Well, all models are useful depending on what you want to achieve and how fast you want to go about it at the time. But for the purpose of this writing. I will say Agile SDLC is the best, because it has the customers needs and satisfaction at mind first before any other plan or agreement which is what every customer would want to go for. It surpasses all kind of models because good product at the end is more needful than set of rigid rules or plan. &lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>productivity</category>
      <category>career</category>
    </item>
    <item>
      <title>My 2021 Review: The Growing Pains</title>
      <author>Ayu Adiati</author>
      <pubDate>Fri, 31 Dec 2021 20:38:38 +0000</pubDate>
      <link>https://dev.to/adiatiayu/my-2021-review-the-growing-pains-1j84</link>
      <guid>https://dev.to/adiatiayu/my-2021-review-the-growing-pains-1j84</guid>
      <description>&lt;p&gt;Hello Everyone 👋,&lt;/p&gt;

&lt;p&gt;We will leave 2021 in a few more hours. Is it just me? I feel like 2021 is much shorter than the previous years.&lt;br&gt;
How time flies!&lt;/p&gt;

&lt;p&gt;I participated in Polywork's #My2021Highlights and created &lt;a href="https://www.polywork.com/adiatiayu/collections/853188"&gt;My 2021 Highlights collection&lt;/a&gt;. And that's when I realize (again) how I grow so much within 1 year!&lt;/p&gt;

&lt;p&gt;I had ups and downs, but all of those were worth it.&lt;br&gt;
Maybe this is what people called &lt;em&gt;growing pains&lt;/em&gt;. 😄&lt;/p&gt;

&lt;p&gt;I'm writing this post to remind me of what I achieved and overcame throughout this year. It will be something that I will look back to when I have hard times and keep me motivated.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://i.giphy.com/media/yaR8Dux1s0fAI/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/yaR8Dux1s0fAI/giphy.gif" alt="let's go gif" width="500" height="303"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blogging"&gt;
  &lt;/a&gt;
  Blogging
&lt;/h2&gt;

&lt;p&gt;I started to write in November 2020, but not until 2021 when my articles and me, as a writer, started to get recognized. How I achieved so much within one year:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My articles got into CodeNewbie's newsletter several times throughout the year since January.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/hashnode/status/1366715534142812166"&gt;Spotlight of The Week&lt;/a&gt; on Hashnode.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://community.codenewbie.org/codenewbie/codenewbie-writers-of-the-month-february-2021-kb7"&gt;CodeNewbie Writers of The Month — February 2021&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Top 7 on DEV in &lt;a href="https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-5h5d"&gt;March&lt;/a&gt;, &lt;a href="https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-3h2i"&gt;August&lt;/a&gt;, and &lt;a href="https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-35fb"&gt;November&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://community.codenewbie.org/codenewbie/ayu-polyglot-latte-lover-codenewbie-149m"&gt;CodeNewbie Community Spotlight — April 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hashnode.com/must-read/45"&gt;Must Read Developer Articles #45&lt;/a&gt; on Hashnode.&lt;/li&gt;
&lt;li&gt;Earned &lt;strong&gt;OSS Documentarian&lt;/strong&gt;, &lt;strong&gt;OSS Mentor&lt;/strong&gt;, &lt;strong&gt;Talk of the Town&lt;/strong&gt;, &lt;strong&gt;Article picked as "Must Read" on Hashnode&lt;/strong&gt;, and &lt;strong&gt;Featured On Hashnode&lt;/strong&gt; &lt;a href="https://adiati.com/badges"&gt;badges&lt;/a&gt; on Hashnode.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I love writing and will keep writing even though as I mentioned in &lt;a href="https://dev.to/adiatiayu/i-have-been-writing-a-blog-for-10-months-here-is-my-story-401a"&gt;one of my posts&lt;/a&gt; that I will post one to two articles per month for a while.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h2&gt;

&lt;p&gt;This year I didn't have any goal to complete Hacktoberfest because I started the collaboration program with &lt;a href="https://the-collab-lab.codes/about-us/"&gt;The Collab Lab&lt;/a&gt;. My goal was I would be very happy to submit at least one pull request.&lt;/p&gt;

&lt;p&gt;But I ended up submitting &lt;em&gt;eight&lt;/em&gt; pull requests and completed the Hacktoberfest!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n99kH4Va--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640973778602/A-KL6-k1l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n99kH4Va--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640973778602/A-KL6-k1l.jpeg" alt="hacktoberfest2021.jpeg" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This experience leads me to a new interest in contributing to open source (and diving more into accessibility)!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community"&gt;
  &lt;/a&gt;
  Community
&lt;/h2&gt;

&lt;p&gt;I can go for hours when I'm talking about community. I love my communities! 💙&lt;br&gt;
I'm very blessed to be in such supportive communities and be an active member of &lt;a href="https://virtualcoffee.io/"&gt;Virtual Coffee&lt;/a&gt;, &lt;a href="https://the-collab-lab.codes/who-we-are/"&gt;The Collab Lab&lt;/a&gt;, &lt;a href="https://community.codenewbie.org/adiatiayu"&gt;CodeNewbie&lt;/a&gt;, &lt;a href="https://dev.to/adiatiayu"&gt;DEV&lt;/a&gt; and &lt;a href="https://hashnode.com/@ayuadiati"&gt;Hashnode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I won't be where I am now if it's not because of them who always support and push me to be a better developer, to be a better writer, to be a better person.&lt;/p&gt;

&lt;p&gt;Even in the wildest dream, I never thought that I could be part of these before:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://virtualcoffee.io/podcast/0303-ayu-adiati/"&gt;Guest at Virtual Coffee Community podcast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Documentation Lead&lt;/strong&gt; at Virtual Coffee.&lt;/li&gt;
&lt;li&gt;One of program committees (proposals reviewer) for &lt;a href="https://codelandconf.com/"&gt;CodeLand Conference 2021&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Created a &lt;a href="https://www.youtube.com/watch?t=3788&amp;amp;v=4pI7miwXwY0&amp;amp;feature=youtu.be"&gt;short recess video for CodeLand Conference 2021&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Moderator for CodeLand Conference 2021 and &lt;a href="https://community.codenewbie.org/codenewbie/announcing-cnc2021-codenewbie-challenge-2021-1jbh"&gt;CodeNewbie Challenge 2021&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Got accepted and finished strong the collaboration program to create a &lt;a href="https://tcl-35-smart-shopping-list.web.app/"&gt;React project&lt;/a&gt; at The Collab Lab.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm very grateful to have had these experiences this year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/7IuhBVrwctAtuPPXLk/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/7IuhBVrwctAtuPPXLk/giphy.gif" alt="but gif" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, those achievements didn't come without challenges.&lt;br&gt;
And these are actually what shaped me to grow and be who I am today.&lt;br&gt;
I learned a lot from them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#burnouts-and-imposter-syndromes"&gt;
  &lt;/a&gt;
  Burnout(s) and imposter syndrome(s)
&lt;/h2&gt;

&lt;p&gt;I had a massive burnout sometime this year. It was huge until it made me want to quit my journey, completely.&lt;br&gt;
Thankfully, I have genuinely lovely and supportive people around me at &lt;a href="https://virtualcoffee.io/"&gt;Virtual Coffee&lt;/a&gt;. Because of them, I overcame the burnout and got back on my feet.&lt;br&gt;
I wrote about that experience &lt;a href="https://dev.to/adiatiayu/lesson-learned-massive-burnout-in-learning-web-development-2kcg"&gt;in this article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also faced countless imposter syndromes. Again, thanks to my communities, I become more and more confident in myself and in my abilities. If it's not because of them, I would not even dare to apply for &lt;a href="https://the-collab-lab.codes/about-us/"&gt;The Collab Lab&lt;/a&gt; program because I always thought that I could never get accepted. If I didn't apply, I would never have had that precious experience to learn to collaborate with other developers at The Collab Lab and be in another awesome and supportive community! ❤&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-learned-in-2021"&gt;
  &lt;/a&gt;
  What I learned in 2021
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;It's okay to not be okay.&lt;/li&gt;
&lt;li&gt;Take a break regularly, take care of yourself, and keep moving forward.&lt;/li&gt;
&lt;li&gt;Don't play too many scenarios in your head. You never know what will happen unless you try and do it.&lt;/li&gt;
&lt;li&gt;Surround yourself with positive and supportive people and communities.&lt;/li&gt;
&lt;li&gt;The growth process is extremely uncomfortable and sometimes painful, but it's totally worth it!&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;Thank you for all the lessons, 2021! 💖&lt;br&gt;
Cheers to 2022 and happy new year, everyone!!! 🥂&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/CjmvTCZf2U3p09Cn0h/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/CjmvTCZf2U3p09Cn0h/giphy.gif" alt="i'm ready gif" width="480" height="452"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thank you for reading!&lt;br&gt;
Last but not least, you can find me on &lt;a href="https://twitter.com/AdiatiAyu"&gt;Twitter&lt;/a&gt;. Let's connect! 😊&lt;/p&gt;

</description>
      <category>yearinreview</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Setup NAS on Raspberry Pi 4 - Part 1</title>
      <author>Vedant</author>
      <pubDate>Fri, 31 Dec 2021 20:22:55 +0000</pubDate>
      <link>https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-4-part-1-1pp6</link>
      <guid>https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-4-part-1-1pp6</guid>
      <description>&lt;p&gt;This will be multi part post where I will take you through understanding what is NAS? How to setup NAS on your own using Raspberry Pi.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-4-52ck-temp-slug-2046292"&gt;Part 1: Motivation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-part-2-fe9-temp-slug-8521520"&gt;Part 2: Bake the Pi&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-part-3-4ndg-temp-slug-6892512"&gt;Part 3: Install OpenMediaVault&lt;/a&gt;&lt;br&gt;
Part 4: Setup OpenMediaVault &lt;strong&gt;(coming soon...)&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#part-1-motivation"&gt;
  &lt;/a&gt;
  Part 1: Motivation
&lt;/h2&gt;

&lt;p&gt;Recently I felt a need to have NAS which I can access on my local network and eventually expose it over internet for things like backing up my photos, videos, backups etc. &lt;/p&gt;

&lt;p&gt;But I was hoping it to be more than just a regular NAS. I want it to run other services likes password manager, media player server which I can access on my mobile phone, tv and other devices.&lt;/p&gt;

&lt;p&gt;Buying NAS is a good option but it is very costly. So I decided to build one myself. &lt;/p&gt;

&lt;p&gt;This multi-part post is share my experience and steps I followed to setup one for myself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-nas-server"&gt;
  &lt;/a&gt;
  What is a NAS Server?
&lt;/h3&gt;

&lt;p&gt;A (Network Attached Storage) NAS Server is a network storage system to serve and share files to other client computers in a local area network. This enables multiple users to access and share the same file storage.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-nas-server-on-raspberry-pi"&gt;
  &lt;/a&gt;
  Why NAS Server on Raspberry Pi?
&lt;/h3&gt;

&lt;p&gt;Raspberry Pi is a mini-computer with the full performance of a Linux-based operating system and contains almost all functions of a large server system.&lt;/p&gt;

&lt;p&gt;The Raspberry Pi saves a lot of money because it consumes a very small amount of energy. Due to its small size, the Raspberry Pi can be placed on nearly any place.&lt;/p&gt;

&lt;p&gt;There are various solutions present which can help you build your NAS. I will be using openmediavault.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-openmediavault"&gt;
  &lt;/a&gt;
  What is OpenMediaVault?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a5E42sWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9ohfm2e6z8yu4kuiixj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a5E42sWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9ohfm2e6z8yu4kuiixj.png" alt="open media vault logo" width="330" height="42"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;openmediavault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB/CIFS, DAAP media server, RSync, BitTorrent client and many more. &lt;/p&gt;

&lt;p&gt;openmediavault is primarily designed to be used in small offices or home offices, but is not limited to those scenarios. It is a simple and easy to use out-of-the-box solution that will allow everyone to install and administrate a Network Attached Storage without deeper knowledge.&lt;/p&gt;

&lt;p&gt;You can read about the features provided by OpenMediaVault &lt;a href="https://www.openmediavault.org/?page_id=1562"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;That is it for this part you can continue with the reading the rest of parts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-4-52ck-temp-slug-2046292"&gt;Part 1: Motivation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-part-2-fe9-temp-slug-8521520"&gt;Part 2: Bake the Pi&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/koditkarvedant/setup-nas-on-raspberry-pi-part-3-4ndg-temp-slug-6892512"&gt;Part 3: Install OpenMediaVault&lt;/a&gt;&lt;br&gt;
Part 4: Setup OpenMediaVault &lt;strong&gt;(coming soon...)&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>nas</category>
      <category>raspberrypi</category>
      <category>linux</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Creating Custom Directives in Angular</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Fri, 31 Dec 2021 19:31:53 +0000</pubDate>
      <link>https://dev.to/this-is-angular/custom-directives-in-angular-2cp5</link>
      <guid>https://dev.to/this-is-angular/custom-directives-in-angular-2cp5</guid>
      <description>&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;oday we will learn how to create our own directives in Angular. In my previous posts I discussed all the built-in directives which Angular provided. If you are unaware, I would highly suggest you to start from the &lt;a href="https://dev.to/anubhab5/understanding-built-in-angular-directives-part-1-oln"&gt;part_1&lt;/a&gt; ( of the 6 series post).&lt;/p&gt;

&lt;p&gt;So the first question that can strike you is why we need a custom directive when Angular already provided us with 6 amazing directives. The simple reason is there can be multiple scenarios where the exact requirements are not met using the built-in directives. In those cases we need to write our own logic to meet the requirement and custom directives comes to the rescue.&lt;/p&gt;




&lt;p&gt;Now, lets see how we can create our own custom directive.&lt;br&gt;
The CLI command to create a new directive is -&lt;br&gt;
        &lt;code&gt;ng generate directive &amp;lt;directive-name&amp;gt;&lt;/code&gt;&lt;br&gt;
There is also a shorter way for the above command - &lt;br&gt;
        &lt;code&gt;ng g d &amp;lt;directive-name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lets create a simple directive which when applied to an element will add an underline to the text. Will name the directive as &lt;br&gt;
&lt;code&gt;my-underline&lt;/code&gt;&lt;br&gt;
Lets open the command prompt from the project directory and type in the below command -&lt;br&gt;
eg. &lt;code&gt;ng g d my-underline&lt;/code&gt;&lt;br&gt;
Once you run the above command the CLI should create 2 files&lt;br&gt;
&lt;em&gt;The directive file&lt;/em&gt;&lt;br&gt;
&lt;em&gt;The spec file of the directive&lt;/em&gt; ( for writing unit test)&lt;br&gt;
and update the module file (in the declaration array, just like component creation we saw &lt;a href="https://dev.to/anubhab5/creating-angular-component-129e"&gt;earlier&lt;/a&gt;).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xIV9NlBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1igsoi4c34th8ha3cie0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xIV9NlBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1igsoi4c34th8ha3cie0.PNG" alt="Image description" width="672" height="145"&gt;&lt;/a&gt;&lt;br&gt;
In the project folder you should see something like below -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iw2mDcRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgfldzqpdvg00mgj5n2r.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iw2mDcRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgfldzqpdvg00mgj5n2r.PNG" alt="Image description" width="481" height="339"&gt;&lt;/a&gt;&lt;br&gt;
We will work with the file pointed with yellow arrow &lt;br&gt;
&lt;code&gt;my-underline.directive.ts&lt;/code&gt;.&lt;br&gt;
Once you open the file you will see the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Directive } from '@angular/core';

@Directive({
  selector: '[appMyUnderline]'
})
export class MyUnderlineDirective {

  constructor() { }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we come across a new decorator &lt;code&gt;@Directive&lt;/code&gt;. The directive's selector is &lt;code&gt;appMyUnderline&lt;/code&gt;. In order to use the directive we need to use the selector name.&lt;/p&gt;

&lt;p&gt;Lets paste in the below code in the constructor -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  constructor(private el: ElementRef, private renderer: Renderer2) {
    this.renderer.setStyle(this.el.nativeElement, 
     'textDecoration', 'underline');
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are just scratching the surface of how to create a custom directive I am not diving deep in explaining what is &lt;code&gt;ElementRef&lt;/code&gt; or &lt;code&gt;Renderer2&lt;/code&gt; (which I will discuss in the advanced concept section).&lt;/p&gt;

&lt;p&gt;Now we need to use the directive as well. So lets open &lt;code&gt;app.component.html&lt;/code&gt; file and paste in the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div appMyUnderline&amp;gt;This text will be underlined!&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We just need to add the directive name in the element and it will work like magic.&lt;/p&gt;

&lt;p&gt;Now, lets start the application and open localhost:4200 in the browser. You should see the below output -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SkULXTlV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl3p9xbdubvl8vqb5a7t.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SkULXTlV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fl3p9xbdubvl8vqb5a7t.PNG" alt="Image description" width="302" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you can see the text has been underlined. You can reuse this feature as many times as you want.&lt;/p&gt;

&lt;p&gt;This is a simple example I showed but you can do many complex stuffs pretty easily using your own directive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt;
A directive does not have a template/ html file associated with it.&lt;br&gt;
So we can say Component is a directive with a template.&lt;br&gt;
We can use the directive selector as an &lt;strong&gt;attribute&lt;/strong&gt; (shown in the example), or as a &lt;strong&gt;class&lt;/strong&gt;, or as an &lt;strong&gt;id&lt;/strong&gt;. If you are not familiar with the selector types I would recommend you to go through &lt;a href="https://dev.to/anubhab5/various-types-of-angular-component-selectors-1ec"&gt;this post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So we learnt how to create a custom directive and how to use it.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed the post. If yes do like and comment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>directive</category>
    </item>
    <item>
      <title>build a tic tac toe game | react | tailwind css | next js</title>
      <author>shAtud</author>
      <pubDate>Fri, 31 Dec 2021 19:28:21 +0000</pubDate>
      <link>https://dev.to/shatud/build-a-tic-tac-toe-game-react-tailwind-css-next-js-hjh</link>
      <guid>https://dev.to/shatud/build-a-tic-tac-toe-game-react-tailwind-css-next-js-hjh</guid>
      <description>&lt;p&gt;build a tic tac toe game | react | tailwind css | next js&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=bZ1GqU7BC5k&amp;amp;feature=youtu.be"&gt;https://www.youtube.com/watch?v=bZ1GqU7BC5k&amp;amp;feature=youtu.be&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>tailwindcss</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Day 1 of Learning React</title>
      <author>Web.Developer.io</author>
      <pubDate>Fri, 31 Dec 2021 19:25:08 +0000</pubDate>
      <link>https://dev.to/developerioweb/day-1-of-learning-react-32o6</link>
      <guid>https://dev.to/developerioweb/day-1-of-learning-react-32o6</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  What
&lt;/h3&gt;

&lt;p&gt;React is  a Java-script Library used to build UI(User Interfaces)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is a Open-source project Developed by meta.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;In React we built Component that can be Reused.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In React our Focus is to built Components and by combining smaller component we make bigger Components.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Declarative Approach →&lt;/strong&gt; We Just have to tell the React What to do we don’t have to worry about how it do.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Component-based Design →&lt;/strong&gt; In React we use Re-useable component so we have to write the less code.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Virtual DOM →&lt;/strong&gt; So DOM is like a big tree which have the many elements and manipulating the DOM takes time , so what React does is It directly make changes in the Java-script then update in the DOM so that React can Stay Fast. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;JSX → Rather than making the sites in three Different file .html, .css, .js  , In React&lt;/strong&gt; We write all things in one file like for ex→ we have to make a button then we  have to make changes in 3 different file but in React we have to Create a Single Component (in which we write all css, js ,html ).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--59FHsPV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlae59b3xwtpohkv02zp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--59FHsPV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlae59b3xwtpohkv02zp.png" alt="!Image description" width="880" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react-a-library-or-framework"&gt;
  &lt;/a&gt;
  React a Library or Framework???
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#library"&gt;
  &lt;/a&gt;
  Library
&lt;/h3&gt;

&lt;p&gt;A library is a piece of code which we include in our code to get a specific Funtionality.&lt;/p&gt;

&lt;p&gt;If we are using the Library we have more Freedom than of a Framework like in frameworks we have to put the file in certain place.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#framework"&gt;
  &lt;/a&gt;
  Framework
&lt;/h3&gt;

&lt;p&gt;A Framework is a platform in which u can develop things &lt;/p&gt;

&lt;p&gt;In Framework u have to include the code in the Framework rather than in Library the case in reverse.&lt;/p&gt;

&lt;p&gt;we have a more structure than the Library.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;So React by it’s own is less functional but u can combine it with other things like React Router.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-component"&gt;
  &lt;/a&gt;
  What is a Component??
&lt;/h3&gt;

&lt;p&gt;So &lt;strong&gt;Component&lt;/strong&gt; is a Re-useable piece of code that is used to build sites. Also they are modular in nature.&lt;/p&gt;

&lt;p&gt;Component let us split the UI into different pieces and we can think of each piece in isolation.&lt;/p&gt;

&lt;p&gt;With Component u can pass the information from one component to another.&lt;/p&gt;

&lt;p&gt;There are 2 types of Component :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Class Based&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Function Based&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also a Component Return the HTML.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codesandbox.io/s/62x458v5pn"&gt;React Ratings Demo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Setting up the Server&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For to use the React u need to Have a Server Running.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Files to be included to ran a React site.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/react/umd/react.development.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/react-dom/umd/react-dom.development.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

//Earlier there is only one single file but nowadays it splits up in the 2 files.
1st File is for React -&amp;gt; To make Changes in the JavaScript or for Javascript also the same file we include in the during our App Development.
The 2nd File is used for DOM Manipulation.

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/babel-standalone"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

Also we have include another 
file called Babel 
It is used to convert the HTML like code into the 
Java-Script.

Also we have to tell the 
Compiler that there can be JSX in there
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/jsx"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;**
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;There are 2 Methods by which we can make the Components&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;→ &lt;strong&gt;Using Classes  (they are more Feature Rich)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;→ &lt;strong&gt;Using Function (They have less Features but there is something called React Hooks with which they became more Feature-able.)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;So as u know that a Component Return the HTML so we have also make a place where it can return the HTML.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"root"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
**We can select this using getElementById and Insert the HTML in it.**
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Let&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;s make a Hello world Component -&amp;gt;
class Hello extends React.Component{
    render(){
        return &amp;lt;H1&amp;gt; Hello World&amp;lt;/H1&amp;gt;
    }
}
-&amp;gt; But this only Return not manipulate the HTML

so for this we have
ReactDOM(&amp;lt;Component name&amp;gt;,&amp;lt;Where to Render it&amp;gt;)

ReactDOM(&amp;lt;Hello/&amp;gt;,document.getElementById(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;));  &amp;lt;- this will print the Hello world

**But what if we want to return Multiple things ?? return can only return only one thing
for this we can wrap it in a div**

class Hello extends React.Component{
    render(){
        return (
                &amp;lt;div&amp;gt;
                &amp;lt;H1&amp;gt; Hello World&amp;lt;/H1&amp;gt;
                &amp;lt;H1&amp;gt; Hello World&amp;lt;/H1&amp;gt;               
                &amp;lt;/div&amp;gt;
        )
    }
}
-&amp;gt; By this way we can print the Multiple things in it.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>MetaMask and Web3 Resources</title>
      <author>Eric Bishard</author>
      <pubDate>Fri, 31 Dec 2021 18:58:36 +0000</pubDate>
      <link>https://dev.to/httpjunkie/metamask-52bj</link>
      <guid>https://dev.to/httpjunkie/metamask-52bj</guid>
      <description>&lt;p&gt;Not just a crypto wallet but a gateway to exploring blockchain decentralized applications.&lt;/p&gt;

&lt;p&gt;With over 20 million users worldwide, &lt;a href="https://metamask.io"&gt;MetaMask&lt;/a&gt; empowers users with the ability to buy, store, send and swap Ethereum based tokens (&lt;a href="https://ethereum.org/en/developers/docs/standards/tokens/erc-20/"&gt;ERC-20&lt;/a&gt;, &lt;a href="https://ethereum.org/en/developers/docs/standards/tokens/erc-721/"&gt;ERC-721 (NFTs)&lt;/a&gt;, and more).&lt;/p&gt;

&lt;p&gt;Users can connect to blockchain applications and overall own their own data by generating passwords and keys on their own devices where they only have the access to their accounts and data with the right to choose what they want to share and keep private.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/YVgfHZMFFFQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we dive any deeper into the MetaMask ecosystem, take a minute to explore the meaning of any of the terms you may not already know in the list below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.metamask.io/guide/common-terms.html#blockchain"&gt;Blockchain&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#decentralize-decentralization"&gt;Decentralization&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#smart-contracts"&gt;Smart Contracts&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#trustless"&gt;Trustless&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#wallet"&gt;Wallet&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#account"&gt;Account&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#address-public-key"&gt;Address&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#public-key"&gt;Public Key&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#private-key"&gt;Private Key&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#keystore-file"&gt;Keystore File&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#mnemonic-phrase-seed-phrase-seed-words"&gt;Mnemonic/Seed Phrase&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#hardware-wallet"&gt;Hardware Wallet&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#identicon-addressidenticon-addressicon"&gt;Identicon&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#hexadecimal"&gt;Hexadecimal&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#seed"&gt;Seed&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#brain-wallet"&gt;Brain Wallet&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#entropy"&gt;Entropy&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#derive-derivation"&gt;Derivation&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#encryption"&gt;Encryption&lt;/a&gt;, &lt;a href="https://docs.metamask.io/guide/common-terms.html#encrypted-vs-unencrypted-keys"&gt;Encrypted Keys&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developing-with-metamask"&gt;
  &lt;/a&gt;
  Developing with MetaMask
&lt;/h2&gt;

&lt;p&gt;If you are a developer wanting to connect users to your decentralized application you can achieve the basics such basic vierification of the user and initiating transactions all the way to complete user account onboarding with convenience libraries like &lt;a href="https://www.npmjs.com/package/ethers"&gt;ethers&lt;/a&gt;, &lt;a href=""&gt;web3.js&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/web3"&gt;truffle&lt;/a&gt;, &lt;a href="https://www.trufflesuite.com/"&gt;embark&lt;/a&gt; and others.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://docs.metamask.io/guide/Getting-Started.html"&gt;MetaMask Docs&lt;/a&gt; can get you started by &lt;a href="https://metamask.io/download.html"&gt;downloading the extension&lt;/a&gt;, familiarization you with the &lt;a href="https://docs.metamask.io/guide/ethereum-provider.html"&gt;Ethereum Provider API&lt;/a&gt; to &lt;a href="https://docs.metamask.io/guide/Getting-Started.html#running-a-test-network"&gt;running a test network&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The easiest way to jump right in learning how to develop with Metamask (NodeJS required) is to try your hand at &lt;a href="https://docs.metamask.io/guide/create-dapp.html"&gt;Creating a Simple Dapp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other resources that I think you should consider if you are new to web3 development are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a0osIaAOFSE"&gt;The Complete Guide to Full Stack Ethereum Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@austin_48503/%EF%B8%8Fethereum-dev-speed-run-bd72bcba6a4c"&gt;Ethereum Speed Run&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MetaMask now provides a metamask-onboarding library designed to improve and simplify the onboarding experience. The new library exposes an API to initiate the onboarding process. In the process, it registers your site as the origin of the onboarding request. MetaMask will check for this origin after the user completes the onboarding flow. If it finds an origin, the final confirmation button of the MetaMask onboarding flow will indicate that the user will be redirected back to your site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onboarding-users"&gt;
  &lt;/a&gt;
  Onboarding Users
&lt;/h2&gt;

&lt;p&gt;As an Ethereum enabled site developer, sending users offsite to install MetaMask presents challenges. Most notably, you must inform the user to return to your site and refresh their browser after the installation. &lt;/p&gt;

&lt;p&gt;MetaMask now provides a &lt;a href="https://github.com/MetaMask/metamask-onboarding"&gt;metamask-onboarding library&lt;/a&gt; designed to improve and simplify the onboarding experience. The new library exposes an API to initiate the onboarding process. This process registers your site as the origin of the onboarding request. MetaMask will check for this origin after the user completes the onboarding flow. If it finds an origin, the final confirmation button of the MetaMask onboarding flow will indicate that the user will be redirected back to your site.&lt;/p&gt;

&lt;p&gt;MetaMask cares deeply about user experience and has been working diligently to give developers the tools they need in order to improve their own applications contributing overall to the usability of web3 technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#additional-features-and-resources"&gt;
  &lt;/a&gt;
  Additional Features and Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://metamask.io/swaps.html"&gt;MetaMask Swaps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metamask.io/1559.html"&gt;How Transaction Fees Will Change (EIP-1559)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metamask.io/institutions.html"&gt;Metamask Institutional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metamask.io/institutions/custody.html"&gt;Custody Partnerships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://metamask.io/faqs.html"&gt;MetaMask FAQs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://consensys.net/open-roles/?discipline=32543"&gt;MetaMask Job Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trufflesuite.com"&gt;Truffle Suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Metamask is part of the &lt;a href="https://ConsenSys.net"&gt;ConsenSys&lt;/a&gt; Product Family&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#metamask-explanatory-videos"&gt;
  &lt;/a&gt;
  MetaMask Explanatory Videos
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gsfJywNxpi4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/izvgAmbWPyE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oZIFy76TjJM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/V7Wqc7zFWhU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>web3</category>
      <category>blockchain</category>
      <category>metamask</category>
      <category>ethereum</category>
    </item>
    <item>
      <title>Client-side Rendering, Server-side Rendering, and SSG in Plain English</title>
      <author>Michael Hungbo</author>
      <pubDate>Fri, 31 Dec 2021 18:46:00 +0000</pubDate>
      <link>https://dev.to/heymich/client-side-rendering-server-side-rendering-and-ssg-in-plain-english-5h3b</link>
      <guid>https://dev.to/heymich/client-side-rendering-server-side-rendering-and-ssg-in-plain-english-5h3b</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;As a web developer, this may probably not be the first time you'll be hearing these terms. And if it is, I'm sure you're curious to know what the differences and similarities between these technologies are as they're almost everywhere and are essential for you to know as a web developer (You'll know just why in few minutes!).&lt;br&gt;
You may have come across fantastic articles and resources that have tried to explain these terminologies, but still, you forget or maybe had no idea what some of those contents were talking about. It is my hope that this will be the last article you'll have to read to understand CSR, SSR, and SSG, using words and examples that you can easily relate with. If you believe this is possible, let's ride!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#serverside-rendering-ssr"&gt;
  &lt;/a&gt;
  Server-side Rendering (SSR)
&lt;/h3&gt;

&lt;p&gt;SSR is the traditional method of developing websites and applications before the emergence of SPAs (Single Page Applications) and web-apps. As a matter of fact, what was popular in the early days of the web was the idea of web-pages. A company develops a landing page advertising a product with very little content and a little sub-pages, if any, which are usually static texts and images without presenting any form of interaction to the user.&lt;br&gt;
This architecture is the oldest in web development and is based primarily on client-server communication where the client requests for a page and the server sends the already-generated HTML file. In this type of development, the server is responsible for most of the heavy duties such as rendering and parsing the HTML into a useful file and all the browser or client does is to render the static file to the user.&lt;/p&gt;

&lt;p&gt;But what is a web server? According to Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A web server is computer software and underlying hardware that accepts requests via HTTP (the network protocol created to distribute web content) or its secure variant HTTPS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here's further explanation of the definition if it doesn't make much sense to you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Underlying components&lt;/strong&gt; -&amp;gt; A typical web server has two components, the software and hardware components. Examples of the software components include the operating system installed on the sever, databases, file system, etc. Examples of hardware components are, the computer memory (e.g. RAM), processors, power chips etc. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Web content&lt;/strong&gt;  -&amp;gt; A server serves mainly static contents, i.e. files that do not change. Examples are, HTML files, images, and CSS. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HTTP (Hypertext Transfer Protocol)&lt;/strong&gt; -&amp;gt; It's simply a set of standards and rules that specify how information and resources are shared between entities on the internet (e.g. a client and a server). &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HTTPS (Hypertext Transfer Protocol Secure)&lt;/strong&gt; -&amp;gt; It's a more secure variant of HTTP that adds additional layers of security to communication between entities on the internet.&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Even you can create a web server. Your PC or desktop computer with an operating system (software) and uninterrupted power supply can serve a few websites depending on your system memory capacity (hardware) to anybody who can connect to it.&lt;br&gt;
Examples of web servers are Apache, Nginx (pronounced 'engine x'), Google Web Server (GWS), etc. A client on the other hand is any device that requests for any content on the server. An example of a client is a user's browser.&lt;/p&gt;

&lt;p&gt;Here is an illustration to show how server-side rendered web-pages are delivered to the end-user:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TeJZZ7ZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kog1mqvvs7dyv0awjpyb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TeJZZ7ZU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kog1mqvvs7dyv0awjpyb.png" alt="Server-side rendering" width="767" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This traditional approach definitely has its benefits and also some downsides and is why there are emerging technologies such as CSR and SSG to minimize the disadvantages while preserving the advantages. &lt;/p&gt;

&lt;p&gt;Some of the pros and cons are discussed below:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Good for Search Engine Optimization (SEO)&lt;/strong&gt;  -&amp;gt; Since the server sends already-generated page contents, the web-page is readily available for web crawlers to index and this helps in our website ranking across search engines.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Good for static sites&lt;/strong&gt; -&amp;gt; SSR favors static sites because they require little user interactivity and this helps to reduce the load on the server and minimizes computing power and resource usage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Not great for apps with high user-interactivity&lt;/strong&gt; -&amp;gt; Applications that require high user inputs and are based on repeated client-server communication will be a bad idea to be developed with SSR. This is because a request is being made to the server on every page visit and every click of a button or any event-response based actions performed by the end user. Doing this generates heavy load on the server and may affect the server performance or in the worse case, leads to the server shutting down.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Slow subsequent page load&lt;/strong&gt; -&amp;gt; The initial load times of SSR web-pages are usually fast but when subsequent page requests are made, the content is fetch all over again even if there's been no changes to the markup.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Frequent server requests&lt;/strong&gt; -&amp;gt; For a web-page to be delivered in this system, the client has to make a request to the server for this each time a page is needed to be displayed. This way, too much trips are made to the server which increases the load on the server and may stress the computing power and overall performance of the server.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Browser APIs are unavailable&lt;/strong&gt; -&amp;gt; Since most of the page content are processed and rendered on the server, there's really no way to interact with browser APIs that are only accessible on the client-side.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples of technologies we can use for server-side rendering are, NextJS, GatsbyJS, etc.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#consider-ssr-if"&gt;
  &lt;/a&gt;
  Consider SSR if:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The website you are building doesn't require end-user interaction. Examples are news websites, personal blogs, etc.&lt;/li&gt;
&lt;li&gt;You have a little number of web-pages to deliver, consider using SSR.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#clientside-rendering-csr"&gt;
  &lt;/a&gt;
  Client-side Rendering (CSR)
&lt;/h3&gt;

&lt;p&gt;CSR is the complete opposite of SSR. Here, the browser is solely responsible for the tasks of parsing, rendering and displaying the page contents. CSR became very popular with the emergence of Single-Page Applications (SPAs). This development architecture relies heavily on the user's browser (the client) to process, parse, and render contents before they are displayed to the user. How this works is that the server sends an almost empty HTML file to the browser and also with it the JavaScript code needed for the website functionality because the server cannot run the JS code. The browser then parses and compiles this code and then populates the web-page with the HTML, JS code, and CSS using its own resources before the page content is finally rendered to the user and before any user actions are implemented, such as clicking a button to submit a form.&lt;/p&gt;

&lt;p&gt;There's need for CSR because of evolution of the web. The web has gone past serving end-users static contents and web-pages that are unresponsive and provide little or no interesting user experience.&lt;/p&gt;

&lt;p&gt;It is very unlikely that you won't use any of the browser APIs when building client-side rendered applications. In fact, there is no way to build CSR apps without using any of the browser APIs. This is because they are needed to provide interactive applications and the server doesn't provide any of these. One of the browser APIs that you can't do without is the Document Object Model API (DOM API). Granted, you may not be aware of some of these APIs being used, but a third party library you are using in the project may be using it behind the scenes.&lt;/p&gt;

&lt;p&gt;Often times, CSR applications usually require JavaScript to be enabled on the client, i.e. the browser for them to render any content. Take this React application for example:&lt;/p&gt;

&lt;p&gt;This is a simple react application bootstrapped with &lt;code&gt;yarn create react-app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you run this command to create a new React project, and you then start the development server, you should see the application running in your browser on &lt;code&gt;localhost:3000&lt;/code&gt; if everything went well:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qdSgL5LR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w8y6ldqetwfjgwi3k1od.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qdSgL5LR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w8y6ldqetwfjgwi3k1od.png" alt="A simple react app" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, if you get the above on your browser, it means JavaScript is currently enabled in your browser. And now, we'll disable it to see if our app will work as intended or not. To disable JavaScript on your browser, if you're using Chrome open the Developer Tools with &lt;code&gt;CTRL + Shift + J&lt;/code&gt; on Windows. Then open the Settings tab with &lt;code&gt;Shift + ?&lt;/code&gt;, scroll down to &lt;strong&gt;Debugger&lt;/strong&gt; and under it check the box that says &lt;code&gt;Disable JavaScript&lt;/code&gt;.&lt;br&gt;
Reload the page and then you'll see that your app isn't looking as before. The animated React logo is gone, everything we saw before is no more displayed. The page is empty but with just a text that says &lt;strong&gt;You need to enable JavaScript to run this app.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CVoGFrwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emoiwraa7zi0e3x0dtj1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CVoGFrwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emoiwraa7zi0e3x0dtj1.png" alt="You need to enable JavaScript to run this app" width="880" height="656"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's totally fine if you have no idea what React is or how it works. The result is pretty much the same if you're using other client-side JavaScript libraries/frameworks like Vue, Svelte, etc. &lt;br&gt;
This is just a basic app in React to demonstrate the importance of JavaScript in any client-side rendered application. &lt;/p&gt;

&lt;p&gt;Side-note: The process of rendering page contents to the user in a browser is a different topic on its own and we won't dive into it in this article. However, I'll provide links to resources that will solidify your understanding of rendering in the browser at the end of the article. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#examples-of-csr-technologies"&gt;
  &lt;/a&gt;
  Examples of CSR Technologies
&lt;/h4&gt;

&lt;p&gt;These include most JavaScript web frameworks and libraries such as ReactJS, NextJS, VueJS, AngularJS, among others.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros-and-cons-of-clientside-rendering"&gt;
  &lt;/a&gt;
  Pros and Cons of Client-side Rendering
&lt;/h4&gt;

&lt;p&gt;While a lot of web applications today are built on this architecture, it's essential we pay attention to the pros and cons of this technology. And also help us decide when each of these technologies fits our development needs best.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Great for apps with high user interactivity&lt;/strong&gt; -&amp;gt; There's a minimal server-client requests being made in this type of development, therefore, websites and apps that work based on this architecture are good for applications that require a lot of user interaction.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fast subsequent page load time&lt;/strong&gt; -&amp;gt; The initial of the CSR applications downloads all the required code and assets that are needed to build the entire website. Therefore, since there are no server requests to ask for resources for page loads because most of the routes have been fetched during the initial page load, subsequent load times for pages are usually faster.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Slow initial load time&lt;/strong&gt; -&amp;gt; Due to an almost empty HTML file being sent to the browser in the first page load and a heavy amount of code being received, there's a slow rendering of the page content. If the client's internet speed is slow, all they get to see on the screen is a blank page (or a fancy loading animation to keep our user's patience) which is bad for user experience. &lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Poor SEO&lt;/strong&gt; -&amp;gt; While the browser is busy parsing the server code, web crawlers scan our site for links and text and all they see is an almost empty page or a few link and texts, they ignore our site and move to other sites with better SEO. &lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#consider-csr-when"&gt;
  &lt;/a&gt;
  Consider CSR when:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Building interactive and feature-rich applications. E.g, chat apps, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#staticsite-generation-ssg"&gt;
  &lt;/a&gt;
  Static-site Generation (SSG)
&lt;/h3&gt;

&lt;p&gt;Static-site generation as the name implies is the pre-rendering of contents that do not change on the server. In SSG, static page contents are rendered on &lt;strong&gt;build-time&lt;/strong&gt; as opposed to SSR where page contents are rendered during &lt;strong&gt;run-time&lt;/strong&gt; or request time.&lt;/p&gt;

&lt;p&gt;What is build time? It's that process when the developer runs the code that optimizes all the static files that are required for making the site and are rendered on the server and then are delivered to a Content Delivery Network (CDN) that will eventually serve these pages to the user.&lt;br&gt;
It's very much similar to SSR and have a number of advantages over SSR which we'll discuss below.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Initial and subsequent page loads are fast&lt;/strong&gt; -&amp;gt; Static sites have contents that have been pre-rendered on the server and this makes the initial load time really fast. Subsequent page loads are also fast since the site's contents have been cached by a CDN that delivers these pages upon request without waiting for them to be re-rendered again.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Up-to-date content&lt;/strong&gt; -&amp;gt; Static sites have up-to-date page contents since upon every change that is made the site is re-built and the user always have updated content on every page request.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Good SEO&lt;/strong&gt; -&amp;gt; SSG presents good SEO as there is in SSG.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Security&lt;/strong&gt; -&amp;gt; Static sites usually have better protection from security risks since they are hosted on CDNs which provide additional layer of protection against malicious attacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Frequent page rebuilds&lt;/strong&gt; -&amp;gt; When changes are made to statically generated sites, there's need to perform rebuilds upon every change that is made in order to serve users with up-to-date content.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Build-time is proportional to site's content&lt;/strong&gt; -&amp;gt; Build-times may become longer than imagined when you have a few hundreds to thousands of pages to build. This means the build-time grows as your pages and contents grow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Examples of Static-site generators include, Next, Gatsby, Hugo, Eleventy, among others. You can check &lt;a href="https://www.staticgen.com"&gt;Staticgen&lt;/a&gt; for a comprehensive list of generators that might suit your need. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#consider-ssg-when"&gt;
  &lt;/a&gt;
  Consider SSG when:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;You are building a site whose primary function is to deliver content and large sites with hundreds or thousands (Okay, I'm exaggerating. Maybe not) of pages.&lt;/li&gt;
&lt;li&gt;You are building your next blog site.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Phew, that's a lot to take in! I wasn't expecting this article to be this long. Anyways, congratulations if you made it this far!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Our ability to choose the best technologies that fit our development needs will surely determine the general performance and health of the applications that we build. Now you know why it's essential that you understand the underlying principles and ideas behind these technologies.&lt;br&gt;
I believe by now you should be able to make informed decisions about which option you should go with when you're building your next bad-ass web project!&lt;br&gt;
And after reading this article, I hope you'll be able to answer anyone who asks you anything about CSR, SSR or SSG, confidently!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#come-lets-be-friends"&gt;
  &lt;/a&gt;
  Come, let's be friends
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yro9uVyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwqy1rk62t1fnzm0lpbn.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yro9uVyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rwqy1rk62t1fnzm0lpbn.jpeg" alt="Jide-kosoko meme" width="299" height="168"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you found this article helpful, you may consider following me for more contents on full-stack JavaScript development and lots more!&lt;/p&gt;

&lt;p&gt;You can also say hi on &lt;a href="https://twitter.com/michaelhungbo"&gt;Twitter&lt;/a&gt; 😊&lt;/p&gt;

&lt;p&gt;See you around!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
      <category>architecture</category>
    </item>
  </channel>
</rss>
