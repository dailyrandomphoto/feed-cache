<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>7 GitHub projects to supercharge your Docker practices üöÄüßë‚Äçüíª</title>
      <author>Ankit Anand ‚ú®</author>
      <pubDate>Sat, 23 Oct 2021 12:46:10 +0000</pubDate>
      <link>https://dev.to/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80</link>
      <guid>https://dev.to/ankit01oss/7-github-projects-to-supercharge-your-docker-practices-2i80</guid>
      <description>&lt;p&gt;Docker is an open-source container management platform used to build, run and package applications for deployment. It is an essential tool in every developer's toolkit.&lt;/p&gt;

&lt;p&gt;Here's a list of 7 GitHub projects which can make your Docker workflow better.üòé&lt;/p&gt;




&lt;p&gt;&lt;a href="https://bit.ly/3A6k4an"&gt;SigNoz&lt;/a&gt; is a full-stack open-source application performance monitoring tool. SigNoz is built to give SaaS like user experience combined with the perks of open-source software.&lt;/p&gt;

&lt;p&gt;Check out our GitHub repoüëá&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-github-signozsignoz-"&gt;
  &lt;/a&gt;
  &lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. üî• üñ•.   üëâ  Open source Application Performance Monitoring (APM) &amp;amp; Observability tool
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;
&lt;h3&gt;

  &lt;a href="https://signoz.io/docs" rel="nofollow"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.zh-cn.md"&gt;&lt;b&gt;ReadMe in Chinese&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.de-de.md"&gt;&lt;b&gt;ReadMe in German&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://github.com/SigNoz/signoz/blob/main/README.pt-br.md"&gt;&lt;b&gt;ReadMe in Portuguese&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://bit.ly/signoz-slack" rel="nofollow"&gt;&lt;b&gt;Slack Community&lt;/b&gt;&lt;/a&gt; ‚Ä¢
  &lt;a href="https://twitter.com/SigNozHq" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;
&lt;p&gt;üëâ You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;
&lt;p&gt;üëâ You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;
&lt;p&gt;üëâ Run aggregates on trace data to get business relevant metrics&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc8a12f92d8313d86b619bd96c558b458b30f24cdb847b42e4db383aa83238a3/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f7369676e6f7a5f6865726f5f6769746875622e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d86b90eea3d56848776f64d2e8188152844713a3079c158954a3f4a49f2fb120/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f436f6e747269627574696e672e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Join our Slack community&lt;/h2&gt;
&lt;p&gt;Come say Hi to us on &lt;a href="https://join.slack.com/t/signoz-community/shared_invite/zt-lrjknbbp-J_mI13rlw8pGF4EWBnorJA" rel="nofollow"&gt;Slack&lt;/a&gt; üëã&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/61f3487967fd24ab9d66eddfc48ab2b822ef4f1c300ac8db16bf27f70f9f94af/68747470733a2f2f7369676e6f7a2d7075626c69632e73332e75732d656173742d322e616d617a6f6e6177732e636f6d2f46656174757265732e737667" width="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1-docker-labs"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/docker/labs"&gt;Docker Labs&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠êÔ∏è GitHub stars: 10.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo contains Docker labs and tutorials authored both by Docker, and by members of the community. We welcome contributions and want to grow the repo. &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/docker"&gt;
        docker
      &lt;/a&gt; / &lt;a href="https://github.com/docker/labs"&gt;
        labs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a collection of tutorials for learning how to use Docker with various tools. Contributions welcome.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Docker Tutorials and Labs&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;At this time we are not actively adding labs to this repository. Our focus is on &lt;a href="https://training.play-with-docker.com" rel="nofollow"&gt;training.play-with-docker.com&lt;/a&gt; where new lab and workshop oriented content is being added. We welcome fixes to existing content. For any new content you wish to contribute, please use this repository:&lt;a href="https://github.com/play-with-docker/play-with-docker.github.io"&gt;https://github.com/play-with-docker/play-with-docker.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This repo contains &lt;a href="https://docker.com" rel="nofollow"&gt;Docker&lt;/a&gt; labs and tutorials authored both by Docker, and by members of the community. We welcome contributions and want to grow the repo.&lt;/p&gt;
&lt;h4&gt;
Docker tutorials:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsbeginner/readme.md"&gt;Docker for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsswarm-mode/README.md"&gt;Docker Swarm Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/labsdeveloper-tools/README.md"&gt;Configuring developer tools and programming languages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Java
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/java-debugging"&gt;Live Debugging Java with Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/java/"&gt;Docker for Java Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Node.js
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/nodejs-debugging"&gt;Live Debugging a Node.js application in Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdeveloper-tools/nodejs/porting/"&gt;Dockerizing a Node.js application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labswindows/readme.md"&gt;Docker for ASP.NET and Windows containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labs12factor/README.md"&gt;Building a 12 Factor app with Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labssecurity/README.md"&gt;Docker Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsnetworking/"&gt;Docker Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/labsdockercon-us-2017/"&gt;Hands-on Labs from DockerCon US 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Community tutorials&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/community/blob/master/curated-content.md"&gt;Docker Tutorials from the Community&lt;/a&gt; - links to a different repository&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/labs/tree/master/Docker-Orchestration"&gt;Advanced&lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/docker/labs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-minify-docker-container-image-by-30x"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/docker-slim/docker-slim"&gt;Minify Docker Container image by 30x&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠êÔ∏è GitHub stars: 10.8k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo can be used to optimize and secure containers, and the author also claims that you can minify your Docker images by 30x.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/docker-slim"&gt;
        docker-slim
      &lt;/a&gt; / &lt;a href="https://github.com/docker-slim/docker-slim"&gt;
        docker-slim
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      DockerSlim (docker-slim): Don't change anything in your Docker container image and minify it by up to 30x (and for compiled languages even more) making it secure too! (free and open source)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/docker-slim/docker-slimassets/images/dslim/DockerSlimLogo1Big.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--abQR-On0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/docker-slim/docker-slimassets/images/dslim/DockerSlimLogo1Big.png" alt="DSLIM1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitter.im/docker-slim/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b018f50edf4d2cd030f4ebcfac5f4cd28235d53385eeff7472f831516d1d4a88/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e2532306769747465722d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765" alt="Gitter chat"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/9tDyxYS" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9726a22cdc1539c17bdbdf7d1920b75825499b03d8a28c7b4916bd8304d3ac/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d63686174266d6573736167653d6f6e253230646973636f726426636f6c6f723d373338394438267374796c653d666f722d7468652d6261646765" alt="Discord chat"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/DockerSlim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5959e8f03e7b7c9f15a9fa267a0ee46821e55837e6becc3515401e54fc70dab8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f666f6c6c6f772d6f6e253230747769747465722d2532333144413146322e7376673f7374796c653d666f722d7468652d6261646765266c6f676f436f6c6f723d7768697465" alt="Follow"&gt;&lt;/a&gt;
&lt;a href="https://www.youtube.com/channel/UCy7RHjJlaBhpCCbChrd8POA?sub_confirmation=1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/598c78f4e374db546402736ffdfdd9b7607500135657107d43e38199e8fa3a37/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d596f75547562652d7265643f7374796c653d666f722d7468652d6261646765266c6f676f3d796f7574756265266c6f676f436f6c6f723d7768697465" alt="Youtube"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/docker-slim/docker-slim" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74f2ef92071cb14abb7a28c9422d8c9b450ec7ec7aa63a899a43ac43f76577f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d3930386138353f6c6f676f3d676974706f64267374796c653d666f722d7468652d6261646765" alt="Gitpod ready-to-code"&gt;&lt;/a&gt;
&lt;a href="https://github.com/docker-slim/docker-slim#installation"&gt;&lt;img src="https://camo.githubusercontent.com/33c7c804d9841f9f00432f9054a1e3847c1ce575e8f2fe924d242d79ac0875c8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f696e7374616c6c2d646f636b65722d2d736c696d2d626c75653f7374796c653d666f722d7468652d6261646765" alt="Install DockerSlim"&gt;&lt;/a&gt;
&lt;a href="https://github.com/docker-slim/examples"&gt;&lt;img src="https://camo.githubusercontent.com/7cb22ecde6a9ceb596cdd87244dcaca23a84bb26f8c3c85097f43c06894b6328/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f636b65722d2d736c696d2d6170702532306578616d706c65732d677265656e3f7374796c653d666f722d7468652d6261646765" alt="Get Examples"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portal.slim.dev/login?invitecode=invite.1s85zlfnYX0p5TT1XKja49pAHbL" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90f7f38a10a37042e4dc9b1cc1ee94e992a2d9494122f346ea022d9feee6b00a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7472792d536c696d253230536161532d7265643f7374796c653d666f722d7468652d6261646765" alt="Try Slim SaaS"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Optimize Your Experience with Containers. Make Your Containers Better, Smaller, More Secure and Do Less to Get There (free and open source!)&lt;/h1&gt;
&lt;p&gt;Don't change anything in your Docker container image and minify it by up to 30x making it secure too! Optimizing images isn't the only thing it can do though. It can also help you understand and author better container images.&lt;/p&gt;
&lt;p&gt;Keep doing what you are doing. No need to change anything. Use the base image you want. Use the package manager you want. Don't worry about hand optimizing your Dockerfile. You shouldn't have to throw away your tools and your workflow to have small container images.&lt;/p&gt;
&lt;p&gt;Don't worry about manually creating Seccomp and AppArmor security profiles. You shouldn't have to become an expert in Linux syscalls, Seccomp and AppArmor to have secure containers. Even if you do know enough about it wasting time reverse engineering your application behavior‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/docker-slim/docker-slim"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-dockerfiles-for-popular-apps"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/jessfraz/dockerfiles"&gt;Dockerfiles for popular Apps&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠êÔ∏è GitHub stars: 11.3k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Author Jessie Frazelle has built Docker images of popular applications to run on desktop.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jessfraz"&gt;
        jessfraz
      &lt;/a&gt; / &lt;a href="https://github.com/jessfraz/dockerfiles"&gt;
        dockerfiles
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Various Dockerfiles I use on the desktop and on servers.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
dockerfiles&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/jessfraz/dockerfiles/actions?query=workflow%3A%22make+test%22+branch%3Amaster"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3xE796cO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/jessfraz/dockerfiles/workflows/make%2520test/badge.svg" alt="make test"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a repo to hold various Dockerfiles for images I create.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jessfraz/dockerfiles#resources"&gt;Resources&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles#my-dotfiles"&gt;My dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jessfraz/dockerfiles#contributing"&gt;Contributing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jessfraz/dockerfiles#using-the-makefile"&gt;Using the &lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;Almost all of these live on dockerhub under &lt;a href="https://hub.docker.com/u/jess/" rel="nofollow"&gt;jess&lt;/a&gt;
Because you cannot use notary with autobuilds on dockerhub I also build these
continuously on a private registry at &lt;a href="https://r.j3ss.co/" rel="nofollow"&gt;r.j3ss.co&lt;/a&gt; for public download. (You're
welcome.)&lt;/p&gt;
&lt;h2&gt;
Resources&lt;/h2&gt;
&lt;h3&gt;
My dotfiles&lt;/h3&gt;
&lt;p&gt;You may also want to checkout my &lt;a href="https://github.com/jessfraz/dotfiles"&gt;dotfiles&lt;/a&gt;, specifically the aliases for all these files which are here: &lt;a href="https://github.com/jessfraz/dotfiles/blob/master/.dockerfunc"&gt;github.com/jessfraz/dotfiles/blob/master/.dockerfunc&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;I try to make sure each Dockerfile has a command at the top to document running it,
if a file you are looking at does not have a command, please
pull request it!&lt;/p&gt;
&lt;h3&gt;
Using the &lt;code&gt;Makefile&lt;/code&gt;
&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;$ make help
build                          Builds all the dockerfiles in the repository
dockerfiles                    Tests the changes to the Dockerfiles build.
image                          Build a Dockerfile (ex. DIR=telnet).
latest-versions                Checks all the&lt;/code&gt;&lt;/pre&gt;‚Ä¶&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jessfraz/dockerfiles"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-dockerfile-best-practices"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/hexops/dockerfile"&gt;Dockerfile best practices&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠êÔ∏è GitHub stars: 3.3k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repository has best-practices for writing Dockerfiles.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hexops"&gt;
        hexops
      &lt;/a&gt; / &lt;a href="https://github.com/hexops/dockerfile"&gt;
        dockerfile
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Dockerfile best-practices for writing production-worthy Docker images.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Dockerfile best practices &lt;a href="https://hexops.com" rel="nofollow"&gt;&lt;img alt="Hexops logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rMxXJBzA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/hexops/media/master/readme.svg"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Writing production-worthy Dockerfiles is, unfortunately, not as simple as you would imagine. Most Docker images in the wild fail here, and even professionals often&lt;a href="https://github.com/docker-library/postgres/issues/175"&gt;[1]&lt;/a&gt; get&lt;a href="https://github.com/prometheus/prometheus/issues/3441"&gt;[2]&lt;/a&gt; this&lt;a href="https://github.com/caddyserver/caddy-docker/issues/104"&gt;[3]&lt;/a&gt; wrong&lt;a href="https://github.com/docker-library/postgres/issues/796"&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This repository has best-practices for writing Dockerfiles that I (@slimsag) have quite painfully learned over the years both from my personal projects and from my work @sourcegraph. This is all guidance, not a mandate - there may sometimes be reasons to not do what is described here, but if you &lt;em&gt;don't know&lt;/em&gt; then this is probably what you should be doing.&lt;/p&gt;
&lt;h2&gt;
How to use this&lt;/h2&gt;
&lt;p&gt;Copy &lt;a href="https://github.com/hexops/dockerfile/blob/main/Dockerfile"&gt;the Dockerfile&lt;/a&gt; into your own project and follow the comments to create &lt;em&gt;your&lt;/em&gt; Dockerfile.&lt;/p&gt;
&lt;h2&gt;
Best practices included in the Dockerfile&lt;/h2&gt;
&lt;p&gt;The following are included in the Dockerfile in this repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hexops/dockerfile#run-as-a-non-root-user"&gt;Run as a non-root user&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hexops/dockerfile#do-not-use-a-uid-below-10000"&gt;Do not use a UID below 10,000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hexops/dockerfile#use-a-static-uid-and-gid"&gt;Use a static UID and GID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hexops/dockerfile#do-not-use-latest-pin-your-image-tags"&gt;Do&lt;/a&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hexops/dockerfile"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5-distroless-docker-images"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;Distroless Docker images&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠êÔ∏è GitHub stars: 11k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo has language focused docker images that contains only the applications and its runtime dependencies.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/GoogleContainerTools"&gt;
        GoogleContainerTools
      &lt;/a&gt; / &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;
        distroless
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ü•ë  Language focused docker images, minus the operating system.  
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
"Distroless" Docker Images&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/GoogleContainerTools/distroless/actions/workflows/ci.yaml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bFr3r7VC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/GoogleContainerTools/distroless/actions/workflows/ci.yaml/badge.svg" alt="CI Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;"Distroless" images contain only your application and its runtime dependencies
They do not contain package managers, shells or any other programs you would expect to find in a standard Linux distribution.&lt;/p&gt;
&lt;p&gt;For more information, see this &lt;a href="https://swampup2017.sched.com/event/A6CW/distroless-docker-containerizing-apps-not-vms?iframe=no&amp;amp;w=100%&amp;amp;sidebar=yes&amp;amp;bg=no" rel="nofollow"&gt;talk&lt;/a&gt; (&lt;a href="https://www.youtube.com/watch?v=lviLZFciDv4" rel="nofollow"&gt;video&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;
Why should I use distroless images?&lt;/h2&gt;
&lt;p&gt;Restricting what's in your runtime container to precisely what's necessary for your app is a best practice employed by Google
and other tech giants that have used containers in production for many years
It improves the signal to noise of scanners (e.g. CVE) and reduces the burden of establishing provenance to just what you need.&lt;/p&gt;
&lt;p&gt;Distroless images are &lt;em&gt;very small&lt;/em&gt;
The smallest distroless image, &lt;code&gt;gcr.io/distroless/static&lt;/code&gt;, is around 650 kB.
That's about 25% of the size of &lt;code&gt;alpine&lt;/code&gt; (~2.5 MB), and less than 1.5% of the size of &lt;code&gt;debian&lt;/code&gt; (50 MB).&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;gcr.io/distroless/static&lt;/code&gt; is a container image that's much‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/GoogleContainerTools/distroless"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-watchtower"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/containrrr/watchtower"&gt;WatchTower&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠êÔ∏è GitHub stars: 9.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This GitHub repo can be used to automate Docker container base image updates.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/containrrr"&gt;
        containrrr
      &lt;/a&gt; / &lt;a href="https://github.com/containrrr/watchtower"&gt;
        watchtower
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A process for automating Docker container base image updates. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/containrrr/watchtower./logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uov0L2YD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/containrrr/watchtower./logo.png" width="450"&gt;&lt;/a&gt;
&lt;h1&gt;
Watchtower&lt;/h1&gt;
&lt;p&gt;A process for automating Docker container base image updates
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bb5f668dcb473565f74858a90fe268627f29042554033bcb35ea67d1d958d0d3/68747470733a2f2f636972636c6563692e636f6d2f67682f636f6e7461696e7272722f7761746368746f7765722e7376673f7374796c653d736869656c64" alt="Circle CI"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1bce5bd5495058e1d66acda4134c017ba175645af281c7644435e5132bda6d02/68747470733a2f2f636f6465636f762e696f2f67682f636f6e7461696e7272722f7761746368746f7765722f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://godoc.org/github.com/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f2ab639ff899a63a1fbf7fd2773dafd4891ff0cdbee02f3e0f311523e4acc07b/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f636f6e7461696e7272722f7761746368746f7765723f7374617475732e737667" alt="GoDoc"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a491791c338595d1faa34fa48f0da7e5ffd059c0ee19752d478de164d6fe4e09/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f636f6e7461696e7272722f7761746368746f776572" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a href="https://github.com/containrrr/watchtower/releases"&gt;&lt;img src="https://camo.githubusercontent.com/9a10ec6b9b5638f9f88491bdb3139aa5a2d45adfe8bb117426ccdcdc7b725051/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f636f6e7461696e7272722f7761746368746f7765722e737667" alt="latest version"&gt;&lt;/a&gt;
&lt;a href="https://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d6e5580e915a413fa60d140470c2de1dcf71716d8403d648b9aae8057ecf154/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f636f6e7461696e7272722f7761746368746f7765722e737667" alt="Apache-2.0 License"&gt;&lt;/a&gt;
&lt;a href="https://www.codacy.com/gh/containrrr/watchtower/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=containrrr/watchtower&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f13c220cbca0ffd4154803c02acebd3ce8b62541eb8250d44c3358970117953b/68747470733a2f2f6170702e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3163343863666237363436643430303961613863366637313238373637306238" alt="Codacy Badge"&gt;&lt;/a&gt;
&lt;a href="https://github.com/containrrr/watchtower#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/29746966a3830cba472d0fecc8ad0faadb3e3f7dd589bf2a95c32551e4c54065/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616c6c2d636f6e7472696275746f72732f636f6e7461696e7272722f7761746368746f776572" alt="All Contributors"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/containrrr/watchtower" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11ad68978d447f234f699a8d7f0de989863bbb4640c35b3986a810ac70e5a430/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f636f6e7461696e7272722f7761746368746f7765722e737667" alt="Pulls from DockerHub"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;
Quick Start&lt;/h2&gt;
&lt;p&gt;With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry.&lt;/p&gt;
&lt;p&gt;Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially. Run the watchtower container with the following command:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;$ docker run -d \
    --name watchtower \
    -v /var/run/docker.sock:/var/run/docker.sock \
    containrrr/watchtower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;The full documentation is available at &lt;a href="https://containrrr.dev/watchtower" rel="nofollow"&gt;https://containrrr.dev/watchtower&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Contributors&lt;/h2&gt;
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key" rel="nofollow"&gt;emoji key&lt;/a&gt;):&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
&lt;tr&gt;
    &lt;td&gt;
&lt;a href="http://codelica.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_f-lFe3R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/386101%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;James&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Codelica" title="Tests"&gt;‚ö†Ô∏è&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower#ideas-Codelica" title="Ideas, Planning, &amp;amp; Feedback"&gt;ü§î&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://kopfkrieg.org" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PNJToIqD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/5047813%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Florian&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3AKopfKrieg" title="Reviewed Pull Requests"&gt;üëÄ&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=KopfKrieg" title="Documentation"&gt;üìñ&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/bdehamer"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wLCreECc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars1.githubusercontent.com/u/398027%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Brian DeHamer&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=bdehamer" title="Code"&gt;üíª&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower#maintenance-bdehamer" title="Maintenance"&gt;üöß&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/rosscado"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HYhSoIJ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars1.githubusercontent.com/u/16578183%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Ross Cadogan&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rosscado" title="Code"&gt;üíª&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/stffabi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MIYA3Gd6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars0.githubusercontent.com/u/9464631%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;stffabi&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=stffabi" title="Code"&gt;üíª&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower#maintenance-stffabi" title="Maintenance"&gt;üöß&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/ATCUSA"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YY1VSCb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/3581228%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Austin&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=ATCUSA" title="Documentation"&gt;üìñ&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://labs.ctl.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Jyy6J4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/6181487%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;David Gardner&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/pulls?q=is%3Apr+reviewed-by%3Adavidgardner11" title="Reviewed Pull Requests"&gt;üëÄ&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=davidgardner11" title="Documentation"&gt;üìñ&lt;/a&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
&lt;a href="https://github.com/dolanor"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2DzR_eyf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/928722%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Tanguy ‚ßì Herrmann&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=dolanor" title="Code"&gt;üíª&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/rdamazio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRa1i5hQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/997641%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Rodrigo Damazio Bovendorp&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=rdamazio" title="Code"&gt;üíª&lt;/a&gt; &lt;a href="https://github.com/containrrr/watchtower/commits?author=rdamazio" title="Documentation"&gt;üìñ&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://www.taisun.io/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bLsvGk7w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/1852688%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Ryan Kuba&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower#infra-thelamer" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;üöá&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="https://github.com/cnrmck"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dHhgQmkw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars2.githubusercontent.com/u/22061955%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;cnrmck&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=cnrmck" title="Documentation"&gt;üìñ&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="http://harrywalter.co.uk" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qC9FeZJH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/338588%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Harry Walter&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=haswalt" title="Code"&gt;üíª&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="http://projectsperanza.com" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vYroywfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars3.githubusercontent.com/u/74515%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Robotex&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/containrrr/watchtower/commits?author=Robotex" title="Documentation"&gt;üìñ&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;a href="http://geraldpape.io" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j-JFAxmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars0.githubusercontent.com/u/1494211%3Fv%3D4%3Fs%3D100" width="100px;" alt=""&gt;&lt;br&gt;&lt;b&gt;Gerald Pape&lt;/b&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/containrrr/watchtower"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#7-docker-bench-for-security"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/docker/docker-bench-security"&gt;Docker bench for security&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;‚≠êÔ∏è GitHub stars: 7.1k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Docker Bench for Security is a script that checks for dozens of common best-practices around deploying Docker containers in production.&lt;/p&gt;




&lt;p&gt;I hope you enjoyed this list!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>docker</category>
      <category>kubernetes</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Top 5 Visual Studio Code Extensions for Programmers (2021)</title>
      <author>Mohammed Abiola</author>
      <pubDate>Sat, 23 Oct 2021 12:30:58 +0000</pubDate>
      <link>https://dev.to/devmohy/top-5-visual-studio-code-extensions-for-programmers-2021-3nl3</link>
      <guid>https://dev.to/devmohy/top-5-visual-studio-code-extensions-for-programmers-2021-3nl3</guid>
      <description>&lt;p&gt;One of the best code editors in the developer community is Visual Studio Code. The numerous extensions that speed up the development process are one of the reasons behind VS Code's popularity.&lt;/p&gt;

&lt;p&gt;This post will cover Top 5 Vs Code extensions for developers in 2021 which will help improve productivity and speed up development processes.&lt;/p&gt;

&lt;p&gt;Let get Started;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Prettier&lt;br&gt;
Prettier is a code formatter popularly used by several developers. It supports so many languages like JavaScript, JSX, Angular, Vue and many more. When working with other developers, having uniform formatting and styling across your code can save a lot of time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Live Share&lt;br&gt;
Live Share enables you to quickly collaborate with a friend, classmate, or professor on the same code without the need to sync code or to configure the same development tools, settings, or environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Live Server&lt;br&gt;
Launch a development local Server with live reload feature for static &amp;amp; dynamic pages, this extension will help instantly reflect changes in browser each time you save your code which improve productivity and make it easier to do some quick experiment with your code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ES6 Snippets&lt;br&gt;
This extension contains code snippets for JavaScript in ES6 syntax for Vs Code editor (supports both JavaScript and TypeScript).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Debugger for chrome&lt;br&gt;
A VS Code extension to debug your JavaScript code in the Google Chrome browser, or other targets that support the Chrome DevTools Protocol.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>vscode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Next.Js Series #6 - How does 'Image' component from 'next/image' improve the web app performance</title>
      <author>Dylan Oh</author>
      <pubDate>Sat, 23 Oct 2021 12:04:50 +0000</pubDate>
      <link>https://dev.to/ohdylan/nextjs-series-6-how-does-image-component-from-nextimage-improve-the-web-app-performance-and-googles-search-ranking-1pkg</link>
      <guid>https://dev.to/ohdylan/nextjs-series-6-how-does-image-component-from-nextimage-improve-the-web-app-performance-and-googles-search-ranking-1pkg</guid>
      <description>&lt;p&gt;&amp;lt;Image/&amp;gt; component is a html &amp;lt;img/&amp;gt; extension that we can import from 'next/image'. It provides some out-of-the-box benefits which will greatly improve the performance of our web app. Here are some main features of using Image component from Next.Js that I feel most useful:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Improve visual stability&lt;/li&gt;
&lt;li&gt;By providing the defined size of image container, this could prevent cumulative layout shift (CLS). &lt;/li&gt;
&lt;li&gt;Out of the box lazy loading to improve performance.&lt;/li&gt;
&lt;li&gt;Flexibility on using local static images or external resources from remote servers.&lt;/li&gt;
&lt;li&gt;Images are responsive by default without further configurations.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are required props that need to be passed into this Image component, such as:&lt;br&gt;
&lt;strong&gt;src&lt;/strong&gt; -&amp;gt; The source of image (can be local static image or external resource)&lt;br&gt;
&lt;strong&gt;width&lt;/strong&gt;, &lt;strong&gt;height&lt;/strong&gt; -&amp;gt; These two are required for images which are imported from external resource. Next.Js can automatically determine the height and width of local static images.&lt;/p&gt;

&lt;p&gt;Here are also some useful optional props that can be utilized to customize the behaviours of image loading:&lt;br&gt;
&lt;strong&gt;priority&lt;/strong&gt; -&amp;gt; This is to flag the image is supposed to be preloaded instead of lazy-loading. It is useful to improve 'Largest Contentful Paint' metric.&lt;br&gt;
&lt;strong&gt;loader&lt;/strong&gt; -&amp;gt; You may customize your own loader component and pass into Image component through this prop.&lt;br&gt;
&lt;strong&gt;placeholder&lt;/strong&gt;, &lt;strong&gt;blurDataUrl&lt;/strong&gt; -&amp;gt; These two props are used together if you would like to put a blur image source as a placeholder before the image from 'src' gets loaded successfully. If your 'src'(.jpg, .png, or .webp) is from local file system, you do not need to provide 'blurDataUrl' and Next.Js will autopopulate.&lt;br&gt;
&lt;strong&gt;layout&lt;/strong&gt; -&amp;gt; This prop by default has the value of 'intrinsic', which means your image will automatically scale down to fit the width of container if smaller, up to image size if larger (which is the normal use case). &lt;br&gt;
&lt;strong&gt;loading&lt;/strong&gt; -&amp;gt; This loading prop has the default value of 'lazy', which will only be rendered when the image container enters the viewport.&lt;/p&gt;

&lt;p&gt;Here is the demonstration of Image component for a simple blog post:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../styles/Home.module.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next/image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;image3&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../images/unsplash-image-3.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;image1&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../images/unsplash-image-1.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;image2&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../images/unsplash-image-2.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ImageBlog&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;HELLO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;THIS&lt;/span&gt; &lt;span class="nx"&gt;IS&lt;/span&gt; &lt;span class="nx"&gt;IMAGE&lt;/span&gt; &lt;span class="nx"&gt;BLOG&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;
                &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;image3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is image 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;priority&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Lorem&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt; &lt;span class="nx"&gt;adipiscing&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Proin&lt;/span&gt; &lt;span class="nx"&gt;placerat&lt;/span&gt; &lt;span class="nx"&gt;vehicula&lt;/span&gt; &lt;span class="nx"&gt;felis&lt;/span&gt; &lt;span class="nx"&gt;eget&lt;/span&gt; &lt;span class="nx"&gt;feugiat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nullam&lt;/span&gt; &lt;span class="nx"&gt;mattis&lt;/span&gt; &lt;span class="nx"&gt;feugiat&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;pellentesque&lt;/span&gt; &lt;span class="nx"&gt;eget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Praesent&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;varius&lt;/span&gt; &lt;span class="nx"&gt;est&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;rutrum&lt;/span&gt; &lt;span class="nx"&gt;nisl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Maecenas&lt;/span&gt; &lt;span class="nx"&gt;feugiat&lt;/span&gt; &lt;span class="nx"&gt;vitae&lt;/span&gt; &lt;span class="nx"&gt;quam&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;imperdiet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nam&lt;/span&gt; &lt;span class="nx"&gt;vulputate&lt;/span&gt; &lt;span class="nx"&gt;volutpat&lt;/span&gt; &lt;span class="nx"&gt;metus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mollis&lt;/span&gt; &lt;span class="nx"&gt;faucibus&lt;/span&gt; &lt;span class="nx"&gt;nisi&lt;/span&gt; &lt;span class="nx"&gt;eleifend&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Integer&lt;/span&gt; &lt;span class="nx"&gt;egestas&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt; &lt;span class="nx"&gt;odio&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;eget&lt;/span&gt; &lt;span class="nx"&gt;ultrices&lt;/span&gt; &lt;span class="nx"&gt;leo&lt;/span&gt; &lt;span class="nx"&gt;condimentum&lt;/span&gt; &lt;span class="nx"&gt;eu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vestibulum&lt;/span&gt; &lt;span class="nx"&gt;quis&lt;/span&gt; &lt;span class="nx"&gt;accumsan&lt;/span&gt; &lt;span class="nx"&gt;enim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Aenean&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;justo&lt;/span&gt; &lt;span class="nx"&gt;tortor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Duis&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;vulputate&lt;/span&gt; &lt;span class="nx"&gt;commodo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Maecenas&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;laoreet&lt;/span&gt; &lt;span class="nx"&gt;felis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;quis&lt;/span&gt; &lt;span class="nx"&gt;euismod&lt;/span&gt; &lt;span class="nx"&gt;quam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nulla&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;nibh&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;lacinia&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt; &lt;span class="nx"&gt;eu&lt;/span&gt; &lt;span class="nx"&gt;mauris&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                &lt;span class="nx"&gt;Nam&lt;/span&gt; &lt;span class="nx"&gt;ornare&lt;/span&gt; &lt;span class="nx"&gt;congue&lt;/span&gt; &lt;span class="nx"&gt;egestas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;urna&lt;/span&gt; &lt;span class="nx"&gt;convallis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;efficitur&lt;/span&gt; &lt;span class="nx"&gt;mauris&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;eleifend&lt;/span&gt; &lt;span class="nx"&gt;sem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vivamus&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;tempus&lt;/span&gt; &lt;span class="nx"&gt;risus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Donec&lt;/span&gt; &lt;span class="nx"&gt;dignissim&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt; &lt;span class="nx"&gt;arcu&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;laoreet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Aenean&lt;/span&gt; &lt;span class="nx"&gt;ultrices&lt;/span&gt; &lt;span class="nx"&gt;porta&lt;/span&gt; &lt;span class="nx"&gt;diam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Duis&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;eros&lt;/span&gt; &lt;span class="nx"&gt;vehicula&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ornare&lt;/span&gt; &lt;span class="nx"&gt;felis&lt;/span&gt; &lt;span class="nx"&gt;eu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;eleifend&lt;/span&gt; &lt;span class="nx"&gt;diam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Praesent&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;erat&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt; &lt;span class="nx"&gt;feugiat&lt;/span&gt; &lt;span class="nx"&gt;molestie&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt; &lt;span class="nx"&gt;felis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
                &lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;ullamcorper&lt;/span&gt; &lt;span class="nx"&gt;accumsan&lt;/span&gt; &lt;span class="nx"&gt;mi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;dignissim&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;vestibulum&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Quisque&lt;/span&gt; &lt;span class="nx"&gt;diam&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;congue&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;sagittis&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dapibus&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;odio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Praesent&lt;/span&gt; &lt;span class="nx"&gt;convallis&lt;/span&gt; &lt;span class="nx"&gt;augue&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;fringilla&lt;/span&gt; &lt;span class="nx"&gt;maximus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Aliquam&lt;/span&gt; &lt;span class="nx"&gt;varius&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt; &lt;span class="nx"&gt;cursus&lt;/span&gt; &lt;span class="nx"&gt;tempus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Donec&lt;/span&gt; &lt;span class="nx"&gt;lacus&lt;/span&gt; &lt;span class="nx"&gt;purus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="nx"&gt;ultrices&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sollicitudin&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;erat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Curabitur&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt; &lt;span class="nx"&gt;lorem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="nx"&gt;feugiat&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Curabitur&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;pretium&lt;/span&gt; &lt;span class="nx"&gt;nulla&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;pulvinar&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Aliquam&lt;/span&gt; &lt;span class="nx"&gt;blandit&lt;/span&gt; &lt;span class="nx"&gt;neque&lt;/span&gt; &lt;span class="nx"&gt;blandit&lt;/span&gt; &lt;span class="nx"&gt;felis&lt;/span&gt; &lt;span class="nx"&gt;interdum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;dictum&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt; &lt;span class="nx"&gt;porttitor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Mauris&lt;/span&gt; &lt;span class="nx"&gt;condimentum&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;placerat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Suspendisse&lt;/span&gt; &lt;span class="nx"&gt;rhoncus&lt;/span&gt; &lt;span class="nx"&gt;finibus&lt;/span&gt; &lt;span class="nx"&gt;leo&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;sagittis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Cras&lt;/span&gt; &lt;span class="nx"&gt;quis&lt;/span&gt; &lt;span class="nx"&gt;odio&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt; &lt;span class="nx"&gt;ante&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt; &lt;span class="nx"&gt;viverra&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt; &lt;span class="nx"&gt;dui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nunc&lt;/span&gt; &lt;span class="nx"&gt;tristique&lt;/span&gt; &lt;span class="nx"&gt;dictum&lt;/span&gt; &lt;span class="nx"&gt;metus&lt;/span&gt; &lt;span class="nx"&gt;vitae&lt;/span&gt; &lt;span class="nx"&gt;pharetra&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vivamus&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;leo&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;urna&lt;/span&gt; &lt;span class="nx"&gt;sagittis&lt;/span&gt; &lt;span class="nx"&gt;efficitur&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;ante&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nulla&lt;/span&gt; &lt;span class="nx"&gt;pellentesque&lt;/span&gt; &lt;span class="nx"&gt;malesuada&lt;/span&gt; &lt;span class="nx"&gt;imperdiet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Phasellus&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;lacus&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lobortis&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt; &lt;span class="nx"&gt;nisl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vivamus&lt;/span&gt; &lt;span class="nx"&gt;eget&lt;/span&gt; &lt;span class="nx"&gt;lobortis&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;
                &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;image2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is image 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
                &lt;span class="nx"&gt;Vivamus&lt;/span&gt; &lt;span class="nx"&gt;laoreet&lt;/span&gt; &lt;span class="nx"&gt;ex&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;ligula&lt;/span&gt; &lt;span class="nx"&gt;vestibulum&lt;/span&gt; &lt;span class="nx"&gt;congue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Pellentesque&lt;/span&gt; &lt;span class="nx"&gt;porttitor&lt;/span&gt; &lt;span class="nx"&gt;tellus&lt;/span&gt; &lt;span class="nx"&gt;ut&lt;/span&gt; &lt;span class="nx"&gt;odio&lt;/span&gt; &lt;span class="nx"&gt;pulvinar&lt;/span&gt; &lt;span class="nx"&gt;sagittis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Morbi&lt;/span&gt; &lt;span class="nx"&gt;viverra&lt;/span&gt; &lt;span class="nx"&gt;tristique&lt;/span&gt; &lt;span class="nx"&gt;dignissim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Proin&lt;/span&gt; &lt;span class="nx"&gt;interdum&lt;/span&gt; &lt;span class="nx"&gt;luctus&lt;/span&gt; &lt;span class="nx"&gt;semper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nulla&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;pulvinar&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Curabitur&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;dapibus&lt;/span&gt; &lt;span class="nx"&gt;sem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Mauris&lt;/span&gt; &lt;span class="nx"&gt;rhoncus&lt;/span&gt; &lt;span class="nx"&gt;aliquam&lt;/span&gt; &lt;span class="nx"&gt;felis&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;feugiat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Curabitur&lt;/span&gt; &lt;span class="nx"&gt;ti&lt;/span&gt;
                &lt;span class="nx"&gt;ncidunt&lt;/span&gt; &lt;span class="nx"&gt;facilisis&lt;/span&gt; &lt;span class="nx"&gt;semper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

                &lt;span class="nx"&gt;Etiam&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;risus&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt; &lt;span class="nx"&gt;tincidunt&lt;/span&gt; &lt;span class="nx"&gt;posuere&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Integer&lt;/span&gt; &lt;span class="nx"&gt;fermentum&lt;/span&gt; &lt;span class="nx"&gt;pellentesque&lt;/span&gt; &lt;span class="nx"&gt;velit&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt; &lt;span class="nx"&gt;venenatis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Etiam&lt;/span&gt; &lt;span class="nx"&gt;eleifend&lt;/span&gt; &lt;span class="nx"&gt;laoreet&lt;/span&gt; &lt;span class="nx"&gt;rhoncus&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Aenean&lt;/span&gt; &lt;span class="nx"&gt;cursus&lt;/span&gt; &lt;span class="nx"&gt;tortor&lt;/span&gt; &lt;span class="nx"&gt;neque&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;varius&lt;/span&gt; &lt;span class="nx"&gt;eros&lt;/span&gt; &lt;span class="nx"&gt;hendrerit&lt;/span&gt; &lt;span class="nx"&gt;quis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Maecenas&lt;/span&gt; &lt;span class="nx"&gt;eu&lt;/span&gt; &lt;span class="nx"&gt;porttitor&lt;/span&gt; &lt;span class="nx"&gt;eros&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Integer&lt;/span&gt; &lt;span class="nx"&gt;quis&lt;/span&gt; &lt;span class="nx"&gt;fringilla&lt;/span&gt; &lt;span class="nx"&gt;mauris&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Morbi&lt;/span&gt; &lt;span class="nx"&gt;pulvinar&lt;/span&gt; &lt;span class="nx"&gt;mattis&lt;/span&gt; &lt;span class="nx"&gt;justo&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;elementum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Phasellus&lt;/span&gt; &lt;span class="nx"&gt;aliquam&lt;/span&gt; &lt;span class="nx"&gt;auctor&lt;/span&gt; &lt;span class="nx"&gt;orci&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;hendrerit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;In&lt;/span&gt; &lt;span class="nx"&gt;ante&lt;/span&gt; &lt;span class="nx"&gt;nisl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pretium&lt;/span&gt; &lt;span class="nx"&gt;vitae&lt;/span&gt; &lt;span class="nx"&gt;volutpat&lt;/span&gt; &lt;span class="nx"&gt;et&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;semper&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt; &lt;span class="nx"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Phasellus&lt;/span&gt; &lt;span class="nx"&gt;leo&lt;/span&gt; &lt;span class="nx"&gt;arcu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;congue&lt;/span&gt; &lt;span class="nx"&gt;eu&lt;/span&gt; &lt;span class="nx"&gt;convallis&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;varius&lt;/span&gt; &lt;span class="nx"&gt;quis&lt;/span&gt; &lt;span class="nx"&gt;sem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Quisque&lt;/span&gt; &lt;span class="nx"&gt;sodales&lt;/span&gt; &lt;span class="nx"&gt;neque&lt;/span&gt; &lt;span class="nx"&gt;blandit&lt;/span&gt; &lt;span class="nx"&gt;massa&lt;/span&gt; &lt;span class="nx"&gt;mollis&lt;/span&gt; &lt;span class="nx"&gt;bibendum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Cras&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt; &lt;span class="nx"&gt;molestie&lt;/span&gt; &lt;span class="nx"&gt;velit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Nullam&lt;/span&gt; &lt;span class="nx"&gt;vel&lt;/span&gt; &lt;span class="nx"&gt;consequat&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;non&lt;/span&gt; &lt;span class="nx"&gt;porta&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Sed&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt; &lt;span class="nx"&gt;mi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Etiam&lt;/span&gt; &lt;span class="nx"&gt;iaculis&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;sed&lt;/span&gt; &lt;span class="nx"&gt;porttitor&lt;/span&gt; &lt;span class="nx"&gt;gravida&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Duis&lt;/span&gt; &lt;span class="nx"&gt;nec&lt;/span&gt; &lt;span class="nx"&gt;pretium&lt;/span&gt; &lt;span class="nx"&gt;ante&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;
                &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;image1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is image 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blur&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="nx"&gt;below&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;external&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt;
                &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y932fq3n05i422leqbbs.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Test image from AWS S3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1200&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1800&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
             &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first three static images are imported locally, and the last image is an external resource (I uploaded to dev.to's AWS S3). You can see that we do not need to provide 'width' and 'height' props for local images, but for externally imported one. Do note that if we want to import the image from external resource, we need to specify the url domains under 'images' in next.config.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;domains&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dev-to-uploads.s3.amazonaws.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You could also see that the images are automatically responsive.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On iPad Pro&lt;/em&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MvLFgkGP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4yr8mqzbnj66tzprczs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MvLFgkGP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4yr8mqzbnj66tzprczs.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On iPhone&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ewPZoJLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df01u697lkbwgfya01bd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ewPZoJLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df01u697lkbwgfya01bd.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While you are scrolling through the page, checkout the network tab and you will notice that images are only downloaded when they enter viewport.&lt;/p&gt;

&lt;p&gt;Hope this gives you some insights on using the Image component of Next.Js.&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>image</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Tools That Have Made React Documentation A Piece of Cake</title>
      <author>Sankalp Swami</author>
      <pubDate>Sat, 23 Oct 2021 11:48:31 +0000</pubDate>
      <link>https://dev.to/sankalpswami1122/tools-that-have-made-react-documentation-a-piece-of-cake-2kp3</link>
      <guid>https://dev.to/sankalpswami1122/tools-that-have-made-react-documentation-a-piece-of-cake-2kp3</guid>
      <description>&lt;p&gt;&lt;a href="https://aviyel.com/post/1241/tools-that-have-made-react-documentation-a-piece-of-cake"&gt;Full article is available on Aviyel&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P9EECUBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1634904898596-tools-that-have-made-react-documentation-a-piece-of-cake.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P9EECUBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1634904898596-tools-that-have-made-react-documentation-a-piece-of-cake.png" alt="React Component Documentation"&gt;&lt;/a&gt;&lt;br&gt;
If you are a front end developer, chances are; you already had used React at least once till now. It all started with Facebook‚Äôs decision to launch live chat integrations to the platform, way back in 2013. The task was complex, maybe more complex than Facebook‚Äôs UI architecture with untraceable DOM mutation in those days. And then React saw the light of the day!&lt;br&gt;
React fixed the DOM race conditions plaguing Facebook‚Äôs UI for a while through ‚ÄòFlux‚Äô architecture to control DOM mutations and deploying an irreversible component state. It got so popular with time that a &lt;a href="https://insights.stackoverflow.com/survey/2019#technology"&gt;Stack Overflow&lt;/a&gt; survey in 2019 crowned React as the sixth most used framework in the dev circle. Today, most tech companies including Bloomberg, Air Bnb and Discord use React for their overall UI and UX architectures.&lt;/p&gt;

&lt;p&gt;As far as React‚Äôs documentation is concerned, the dev economy is already filled with tons of tools where each platform has an edge over others. In the post, I have curated a number of tools I used for React documentation.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#ps-just-because-i-prefer-these-tools-for-my-documentation-needs-you-dont-have-to-buy-them-however-the-purpose-is-to-serve-developers-an-exhaustive-list-they-can-put-out-for-consideration"&gt;
  &lt;/a&gt;
  PS: Just because I prefer these tools for my documentation needs, you don‚Äôt have to buy them. However, the purpose is to serve developers an exhaustive list they can put out for consideration.
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#tools-i-use-to-document-react-component"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;strong&gt;Tools I Use to Document React Component&lt;/strong&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#docz"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;strong&gt;Docz&lt;/strong&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NV6EQTPd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XGB2fWLe--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1npfzpn02bewwg4hx96.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NV6EQTPd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XGB2fWLe--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1npfzpn02bewwg4hx96.png" alt="Docz"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Professional projects require regular documentation, period. What would you answer when your peer asks if a particular component has already been built or need source code at one place to configure a bug in your product? Well, you‚Äôd be needing a robust documentation tool here; one that saves time, and you can get through its UX hassle-free.&lt;/p&gt;

&lt;p&gt;In that case,&lt;a href="https://www.docz.site/"&gt;Docz&lt;/a&gt; is my first preference. Why? It has a Gatsby foundation so you can easily develop dynamic websites at a fast pace. Moreover, it‚Äôs already stuffed with all general use-cases so you won‚Äôt need external configurations to work your way around. Another feature that you may want to consider is Docz‚Äôs support of MDX formats. That way, you‚Äôll be able to navigate through the standard &lt;a href="https://github.com/rehypejs/rehype/blob/main/doc/getting-started.md"&gt;remark/rehype&lt;/a&gt; ecosystem, and access MDX &lt;a href="https://www.docz.site/docs/mdx-plugins"&gt;plugins&lt;/a&gt; during curating your docs. Plus, the changes are deployed live while you are writing down your documentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#documenting-react-components-with-docz"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;strong&gt;Documenting React Components with Docz&lt;/strong&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use ¬†&lt;code&gt;yarn add docz --dev&lt;/code&gt;¬†to install Docz. Write some MDX files in your space and run¬†&lt;code&gt;docz dev&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;All your results would be available at¬†&lt;code&gt;http://localhost:3000&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;To publish, use &lt;code&gt;docz build&lt;/code&gt;¬†and a static version of your doc will be generated.&lt;/li&gt;
&lt;li&gt;A typical docz¬†&lt;code&gt;.mdx&lt;/code&gt;¬†file has a¬†&lt;code&gt;front-matter&lt;/code&gt;¬†a-la¬†&lt;a href="https://jekyllrb.com/docs/front-matter/"&gt;Jekyll&lt;/a&gt;, some¬†&lt;code&gt;imports&lt;/code&gt;¬†and¬†&lt;code&gt;markdown&lt;/code&gt;¬†mixed with¬†components, like this:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;
&lt;span class="nx"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Components&lt;/span&gt;
&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;

&lt;span class="o"&gt;--------&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; 

&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt;

&lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;am&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;love&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Click&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check out¬†&lt;a href="https://www.docz.site/themes"&gt;custom themes&lt;/a&gt; for steps to add more properties to your doc created with the above snippet.&lt;/li&gt;
&lt;li&gt;You can also use &lt;code&gt;import { Playground, PropsTable } from "docz";&lt;/code&gt; built-in components to write standard docs.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;PropsTable /&amp;gt;&lt;/code&gt; take your React components and display them in a neatly formatted table consisting of properties. By default, the properties available are: name, default value, type, and description.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="cm"&gt;/**

   * I want an inverted component button 

   */&lt;/span&gt;
  &lt;span class="na"&gt;inverted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;PropTypes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultProps&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="na"&gt;inverted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Also Docz‚Äôs &lt;code&gt;Playground Component&lt;/code&gt; helps to render React components in docs and creates tables with valuable content describing the React components with live-editable code below the rendered component.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can always create u=custom themes and plugins with Docz. To save time, use the ones already curated by the community.&lt;/p&gt;

&lt;p&gt;Other super tools are waiting for you &lt;a href="https://aviyel.com/post/1241/tools-that-have-made-react-documentation-a-piece-of-cake"&gt;here&lt;/a&gt; on Aviyel. Follow this link if you want to save your precious time which you are wasting on building custom documentation sites. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  CONNECT WITH ME
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://twitter.com/sankalpswami01"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>reactnative</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Javascript Notlarƒ± #4 - Fonksiyonlar (Functions)</title>
      <author>Turan Kƒ±lƒ±√ß</author>
      <pubDate>Sat, 23 Oct 2021 11:35:06 +0000</pubDate>
      <link>https://dev.to/toour/javascript-notlari-4-fonksiyonlar-functions-4o8h</link>
      <guid>https://dev.to/toour/javascript-notlari-4-fonksiyonlar-functions-4o8h</guid>
      <description>&lt;p&gt;Merhabalar, seriye fonksiyonlar ile devam ediyoruz. Hadi ba≈ülayalƒ±m :)&lt;/p&gt;

&lt;p&gt;Fonksiyonlar bizleri kod tekrarƒ±ndan koruyan, kodu daha g√ºvenilir ve d√ºzenli hale getiren, i≈üleri kolayla≈ütƒ±ran kod bloklarƒ±dƒ±r. Fonksiyonlar sayesinde √ßok daha verimli yazƒ±lƒ±mlar-programlar √ºretilebilir. &lt;/p&gt;

&lt;p&gt;Fonksiyonlar a≈üaƒüƒ±daki √∂rnekte verildiƒüi gibi tanƒ±mlanƒ±r ve √ßaƒürƒ±lƒ±rlar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt; 
    function greetings() {
        console.log("Merhabalar, Ho≈ügeldiniz ");
    }

    greetings();
&amp;lt;/script&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu fonksiyonun √ßaƒürƒ±lmasƒ± ile konsoldaki output a≈üaƒüƒ±daki gibi olacaktƒ±r.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QJkOnGkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok6l2sdg4f40w6w0fvul.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QJkOnGkO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok6l2sdg4f40w6w0fvul.png" alt="Function Call"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fonksiyonlar parametre denen deƒüi≈ükenleri alabilir ve gerekli komutlarda kullanabilirler. Parametre tanƒ±mlarken fonksiyon ismi i√ßerisinde herhangi bir veri tipinin belirtilmesine gerek yoktur. √á√ºnk√º Javascript parametre deƒüi≈ükenlerinin tiplerini dinamik olarak tutmaktadƒ±r.&lt;/p&gt;

&lt;p&gt;Parametreli bir fonksiyonun tanƒ±mlanmasƒ± a≈üaƒüƒ±da g√∂sterilmi≈ütir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    function greetings2(name) {
        console.log("Merhabalar " + name + ", Ho≈ügeldiniz ")
    }

    function calculate(fiyat,borc) {
        console.log("Sepete eklenen √ºr√ºn√ºn fiyatƒ±: " + fiyat 
        + "TL olup Toplam Borcunuz ise: " + borc + "TL 'dir.");
    }

    greetings2("Turan");
    calculate(10,50);
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu fonksiyonun outputu ise a≈üaƒüƒ±daki gibidir:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HxLLU6g6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hwz9xf0rfvffaqq0big.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HxLLU6g6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6hwz9xf0rfvffaqq0big.png" alt="Parametreli fonksiyon √ßaƒüƒ±rƒ±mƒ± Javascript"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ufak bir toplama fonksiyonu √∂rneƒüi:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    function toplama(a,b,c,d) {
        console.log("Verilen deƒüerlerin toplamƒ±: " + (a+b+c+d));
    }

    toplama(5,10,15,20);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Toplama fonksiyonun outputu a≈üaƒüƒ±dadƒ±r:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pj5JVLZs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ccuwtv4yzwfhz3moz05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pj5JVLZs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ccuwtv4yzwfhz3moz05.png" alt="Toplama fonksiyonu Javascript"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ƒ∞≈ülem ger√ßekle≈ütiren fonksiyonlar olduƒüu gibi, deƒüer tutan fonksiyonlar da olu≈üturulabilir. Yani bir i≈ülem sonucunda ortaya √ßƒ±kan deƒüer bir deƒüi≈ükene aktarƒ±labilir ve program i√ßerisinde farklƒ± yerlerde kullanƒ±labilir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    function toplama(a,b,c,d) { // fonksiyonun olu≈üturulmasƒ±
        return a+b+c+d;
    }

    console.log("ƒ∞≈ülemin sonucu: " + toplama(5,10,15,20)); // d√∂nd√ºr√ºlen deƒüerin i≈ülemde kullanƒ±lmasƒ±
    var x = toplama(5,10,15,20); // d√∂nd√ºr√ºlen deƒüerin deƒüi≈ükene atanmasƒ±
    console.log("x'in deƒüeri: " + x);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu kodun outputu ise a≈üaƒüƒ±daki gibidir:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d5yF4Dbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfsjmobh3fzmcab3ok9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d5yF4Dbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfsjmobh3fzmcab3ok9b.png" alt="Bir deƒüer d√∂nd√ºren fonksiyon Javascript"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>A new way to handle Translations in React based applications</title>
      <author>Enzo Manuel Mangano</author>
      <pubDate>Sat, 23 Oct 2021 11:15:55 +0000</pubDate>
      <link>https://dev.to/enzomanuelmangano/a-new-way-to-handle-translations-in-react-based-applications-14ih</link>
      <guid>https://dev.to/enzomanuelmangano/a-new-way-to-handle-translations-in-react-based-applications-14ih</guid>
      <description>&lt;p&gt;I have been working on many Javascript/Typescript projects over the past few years. Especially on React Native and React. For these projects, strings localization is always a given. However what I never understood is the standard way to handle translations in Javascript applications.&lt;/p&gt;

&lt;p&gt;In most packages (&lt;a href="https://github.com/i18next/i18next"&gt;i18next&lt;/a&gt;, &lt;a href="https://github.com/fnando/i18n-js"&gt;i18n-js&lt;/a&gt;), the approach used to access translations is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;translationsObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;translations_key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main problems with this approach are that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is no effective compile-time support to catch errors if the key is wrong;&lt;/li&gt;
&lt;li&gt;There is no way of knowing whether the key being accessed is set for all languages;&lt;/li&gt;
&lt;li&gt;There is no warning if you try to access an unsupported locale;&lt;/li&gt;
&lt;li&gt;The refactoring of translation keys can easily lead to problems that cannot be intercepted at compile-time. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These issues are what motivated me to create a set of npm packages: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/text-localizer"&gt;&lt;strong&gt;text-localizer&lt;/strong&gt;&lt;/a&gt;; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/react-text-localizer"&gt;&lt;strong&gt;react-text-localizer&lt;/strong&gt;&lt;/a&gt;; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/react-native-text-localizer"&gt;&lt;strong&gt;react-native-text-localizer&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main goals I set for myself when creating the main package were four: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It must be &lt;strong&gt;TypeSafe&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;It must &lt;strong&gt;not increase&lt;/strong&gt; the size of the bundle; &lt;/li&gt;
&lt;li&gt;It must &lt;strong&gt;not impact the start-up&lt;/strong&gt; time in any way; &lt;/li&gt;
&lt;li&gt;It must &lt;strong&gt;adapt to several use cases&lt;/strong&gt; without affecting the architecture of the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Result?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cjqfY30DzIgPxkxemU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cjqfY30DzIgPxkxemU/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first obvious benefit is that you finally have a decent developer experience. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Disclaimer&lt;/em&gt;&lt;/strong&gt;: The package is ready to be used but it may not have all the features you expect since it has been published very recently (I have planned the implementation of all the missing features). You can find all the features of the package in the &lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/api-reference/text-localizer"&gt;API Reference&lt;/a&gt; section of the &lt;a href="https://enzomanuelmangano.github.io/text-localizer/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  GitHub Repo
&lt;/h2&gt;

&lt;p&gt;The approach used to create all of the packages was the monorepo approach. &lt;a href="https://github.com/enzomanuelmangano/text-localizer"&gt;Here you can find the Repo&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it?
&lt;/h2&gt;

&lt;p&gt;In this section I will explain how to quickly setup the react-text-localizer package. But if you're also interested in the other use cases or if you prefer a more complete explanation, take a look at the &lt;a href="https://enzomanuelmangano.github.io/text-localizer/"&gt;&lt;strong&gt;documentation&lt;/strong&gt;&lt;/a&gt; (&lt;em&gt;don't be scared, I did my best to make it easy for anyone to understand&lt;/em&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-installation"&gt;
  &lt;/a&gt;
  1. Installation
&lt;/h2&gt;

&lt;p&gt;In order to unlock the Text Localizer features, simply run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add react-text-localizer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-strings"&gt;
  &lt;/a&gt;
  2. Strings
&lt;/h2&gt;

&lt;p&gt;Now you need to create the files where the translations will be stored.&lt;br&gt;
Therefore create in the &lt;strong&gt;src&lt;/strong&gt; directory the &lt;strong&gt;l10n&lt;/strong&gt; folder and add the translation files. In this tutorial we're going to use these files: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;us.json&lt;/em&gt;; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;gb.ts&lt;/em&gt;; &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;it.ts&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#json"&gt;
  &lt;/a&gt;
  JSON
&lt;/h3&gt;

&lt;p&gt;The use of JSON files to store translations is certainly the most common and the simplest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;filename:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;src/l&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;n/us.json&lt;/span&gt;&lt;span class="w"&gt; 

&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"welcome"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Welcome on the Text Localizer Docs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Do you need some help about {{ topic }}?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"question"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Which is your favorite cat?"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: &lt;em&gt;"help"&lt;/em&gt; contains a formatted string, that can be easily managed with the &lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/api-reference/text-localizer#formattranslation"&gt;formatTranslation&lt;/a&gt; function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-or-typescript"&gt;
  &lt;/a&gt;
  Javascript or Typescript
&lt;/h3&gt;

&lt;p&gt;Although the JSON is by far the most widely used solution in javascript for saving translation files, there are many use cases where using a JS or TS file can be just as useful.&lt;/p&gt;

&lt;p&gt;For example, in cases where only a few strings differ, using a typescript file can be extremely useful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filename: src/l10n/gb.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;us&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./us.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;us&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;question&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Which is your favourite cat?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-if-your-strings-lives-on-the-backend"&gt;
  &lt;/a&gt;
  What if your strings lives on the backend?
&lt;/h3&gt;

&lt;p&gt;With Text Localizer, it is simply a matter of creating a &lt;em&gt;js/ts&lt;/em&gt; file and exporting the function with which the translations for that country are fetched.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filename: src/l10n/it.ts &lt;/span&gt;

&lt;span class="c1"&gt;// In this example fetchItTranslations simply returns a plain object.&lt;/span&gt;
&lt;span class="c1"&gt;// The point is that it could be any asynchronous function&lt;/span&gt;
&lt;span class="c1"&gt;// where maybe using axios, apollo or any other client.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchItTranslations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;welcome&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Benvenuto sulla documentazione di Text Localizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;help&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hai bisogno di aiuto riguardo {{ topic }}?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;question&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Qual √® il tuo gatto preferito?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchItTranslations&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#%C2%A0folder-structure"&gt;
  &lt;/a&gt;
  ¬†Folder Structure
&lt;/h3&gt;

&lt;p&gt;The project will have the following folder structure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
‚îú‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ _src
‚îÇ   ‚îú‚îÄ‚îÄ _l10n
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ us.json
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ gb.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ it.ts
‚îÇ   ‚îú‚îÄ‚îÄ ...
‚îÇ   ‚îî‚îÄ‚îÄ App.tsx
‚îî‚îÄ‚îÄ package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-context-definition"&gt;
  &lt;/a&gt;
  4. Context Definition
&lt;/h2&gt;

&lt;p&gt;Once the translation files have been set up, a &lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/api-reference/react/create-translations-context"&gt;Translations Context&lt;/a&gt; must be created.&lt;/p&gt;

&lt;p&gt;Then in the &lt;em&gt;l10n&lt;/em&gt; folder create an &lt;strong&gt;index.ts&lt;/strong&gt; file with this code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filename: src/l10n/index.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createTranslationsContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-text-localizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchItTranslations&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./it&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;translationsContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createTranslationsContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;it&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetchItTranslations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;gb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./l10n/gb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;us&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./l10n/us.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;translationsContext&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#generated-types-optional-"&gt;
  &lt;/a&gt;
  Generated Types [ Optional ]
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;The use of Generated Types is fully optional. &lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/basic-tutorial/js-ts/more/generated-types"&gt;Check the following section to learn more about it.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to use a Generated Types approach, you can do so by simply running the following command (Note: if the script fails, make sure that the &lt;strong&gt;"module"&lt;/strong&gt; specified in the &lt;strong&gt;tsconfig.json&lt;/strong&gt; file is &lt;strong&gt;"CommonJS"&lt;/strong&gt; (at least while the script is running) :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run generate-l10n &lt;span class="o"&gt;[&lt;/span&gt;translationsPath]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the &lt;code&gt;translations.d.ts&lt;/code&gt; is fully created, you can pass the Languages and AppTranslations types to the TextLocalizer in the Context Definition:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filename: src/l10n/index.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createTranslationsContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-text-localizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fetchItTranslations&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./it&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;translationsContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createTranslationsContext&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
  &lt;span class="nx"&gt;Languages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;AppTranslations&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;it&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetchItTranslations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;gb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./l10n/gb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;us&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./l10n/us.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;translationsContext&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-translations-provider"&gt;
  &lt;/a&gt;
  5. Translations Provider
&lt;/h2&gt;

&lt;p&gt;In order to make the strings accessible throughout the component tree, it is necessary to wrap the application's root component with the &lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/basic-tutorial/react/translations-provider"&gt;TranslationsProvider&lt;/a&gt; in this way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filename: src/index.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;TranslationsProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-text-localizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;translationsContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./l10n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;StrictMode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TranslationsProvider&lt;/span&gt; &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;translationsContext&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;TranslationsProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;StrictMode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-usage"&gt;
  &lt;/a&gt;
  6. Usage
&lt;/h2&gt;

&lt;p&gt;Finally, thanks to the following hooks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/api-reference/react/hooks/use-translations-state"&gt;useTranslationsState&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/api-reference/react/hooks/use-translations"&gt;useTranslations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's possible to access the translations' state and the translations themselves respectively.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filename: src/App.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useTranslations&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useTranslationsState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-text-localizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;translationsContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./l10n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;welcome&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTranslations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;translationsContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isLoading&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTranslationsState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;translationsContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isLoading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-header"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Edit &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;src/App.tsx&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; and save to reload.
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;
          &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App-link"&lt;/span&gt;
          &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://enzomanuelmangano.github.io/text-localizer/"&lt;/span&gt;
          &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;
          &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"noopener noreferrer"&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;welcome&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-storage-optional-"&gt;
  &lt;/a&gt;
  7. Storage [ Optional ]
&lt;/h2&gt;

&lt;p&gt;If your translations lives on the backend, you can pass &lt;strong&gt;optionally&lt;/strong&gt; the &lt;a href="https://dev.to/docs/basic-tutorial/js-ts/more/cached-translations"&gt;Storage params&lt;/a&gt; in the &lt;a href="https://enzomanuelmangano.github.io/text-localizer/docs/basic-tutorial/js-ts/more/cached-translations"&gt;TranslationsProvider&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// filename: src/index.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;TranslationsProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-text-localizer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;translationsContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./l10n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;StrictMode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TranslationsProvider&lt;/span&gt;
      &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;translationsContext&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;language&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"gb"&lt;/span&gt;
      &lt;span class="na"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;TranslationsProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;StrictMode&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The package makes it very easy to handle translation strings. Unfortunately, there are some features missing in the package (which I plan to add soon) such as the management of plurals. &lt;br&gt;
I decided to make the package public and share it with the community as soon as possible and I took this decision to receive as much feedback as possible. If you have feedback, feel free to leave any feedback you want in the comments section. &lt;/p&gt;

&lt;p&gt;P.S: If you think the project is interesting, consider leaving a GitHub star &lt;a href="https://github.com/enzomanuelmangano/text-localizer"&gt;here&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Is Rust going to Replace Java?</title>
      <author>Rithik Samanthula</author>
      <pubDate>Sat, 23 Oct 2021 11:12:29 +0000</pubDate>
      <link>https://dev.to/code2rithik/is-rust-going-to-replace-java-3dgl</link>
      <guid>https://dev.to/code2rithik/is-rust-going-to-replace-java-3dgl</guid>
      <description>&lt;p&gt;Hey Coders!!&lt;/p&gt;

&lt;p&gt;A lot of you have been telling me that rust is soon going to replace java.&lt;/p&gt;

&lt;p&gt;Looking at the perspective of the number of people using java, I would say Rust isn't going to replace java.&lt;/p&gt;

&lt;p&gt;I don't think a language can &lt;strong&gt;fully&lt;/strong&gt; replace another one.&lt;/p&gt;

&lt;p&gt;Oracle released Java in 1995. It is still used worldwide by so many developers out there.&lt;/p&gt;

&lt;p&gt;I mean, sure, Java is pretty lengthy and we need another way to make it easier to write code.&lt;/p&gt;

&lt;p&gt;Technologies such as Rust and Go function the same way as Java but they are written in shorter code.&lt;/p&gt;

&lt;p&gt;Hello World Written in Java:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Simple&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;[]){&lt;/span&gt;  
     &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello Java"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
    &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hello World Written in Rust:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello world!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, Rust does have a lot of new more interesting ideas and concepts but we don't know whether they are going to be adopted universally.&lt;/p&gt;

&lt;p&gt;There are also a lot of other companies that have java code written in their programs.&lt;/p&gt;

&lt;p&gt;One advantage of using Java is that you have a lot of libraries and APIs available.&lt;/p&gt;

&lt;p&gt;Well, Rust doesn't really have as many developers as Java does.&lt;/p&gt;

&lt;p&gt;Rust might not be large enough to become a conventional language.&lt;/p&gt;

&lt;p&gt;The Final Reason why I think Java won't be replaced is because the entire company of Android has a lot of servers that run on Java.&lt;/p&gt;

&lt;p&gt;Overall, There is a possibility that Rust &lt;em&gt;could&lt;/em&gt; replace Java but it most likely wont.&lt;/p&gt;

&lt;p&gt;I hope I answered your question and I hope you enjoyed this blog!&lt;/p&gt;

&lt;p&gt;And don't forget...&lt;/p&gt;

&lt;h2&gt;Keep Coding Y'All üë®üèª‚Äçüíª&lt;/h2&gt;

</description>
      <category>rust</category>
      <category>java</category>
      <category>programming</category>
    </item>
    <item>
      <title>The Full-Stack Developer Vocabulary (Pt.1, the essentials)</title>
      <author>Code_Jedi</author>
      <pubDate>Sat, 23 Oct 2021 11:11:45 +0000</pubDate>
      <link>https://dev.to/code_jedi/the-full-stack-developer-vocabulary-pt1-the-essentials-4ap4</link>
      <guid>https://dev.to/code_jedi/the-full-stack-developer-vocabulary-pt1-the-essentials-4ap4</guid>
      <description>&lt;h4&gt;
  &lt;a href="#dom-serverless-cicd-json"&gt;
  &lt;/a&gt;
  DOM? Serverless? CI/CD? JSON?
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#wtf-is-everyone-talking-about"&gt;
  &lt;/a&gt;
  WTF is everyone talking about???
&lt;/h3&gt;

&lt;p&gt;If you're new to this whole full-stack development thing, and get confused by some of the words people use when talking about full-stack development, then stick around because in this 3 part series, I'll be compiling the most common words and phrases used when talking about full-stack development. Of corse, it will take much more time to learn the details of each of the things I'll be mentioning in these articles, these articles are just summarizers to give you an idea of these words and phrases so that you can understand what people are referencing with them when talking about certain areas of full-stack development.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#part-1-the-essentials"&gt;
  &lt;/a&gt;
  Part 1: The essentials
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;1. Front-end&lt;/strong&gt;&lt;br&gt;
The part of an application or website with which the user interacts directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Back-end&lt;/strong&gt;&lt;br&gt;
The part of an application or website with which the user cannot see or interact with directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Full-stack&lt;/strong&gt;&lt;br&gt;
The entirety of an application or website, comprising both the front end and the back end.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. DOM&lt;/strong&gt;&lt;br&gt;
The Document Object Model (DOM) is a programming interface for web documents. It represents the page so that programs can change the document structure, style, and content.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. API&lt;/strong&gt;&lt;br&gt;
API stands for: Application Programming Interface. It's purpose is to provide a way for programs to easily access and exchange data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Encryption&lt;/strong&gt;&lt;br&gt;
The process of converting information or data into a code, especially to prevent unauthorized access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Decryption&lt;/strong&gt;&lt;br&gt;
While encryption converts information into a code, the purpose of decryption is to convert the same information's code back to it's original form. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. HTTP&lt;/strong&gt;&lt;br&gt;
Hypertext Transport (or Transfer) Protocol, the data transfer protocol used on the World Wide Web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. HTTPS&lt;/strong&gt;&lt;br&gt;
Basically the same as HTTP, but uses encryption methods to secure the data passed to and from webpages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. CI/CD&lt;/strong&gt;&lt;br&gt;
CI/CD stands for: Continuous Integration, Continuous Delivery, &lt;br&gt;
and the purpose of CI/CD systems is to deliver code changes to an application or website more frequently and reliably.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. UI&lt;/strong&gt;&lt;br&gt;
UI stands for: User Interface. UI developers try to make a website's interface easy to use and navigate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. UX&lt;/strong&gt;&lt;br&gt;
UX stands for: User Experience. UX developers focus on making a website's design more appealing to it's visitors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. Serverless&lt;/strong&gt;&lt;br&gt;
As written on the &lt;a href="https://www.cloudflare.com/learning/serverless/what-is-serverless/"&gt;cloudflare blog&lt;/a&gt;: Serverless computing is a method of providing backend services on an as-used basis. A serverless provider allows users to write and deploy code without the hassle of worrying about the underlying infrastructure. A company that gets backend services from a serverless vendor is charged based on their computation and do not have to reserve and pay for a fixed amount of bandwidth or number of servers, as the service is auto-scaling. Note that despite the name serverless, physical servers are still used but developers do not need to be aware of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. Backend operations&lt;/strong&gt;&lt;br&gt;
These are operations that are performed in the backend because they're either too time or memory intensive for the front-end, or these operations simply cannot be performed in the frontend because they require libraries or frameworks that only work on the backend.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15. Request/Response&lt;/strong&gt;&lt;br&gt;
The way the frontend and backend communicate with each other is with requests and responses. A frontend script can request data from the backend, and a script in the backend can then send that data as a response.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;16. Cache&lt;/strong&gt;&lt;br&gt;
The cache is where data can be temporarily stored on a browser or computer in order to save time loading the same data over and over again every time it is required.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;17. Command-line&lt;/strong&gt;&lt;br&gt;
The command-line is an interface for typing commands directly to a computer's operating system. This is the most direct and fastest way to perform operations on a computer's operating system like launching a PHP server, creating directory, executing scripts, changing file permissions and much more...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;18. Virtual machine&lt;/strong&gt;&lt;br&gt;
A virtual machine is a computer system that emulates a physical, remote machine in order to perform operations on that machine like hosting a website, or storing data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;19. AWS&lt;/strong&gt;&lt;br&gt;
AWS, which stands for: Amazon Web Services, is currently the biggest provider of these virtual machines, plus many other services like file storage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;20. Database&lt;/strong&gt;&lt;br&gt;
A database is a structured collection of data, most of the time databases are needed for storing high volumes of user data.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Stick around for Pt.2, the more advanced!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Byeeeeüëã&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>devops</category>
      <category>programming</category>
    </item>
    <item>
      <title>Javascript Notlarƒ± #3 - Ko≈üul ƒ∞fadeleri ve Operat√∂rler (if - else, switch-case and operators)</title>
      <author>Turan Kƒ±lƒ±√ß</author>
      <pubDate>Sat, 23 Oct 2021 10:49:49 +0000</pubDate>
      <link>https://dev.to/toour/javascript-notlari-3-kosul-ifadeleri-ve-operatorler-if-else-switch-case-and-operators-4md8</link>
      <guid>https://dev.to/toour/javascript-notlari-3-kosul-ifadeleri-ve-operatorler-if-else-switch-case-and-operators-4md8</guid>
      <description>&lt;p&gt;Merhabalar, serimizin 3. b√∂l√ºm√ºnde ko≈üul ifadeleri ve operat√∂rlerden bahsedeceƒüiz. Hadi ba≈ülayalƒ±m :)&lt;/p&gt;

&lt;p&gt;Programlama dillerinde, bazƒ± i≈ülemlerin ger√ßekle≈ümesi belirli ko≈üullarƒ±n saƒülanmasƒ± ile ger√ßekle≈ütirilebilir. √ñrneƒüin "eƒüer sol yol saƒü yoldan uzunsa saƒü yolu se√ß" ifadesi bu duruma √∂rnektir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ifelse"&gt;
  &lt;/a&gt;
  If-Else
&lt;/h2&gt;

&lt;p&gt;If ko≈üul durumunun genel syntax'ƒ± a≈üaƒüƒ±daki gibidir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (durum1 _ko≈üul1_ durum2){
    __Ko≈üul1 saƒülandƒ±ƒüƒ±nda √ßalƒ±≈ütƒ±rƒ±lacak komutlar__
}
else if (durum1 _ko≈üul2_ durum2){
    __Ko≈üul2 saƒülandƒ±ƒüƒ±nda √ßalƒ±≈ütƒ±rƒ±lacak komutlar__
}
else{
    __Ko≈üullarƒ±n hi√ßbiri saƒülanmadƒ±ƒüƒ±nda √ßalƒ±≈ütƒ±rƒ±lacak komutlar__
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A≈üaƒüƒ±da ufak bir √∂rnek bulunmaktadƒ±r:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
var x = 10;
var y = 11;
if (x &amp;lt; y) {
    console.log("y deƒüeri x deƒüerinden b√ºy√ºkt√ºr");
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Birden fazla ko≈üulun bulunduƒüu bir √∂rnek:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    var x = 10;
    if (x &amp;lt; 10) {
        console.log("K√º√ß√ºkt√ºr");
    }
    else if (x &amp;gt; 10){
        console.log("B√ºy√ºkt√ºr");
    }
    else{
        console.log("E≈üittir");
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ko%C5%9Ful-operatorleri"&gt;
  &lt;/a&gt;
  Ko≈üul Operatorleri
&lt;/h2&gt;

&lt;p&gt;A≈üaƒüƒ±da sƒ±k√ßa kullanƒ±lan bazƒ± operat√∂rler ve anlamlarƒ± verilmi≈ütir.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operat√∂r&lt;/th&gt;
&lt;th&gt;Anlamƒ±&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;K√º√ß√ºkt√ºr&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;B√ºy√ºkt√ºr&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;K√º√ß√ºk E≈üittir&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;B√ºy√ºk E≈üittir&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;E≈üittir&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;E≈üit Deƒüildir&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;===&lt;/td&gt;
&lt;td&gt;Deƒüer ve Veri Tipi Olarak E≈üittir&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;Not (Bir ifadenin zƒ±ttƒ±)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;And (Ve)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;Or (Veya)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Bunlara birer √∂rnek:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    x = 10;
    y = 11;

    if (x &amp;lt; y) { 
        console.log("K√º√ß√ºkt√ºr");
    }
    if (x &amp;gt; y) { 
        console.log("B√ºy√ºkt√ºr");
    }
    if (x &amp;lt;= y) { 
        console.log("K√º√ß√ºk e≈üittir");
    }
    if (x &amp;gt;= y) { 
        console.log("B√ºy√ºk e≈üittir");
    }
    if (x == y) { 
        console.log("E≈üittir");
    }
    if (x != y) { 
        console.log("E≈üit deƒüildir");
    }
    if (x === y) {
        console.log("E≈üit");
    }
    if (!(x &amp;gt; y)) { 
        console.log("B√ºy√ºk deƒüildir");
    }
    if (1 == 1 &amp;amp;&amp;amp; 2 == 2) {
        console.log("1 1'e e≈üittir ve 2 2'ye e≈üittir");
    }
    if (1 == 1 || 2 == 2) {
        console.log("1 1'e e≈üittir veya 2 2'ye e≈üittir");
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#switchcase"&gt;
  &lt;/a&gt;
  Switch-Case
&lt;/h2&gt;

&lt;p&gt;Durumlar daha kesin ve az sayƒ±da ise, if-else yerine switch-case de kullanƒ±labilir. A≈üaƒüƒ±da switch-case kullanƒ±mƒ±nƒ±n basic syntax'ƒ± verilmi≈ütir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    switch (__durum deƒüi≈ükeni__) {
        case __durum1__:
            **Durum deƒüi≈ükeni Durum1 olduƒüunda √ßalƒ±≈ütƒ±rƒ±lacak komutlar**
            break;
        case __durum2__:
            **Durum deƒüi≈ükeni Durum2 olduƒüunda √ßalƒ±≈ütƒ±rƒ±lacak komutlar**
        default:
            **Durum deƒüi≈ükeni hi√ßbir duruma uymadƒ±ƒüƒ±nda √ßalƒ±≈ütƒ±rƒ±lacak komutlar**            
            break;
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A≈üaƒüƒ±da switch-case i√ßin bir √∂rnek verilmi≈ütir:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    var light="Green";
    switch (light) {
        case "Green":
            console.log("Move");
            break;

        case "Red":
            console.log("Stop");   
            break;

        default:
            console.log("Be Ready")
            break;
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>frontend</category>
      <category>backend</category>
    </item>
    <item>
      <title>Scrollable div layout with height 100%</title>
      <author>Harsh boricha</author>
      <pubDate>Sat, 23 Oct 2021 10:15:00 +0000</pubDate>
      <link>https://dev.to/harshboricha98/scrollable-div-layout-with-height-100-33jn</link>
      <guid>https://dev.to/harshboricha98/scrollable-div-layout-with-height-100-33jn</guid>
      <description>&lt;p&gt;Hello there üëãüèº, internet users. Today, I'll show you a CSS trick I frequently forget about when creating scrollable dynamic height layouts. Recently, I was developing a basic layout similar to &lt;a href="https://codepen.io/harshboricha98/pen/zYdoXpo"&gt;this&lt;/a&gt;. It took a while for me to remember this trick, but once I did, I had a sense of deja vu and finished the layout.&lt;/p&gt;

&lt;p&gt;If you look at the &lt;a href="https://codepen.io/harshboricha98/pen/zYdoXpo"&gt;code&lt;/a&gt;, you'll see what I mean. As you can see, there's a NAVBAR, a BREADCRUMB BAR, the MAIN SECTION, and a FOOTER all contained within a layout container with the height of &lt;code&gt;height: 100vh&lt;/code&gt;. I wanted the sidebar and content-box in my main section to be scrollable.&lt;/p&gt;

&lt;p&gt;I could set the height as a fixed value, something like &lt;code&gt;height: 800px&lt;/code&gt; with &lt;code&gt;overflow-y: scroll&lt;/code&gt; but then making the layout responsive will become a nightmare.&lt;/p&gt;

&lt;p&gt;So, the question arises? ü§î. How can we apply the &lt;code&gt;overflow-y: scroll&lt;/code&gt; attribute to a div with a height of 100 percent?&lt;/p&gt;

&lt;p&gt;The solution üß™ here is to use &lt;code&gt;position: relative&lt;/code&gt; for the main section container and &lt;code&gt;position: absolute&lt;/code&gt; for the sidebar and content bar, with &lt;code&gt;overflow-y: scroll&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.sidebar&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c"&gt;/*stretch from top to bottom w.r.t .main section*/&lt;/span&gt;
&lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;overflow-y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;scroll&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* stretch from top to bottom, and shift 10rem from left and stretch till right */&lt;/span&gt;
&lt;span class="nl"&gt;overflow-y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;scroll&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are many other ways, to achieve this. It's just a trick i often use. If you have any alternate way please comment (I'm all üëÇ). Congratulations üéâ for reading this. Hope this might help you. Thank you.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>react</category>
      <category>beginners</category>
    </item>
    <item>
      <title> [[Environment]], closures and garbage collection</title>
      <author>Jacin Yan</author>
      <pubDate>Sat, 23 Oct 2021 10:11:26 +0000</pubDate>
      <link>https://dev.to/jacinyan/environment-closures-and-garbage-collection-2gj2</link>
      <guid>https://dev.to/jacinyan/environment-closures-and-garbage-collection-2gj2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-are-closures-and-where-do-they-come-from"&gt;
  &lt;/a&gt;
  What are closures and where do they come from?
&lt;/h2&gt;

&lt;p&gt;A couple sources of information might 'somewhat' has an answer to the questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;closure&lt;/strong&gt; is the combination of a &lt;strong&gt;function&lt;/strong&gt; bundled together (enclosed) with &lt;strong&gt;references to its surrounding state (the lexical environment)&lt;/strong&gt;. In other words, a closure gives you access to an outer function‚Äôs scope from an inner function. In JavaScript, closures are created every time a function is created, at function creation time. -- MDN&lt;/li&gt;
&lt;li&gt;Closures are created when functions are defined in other functions, allowing the closure access to all of the variables inside of the containing function. -- Professional JavaScript for Developers&lt;/li&gt;
&lt;li&gt;Closure builds on this approach: for variables we need to use over time, instead of placing them in larger outer scopes, we can encapsulate (more narrowly scope) them but still preserve access from inside functions, for broader use. Functions remember these referenced scoped variables via closure. -- You don't know JS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I agree that the statements above may still sound like gibberish. On top of that, I might have some different opinions as to whether or not they are acccurat enough, so before going further we can probably take a look at the 'lexical environment' bit. I'll start with one property.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#environment"&gt;
  &lt;/a&gt;
  [[Environment]]
&lt;/h2&gt;

&lt;p&gt;From what I've learned so far, &lt;code&gt;[[Environment]]&lt;/code&gt; is an internal property and: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Every function has this property&lt;/li&gt;
&lt;li&gt;It serves the purpose of storing &lt;strong&gt;a reference&lt;/strong&gt; to the the &lt;strong&gt;lexical environment&lt;/strong&gt; in which the fucntion is created (There's the ambiguity. My understanding is that it should be when an &lt;em&gt;function instance&lt;/em&gt; is created, simply speaking, when it is called,  rather than when it is defined)&lt;/li&gt;
&lt;li&gt;It can not be manipulated directly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Another internal prop we might be more familiar with is [[Prototype]])&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lexcial-environment-object"&gt;
  &lt;/a&gt;
  Lexcial environment object
&lt;/h2&gt;

&lt;p&gt;So what exactly is this lexical environment that &lt;code&gt;[[Environment]]&lt;/code&gt; refences? &lt;/p&gt;

&lt;p&gt;It is essentially an object, and note that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Before a script is executed/run, one lexical environment object will be created, which is at the global lexical environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Whenever a function is being executed/run, one lexical environment will be created, which is at a function level&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You might be wondering, what does this the object contain? Well, it bascially contains two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;A record/snapshot of the current environment, where all the identfiers (a variable name, a function name etc.)  and what they are referencing become its key-value pairs&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;A reference to its outer lexical environment&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we run into something interesting. From the second part, we know that:&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;[[Environment]]&lt;/code&gt; prop of one certain function keeps track of the function's own lexical environment, and this lexical enviornment keeps track of its outer lexical environment, so far and so forth, all the way up to the global lexical environment. Do you see that there is essentially a linked list, which is something we've probaly heard a thousand times, a &lt;strong&gt;scope chain&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;To see things more clearly, I'll demonstrate with some code&lt;/p&gt;

&lt;p&gt;For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;//`[[Environment]]` of `foo` is referecing 'something'(a lexical environment' that has: &lt;/span&gt;

&lt;span class="c1"&gt;//1. Current environment record:&lt;/span&gt;
&lt;span class="c1"&gt;//a:1, bar: ()=&amp;gt;console.log('hi')&lt;/span&gt;

&lt;span class="c1"&gt;//2. A refrence to its outer lexical environment&lt;/span&gt;
&lt;span class="c1"&gt;//(which happens to be the global lexical environment in this case)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#functions-bundled-with-lexical-environments"&gt;
  &lt;/a&gt;
  Functions bundled with lexical environments
&lt;/h2&gt;

&lt;p&gt;We know from previously that a closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment). &lt;em&gt;However&lt;/em&gt;, something I have yet to mention is that, &lt;em&gt;each function instance&lt;/em&gt; is &lt;strong&gt;dependent&lt;/strong&gt; of each other, and therefore their own lexical environment. In addition, there's a term called 'free variables' in functional programming, which means variables appear in one particular environment but are never defined in it. From clousres' point of view, it simply means a variable in the outer function is being refenced by an inner function. Whenever that happens, the JS engine will go all the way up the scope chain to search for it. There's two possible outcomes, one of which is that it spits out 'ReferenceError, xxxx is not defined'. Another is that the engine is able to pinpoint them, and after the execution of the outer function the free variables and the values they have been referencing still remain(From what I know, they are stored yet again as key-value pairs in a place where we also don't have direct access to)&lt;/p&gt;

&lt;p&gt;An example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;qux&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;//The return value of `baz()`, which is a function, is still being referenced, in this case by a global variable `x`&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;//1&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;&lt;span class="c1"&gt;//2&lt;/span&gt;

&lt;span class="c1"&gt;//The following executions essentially create two independent function instances:&lt;/span&gt;
&lt;span class="c1"&gt;// After the first return value of `baz()` is executed, the idetifiers `a` and `qux` respectively will be garge collected since they are not referencing anything anymore&lt;/span&gt;
&lt;span class="c1"&gt;// The same goes for the second one, in that everything is brand new and therefore it doesn't stop it from logging `a = 1` again&lt;/span&gt;
&lt;span class="nx"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;()()&lt;/span&gt;&lt;span class="c1"&gt;//1&lt;/span&gt;
&lt;span class="nx"&gt;baz&lt;/span&gt;&lt;span class="p"&gt;()()&lt;/span&gt;&lt;span class="c1"&gt;//1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interestingly, what if we don't have this 'lexical environment' ? Let's go back to the example above but this time think about what would happen, along with the execution context (call stack)  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;baz()&lt;/code&gt; is pushed into the stack, and then variable &lt;code&gt;a&lt;/code&gt; is pushed into the stackÔºõ&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;a&lt;/code&gt; is popped out of the stack, and then so is &lt;code&gt;baz()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;When &lt;code&gt;x()&lt;/code&gt; is pushed into the stack, here comes the problem. During the execution of &lt;code&gt;x()&lt;/code&gt;, it is looking for &lt;code&gt;a&lt;/code&gt; , but there's just no way that it can be found anywhere. Obviously, this is against our expectations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;'The bundle of functions and lexical environments, when closures are generated'&lt;/strong&gt; comes to the rescue&lt;/p&gt;

&lt;p&gt;(To be continued....)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#garbage-collection-in-js"&gt;
  &lt;/a&gt;
  Garbage collection in JS
&lt;/h2&gt;

&lt;p&gt;(To be continued....)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Javascript Polyfills: forEach, map, filter and reduce</title>
      <author>S Shraddha</author>
      <pubDate>Sat, 23 Oct 2021 10:10:29 +0000</pubDate>
      <link>https://dev.to/shraddha319/javascript-polyfills-foreach-map-filter-and-reduce-1016</link>
      <guid>https://dev.to/shraddha319/javascript-polyfills-foreach-map-filter-and-reduce-1016</guid>
      <description>&lt;p&gt;The Javascript language has been evolving steadily over the years. New features on the language appear regularly. Some older browsers may not support these modern functionalities.&lt;/p&gt;

&lt;p&gt;A polyfill is a piece of code that implements a feature on browsers that do not support the feature. Hence, the name - it &lt;em&gt;fills&lt;/em&gt; the gap by adding missing implementations.&lt;/p&gt;

&lt;p&gt;This article focuses on writing polyfills for the popular Javascript Array methods - forEach, map, reduce and filter. &lt;/p&gt;

&lt;p&gt;For details on the usage and syntax of these array methods refer &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#instance_methods"&gt;MDN | Array instance methods&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#foreach-"&gt;
  &lt;/a&gt;
  .forEach( )
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;forEach&lt;/code&gt; method invokes the provided callback function for each element in the array.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some important things to note about &lt;code&gt;forEach&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;callbackFn&lt;/code&gt; is called on each element of the array. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;forEach&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;callbackFn&lt;/code&gt; must be called in the context of &lt;code&gt;thisArg&lt;/code&gt;. If &lt;code&gt;thisArg&lt;/code&gt; is not passed, &lt;code&gt;callbackFn&lt;/code&gt; is invoked as a regular function.&lt;/li&gt;
&lt;li&gt;If a callback function is not passed as the first argument, &lt;code&gt;forEach&lt;/code&gt; throws a &lt;code&gt;TypeError&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;forEach&lt;/code&gt; is invoked on &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, it throws a &lt;code&gt;TypeError&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's begin with the first step:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForEach&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForEach&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We first check if the function is already available in the prototype chain of &lt;code&gt;Array&lt;/code&gt;. &lt;code&gt;this&lt;/code&gt; inside the function references the array on which &lt;code&gt;forEach&lt;/code&gt; is called. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;forEach&lt;/code&gt; also accepts an optional second argument - &lt;code&gt;thisArg&lt;/code&gt;. If passed, the callback function must be invoked in the context of &lt;code&gt;thisArg&lt;/code&gt; i.e. &lt;code&gt;this&lt;/code&gt; inside &lt;code&gt;callbackFn&lt;/code&gt; must be set to &lt;code&gt;thisArg&lt;/code&gt;. This can be done using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call"&gt;call() method&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForEach&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForEach&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Time to handle the error cases! &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What if a callback function is not passed to &lt;code&gt;forEach&lt;/code&gt;? &lt;/li&gt;
&lt;li&gt;What if &lt;code&gt;forEach&lt;/code&gt; is not invoked on an array? &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the above cases, an Error object must be thrown along with a descriptive message. Here, we will replicate the behavior shown by the original &lt;code&gt;forEach&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForEach&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForEach&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Array.prototype.myForEach called on null or undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;callbackFn&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is not a function`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;this == null || this === window&lt;/code&gt; - This condition is true if forEach is invoked as a standalone function (i.e not a method invocation). For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myUnboundForEach&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myForEach&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;myUnboundForEach&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;myUnboundForEach()&lt;/code&gt; is executed like a normal function expression. &lt;code&gt;this&lt;/code&gt; inside the callback function will be the &lt;code&gt;global&lt;/code&gt; object (window) in non-strict mode or &lt;code&gt;undefined&lt;/code&gt; in the strict mode. Both these conditions are handled above. In both cases the &lt;code&gt;TypeError&lt;/code&gt; is thrown.&lt;/p&gt;

&lt;p&gt;And that's it! We have created our own implementation of the JS array method &lt;code&gt;forEach&lt;/code&gt; and have also handled the error conditions.&lt;/p&gt;

&lt;p&gt;The polyfill implementation for the rest of the methods are very similar and only differ in the core functionality of the method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#map-"&gt;
  &lt;/a&gt;
  .map( )
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;map&lt;/code&gt; method creates an array that contains values returned by the callback function invoked on each element in the calling array. Our function should now return the newly created array.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#polyfill"&gt;
  &lt;/a&gt;
  Polyfill
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myMap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Array.prototype.myMap called on null or undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is not a function`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mappedArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mappedValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;mappedArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mappedValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;mappedArray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#filter-"&gt;
  &lt;/a&gt;
  .filter( )
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;filter&lt;/code&gt; method creates an array that contains only those elements of the calling array that pass the test provided by the callback function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#polyfill"&gt;
  &lt;/a&gt;
  Polyfill
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myFilter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myFilter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Array.prototype.myFilter is called on null or undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is not a function`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filtered&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;filtered&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;filtered&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#reduce-"&gt;
  &lt;/a&gt;
  .reduce( )
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;reduce&lt;/code&gt; method works a little differently than the above methods. It accepts a &lt;em&gt;reducer&lt;/em&gt; callback function that is called on each element of the array along with the returned value from the previous invocation. After calling the reducer across all array elements, the single, accumulated result is returned.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;callbackFn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentIndex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some important things to note about &lt;code&gt;reduce&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The second argument to &lt;code&gt;reduce&lt;/code&gt; is an optional &lt;code&gt;initialValue&lt;/code&gt;, used to initialize &lt;code&gt;previousValue&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Value returned from &lt;code&gt;callbackFn&lt;/code&gt; after traversing all elements of the array is ultimately returned from &lt;code&gt;reduce&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;initialValue&lt;/code&gt; is not provided, &lt;code&gt;previousValue&lt;/code&gt; is initialized to the first element in the array, and &lt;code&gt;reduce&lt;/code&gt; begins traversal from the second element in the array.&lt;/li&gt;
&lt;li&gt;If array is empty and &lt;code&gt;initialValue&lt;/code&gt; is not provided, a &lt;code&gt;TypeError&lt;/code&gt; is thrown.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Lets' begin with the main working of &lt;code&gt;reduce&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myReduce&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myReduce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="nx"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;startIndex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This covers points 1, 2 and 3 above. &lt;/p&gt;

&lt;p&gt;Time to handle the error cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What if &lt;code&gt;initialValue&lt;/code&gt; is not provided and array is empty?&lt;br&gt;
In this case, &lt;code&gt;previousValue&lt;/code&gt; will be assigned &lt;code&gt;undefined&lt;/code&gt;. We can check for this and throw a &lt;code&gt;TypeError&lt;/code&gt; with the appropriate error message.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Is a callback function passed?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Is &lt;code&gt;reduce&lt;/code&gt; called on &lt;code&gt;null&lt;/code&gt;/&lt;code&gt;undefined&lt;/code&gt;?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the above error cases are handled as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myReduce&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myReduce&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Array.prototype.myReduce called on null or undefined&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;function&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is not a function`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialValue&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="nx"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Reduce of empty array with no initial value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;startIndex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;previousValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;previousValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;We saw the working of some commonly used Array methods along with their polyfill implementation, while handling the error cases.&lt;/p&gt;

&lt;p&gt;Thank you for reading. Happy coding! üôÇ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
