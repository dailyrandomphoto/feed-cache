<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What do appsec and fire extinguishers have in common?</title>
      <author>Cossack Labs</author>
      <pubDate>Tue, 13 Apr 2021 10:50:12 +0000</pubDate>
      <link>https://dev.to/cossacklabs/what-do-appsec-and-fire-extinguishers-have-in-common-5efe</link>
      <guid>https://dev.to/cossacklabs/what-do-appsec-and-fire-extinguishers-have-in-common-5efe</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Application security is awesome, learn when to start with it.&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To get the answer imagine you move to a new apartment and decide to equip it with a fire extinguisher. &lt;/p&gt;

&lt;p&gt;It can be really of help in case of fire but... it does not have legs, arms, brains, and skills to fight fire by itself. Fire alarm, flood control, construction netting, etc. do the same—they all require skills for further actions.&lt;/p&gt;

&lt;p&gt;Having a fire extinguisher doesn’t prevent fire, but certainly, it reduces the risks of burning down.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Similarly, &lt;strong&gt;appsec helps companies to diminish business risks and stay successful as long as it is possible&lt;/strong&gt;.&lt;br&gt;
⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰ ⟰&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In your case, first, identify and assess your business risks.&lt;/p&gt;

&lt;p&gt;Risk assessment does not provide absolute numbers, it deals with events and probability—find out what pitfalls your product can meet on its way and their magnitude. &lt;/p&gt;

&lt;p&gt;By adding stronger security controls you avoid potential threats and minimize their impact. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💎 &lt;strong&gt;The rule of thumb is: mind the loss and watch the money.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In application security, you can do less if there's nothing to lose and do more if you have crown jewels to secure or want no more security fixes, financial, legal or reputational aftermaths. &lt;/p&gt;

&lt;p&gt;So, relax if you can afford loss to happen and feel pretty sure you can overcome it with no stress. Start with a risk mitigation strategy if you can not bear it.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h3&gt;

&lt;p&gt;The latter choice will bring you &lt;em&gt;and your calculator&lt;/em&gt; to your company strategic plans, technical assets, potential threat events and worst-case scenarios, etc. At this point you will get acquainted with existing risk assessment frameworks.&lt;/p&gt;

&lt;p&gt;💎 If you haven’t heard anything about typical application security mistakes, start with &lt;a href="https://owasp.org/www-project-top-ten/"&gt;OWASP Top Ten&lt;/a&gt; (take the bare bones or follow the rabbit to open a whole brand-new world) and regulations applicable to your project (GDPR, PCI DSS, etc.). This will give you an overview of technical aspects and organisational procedures to keep in mind. Then deepen your knowledge with &lt;a href="https://github.com/OWASP/ASVS"&gt;OWASP ASVS&lt;/a&gt;, &lt;a href="https://github.com/OWASP/owasp-masvs"&gt;OWASP MASVS&lt;/a&gt;, &lt;a href="https://owaspsamm.org/"&gt;OWASP SAMM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;💎 Next level of risk assessment adventure will lead you to &lt;a href="https://www.fairinstitute.org/"&gt;FAIR&lt;/a&gt;, a quantitative model for information security and operational risk. Through rather simple to follow instructions and mathematical formulae it will help you to measure security risks.&lt;/p&gt;

&lt;p&gt;💎 Down under these levels, there lie deep waters and pleasures of NIST and hundreds of pages of its &lt;a href="https://csrc.nist.gov/publications/detail/sp/800-37/rev-2/final"&gt;Risk Management Framework for Information Systems and Organizations&lt;/a&gt; document (NIST SP 800-37) designed for large enterprises. It explains how big organisations handle information security risks.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OrxQop7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xjv79l4eyadg2e19zzg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OrxQop7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xjv79l4eyadg2e19zzg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;em&gt;To get closer to applied risk/data management, you can look through the materials from the &lt;a href="http://security-data-management-for-app-devs-workshop/"&gt;workshop on security data management for appdevs&lt;/a&gt; by  Anastasiia Voitova or follow &lt;a href="https://twitter.com/vixentael"&gt;her/@vixentael&lt;/a&gt; and &lt;a href="https://twitter.com/cossacklabs"&gt;@Cossack Labs&lt;/a&gt; for future talks/workshop announcements and updates, like this:&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
    &lt;a href="/cossacklabs/which-encryption-control-to-choose-for-your-app-protection-by-anastasiia-voitova-5g46" class="video-image"&gt;
      &lt;span class="video-timestamp"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pl4ssD2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/video-camera-9a2eda0979fd9ce3933037481ee8828557b6c7f5533e1de458b8c2648a60b097.svg" alt="video camera"&gt;
        02:28&lt;/span&gt;
    &lt;/a&gt;
  &lt;a href="/cossacklabs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OmQI_FyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JN-UHeC3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/385564/d114ce77-af44-4c00-a124-abd013f916ff.jpg" alt="cossacklabs image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cossacklabs/which-encryption-control-to-choose-for-your-app-protection-by-anastasiia-voitova-5g46" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Which encryption control to choose for your app protection, by Anastasiia Voitova&lt;/h2&gt;
      &lt;h3&gt;Cossack Labs ・ Mar 15 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cryptography&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#encryption&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#privacy&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
    &lt;a href="/cossacklabs/building-reliable-mobile-app-security-59ab" class="video-image"&gt;
      &lt;span class="video-timestamp"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pl4ssD2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/video-camera-9a2eda0979fd9ce3933037481ee8828557b6c7f5533e1de458b8c2648a60b097.svg" alt="video camera"&gt;
        09:28&lt;/span&gt;
    &lt;/a&gt;
  &lt;a href="/cossacklabs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OmQI_FyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JN-UHeC3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/385564/d114ce77-af44-4c00-a124-abd013f916ff.jpg" alt="cossacklabs image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cossacklabs/building-reliable-mobile-app-security-59ab" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;📱Building reliable mobile app security&lt;/h2&gt;
      &lt;h3&gt;Cossack Labs ・ Nov 13 '20 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mobile&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cryptography&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#ios&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>security</category>
      <category>appdev</category>
      <category>appsec</category>
      <category>riskmanagement</category>
    </item>
    <item>
      <title>E2EE and privacy in mobile messengers, by @vixentael</title>
      <author>Cossack Labs</author>
      <pubDate>Tue, 13 Apr 2021 10:48:52 +0000</pubDate>
      <link>https://dev.to/cossacklabs/e2ee-and-privacy-in-mobile-messengers-by-vixentael-4g20</link>
      <guid>https://dev.to/cossacklabs/e2ee-and-privacy-in-mobile-messengers-by-vixentael-4g20</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Do you know that all popular messengers, like Signal, WhatsApp, Messenger, and Telegram use end-to-end encryption?&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But still, in terms of privacy and data security, they provide not all the same level of your information protection. And yes, &lt;strong&gt;messengers can still collect and sell your data.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;How's that possible? Which messenger to use? &lt;/p&gt;

&lt;p&gt;Get 2 minutes pro explanation by &lt;a href="https://www.linkedin.com/in/anastasiiavoitova/"&gt;Anastasiia Voitova&lt;/a&gt; aka &lt;a href="https://twitter.com/vixentael"&gt;@vixentael&lt;/a&gt;, Head of customer solutions at &lt;a href="https://www.cossacklabs.com/"&gt;Cossack Labs&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Watch the full video on &lt;a href="https://www.youtube.com/watch?v=CqsrA4eeGSs&amp;amp;ab_channel=CossackLabs"&gt;YouTube&lt;/a&gt;. &lt;br&gt;
Give respects to &lt;a href="https://twitter.com/vixentael"&gt;@vixentael&lt;/a&gt; and follow &lt;a href="https://twitter.com/cossacklabs"&gt;@Cossack Labs&lt;/a&gt; on Twitter.&lt;br&gt;
Get through the &lt;a href="https://speakerdeck.com/vixentael/e2ee-equals-security-equals-privacy"&gt;slides here&lt;/a&gt;.🐬&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_speakerdeck"&gt;
  &lt;iframe height="463" id="talk_frame_ba7464de4e2e46aa9aff6154ee8b1a89" src="//speakerdeck.com/player/ba7464de4e2e46aa9aff6154ee8b1a89" width="710"&gt;&lt;/iframe&gt;
&lt;/div&gt;


</description>
      <category>security</category>
      <category>cryptography</category>
      <category>encryption</category>
      <category>privacy</category>
    </item>
    <item>
      <title>30 Awesome places to find design inspiration</title>
      <author>Davide Pacilio</author>
      <pubDate>Tue, 13 Apr 2021 10:47:59 +0000</pubDate>
      <link>https://dev.to/cruip/30-awesome-places-to-find-design-inspiration-1hpn</link>
      <guid>https://dev.to/cruip/30-awesome-places-to-find-design-inspiration-1hpn</guid>
      <description>&lt;p&gt;If I could give you one piece of advice about enhancing your creative process, it would be to never approach a new design project without researching for inspiration first!&lt;br&gt;
It doesn't matter if you are a seasoned product designer or a non-creative person with zero experience designing products. The right dose of inspiration can help you be more productive, avoid creative blocks, and produce constant unique/fresh ideas for your projects. &lt;br&gt;
I’m always on the lookout for places where I can find high-quality inspiration for my projects, and this collection includes an extensive list of sites I use to get ton of inspiration for absolutely anything. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Landing Pages/Websites&lt;/li&gt;
&lt;li&gt;Portfolios&lt;/li&gt;
&lt;li&gt;eCommerce&lt;/li&gt;
&lt;li&gt;Mobile apps&lt;/li&gt;
&lt;li&gt;Web apps&lt;/li&gt;
&lt;li&gt;Logo design&lt;/li&gt;
&lt;li&gt;Email design&lt;/li&gt;
&lt;li&gt;Visual design&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;30 Awesome places to find design inspiration:&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Landing Pages/Websites:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#saas-landing-page"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://saaslandingpage.com/"&gt;SaaS Landing Page&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GaHTWfxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er4wfr9a0qwjw2s9d5yj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GaHTWfxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er4wfr9a0qwjw2s9d5yj.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
A curated gallery showcasing high-quality SaaS landing pages and websites. You can also filter the results by the technology, fonts, colors, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#landbook"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://land-book.com/"&gt;Land-book&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tSwhB8y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/104o2ytl328ast17i3om.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tSwhB8y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/104o2ytl328ast17i3om.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
On Land-book you'll find a wide range of design inspiration, from SaaS landing pages, agency websites, portfolios, to e-commerce stores.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lapa"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.lapa.ninja/"&gt;Lapa&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b_bbHbEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9h2tq26rxfyktuxaras.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b_bbHbEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9h2tq26rxfyktuxaras.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Lapa Ninja is a gallery featuring a vast variety of landing page design inspiration, educational books, UI kits, freebies, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#landingfolio"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.landingfolio.com/"&gt;Landingfolio&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y0qzlVO5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1cp2vmq8lvzxxfh9spn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y0qzlVO5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1cp2vmq8lvzxxfh9spn.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
A website gallery that offers landing page inspiration and resources. You can also filter the results by categories, such as SaaS, mobile apps, startups, and much more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#one-page-love"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://onepagelove.com/"&gt;One Page Love&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AeU3HTuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sulfccz098cft9i8xzek.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AeU3HTuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sulfccz098cft9i8xzek.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
One Page Love, specializes in one-page websites, landing pages, and templates. It's the best you can find in this specific niche.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minimal-gallery"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://minimal.gallery/"&gt;Minimal Gallery&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g8f4wuOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9m85t7wk2330rts733ws.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g8f4wuOV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9m85t7wk2330rts733ws.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Minimal Gallery is a web design gallery that combines a minimal design with a finely-honed selection of great websites and landing pages.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Portfolios:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#humans"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://humans.fyi/"&gt;Humans&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3RSAkE1o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0ia3xjpr2bmqmc3o4ak.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3RSAkE1o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k0ia3xjpr2bmqmc3o4ak.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Humans is a hidden gem for finding portfolio-related inspiration. You can filter the results by profession (developers, designers, photographers, etc.), and even by colors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#awwwards"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.awwwards.com/websites/portfolio/"&gt;Awwwards&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_e2m8VxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syebh022mamxus99tg08.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_e2m8VxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/syebh022mamxus99tg08.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Awwwards is one of the best galleries on the internet to find inspirational design. It covers several categories, including a great selection of portfolios from top professionals and agencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#siteinspire"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.siteinspire.com/websites?categories=19"&gt;Siteinspire&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v-Q7A9A---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zhdh9ie509nn4bkwgqg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v-Q7A9A---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zhdh9ie509nn4bkwgqg.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Siteinspire showcases a huge selection of amazingly designed websites, including one of the best portfolio directories you can find on the internet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#semplice-showcase"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.semplice.com/showcase"&gt;Semplice Showcase&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aM7GO9oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rzr1clw60dw1mr7i6bf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aM7GO9oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rzr1clw60dw1mr7i6bf.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The Semplice Showcase features the best portfolios built with Semplice (a portfolio system based on WordPress).&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;eCommerce:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#commerce-cream"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://commercecream.com/"&gt;Commerce Cream&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EmLj3dHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21t9615hxsdzauejpti9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EmLj3dHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21t9615hxsdzauejpti9.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Commerce Cream features some of the best-looking eCommerce websites submitted by top design agencies. If you’re looking for some eCommerce inspiration, Commerce Cream is a great resource.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ecommdesign"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://ecomm.design/"&gt;ecomm.design&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---F0EAEX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm92t9bd6rvsc4ymt0a2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---F0EAEX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm92t9bd6rvsc4ymt0a2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
ecomm.design is a collection of top-notch eCommerce websites filterable by platforms (e.g., Shopify, Squarespace, etc.) and categories (e.g., fashion, accessories, etc.).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shopify-themes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://themes.shopify.com/"&gt;Shopify Themes&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twWR4xlk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ewhbiqflrdais8l3dsz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twWR4xlk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ewhbiqflrdais8l3dsz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Explore a wide range of beautifully designed themes created by top-notch designers and agencies. Find inspiration, discover styles, and start building your next store.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Mobile Apps:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ux-archive"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://uxarchive.com/"&gt;UX Archive&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4M476LD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4foys3nyxf8cxierrd5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4M476LD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4foys3nyxf8cxierrd5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
UXArchive is the leading destination to find design inspiration from the world’s top mobile apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobbin"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://mobbin.design/"&gt;Mobbin&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OsL40bTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y5ykqvdk8hux5z815m5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OsL40bTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y5ykqvdk8hux5z815m5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Mobbin is a hand-picked collection of the latest mobile design patterns from apps that reflect the best in design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ui-garage"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://uigarage.net/"&gt;UI Garage&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-cMWfAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gekbbz7dy35133jn5pp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-cMWfAI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gekbbz7dy35133jn5pp.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
UI Garage features the best mobile design inspiration sortable by platforms (iOS and Android), product categories, and design patterns.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rowlab"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://rowlab.xyz/mobile-patterns"&gt;Rowlab&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_DbwHsjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nexjve7kykomfulbvb6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_DbwHsjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nexjve7kykomfulbvb6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Rowlab displays a curated collection of great mobile apps sortable by patterns, categories, elements, and even interface colors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scrnshts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://scrnshts.club/"&gt;Scrnshts&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AOJMtfXk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfqk6se9nkf2u5rvwyol.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AOJMtfXk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfqk6se9nkf2u5rvwyol.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Scrnshts is a hand-picked selection of the finest app store design screenshots created by top designers and illustrators.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Web Apps:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screenlane"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://screenlane.com/platform/web-apps/"&gt;Screenlane&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rvkLJLMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6uz4o7gt9f7a99c2syp2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rvkLJLMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6uz4o7gt9f7a99c2syp2.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Screenlane is a growing library of user flows and screenshots from popular web products. It's a great place to find real-world web app patterns and inspiration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#webframe"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://webframe.xyz/"&gt;Webframe&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2GHkjZP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udwj3d1cy1n7ph0o2e48.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2GHkjZP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udwj3d1cy1n7ph0o2e48.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Webframe is massive library of 800+ screenshots to get inspiration from the internet's top web apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reallygoodux"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.reallygoodux.io/"&gt;ReallyGoodUX&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4bmkCifM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr6x1l5dwlbu25qux39s.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4bmkCifM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr6x1l5dwlbu25qux39s.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
ReallyGoodUX is an inspirational directory to find the best UX examples—including onboarding tours and walkthroughs, UX copywriting, signup flows, and more.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Logos:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brand-new"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.underconsideration.com/brandnew/"&gt;Brand New&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oyyeNrn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayzyl107noi5q6zdzp4x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oyyeNrn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ayzyl107noi5q6zdzp4x.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Brand New features logos and brand designs of notable products, companies, services, and organizations across all industries and locations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#font-in-logo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.fontinlogo.com/"&gt;Font In Logo&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AhMm89Lg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzcfcjsstscm3wa32gmh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AhMm89Lg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzcfcjsstscm3wa32gmh.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
FontInLogo helps you search and find World Brands (and other) Logos with their font details.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#logopond"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://logopond.com/"&gt;Logopond&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8rMW018q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/757wyq5pkq48k05x8rxr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8rMW018q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/757wyq5pkq48k05x8rxr.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Logopond is an inspirational site &amp;amp; showcase of identity work from designers of varying abilities all across the world.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Email Design:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#really-good-emails"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://reallygoodemails.com/"&gt;Really Good Emails&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3_4Wcf7i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbp17oefsgchxmifb9gc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3_4Wcf7i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbp17oefsgchxmifb9gc.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Really Good Emails aims to be the best showcase of email design and resources on the web.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#email-love"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://emaillove.com/"&gt;Email Love&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--628ycOjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j7jvjinewr6hpd43wns.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--628ycOjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j7jvjinewr6hpd43wns.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Email Love is a brand new online resource curating the best email designs, templates, and tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#email-gallery"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://email-gallery.com/"&gt;Email Gallery&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AhGr8jJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7kidsq5w1fspvh9x0281.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AhGr8jJK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7kidsq5w1fspvh9x0281.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Email Gallery helps designers and developers find inspiration in the collection of emails from various companies and individuals.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Visual Design:&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#designspiration"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.designspiration.com/"&gt;Designspiration&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5CWcONS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63lwhj77650ybskyggt0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5CWcONS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63lwhj77650ybskyggt0.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Designinspiration is an image &amp;amp; color search engine for creating mood boards and finding art, design, logos, photography, and app inspiration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#baubauhaus"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="http://www.baubauhaus.com/"&gt;Baubauhaus&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wf_CZn_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9z5vzd2lemhwrl53l98.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wf_CZn_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9z5vzd2lemhwrl53l98.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Baubauhaus is a design blog made up of many images that represent design, illustration, photography, fashion, and art-related inspiration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inspirationgrid"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://theinspirationgrid.com/"&gt;Inspirationgrid&lt;/a&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QJabJzsa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63g6org6k2evj1pbi972.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QJabJzsa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63g6org6k2evj1pbi972.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Inspiration Grid is an online magazine celebrating creative talent from around the world. It showcases daily awesome examples of design, art, illustration, typography, photography, architecture, and more.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Where do you get inspiration? Feel free to share your favorite sources of inspiration and we’ll add the best to the list.&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Optimizing Django ORM SQL Queries</title>
      <author>AppMap Ruby</author>
      <pubDate>Tue, 13 Apr 2021 10:32:59 +0000</pubDate>
      <link>https://dev.to/appland/optimizing-django-orm-sql-queries-5n8</link>
      <guid>https://dev.to/appland/optimizing-django-orm-sql-queries-5n8</guid>
      <description>&lt;p&gt;A demonstration of how to optimize Django ORM by seeing how it makes SQL queries under the hood.&lt;/p&gt;

&lt;p&gt;I use the open source &lt;a href="https://marketplace.visualstudio.com/items?itemName=appland.appmap"&gt;AppMap extension for Visual Studio Code&lt;/a&gt; to record the code and SQL execution of an application test case, and then display that information as a graphical execution trace.&lt;/p&gt;

&lt;p&gt;The graphical display of code and SQL shows how the ORM works behind the scenes.  &lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>sql</category>
      <category>performance</category>
    </item>
    <item>
      <title>10 Best Free Productivity Tools Front-end Developers need in 2021</title>
      <author>Sunil Joshi</author>
      <pubDate>Tue, 13 Apr 2021 10:32:57 +0000</pubDate>
      <link>https://dev.to/suniljoshi19/10-best-free-productivity-tools-front-end-developers-need-in-2021-4ba7</link>
      <guid>https://dev.to/suniljoshi19/10-best-free-productivity-tools-front-end-developers-need-in-2021-4ba7</guid>
      <description>&lt;p&gt;It's a new year and that means a new set of tools to boost the developer's productivity. And those which don't cost a penny!&lt;/p&gt;

&lt;p&gt;Whatever code we as frontend devs write to develop a project, we have to appreciate the different sets of tools we use throughout our careers and projects. Without these wonderful tools, the life of a developer becomes so hard.&lt;/p&gt;

&lt;p&gt;So that you don't have to go through some of the awesome ones out there, we have compiled the top tools a frontend dev can have by his/her side.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-npm"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYxn6cCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2eqrt6ghm2l7efn13jxp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYxn6cCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2eqrt6ghm2l7efn13jxp.png" alt="NPM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As much as the "Node" thing may sound, the NPM or the Node Package Manager is one of those tools without which installing new packages and libraries is quite a bummer.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Helps to discover packages of reusable code.&lt;/li&gt;
&lt;li&gt;Has a command-line utility to make changes within a project.&lt;/li&gt;
&lt;li&gt;You can make your own packages and publish them.&lt;/li&gt;
&lt;li&gt;You can manage public and private code using the same workflow.&lt;/li&gt;
&lt;li&gt;A wide support for frontend languages/frameworks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-dailydev"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://daily.dev/"&gt;DailyDev&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![DailyDev](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FjN-HdPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u9u5d4x6epbjsrbjhx4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FjN-HdPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u9u5d4x6epbjsrbjhx4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you need one place to get inspiration for your new project, a soothing web design that can be translated into HTML and CSS code or you need a community of learners where each of the other developers like you share their thoughts then Daily dot Dev is your cup of tea.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An extension for your browser where the developer community ranks resources across thousands of blogs/websites.&lt;/li&gt;
&lt;li&gt;You get a community of like-minded developers (specially 'frontenders').&lt;/li&gt;
&lt;li&gt;Each new tab will give you a collection of dev news.&lt;/li&gt;
&lt;li&gt;Easily customizable browser extension where you can bookmark favorite resources.&lt;/li&gt;
&lt;li&gt;Open source code with frontend written in Next.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-typescript"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![TypeScript](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHWsVYKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4twv2a37o4i9eof138qb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHWsVYKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4twv2a37o4i9eof138qb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Still, making mistakes in your JavaScript syntaxes and common logic? Why not try one of the most popular front-end languages? TypeScript (TS) is a syntactical superset of JavaScript which adds optional static typing and some powers to your already wonderful JavaScript code.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It supports pre-existing JavaScript libraries.&lt;/li&gt;
&lt;li&gt;You can run TS on any dev environment where JavaScript already runs.&lt;/li&gt;
&lt;li&gt;Highly useful if you're developia scalable and powerful web application.&lt;/li&gt;
&lt;li&gt;Saves you time catching errors and providing fixes before you run code.&lt;/li&gt;
&lt;li&gt;Open source and awesome community support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#4-wappalyzer"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.wappalyzer.com/"&gt;Wappalyzer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![Wappalyzer](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd3o4ybg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pxm1t6sfyy8ehv22kpd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fd3o4ybg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7pxm1t6sfyy8ehv22kpd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So you hop across some amazing new websites and you start to wonder, "What libraries were used to achieve this effect? What tech stack they used? Did they styled it with Bootstrap or plain old CSS?".&lt;/p&gt;

&lt;p&gt;Wappalyzer comes to answer all of your questions here. You can identify any technology used be it about front-end or back-end or even DevOps!&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Find out the technology stack of any website. &lt;/li&gt;
&lt;li&gt;You can create lists of your favorite websites that use certain technologies.&lt;/li&gt;
&lt;li&gt;Be first to know when a tech stack changes.&lt;/li&gt;
&lt;li&gt;Integrate with your favorite apps from GMail to Zapier.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#5-sass"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://sass-lang.com/"&gt;SASS&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![SASS](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-xDhN3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwlf8m7f9vyudnwzl0hr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-xDhN3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwlf8m7f9vyudnwzl0hr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If writing CSS gives your website styling powers, then Syntactically Awesome Style Sheets (SASS) will give you superpowers!&lt;/p&gt;

&lt;p&gt;It's one of the reliable, mature, and robust CSS extension languages. Just like a regular programming language, you can use variables, inheritance, and nesting with ease.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Supports language extensions such as variables, nesting, and mixins.&lt;/li&gt;
&lt;li&gt;Clear and steady syntax.&lt;/li&gt;
&lt;li&gt;Advanced features like control directives for libraries.&lt;/li&gt;
&lt;li&gt;Endless number of framework support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#6-visbug"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://visbug.web.app/"&gt;VisBug&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![VisBug](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1K69_ARo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exkkzgt4bxlfw2cpambl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1K69_ARo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exkkzgt4bxlfw2cpambl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VisBug is a set of browser design tools you can use to change any content, theme, layout, etc of any website. It comes as a browser extension and has a plethora of tools to mess around for good.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let's you quickly visualize how a web design will convert into a frontend page.&lt;/li&gt;
&lt;li&gt;Inspect any element to extract its properties.&lt;/li&gt;
&lt;li&gt;Improve accessibility or check for errors on a page.&lt;/li&gt;
&lt;li&gt;Add drop shadows or align a card to your particular liking.&lt;/li&gt;
&lt;li&gt;Go crazy and change the entire content of a webpage from headings to button labels.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#7-codepen"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://codepen.io/"&gt;CodePen&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![CodePen](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eRl6qJov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf1zr5asyc3i6gnmlbjo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eRl6qJov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf1zr5asyc3i6gnmlbjo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to quickly see how two containers will align in a &lt;code&gt;grid&lt;/code&gt; layout without locally making an HTML and CSS file in your machine? Simply head over to the pen. new and boom you get CodePen codepad where you have the canvas to jot down the frontend code you love.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for HTML, Pug, CSS, JavaScript with real-time output.&lt;/li&gt;
&lt;li&gt;Built-in emmet support for faster code completion. &lt;/li&gt;
&lt;li&gt;Various themes, code fonts, and shortcuts are supported.&lt;/li&gt;
&lt;li&gt;Different output views and option to add external libraries is supported.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#8-codesandbox"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://codesandbox.io/"&gt;CodeSandbox&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![CodeSandbox](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uuc4Taqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oesh4tnz9lux9rizvwoe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uuc4Taqd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oesh4tnz9lux9rizvwoe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeSandbox is like the big brother of the previously mentioned CodePen. It not only supports the regular front-end languages but also libraries and frameworks like Angular, React, and Vue!&lt;/p&gt;

&lt;p&gt;Just start a project in the cloud and spin off a React app within seconds to quickly prototype your ideas into code.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use a template to kickstart new projects, or start from a GitHub repo.&lt;/li&gt;
&lt;li&gt;The overall development is superfast in a sandbox with almost instantaneous results. &lt;/li&gt;
&lt;li&gt;It is collaborative so that your teammates can write code or comments.&lt;/li&gt;
&lt;li&gt;Live updates with the ability to embed your code or output to any website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#9-the-frontend-developer-roadmap"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://roadmap.sh/frontend"&gt;The Frontend Developer Roadmap&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![The Frontend Developer Roadmap](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tLfJ9zqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsvfsklzzvs7a57ajdeq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tLfJ9zqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vsvfsklzzvs7a57ajdeq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doesn't matter if you're a beginner or already a pro. A developer roadmap helps you to guide from zero to hero. This particular front-end roadmap comes with a detailed overview of the industry trends and best practices while moving ahead in your front-end journey.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step by step guide to becoming a modern frontend developer.&lt;/li&gt;
&lt;li&gt;Fully open-source.&lt;/li&gt;
&lt;li&gt;Detailed with alternatives.&lt;/li&gt;
&lt;li&gt;Comes with a handy list of resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#10-firefox-developer-edition"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://www.mozilla.org/en-US/firefox/developer/"&gt;Firefox Developer Edition&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;![Firefox Developer Edition](&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XjeuWjND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pywrve8jhepy6255ydgd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XjeuWjND--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pywrve8jhepy6255ydgd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With powerful and ever-evolving developer tools, the Developer Edition is a must-have for a front-end developer out there. Not only it combines the best browsing and development experience, but it also has some pretty unique technology adaptations, specifically for CSS.&lt;/p&gt;

&lt;p&gt;What's the deal?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Focussed on both privacy and development.&lt;/li&gt;
&lt;li&gt;Has some cool experimental features like Multi-line Console Editor and WebSocket Inspector. &lt;/li&gt;
&lt;li&gt;Dark Theme for dev tools is enabled by default, with remote debugging support.&lt;/li&gt;
&lt;li&gt;Some unique features like Inactive CSS, CSS Grid visualizer, and font panel.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are tonnes of other tools out there for you to be a productive front-end developer, which one of the lists will you use this year? Let us know and happy coding!&lt;/p&gt;

</description>
      <category>developer</category>
      <category>design</category>
      <category>tools</category>
      <category>frontend</category>
    </item>
    <item>
      <title>✔||🤢 Commit or Vomit | code style</title>
      <author>Jasper de Jager</author>
      <pubDate>Tue, 13 Apr 2021 10:28:14 +0000</pubDate>
      <link>https://dev.to/jmdejager/commit-or-vomit-angular-codestyle-2mpl</link>
      <guid>https://dev.to/jmdejager/commit-or-vomit-angular-codestyle-2mpl</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@oskaryil?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Oskar Yildiz&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/code?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;some-component&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"complicated div"&lt;/span&gt;
  &lt;span class="na"&gt;[title]=&lt;/span&gt;&lt;span class="s"&gt;"'test'"&lt;/span&gt;
  &lt;span class="na"&gt;subtitle=&lt;/span&gt;&lt;span class="s"&gt;"test div"&lt;/span&gt;
  &lt;span class="na"&gt;[color]=&lt;/span&gt;&lt;span class="s"&gt;"divColor"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let item of list"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;i18n&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;list item&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      {{item}}
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/some-component&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What do you think of the presented code style:&lt;/p&gt;

&lt;p&gt;❤: Commit (something I could commit)&lt;br&gt;
🏷: Vomit (I'd never commit this)&lt;br&gt;
🦄: I like your post please continue this series!&lt;/p&gt;

&lt;p&gt;Let's vote! 😊&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How To Find Broken Images Using Selenium WebDriver?</title>
      <author>himanshuseth004</author>
      <pubDate>Tue, 13 Apr 2021 10:01:11 +0000</pubDate>
      <link>https://dev.to/himanshusheth004/how-to-find-broken-images-using-selenium-webdriver-i9b</link>
      <guid>https://dev.to/himanshusheth004/how-to-find-broken-images-using-selenium-webdriver-i9b</guid>
      <description>&lt;p&gt;A web product’s user experience is one of the key elements that help in user acquisition and user retention. Though immense focus should be given to the design &amp;amp; development of new product features, a continuous watch should be kept on the overall user experience. Like 404 pages (or dead links), broken images on a website (or web app) could also irk the end-users. Manual inspection and removal of broken images is not a feasible and scalable approach. Instead of using third-party tools to inspect broken images, you should leverage &lt;a href="https://www.lambdatest.com/selenium-automation?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;Selenium automation testing&lt;/a&gt; and see how to find broken images using Selenium WebDriver on your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSOKaWeE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image22.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSOKaWeE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image22.gif" alt="Not Found"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this part of the &lt;a href="https://www.lambdatest.com/selenium?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;Selenium Tutorial&lt;/a&gt;, we look at how to find broken images on websites using Selenium WebDriver. From an end-user’s perspective, even a single broken image on a page could be an experience dampener – a prime reason to find broken images on websites.&lt;/p&gt;

&lt;p&gt;By the end of this blog, you would be able to find broken images using &lt;a href="https://www.lambdatest.com/blog/selenium-webdriver-with-python/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;Selenium WebDriver with Python&lt;/a&gt;, Java, C#, and PHP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-broken-images-in-web-testing"&gt;
  &lt;/a&gt;
  What are Broken Images in Web Testing?
&lt;/h2&gt;

&lt;p&gt;Broken image is a link/image that does not show up as a picture, clicking upon which takes the end-user to a defunct picture. The user encounters a 404 Error when clicked on the broken image. This error means that there is an issue with the image URL, and the image is not loaded properly (due to various reasons).&lt;/p&gt;

&lt;p&gt;Shown below is an example of broken images on a website:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_QL0i-f7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Broken-Images-in-Web-Testing.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QL0i-f7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Broken-Images-in-Web-Testing.png" alt="Broken Images in Web Testing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From an end-user experience and retention point of view, fixing broken images should be considered equally important as fixing broken links on websites. Selenium WebDriver can be used to find broken images on websites. The internal logic for locating broken images might vary based on how the images are fetched from the server.&lt;/p&gt;

&lt;p&gt;Here are two ways in which images are read from the server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Absolute Path –&lt;/strong&gt; As the name indicates, the website uses the absolute path (or complete path) in the ‘src’ attribute that specifies the path to the intended image. The &amp;lt;img&amp;gt; tag in HTML creates a holding space for the referenced image.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shown below is an example of usage of an absolute path in the ‘src’ attribute of the &amp;lt;img&amp;gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P_IESo4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1024x556.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P_IESo4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1024x556.png" alt="Absolute Path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The image shown above is fetched from an absolute location (i.e., the HostName is used in the &amp;lt;src&amp;gt; attribute):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ISPBT7N3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image2-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISPBT7N3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image2-2.png" alt="Broken Image Test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Relative Path –&lt;/strong&gt; On many websites, a relative image on a path is placed in the attribute. The relative path is always relative to the root of the document (i.e., website/web app).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, in &amp;lt;img src=”assets/img/image.jpg” alt=”some text”&amp;gt;; the path of image.jpg is relative to the root. If the website URL is &lt;a href="https://www.someexample.com"&gt;https://www.someexample.com&lt;/a&gt;, the relative path of the image (image.jpg) will equate to &lt;a href="https://www.someexample.com/assets/img/image.jpg"&gt;https://www.someexample.com/assets/img/image.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a sample usage of relative path in the &amp;lt;src&amp;gt; attribute of the &amp;lt;img&amp;gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p6T1DH5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image3-2-1024x555.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p6T1DH5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image3-2-1024x555.png" alt="usage of relative path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You would be curious to know what leads to broken images on a website. Let’s look at the ‘why part’ of broken images?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#major-reasons-for-broken-images-on-a-webpage"&gt;
  &lt;/a&gt;
  Major reasons for Broken images on a webpage
&lt;/h3&gt;

&lt;p&gt;Here are some of the prominent reasons that lead to broken images (i.e., file not found or 404 error for images) on a website (or web apps):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Incorrect Image Format –&lt;/strong&gt; In case you have uploaded the image in a .jpg format, but the image is identified as a .png format in the code, it leads to an error when the image is getting displayed. It is necessary to ensure that the image formats coincide when uploading to the server and referring to the same in the code.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Incorrect Image URL –&lt;/strong&gt; When rendering the specified image, the browser reads the image location from the &amp;lt;src&amp;gt; attribute in the &amp;lt;img&amp;gt; tag. If a wrong image path or incorrect filename is mentioned in the &amp;lt;src&amp;gt; attribute, it leads to issues in displaying the image (and 404 errors).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deleted Image file –&lt;/strong&gt; The HTML code link could be referring to a file that is either wrongly spelled in the code or no longer exist on the server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Site relocation –&lt;/strong&gt; After relocating the site from one provider to another, a thorough check should be conducted to verify whether all the site assets are available and accessible on the new server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;301 redirection –&lt;/strong&gt; During a website redesign activity, 301 redirects should be done for the site content and the images used on the site. Along with the redirection of URLs, utmost attention should be given to the redirection of the images that reside in those URLs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Unavailability of the server –&lt;/strong&gt; In scenarios where the server does not give a response within a certain time-frame, images would fail to appear on the site.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like broken links, attention should be given to ensure that your web product is free from broken images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-should-you-check-for-broken-images"&gt;
  &lt;/a&gt;
  Why should you check for broken images?
&lt;/h3&gt;

&lt;p&gt;Here are the two major reasons for checking for broken images on websites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Broken images on a website hamper the end-user experience, which could negatively impact the growth of the product.&lt;/li&gt;
&lt;li&gt;Images are an essential part of the content marketing strategy. However, broken images could create SEO issues. Images with missing ALT tags and broken internal images are problematic from an SEO point of view and should be looked into on a high priority.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-webdriver"&gt;
  &lt;/a&gt;
  How to Find Broken Images Using Selenium WebDriver?
&lt;/h2&gt;

&lt;p&gt;When a user visits a website, the user request is sent to the website’s server, which processes the request. In response to the browser’s request, the server sends a three-digit code referred to as the HTTP Status Code to the browser.&lt;/p&gt;

&lt;p&gt;Some of the commonly used classes of HTTP Status Codes are 1xx, 2xx, 3xx, 4xx, and 5xx.&lt;br&gt;&lt;br&gt;
To find broken images using the Selenium WebDriver, we would be using the 4xx class of status code, indicating that the particular page or the complete website is not reachable. The status code of class 2xx (particularly 200) suggests that the request sent by the web browser was successful, and the appropriate response was sent to the browser.&lt;/p&gt;

&lt;p&gt;When an image is not available on the server, a response code 404 (Page Not Found) is sent to the web browser. You can refer to our earlier blog for detailed information on &lt;a href="https://www.lambdatest.com/blog/broken-links-testing-using-selenium/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;HTTP Status Codes and Status Codes presented on the detection of broken links/images&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Irrespective of the programming language being used to detect broken images, the basic principles remain the same. Here are some of the steps that can be followed to find broken images on websites:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the &amp;lt;img&amp;gt; tag to collect details of the images present on the page.&lt;/li&gt;
&lt;li&gt;For each &amp;lt;img&amp;gt; tag, get the attribute &amp;lt;src&amp;gt; from the tag.&lt;/li&gt;
&lt;li&gt;Convert the path obtained from the &amp;lt;src&amp;gt; attribute to an ‘Absolute Path.’ Conversion to absolute path might not be required for Selenium Java, Selenium C#, and Selenium Python. Converting the ‘relative path’ of the image(s) to ‘absolute path’ is a must when Selenium PHP is used.&lt;/li&gt;
&lt;li&gt;Send an HTTP request to the image link obtained from step(3) and capture the response code received in response to the request.&lt;/li&gt;
&lt;li&gt;Based on the response code sent by the server, you should validate whether the image is broken. Response code 200 (i.e., HttpStatusCode.OK) means that the image is available on the server.&lt;/li&gt;
&lt;li&gt;Validate whether the link is broken or not based on the response code sent by the server.&lt;/li&gt;
&lt;li&gt;Repeat steps (2-6) for every image present on the page.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The naturalWidth attribute returns the original width of the image, and it is zero for a broken image. For Selenium with Java, you could also check if the naturalWidth attribute of the image is zero or not.&lt;/p&gt;

&lt;p&gt;In this Selenium Tutorial, we demonstrate how to find broken images using Selenium WebDriver in Java, Python, C#, and PHP. The tests are run on the latest version of the Chrome Browser on the Windows 10 platform. The execution is carried out on the cloud-based Selenium Grid provided by LambdaTest.&lt;/p&gt;

&lt;p&gt;To get started with LambdaTest, you should create an account on the website and note the user-name &amp;amp; access-key from the &lt;a href="https://accounts.lambdatest.com/detail/profile"&gt;profile section on LambdaTest&lt;/a&gt;. The browser capabilities are generated using LambdaTest Capabilities Generator.&lt;/p&gt;

&lt;p&gt;Here is the test scenario to find broken images on the website:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Scenario&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://the-internet.herokuapp.com/broken_images"&gt;https://the-internet.herokuapp.com/broken_images&lt;/a&gt; on Chrome (latest)&lt;/li&gt;
&lt;li&gt;Read the details about the images present on the page&lt;/li&gt;
&lt;li&gt;Send HTTP request for each image&lt;/li&gt;
&lt;li&gt;Check the response code of the HTTP request. If the response code is 200, the image is not broken; else, the image is broken.&lt;/li&gt;
&lt;li&gt;Print whether the image is broken or not on the terminal&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The URL under test &lt;a href="https://the-internet.herokuapp.com/broken_images"&gt;https://the-internet.herokuapp.com/broken_images&lt;/a&gt; has two broken images and two proper images.&lt;/p&gt;

&lt;p&gt;Shown below are the two broken images on the website:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Y3jgsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/broken-images-1024x509.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Y3jgsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/broken-images-1024x509.png" alt="broken images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are the two proper (or not broken) images on the website:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--It8cBRKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image5-1-1024x509.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--It8cBRKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image5-1-1024x509.png" alt="broken image check"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-java"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium Java?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;FileName – pom.xml&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;org.brokenimages&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;BrokenImages&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.testng&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;testng&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;6.9.10&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;slf4j-nop&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.7.28&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-java&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.0.0-alpha-7&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-remote-driver&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.0.0-alpha-7&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-chrome-driver&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.0.0-alpha-7&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.5.13&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;defaultGoal&amp;gt;install&amp;lt;/defaultGoal&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;3.0&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;11&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;11&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;FileName – testng.xml&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd"&amp;gt;
&amp;lt;suite name="Broken Images Detection Demo"&amp;gt;
    &amp;lt;test verbose="2" preserve-order="true" name="Detect broken images in Selenium WebDriver"&amp;gt;
        &amp;lt;classes&amp;gt;
            &amp;lt;class name="brokenimages.test_brokenimages"&amp;gt;
            &amp;lt;/class&amp;gt;
        &amp;lt;/classes&amp;gt;
    &amp;lt;/test&amp;gt;
&amp;lt;/suite&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;FileName – test_brokenimages.java&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package brokenimages;

import java.io.IOException;
import java.net.MalformedURLException;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClientBuilder;
import org.openqa.selenium.By;
import java.net.URL;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class test_brokenimages
{
    /*  protected static ChromeDriver driver; */
    WebDriver driver = null;
    String URL = "https://the-internet.herokuapp.com/broken_images";
    public static String status = "passed";
    String username = "user-name";
    String access_key = "access-key";

    @BeforeClass
    public void testSetUp() throws MalformedURLException {
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability("build", "[Java] Finding broken images on a webpage using Selenium");
        capabilities.setCapability("name", "[Java] Finding broken images on a webpage using Selenium");
        capabilities.setCapability("platform", "Windows 10");
        capabilities.setCapability("browserName", "Chrome");
        capabilities.setCapability("version","latest");
        capabilities.setCapability("tunnel",false);
        capabilities.setCapability("network",true);
        capabilities.setCapability("console",true);
        capabilities.setCapability("visual",true);

        driver = new RemoteWebDriver(new URL("http://" + username + ":" + access_key + "@hub.lambdatest.com/wd/hub"),
                capabilities);
        System.out.println("Started session");
    }

    @Test(description="Approach 1: Find broken images on a web page using Selenium WebDriver", enabled=true)
    protected void test_selenium_broken_images_appr_1()
    {
        Integer iBrokenImageCount = 0;

        driver.navigate().to(URL);
        driver.manage().window().maximize();

        try
        {
            iBrokenImageCount = 0;
            List&amp;lt;WebElement&amp;gt; image_list = driver.findElements(By.tagName("img"));
            /* Print the total number of images on the page */
            System.out.println("The page under test has " + image_list.size() + " images");
            for (WebElement img : image_list)
            {
                if (img != null)
                {
                    HttpClient client = HttpClientBuilder.create().build();
                    HttpGet request = new HttpGet(img.getAttribute("src"));
                    HttpResponse response = client.execute(request);
                    /* For valid images, the HttpStatus will be 200 */
                    if (response.getStatusLine().getStatusCode() != 200)
                    {
                        System.out.println(img.getAttribute("outerHTML") + " is broken.");
                        iBrokenImageCount++;
                    }
                }
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            status = "failed";
            System.out.println(e.getMessage());
        }
        status = "passed";
        System.out.println("The page " + URL + " has " + iBrokenImageCount + " broken images");
    }

    @Test(description="Approach 2: Find broken images on a web page using Selenium WebDriver", enabled = true)
    protected void test_selenium_broken_images_appr_2()
    {
        Integer iBrokenImageCount = 0;

        driver.navigate().to(URL);
        driver.manage().window().maximize();

        try
        {
            iBrokenImageCount = 0;
            List&amp;lt;WebElement&amp;gt; image_list = driver.findElements(By.tagName("img"));
            /* Print the total number of images on the page */
            System.out.println("The page under test has " + image_list.size() + " images");
            for (WebElement img : image_list)
            {
                if (img != null)
                {
                    if (img.getAttribute("naturalWidth").equals("0"))
                    {
                        System.out.println(img.getAttribute("outerHTML") + " is broken.");
                        iBrokenImageCount++;
                    }
                }
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            status = "failed";
            System.out.println(e.getMessage());
        }
        status = "passed";
        System.out.println("The page " + URL + " has " + iBrokenImageCount + " broken images");
    }

    @AfterClass
    public void tearDown()
    {
        if (driver != null) {
            ((JavascriptExecutor) driver).executeScript("lambda-status=" + status);
            driver.quit();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough [Approach – 1]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Import the required packages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Apache HttpClient library is used for handling the HTTP requests. To use the latest version of HttpClient library, the &lt;a href="https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient/4.5.13"&gt;dependency&lt;/a&gt; for the library is added to the Maven Build file (pom.xml).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;4.5.13&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To find the broken images on the page under test, the HttpClient library is used for checking the status codes of the images present on the page. The necessary packages are imported so that its methods can be used in the implementation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClientBuilder;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Find all the images on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The findElements method in Selenium is used for fetching the details of all the images present on the page. The images are located using the tagName ‘ img.’&lt;/p&gt;

&lt;p&gt;The images are placed in a list, which will be further iterated to find broken images on the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;List&amp;lt;WebElement&amp;gt; image_list = driver.findElements(By.tagName("img"));
System.out.println("The page under test has " + image_list.size() + " images");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Create a new instance of HttpClient&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The HttpClient class offers an API that primarily consists of three core classes – HttpClient, HttpRequest, and HttpResponse. HttpResponse describes the result of an HttpRequest call. For reading the response body, we create a new instance of HttpClient and request the objects. The new instance of the class is created with the build() method of HttpClientBuilder class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HttpClient client = HttpClientBuilder.create().build();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Create a new instance of HttpGet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/CloseableHttpClient.html"&gt;CloseableHttpClient&lt;/a&gt; provides the execute method for sending and receiving the data. The execute method uses the parameter of type HttpUriRequest, which has many sub-classes, including HttpGet and HttpPost.&lt;/p&gt;

&lt;p&gt;We first create a new HttpGet object with the HttpUriRequest set to path retrieved by reading the src attribute in the WebElement img.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HttpGet request = new HttpGet(img.getAttribute("src"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example – getAttribute(“src”) for the image “Fork me on GitHub” will return /img/forkme_right_green_007200.png.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc7c39OP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image11-1-1024x548.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc7c39OP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image11-1-1024x548.png" alt="Broken Image Test Using Selenium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Retrieve the response object&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The execute method executes the HTTP request using the default context. It returns the response body (i.e. HttpResponse).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HttpResponse response = client.execute(request);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6. Read the Status Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The getStatusLine method of the HttpResponse class obtains the status line of the response [obtained from step(5)]. The getStatusCode method returns the &lt;a href="https://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpStatus.html"&gt;HttpStatus&lt;/a&gt; in an integer format. Response Code 200 (SC_OK) means that the HTTP request was executed successfully.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (response.getStatusLine().getStatusCode() != 200)
{
    System.out.println(img.getAttribute("outerHTML") + " is broken.");
    iBrokenImageCount++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If HttpStatus is 200, the concerned image is not broken, whereas HttpStatus for a broken image is 404. Steps (3) thru’ (6) are repeated for all the WebElement entries in the image list. The outerHTML attribute for the broken images is printed for reference on the terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Walkthrough [Approach – 2]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Find all the images on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Similar to Step(2) in Approach – 1, the findElements method in Selenium is used to fetch the details of images present on the image. The tagName img is used with the findElements method to achieve the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;List&amp;lt; WebElement &amp;gt; image_list = driver.findElements(By.tagName("img"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Read the naturalWidth attribute&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The naturalWidth attribute of the WebElements identified in Step(1) is read. For broken images, naturalWidth will be zero whereas it is non-zero for normal images.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (img.getAttribute("naturalWidth").equals("0"))
{
    System.out.println(img.getAttribute("outerHTML") + " is broken.");
      iBrokenImageCount++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step (2) is repeated for all the WebElements in the list image_list, which was obtained in Step (1). The variable iBrokenImageCount indicates the number of broken images on the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shown below are the execution snapshots of Approach – 1 and Approach – 2. As expected, we see that there are two broken images on the webpage under test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8t3eEv64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1024x142.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8t3eEv64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1024x142.png" alt="Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PppnUOdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image6-1024x138.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PppnUOdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image6-1024x138.png" alt="test execution snapshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-python"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium Python?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FileName – test_brokenimages.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import requests
import urllib3
import pytest
from requests.exceptions import MissingSchema, InvalidSchema, InvalidURL
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys

capabilities = {
    "build": "[Python] Finding broken images on a webpage using Selenium",
    "name": "[Python] Finding broken images on a webpage using Selenium",
    "platform": "Windows 10",
    "browserName": "Chrome",
    "version": "latest"
}

user_name = "user-name"
app_key = "access-key"
URL = "https://the-internet.herokuapp.com/broken_images"
iBrokenImageCount = 0

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
remote_url = "http://" + user_name + ":" + app_key + "@hub.lambdatest.com/wd/hub"
driver = webdriver.Remote(command_executor=remote_url, desired_capabilities=capabilities)
driver.maximize_window()
driver.get(URL)

image_list = driver.find_elements(By.TAG_NAME, "img")
print('Total number of images on '+ URL + ' are ' + str(len(image_list)))

for img in image_list:
    try:
        response = requests.get(img.get_attribute('src'), stream=True)
        if (response.status_code != 200):
            print(img.get_attribute('outerHTML') + " is broken.")
            iBrokenImageCount = (iBrokenImageCount + 1)

    except requests.exceptions.MissingSchema:
        print("Encountered MissingSchema Exception")
    except requests.exceptions.InvalidSchema:
        print("Encountered InvalidSchema Exception")
    except:
        print("Encountered Some other Exception")

driver.quit()

print('The page ' + URL + ' has ' + str(iBrokenImageCount) + ' broken images')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Import Modules&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The requests module is imported so that we can send HTTP requests to the target URL. In case the requests module is not installed on the dev machine, run the command pip install requests to install the same.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kchd5E1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Import-Modules-1024x214.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kchd5E1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Import-Modules-1024x214.png" alt="Import Modules"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import requests
import urllib3
from requests.exceptions import MissingSchema, InvalidSchema, InvalidURL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Fetch details about the images present on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WebElements with the ‘img’ tag are read using the find_elements method in Selenium.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;image_list = driver.find_elements(By.TAG_NAME, "img")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Send an HTTP request&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The get() method in the requests module sends a GET request to the URL passed to it. The src attribute in the img tag contains the location of the image on the server. It is passed to the requests.get() method. Stream in the get() method is set to true, so the response to the HTTP request is immediately downloaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;response = requests.get(img.get_attribute('src'), stream=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In return, we get requests.Response() object that contains the server’s response to the HTTP request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Read the Status Code from the Response object&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The status_code property in requests.Response() object indicates the status of the HTTP request. HTTP Status Code of 200 means that the image is not broken whereas the image is broken if the Status Code is 404.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (response.status_code != 200):
   print(img.get_attribute('outerHTML') + " is broken.")
   iBrokenImageCount = (iBrokenImageCount + 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Repeat steps (3) through (4) for all the WebElement entries in the list (i.e., image_list).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We run the file by triggering the command python &amp;lt;file_name.py&amp;gt; on the terminal. As shown below, two broken images were found on the page under test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tfdn1ZHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image8-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tfdn1ZHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image8-1.png" alt="Test Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-c"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium C#?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FileName – BrokenImageTest.cs&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using OpenQA.Selenium;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Chrome;
using NUnit.Framework;
using System.Threading;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using OpenQA.Selenium.Remote;
using System;
using System.Threading;
using System.Net.Http;
using System.Threading.Tasks;

namespace TestBrokenImages
{
    [TestFixture("chrome", "latest", "Windows 10")]
    public class TestBrokenImages
    {
        private String browser;
        private String version;
        private String os;

        IWebDriver driver;

        public TestBrokenImages(String browser, String version, String os)
        {
            this.browser = browser;
            this.version = version;
            this.os = os;
        }

        [SetUp]
        public void Init()
        {
            String username = "user-name";
            String accesskey = "access-key";
            String gridURL = "@hub.lambdatest.com/wd/hub";

            DesiredCapabilities capabilities = new DesiredCapabilities();

            capabilities.SetCapability("user", username);
            capabilities.SetCapability("accessKey", accesskey);
            capabilities.SetCapability("browserName", browser);
            capabilities.SetCapability("version", version);
            capabilities.SetCapability("platform", os);
            capabilities.SetCapability("build", "[C#] Finding broken images on a webpage using Selenium");
            capabilities.SetCapability("name", "[C#] Finding broken images on a webpage using Selenium");

            driver = new RemoteWebDriver(new Uri("https://" + username + ":" + accesskey + gridURL), capabilities, TimeSpan.FromSeconds(600));

            System.Threading.Thread.Sleep(2000);
        }

        [Test]
        public async Task LT_Broken_Images_Test()
        {
            int broken_images = 0;
            String test_url = "https://the-internet.herokuapp.com/broken_images";
            driver.Url = test_url;
            using var client = new HttpClient();
            var image_list = driver.FindElements(By.TagName("img"));

            /* Loop through all the images */
            foreach (var img in image_list)
            {
                try
                {
                    /* Get the URI */
                    HttpResponseMessage response = await client.GetAsync(img.GetAttribute("src"));
                    /* Reference - https://docs.microsoft.com/en-us/dotnet/api/system.net.httpwebresponse.statuscode?view=netcore-3.1 */
                    if (response.StatusCode == HttpStatusCode.OK)
                    {
                        System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is OK, status is "
                                + response.StatusCode);
                    }
                    else
                    {
                        System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is Broken, status is "
                                + response.StatusCode);
                        broken_images++;
                    }
                }
                catch (Exception ex)
                {
                    if ((ex is ArgumentNullException) ||
                       (ex is NotSupportedException))
                    {
                        System.Console.WriteLine("Exception occured\n");
                    }
                }
            }
            /* Perform wait to check the output */
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("\nThe page " + test_url + " has " + broken_images + " broken images");
        }

        [TearDown]
        public void Cleanup()
        {
            if (driver != null)
                driver.Quit();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have used the NUnit framework for demonstration. You can check out our earlier blog on &lt;a href="https://www.lambdatest.com/blog/nunit-testing-tutorial-for-selenium-csharp/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;NUnit Test automation with Selenium C#&lt;/a&gt; to get started with the NUnit framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Include HttpClient namespace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient"&gt;HttpClient&lt;/a&gt; class provides the base class used for sending HTTP requests and receiving the corresponding response from the resource identified by URI.&lt;/p&gt;

&lt;p&gt;It is recommended to use HttpClient instead of HttpWebRequest (of the System.Net.HttpWebRequest namespace) for detecting broken images using Selenium WebDriver.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System.Net.Http;
using System.Threading.Tasks;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Create a method that returns an async task&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The GetAsync method is used for sending a GET request to the specified URI as an asynchronous operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public async Task LT_Broken_Images_Test()
{
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Create an instance of HttpClient&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An instance of the HttpClient is created. The methods offered by HttpClient class will be further used for fetching the details of images present on the page under test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using var client = new HttpClient();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Read the images present on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The details of the images present on the page are fetched by locating the WebElements with TagName ‘img’ property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var image_list = driver.FindElements(By.TagName("img"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The findElements method returns a list that is iterated to check the broken images on the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Iterate through the image list to check for broken images&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The GetAsync method in HttpClient class sends an async GETrequest to the corresponding URI. The value of the anchor’s ‘src’ attribute collected using the GetAttribute method is passed in the GetAsync method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foreach (var img in image_list)
{
  try
  {
    /* Get the URI */
    HttpResponseMessage response=await client.GetAsync(img.GetAttribute("src"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6. Read the HttpStatus Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On completion of the Async operation in Step(5), &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage?view=netcore-3.1"&gt;HttpResponseMessage&lt;/a&gt; is returned. The response includes the data and status code. Response code HttpStatusCode.OK (i.e., 200) indicates that the image was located on the server, and it was read successfully. We keep a counter of the number of broken images on the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (response.StatusCode == HttpStatusCode.OK)
{
    System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is OK, status is "+ response.StatusCode);
}
else
{
    System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is Broken, status is "+ response.StatusCode);
    broken_images++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The exceptions NotSupportedException and ArgumentNullException are handled as part of exception handling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;catch (Exception ex)
{
    if ((ex is ArgumentNullException) ||  (ex is NotSupportedException))
    {
            System.Console.WriteLine("Exception occured\n");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the execution snapshot, which indicates that two broken images were present on the page under test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BiD0Jhyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BiD0Jhyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1.png" alt="Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ndmhnCYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/two-broken-images-1024x202.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ndmhnCYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/two-broken-images-1024x202.png" alt="two broken images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-php"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium PHP?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FileName – composer.json&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
   "require":{
      "php":"&amp;gt;=7.1",
      "phpunit/phpunit":"^9",
      "phpunit/phpunit-selenium": "*",
      "php-webdriver/webdriver":"*"
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;FileName – tests\BrokenImageTest.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
require 'vendor/autoload.php';

use PHPUnit\Framework\TestCase;
use Facebook\WebDriver\Remote\DesiredCapabilities;
use Facebook\WebDriver\Remote\RemoteWebDriver;
use Facebook\WebDriver\WebDriverBy;

$GLOBALS['LT_USERNAME'] = "user-name";
# accessKey:  AccessKey can be generated from automation dashboard or profile section
$GLOBALS['LT_APPKEY'] = "access-key";

class BrokenImageTest extends TestCase
{

  protected $webDriver;

  public function build_browser_capabilities(){
    /* $capabilities = DesiredCapabilities::chrome(); */
    $capabilities = array(
      "build" =&amp;gt; "[PHP] Finding broken images on a webpage using Selenium",
      "name" =&amp;gt; "[PHP] Finding broken images on a webpage using Selenium",
      "platform" =&amp;gt; "macOS High Sierra",
      "browserName" =&amp;gt; "MicrosoftEdge",
      "version" =&amp;gt; "latest"
    );
    return $capabilities;
  }

  public function setUp(): void
  {
    $capabilities = $this-&amp;gt;build_browser_capabilities();
    /* Download the Selenium Server 3.141.59 from 
    https://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar
    */
    $url = "https://". $GLOBALS['LT_USERNAME'] .":" . $GLOBALS['LT_APPKEY'] ."@hub.lambdatest.com/wd/hub";
    $this-&amp;gt;webDriver = RemoteWebDriver::create($url, $capabilities);
  }

  public function tearDown(): void
  {
    $this-&amp;gt;webDriver-&amp;gt;quit();
  }

  /*
  * @test
  */ 
  public function test_searchbrokenimages()
  {
    $test_url = "https://the-internet.herokuapp.com/broken_images";
    # For site with absolute path
    # $test_url = "https://www.lambdatest.com/blog";
    # End - For site with absolute path
    $base_url = "https://the-internet.herokuapp.com/";

    $driver = $this-&amp;gt;webDriver;
    $driver-&amp;gt;get($test_url);
    $this-&amp;gt;assertEquals("The Internet", $driver-&amp;gt;getTitle());
    # For site with absolute path
    # $this-&amp;gt;assertEquals("LambdaTest | A Cross Browser Testing Blog", $driver-&amp;gt;getTitle());
    # End - For site with absolute path
    $driver-&amp;gt;manage()-&amp;gt;window()-&amp;gt;maximize();

    $iBrokenImageCount = 0;

    /* file_get_contents is used to get the page's HTML source */
    $html = file_get_contents($test_url);

    /* Instantiate the DOMDocument class */
    $htmlDom = new DOMDocument;

    /* The HTML of the page is parsed using DOMDocument::loadHTML */
    @$htmlDom-&amp;gt;loadHTML($html);

    /* Extract the links from the page */
    $image_list = $htmlDom-&amp;gt;getElementsByTagName('img');

    /* The DOMNodeList object is traversed to check for its validity */
    foreach($image_list as $img)
    {
        $img_path = $img-&amp;gt;getAttribute('src');
        # Convert relative path to absolute path
        $search_path = "/" . $img_path;
        $abs_path = relative2absolute($search_path, $base_url);
        # When absolute path is used for fetching the images
        # For site with absolute path
        # $abs_path = $img_path;
        # For site with absolute path

        $response = @get_headers($abs_path);
        if (preg_match("|200|", $response[0]))
        {
          print($abs_path . " is not broken\n");
        }
        else
        {
          print($abs_path . " is broken\n");
          $iBrokenImageCount = $iBrokenImageCount + 1;
        }
    }
    print("\nThe page " . $test_url . " has " . $iBrokenImageCount . " broken images");
  }
}
?&amp;gt;

&amp;lt;?php
    function relative2absolute($rel_path, $base_path)
    {
        /* return if already absolute URL */
        if (parse_url($rel_path, PHP_URL_SCHEME) != '') return $rel_path;

        /* queries and anchors */
        if ($rel_path[0]=='#' || $rel_path[0]=='?') return $base_path.$rel_path;

        /* parse base URL and convert to local variables:
            $scheme, $host, $path */
        extract(parse_url($base_path));

        /* remove non-directory element from path */
        $new_path = preg_replace('#/[^/]*$#', '', $base_path);

        /* destroy path if relative url points to root */
        if ($rel_path[0] == '/') $new_path = '';

        /* dirty absolute URL */
        $abs_path = "$host$new_path/$rel_path";

        /* replace '//' or '/./' or '/foo/../' with '/' */
        $repl = array('#(/\.?/)#', '#/(?!\.\.)[^/]+/\.\./#');
        for($counter=1; $counter&amp;gt;0; $abs_path=preg_replace($repl, '/', $abs_path, -1, $counter)) {}

        /* absolute URL is ready! */
        return $scheme.'://'.$abs_path;
    }
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To find broken images with Selenium PHP, we would be using the PHPUnit framework with Selenium. Refer to our &lt;a href="https://www.lambdatest.com/blog/selenium-php-tutorial/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;detailed Selenium PHP tutorial&lt;/a&gt; for a quick recap on Selenium with PHPUnit.&lt;/p&gt;

&lt;p&gt;Run the command composer require on the terminal for installing the packages mentioned in composer.json.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ysPvULvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ysPvULvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image13.png" alt="command composer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the overall walkthrough of the source code:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Read the page source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTML source of the page under test (i.e. &lt;a href="https://the-internet.herokuapp.com/"&gt;https://the-internet.herokuapp.com/&lt;/a&gt;) is read using the file_get_contents function in PHP. HTML source is read in a local String variable $html.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$html = file_get_contents($test_url);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Instantiate the DOMDocument class&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The entire HTML document is represented in the DOMDocument class. It also serves as the root of the source tree.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$htmlDom = new DOMDocument;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Parse HTML source of the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;DOMDocument::loadHTML() function in PHP parses the HTML source available in the String variable $html. The function returns a DOMDocument object when executed successfully.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@$htmlDom-&amp;gt;loadHTML($html);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Extract the Images using ‘img’ tag&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Entries in the &amp;lt;img&amp;gt; HTML tag are read using the getElementsByTagName method of the DOMDocument class. As we are looking for broken images, search is based on the &amp;lt;img&amp;gt; tag from the parsed HTML source.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$image_list = $htmlDom-&amp;gt;getElementsByTagName('img');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5. Read the entries enclosed in ‘src’ attribute&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The values of the ‘src’ attribute are read from the &amp;lt;img&amp;gt; entries extracted in Step(4).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$img_path = $img-&amp;gt;getAttribute('src');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example – The ‘src’ attribute in &amp;lt;img src=”img/avatar-blank.jpg”&amp;gt; is “img/avatar-blank.jpg”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Convert the relative path to absolute path&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This step is only applicable if the ‘src’ attribute in the &amp;lt;img&amp;gt; tag returns a relative path from the root of the document.&lt;/p&gt;

&lt;p&gt;In the case of &lt;a href="http://the-internet.herokuapp.com/broken_images"&gt;http://the-internet.herokuapp.com/broken_images&lt;/a&gt;, the images are read using the relative path.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--37ruSm2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Convert-the-relative-path-1024x547.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--37ruSm2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Convert-the-relative-path-1024x547.png" alt="Convert the relative path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take the LambdaTest blog case, the images in the blogs are read using the absolute path of the images on the server. Shown below is an example of how the absolute path of the image is used in the ‘src’ attribute of the &amp;lt;img&amp;gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DHZA7eqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1024x516.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DHZA7eqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1024x516.png" alt="LambdaTest blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We created a new function relative2absolute() that takes the following arguments – relative path obtained from the &amp;lt;src&amp;gt; attribute and root document of the URL under test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
function relative2absolute($rel_path, $base_path)
{
        /* return if already absolute URL */
        if (parse_url($rel_path, PHP_URL_SCHEME) != '') return $rel_path;

        /* queries and anchors */
        if ($rel_path[0]=='#' || $rel_path[0]=='?') return $base_path.$rel_path;

        /* parse base URL and convert to local variables:
            $scheme, $host, $path */
        extract(parse_url($base_path));

      .............................................
        .............................................
        .............................................

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Relative Path (Sample)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For &lt;a href="http://the-internet.herokuapp.com/broken_images"&gt;http://the-internet.herokuapp.com/broken_images&lt;/a&gt;, the relative path would equate to /$img_path. If the $img_path is img/avatar-blank.jpg; the final relative path used by the relative2absolute function would be /img/avatar-blank.jpg The base URL is set to &lt;a href="https://the-internet.herokuapp.com/"&gt;https://the-internet.herokuapp.com/&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$test_url = "https://the-internet.herokuapp.com/broken_images";

..........................................................
..........................................................
..........................................................


# Convert relative path to absolute path
$search_path = "/" . $img_path;
$abs_path = relative2absolute($search_path, $base_url);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Absolute path (Sample)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If an absolute path is used in the &amp;lt;src&amp;gt; attribute, the absolute path and the relative path would be the same. In such a scenario, Step (6) becomes optional.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$test_url = "https://www.lambdatest.com/blog";

..........................................................
..........................................................
..........................................................
$img_path = $img-&amp;gt;getAttribute('src');
$abs_path = $img_path;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We came up with the relative2absolute function with support from the StackOverflow Community ☺.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Convert the relative path to absolute path&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The get_headers() function is used to fetch all the headers sent by the server in response to the HTTP request. For a broken image, the HTTP status code is 404, whereas the status code is 200 if the image is present on the server.&lt;/p&gt;

&lt;p&gt;The preg_match() function in PHP does a case-insensitive search for “200” (HTTP Status Code if the request is completed successfully) in the response code. The local variable iBrokenImageCount is incremented when a broken image is present on the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$response = @get_headers($abs_path);
if (preg_match("|200|", $response[0]))
{
    print($abs_path . " is not broken\n");
}
else
{
    print($abs_path . " is broken\n");
    $iBrokenImageCount = $iBrokenImageCount + 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To run the test that is using the PHPUnit framework, run the following command from the root folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vendor\bin\phpunit  --debug test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the test is run against &lt;a href="https://the-internet.herokuapp.com/broken_images"&gt;https://the-internet.herokuapp.com/broken_images&lt;/a&gt;, it shows that the page has two broken images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V-GnovuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/selenium.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-GnovuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/selenium.png" alt="test broken image using selenium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We executed the same test against the &lt;a href="https://www.lambdatest.com/blog/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;LambdaTest blog&lt;/a&gt; after doing the minimal changes in the code under the ‘For a site with absolute path’ comment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ANVIzAFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ANVIzAFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1.png" alt="LambdaTest blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTP-0i21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTP-0i21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-2.png" alt="LambdaTest blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The site uses the absolute path in &amp;lt;src&amp;gt; attribute of img tag. As seen below, there are zero broken images on the LambdaTest blog.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f17z7ABW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1-1024x721.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f17z7ABW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1-1024x721.png" alt="absolute path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-all-folks"&gt;
  &lt;/a&gt;
  That’s all folks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--90etocuQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image20.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--90etocuQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image20.gif" alt="Fixed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like broken links on web pages, broken images could also hinder the overall user experience. It also creates a negative impact on the search rankings, thereby hampering your SEO efforts. Instead of relying on third-party tools where you are putting the privacy &amp;amp; data at stake, you should find broken images using Selenium WebDriver. In this Selenium tutorial, we had a look at how to find broken images using Selenium WebDriver with Java, Python, C#, and PHP languages.&lt;/p&gt;

&lt;p&gt;What strategy do you follow for finding broken images on webpage(s)? Do leave your thoughts in the comments section…&lt;/p&gt;

&lt;p&gt;Happy Testing ☺&lt;/p&gt;

</description>
      <category>selenium</category>
      <category>seleniumwebdriver</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Solution: Flatten Nested List Iterator</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 13 Apr 2021 09:33:39 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-flatten-nested-list-iterator-483i</link>
      <guid>https://dev.to/seanpgallivan/solution-flatten-nested-list-iterator-483i</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/flatten-nested-list-iterator/discuss/1156268"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-341-medium-flatten-nested-list-iterator"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/flatten-nested-list-iterator/"&gt;Leetcode Problem #341 (&lt;em&gt;Medium&lt;/em&gt;): Flatten Nested List Iterator&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given a nested list of integers &lt;code&gt;nestedList&lt;/code&gt;. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.&lt;/p&gt;

&lt;p&gt;Implement the &lt;code&gt;NestedIterator&lt;/code&gt; class:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;code&gt;NestedIterator(List&amp;lt;NestedInteger&amp;gt; nestedList)&lt;/code&gt; Initializes the iterator with the nested list &lt;code&gt;nestedList&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt; &lt;code&gt;int next()&lt;/code&gt; Returns the next integer in the nested list.&lt;/li&gt;
&lt;li&gt; &lt;code&gt;boolean hasNext()&lt;/code&gt; Returns &lt;code&gt;true&lt;/code&gt; if there are still some integers in the nested list and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nestedList = [[1,1],2,[1,1]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,1,2,1,1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nestedList = [1,[4,[6]]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,4,6]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nestedList.length &amp;lt;= 500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The values of the integers in the nested list is in the range &lt;code&gt;[-10^6, 10^6]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This problem is fairly straightforward, as long as we pay attention to the behavior of the &lt;strong&gt;NestedInteger&lt;/strong&gt; class.&lt;/p&gt;

&lt;p&gt;It is easiest to apply our flattening method (&lt;strong&gt;flatten()&lt;/strong&gt;) during the class construction process, so that we only ever store the flattened list (&lt;strong&gt;data&lt;/strong&gt;) in our class instance. Since there can be multiple layers of nesting, we should make &lt;strong&gt;flatten&lt;/strong&gt; a &lt;strong&gt;recursive&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;flatten&lt;/strong&gt;, we should iterate through the given &lt;strong&gt;list&lt;/strong&gt; and if the current element (&lt;strong&gt;el&lt;/strong&gt;) is an integer we should push its contained value onto &lt;strong&gt;data&lt;/strong&gt;, otherwise we should recursively call &lt;strong&gt;flatten&lt;/strong&gt; on the nested list contained in &lt;strong&gt;el&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once our &lt;strong&gt;data&lt;/strong&gt; is successfully flattened, &lt;strong&gt;next()&lt;/strong&gt; should be as easy as removing and returning the lead element of &lt;strong&gt;data&lt;/strong&gt;. When &lt;strong&gt;data&lt;/strong&gt; is reduced to a length of &lt;strong&gt;0&lt;/strong&gt;, then &lt;strong&gt;hasNext()&lt;/strong&gt; can &lt;strong&gt;return false&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;There are only minor differences between the code for all four languages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NestedIterator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NestedIterator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isInteger&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NestedIterator&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;Iterator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;NestedIterator&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NestedInteger&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isInteger&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInteger&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getList&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="nf"&gt;next&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;poll&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;hasNext&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NestedIterator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;NestedIterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInteger&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;front&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>cpp</category>
    </item>
    <item>
      <title>Top 25 Android Games under 25 mb (Part 1)</title>
      <author>Konchada Sai Ansul</author>
      <pubDate>Tue, 13 Apr 2021 09:10:41 +0000</pubDate>
      <link>https://dev.to/saiansulsblog/top-25-android-games-under-25-mb-part-1-4d0m</link>
      <guid>https://dev.to/saiansulsblog/top-25-android-games-under-25-mb-part-1-4d0m</guid>
      <description>&lt;p&gt;Hey Guys,&lt;br&gt;
Welcome back to a new post of &lt;strong&gt;SAI ANSUL'S BLOG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog after a long research I have got for you best games🎮 under 25mb which won't affect your phone's storage.&lt;/p&gt;

&lt;p&gt;These games are self-tested and selected under various criteria mentioned below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Under 25mb &lt;/li&gt;
&lt;li&gt; Genre: Adventure, Classic &amp;amp; Educational &lt;/li&gt;
&lt;li&gt;Top Rated on Playstore⭐&lt;/li&gt;
&lt;li&gt; Friendly for all users&lt;/li&gt;
&lt;li&gt; Free for all
I have also shared the link of each game. Click on the title and directly download it from Google Play store.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's start,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-mekorama"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://play.google.com/store/apps/details?id=com.martinmagni.mekorama"&gt; Mekorama&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pYMBZ4pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253353658/EU8QZade-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYMBZ4pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253353658/EU8QZade-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.4⭐, developed by &lt;strong&gt;Martin Magni&lt;/strong&gt;. This game is a puzzle game with  around 50 levels with charming robots, collective play cards, this is a mind relaxing game. Do give it a try!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-no-humanity-the-hardest-game"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://play.google.com/store/apps/details?id=com.sweatychair.lastofhumanity"&gt;No Humanity - The Hardest Game&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7u_jiAM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253603485/9u6jvAx0Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7u_jiAM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253603485/9u6jvAx0Y.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.3⭐, developed by &lt;strong&gt;Sweaty Chair Studio&lt;/strong&gt;. This game is very fun and challenging, the best thing is it does not have ads! The best things loved by the users is its charming style. The game has&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mild frustration,&lt;/li&gt;
&lt;li&gt;Unfair gameplay,&lt;/li&gt;
&lt;li&gt;Ugly doodle&lt;/li&gt;
&lt;li&gt;space themed apocalypse&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-bottle-flip-3d"&gt;
  &lt;/a&gt;
  3.  &lt;a href="https://play.google.com/store/apps/details?id=pampam.ibf2"&gt;Bottle Flip 3d&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lD9AYive--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618254066877/wv6dWzyFF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lD9AYive--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618254066877/wv6dWzyFF.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4⭐, developed by &lt;strong&gt;tastypill&lt;/strong&gt;. If you have noticed recently this game was in trending, every corner of world was playing this game, so &lt;strong&gt;tastypill&lt;/strong&gt; has brought us this game in a digital way. This is a arcade game in which you have to flip the plastic bottle on other objects in the house like chair, table, television, shelves and more with different room levels. You need to tap on the screen on the correct time so that the bottle flips and bottle reaches on the other objects and at end you go a new level. This  game requires agility and coordination and its great fun to play it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-paper-wings"&gt;
  &lt;/a&gt;
  4.  &lt;a href="https://play.google.com/store/apps/details?id=com.filgames.soar"&gt;Paper Wings &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4ObhI-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255534541/W8DtIyK2K.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4ObhI-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255534541/W8DtIyK2K.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.4⭐, developed by &lt;strong&gt;FillGames&lt;/strong&gt;.  This game is fast paced arcade game about catching falling balls mid-air to keep your bird alive. As you gain points, you grow in levels  in the game. In each stage there is a new difficult task. in this game  you need to guide your origami bird in the air, collect all the coins, avoid the hazards, unlock other species and complete the bird family! It also has online multiplayer features in it now. So now you can play this amazing game with your 4 friends at a time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-ultimate-soccerfootball"&gt;
  &lt;/a&gt;
  5.  &lt;a href="https://play.google.com/store/apps/details?id=com.cg.football"&gt;Ultimate Soccer-Football&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB210bkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255764241/KGDs4LXSt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB210bkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255764241/KGDs4LXSt.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with rating of 4⭐, developed by &lt;strong&gt;Mouse Games&lt;/strong&gt;. This is addictive, its is realastic and the overall playing experience is superb .Build the best squad  and lead them all the way to win the league champion or World Cup of FIFA!, it is the definitive mobile football simulation, featuring simple controls, smooth animations and insane actions. Pass and dribble around opponents, take aim, shoot and Goal! You can also control every aspect of your team through the management system: trade in the transfer market, train your players to improve their ability and put them on the path to a successful win.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-pewpew"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://play.google.com/store/apps/details?id=com.jyaif.pewpew"&gt; PewPew&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YddgqLiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301118090/h7BV2foiq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YddgqLiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301118090/h7BV2foiq.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.2⭐, developed by &lt;strong&gt;Jean-François Geyelin&lt;/strong&gt;. This is a best multidirectional shooting game. It has many modes like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pandemonium:
Some enemies explode when they die, and the other spin maniacally everywhere. Hide from the explosions or deftly go through them&lt;/li&gt;
&lt;li&gt;Dodge this:
As you collect boxes, there are more and more enemies moving around. Naturally, you have to dodge them all.&lt;/li&gt;
&lt;li&gt;Assault:
You fight against waves of enemies. Spoiler: at the end, they win and you die.&lt;/li&gt;
&lt;li&gt;Chromatic Conflict (NSF color blinds):
Enemies of different color appear. You can only destroy the ones that are the same color as your ship
This game also does not have any ads, you can also play it online.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-archery-master"&gt;
  &lt;/a&gt;
  7.  &lt;a href="https://play.google.com/store/apps/details?id=com.junerking.archery"&gt;Archery Master&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IM11wx4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301559591/XFYcmIGC-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IM11wx4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301559591/XFYcmIGC-.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with rating of 4.2⭐, developed by &lt;strong&gt;Terrain-Droid&lt;/strong&gt;. This game delivers ultra realistic archery experience that features cool 3D graphics, amazing animations and simple playing controls. Shoot arrows at targets generally set at various distance to earn coins for new bows, arrows and upgrades. Get ready for the intense challenges from Olympic Archery champions.  This game also has 4 maps, that are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pine Forest&lt;/li&gt;
&lt;li&gt;Archery Field&lt;/li&gt;
&lt;li&gt;Deadly Desert&lt;/li&gt;
&lt;li&gt;Rain Forest
This game has more than 100 levels in normal mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-galactic-rush-3d"&gt;
  &lt;/a&gt;
  8.  &lt;a href="https://play.google.com/store/apps/detailsid=com.offroadarcade.zigzagalien3d"&gt;Galactic Rush 3D&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tiNQ9vC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302097129/b8vG-kjHe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tiNQ9vC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302097129/b8vG-kjHe.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.2⭐, developed by &lt;strong&gt;Offroadstudios&lt;/strong&gt;. This game comes under the category of action. In this there is a 3d galaxy world with Aliens on mars, you need to make them survive. You just tap on the button to switch the direction, avoid falling off the edges and collect stars to unlock characters &amp;amp; power-ups. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-the-last-vikings"&gt;
  &lt;/a&gt;
  9.  &lt;a href="https://play.google.com/store/apps/details?id=com.springloaded.thelastvikings"&gt;The Last Vikings&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ohm24XKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302636748/pUvPZ-oHU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ohm24XKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302636748/pUvPZ-oHU.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.4⭐, developed by &lt;strong&gt;Springloaded Ltd.&lt;/strong&gt;. This game is simple but innovative and addictive. This game has battle mythical and legendary dragons, hydras and more.&lt;br&gt;
You need to collect and upgrade more than 50 unique and varied heroes, build different Viking boats to conquer as many villages as you can and discover and try different combinations of powerful weapons. This game has good graphics and mechanics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-game-dev-story-lite"&gt;
  &lt;/a&gt;
  10.   &lt;a href="https://play.google.com/store/apps/details?id=net.kairosoft.android.gamedev3enL"&gt;Game Dev Story Lite&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tn4T15LO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618303146331/OZMUHsCju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tn4T15LO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618303146331/OZMUHsCju.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 3.9⭐, developed by *&lt;em&gt;Kairosoft Co.,Ltd *&lt;/em&gt;. In this game you have to manage your own game company. Your company's staff members can have a variety of game-related professions, from programmer to sound engineer. This game reminds you of the retro styling built games. This is a amazing game give it a try. &lt;/p&gt;

&lt;p&gt;This was it for today guys. Do comment which game you liked the most.&lt;/p&gt;

&lt;p&gt;Stay tuned for some more interesting blogs coming up soon. &lt;/p&gt;

&lt;p&gt;And part 2 of this blog is also coming soon!&lt;/p&gt;

&lt;p&gt;If you like my content and want to support my efforts please like👍🏻, share📲 &amp;amp; subscribe to the newsletter to be get notified whenever I post a new blog.&lt;/p&gt;

</description>
      <category>android</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 4 Hospital Management Systems in JavaScript to Consider</title>
      <author>Pavel Lazarev</author>
      <pubDate>Tue, 13 Apr 2021 09:09:34 +0000</pubDate>
      <link>https://dev.to/plazarev/top-4-hospital-management-systems-in-javascript-to-consider-45ee</link>
      <guid>https://dev.to/plazarev/top-4-hospital-management-systems-in-javascript-to-consider-45ee</guid>
      <description>&lt;p&gt;In this article, we talk about hospital management system apps and templates. This kind of software is designed for automating clinical workflow and providing effective patient care. It allows handling health-related data, including clinical, laboratory, insurance, and financial records.&lt;/p&gt;

&lt;p&gt;We’ve gathered 4 examples of hospital management systems written in JavaScript. Nevertheless, we’d love to see more solutions you may share in the comments below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dhtmlx-demo-app-for-hospital-management"&gt;
  &lt;/a&gt;
  DHTMLX demo app for hospital management
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3QBNyy0y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77r3cds7fv0i3zcvyuv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QBNyy0y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77r3cds7fv0i3zcvyuv8.png" alt="javascript-hospital-manageent-system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DHTMLX provides a user-friendly &lt;a href="https://dhtmlx.com/docs/products/demoApps/dhtmlxHospital/#patients"&gt;hospital management demo app&lt;/a&gt; based on several highly customizable JavaScript widgets from the Suite UI library. It can be integrated into an existing project to ensure effective coordination between medical staff.&lt;/p&gt;

&lt;p&gt;The template provides 2 modules that users can switch between with a tab bar. The first module allows working with patient information to provide quality medical care. All the essential data is displayed in a nested list by which hospital personnel can manage bed allocation, monitor patient vitals, and edit patient records.&lt;/p&gt;

&lt;p&gt;In order to add a patient record, hospital staff can fill a patient registration form. It combines multiple controls, such as input fields, radio buttons, combo boxes, and date pickers, that are arranged in 5 groups:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;personal information&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;communication details&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;emergency contact&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;insurance information&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;patient allocation.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, users can create an extensive patient record as well as assign an attending physician, room, and bed for stay. Having added numerous patients, hospital personnel can easily find a required record using a filter bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9P0CdoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w447qnnpoimxq7fxd9uv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9P0CdoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w447qnnpoimxq7fxd9uv.png" alt="medical-hierarchy-diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second module contains a medical hierarchy chart built with the DHTMLX &lt;a href="https://dhtmlx.com/docs/products/dhtmlxDiagram/"&gt;JavaScript diagram library&lt;/a&gt;. Each shape displays a hospital staff photo, name, position, and contact information. Users may expand or collapse the org chart branches and search for a specialist via the filter bar.&lt;/p&gt;

&lt;p&gt;Being developed with the Suite &lt;a href="https://dhtmlx.com/docs/products/dhtmlxSuite/"&gt;JavaScrip UI widgets library&lt;/a&gt;, this demo app supports wide configuration and customization options. You can improve its functionality by setting drag-n-drop, inline editing, multiselection of items, exporting to Excel, and dynamiс loading, as well as attaching any other DHTMLX components or custom HTML content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hospital-management-system-with-reactjs"&gt;
  &lt;/a&gt;
  Hospital management system with ReactJS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yqz5x0Fc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enhcga73r4bxiks41bb2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yqz5x0Fc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enhcga73r4bxiks41bb2.png" alt="reactjs-hospital-management-system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://www.codegrape.com/item/hospital-management-system-react-js-and-firebase/43571"&gt;HMS app&lt;/a&gt; is written with React JS and Firebase. It includes 10 key modules that an admin can navigate via a sidebar. The main dashboard page allows monitoring the number of hospital personnel and patients admitted during the current year. Besides, it includes several cards displaying the number of records collected by each hospital system section.&lt;/p&gt;

&lt;p&gt;The other 7 modules are responsible for patients and hospital staff (doctors, nurses, pharmacists, lab workers, receptionists, and accountants) management. The admin can add records by manually filling the form, entering personal information, contact details, and uploading a photo. Each record can be updated and deleted.&lt;/p&gt;

&lt;p&gt;The hospital management module allows allocating patients to available beds and assigning a caretaker. It also provides information about medicine prescriptions, blood supplies, scheduled surgeries and their status, birth, and death reports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LgRHzjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5y7ec70g9hmjrdelkk1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LgRHzjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5y7ec70g9hmjrdelkk1.png" alt="react-js-hospital-management-system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last module focuses on payments management. On the payroll page, the admin may add, update, and delete payment details, as well as generate a payment receipt to a hospital employee.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#medicapp-hospital-admin-template"&gt;
  &lt;/a&gt;
  MedicApp hospital admin template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-4HUIdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmi3chv1dci7v741blqu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-4HUIdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmi3chv1dci7v741blqu.png" alt="medicapp-hospital-admin-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://preview.themeforest.net/item/medicapp-medical-html5bootstrap-admin-template/full_screen_preview/25040486"&gt;MedicApp&lt;/a&gt; is a JavaScript/HTML5 template based on Bootstrap 4 grid. It includes 6 modules to manage hospital workflow, collect patient information, and handle invoices.&lt;/p&gt;

&lt;p&gt;The hospital dashboard module is built with interactive charts and a list of recent doctor appointments, thus allowing users to quickly access all necessary information within a single look. Five other modules are accountable for appointment, patient, doctor, department, and payment management. Users can add new records, specify personal and contact info, attach social network accounts, and upload profile photos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cwbw5ZOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzafj6l4an6nu0wmn4n2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cwbw5ZOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzafj6l4an6nu0wmn4n2.png" alt="medicapp-profile-page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With MedicApp, admins can create patient and hospital staff profiles. In addition to name and contact data, such pages contain an events timeline displaying staff day-to-day activities and a chart with a number of medical visits.&lt;/p&gt;

&lt;p&gt;MedicApp allows receiving notifications, use searching and profile settings. The template provides vertical and horizontal layouts. Besides, users can change the color of a sidebar and toolbar by switching between light and dark modes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#proclinic-hospital-admin-template"&gt;
  &lt;/a&gt;
  ProClinic hospital admin template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgAP5c05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aekgnayrj25tq3yqwmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgAP5c05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aekgnayrj25tq3yqwmz.png" alt="proclinic-hospital-admin-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://preview.themeforest.net/item/proclinic-bootstrap4-hospital-admin-template/full_screen_preview/22856974"&gt;ProClinic hospital management solution&lt;/a&gt; is built with JavaScript, HTML5, and Bootstrap 4 framework. The template covers patient, doctor, appointment management and room allocation. Moreover, it allows working with payments.&lt;/p&gt;

&lt;p&gt;The admin dashboard allows hospital staff to track doctor appointments, their status, and the number of patients per year with the help of charts. Users can also check doctors’ availability by searching their name and specialty in the corresponding table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42r2EUa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mneg8th6o17c10ud9h7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42r2EUa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mneg8th6o17c10ud9h7.png" alt="proclinic-patient-list"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The other 5 modules display hospital data in grid tables. Users can add new records, edit or delete existing data and export it to CSV, PDF, and Excel. Each column allows sorting records in alphabetical order or according to their status.&lt;/p&gt;

&lt;p&gt;ProClinic includes horizontal and vertical views, the latter of which provides RTL support. Users can receive notifications, use search, change account settings, and choose between 5 color themes to tailor their experience.&lt;/p&gt;

&lt;p&gt;Have you anything to add? Let’s discuss other JS-based hospital management systems below!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>management</category>
    </item>
    <item>
      <title>Knowing when your writing sucks </title>
      <author>Grant Hair</author>
      <pubDate>Tue, 13 Apr 2021 09:03:11 +0000</pubDate>
      <link>https://dev.to/granthair5/knowing-when-your-writing-sucks-d3p</link>
      <guid>https://dev.to/granthair5/knowing-when-your-writing-sucks-d3p</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3WezYhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ham3cu591grji20uxw04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3WezYhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ham3cu591grji20uxw04.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I recently started a series I called the Bullet Point Series. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/granthair5/bullet-point-series-intro-2hpo"&gt;https://dev.to/granthair5/bullet-point-series-intro-2hpo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This series was awful. &lt;/p&gt;

&lt;p&gt;The topics of conversation were too vague. &lt;/p&gt;

&lt;p&gt;The bullet point lists were far too long. &lt;/p&gt;

&lt;p&gt;Part 1 came before the intro. &lt;/p&gt;

&lt;p&gt;The whole thing was a mess. &lt;/p&gt;

&lt;p&gt;But I thought I was being really clever. Oh yeah short sharp blog posts is what people want that will really take off I thought. &lt;/p&gt;

&lt;p&gt;I could not have been more wrong. My implementation sucked. My writing style was lazy. It felt robotic and un-personal. That makes it very difficult for people to relate. &lt;/p&gt;

&lt;p&gt;I gave this series a few weeks, no one read it and it fell into the abyss so at that point I had 2 options: &lt;/p&gt;

&lt;p&gt;1: Continue writing in the hope that maybe I'll get lucky and this idea will really take off. &lt;/p&gt;

&lt;p&gt;2: Call it quits and know when to back out and try something new. &lt;/p&gt;

&lt;p&gt;I chose option 2 due to my programming background. Sometimes instead of following Alice down the rabbit hole the best option is to say "Nah forget that" and walk away to the pub. I usually choose this approach when tackling "impossible" bugs in a technique I like to call "next day programming" &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T8VwQLy9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/785/1%2A7LzhJXDIubcYIOzWKBRaMA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T8VwQLy9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/785/1%2A7LzhJXDIubcYIOzWKBRaMA.jpeg" alt="https://miro.medium.com/max/785/1*7LzhJXDIubcYIOzWKBRaMA.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Usually, the next day that "impossible" bug doesn't seem all that impossible but if you continue to bash your head off the wall chances are you won't break down the wall you'll just end up with a headache. &lt;/p&gt;

&lt;p&gt;So, to the handful of people that read the bullet point series I thank you but I am more grateful to those of you who chose not to read it because I feel we learn more from the stuff that doesn't work or the mistakes we make than the glory we can easily become accustomed to. &lt;/p&gt;

&lt;p&gt;Stay tuned for more non bullet point series posts and I hope you all enjoy what is to come. &lt;/p&gt;

&lt;p&gt;Thanks, 👋&lt;/p&gt;

</description>
      <category>writing</category>
    </item>
    <item>
      <title>State Management Battle in React 2021: Hooks, Redux, and Recoil</title>
      <author>Mihaela</author>
      <pubDate>Tue, 13 Apr 2021 08:32:01 +0000</pubDate>
      <link>https://dev.to/workshub/state-management-battle-in-react-2021-hooks-redux-and-recoil-2am0</link>
      <guid>https://dev.to/workshub/state-management-battle-in-react-2021-hooks-redux-and-recoil-2am0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;p&gt;Over the years, the massive growth of React.JS has given birth to different state management libraries, amongst other things.&lt;br&gt;
The state management libraries available in React at our disposal at the time of this article are enormous. Therefore, knowing what state management library to choose for a particular project not to get carried away by the noise and news from the React community is a significant factor in facilitating the development of an application.&lt;br&gt;
Some developers tackle the challenge by using React Hooks; others combine them with application state management libraries like Redux or the newly release Recoil.&lt;/p&gt;

&lt;p&gt;In this article, we will discuss state management using Redux, Hooks, and Recoil in a typical React application and their best uses cases.&lt;br&gt;
 We will also try to answer questions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What metric to consider before choosing a state management library?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This tutorial will be beneficial to readers interested in developing React application that requires a state management library.&lt;br&gt;
This article isn’t an intro to state management in React. It requires a basic understanding of React, hooks, and a bit of Redux; hence, if you’re starting with React and state management in React, please go through these basics before beginning this tutorial 😎.&lt;/p&gt;

&lt;p&gt;##What’s State in a Nutshell?&lt;/p&gt;

&lt;p&gt;State management is simply a way to engender communication and sharing of data across components. It creates a concrete data structure to represent your app's State that you can read and write.&lt;br&gt;
Since React 16.8, every React component, whether functional or class, can have a state.&lt;br&gt;
In the simplest definition, State is a JavaScript object that represents the part of a component that can change based on a resultant action of a user. You could also say states are simply the memory of a component.&lt;br&gt;
When a user performs an action in a typical React app, changes occur in the component's state. While this isn't bad, it quickly becomes a problem if the app begins to scale; hence, such an app's complexity makes it extremely difficult to keep track of all dependencies.&lt;/p&gt;

&lt;p&gt;To answer the introduction question, suppose we are building an eCommerce application; in an app like this, just about every element can be a component – the shopping cart, the buttons, the view cart session, checkout, login bar, etc. In this app, just a single user action of adding to the cart can influence many other components by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;changing the State of the cart component itself,&lt;/li&gt;
&lt;li&gt;adding the cart to the user's cart history,&lt;/li&gt;
&lt;li&gt;checkout product items.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's to mention only a few from the other plenty stuff that we could add to the eCommerce app. If the engineers in charge do not consider scalability while developing the app, they might soon quickly run into many bugs and problems in the long run.&lt;br&gt;
Constantly debugging and revamping an app like this could eventually be a pain.&lt;/p&gt;

&lt;p&gt;The above scenarios show us the importance of the state in a typical React application.&lt;br&gt;
In managing the state in this application, we could use any library of our choice; they would still get the job done regardless. &lt;/p&gt;

&lt;p&gt;Usually, the state will have to be lifted to the closest parent component and the next until it gets to an ancestor common to both components that need the state, and then it is passed down. This process can be overwhelming and makes the state challenging to maintain. Often it might warrant you to pass data to components that do not even need it.&lt;/p&gt;

&lt;p&gt;State management gets messy as the app grows bigger. That is why you need a state management tool like Redux, Recoil, making it easier to maintain these states. &lt;br&gt;
In the following sections, we would practically look at all the state management libraries(Redux, Hooks, Recoil), their uniqueness, and what to consider before going for any of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#redux"&gt;
  &lt;/a&gt;
  Redux
&lt;/h2&gt;

&lt;p&gt;The first on our list is Redux; It has been around for a while, pretty much the first react-based state management library.&lt;br&gt;
The state management library Redux was created to address the problem in our eCommerce app. It provides a JavaScript object called the store, which, once set up, includes all states in your application and updates them when necessary. Here is a simplified visualization of how Redux works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AtAaKDgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_A4F5E8BF1842A18F95E53C37AE2DEB9C870C228C8E0ED5FEAAFE5522A96BF838_1616174128598_Redux%2BWorkflow.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AtAaKDgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_A4F5E8BF1842A18F95E53C37AE2DEB9C870C228C8E0ED5FEAAFE5522A96BF838_1616174128598_Redux%2BWorkflow.jpg" alt="Redux workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perhaps you're asking, why is Redux often used with React? The reason from my experiences is because, Redux handles state updates in response to user's actions, especially in UI; Asides from that, Redux can be used as standalone state management from any framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-redux"&gt;
  &lt;/a&gt;
  When to use Redux?
&lt;/h2&gt;

&lt;p&gt;Redux is one of the most popular React state management libraries as of the time of this article.&lt;br&gt;
In this section, we would look closely into when to use Redux in an application.&lt;/p&gt;

&lt;p&gt;Firstly, Redux allows you to manage your app's state in a single place and keep changes in your app more predictable and traceable. It makes occurring changes in your app easier to figure out. Unfortunately, all of these benefits come with specific constraints and tradeoffs.&lt;br&gt;
Frequently, developers feel using Redux adds up some boilerplate code, making little things seemingly overwhelming; however, that depends solely on the app's architectural decision.&lt;/p&gt;

&lt;p&gt;One of the easiest ways to know when you genuinely need to use Redux is when managing state locally begins to look messy. &lt;br&gt;
As the application grows, so does state sharing across components gets tedious.&lt;br&gt;
At that point, you'd now start looking for ways to make the process hassle-free.&lt;br&gt;
In the next section, we would look at why we should Redux with React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-redux"&gt;
  &lt;/a&gt;
  Why use Redux?
&lt;/h2&gt;

&lt;p&gt;Using Redux with React takes away the hassle of lifting upstate, making it easier for you to trace which action causes any change, hence simplifying the app and making it easier to maintain.&lt;br&gt;
Let's take a look at some tradeoffs that come with using Redux for state management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Community Support&lt;/strong&gt;&lt;br&gt;
As the official binding library for React and Redux, React-Redux encompasses a large community of users. that makes it easier to ask for help, learn about best practices, use libraries that build on React-Redux, and reuse your knowledge across different applications.&lt;br&gt;
It's the highest stared React state management library on Github. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enhances Performance&lt;/strong&gt;&lt;br&gt;
React Redux assures performance optimization so that only the connected component only re-renders when it needs to; hence keeping the app's state global wouldn't result in any problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redux makes the state predictable&lt;/strong&gt;&lt;br&gt;
In Redux, the state is always predictable. If the same state and action move to a reducer, it will obtain the same result because reducers are pure functions. The state is also immutable and is never changed. It makes it possible to implement arduous tasks like infinite undo and redo. It is also possible to implement time travel — that is, the ability to move back and forth among the previous states and view the results in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State persistence on Local Storage&lt;/strong&gt;&lt;br&gt;
Persisting some of the app’s state on local storage and restoring it after a refresh is possible. It makes storing things like cart data on local storage really awesome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server-side rendering&lt;/strong&gt;&lt;br&gt;
We can also use redux for server-side rendering. With it, you can handle the app's initial render by sending the state of an app to the server along with its response to the server request. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redux is maintainable&lt;/strong&gt;&lt;br&gt;
Redux is strict about how code should get designed, making it easier for someone abreast with Redux to understand any Redux application structure. It generally makes it easier to maintain. It also helps you segregate your business logic from your component tree. For large-scale apps, it's critical to keep your app more predictable and maintainable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debugging is made easy&lt;/strong&gt;&lt;br&gt;
Redux makes it easy to debug an application. By logging actions and state, it is easy to understand coding errors, network errors, and other forms of bugs that might come up during production.&lt;br&gt;
Besides logging, it has excellent DevTools that allows you to time-travel actions, persists actions on page refresh, etc. For medium- and large-scale apps, debugging takes more time than actually developing features. &lt;/p&gt;

&lt;p&gt;While Redux has its benefits, it doesn't warrant that you add Redux in all your apps.&lt;br&gt;
Your application can work well without Redux.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recoil"&gt;
  &lt;/a&gt;
  Recoil
&lt;/h2&gt;

&lt;p&gt;Recoil seems to be the newest tool on the state management community— A community with tons of excellent libraries like Context, Mobx, and Redux, etc.&lt;/p&gt;

&lt;p&gt;Before going into details about Recoil, I'd like to point out that this new state management library is not the "official" state management library for React.&lt;br&gt;
However, the record shows that it was built and released by engineers from Facebook's team, the React creator.&lt;br&gt;
But then, just as Redux isn't an official state management library for React, Recoil isn't either but may gain mass adoption by React enthusiasts if it proves valuable to the React ecosystem at large.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-primary-problem-recoil-solves"&gt;
  &lt;/a&gt;
  The primary problem Recoil solves
&lt;/h2&gt;

&lt;p&gt;While it has its learning curve, it still solves the same as most other state management libraries: global state management.&lt;br&gt;
After using Recoil for only a short while, here are the distinctions I think Recoils comes very handy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React-like approach and simplicity&lt;/strong&gt;&lt;br&gt;
 The simplicity of Recoil is second to none, hence the reason it's on this list.&lt;br&gt;
 You could build whatever app you build with Recoil as you could make just as with Redux or MobX.&lt;br&gt;
 However, Recoil feels like using a global version of React's useState. It also supports Concurrent Mode, a huge plus (this is still in the works at the time of writing).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy Learning Curve&lt;/strong&gt;&lt;br&gt;
Recoil doesn't impose a strict learning curve as Redux and Mobx do.&lt;br&gt;
They aren't so much to learn asides from Atom and Selectors, which are easy to understand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App-wide observation&lt;/strong&gt;&lt;br&gt;
Similar to other state management libraries, Recoil handles app-wide state observations well. Other benefits of using Recoil includes;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Boilerplate-free API&lt;/li&gt;
&lt;li&gt;Distributed and incremental state definition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recoil's central core concepts are Atoms and Selectors; covering this section is beyond the scope of this article. However, you can check their documentation for an in-depth overview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-recoil"&gt;
  &lt;/a&gt;
  When to use Recoil
&lt;/h2&gt;

&lt;p&gt;In less than two years of its release, Recoil has grown so much that it has about 12k plus stars on Github at the time of this article. Asides from that, it's gradually gaining momentum and mass adoption amongst React enthusiasts and the React community at large.&lt;br&gt;
Personally speaking, the only reason I have used Recoil in any of my projects is when I don't intend to have so much Redux boilerplate in my codebase. I have used Recoil on production once, and nothing terrible has happened; everything still works very well to date.&lt;/p&gt;

&lt;p&gt;So when to use Recoil might solely depend on your app's architecture decision, and if you are a lover of simplicity like myself, you might jump into using Recoil 😎.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-react-hooks"&gt;
  &lt;/a&gt;
  Using React Hooks
&lt;/h2&gt;

&lt;p&gt;Hooks is one of the most outstanding features ever added to the React library since its creation. Hooks brought ‘state’ to functional components. Now, functional components can create and manage local states on their own, just like class components.&lt;br&gt;
Anyone already into React should get familiar with React hooks, including &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useEffect&lt;/code&gt;, and &lt;code&gt;useReducer&lt;/code&gt;,  etc.&lt;br&gt;
This section will discuss how handy React Hooks can be standalone without intermeddling with any external state management library.&lt;/p&gt;

&lt;p&gt;You could use React Hooks as your primary state management tool without any library, but this will depend on your experience and understanding of React hooks.&lt;/p&gt;

&lt;p&gt;They are powerful on their own and can accomplish almost anything an external library could do.&lt;/p&gt;

&lt;p&gt;To some extent, other state management tools have a few advantages. Still, their procedures make it challenging to get started. Like in the case of Redux, some boilerplate code is needed to get it working in our application; hence, it introduces unnecessary complexity.&lt;br&gt;
On the other hand, with the &lt;code&gt;useContext&lt;/code&gt; API and React Hooks, there is no need to install external libraries to get our app working. It makes it a much simpler, more straightforward way to handle global state management in React applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Assuming you’re already familiar with &lt;code&gt;useState&lt;/code&gt;, we would look into two hooks that aid the process of state management in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-usereducer-endraw-hook"&gt;
  &lt;/a&gt;
  The &lt;code&gt;useReducer&lt;/code&gt; Hook
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;useReducer&lt;/code&gt; Hook came with React 16.8. Just like the &lt;code&gt;reduce()&lt;/code&gt; method in JavaScript, the &lt;code&gt;useReducer&lt;/code&gt; Hook receives two values as its argument — a reducer function and an initial state — and then returns a new state:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [state, dispatch] = useReducer((state, action) =&amp;gt; {
  const { type } = action;
  switch(action) {
    case 'action description':
      const newState = // do something with the action
      return newState;
    default:
      throw new Error()
  }
}, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In the snippet above, we’ve defined our state and a corresponding method, &lt;code&gt;dispatch&lt;/code&gt;, handling it. When we call the &lt;code&gt;dispatch&lt;/code&gt; method, the &lt;code&gt;useReducer()&lt;/code&gt; Hook will perform an action based on the &lt;code&gt;type&lt;/code&gt; that our method receives in its action argument:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
return (
  &amp;lt;button onClick={() =&amp;gt;
    dispatch({ type: 'action type'})}&amp;gt;
  &amp;lt;/button&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#usecontext"&gt;
  &lt;/a&gt;
  useContext
&lt;/h3&gt;

&lt;p&gt;This hook is used to get the current context of a Provider. To create and provide a context, we use the &lt;code&gt;React.createContext&lt;/code&gt; API.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const myContext = React.createContext()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We put the root component between the &lt;code&gt;myContext&lt;/code&gt; Provider:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
    return (
        &amp;lt;myContext.Provider value={900}&amp;gt;
            &amp;lt;Root /&amp;gt;
        &amp;lt;/myContext.Provider&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;To consume the value provided by the &lt;code&gt;&amp;lt;myContext.Provider&amp;gt;&amp;lt;/myContext.Provider&amp;gt;&lt;/code&gt; we use the &lt;code&gt;useContext&lt;/code&gt; hook.&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Root() {&lt;br&gt;
    const value = useContext(myContext)&lt;br&gt;
    return (&lt;br&gt;
        &amp;lt;&amp;gt;&lt;br&gt;
            &amp;lt;h3&amp;gt;My Context value: {value} &amp;lt;/h3&amp;gt;&lt;br&gt;
        &amp;lt;/&amp;gt;&lt;br&gt;
    )&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#using-usereducer-and-usecontext"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Using useReducer and useContext&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;Using useContext together with useReducer takes the component co-located state management on another level. Suddenly we can pass the state container created by useReducer and its dispatch function to any component from any top-level component. It can also be the most top-level component to make the state "global." It's also possible to pass things down only using React props, but React's Context API makes your state and dispatch function available anywhere without explicitly passing everything down the component tree.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we tried to cover the most trending state management tools for React in 2021, how they play an essential role in React state management, and when to use them in a project.&lt;br&gt;
I'd like to know what your experiences are in managing state in a typical React application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/when-and-when-not-to-use-redux-41807f29a7fb/"&gt;When (and when not) to use Redux&lt;/a&gt; - Christian Nwamba&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.robinwieruch.de/react-state-usereducer-usestate-usecontext"&gt;React State Hooks: useReducer, useState, useContext&lt;/a&gt; - Robin Weiruch&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/react-recoil-reusable-code-block-component/"&gt;Recoil in action: Building a reusable code block component&lt;/a&gt; - Tomi Odunsanya&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/refactoring-redux-app-to-use-recoil/"&gt;Refactoring a Redux app to use Recoil&lt;/a&gt; - Ohans Emmanuel &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/alexandrudanpop/why-react-projects-still-use-redux-in-2020-395p"&gt;Why React projects still use Redux&lt;/a&gt; - Alexandru-Dan Pop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Article by Blessing Krofegha, originally published on &lt;a href="https://javascript.works-hub.com/learn/state-management-battle-in-react-2021-hooks-redux-and-recoil-9977a"&gt;JavaScript Works&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>redux</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
