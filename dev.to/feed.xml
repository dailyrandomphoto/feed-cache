<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Practices for designing an UI</title>
      <author>Dumbo-programmer</author>
      <pubDate>Mon, 24 Jan 2022 05:56:57 +0000</pubDate>
      <link>https://dev.to/dumboprogrammer/best-practices-for-designing-an-ui-2g85</link>
      <guid>https://dev.to/dumboprogrammer/best-practices-for-designing-an-ui-2g85</guid>
      <description>&lt;p&gt;User Interface or UI for short and User experience UX for short.User Interface is the part the user sees or interacts with often called frontend.It doesn't matter if you use node or python as backend language.The only thing users cares about is how your website feels ,they describe it by looking at and using your website.&lt;/p&gt;

&lt;p&gt;Best Practices for Designing an Interface&lt;br&gt;
1.Keep the interface simple&lt;br&gt;
2.Create consistency and use common UI elements&lt;br&gt;
3.Be purposeful in page layout&lt;br&gt;
4.Strategically use color and texture&lt;br&gt;
5.Use typography to create hierarchy and clarity&lt;br&gt;
6.Make sure that the system communicates what's happening&lt;br&gt;
7.Think about the defaults.&lt;br&gt;
8.Think like an user:&lt;br&gt;
Like you don't know how anything works&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>codenewbie</category>
      <category>ux</category>
    </item>
    <item>
      <title>An Advanced KeyListener for Java Swing</title>
      <author>omega ui</author>
      <pubDate>Mon, 24 Jan 2022 05:17:53 +0000</pubDate>
      <link>https://dev.to/omegaui/an-advanced-keylistener-for-java-swing-4ali</link>
      <guid>https://dev.to/omegaui/an-advanced-keylistener-for-java-swing-4ali</guid>
      <description>&lt;p&gt;An Open-Source Advanced KeyListener for the Java Swing Library.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/omegaui/keystrokelistener"&gt;keystrokelistener&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>swing</category>
      <category>ui</category>
      <category>event</category>
    </item>
    <item>
      <title>18 GitHub Repos for Learning JavaScript ❤️</title>
      <author>Arpit</author>
      <pubDate>Mon, 24 Jan 2022 04:29:23 +0000</pubDate>
      <link>https://dev.to/soniarpit/18-github-repos-for-learning-javascript-41e9</link>
      <guid>https://dev.to/soniarpit/18-github-repos-for-learning-javascript-41e9</guid>
      <description>&lt;p&gt;Yeah, JavaScript is cool right. Here some GitHub Repos that help you to become better JavaScript developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-airbnb-javascript-style-guide"&gt;
  &lt;/a&gt;
  1. Airbnb JavaScript Style Guide
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/airbnb"&gt;
        airbnb
      &lt;/a&gt; / &lt;a href="https://github.com/airbnb/javascript"&gt;
        javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      JavaScript Style Guide
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Airbnb JavaScript Style Guide() {&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;A mostly reasonable approach to JavaScript&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: this guide assumes you are using &lt;a href="https://babeljs.io" rel="nofollow"&gt;Babel&lt;/a&gt;, and requires that you use &lt;a href="https://npmjs.com/babel-preset-airbnb" rel="nofollow"&gt;babel-preset-airbnb&lt;/a&gt; or the equivalent. It also assumes you are installing shims/polyfills in your app, with &lt;a href="https://npmjs.com/airbnb-browser-shims" rel="nofollow"&gt;airbnb-browser-shims&lt;/a&gt; or the equivalent.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/eslint-config-airbnb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a933cce640ac4a82eadf6bba106e1523b12c8e1dd8e8dc4b8754d6b555c18615/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f65736c696e742d636f6e6669672d616972626e622e737667" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/eslint-config-airbnb-base" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eec211cbd52a6227ef09a18a19bdd49234ce48e395a383bfbfedeaf6c5052d33/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f65736c696e742d636f6e6669672d616972626e622d626173652e737667" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/airbnb/javascript?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dbac0213da25c445bd11f168587c11a200ba153ef3014e8408e462e410169b3/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This guide is available in other languages too. See &lt;a href="https://github.com/airbnb/javascript#translation"&gt;Translation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Other Style Guides&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript/tree/es5-deprecated/es5"&gt;ES5 (Deprecated)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascriptreact/"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascriptcss-in-javascript/"&gt;CSS-in-JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/css"&gt;CSS &amp;amp; Sass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/ruby"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#types"&gt;Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#objects"&gt;Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#arrays"&gt;Arrays&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#destructuring"&gt;Destructuring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#arrow-functions"&gt;Arrow Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#classes--constructors"&gt;Classes &amp;amp; Constructors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#modules"&gt;Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#iterators-and-generators"&gt;Iterators and Generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#properties"&gt;Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#hoisting"&gt;Hoisting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#comparison-operators--equality"&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#blocks"&gt;Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#control-statements"&gt;Control Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#whitespace"&gt;Whitespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#commas"&gt;Commas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#semicolons"&gt;Semicolons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#type-casting--coercion"&gt;Type Casting &amp;amp; Coercion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#naming-conventions"&gt;Naming Conventions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#accessors"&gt;Accessors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#events"&gt;Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#jquery"&gt;jQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#ecmascript-5-compatibility"&gt;ECMAScript 5 Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#ecmascript-6-es-2015-styles"&gt;ECMAScript 6+ (ES 2015+) Styles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#standard-library"&gt;Standard Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#in-the-wild"&gt;In the Wild&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#the-javascript-style-guide-guide"&gt;The JavaScript Style Guide Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#chat-with-us-about-javascript"&gt;Chat With Us About JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/javascript#amendments"&gt;Amendments&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Types&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/airbnb/javascript#types--primitives"&gt;1.1&lt;/a&gt; &lt;strong&gt;Primitives&lt;/strong&gt;: When you access a primitive type you work…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/airbnb/javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-the-algorithms-javascript"&gt;
  &lt;/a&gt;
  2. The Algorithms JavaScript
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/TheAlgorithms"&gt;
        TheAlgorithms
      &lt;/a&gt; / &lt;a href="https://github.com/TheAlgorithms/Javascript"&gt;
        Javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Algorithms implemented in Javascript for beginners, following best practices.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Algorithms - JavaScript&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/TheAlgorithms/JavascriptCONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/67eb7c8b1ed6c9019f25d5ac1331577db2b42f15303a452aa91e94fc4565019a/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d436f6e747269627574696f6e73266d6573736167653d57656c636f6d6526636f6c6f723d303035396233267374796c653d666c61742d737175617265" alt="contributions welcome"&gt;&lt;/a&gt;
&lt;a href="https://lgtm.com/projects/g/TheAlgorithms/Javascript/context:javascript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f7c2f45d1de634eb034a3b6ea7813b565c4e578b3c35d2bc3a008dd53bab92cb/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176617363726970742f672f546865416c676f726974686d732f4a6176617363726970742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138267374796c653d666c61742d737175617265" alt="Language grade: JavaScript"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/TheAlgorithms/Javascript/workflows/Node%20CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJKahnX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/TheAlgorithms/Javascript/workflows/Node%2520CI/badge.svg" alt="Node CI"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/TheAlgorithms/Javascript/workflows/update_directory_md/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79mAt4hf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/TheAlgorithms/Javascript/workflows/update_directory_md/badge.svg" alt="update_directory_md"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/c7MnfGFGa6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1de46c8a86db708e5b8709e4c0f6c38f82e38e3bb26e94e256a1c8a123eee549/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3830383034353932353535363638323738322e7376673f6c6f676f3d646973636f726426636f6c6f72423d373238394441267374796c653d666c61742d737175617265" alt="Discord chat"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/67ad96b7a47f290a6bac9dddbe79ba560dd7dc93616d708267a2940bba696a9c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f4a6176617363726970742e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/67ad96b7a47f290a6bac9dddbe79ba560dd7dc93616d708267a2940bba696a9c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f4a6176617363726970742e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265" alt=""&gt;&lt;/a&gt;
&lt;a href="https://standardjs.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2acd7bc792209ab5d9722e003ca4aac48f2c779750bd295aef733cabfcdf3729/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d7374616e646172646a732d253233663364663439" alt="standard.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
All algorithms implemented in JavaScript (for educational purposes only)&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Javascript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/76e60919474807718793857d8eb615e7a50b18b04050577e5a35c19421f260a3/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667" alt="Open in Gitpod"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These are for demonstration purposes only. There are many implementations of sorts in the JavaScript standard library
that are much better for performance reasons.&lt;/p&gt;
&lt;h2&gt;
Contribution Guidelines&lt;/h2&gt;
&lt;p&gt;Read our &lt;a href="https://github.com/TheAlgorithms/JavascriptCONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt;
&lt;h2&gt;
List of Algorithms&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="https://github.com/TheAlgorithms/JavascriptDIRECTORY.md"&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Algorithm Explanation&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="https://github.com/TheAlgorithms/Javascript/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/TheAlgorithms/Javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#3-javascript-algorithms-and-data-structures"&gt;
  &lt;/a&gt;
  3. JavaScript Algorithms and Data Structures
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trekhleb"&gt;
        trekhleb
      &lt;/a&gt; / &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;
        javascript-algorithms
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
JavaScript Algorithms and Data Structures&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPiprYPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg" alt="CI"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/trekhleb/javascript-algorithms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ff751911f19ea8aefdbd2b20184c1ab5fba47caf8b31a02fb18f8d7df6e43ba/68747470733a2f2f636f6465636f762e696f2f67682f7472656b686c65622f6a6176617363726970742d616c676f726974686d732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains JavaScript based examples of many
popular algorithms and data structures.&lt;/p&gt;
&lt;p&gt;Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.zh-CN.md"&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.zh-TW.md"&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ko-KR.md"&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ja-JP.md"&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.pl-PL.md"&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.fr-FR.md"&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.es-ES.md"&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.pt-BR.md"&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ru-RU.md"&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.tr-TR.md"&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.it-IT.md"&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.id-ID.md"&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.uk-UA.md"&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ar-AR.md"&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.de-DE.md"&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes
only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
Data Structures&lt;/h2&gt;
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trekhleb/javascript-algorithms"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-git-book-teaching-programming-basics-with-javascript"&gt;
  &lt;/a&gt;
  4. Git Book teaching programming basics with JavaScript
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/GitbookIO"&gt;
        GitbookIO
      &lt;/a&gt; / &lt;a href="https://github.com/GitbookIO/javascript"&gt;
        javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GitBook teaching programming basics with Javascript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Learn Javascript&lt;/h1&gt;
&lt;p&gt;This book will teach you the basics of programming and Javascript. Whether you are an experienced programmer or not, this book is intended for everyone who wishes to learn the JavaScript programming language.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/GitbookIO/javascript./assets/intro.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hAs0BDNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/GitbookIO/javascript./assets/intro.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript (&lt;em&gt;JS for short&lt;/em&gt;) is the programming language that enables web pages to respond to user interaction beyond the basic level. It was created in 1995, and is today one of the most famous and used programming languages.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/GitbookIO/javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#5-javascript30"&gt;
  &lt;/a&gt;
  5. JavaScript30
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wesbos"&gt;
        wesbos
      &lt;/a&gt; / &lt;a href="https://github.com/wesbos/JavaScript30"&gt;
        JavaScript30
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      30 Day Vanilla JS Challenge
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/07ca65497065dd926bd889c53b7b7652f8ef3cbc4320739cf7ebed3c4d34cb2d/68747470733a2f2f6a61766173637269707433302e636f6d2f696d616765732f4a53332d736f6369616c2d73686172652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/07ca65497065dd926bd889c53b7b7652f8ef3cbc4320739cf7ebed3c4d34cb2d/68747470733a2f2f6a61766173637269707433302e636f6d2f696d616765732f4a53332d736f6369616c2d73686172652e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
JavaScript30&lt;/h1&gt;
&lt;p&gt;Starter Files + Completed solutions for the JavaScript 30 Day Challenge.&lt;/p&gt;
&lt;p&gt;Grab the course at &lt;a href="https://JavaScript30.com" rel="nofollow"&gt;https://JavaScript30.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Community #JavaScript30 Content&lt;/h2&gt;
&lt;p&gt;Feel free to submit a PR adding a link to your own recaps, guides or reviews!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://thesagittariusme.blogspot.com/search/label/JS30" rel="nofollow"&gt;Arjun Khode’s blog&lt;/a&gt; about summaries for each day, including fixed glitches, bugs and extra features&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nitishdayal/JavaScript30"&gt;Nitish Dayal's Text Guides&lt;/a&gt; are great for those who like reading over watching&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://meredithunderell.com/tag/javascript30/" rel="nofollow"&gt;Meredith Underell's&lt;/a&gt; Quick Lessons Learned&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://rowanweismiller.com/blog/javascript-30/" rel="nofollow"&gt;Rowan Weismiller's&lt;/a&gt; Recaps + Lessons Learned&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tfrommen.de/tag/javascript-30/" rel="nofollow"&gt;Thorsten Frommen&lt;/a&gt; shares how he solved the exercises before viewing the answers&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/soyaine/JavaScript30"&gt;Soyaine 写的中文指南&lt;/a&gt;包含了过程记录和难点解释&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://freshman.tech/archive/#javascript30" rel="nofollow"&gt;Ayo Isaiah's&lt;/a&gt; Recaps and Lessons Learned&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stpcollabr8nlstn.github.io/JavaScript30/" rel="nofollow"&gt;Adriana Rios&lt;/a&gt; shares her alternative solutions&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://30daysofjs.michaeleinsohn.com" rel="nofollow"&gt;Michael Einsohn&lt;/a&gt; publishes each challenge after watching the video once&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@mike_ekkel/javascript-30-a-30-day-vanilla-js-challenge-6a733fc9f62c#.9frjtaje9" rel="nofollow"&gt;Mike Ekkel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yhabib/JavaScript30"&gt;Yusef Habib&lt;/a&gt; lessons and tricks learned, and a &lt;a href="https://yhabib.github.io/JavaScript30/" rel="nofollow"&gt;gh-page&lt;/a&gt; to see working all the mini-projects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/amelieyeh/JS30"&gt;Amelie Yeh&lt;/a&gt; 30 lessons notes with things I've learned, and those important recaps. and directly view my demos &lt;a href="https://amelieyeh.github.io/JS30/" rel="nofollow"&gt;here&lt;/a&gt; 🇹🇼😄
&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wesbos/JavaScript30"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-javascriptquestions"&gt;
  &lt;/a&gt;
  6. JavaScript-questions
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lydiahallie"&gt;
        lydiahallie
      &lt;/a&gt; / &lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;
        javascript-questions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A long list of (advanced) JavaScript questions, and their explanations ✨  
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e1a54ddebc870cb971c713b20765f1c2ed328efff836eebe3c2bafccbc12bb0a/68747470733a2f2f696d672e69636f6e73382e636f6d2f636f6c6f722f3334342f6a6176617363726970742e706e67"&gt;&lt;img height="60" src="https://camo.githubusercontent.com/e1a54ddebc870cb971c713b20765f1c2ed328efff836eebe3c2bafccbc12bb0a/68747470733a2f2f696d672e69636f6e73382e636f6d2f636f6c6f722f3334342f6a6176617363726970742e706e67"&gt;&lt;/a&gt;
  &lt;h1&gt;
JavaScript Questions&lt;/h1&gt;

&lt;p&gt;&lt;span&gt;I post multiple choice JavaScript questions on my &lt;a href="https://www.instagram.com/theavocoder" rel="nofollow"&gt;Instagram&lt;/a&gt; &lt;strong&gt;stories&lt;/strong&gt;, which I'll also post here! Last updated: &lt;a href="https://github.com/lydiahallie/javascript-questions#20200612"&gt;&lt;b&gt;June 12th&lt;/b&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;From basic to advanced: test how well you know JavaScript, refresh your knowledge a bit, or prepare for your coding interview! 💪 🚀 I update this repo regularly with new questions. I added the answers in the &lt;strong&gt;collapsed sections&lt;/strong&gt; below the questions, simply click on them to expand it. It's just for fun, good luck! ❤️&lt;/p&gt;
&lt;p&gt;Feel free to reach out to me! 😊 &lt;br&gt;
&lt;a href="https://www.instagram.com/theavocoder" rel="nofollow"&gt;Instagram&lt;/a&gt; || &lt;a href="https://www.twitter.com/lydiahallie" rel="nofollow"&gt;Twitter&lt;/a&gt; || &lt;a href="https://www.linkedin.com/in/lydia-hallie" rel="nofollow"&gt;LinkedIn&lt;/a&gt; || &lt;a href="https://www.lydiahallie.dev" rel="nofollow"&gt;Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feel free to use them in a project! 😃  I would &lt;em&gt;really&lt;/em&gt; appreciate a reference to this repo, I create the questions and explanations (yes I'm sad lol) and the community helps me so much to maintain and improve it! 💪🏼 Thank you and have fun!&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;b&gt; See 18 Available Translations 🇸🇦🇪🇬🇧🇦🇩🇪🇪🇸🇫🇷🇮🇩&lt;/b&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lydiahallie/javascript-questions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#7-awesome-javascript"&gt;
  &lt;/a&gt;
  7. Awesome JavaScript
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sorrycc"&gt;
        sorrycc
      &lt;/a&gt; / &lt;a href="https://github.com/sorrycc/awesome-javascript"&gt;
        awesome-javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🐢 A collection of awesome browser-side  JavaScript libraries, resources and shiny things.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Awesome JavaScript &lt;a href="https://github.com/sorrycc/awesome-javascript/"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A collection of awesome browser-side &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" rel="nofollow"&gt;JavaScript&lt;/a&gt; libraries, resources and shiny things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/sorrycc/awesome-javascript#awesome-javascript"&gt;Awesome JavaScript&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#package-managers"&gt;Package Managers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#component-management"&gt;Component management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#loaders"&gt;Loaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#bundlers"&gt;Bundlers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#type-checkers"&gt;Type Checkers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#testing-frameworks"&gt;Testing Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#qa-tools"&gt;QA Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#mvc-frameworks-and-libraries"&gt;MVC Frameworks and Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#node-powered-cms-frameworks"&gt;Node-Powered CMS Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#templating-engines"&gt;Templating Engines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#articles-and-posts"&gt;Articles/Posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sorrycc/awesome-javascript#data-visualization"&gt;Data Visualization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#timeline"&gt;Timeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#spreadsheet"&gt;Spreadsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#editors"&gt;Editors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Utilities
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#files"&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#functional-programming"&gt;Functional Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#reactive-programming"&gt;Reactive Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#data-structure"&gt;Data Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#date"&gt;Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#string"&gt;String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#number"&gt;Number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#storage"&gt;Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#color"&gt;Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#i18n-and-l10n"&gt;I18n And L10n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#control-flow"&gt;Control Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#routing"&gt;Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#log"&gt;Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#regexp"&gt;RegExp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#videoaudio"&gt;Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#voice-command"&gt;Voice Command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#api"&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#streaming"&gt;Streaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#vision-detection"&gt;Vision Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#browser-detection"&gt;Browser Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#operating-system"&gt;Operating System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UI
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#code-highlighting"&gt;Code Highlighting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#loading-status"&gt;Loading Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#validation"&gt;Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#keyboard-wrappers"&gt;Keyboard Wrappers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#tours-and-guides"&gt;Tours And Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#notifications"&gt;Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#sliders"&gt;Sliders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#range-sliders"&gt;Range Sliders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#form-widgets"&gt;Form Widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#tips"&gt;Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#modals-and-popups"&gt;Modals and Popups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#scroll"&gt;Scroll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#menu"&gt;Menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#tablegrid"&gt;Table/Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#frameworks-1"&gt;Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#boilerplates"&gt;Boilerplates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#image"&gt;Image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#gesture"&gt;Gesture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#typography"&gt;Typography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#animations"&gt;Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#image-processing"&gt;Image processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#es6"&gt;ES6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#generators"&gt;Generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#full-text-search"&gt;Full Text Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#sdk"&gt;SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#misc"&gt;Misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#podcasts"&gt;Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#worth-reading"&gt;Worth Reading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#other-awesome-lists"&gt;Other Awesome Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sorrycc/awesome-javascript#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
Package Managers&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Host the JavaScript libraries and provide tools for fetching and packaging them.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/" rel="nofollow"&gt;npm&lt;/a&gt; - npm is the package manager for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bower/bower"&gt;Bower&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sorrycc/awesome-javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#8-cleancodejavascript"&gt;
  &lt;/a&gt;
  8. clean-code-JavaScript
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ryanmcdermott"&gt;
        ryanmcdermott
      &lt;/a&gt; / &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;
        clean-code-javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🛁 Clean Code concepts adapted for JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
clean-code-javascript&lt;/h1&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#objects-and-data-structures"&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#classes"&gt;Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#solid"&gt;SOLID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#formatting"&gt;Formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/af72fb10accee2e9a59efec2a0b436242fad5bb2a00ca11494e7c759834625cc/68747470733a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/af72fb10accee2e9a59efec2a0b436242fad5bb2a00ca11494e7c759834625cc/68747470733a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067" alt="Humorous image of software quality estimation as a count of how many expletives you shout when reading code"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Software engineering principles, from Robert C. Martin's book
&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" rel="nofollow"&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;
adapted for JavaScript. This is not a style guide. It's a guide to producing
&lt;a href="https://github.com/ryanmcdermott/3rs-of-software-architecture"&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt;
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be
universally agreed upon. These are guidelines and nothing more, but they are
ones codified over many years of collective experience by the authors of
&lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are
still learning a lot. When software architecture is as old as architecture
itself, maybe then we will have harder rules to follow. For now, let these
guidelines serve as a touchstone by which to assess the quality of the
JavaScript…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#9-completejavascriptcourse-by-jonas"&gt;
  &lt;/a&gt;
  9. complete-JavaScript-course by Jonas
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jonasschmedtmann"&gt;
        jonasschmedtmann
      &lt;/a&gt; / &lt;a href="https://github.com/jonasschmedtmann/complete-javascript-course"&gt;
        complete-javascript-course
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Starter files, final projects, and FAQ for my Complete JavaScript course
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Course Material and FAQ for my Complete JavaScript Course&lt;/h1&gt;
&lt;p&gt;This repo contains starter files and final code for all sections and projects contained in the course.&lt;/p&gt;
&lt;p&gt;Use starter code to start each section, and &lt;strong&gt;final code to compare it with your own code whenever something doesn't work&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;👇 &lt;strong&gt;&lt;em&gt;Please read the following Frequently Asked Questions (FAQ) carefully before starting the course&lt;/em&gt;&lt;/strong&gt; 👇&lt;/p&gt;
&lt;h2&gt;
FAQ&lt;/h2&gt;
&lt;h3&gt;
Q1: How do I download the files?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; If you're new to GitHub and just want to download the entire code, hit the green button saying "Code", and then choose the "Download ZIP" option. If you can't see the button (on mobile), use &lt;a href="https://github.com/jonasschmedtmann/complete-javascript-course/archive/master.zip"&gt;this link&lt;/a&gt; instead.&lt;/p&gt;
&lt;h3&gt;
Q2: I'm looking for the old course version (v1) files. Where can I find them?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; They are in this same repo, but in the &lt;a href="https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1"&gt;v1 branch&lt;/a&gt;. So just go to &lt;a href="https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1"&gt;v1&lt;/a&gt;, and download the code from there.&lt;/p&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jonasschmedtmann/complete-javascript-course"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#10-modern-javascript-tutorial"&gt;
  &lt;/a&gt;
  10. Modern JavaScript Tutorial
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/javascript-tutorial"&gt;
        javascript-tutorial
      &lt;/a&gt; / &lt;a href="https://github.com/javascript-tutorial/en.javascript.info"&gt;
        en.javascript.info
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Modern JavaScript Tutorial 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Modern JavaScript Tutorial&lt;/h1&gt;
&lt;p&gt;This repository hosts the English content of the Modern JavaScript Tutorial, published in &lt;a href="https://javascript.info" rel="nofollow"&gt;https://javascript.info&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Translations&lt;/h2&gt;
&lt;p&gt;We'd like to make the tutorial available in many languages. Please help us to translate.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://javascript.info/translate" rel="nofollow"&gt;https://javascript.info/translate&lt;/a&gt; for the details.&lt;/p&gt;
&lt;h2&gt;
Contributions&lt;/h2&gt;
&lt;p&gt;We'd also like to collaborate on the tutorial with other people.&lt;/p&gt;
&lt;p&gt;Something's wrong? A topic is missing? Explain it to people, add as PR 👏&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You can edit the text in any editor.&lt;/strong&gt; The tutorial uses enhanced "markdown" format, easy to grasp. And if you want to see how it looks on-site, there's a server to run the tutorial locally at &lt;a href="https://github.com/javascript-tutorial/server"&gt;https://github.com/javascript-tutorial/server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The list of contributors is available at &lt;a href="https://javascript.info/about#contributors" rel="nofollow"&gt;https://javascript.info/about#contributors&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Structure&lt;/h2&gt;
&lt;p&gt;Every chapter, article or a task has its folder.&lt;/p&gt;
&lt;p&gt;The folder is named like &lt;code&gt;N-url&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is a number for the sorting purposes and &lt;code&gt;url&lt;/code&gt; is the URL part with title of the material.&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/javascript-tutorial/en.javascript.info"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#11-javascript-testdriven-learning"&gt;
  &lt;/a&gt;
  11. JavaScript: Test-Driven Learning
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/MartinChavez"&gt;
        MartinChavez
      &lt;/a&gt; / &lt;a href="https://github.com/MartinChavez/Javascript"&gt;
        Javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Javascript : Test-Driven Learning
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/MartinChavez/Learn-Javascript"&gt;&lt;img src="https://camo.githubusercontent.com/e133acc5ec37b1a55b508da9c447b5bfe02d44348bbb4fb9a99ce7c7db35c67d/68747470733a2f2f6d617274696e63686176657a2e6769746875622e696f2f4173736574732f4c6f676f732f6a6176617363726970742e737667" width="200px" height="200px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Javascript : Test-Driven Learning&lt;/h1&gt;
&lt;p&gt;This project is aimed to help the user further study Javascript with a test-driven approach. Each unit contains an annotated tutorial and a platform where you can test your understanding of the topic.&lt;/p&gt;
&lt;h1&gt;
Topics&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Bad Practices and Solutions&lt;/li&gt;
&lt;li&gt;Booleans&lt;/li&gt;
&lt;li&gt;Built-in Functions&lt;/li&gt;
&lt;li&gt;Closure&lt;/li&gt;
&lt;li&gt;Comparisons&lt;/li&gt;
&lt;li&gt;Conditionals&lt;/li&gt;
&lt;li&gt;Exceptions&lt;/li&gt;
&lt;li&gt;Falsey Values&lt;/li&gt;
&lt;li&gt;Functional Javascript (new)&lt;/li&gt;
&lt;li&gt;Function Expressions&lt;/li&gt;
&lt;li&gt;Function Expressions as Parameters&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;General Performance&lt;/li&gt;
&lt;li&gt;Hoisting&lt;/li&gt;
&lt;li&gt;Logical Assignment&lt;/li&gt;
&lt;li&gt;Loops&lt;/li&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Numbers&lt;/li&gt;
&lt;li&gt;Object Prototype&lt;/li&gt;
&lt;li&gt;Objects&lt;/li&gt;
&lt;li&gt;Objects Functionality&lt;/li&gt;
&lt;li&gt;Prototypes&lt;/li&gt;
&lt;li&gt;Strings&lt;/li&gt;
&lt;li&gt;Switch Block&lt;/li&gt;
&lt;li&gt;Ternary Conditionals&lt;/li&gt;
&lt;li&gt;Truthy Values&lt;/li&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Tools&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://nodejs.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6cc81702b4754360da8865e8c597c9314b01cbfb0867eea4fd81df800f0fad2/68747470733a2f2f6d617274696e63686176657a2e6769746875622e696f2f4173736574732f4c6f676f732f6e6f64656a732e737667" width="50px" height="50px"&gt;&lt;/a&gt;
&lt;a href="https://github.com/gruntjs/grunt"&gt;&lt;img src="https://camo.githubusercontent.com/39242419c60a53e1f3cecdeecb2460acce47366f/687474703a2f2f6772756e746a732e636f6d2f696d672f6772756e742d6c6f676f2d6e6f2d776f72646d61726b2e737667" width="50px" height="50px"&gt;&lt;/a&gt;
&lt;a href="https://karma-runner.github.io/0.12/index.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e4cc4f00bc4a8740585d78c497591657706ec58a4bebcfc80952c52f7a9d5741/68747470733a2f2f636c6475702e636f6d2f30323836572d327932372e706e67" width="50px" height="50px"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jasmine/jasmine"&gt;&lt;img src="https://camo.githubusercontent.com/2aa22671bbadffcfd089dcf5eadc9efeaf492c6b18f57b63e8c7d6c8736326e7/68747470733a2f2f65636c69707365736f757263652e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031342f30332f6a61736d696e652e706e67" width="50px" height="50px"&gt;&lt;/a&gt;
&lt;a href="http://bower.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aad5f0385a2d8524cb366a1bad62bc74e797743a/687474703a2f2f692e696d6775722e636f6d2f516d47485067632e706e67" width="50px" height="50px"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/763a9aba63616678df0b9481c7084e524473ba4a2e993ea7c288afa699cc3e86/68747470733a2f2f6d617274696e63686176657a2e6769746875622e696f2f4173736574732f4c6f676f732f6e706d2e737667" width="50px" height="50px"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Arrays&lt;/h1&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;  &lt;span class="pl-c"&gt;/* An array is a data structure with automatically indexed positions*/&lt;/span&gt;
  &lt;span class="pl-en"&gt;it&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'Arrays can be accessed by indices'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-c"&gt;//The brackets indicate to the compiler to make an array and to fill it with&lt;/span&gt;
    &lt;span class="pl-c"&gt;//the comma-separated values between the brackets&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-s1"&gt;arrayOfStrings&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;[&lt;/span&gt; &lt;span class="pl-s"&gt;"StringZero"&lt;/span&gt; &lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;"StringOne"&lt;/span&gt; &lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;"StringTwo"&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
    &lt;span class="pl-c"&gt;//We can access any location of the zero-based&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/MartinChavez/Javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#12-beginner-javascript"&gt;
  &lt;/a&gt;
  12. Beginner JavaScript
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wesbos"&gt;
        wesbos
      &lt;/a&gt; / &lt;a href="https://github.com/wesbos/beginner-javascript"&gt;
        beginner-javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Slam Dunk JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/70d199647b0ded918d110150952f1167dc39adf5ed61ce00262091d72724c581/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f776573626f732f696d6167652f75706c6f61642f76313537343837363835312f424a532f424a532d536f6369616c2d53686172652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/70d199647b0ded918d110150952f1167dc39adf5ed61ce00262091d72724c581/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f776573626f732f696d6167652f75706c6f61642f76313537343837363835312f424a532f424a532d536f6369616c2d53686172652e706e67" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Beginner JavaScript&lt;/h1&gt;
&lt;p&gt;These are the starter files and solutions to the &lt;a href="https://BeginnerJavaScript.com" rel="nofollow"&gt;Beginner JavaScript&lt;/a&gt; course&lt;/p&gt;
&lt;h2&gt;
Function Definition Diagram&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/wesbos/beginner-javascriptfunction-definition.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jPd3XCmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/wesbos/beginner-javascriptfunction-definition.jpg" alt="Description of javaScript function"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Community Resources&lt;/h2&gt;
&lt;p&gt;Please feel free to add your blog post, videos, notes, or anything else related to the course :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/geekysrm"&gt;Soumya Ranjan Mohanty&lt;/a&gt;'s &lt;a href="https://github.com/geekysrm/javascript-notes"&gt;Github repo&lt;/a&gt; with notes and lessons learnt, along with &lt;a href="https://notes.soumya.dev/javascript" rel="nofollow"&gt;full notes here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lindakatcodes/status/1331702581220020225" rel="nofollow"&gt;Linda has documented all her excercises on Codepen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CsarGomez"&gt;Cesar Gomez&lt;/a&gt; have a &lt;a href="https://github.com/CsarGomez/beginnersJavascriptNotes"&gt;GitHub repo&lt;/a&gt; with notes for all the modules completed including exercises in &lt;a href="https://codepen.io/collection/XjJQYz" rel="nofollow"&gt;CopePen&lt;/a&gt; other modules will be uploaded a soon as i finished each one&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wesbos/beginner-javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#13-computer-science-in-javascript"&gt;
  &lt;/a&gt;
  13. Computer Science in JavaScript
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/humanwhocodes"&gt;
        humanwhocodes
      &lt;/a&gt; / &lt;a href="https://github.com/humanwhocodes/computer-science-in-javascript"&gt;
        computer-science-in-javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Collection of classic computer science paradigms, algorithms, and approaches written in JavaScript. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Computer Science in JavaScript&lt;/h1&gt;
&lt;p&gt;by &lt;a href="https://humanwhocodes.com" rel="nofollow"&gt;Nicholas C. Zakas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you find this useful, please consider supporting my work with a &lt;a href="https://humanwhocodes.com/donate" rel="nofollow"&gt;donation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;Collection of classic computer science paradigms, algorithms, and approaches written in JavaScript. This is the source code for the series of blog posts on my website.&lt;/p&gt;
&lt;h2&gt;
Folder Structure&lt;/h2&gt;
&lt;p&gt;The most recent packages are found in these directories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;src&lt;/code&gt; - the implementation source code&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;tests&lt;/code&gt; - tests for the implementation source code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These directories contain &lt;strong&gt;old&lt;/strong&gt; implementations that will be replaced eventually, they are just here to avoid confusing people who find this repo through the old blog posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;data-structures&lt;/code&gt; - data structure implementations that have not been updated yet&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;encodings&lt;/code&gt; - encoding implementations that have not been updated yet&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;algorithms&lt;/code&gt; - miscellanous algorithm implementations that have not been updated yet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As I update these, implementations will move from these folders into &lt;code&gt;src&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
Branches&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;2009&lt;/strong&gt; - the…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/humanwhocodes/computer-science-in-javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#14-node-best-practices"&gt;
  &lt;/a&gt;
  14. Node Best Practices
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/goldbergyoni"&gt;
        goldbergyoni
      &lt;/a&gt; / &lt;a href="https://github.com/goldbergyoni/nodebestpractices"&gt;
        nodebestpractices
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✅  The Node.js best practices list (January 2022)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Node.js Best Practices&lt;/h1&gt;
&lt;h1&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/goldbergyoni/nodebestpracticesassets/images/banner-2.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dyp5Dc5U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpracticesassets/images/banner-2.jpg" alt="Node.js Best Practices"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;br&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/fa7136160f242623caf1bcabe1c8117674d8c126a1ca3ccefa8cc3a3d046e263/68747470733a2f2f696d672e736869656c64732e696f2f62616467652fe29a992532304974656d253230636f756e742532302d253230313032253230426573742532305072616374696365732d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/fa7136160f242623caf1bcabe1c8117674d8c126a1ca3ccefa8cc3a3d046e263/68747470733a2f2f696d672e736869656c64732e696f2f62616467652fe29a992532304974656d253230636f756e742532302d253230313032253230426573742532305072616374696365732d626c75652e737667" alt="102 items"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5e1c72c99c956168900d5a0464a152522291d95eedb0eebd1fff256ba8d84d7e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539332538352532304c6173742532307570646174652532302d2532304a616e756172792532303039253243253230323032322d677265656e2e737667"&gt;&lt;img id="user-content-last-update-badge" src="https://camo.githubusercontent.com/5e1c72c99c956168900d5a0464a152522291d95eedb0eebd1fff256ba8d84d7e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539332538352532304c6173742532307570646174652532302d2532304a616e756172792532303039253243253230323032322d677265656e2e737667" alt="Last update: January 09, 2022"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/23689c2d9ab1e0c4e069d3af07021920bb299162ffc1fc8a32821a46884cf023/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2025453225394325393425323055706461746564253230466f7225323056657273696f6e2532302d2532304e6f646525323031342e302e302d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/23689c2d9ab1e0c4e069d3af07021920bb299162ffc1fc8a32821a46884cf023/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2025453225394325393425323055706461746564253230466f7225323056657273696f6e2532302d2532304e6f646525323031342e302e302d627269676874677265656e2e737667" alt="Updated for Node 14.0.0"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href="https://twitter.com/nodepractices/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bcI3k5Kl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/images/twitter-s.png" alt="nodepractices"&gt;&lt;/a&gt; &lt;strong&gt;Follow us on Twitter!&lt;/strong&gt; &lt;a href="https://twitter.com/nodepractices/" rel="nofollow"&gt;&lt;strong&gt;@nodepractices&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Read in a different language: &lt;a href="https://github.com/goldbergyoni/nodebestpractices./README.chinese.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HSHWNdNG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/CN.png" alt="CN"&gt;&lt;strong&gt;CN&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/goldbergyoni/nodebestpractices./README.french.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwaZ7tlz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/FR.png" alt="FR"&gt;&lt;strong&gt;FR&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/goldbergyoni/nodebestpractices./README.brazilian-portuguese.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xiqz7zEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/BR.png" alt="BR"&gt;&lt;strong&gt;BR&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/goldbergyoni/nodebestpractices./README.russian.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I18qByTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/RU.png" alt="RU"&gt;&lt;strong&gt;RU&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/goldbergyoni/nodebestpractices./README.polish.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jnb455Gg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/PL.png" alt="PL"&gt;&lt;strong&gt;PL&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/goldbergyoni/nodebestpractices./README.japanese.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XWSx7nQC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/JA.png" alt="JA"&gt;&lt;strong&gt;JA&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/goldbergyoni/nodebestpractices./README.basque.md"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hw6GHsTn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/EU.png" alt="EU"&gt;&lt;strong&gt;EU&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://github.com/goldbergyoni/nodebestpractices#translations"&gt;(&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ihabwhJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/ES.png" alt="ES"&gt;&lt;strong&gt;ES&lt;/strong&gt;, &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKDJtzmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/HE.png" alt="HE"&gt;&lt;strong&gt;HE&lt;/strong&gt;, &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8L3Nh7yp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/KR.png" alt="KR"&gt;&lt;strong&gt;KR&lt;/strong&gt; and &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fxiwqszr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/TR.png" alt="TR"&gt;&lt;strong&gt;TR&lt;/strong&gt; in progress! )&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h6&gt;
Built and maintained by our &lt;a href="https://github.com/goldbergyoni/nodebestpractices#steering-committee"&gt;Steering Committee&lt;/a&gt; and &lt;a href="https://github.com/goldbergyoni/nodebestpractices#collaborators"&gt;Collaborators&lt;/a&gt;
&lt;/h6&gt;
&lt;h1&gt;
Latest Best Practices and News&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;🔖 New menu and tags&lt;/strong&gt;: Our menu is collapsible now and include &lt;code&gt;#tags&lt;/code&gt;. New visitors can read &lt;code&gt;#strategic&lt;/code&gt; items first. Returning visitors can focus on &lt;code&gt;#new&lt;/code&gt; content. Seniors can filter for &lt;code&gt;#advanced&lt;/code&gt; items. Courtesy of the one and only &lt;a href="https://github.com/rubek-joshi@rubek-joshi"&gt;Rubek Joshi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;👨‍👩‍👧‍👦 New family member!&lt;/strong&gt;: A new repository joins our family - &lt;a href="https://github.com/testjavascript/nodejs-integration-tests-best-practices"&gt;Node.js Integration Tests Best Practices ✨&lt;/a&gt;. It includes 40+ best practices for writing awesome and performant Node.js component tests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a rel="noopener noreferrer" href="https://github.com/goldbergyoni/nodebestpractices./assets/flags/FR.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwaZ7tlz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/goldbergyoni/nodebestpractices./assets/flags/FR.png" alt="FR"&gt;&lt;/a&gt; French translation!1! :&lt;/strong&gt; The latest translation that joins our international guide is French. Bienvenue&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
Welcome! 3 Things You Ought To Know First&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1. You&lt;/strong&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/goldbergyoni/nodebestpractices"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#15-33-js-concepts"&gt;
  &lt;/a&gt;
  15. 33 JS Concepts
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/leonardomso"&gt;
        leonardomso
      &lt;/a&gt; / &lt;a href="https://github.com/leonardomso/33-js-concepts"&gt;
        33-js-concepts
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📜 33 JavaScript concepts every developer should know.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;br&gt;
  &lt;a href="https://github.com/leonardomso/33"&gt;&lt;img src="https://camo.githubusercontent.com/1bb813c7e21e016bd26a1d2bcd39c11653df76695daa2e1d7d4f50a60c41aa53/68747470733a2f2f692e696d6775722e636f6d2f6473486d6b36482e6a7067" alt="33 Concepts Every JS Developer Should Know" width='200"'&gt;&lt;/a&gt;
  &lt;br&gt;
    &lt;br&gt;
  33 Concepts Every JavaScript Developer Should Know
  &lt;br&gt;&lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://twitter.com/leonardomso" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/241b1d8d67dea2cec658e857e8002b8544cbe44d64e9f6728198c18902848501/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6c656f6e6172646f6d736f2e7376673f7374796c653d666f722d7468652d6261646765" alt="Follow me"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by &lt;a href="https://twitter.com/stephenthecurt" rel="nofollow"&gt;Stephen Curtis&lt;/a&gt; and you can read it &lt;a href="https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;🚀 Considered by GitHub as one of the &lt;a href="https://blog.github.com/2018-12-13-new-open-source-projects/"&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
Community&lt;/h2&gt;
&lt;p&gt;Feel free to submit a PR adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt;
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/eldrinf/33-js-concepts-albanian.git"&gt;Shqip (Albanian)&lt;/a&gt; — Eldrin Ereqi&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/amrsekilly/33-js-concepts"&gt;اَلْعَرَبِيَّةُ‎ (Arabic)&lt;/a&gt; — Amr Elsekilly&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/stephentian/33-js-concepts"&gt;汉语 (Chinese)&lt;/a&gt; — Re Tian&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tiagoboeing/33-js-concepts"&gt;Português do Brasil (Brazilian Portuguese) &lt;/a&gt; — Tiago Boeing&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yjs03057/33-js-concepts.git"&gt;한국어 (Korean)&lt;/a&gt; — Suin Lee&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/adonismendozaperez/33-js-conceptos"&gt;Español (Spanish)&lt;/a&gt; — Adonis Mendoza&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ilker0/33-js-concepts"&gt;Türkçe (Turkish)&lt;/a&gt; — İlker Demir&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gumennii/33-js-concepts"&gt;русский язык (Russian)&lt;/a&gt; —…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/leonardomso/33-js-concepts"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#16-you-dont-know-js"&gt;
  &lt;/a&gt;
  16. You Don’t Know JS
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/getify"&gt;
        getify
      &lt;/a&gt; / &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;
        You-Dont-Know-JS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A book series on JavaScript. @YDKJS on twitter.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
You Don't Know JS Yet (book series) - 2nd Edition&lt;/h1&gt;
&lt;p&gt;This is a series of books diving deep into the core mechanisms of the JavaScript language. This is the &lt;strong&gt;second edition&lt;/strong&gt; of the book series:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanpub.com/ydkjsy-get-started" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f1yXhsFl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/getify/You-Dont-Know-JSget-started/images/cover.png" width="75"&gt;&lt;/a&gt;  
&lt;a href="https://leanpub.com/ydkjsy-scope-closures" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--npoabbR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/getify/You-Dont-Know-JSscope-closures/images/cover.png" width="75"&gt;&lt;/a&gt;  ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To read more about the motivations and perspective behind this book series, check out the &lt;a href="https://github.com/getify/You-Dont-Know-JSpreface.md"&gt;Preface&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you're looking for the previous &lt;strong&gt;first edition&lt;/strong&gt; books, &lt;a href="https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/README.md"&gt;they can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Premier Sponsor&lt;/h2&gt;
&lt;p&gt;This edition of the &lt;strong&gt;YDKJS&lt;/strong&gt; book series is exclusively sponsored by &lt;a href="https://frontendmasters.com" rel="nofollow"&gt;Frontend Masters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Frontend Masters is the gold standard for top-of-the-line expert training material in frontend-oriented software development. With over 150 courses on all things frontend, this should be your first and only stop for quality video training on HTML, CSS, JS, and related technologies.&lt;/p&gt;

&lt;p&gt;I teach &lt;a href="https://frontendmasters.com/kyle-simpson" rel="nofollow"&gt;all my workshops&lt;/a&gt; exclusively through Frontend Masters. If you like this book content, please check out my video training courses.&lt;/p&gt;
&lt;p&gt;I want…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/getify/You-Dont-Know-JS"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#17-30-seconds-of-code"&gt;
  &lt;/a&gt;
  17. 30 seconds of Code
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/30-seconds"&gt;
        30-seconds
      &lt;/a&gt; / &lt;a href="https://github.com/30-seconds/30-seconds-of-code"&gt;
        30-seconds-of-code
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Short JavaScript code snippets for all your development needs
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://30secondsofcode.org/js/p/1" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYvd69R3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/30-seconds/30-seconds-of-code/logo.png" alt="Logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
30 seconds of code&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Short JavaScript code snippets for all your development needs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Visit &lt;a href="https://30secondsofcode.org" rel="nofollow"&gt;our website&lt;/a&gt; to view our snippet collection.&lt;/li&gt;
&lt;li&gt;Use the &lt;a href="https://30secondsofcode.org/search" rel="nofollow"&gt;Search page&lt;/a&gt; to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.&lt;/li&gt;
&lt;li&gt;Browse the &lt;a href="https://30secondsofcode.org/js/p/1" rel="nofollow"&gt;JavaScript Snippet collection&lt;/a&gt; to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.&lt;/li&gt;
&lt;li&gt;Click on each snippet card to view the whole snippet, including code, explanation and examples.&lt;/li&gt;
&lt;li&gt;You can use the button at the bottom of a snippet card to copy the code to clipboard.&lt;/li&gt;
&lt;li&gt;If you like the project, give it a star. It means a lot to the people maintaining it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Want to contribute?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you want to help us improve, take a…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/30-seconds/30-seconds-of-code"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#18-project-guidelines"&gt;
  &lt;/a&gt;
  18. Project Guidelines
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/elsewhencode"&gt;
        elsewhencode
      &lt;/a&gt; / &lt;a href="https://github.com/elsewhencode/project-guidelines"&gt;
        project-guidelines
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A set of best practices for JavaScript projects
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines./README-zh.md"&gt;中文版&lt;/a&gt;
| &lt;a href="https://github.com/elsewhencode/project-guidelines./README-ja.md"&gt;日本語版&lt;/a&gt;
| &lt;a href="https://github.com/elsewhencode/project-guidelines./README-ko.md"&gt;한국어&lt;/a&gt;
| &lt;a href="https://github.com/elsewhencode/project-guidelines./README-ru.md"&gt;Русский&lt;/a&gt;
| &lt;a href="https://github.com/elsewhencode/project-guidelines./README-pt-BR.md"&gt;Português&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.elsewhen.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RH0l1NbF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/elsewhencode/project-guidelines./images/elsewhen-logo.png" width="180" height="180"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Project Guidelines · &lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0ff11ed110cfa69f703ef0dcca3cee6141c0a8ef465e8237221ae245de3deb3d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="PRs Welcome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;While developing a new project is like rolling on a green field for you, maintaining it is a potential dark twisted nightmare for someone else
Here's a list of guidelines we've found, written and gathered that (we think) works really well with most JavaScript projects here at &lt;a href="https://www.elsewhen.com" rel="nofollow"&gt;elsewhen&lt;/a&gt;
If you want to share a best practice, or think one of these guidelines should be removed, &lt;a href="http://makeapullrequest.com" rel="nofollow"&gt;feel free to share it with us&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/elsewhencode/project-guidelines#git"&gt;Git&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#some-git-rules"&gt;Some Git rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#git-workflow"&gt;Git workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#writing-good-commit-messages"&gt;Writing good commit messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/elsewhencode/project-guidelines#environments"&gt;Environments&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#consistent-dev-environments"&gt;Consistent dev environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#consistent-dependencies"&gt;Consistent dependencies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#dependencies"&gt;Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#structure-and-naming"&gt;Structure and Naming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/elsewhencode/project-guidelines#code-style"&gt;Code style&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#code-style-check"&gt;Some code style guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#enforcing-code-style-standards"&gt;Enforcing code style standards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/elsewhencode/project-guidelines#api"&gt;API&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#api-design"&gt;API design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#api-security"&gt;API security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#api-documentation"&gt;API documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/elsewhencode/project-guidelines#licensing"&gt;Licensing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
1. Git&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/elsewhencode/project-guidelines/images/branching.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tAgzcC9E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/elsewhencode/project-guidelines/images/branching.png" alt="Git"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
1.1 Some Git rules&lt;/h3&gt;

&lt;p&gt;There are a set of rules to keep in mind:&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;

&lt;p&gt;Perform work in a feature branch.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why:&lt;/em&gt;&lt;/p&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/elsewhencode/project-guidelines"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Thanks :)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>github</category>
    </item>
    <item>
      <title>PostgreSQL Uzak Bağlantı Açma</title>
      <author>Ali Orhun Akkirman</author>
      <pubDate>Mon, 24 Jan 2022 04:25:04 +0000</pubDate>
      <link>https://dev.to/aciklab/postgresql-uzak-baglanti-acma-3dpj</link>
      <guid>https://dev.to/aciklab/postgresql-uzak-baglanti-acma-3dpj</guid>
      <description>&lt;p&gt;PostgreSQL sunucusu varsayılan ayarlarla kurulduğunda uzaktan bağlantıya kapalı olarak kurulmaktadır. Sadece kendisi üzerinden localhost(127.0.0.1) üzerinden 5432 portundan haberleşebilmektedir. Bunu tüm ağlar üzerinden veya spesifik ağlar üzerinden erişilecek şekilde açabilirsiniz. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#uzak-eri%C5%9Fime-izin-verilmesi"&gt;
  &lt;/a&gt;
  Uzak erişime izin verilmesi
&lt;/h1&gt;

&lt;p&gt;Uzaktan bağlantıya izin verilmesi için, &lt;strong&gt;/etc/postgresql/14/main/pg_hba.conf&lt;/strong&gt; dosyası içinde aşağıdaki satır düzenlenmesi gerekiyor: (normalde başında diyez var içinde de localhost yazıyor)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;listen_addresses = '*'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#uzak-eri%C5%9Fim-ip-veya-a%C4%9F-belirlenmesi"&gt;
  &lt;/a&gt;
  Uzak erişim IP veya ağ belirlenmesi
&lt;/h1&gt;

&lt;p&gt;Uzaktan bağlantı sağlayacak IP adresi veya IP adreslerinin bulunduğu ağ için &lt;strong&gt;/etc/postgresql/14/main/postgresql.conf&lt;/strong&gt; dosyasının en alt satırlarında bir yere aşağıdaki satır eklenmeli.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;host all all 0.0.0.0/0 md5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu satır eklendiğinde tüm ağlardan erişim sağlanabileceği gibi, güvenlik olarak sadece istenilen IP adresi veya ağ adresi yazılması daha uygun olacaktır.&lt;/p&gt;

&lt;p&gt;Tüm işlemler sonucunda postgresql servisini yeniden başlatmak yetecektir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo systemctl restart postgresql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu adımla birlikte uzaktaki herhangi bir SQL istemcisinden PostgreSQL sunucusuna sorgu atılabilmektedir.&lt;/p&gt;

</description>
      <category>postgres</category>
      <category>remote</category>
    </item>
    <item>
      <title>CSS Funstuff: Animated Halfway Borders</title>
      <author>RolandiXor (Roland L. Taylor)</author>
      <pubDate>Mon, 24 Jan 2022 04:04:06 +0000</pubDate>
      <link>https://dev.to/rolandixor/css-funstuff-animated-halfway-borders-24fp</link>
      <guid>https://dev.to/rolandixor/css-funstuff-animated-halfway-borders-24fp</guid>
      <description>&lt;p&gt;Hi! Been a minute, but I'm back with another CSS tutorial!&lt;/p&gt;

&lt;p&gt;This one will be pretty quick, but should give you a great launch point for extrapolating and creating something special.&lt;/p&gt;

&lt;p&gt;Now you probably know that you can add borders to specific sides of an element, using, for instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.border-top&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wq_9Xw8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xvslpdgwx79utu1ulya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wq_9Xw8V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xvslpdgwx79utu1ulya.png" alt="A screenshot of the result of the above code, showing a grey square, showing a thin white border at the top" width="420" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But what you may not realize, is what happens when you add a very simple additional property: border-radius! Now, maybe this sounds super obvious, but just how cool it is, isn't obvious until you see it in action, so let's do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.border-top-round&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQnTiwyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgwfgge5f4r9hophk0s5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQnTiwyU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgwfgge5f4r9hophk0s5.png" alt="A screenshot of the above code, showing a grey circle with a thin, tapered, white border, at the top" width="445" height="433"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool, isn't it? No?&lt;br&gt;
&lt;em&gt;Well let's make it so!&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#animating-it-all"&gt;
  &lt;/a&gt;
  Animating it all:
&lt;/h2&gt;

&lt;p&gt;If the first bit wasn't all that impressive, maybe adding a little fun and flare should do the trick.&lt;/p&gt;

&lt;p&gt;Check it out!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BltiXtIt6LE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So what's the code for this one? Grab it here (it's free!):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rolandixor.gumroad.com/l/ozppku"&gt;Source Code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>html</category>
      <category>design</category>
    </item>
    <item>
      <title>Enforcing compliance with AWS CDK Aspects</title>
      <author>Wojciech Matuszewski</author>
      <pubDate>Mon, 24 Jan 2022 03:39:08 +0000</pubDate>
      <link>https://dev.to/aws-builders/enforcing-compliance-with-aws-cdk-aspects-1goo</link>
      <guid>https://dev.to/aws-builders/enforcing-compliance-with-aws-cdk-aspects-1goo</guid>
      <description>&lt;p&gt;Getting the security right in applications is tricky. Most developers did not undergo professional security training and are not adept in such topics. At least I know I'm not.&lt;/p&gt;

&lt;p&gt;Luckily, multiple tools can help us achieve a relatively good security posture. &lt;a href="https://snyk.io/"&gt;&lt;em&gt;Snyk&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://codeql.github.com/"&gt;&lt;em&gt;CodeQL&lt;/em&gt;&lt;/a&gt; and &lt;a href="https://www.gitguardian.com/"&gt;&lt;em&gt;GitGuardian&lt;/em&gt;&lt;/a&gt; are good examples.&lt;/p&gt;

&lt;p&gt;In some cases, even a deployment framework can be helpful. This blog post will expand on this topic, looking at how a particular feature of &lt;em&gt;AWS CDK&lt;/em&gt; can help us enforce compliance of various resources we deploy to AWS.&lt;/p&gt;

&lt;p&gt;Enter &lt;em&gt;AWS CDK&lt;/em&gt; Aspects.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The code this blog post is based on lives in &lt;a href="https://github.com/WojciechMatuszewski/compliance-aws-cdk-aspects"&gt;this GitHub repository&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-are-aws-cdk-aspects"&gt;
  &lt;/a&gt;
  What are AWS CDK Aspects
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;AWS CDK&lt;/em&gt; Aspects is a feature of the &lt;em&gt;AWS CDK&lt;/em&gt; framework that allows you to perform various operations on each &lt;em&gt;node&lt;/em&gt; of the &lt;a href="https://docs.aws.amazon.com/cdk/v2/guide/constructs.html#constructs_tree"&gt;&lt;em&gt;AWS CDK Construct tree&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that the Aspects code is invoked at the &lt;a href="https://docs.aws.amazon.com/cdk/v2/guide/apps.html#lifecycle"&gt;&lt;em&gt;prepare phase&lt;/em&gt;&lt;/a&gt; of &lt;em&gt;AWS CDK&lt;/em&gt; application lifecycle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BACQcKhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hacw3cnkm05wi3bqdy7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BACQcKhK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hacw3cnkm05wi3bqdy7f.png" alt="AWS CDK Aspects and the Construct tree" width="880" height="623"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Imagine a scenario where you have to ensure that every &lt;em&gt;AWS S3&lt;/em&gt; bucket in the &lt;em&gt;AWS CDK&lt;/em&gt; application you maintain has the &lt;code&gt;BucketEncryption&lt;/code&gt; property specified according to your organization's needs.&lt;/p&gt;

&lt;p&gt;Instead of going bucket by bucket and applying the correct value for the &lt;code&gt;BucketEncryption&lt;/code&gt; property, one might use &lt;em&gt;AWS CDK Aspects&lt;/em&gt; to programmatically set this property for all buckets deployed by the application.&lt;/p&gt;

&lt;p&gt;With a basic overview of Aspects behind us, let us look at examples next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practical-examples"&gt;
  &lt;/a&gt;
  Practical examples
&lt;/h2&gt;

&lt;p&gt;What follows is a series of examples showcasing the usefulness of &lt;em&gt;AWS CDK&lt;/em&gt; Aspects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enforcing-aws-s3-bucket-encryption"&gt;
  &lt;/a&gt;
  Enforcing AWS S3 bucket encryption
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/s3/"&gt;&lt;em&gt;AWS S3&lt;/em&gt;&lt;/a&gt; is an excellent service. Sadly, when misconfigured, it can be a source of a data breach. There are many stories out there regarding publicly accessible &lt;em&gt;AWS S3&lt;/em&gt; buckets with plain-text files that hold important data.&lt;/p&gt;

&lt;p&gt;Thankfully, with &lt;em&gt;AWS CDK&lt;/em&gt; Aspects, it is possible to &lt;strong&gt;reduce&lt;/strong&gt; the human error factor regarding &lt;em&gt;AWS S3&lt;/em&gt; bucket configuration. The following is an example of ensuring that all the buckets within a &lt;code&gt;Stack&lt;/code&gt; have &lt;code&gt;BucketEncryption&lt;/code&gt; specified.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Aspects&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;aws_s3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;IAspect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aws-cdk-lib&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;IConstruct&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;constructs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UnencryptedBucket&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;unencryptedBucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;aws_s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UnencryptedBucket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/**
       * Per documentation: `Kms` if `encryptionKey` is specified, or `Unencrypted` otherwise.
       * The `undefined` is added for the sake of the example.
       */&lt;/span&gt;
      &lt;span class="na"&gt;encryption&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BucketEncryptionChecker&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;IAspect&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nx"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IConstruct&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;aws_s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CfnBucket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/**
       * Feel free to be more specific in terms of conditions in your code.
       */&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bucketEncryption&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;`bucketEncryption` must be specified.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BucketStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UnencryptedBucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;UnencryptedBucket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bucketStack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BucketStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BucketStack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;Aspects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bucketStack&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BucketEncryptionChecker&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#variable-deletionpolicy"&gt;
  &lt;/a&gt;
  Variable DeletionPolicy
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html"&gt;&lt;code&gt;DeletionPolicy&lt;/code&gt; attribute&lt;/a&gt; instructs &lt;a href="https://aws.amazon.com/cloudformation/"&gt;&lt;em&gt;AWS CloudFormation&lt;/em&gt;&lt;/a&gt; what should happen to the resource when &lt;em&gt;AWS CloudFormation&lt;/em&gt; applies the "DELETE" action to that resource.&lt;/p&gt;

&lt;p&gt;Imagine a scenario where someone removes the definition of a database from the template and pushes that &lt;em&gt;Change Set&lt;/em&gt; to &lt;em&gt;AWS CloudFormation&lt;/em&gt; – without the &lt;code&gt;DeletionPolicy&lt;/code&gt; specified to &lt;code&gt;Retain&lt;/code&gt;, &lt;em&gt;AWS CloudFormation&lt;/em&gt; delete the resource and all the data along with it!&lt;/p&gt;

&lt;p&gt;Conversely, imagine deploying &lt;em&gt;emphermal stacks&lt;/em&gt; onto your development-only AWS account. You, most likely, would want all the resources gone whenever the stack is deleted – in such scenarios having the &lt;code&gt;DeletionPolicy&lt;/code&gt; as &lt;code&gt;Delete&lt;/code&gt; &lt;strong&gt;might&lt;/strong&gt; be a wiser choice.&lt;/p&gt;

&lt;p&gt;The following is an example of using &lt;em&gt;AWS CDK&lt;/em&gt; Aspects to specify the &lt;code&gt;DeletionPolicy&lt;/code&gt; to &lt;code&gt;Delete&lt;/code&gt; for all resources when deploying the stack in a dev-only environment and to &lt;code&gt;Retain&lt;/code&gt; when deploying to a production environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Aspects&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;CfnResource&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;IAspect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;StackProps&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aws-cdk-lib&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;IConstruct&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;constructs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DeletionPolicySetter&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;IAspect&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;policy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="nx"&gt;visit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;IConstruct&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * Nothing stops you from adding more conditions here.
     */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;CfnResource&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;applyRemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;policy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * Your code...
     */&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myStack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MyStack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removalPolicy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DEPLOYMENT_ENV&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DEV&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTROY&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RemovalPolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RETAIN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;Aspects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myStack&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DeletionPolicySetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;removalPolicy&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please be extra careful here. While, &lt;strong&gt;to my best knowledge&lt;/strong&gt;, the change in the &lt;code&gt;DeletionPolicy&lt;/code&gt; is an &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html"&gt;"Update with No Interruption"&lt;/a&gt; the worst thing to do is to forget about setting the &lt;code&gt;DeletionPolicy&lt;/code&gt; to &lt;code&gt;Delete&lt;/code&gt; on resources holding production data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-words"&gt;
  &lt;/a&gt;
  Closing words
&lt;/h2&gt;

&lt;p&gt;I hope that you found the examples helpful. I've been using Aspects in my personal projects for a while now, and I found them very useful.&lt;br&gt;
Found some neat use-case for Aspects? Please share it! I'm always keen on learning new things from the community.&lt;/p&gt;

&lt;p&gt;For more &lt;em&gt;AWS CDK&lt;/em&gt; and serverless content, consider following me on Twitter - &lt;a href="https://twitter.com/wm_matuszewski"&gt;@wm_matuszewski&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for your valuable time.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cdk</category>
      <category>serverless</category>
      <category>security</category>
    </item>
    <item>
      <title>How to Leverage Being an Introvert for Better Content Creation</title>
      <author>Sumudu Siriwardana</author>
      <pubDate>Mon, 24 Jan 2022 02:54:01 +0000</pubDate>
      <link>https://dev.to/sumusiriwardana/how-to-leverage-being-an-introvert-for-better-content-creation-3mnm</link>
      <guid>https://dev.to/sumusiriwardana/how-to-leverage-being-an-introvert-for-better-content-creation-3mnm</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“Introverts don’t shout at the world, they listen!”&lt;br&gt;
-Jayne Thompson.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The day I learned the word “introvert”, I finally understood myself completely. I had spent my entire day reading, researching, and taking every test on introversion. Finally, I understood why I don't fit in with most of my friends, why I enjoy my own company most of the time, and there is nothing wrong with me. &lt;/p&gt;

&lt;p&gt;I grew up in a "culture of personality" where everything is designed to cater to extroverts. For example, we were always encouraged and rewarded for working together, speaking up, or asking questions in schools. Likewise, we were promoted and rewarded for marketing ourselves with outgoing personalities at workplaces. Sometimes, we had to pretend to be extroverts in order to fit into the system. &lt;/p&gt;

&lt;p&gt;Technology and this digital age have empowered introverts to thrive and connect with everyone on their own terms. This is becoming a golden age for us to connect, share, and help others with different communication options while living in our own quiet mind, choosing our own terms. This is why introverts are thriving in content creation. The unique characteristics of introversion help us capture our audience with authentic and insightful content.&lt;/p&gt;

&lt;p&gt;I recently had a very interesting session with &lt;a href="https://twitter.com/FrancescoCiull4"&gt;Francesco Ciulla&lt;/a&gt; about &lt;a href="https://www.youtube.com/watch?v=zUwB_imVjmg"&gt;introverts and content creations&lt;/a&gt;. During this session, one of the questions that came up was, &lt;strong&gt;being an introvert makes us better at content creation or not&lt;/strong&gt;. So let's dive into some of the unique strengths that help introverts excel in content creation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introverts-are-good-listeners"&gt;
  &lt;/a&gt;
  Introverts are good listeners
&lt;/h2&gt;

&lt;p&gt;We introverts always prefer to listen more than talk. We only voice our opinion when it's necessary. But, unfortunately, most of the time, most people never truly listen anymore. Instead, they wait to react immediately or voice their opinion. &lt;/p&gt;

&lt;p&gt;When we listen to our audience deeply, we can genuinely understand their needs and problems. As a result, we'll be more empathetic and closer to their minds. This helps us customize our content with different perspectives providing multiple solutions for their problems. &lt;/p&gt;

&lt;p&gt;The same way you listen in real life, start listening to conversations on the internet. Find the social media platforms, forums, content platforms where your relevant topics are popular and observe the discussions. This could be Twitter, Reddit, Instagram, TikTok, or any other platform that you frequently visit. And use your superpowers of listening and observing skills to notice the things that others might not notice. &lt;/p&gt;

&lt;p&gt;Once you patiently listen and understand each perspective, you can develop a solution for these problems and share. When your audience realizes that you listen to them and provide solutions for their problems, they start trusting you. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introverts-get-straight-to-the-point"&gt;
  &lt;/a&gt;
  Introverts get straight to the point
&lt;/h2&gt;

&lt;p&gt;We introverts hate small talk so much and unnecessary details. So we always find ways to authentically communicate and hold attention throughout the stories that we share. &lt;/p&gt;

&lt;p&gt;In today's world, everyone has a very short attention span. Reading through long paragraphs or listing to endless details will quickly discourage someone from reading our articles or listening to our podcasts. &lt;/p&gt;

&lt;p&gt;Use this superpower to structure your content with creative yet straightforward language that your audience will not have to spend much time to get to the important points and a summary of your message that you want to communicate. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introverts-love-helping-others"&gt;
  &lt;/a&gt;
  Introverts love helping others
&lt;/h2&gt;

&lt;p&gt;Since we are deep listeners and more empathetic, we tend to help others. This makes us want to share our knowledge with others and help them genuinely. &lt;/p&gt;

&lt;p&gt;Professionally or personally, you can create authentic and valuable content for your audience to share your knowledge and help them rather than providing redundant content for the sake of content creations. &lt;/p&gt;

&lt;p&gt;For us, it's not about clickbait. It's about the real value that we add to our content to help someone! &lt;/p&gt;

&lt;p&gt;Don't be shy or scared to share your thoughts if you think that you can help someone with even a small word. Your readers will appreciate your support. But think twice whether you are adding real value to your content. If you really want to help, the value matters. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introverts-dont-want-to-be-in-the-spotlight"&gt;
  &lt;/a&gt;
  Introverts don't want to be in the spotlight
&lt;/h2&gt;

&lt;p&gt;As introverts, we never care about being in the spotlight. Instead, we give credit to our teams or shift the attention to our work. &lt;/p&gt;

&lt;p&gt;So when we create content, we never shift the focus to ourselves. This helps us win the trust of our audience and make them listen to us. &lt;/p&gt;

&lt;p&gt;Be more mindful when you are creating content. Always think about the purpose and the audience when you are creating content. The more you understand your audience and the purpose, the easier it is to shift the focus and truly serve the purpose of their needs. &lt;/p&gt;

&lt;p&gt;If you use storytelling as your content strategy, avoid gold plating and be authentic. Shift the focus of your story for your audience's need rather than highlighting yourself or the product too much. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introverts-take-time-to-react"&gt;
  &lt;/a&gt;
  Introverts take time to react
&lt;/h2&gt;

&lt;p&gt;As introverts, we like to process information before reacting to anything asap. So we usually don't react to any comments fast without processing the data and having a solid answer. This helps us to win our audience's trust in our knowledge. &lt;/p&gt;

&lt;p&gt;Also, this quality is beneficial when dealing with critics and negativity. We can take time to process our feeling and thoughts carefully and decide whether to react or not. &lt;/p&gt;

&lt;p&gt;Introvert or not, sometimes you can be very sensitive, but when you come across negativity and trolls, it's better to avoid engagement and not take it personally. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introverts-enjoy-solitude"&gt;
  &lt;/a&gt;
  Introverts enjoy solitude
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Without great solitude, no serious work is possible - Pablo Picasso&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For us introverts, solitude is the source of our energy and quality work! &lt;/p&gt;

&lt;p&gt;We get our most creative ideas, think deeply, and be our authentic selves when we are alone and away from the noisy world. &lt;/p&gt;

&lt;p&gt;It's important to listen to your readers and understand them, but when you create and present your content, you need to have your own opinion and be authentic to win their trust. &lt;/p&gt;

&lt;p&gt;This means understanding yourself, what you believe in, what you stand for. This is the time we can use to understand ourselves, connect with our minds, and find our authentic voice. &lt;/p&gt;

&lt;p&gt;Dedicate this time in your calendar for deep thinking and content creation so that you will start using this time as a habit. It will help you avoid procrastination and be consistent with your content creations. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GW14CBsD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642940197381/HbOS19JBC.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GW14CBsD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642940197381/HbOS19JBC.jpeg" alt="photo-1504805572947-34fad45aed93.jpeg" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@clarktibbs"&gt;Clark Tibbs&lt;/a&gt; from &lt;a href="https://unsplash.com/photos/oqStl2L5oxI"&gt;Unsplash&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Technology has empowered us introverts and facilitated new communication platforms to thrive with our unique strengths. Now it's time for us to understand our strengths, leverage them to create better content, and thrive as content creators! &lt;/p&gt;

&lt;p&gt;I hope this post helps you understand your own strengths and how to use them to create better content.  If you have any more things to add to these qualities, I would love to hear from you 😊&lt;/p&gt;

&lt;p&gt;Feel free to connect with me on &lt;a href="https://twitter.com/sumusiriwardana"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/sumudusiriwardana/"&gt;LinkedIn&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>writing</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Build, deploy and host your Node.js-express application for Free with Utopiops</title>
      <author>mohsen</author>
      <pubDate>Mon, 24 Jan 2022 02:27:36 +0000</pubDate>
      <link>https://dev.to/mohsenkamrani/build-deploy-and-host-your-nodejs-express-application-for-free-with-utopiops-14o6</link>
      <guid>https://dev.to/mohsenkamrani/build-deploy-and-host-your-nodejs-express-application-for-free-with-utopiops-14o6</guid>
      <description>&lt;p&gt;As a software developer or a software development team, the most important thing for you is building quality software, shipping it and getting feedback from your customers. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.utopiops.com"&gt;Utopiops&lt;/a&gt; (utopiops.com) is a new player in town that aims to solve the problem uniquely by giving you a &lt;strong&gt;complete ecosystem&lt;/strong&gt; that supports you &lt;strong&gt;entire platform&lt;/strong&gt; from build, deployment and hosting your applications to monitoring the platform, incident reports and integrations with issue tracking systems.&lt;/p&gt;

&lt;p&gt;Utopiops also supports Fully-managed and Managed applications. The Fully-managed applications are hosted on Utopiops cloud platform, while Managed applications are hosted on your own cloud accounts.&lt;/p&gt;

&lt;p&gt;In his post I show you how to host your applications using Fully-managed applications on Utopiops for free.&lt;/p&gt;

&lt;p&gt;To do so, I have implemented a simple node application with express framework along with a typical Dockerfile.&lt;/p&gt;

&lt;p&gt;This is how &lt;code&gt;server.js&lt;/code&gt; looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello Utopiops!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is listening on port &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is my Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM node:16

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm ci --only=production

COPY . .

EXPOSE 3000

CMD [ "node", "server.js" ]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I also always have &lt;code&gt;.dockerignore&lt;/code&gt; file in my repositories so I avoid bloating my docker images with unnecessary or unwanted files.&lt;/p&gt;

&lt;p&gt;If you're wondering what it does, it just acts similar to gitignore and simply tell you Dockerfile to ignore those files/directories.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find all these files in the repository &lt;a href="https://github.com/mkamrani/nodejs-express-deployed-on-utopiops"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Before we begin the deployment you need to create an account on Utopiops if you already haven't done that before, by registering and verifying your email.&lt;/p&gt;

&lt;p&gt;Now we create a &lt;code&gt;dockerized&lt;/code&gt; application&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyUGtz5U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989419231/6Sk6sOITL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyUGtz5U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989419231/6Sk6sOITL.png" alt="Screen Shot 2022-01-24 at 12.56.53 pm.png" width="880" height="200"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we choose the repository we have stored our code:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8CwacqGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989612845/-DF8cRdsR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8CwacqGM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989612845/-DF8cRdsR.png" alt="Screen Shot 2022-01-24 at 1.00.08 pm.png" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm using Github for this example, but you can also use Gitlab and Bitbucket too.&lt;/p&gt;

&lt;p&gt;Finally just git your application a name, set the git branch, the port your application is listening on, and an endpoint that can be used as health check. Remember that health-check path is just any endpoint that returns a 2xx response to an unauthorized HTTP GET request.&lt;br&gt;
You can also set the environment variables if you like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PUbMUD-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989697441/5W0AMyzlD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PUbMUD-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989697441/5W0AMyzlD.png" alt="Screen Shot 2022-01-24 at 1.01.33 pm.png" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right away the built-in CICD on Utopiops is set up and starts building and deploying your application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UdxGnEi1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989870446/7eVGwf2zi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UdxGnEi1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989870446/7eVGwf2zi.png" alt="Screen Shot 2022-01-24 at 1.04.24 pm.png" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see the build logs live as they happen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LO5egvaa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989942294/dq7PVObDa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LO5egvaa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989942294/dq7PVObDa.png" alt="Screen Shot 2022-01-24 at 1.05.37 pm.png" width="527" height="825"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And in a just few seconds your application is available (for this example it took 3 seconds to be precise)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pbOKTXcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989976254/D5oAqnJsc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pbOKTXcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642989976254/D5oAqnJsc.png" alt="Screen Shot 2022-01-24 at 1.06.12 pm.png" width="880" height="252"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that by default HTTPS is provided for you application, just the certificate takes a few minutes to be effective, but guess what! We're working on it to reduce that to few seconds as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l-ZmyafC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642990041364/is2VI2MGs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l-ZmyafC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642990041364/is2VI2MGs.png" alt="Screen Shot 2022-01-24 at 1.07.14 pm.png" width="684" height="102"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Worth mentioning, any time you make a change to your target branch, the new version of your application is built and deployed right away.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#final-note"&gt;
  &lt;/a&gt;
  Final note
&lt;/h2&gt;

&lt;p&gt;We're a very young startup with huge goals in our mind. You can be part of the first users who get to know about our features and our journey.&lt;/p&gt;

&lt;p&gt;Please join our family by joining our &lt;a href="https://discord.gg/WEWGuwkWeF"&gt;discord channel&lt;/a&gt;, following us on &lt;a href="https://twitter.com/utopiops"&gt;Twitter&lt;/a&gt;, and using our service. We have a generous hobby plan!&lt;/p&gt;

&lt;p&gt;Please leave a comment if you have any questions or even want to see a private demo!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>cicd</category>
      <category>cloud</category>
      <category>node</category>
    </item>
    <item>
      <title>How to make a link preview 🤩</title>
      <author>Steve Yonkeu</author>
      <pubDate>Mon, 24 Jan 2022 01:35:05 +0000</pubDate>
      <link>https://dev.to/yokwejuste/how-to-make-a-link-preview-2fnf</link>
      <guid>https://dev.to/yokwejuste/how-to-make-a-link-preview-2fnf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction 😊
&lt;/h2&gt;

&lt;p&gt;Today we are diving into a particularly interesting program. We will be discussing link preview.&lt;/p&gt;

&lt;p&gt;For long ago I've been noticing on some social media and apps a small preview of what awaits us in case we click or decide to follow the link, and others not having anything to preview. This has caused a set of variations on the different aspects of this link preview. Without turning around the boring story, let's go through our program.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-link-preview"&gt;
  &lt;/a&gt;
  What is a link preview 🤔
&lt;/h2&gt;

&lt;p&gt;Whenever on social media you add a URL, or when you receive an email message with a URL in the body, you'll see a rich preview that includes a link title, thumbnail image, domain, and description of the link. This is called a link &lt;strong&gt;preview&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Below is a clear example of such.&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fbxPzN8j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642981706422/sch3CcsXG.png" alt="Image.png" width="880" height="495"&gt;&lt;br&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#history-of-the-link"&gt;
  &lt;/a&gt;
  History of the link🧓
&lt;/h2&gt;

&lt;p&gt;In 2010, Facebook launched the Open Graph protocol, which is now managed by the Open Web Foundation. The main purpose is easier integration between Facebook and other websites. The Open Graph Protocol allows controlling what information is used when a website is shared. If websites want to use Open Graph Protocol, they need to have Open Graph meta tags in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; part of the website’s code. Later run some other platforms such as &lt;a href="https://linkedin.com/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://twitter.com"&gt;Twitter&lt;/a&gt; gradually started following the idea.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-is-it-implemented"&gt;
  &lt;/a&gt;
  How is it implemented? 🥲
&lt;/h2&gt;

&lt;p&gt;For all my fellow HTML programmers and web development newbies not aware of how powerful the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag together with &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; are. &lt;br&gt;
The implementation of our cute link previews is done using this.&lt;/p&gt;

&lt;p&gt;Below are the following Open Graph attributes we'll use in generating a web link preview.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; &lt;strong&gt;Open Graph Title&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This tag has no restrictions as concerned with the words count works the same as the meta &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tag. It allows you to define the content’s title. If Facebook doesn’t find the &lt;code&gt;og: title&lt;/code&gt; tag, it uses the meta &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; instead and for Twitter, we use &lt;code&gt;twitter: title&lt;/code&gt; This tag is very important because &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; is usually shown in bold.&lt;/p&gt;

&lt;p&gt;Example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;head&amp;gt;
      &amp;lt;meta name="title" 
            content="Yokwejuste's Portfolio"&amp;gt;
           ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; &lt;strong&gt;Open Graph Description&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This tag is again similar to the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag description. This is where you describe the website’s content. Similar rules apply to this tag as for the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tag. If a social network robot cannot find the &lt;code&gt;og: description&lt;/code&gt; tag, it uses meta description and there is no limit on the number of characters. In this case, you should use around 200 letters.&lt;/p&gt;

&lt;p&gt;Examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;head&amp;gt;
      &amp;lt;meta name="description" 
            content="I wanna leave in the open-source way!😅"&amp;gt;
           ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; &lt;strong&gt;Open Graph Image&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An image is probably the most eye-catching element in the link preview. You can define an image with the &lt;code&gt;og: image&lt;/code&gt; title. Recommended resolution is 1200 pixels x 627 pixels (1.91/1 ratio) and image size shouldn’t exceed 5MB.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;head&amp;gt;
      &amp;lt;meta property="og:image" 
            content="https://avatars.githubusercontent.com/u/71908316?v=4"&amp;gt;
          ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; &lt;strong&gt;Open Graph Url&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This tag defines the canonical URL for your page. URL provided is not shown on the Facebook newsfeed, only the domain is visible.&lt;/p&gt;

&lt;p&gt;A complete list of &lt;code&gt;og&lt;/code&gt; tags available can be found on the &lt;a href="https://ogp.me/"&gt;Open Graph website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;head&amp;gt;
      &amp;lt;meta property="og:url" content="https://go-records.me"&amp;gt;
     ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#other-minor-raw-og-endraw-tags-include-"&gt;
  &lt;/a&gt;
  Other minor &lt;code&gt;og&lt;/code&gt; tags include :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;og: audio&lt;/code&gt;: A URL to an audio file to accompany this object.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;g: description&lt;/code&gt;: A one to two-sentence description of your object.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;og: determiner&lt;/code&gt;: The word that appears before this object's title in a sentence. An 
enum of (a, an, the, " ", auto). If auto is chosen, the consumer of your data should 
choose between "a" or "an". Default is " " (blank).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;og: locale&lt;/code&gt;: The locale these tags are marked up in. Of the format 
language_TERRITORY. Default is en_US.&lt;/li&gt;
&lt;li&gt;`og:locale: alternate: An array of other locales this page is available in.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;og:site_name&lt;/code&gt;: If your object is part of a larger website, the name should be displayed for the overall site. e.g., "IMDb".
og:video: A URL to a video file that complements this object.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion ✋
&lt;/h2&gt;

&lt;p&gt;After going through this article for sure you will consider doing a preview for your website or customer's product owner.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>news</category>
      <category>webdev</category>
      <category>link</category>
    </item>
    <item>
      <title>Question Mark (?) Operators ASAP</title>
      <author>ayubf</author>
      <pubDate>Mon, 24 Jan 2022 00:58:22 +0000</pubDate>
      <link>https://dev.to/ayubf/question-mark-operators-asap-316d</link>
      <guid>https://dev.to/ayubf/question-mark-operators-asap-316d</guid>
      <description>&lt;p&gt;    If you've ever used conditionals in your code you've seen &lt;code&gt;if&lt;/code&gt; statements, and if you've seen &lt;code&gt;if&lt;/code&gt; statements you've seen them nested several layers deep. In your personal project this could be simply annoying and cause problems down the road but in production code this can be really problematic. &lt;/p&gt;

&lt;p&gt;    The ternary operator, &lt;code&gt;?:&lt;/code&gt;, is one Question Mark operator and a feature in some programming languages that makes conditional statemnts cleanier and easier to read. The basic syntax goes like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In use this would look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this snippet, &lt;code&gt;foo&lt;/code&gt; is 1, since the condition is &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;true&lt;/code&gt; is (obviously) a truthy value.&lt;/p&gt;

&lt;p&gt;If you're not sure what truthy/falsy values are just think of it this way:&lt;/p&gt;

&lt;p&gt;0, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, empty strings, arrays, objects etc are falsy. All other values are truthy.&lt;/p&gt;

&lt;p&gt;If an expressions result is a falsy value then the statement itself is falsy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a falsy statement, because it returns &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In this article I'll teach you how to use Question Mark operators, and their uses in ES2020.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usages"&gt;
  &lt;/a&gt;
  Usages
&lt;/h2&gt;



&lt;h3&gt;
  &lt;a href="#ternary-operator-raw-endraw-"&gt;
  &lt;/a&gt;
  Ternary Operator (&lt;code&gt;?&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;The first implementation of the &lt;code&gt;?&lt;/code&gt; in JavaScript is the simplest one, the one I showed at the beginning of the article, the ternary operator (&lt;code&gt;?:&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;conditon&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the condition here is true, then the first value after the &lt;code&gt;?&lt;/code&gt; is either assigned or called.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#nullish-coalescingassignment-raw-endraw-"&gt;
  &lt;/a&gt;
  Nullish Coalescing/Assignment (&lt;code&gt;??&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;The next implementation is the &lt;code&gt;??&lt;/code&gt; or nullish operator, which is used in Nullish Coalescing.&lt;/p&gt;

&lt;p&gt;Nullish coalescing looks something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;    &lt;code&gt;value&lt;/code&gt; will become &lt;code&gt;true&lt;/code&gt;. You may be wondering now what's the difference between this and the Logical Or operator (&lt;code&gt;||&lt;/code&gt;)? The &lt;code&gt;||&lt;/code&gt; operator worked well but a problem a lot of people run into sometimes is that it considered values like empty compound types (&lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;""&lt;/code&gt;) and 0 as falsy so the need for a logical operator that only considered &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; as falsy naturally arose.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#logical-nullish-assignment-raw-endraw-"&gt;
  &lt;/a&gt;
  Logical Nullish Assignment (&lt;code&gt;??=&lt;/code&gt;)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;??=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The third question mark operator is called the Logical Nullish assignment operator, &lt;code&gt;??=&lt;/code&gt;. The gist of this operator is to assign a value &lt;code&gt;y&lt;/code&gt; to a value &lt;code&gt;x&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, and only if it is.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;??=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// val is now 10, because it was null before&lt;/span&gt;


&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;??=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// num stays as 0, because 0 is neither undefined nor null&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;egg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;egg&lt;/span&gt; &lt;span class="o"&gt;??=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scrambled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// egg is now "scrambled" becuase uninitialized variables are undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#optional-chaining-raw-endraw-"&gt;
  &lt;/a&gt;
  Optional Chaining (&lt;code&gt;?.&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;    The last and latest question mark operator is a very useful feature. It allows us to access a value on the value of an object only if it exists. It gets rid of &lt;code&gt;if&lt;/code&gt; statements and &lt;code&gt;try..catch&lt;/code&gt; statements .In the event of a &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; value being returned, there is no error thrown, the value is just &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;John&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;parents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jane&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;John&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// =&amp;gt; "John"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;John&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bestFriend&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// =&amp;gt; undefined&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;John&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bestFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// =&amp;gt; Error: Cannot read properties of undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#use-in-other-languages"&gt;
  &lt;/a&gt;
  Use in Other languages
&lt;/h3&gt;

&lt;p&gt;    Question mark operators exist in a large number of programming languages, as ternary operations are originally a mathematical concept, these are some examples:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Ternary or similar expression&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C++, Java, JavaScript, C#, C, Bash, Ruby, Swift, PHP&lt;/td&gt;
&lt;td&gt;&lt;code&gt;condition ? if true : else;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;&lt;code&gt;value if conditon else false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rust&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if condition {true} else {false}&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if (condition) true else false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go&lt;/td&gt;
&lt;td&gt;No implimentation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Haskell&lt;/td&gt;
&lt;td&gt;&lt;code&gt;if condition then true else false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;    Now with your new-found knowledge of the question mark operators you can go impress your friends, colleagues, teammates or classmates, but don't overdo it. Question mark operators are prone to misuse and can make code unreadable if overused, so don't try to force it in whenever you can.&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator"&gt;MDN Docs: Conditional (ternary) operator&lt;/a&gt; &lt;br&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator"&gt;MDN Docs: Nullish coalescing operator (??)&lt;/a&gt; &lt;br&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_nullish_assignment"&gt;MDN Docs: Logical nullish assignment (??=)&lt;/a&gt; &lt;br&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"&gt;MDN Docs: Optional chaining (?.)&lt;/a&gt; &lt;br&gt;&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/%3F:"&gt;Wikipedia: ?:&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>functional</category>
    </item>
    <item>
      <title>10 GitHub Repositories You Should Know</title>
      <author>Seth Addo</author>
      <pubDate>Mon, 24 Jan 2022 00:24:45 +0000</pubDate>
      <link>https://dev.to/seths10/10-github-repositories-you-should-know-1ce7</link>
      <guid>https://dev.to/seths10/10-github-repositories-you-should-know-1ce7</guid>
      <description>&lt;p&gt;In this article, I have curated a list of GitHub repositories that contains interesting Open Source projects on the internet. There are other resources of all kinds: ranging from basics of API's, roadmaps, and to projects ideas and more. Check the list below;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-developer-roadmap"&gt;
  &lt;/a&gt;
  1. Developer Roadmap
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#github-184k"&gt;
  &lt;/a&gt;
  GitHub⭐: 184K+
&lt;/h4&gt;

&lt;p&gt;Need some advice for getting started to your developer journey? then this &lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;repository&lt;/a&gt; will guide you through. It has all the technologies you need to know if you want to become a Frontend or Backend or DevOps Engineer. It has all the alternative technologies from which can choose whatever suits your need or comfort.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-free-programming-books"&gt;
  &lt;/a&gt;
  2. Free Programming Books
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#github-184k"&gt;
  &lt;/a&gt;
  GitHub⭐: 184K+
&lt;/h4&gt;

&lt;p&gt;Even though it has "Books" in its name, it offers a lot more than that. It contains sections of free online courses, interactive programming resources, problem sets and competitive programming, programming playgrounds and podcasts and cheat sheets for almost every programming language.&lt;/p&gt;

&lt;p&gt;But has a major collection of programming books which makes it an "Awesome" collection. &lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-ossu-computer-science"&gt;
  &lt;/a&gt;
  3. OSSU Computer Science
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#github-84k"&gt;
  &lt;/a&gt;
  GitHub⭐: 84K+
&lt;/h4&gt;

&lt;p&gt;If you don't have a computer science background or degree and want the equivalent knowledge same as a Computer Science degree then this repository is for you. It's for those who want a proper, well-rounded grounding in concepts fundamental to all computing disciplines. It offers all the resources to help you become a self-taught computer science graduate equivalent and has a worldwide community of learners.&lt;br&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-awesome"&gt;
  &lt;/a&gt;
  4. Awesome
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#github-150k"&gt;
  &lt;/a&gt;
  GitHub⭐: 150K+
&lt;/h4&gt;

&lt;p&gt;As the name describes it has an Awesome lists of all kinds of interesting topics ranging from computer science to &lt;strong&gt;media&lt;/strong&gt;, from &lt;strong&gt;gaming&lt;/strong&gt; to &lt;strong&gt;business&lt;/strong&gt; and the list goes on.&lt;br&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#5-public-apis"&gt;
  &lt;/a&gt;
  5. Public API's
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#github-184k"&gt;
  &lt;/a&gt;
  GitHub⭐: 184K+
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/public-apis/public-apis"&gt;Public Apis&lt;/a&gt; has a collective list of all the free &lt;strong&gt;API's&lt;/strong&gt; available on the internet to use in your personal or professional projects. It offers a wide range of Application Programming interfaces (APIs) such as &lt;code&gt;business&lt;/code&gt;, &lt;code&gt;anime&lt;/code&gt;, &lt;code&gt;animals&lt;/code&gt;, &lt;code&gt;news&lt;/code&gt;, &lt;code&gt;finance&lt;/code&gt;, &lt;code&gt;games&lt;/code&gt;, and more.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#6-tech-interview-handbook"&gt;
  &lt;/a&gt;
  6. Tech Interview Handbook
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#github-50k"&gt;
  &lt;/a&gt;
  GitHub⭐: 50K+
&lt;/h4&gt;

&lt;p&gt;It has a variety of material regarding How to prepare for coding interviews, Good questions to ask your interviewer, Helpful tips on &lt;strong&gt;resume&lt;/strong&gt;, and many more.&lt;br&gt;
&lt;a href="https://github.com/yangshun/tech-interview-handbook"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#7-awesome-repos"&gt;
  &lt;/a&gt;
  7. Awesome Repos
&lt;/h3&gt;

&lt;p&gt;It has a number of resourceful repositories packed in just one place. All you have to do is just visit this repository and that's it.&lt;br&gt;
&lt;a href="https://github.com/pawelborkar/awesome-repos"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#8-build-your-own-x"&gt;
  &lt;/a&gt;
  8. Build Your Own X
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#github-100k"&gt;
  &lt;/a&gt;
  GitHub⭐: 100K+
&lt;/h4&gt;

&lt;p&gt;If you are a person who believes in the principle of "Learning by doing" then this repository has the potential of becoming your daily stop at GitHub. It has links to the resources which help you build your own &lt;code&gt;Cryptocurrency&lt;/code&gt;, &lt;code&gt;Database&lt;/code&gt;, &lt;code&gt;Bots&lt;/code&gt;, &lt;code&gt;BitTorrent Clients&lt;/code&gt;, and many more.&lt;br&gt;
&lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#9-coding-interview-university"&gt;
  &lt;/a&gt;
  9. Coding Interview University
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#github-160k"&gt;
  &lt;/a&gt;
  GitHub⭐: 160K+
&lt;/h4&gt;

&lt;p&gt;Coding Interview University has a multi-month study plan to become a software engineer for a large tech company like &lt;code&gt;Google&lt;/code&gt;, &lt;code&gt;Amazon&lt;/code&gt;, &lt;code&gt;Facebook&lt;/code&gt;, &lt;code&gt;Apple&lt;/code&gt;, or any other software company. It offers advice on how to study to become a reliability engineer or operations engineer. It also has links to the flashcards for quickly brushing up your knowledge and stay updated originally created by the author of the repository who landed a job at Amazon. And there are much more success stories like that.&lt;br&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#10-design-resources-for-developers"&gt;
  &lt;/a&gt;
  10. Design Resources for Developers
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#github-25k"&gt;
  &lt;/a&gt;
  GitHub⭐: 25K+
&lt;/h4&gt;

&lt;p&gt;This repository has a curated list of design and UI resources from &lt;code&gt;stock photos&lt;/code&gt;, &lt;code&gt;web templates&lt;/code&gt;, &lt;code&gt;CSS frameworks&lt;/code&gt;, &lt;code&gt;UI libraries&lt;/code&gt;, &lt;code&gt;tools&lt;/code&gt; and much more, available for free to use in your projects and applications.&lt;br&gt;
&lt;a href="https://github.com/bradtraversy/design-resources-for-developers"&gt;Link To Repository&lt;/a&gt;&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;Thanks for reading this article. Follow me on &lt;a href="https://www.twitter.com/set_addo"&gt;twitter&lt;/a&gt;: @set_addo.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Follow me on:
Twitter: @set_addo
LinkedIn: Seth Addo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>productivity</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>JavaScript memory model demystified</title>
      <author>Zhenghao He</author>
      <pubDate>Sun, 23 Jan 2022 23:32:17 +0000</pubDate>
      <link>https://dev.to/he_zhenghao/javascript-memory-model-demystified-3ma1</link>
      <guid>https://dev.to/he_zhenghao/javascript-memory-model-demystified-3ma1</guid>
      <description>&lt;p&gt;I admit this title is a little clickbaity. Maybe a more accurate title should be “the JavaScript memory model that is implemented in the current version of V8 demystified (with some oversimplification)”. &lt;/p&gt;

&lt;p&gt;There are a wealth of resources online such as this claiming that in JavaScript primitive values are allocated on the stack while objects are allocated on the heap. This idea is false, at least this is not how the language is implemented in the majority of JavaScript engines I have seen. I am typing in this post so that I can link to it and save myself some time in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;All JavaScript values are allocated on the heap accessed by pointers no matter if they are objects, arrays, strings or numbers (except for small integers i.e. &lt;code&gt;smi&lt;/code&gt; due to &lt;a href="%5Bhttps://v8.dev/blog/pointer-compression#value-tagging-in-v8%5D(https://v8.dev/blog/pointer-compression#value-tagging-in-v8)"&gt;pointer tagging&lt;/a&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The stack only stores temporary, function-local and small variables (mostly pointers) and that's largely unrelated to JavaScript types.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#they-are-all-implementation-details"&gt;
  &lt;/a&gt;
  They are all implementation details
&lt;/h2&gt;

&lt;p&gt;First of all, the JavaScript language itself doesn’t mandate memory layout. You cannot find the term “Stack” or “Heap” used in the ECMAScript specification. In fact, I doubt you can find anything about memory layout in any language specification - even for C++, which is considered much more low-level than JavaScript, does not have the terms defined in &lt;a href="https://en.cppreference.com/w/cpp/language/storage_duration"&gt;its standard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These are considered implementation details. Asking how JavaScript handles memory allocation is like asking if JavaScript is a compiled or interpreted language. It is a &lt;strong&gt;wrong&lt;/strong&gt; question. What is interpreted or compiled is not the languages but instead implementations - we can easily build simple AST interpreter for JavaScript, or a Stack-based virtual machine, or static LLVM compiler to native code.&lt;/p&gt;

&lt;p&gt;However being an implementation detail doesn’t mean it is a myth. You can trivially check this yourself by doing memory profiling in Chrome DevTools. If you want the ground truth, you can always look up the source code for the VM - at least for V8 it is all open-sourced. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everything-is-on-the-heap"&gt;
  &lt;/a&gt;
  Everything is on the heap
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Again, all of the examples in this post are based on V8’s implementation. The V8 source code is from commit Id &lt;a href="https://chromium.googlesource.com/v8/v8/+/a684fc4c927940a073e3859cbf91c301550f4318"&gt;a684fc4c927940a073e3859cbf91c301550f4318&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Contrary to common belief, primitive values are also allocated on the heap, just like objects. I covered how JavaScript values are implemented in V8 in details &lt;a href="https://www.zhenghao.io/posts/javascript-variables"&gt;in this post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don’t want to really dig into V8’s source code, there is an easy way that I can prove this to you.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First use &lt;code&gt;node --v8-options | grep -B0 -A1 stack-size&lt;/code&gt; to get the default size of stack in V8 on your machine. For me it outputs 864 KB.&lt;/li&gt;
&lt;li&gt;Create a JavaScript file. Create a giant string and use &lt;code&gt;process.memoryUsage().heapUsed&lt;/code&gt; to get the size of the heap used.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a script that does that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;memoryUsed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mbUsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;memoryUsage&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;heapUsed&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Memory used: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;mbUsed&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; MB`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;before&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;memoryUsed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bigString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bigString&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// need to use the string otherwise the compiler would just optimize it into nothingness&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;after&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;memoryUsed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The size of the heap memory used before we create the string was 3.78 MB.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dTWOqhBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/before.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dTWOqhBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/before.png" alt="alt" width="880" height="97"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After I create a string of a size of 10 MB, the heap memory used increases to 13.78 MB&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jpuv86iq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/after.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jpuv86iq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/after.png" alt="alt" width="620" height="68"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The difference between the before and after is precisely 10 MB. See the stack size we printed out before, it was only 864 KB - there is no way the stack can store such a string.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#primitive-values-are-mostly-reused"&gt;
  &lt;/a&gt;
  Primitive values are (mostly) reused
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#string-interning"&gt;
  &lt;/a&gt;
  String interning
&lt;/h3&gt;

&lt;p&gt;A quick question: for our 10 MB string created by &lt;code&gt;'x'.repeat(10*1024*1024)&lt;/code&gt;, does an assignment (e.g. &lt;code&gt;const anotherString = bigString&lt;/code&gt;) duplicate the string in memory so that we end up with 20 MB in total allocated on the heap? &lt;/p&gt;

&lt;p&gt;The answer is no - there is no duplicate strings allocated. You can easily verify this by adding &lt;code&gt;const anotherString  = bigString&lt;/code&gt; after the declaration of &lt;code&gt;bigString&lt;/code&gt; and check to see if the heap memory size increases or not. &lt;/p&gt;

&lt;p&gt;You can also check this via memory profiling using Chrome DevTools.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNb9UZdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/memoryProfile.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNb9UZdN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/memoryProfile.png" alt="alt" width="880" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a html file with the following snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'btn'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;btn&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;  
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;string1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;string2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;foo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/body&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the memory profiling and click on the button to create two variables with the same string value &lt;code&gt;foo&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gLwaFzXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/onlyOneString.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLwaFzXM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/onlyOneString.png" alt="alt" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will see there is only one heap string allocated.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Chrome DevTools do not show where the pointer resides in memory but rather where it points to. Also it does not represent the raw memory address. If you want to inspect the actual memory, you need to use a native debugger.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is called &lt;a href="https://en.wikipedia.org/wiki/String_interning"&gt;string interning&lt;/a&gt;. Inside V8, this is implemented via &lt;code&gt;StringTable&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;explicit&lt;/span&gt; &lt;span class="nf"&gt;StringTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Isolate&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;isolate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;StringTable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Capacity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;NumberOfElements&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Find string in the string table. If it is not there yet, it is&lt;/span&gt;
  &lt;span class="c1"&gt;// added. The return value is the string found.&lt;/span&gt;
  &lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;LookupString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Isolate&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;isolate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Find string in the string table, using the given key. If the string is not&lt;/span&gt;
  &lt;span class="c1"&gt;// there yet, it is created (by the key) and added. The return value is the&lt;/span&gt;
  &lt;span class="c1"&gt;// string found.&lt;/span&gt;
  &lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;StringTableKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;IsolateT&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;LookupKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IsolateT&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;isolate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StringTableKey&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#oddballs"&gt;
  &lt;/a&gt;
  Oddballs
&lt;/h2&gt;

&lt;p&gt;There are a special subset of primitive values called &lt;a href="https://chromium.googlesource.com/v8/v8/+/master/src/builtins/base.tq#500"&gt;Oddball&lt;/a&gt; in V8.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Null&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Oddball&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Undefined&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Oddball&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Oddball&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;False&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Oddball&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;Oddball&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;EmptyString&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Boolean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;They are pre-allocated on the heap by V8 before the first line of your script runs - it doesn’t matter if your JavaScript program actually uses them down the road or not.&lt;/p&gt;

&lt;p&gt;They are always reused - there is only one value of each &lt;code&gt;Oddball&lt;/code&gt; type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Oddballs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emptyString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Oddballs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Oddballs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take a heap snapshot for this script above we get:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sf2qDIlY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/oddballs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sf2qDIlY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/oddballs.png" alt="alt" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You see? Each &lt;code&gt;Oddball&lt;/code&gt; type only has the same memory location on the heap even though the values are pointed by different objects' properties. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#numbers-are-complicated"&gt;
  &lt;/a&gt;
  Numbers are complicated
&lt;/h2&gt;

&lt;p&gt;In V8, small integers (the term in V8 is &lt;code&gt;smi&lt;/code&gt;) are &lt;a href="https://v8.dev/blog/pointer-compression#value-tagging-in-v8"&gt;heavily optimized&lt;/a&gt; so they can be encoded inside of a pointer directly without the need to allocate additional storage for it.&lt;/p&gt;

&lt;p&gt;So technically, a &lt;code&gt;smi&lt;/code&gt; can exist on the stack since they don’t need additional storage allocated on the heap, depending how the variables:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;const a = 123&lt;/code&gt; &lt;strong&gt;could&lt;/strong&gt; be on the stack&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;var a = 123&lt;/code&gt; is on the heap, since it becomes a property of the global object&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also it depends on what the rest of the script is doing, and the runtime environment. The optimizing compiler keeps pointers held in registers as long as it can; it'll spill to the stack only when needed (e.g. registers run out).&lt;/p&gt;

&lt;p&gt;Another comlication about numbers is, unlike other types of primitive values, they might not get reused.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;smi&lt;/code&gt;, they are encoded as recognizably invalid pointers, which don't point to anything, so the whole concept of "reusing" doesn't really apply to them.&lt;br&gt;
For numbers that are not considered &lt;code&gt;smi&lt;/code&gt;, they are called &lt;code&gt;HeapNumber&lt;/code&gt;. When a &lt;code&gt;HeapNumber&lt;/code&gt; is pointed by an object's property, it becomes a mutable &lt;code&gt;HeapNumber&lt;/code&gt;, which allows updating the value without allocating a new &lt;code&gt;HeapNumber&lt;/code&gt; every time. Because of this optmization, mutable &lt;code&gt;HeapNumber&lt;/code&gt;s are not reused.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyNumbers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;smi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.14&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyNumbers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;num2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyNumbers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take a heap snapshot for this script above we get:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWLCWmp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/smi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWLCWmp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/smi.png" alt="alt" width="880" height="386"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can tell that two &lt;code&gt;smi&lt;/code&gt;s are "pointing" to the same memory location &lt;code&gt;@427911&lt;/code&gt; - that is because they have the same bit pattern for the same value &lt;code&gt;123&lt;/code&gt;, and Chrome DevTools still treats them as pointers even though they are invalid pointers due to pointer tagging. &lt;/p&gt;

&lt;p&gt;As to &lt;code&gt;HeapNumber&lt;/code&gt;s, they are pointing to the different memory locations &lt;code&gt;@427915&lt;/code&gt; and &lt;code&gt;@427927&lt;/code&gt;, meaning they are not reused.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#put-these-together"&gt;
  &lt;/a&gt;
  Put these together
&lt;/h2&gt;

&lt;p&gt;Here is a diagram that conceptually illustrates some &lt;strong&gt;possible&lt;/strong&gt; memory layout in V8:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9y0eAHA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/overview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9y0eAHA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.zhenghao.io/art/blog/javascript-memory/overview.png" alt="alt" width="880" height="366"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;In preparation for writing this blog post, I pulled out my college textbook on operating system. It's almost 600 pages long, of which a discussion on memory takes about a third of it. &lt;/p&gt;

&lt;p&gt;Computer memory is an incredibly complex topic. And nearly every answer to a question related to memory varies across compilers and processor architectures. For example, our variables are not always in memory (RAM) - they can be loaded directly in the destination registers, become part of instruction as an immediate value, or even get optimized entirely away into nothingness. The compiler can do whatever it wants as long as all the language semantics defined by the specification are preserved - the &lt;a href="https://stackoverflow.com/questions/15718262/what-exactly-is-the-as-if-rule"&gt;as-if rule&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>v8</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
