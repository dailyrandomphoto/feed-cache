<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating an Image Sketch with OpenCV (10 Lines of Code).</title>
      <author>Ogunbiyi Ibrahim</author>
      <pubDate>Wed, 10 Nov 2021 13:42:10 +0000</pubDate>
      <link>https://dev.to/comejoinfolks/creating-an-image-sketch-with-opencv-10-lines-of-code-ed9</link>
      <guid>https://dev.to/comejoinfolks/creating-an-image-sketch-with-opencv-10-lines-of-code-ed9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Have you ever considered utilizing a computer language to create a rough sketch of an image?&lt;br&gt;
I'll show you how to make a sketch of an image without having any programming skills in this article. Hold on to your seat and take out your pen, because this is going to be enlightening and comprehensive.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: To follow along with this guide, you simply need a basic understanding of how computers function. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you are curious about trying this out, here is the 10 lines of code below 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'C:\Users\folksconnect\Pictures\2020-07'&lt;/span&gt;
    &lt;span class="n"&gt;image_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;grey_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Image'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grey_image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;invert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;blur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BORDER_DEFAULT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;invertedblur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sketch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;divide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;invertedblur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;256.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sketch.png'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sketch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But if you are not in a hurry, this article explains everything you need to know about creating an Image Sketch with OpenCV.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-opencv"&gt;
  &lt;/a&gt;
  What is OpenCV?
&lt;/h3&gt;

&lt;p&gt;OpenCV is a big open-source library for computer vision, machine learning, and image processing that is presently playing an important role in real-time operations, which are vital in today's systems. It can recognize objects, people, and even human handwriting in photographs and videos.&lt;br&gt;
To summarize, we will utilize OpenCV to process a photo, i.e. to build an image sketch, in this guide. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-python"&gt;
  &lt;/a&gt;
  What is Python?
&lt;/h3&gt;

&lt;p&gt;Python is a programming language that is widely used to construct websites and apps, automate tasks, and analyze data. Python is a general-purpose programming language, which means it can be used to create a large variety of applications and is not specialized for any specific problem. &lt;/p&gt;

&lt;p&gt;To be able to use OpenCV for image processing we have to import it in Python programming language, but before we start coding, let’s set up our environment so we can work efficiently.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setting-up-your-python-environment"&gt;
  &lt;/a&gt;
  Setting up your Python Environment
&lt;/h3&gt;

&lt;p&gt;The first thing to do is to make sure you have a Python interpreter on your computer(PC), else here is a link to install Python on your &lt;a href="https://www.edureka.co/blog/install-python-on-windows/"&gt;Windows PC&lt;/a&gt; and &lt;a href="https://www.dummies.com/programming/python/how-to-install-python-on-a-mac/"&gt;MacOS&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#setting-up-the-opencv-environment"&gt;
  &lt;/a&gt;
  Setting up the OpenCV Environment
&lt;/h4&gt;

&lt;p&gt;The next step is to install the &lt;code&gt;OpenCV&lt;/code&gt; library on your PC after you've successfully installed python on your computer. &lt;/p&gt;

&lt;p&gt;To install OpenCV launch command prompt on your computer and run this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;    pip &lt;span class="nb"&gt;install &lt;/span&gt;opencv-python
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please make sure you have an internet connection whilst typing this command, as it will be downloaded from the internet. Once that has been downloaded successfully, you can now launch the Python idle installed on your PC. Just type &lt;strong&gt;python idle&lt;/strong&gt; on the search bar of your computer (PC).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-our-code"&gt;
  &lt;/a&gt;
  Implementing our Code
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Any text (variable) at the left hand-side before the assignment symbol ( = ) is used to store information, the statement(code) at the right hand-side is stored into the left hand side.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first step after running our idle is to create a new Python script file. This can be done by typing the &lt;code&gt;Ctrl + N&lt;/code&gt; shortcut and this will create a new file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The second step is to write the statement
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line of code import the &lt;code&gt;OpenCV&lt;/code&gt; library into your Python code, so that you can gain functionalities of all the actions performed by it.&lt;/p&gt;

&lt;p&gt;The next step is to assign the path of the image to the variable path and adding &lt;code&gt;r&lt;/code&gt; at the front of the string(path). Here is an example below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'C:\Users\folksconnect\Pictures\2020-07'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The next statement to type is:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;image_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What the above line of code does is; it reads the path of the image you entered and stores it in the variable &lt;code&gt;image_path&lt;/code&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note if the path or image cannot be read (maybe it does not exist or there is an error in the path) this method returns an empty matrix.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;The next line of statement to type is:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;grey_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line converts the color of the image you stored into image_path into a grey color image.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To show this image you can type the code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Image'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grey_image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code shows the image in a dialog box with the name of the dialog box as image.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now moving on to the next line of code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;invert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line of code is used to invert the image. it changes the image pixels to zero if the pixel is greater than zero and vice-versa.  For instance; a white image will be changed to black.&lt;/p&gt;

&lt;p&gt;Using incremental development law. You can also add this line of code to see how the inverted image looks like.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'image'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;The next step is to blur the image and to do that
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;blur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BORDER_DEFAULT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The syntax for the &lt;code&gt;GaussianBlur()&lt;/code&gt; method is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ksize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sigmaX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sigmaY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;borderType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;code&gt;GaussianBlur()&lt;/code&gt; method, you need to pass &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;ksize&lt;/code&gt; values every time and either one, two, or all parameters value from remaining &lt;code&gt;sigmaX&lt;/code&gt;, &lt;code&gt;sigmaY&lt;/code&gt; and &lt;code&gt;borderType&lt;/code&gt; parameter should be passed.&lt;/p&gt;

&lt;p&gt;Both &lt;code&gt;sigmaX and sigmaY&lt;/code&gt; parameters become optional if you mention the &lt;code&gt;ksize(kernal size)&lt;/code&gt; value other than (0,0).&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;src&lt;/code&gt; stands for the source file which we've input has invert since we want to work on invert.&lt;br&gt;
The &lt;code&gt;ksize&lt;/code&gt; value is always in tuple -- i.e. values enclosed in a parenthesis, You can set the value to any range you want depending on your preference.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;sigmaX&lt;/code&gt; and &lt;code&gt;sigmaX&lt;/code&gt; are optional since &lt;code&gt;ksize&lt;/code&gt; as been set&lt;br&gt;
The &lt;code&gt;borderType&lt;/code&gt; should also be included, but I love using the default type, so you pass in &lt;code&gt;cv2.BORDER_DEFAULT&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The next line of code is to invert the blur image again, and we can do that using
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;invertedblur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;The next line of code is to divide the image
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;sketch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;divide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;invertedblur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;256.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now we are done with our code the last code is just to write the image into a portable network graphic(PNG) and we can achieve that by typing
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sketch.png'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sketch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Congratulations, We have successfully create a sketch of an image. This is an example of the image we sketched using &lt;code&gt;OpenCV&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h__8MJUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihmclgyxo8h3eodcwce9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h__8MJUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihmclgyxo8h3eodcwce9.jpeg" alt="Image Sketch" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the full implementation of the code for easy access/use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'C:\Users\folksconnect\Pictures\2020-07'&lt;/span&gt;
    &lt;span class="n"&gt;image_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;grey_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cvtColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;COLOR_BGR2GRAY&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Image'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grey_image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;invert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey_img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;blur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GaussianBlur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BORDER_DEFAULT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;invertedblur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitwise_not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sketch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;divide&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grey_img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;invertedblur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;256.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sketch.png'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sketch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Ensure you change the path of the image to your own path ( the path on your PC) as the above path is a directory to an image on my PC.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this guide, We just built a sketch of an image using OpenCV in Python. If you followed through this guide properly you should be able to set up your own version of this project and also help you in explore other cool features of this awesome library e.g. face recognition and lots more. &lt;/p&gt;

&lt;p&gt;You can also improve on it by adding/implementing other features and functionalities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-resources"&gt;
  &lt;/a&gt;
  Useful Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opencv.org/"&gt;https://opencv.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/"&gt;https://www.python.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>python</category>
      <category>opencv</category>
      <category>beginners</category>
      <category>ai</category>
    </item>
    <item>
      <title>Full-length tutorial on deploying production-ready python REST API on AWS using chalice</title>
      <author>Alex Damiani</author>
      <pubDate>Wed, 10 Nov 2021 13:24:30 +0000</pubDate>
      <link>https://dev.to/alexanderdamiani/full-length-tutorial-on-deploying-production-ready-python-rest-api-on-aws-using-chalice-17p</link>
      <guid>https://dev.to/alexanderdamiani/full-length-tutorial-on-deploying-production-ready-python-rest-api-on-aws-using-chalice-17p</guid>
      <description>&lt;p&gt;The playlist details how to deploy a production-ready python REST API on AWS using the &lt;a href="https://github.com/aws/chalice"&gt;&lt;code&gt;chalice&lt;/code&gt;&lt;/a&gt; package. The playlist covers the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"hello world" &lt;code&gt;chalice&lt;/code&gt; app&lt;/li&gt;
&lt;li&gt;creating AWS dynamodb tables&lt;/li&gt;
&lt;li&gt;JWT token authentication&lt;/li&gt;
&lt;li&gt;AWS Secrets Manager to store JWT secret key&lt;/li&gt;
&lt;li&gt;AWS Route53 custom domain name and AWS Certificate Manager SSL&lt;/li&gt;
&lt;li&gt;IP Whitelist to restrict access&lt;/li&gt;
&lt;li&gt;CI/CD with GitHub Actions for (1) linting and (2) automated deployments from GitHub to AWS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/alexanderdamiani/aws_rest_api_demo_chalice"&gt;All the code for the video is on GitHub&lt;/a&gt; as well, with the link in the video description.&lt;/p&gt;




&lt;p&gt;If you find the video helpful you can greatly help me by doing one or all of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCTebDgj-GzOh3zo9Xf1vO4A"&gt;subscribing to my YouTube channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;liking, commenting, and/or sharing the video&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexanderdamiani/aws_rest_api_demo_chalice"&gt;starring the GitHub repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexanderdamiani"&gt;following me on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>python</category>
      <category>api</category>
      <category>devops</category>
    </item>
    <item>
      <title>An Example Shopping App Built with ReactJS, MongoDB, ExpressJS</title>
      <author>Linh Truong Cong Hong</author>
      <pubDate>Wed, 10 Nov 2021 13:16:51 +0000</pubDate>
      <link>https://dev.to/linhtch90/an-example-shopping-app-built-with-reactjs-mongodb-expressjs-2am6</link>
      <guid>https://dev.to/linhtch90/an-example-shopping-app-built-with-reactjs-mongodb-expressjs-2am6</guid>
      <description>&lt;p&gt;I want to share with the community the source code of a fullstack web application that I have just developed using MERN (MongoDB, ExpressJS, ReactJS, NodeJS) stack demonstrating basic features of a bookstore.&lt;/p&gt;

&lt;p&gt;I hope this would be a good resource for anyone who enjoys learning Javascript in general and MERN stack in particular.&lt;/p&gt;

&lt;p&gt;The live demo is accessible at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bn-bookstore.herokuapp.com/#/"&gt;https://bn-bookstore.herokuapp.com/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Frontend and Backend source code is available at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/linhtch90/bn_bookstore_public_source"&gt;https://github.com/linhtch90/bn_bookstore_public_source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy coding and if this is useful for you, please give me a Github star for encouragement!&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Applying "the beer way" in css?</title>
      <author>Leonardo Rafael Wehrmeister</author>
      <pubDate>Wed, 10 Nov 2021 13:13:27 +0000</pubDate>
      <link>https://dev.to/leonardorafael/applying-the-beer-way-in-css-2cip</link>
      <guid>https://dev.to/leonardorafael/applying-the-beer-way-in-css-2cip</guid>
      <description>&lt;p&gt;Hello my friends,&lt;/p&gt;

&lt;p&gt;This is an approach used in beercss project. It's not a pattern but It's a guide to learn it. Thoughts?&lt;br&gt;
&lt;a href="https://github.com/beercss/beercss"&gt;https://github.com/beercss/beercss&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.beercss.com"&gt;https://www.beercss.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#applying-the-beer-way-in-css"&gt;
  &lt;/a&gt;
  Applying "the beer way" in css?
&lt;/h2&gt;

&lt;p&gt;This project was guided by the &lt;strong&gt;"Germany Beer Purity Law"&lt;/strong&gt; or &lt;strong&gt;"Reinheitsgebot"&lt;/strong&gt; created in 1956. This law states that beer should only be brewed with the following ingredients: &lt;strong&gt;water&lt;/strong&gt;, &lt;strong&gt;barley malt&lt;/strong&gt; and &lt;strong&gt;hops&lt;/strong&gt;. Only 3 ingredients. Exciting, right? So we thinking about It and our 3 ingredients are: &lt;strong&gt;settings&lt;/strong&gt;, &lt;strong&gt;elements&lt;/strong&gt; and &lt;strong&gt;helpers&lt;/strong&gt;. This sounds weird at first time, because It's not BEN, OOCSS, SMACSS, ITCSS, "Utility first" or any other approach. Our approach doesn't avoid some bad practices, but is lightweight, tasty and pure like a beer. Just try it and feel it! 😁&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;|  SETTINGS     |       // The settings affects all document
|---------------|----|
|               |    |
|  ELEMENTS     |    |  // The elements are the components, widgets or tags
|               |    |
|---------------|    |
|               |    |
|               |    |
|  HELPERS      |----|  // The common helpers makes the elements more scalable and customizable
|               |
|               |
|---------------|
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#do"&gt;
  &lt;/a&gt;
  DO:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// 1 setting to 1 document
&amp;lt;html class="settings"&amp;gt;...&amp;lt;/html&amp;gt;

// 1 element to N helpers
&amp;lt;element class="helper helper"&amp;gt;...&amp;lt;/element&amp;gt;
&amp;lt;div class="element helper helper"&amp;gt;...&amp;lt;/div&amp;gt;

// apply css rules like this
.element &amp;gt; .helper
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#dont"&gt;
  &lt;/a&gt;
  DON'T:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// N elements to 1 tag
&amp;lt;div class="element element helper"&amp;gt;...&amp;lt;/div&amp;gt;

// avoid dependencies
&amp;lt;div class="element"&amp;gt;
  &amp;lt;div class="element-header"&amp;gt;...&amp;lt;/div&amp;gt;
  &amp;lt;div class="element-content"&amp;gt;...&amp;lt;/div&amp;gt;
  &amp;lt;div class="element-footer"&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

// apply css rules like this
.element .helper
.element .element-header
.element .element-content
.element .element-footer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>css</category>
      <category>pwa</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Deliver Deeper Digital Product Insights With RudderStack and Amplitude</title>
      <author>RudderStack</author>
      <pubDate>Wed, 10 Nov 2021 12:25:23 +0000</pubDate>
      <link>https://dev.to/rudderstack/deliver-deeper-digital-product-insights-with-rudderstack-and-amplitude-3147</link>
      <guid>https://dev.to/rudderstack/deliver-deeper-digital-product-insights-with-rudderstack-and-amplitude-3147</guid>
      <description>&lt;p&gt;Now it's easier to make decisions based on insights from every customer touchpoint on every site and application. Amplitude's Digital Optimization System helps businesses close the loop between data, insight, and action. With RudderStack integrated with the system, it becomes even more powerful. Our plug-and-play data pipelines make it easy to stream real-time behavioral data directly to Amplitude from all sites and applications while handling identity resolution along the way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#understand-how-digital-products-drive-business-with-amplitude"&gt;
  &lt;/a&gt;
  Understand how digital products drive business with Amplitude
&lt;/h2&gt;

&lt;p&gt;Amplitude helps companies get more value out of their digital products. The &lt;a href="https://amplitude.com/digital-optimization-system"&gt;Digital Optimization System&lt;/a&gt; combines a robust product analytics solution with digital personalization tools, creating a powerful feedback loop. This two-fold approach gives companies everything they need to understand customer behavior, predict valuable outcomes, and optimize their digital product experiences for maximum impact. Additionally, the easily accessible insights democratize data across teams.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-power-of-eventdriven-data-infrastructure-with-rudderstack"&gt;
  &lt;/a&gt;
  The power of event-driven data infrastructure with RudderStack
&lt;/h2&gt;

&lt;p&gt;Digital disruptors know success requires a deep understanding of the customer and the ability to quickly adapt digital products based on customer insights. Behavioral, or event, data is the key that unlocks this granular understanding, and when it comes to behavioral data, the right tooling makes all the difference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amplitude-and-rudderstack-are-better-together"&gt;
  &lt;/a&gt;
  Amplitude and RudderStack are better together
&lt;/h2&gt;

&lt;p&gt;Leveraging behavioral data starts with &lt;a href="https://rudderstack.com/blog/the-complete-customer-data-stack-data-collection-part-1"&gt;data collection&lt;/a&gt;. RudderStack's &lt;a href="https://rudderstack.com/product/event-stream/"&gt;Event Stream&lt;/a&gt; provides a reliable and scalable method to capture and deliver data in real-time to every downstream application. So, you can build your event-driven infrastructure with behavioral analytics from Amplitude in mind. Our robust Amplitude &lt;a href="https://docs.rudderstack.com/destinations/analytics/amplitude"&gt;integration&lt;/a&gt; makes it easy to supercharge the Digital Optimization System with event data from every web and mobile source.&lt;/p&gt;

&lt;p&gt;With high-performance data plumbing from RudderStack in place, Amplitude users unlock the system's full value and focus on leveraging every feature to start understanding their customers better. With easy access to insights, every team can make better decisions, faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ljQLrhI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.sanity.io/images/97bpcflt/production/2fd7b4dc68ddfdc4df0edb7e1300ee4520cb04d0-648x477.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ljQLrhI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.sanity.io/images/97bpcflt/production/2fd7b4dc68ddfdc4df0edb7e1300ee4520cb04d0-648x477.png" alt="RudderStack Data Stack" width="648" height="477"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started-with-rudderstack-and-amplitude"&gt;
  &lt;/a&gt;
  Get started with RudderStack and Amplitude
&lt;/h2&gt;

&lt;p&gt;Ready to start making decisions faster with a deeper understanding of your customers? &lt;a href="https://app.rudderlabs.com/signup?type=freetrial"&gt;Sign up for free&lt;/a&gt;, check out our &lt;a href="https://docs.rudderstack.com/destinations/analytics/amplitude"&gt;documentation&lt;/a&gt; to set up Amplitude as a destination, and start streaming your behavioral data to Amplitude today.&lt;/p&gt;

</description>
      <category>productanalytics</category>
      <category>rudderstack</category>
      <category>amplitude</category>
      <category>dataanalytics</category>
    </item>
    <item>
      <title>AI in Software Testing: Is AI Capable of taking over software testing?</title>
      <author>Kat Holder</author>
      <pubDate>Wed, 10 Nov 2021 12:07:14 +0000</pubDate>
      <link>https://dev.to/katholder/ai-in-software-testing-is-ai-capable-of-taking-over-software-testing-1ell</link>
      <guid>https://dev.to/katholder/ai-in-software-testing-is-ai-capable-of-taking-over-software-testing-1ell</guid>
      <description>&lt;p&gt;The use of AI to enhance existing tools and frameworks that identify particular testing challenges is among the trends that began this decade and is predicted to continue.&lt;/p&gt;

&lt;p&gt;Functional testing of web and mobile applications, visual testing of user interfaces, and UI element location, and auto-correcting element selectors are all examples at the moment. Beyond that, we can see &lt;a href="https://codersera.com/blog/ai-in-software-testing-a-detailed-explantion/"&gt;AI replacing entire technological stacks for automated testing.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AI will take over automation jobs that need judgments that a human might make in less than a second at all stages of testing. Higher-order testing tasks may require human input or involvement at first. Test generation, usability testing, security testing, and edge cases are examples of jobs that demand a little extra thought.&lt;/p&gt;

&lt;p&gt;Nevertheless, as technology advances and computers get more schooled on the behaviours of these higher-order tasks, AI is expected to take over those tasks as well, tackling challenges that require more context.&lt;/p&gt;

&lt;p&gt;In order to make the application more secure, we are increasingly relying on Artificial Intelligence (AI). As testing becomes more automated, we may be able to delegate the majority of it to AI. &lt;/p&gt;

&lt;p&gt;This means that, rather of humans performing manual testing, we are gradually moving toward a scenario in which machines execute test scripts. However, only minimum human input will be necessary to assist robots in 'learning’ and improving themselves.&lt;/p&gt;

&lt;h2&gt;Benefits of AI in Software Testing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Improved accuracy&lt;/li&gt;
&lt;li&gt;Going beyond the limitations of Manual Testing&lt;/li&gt;
&lt;li&gt;Helps both Developers and Testers&lt;/li&gt;
&lt;li&gt;Increase in overall Test Coverage&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;In A Nutshell…&lt;/h2&gt;

&lt;p&gt;Fortunately, there are currently a plethora of AI-powered platforms on the market, making the use of AI in testing a reality rather than a pipe dream. Artificial Intelligence (AI) opens up a slew of new possibilities for optimizing automated testing. Testers won't have to watch over their automated tests as much because they'll self-heal and run faster. &lt;/p&gt;

&lt;p&gt;Furthermore, Artificial Intelligence can assist in automating more delicate testing areas such as user interface testing and visual validation. Furthermore, AI can analyze enormous amounts of data and develop extensive test cases that assess the system's interface and operation down to the finest aspects.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Ways To Level Up Your Testing with Python</title>
      <author>Alex Strick van Linschoten</author>
      <pubDate>Wed, 10 Nov 2021 12:01:59 +0000</pubDate>
      <link>https://dev.to/alexzenml/10-ways-to-level-up-your-testing-with-python-25ni</link>
      <guid>https://dev.to/alexzenml/10-ways-to-level-up-your-testing-with-python-25ni</guid>
      <description>&lt;p&gt;There's nothing like working on testing to get you familiar with a codebase. I've been &lt;a href="https://github.com/zenml-io/zenml/pull/118"&gt;working&lt;/a&gt; on &lt;a href="https://github.com/zenml-io/zenml/pull/149"&gt;adding back&lt;/a&gt; in &lt;a href="https://github.com/zenml-io/zenml/pull/130"&gt;some testing&lt;/a&gt; to &lt;a href="https://github.com/zenml-io/zenml"&gt;the ZenML codebase&lt;/a&gt; this past couple of weeks and as a relatively new employee here, it has been a really useful way to dive into how things work under the hood.&lt;/p&gt;

&lt;p&gt;This being my first time working seriously with Python, there were a few things that I had to learn along the way. What follows is an initial set of lessons I took away from the experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-onesizefitsall-wont-cut-it"&gt;
  &lt;/a&gt;
  1. One-size-fits-all won't cut it
&lt;/h2&gt;

&lt;p&gt;Looking at things from a higher level, it's important to realise that there are lots of different approaches that you could take to testing. It's a truism that you should 'test intent, not implementation', but I imagine that in some scenarios like for software being deployed on a space shuttle you'd want to maybe also test the implementation as well.&lt;/p&gt;

&lt;p&gt;Similarly, different companies and projects have different needs for testing. If you're a huge company, testing is a way of ensuring reliability and preventing catastrophic failures along the way. If you're a small company, where speed of creation and the pace of development is frantic, having too rigid a set of tests may actually end up hurting you by stifling your ability to iterate through ideas and changes quickly.&lt;/p&gt;

&lt;p&gt;I found it helped to take a step back early on in my testing to really think through what I was doing, why I was doing it, and  what larger goal it was there to support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-dont-be-that-person-testing-to-crush-the-spirits-of-your-team"&gt;
  &lt;/a&gt;
  2. 'Don't be that person': testing to crush the spirits of your team
&lt;/h2&gt;

&lt;p&gt;It's worth reiterating the previous remark about testing intent and not implementation.&lt;/p&gt;

&lt;p&gt;If you test every last conditional statement, checking that the code is built in exactly that specific way, changing anything in the original codebase is going to become incredibly tiresome. Moreover, your testing library will start to resemble a kind of byzantine twin replica of your original code.&lt;/p&gt;

&lt;p&gt;For preventing this, it helps if everyone in the team is testing as much as they are writing new code. This way it is just part of the development process and not a separate add-on from a QA-like team. At ZenML, we're small enough that the expectation is that if you work on a new feature, you should also be responsible for writing the tests that go alongside.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-pytest-o-pytest"&gt;
  &lt;/a&gt;
  3. Pytest, O Pytest!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.pytest.org/en/latest/"&gt;Pytest&lt;/a&gt; is amazing. It has everything you need to write your tests, is easy to understand, and has great documentation of even the slightly more niche features. Can you tell I really enjoyed getting to know this open-source library?&lt;/p&gt;

&lt;p&gt;For now, I'll mention some of the really useful combinations of CLI commands that I found useful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# make the test output verbose&lt;/span&gt;
pytest tests/ &lt;span class="nt"&gt;-v&lt;/span&gt;

&lt;span class="c"&gt;# stop testing whenever you get to a test that fails&lt;/span&gt;
pytest tests/ &lt;span class="nt"&gt;-x&lt;/span&gt;

&lt;span class="c"&gt;# run only a single test&lt;/span&gt;
pytest tests/test_base.py::test_initialization

&lt;span class="c"&gt;# run only tests tagged with a particular word&lt;/span&gt;
pytest tests/ &lt;span class="nt"&gt;-m&lt;/span&gt; specialword

&lt;span class="c"&gt;# print out all the output of tests to the console&lt;/span&gt;
pytest tests/ &lt;span class="nt"&gt;-s&lt;/span&gt;

&lt;span class="c"&gt;# run all the tests, but run the last failures first&lt;/span&gt;
pytest tests/ &lt;span class="nt"&gt;--ff&lt;/span&gt;

&lt;span class="c"&gt;# see which tests will be run with the given options and config&lt;/span&gt;
pytest tests/ —collect-only

&lt;span class="c"&gt;# show local variables in tracebacks&lt;/span&gt;
pytest tests/ —showlocals
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there are so many more! The flexibility of the CLI tool allows you to be really nimble and ensures you don't have to hang around for already-passing tests to run.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-temp-files-amp-temp-directory-choice-paralysis"&gt;
  &lt;/a&gt;
  4. Temp Files &amp;amp; Temp Directory Choice Paralysis
&lt;/h2&gt;

&lt;p&gt;At a certain point I needed to test that certain functions were having side effects out in the real world of a filesystem. I didn't want to pollute my hard drive or that of whatever random CI server was running the tests, so then I started looking around for options for the creation of temporary files and directories.&lt;/p&gt;

&lt;p&gt;It turns out that between the Python standard library, Pytest and some library-specific features, we're spoiled for choice when it comes for convenience helpers to create temporary files and directories. Python has &lt;a href="https://docs.python.org/3/library/tempfile.html"&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; which is a platform-agnostic way of creating temporary files and directories. Pytest has &lt;code&gt;tmp_path&lt;/code&gt; which you can insert as an argument into your test function and have a convenience location which you can use to your heart's content. (There are also &lt;a href="https://docs.pytest.org/en/latest/how-to/tmp_path.html#tmp-path"&gt;several other options&lt;/a&gt; with Pytest). Then other libraries you're using may have specific testing capabilities. We use &lt;a href="https://click.palletsprojects.com/en/8.0.x/"&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt; for our CLI functionality and there's a &lt;a href="https://click.palletsprojects.com/en/8.0.x/testing/#file-system-isolation"&gt;useful convenience pattern&lt;/a&gt; for running commands from a temporary directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_something&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
   &lt;span class="n"&gt;runner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CliRunner&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
   &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isolated_filesystem&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
      &lt;span class="c1"&gt;# do something here in your new temporary directory
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-decorate-your-way-to-clearer-test-code"&gt;
  &lt;/a&gt;
  5. Decorate your way to clearer test code
&lt;/h2&gt;

&lt;p&gt;Pytest has a bunch of helper functions which enhance the test code you already have. For instance, if you want to wanted to iterate over a series of values and pass them in as arguments to a function, you can just use the &lt;code&gt;parametrize&lt;/code&gt; functionality:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parametrize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"test_input,expected"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s"&gt;"3+5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2+4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"6*9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that this would fail because 6x9 does not equal to 42.&lt;/p&gt;

&lt;p&gt;If you have a test that you know is failing right now, but you want to put it to the side for the moment, you can mark it down as being expected to fail with &lt;code&gt;xfail&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xfail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# whatever code you have here doesn't work
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I find it's more useful in this way to get a full sense of which tests aren't working rather than just commenting them out.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;mark&lt;/code&gt; method in general is a great way of creating some custom ways to run your tests. You could — using a &lt;code&gt;@pytest.mark.no_async_call_required&lt;/code&gt; decorator — distinguish between tests that take a bit longer to run and tests that are more or less instantaneous, for example.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-use-raw-hypothesis-endraw-for-random-arguments"&gt;
  &lt;/a&gt;
  6. Use &lt;code&gt;hypothesis&lt;/code&gt; for random arguments
&lt;/h2&gt;

&lt;p&gt;Hypothesis is a Python library to check that functions work the way you think they do. It works by setting up certain conditions under which the function should work.&lt;/p&gt;

&lt;p&gt;For example, you can say that this function should be able to accept any &lt;code&gt;datetime&lt;/code&gt; value without any problem. Instead of trying to come up with a list of different possible edge cases, hypothesis instead will run (in parallel) a whole series of values to check that this is actually the case. As the docs state:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"It works by generating arbitrary data matching your specification and checking that your guarantee still holds in that case. If it finds an example where it doesn’t, it takes that example and cuts it down to size, simplifying it until it finds a much smaller example that still causes the problem. It then saves that example for later, so that once it has found a problem with your code it will not forget it in the future." (&lt;a href="https://hypothesis.readthedocs.io/en/latest/"&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These custom ways of testing certain kinds of inputs are called 'strategies', and it has &lt;a href="https://hypothesis.readthedocs.io/en/latest/data.html#core-strategies"&gt;a whole bunch&lt;/a&gt; of these to choose from. The ones I most often use are text, integers, decimals and &lt;code&gt;datetime&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-use-raw-tox-endraw-to-test-multiple-versions-of-python"&gt;
  &lt;/a&gt;
  7. Use &lt;code&gt;tox&lt;/code&gt; to test multiple versions of Python
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://tox.wiki/en/latest/"&gt;&lt;code&gt;tox&lt;/code&gt;&lt;/a&gt; allows you to automate running your test suite through multiple versions of Python. It's likely that your CI process does this as well, so in order to test that these are passing locally as well, you can use &lt;code&gt;tox&lt;/code&gt;. It creates new virtual environments using the versions you specify and runs your test suite through each of them.&lt;/p&gt;

&lt;p&gt;Note that if you're using &lt;code&gt;pyenv&lt;/code&gt; as your overall Python version manager, you may have to use something like the following command to make sure that all the various Python versions are available to &lt;code&gt;tox&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;local &lt;/span&gt;zenml-dev-3.8.6 3.6.9 3.7.11 3.8.11 3.9.6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first argument passed in is my development environment in which I usually work, but the other Python versions / environments are to make those versions available to &lt;code&gt;tox&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-debug-your-failing-tests-with-raw-pdb-endraw-"&gt;
  &lt;/a&gt;
  8. Debug your failing tests with &lt;code&gt;pdb&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Pytest has a bunch of handy ways of inspecting exactly what's going on at the point where a test fails. I showed some of those above, where you can show, for example, whatever local variables were initialized alongside the stacktrace.&lt;/p&gt;

&lt;p&gt;Another really useful feature is the &lt;code&gt;--pdb&lt;/code&gt; flag which you can pass in along with your CLI command. This will deposit you inside a &lt;code&gt;pdb&lt;/code&gt; debugging environment at exactly the moment your test fails. Super useful that we get all this convenience functionality out of the box with Pytest.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-linting-before-and-beyond-testing"&gt;
  &lt;/a&gt;
  9. Linting: before and beyond testing
&lt;/h2&gt;

&lt;p&gt;At ZenML we use &lt;a href="https://pre-commit.com/"&gt;&lt;code&gt;pre-commit&lt;/code&gt;&lt;/a&gt; hooks that kick into action whenever you try to commit code. (Check out &lt;a href="https://github.com/zenml-io/zenml/blob/main/pyproject.toml"&gt;our &lt;code&gt;pyproject.toml&lt;/code&gt; configuration&lt;/a&gt; and &lt;a href="https://github.com/zenml-io/zenml/tree/main/scripts"&gt;our &lt;code&gt;scripts/&lt;/code&gt; directory&lt;/a&gt; to see how we handle this!) It ensures a level of consistency throughout our codebase, ensuring that all &lt;a href="https://interrogate.readthedocs.io/en/latest/index.html"&gt;our functions have docstrings&lt;/a&gt;, for example, or implementing a standard order for &lt;code&gt;import&lt;/code&gt; statements.&lt;/p&gt;

&lt;p&gt;Some of this — the &lt;a href="https://mypy.readthedocs.io/en/stable/index.html"&gt;&lt;code&gt;mypy&lt;/code&gt;&lt;/a&gt; hook, for example — starts to verge into what feels like testing territory. By ensuring that functions all have type annotations you sometimes are doing more than just enforcing a particular coding style. When you add &lt;code&gt;mypy&lt;/code&gt; into your development workflow, you get up close and personal with exactly how different types are passed around in your codebase.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-and-remember-coverage-is-just-a-number"&gt;
  &lt;/a&gt;
  10. …and remember, coverage is just a number!
&lt;/h2&gt;

&lt;p&gt;It's always good to have a number to chase. It gives you something to work towards and a feeling of progress. Tools like &lt;a href="https://codecov.io"&gt;Codecov&lt;/a&gt; offer fancy visualizations of just which parts of your codebase still need some attention. Automating all this as part of the CI process can highlight when you've just added a series of features but no accompanying tests.&lt;/p&gt;

&lt;p&gt;Bearing all these positives in mind, you should still always remember that your tests are there to serve your broader goals. If your goal is to rapidly iterate and create new features, maybe having a goal of 100% test coverage at all times is an unrealistic expectation. A 100% test coverage does not necessarily mean your code is bug-free and robust. It just means that you invoked it during the testing process.&lt;/p&gt;

&lt;p&gt;Similarly, different kinds of codebase will have different kinds of test weightings. We didn't really talk much about the different types of tests (from unit to integration to usability), but some systems or types of designs will require more focus on different pieces of this bigger picture.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alex Strick van Linschoten is a Machine Learning Engineer at ZenML.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>testing</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>A Quick Primer on Everything You Need to Know About Blockchain</title>
      <author>IderaDevTools</author>
      <pubDate>Wed, 10 Nov 2021 11:43:59 +0000</pubDate>
      <link>https://dev.to/ideradevtools/a-quick-primer-on-everything-you-need-to-know-about-blockchain-3ha</link>
      <guid>https://dev.to/ideradevtools/a-quick-primer-on-everything-you-need-to-know-about-blockchain-3ha</guid>
      <description>&lt;p&gt;Blockchain is a term utilized to represent distributed ledger technology.&lt;/p&gt;

&lt;p&gt;Blockchain is used to build a storage system for data in a distributed and immutable mode.&lt;/p&gt;

&lt;p&gt;So there are key features we need to mention.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Immutability  —&lt;/strong&gt;  this means that once data is written to a blockchain data storage or ledger, it cannot be changed — so it’s there forever. For instance, in a relational database, no matter how much security you have, the data can be accessed and modified on the system.&lt;/p&gt;

&lt;p&gt;A blockchain system guarantees that if one bit of data is altered, it says it is in an invalid state, and since the data is distributed on various systems, the verified data with a justified state can be retrieved.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Distribution  — &lt;/strong&gt; is the key to trust. As long as the data you see is in the blockchain and it’s in a valid state, you can trust the data to be accurate. This trust is the key, and this trust is achieved in a blockchain system by replicating the datastore on several hosts on the internet. For instance, as long as the peers accept that bit of data is valid, so you can completely trust that data that is stored on that system.&lt;/p&gt;

&lt;p&gt;In blockchain the trust is requisite.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Immutability  — &lt;/strong&gt; Trust&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Distribution  —&lt;/strong&gt;  valid/invalid&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-trust-issues-be-resolved-using-blockchain"&gt;
  &lt;/a&gt;
  How can Trust Issues be Resolved Using Blockchain?
&lt;/h2&gt;

&lt;p&gt;For many industries, trust is a problem. The automobile industry is one of those where trust, or lack of it, causes problems.&lt;/p&gt;

&lt;p&gt;People order used cars from other countries which do not easily share tracking information, and this can mean that faking data about the car’s provenance and history is easier.&lt;/p&gt;

&lt;p&gt;For instance, odometer fraud is one of the problems that can seriously impact the value of a vehicle. Representing a vehicle as having been used 5,000 miles instead of 50,000 miles can mean a huge difference in perceived value and potentially usable life span of the car or truck.&lt;/p&gt;

&lt;p&gt;In many countries, car service records are largely kept on paper which can, of course, be very easy to be fake.&lt;/p&gt;

&lt;p&gt;So, let’s imagine that pushing all service providers to a blockchain and all the readings kept on the Blockchain. The integrity and immutability of the blockchain data mean that a modification of the records would be detectable.&lt;/p&gt;

&lt;p&gt;Moreover, agencies such as insurance companies can also contribute by appending accident details of a car, giving a much more complete picture of the vehicle’s history in a way, which is very difficult or even impossible for dishonest vendors to fake.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-does-the-financial-industry-have-trust-issues-with-blockchain"&gt;
  &lt;/a&gt;
  Why Does the Financial Industry have Trust Issues with Blockchain?
&lt;/h2&gt;

&lt;p&gt;Transferring money from one country to another takes your time and can be expensive because of the need to comply with multiple different regulations and policies, but eventually, another person receives the money.&lt;/p&gt;

&lt;p&gt;Your bank updates its records and sends them to the main clearing bank in your country, where they are passed through a number of systems where it analyzes them to prevent money laundering and to comply with various trade embargoes. Assuming your transaction passes the checks, the funds are then sent to another country’s clearing bank.&lt;/p&gt;

&lt;p&gt;They again update the record and send it to the receiver’s bank account. Even in these highly automated times, it can take several days for the money to arrive in the destination account.&lt;/p&gt;

&lt;p&gt;This is where Bitcoin can offer an alternative to the traditional brick-and-mortar financial industry. All you need to do is to give recipients’ Bitcoin wallet addresses and use your computer system to send funds. There are no middle parties or long waiting times.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-summarize-blockchain"&gt;
  &lt;/a&gt;
  To summarize Blockchain:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
The data store that keeps all blockchain data is called a &lt;strong&gt;ledger&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
Each record in the ledger is called a &lt;strong&gt;transaction&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
These transactions are timestamped and saved in &lt;strong&gt;groups of blocks&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
You &lt;strong&gt;can not&lt;/strong&gt; update or delete anything. It’s written once and then read-only.&lt;/li&gt;
&lt;li&gt;
The ledger is built to be &lt;strong&gt;immutable&lt;/strong&gt; using cryptographic algorithms.&lt;/li&gt;
&lt;li&gt;
And the main part is ledger is replicated by multiple nodes, which is why it is called &lt;strong&gt;Distributed Ledger Technology&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-blockchain-achieve-and-maintain-integrity"&gt;
  &lt;/a&gt;
  How Does Blockchain Achieve and Maintain Integrity?
&lt;/h2&gt;

&lt;p&gt;The system takes a huge data file and computes its unique “digest” using a hash function. Your system then sends that huge data file to your friend/receiving party along with its hashed value.&lt;/p&gt;

&lt;p&gt;The receiver recomputes the hash to ensure that the content of that file is not altered while in the transmission.&lt;/p&gt;

&lt;p&gt;Multiple standardized hash function implementations are utilized, such as SHA256, which produces a 256-bit hash value. It gives 2²⁵⁶ combinations.&lt;/p&gt;

&lt;p&gt;Furthermore, Blockchain utilizes Public Key cryptography which is a cryptographic system used for the encryption and decryption of data.&lt;/p&gt;

&lt;p&gt;You start by generating a special, related pair of keys — called a “public” and “private” key — based on a mathematical equation that uses two large prime numbers. Once encrypted, that can be decrypted if you have the required keys.&lt;/p&gt;

&lt;p&gt;The public key of both ends of the transmission is used to encrypt the data. At your end, your private key (which is not ever sent or made available to anyone else) is used in conjunction with the receiving party’s public key to encrypt the data.&lt;/p&gt;

&lt;p&gt;The receiving end uses your &lt;em&gt;public&lt;/em&gt; key and their &lt;em&gt;private&lt;/em&gt; key to decrypt the data. Combined with the hash value, transactions like this are incredibly secure.&lt;/p&gt;

&lt;p&gt;Public Key Cryptography is also utilized in communication to create a secure connection between hosts and for things like &lt;a href="https://blogs.embarcadero.com/do-all-your-windows-applications-look-like-a-computer-virus/?utm_source=Devto&amp;amp;utm_medium=Leads%20Acquisition&amp;amp;utm_content=EverythingYouNeedToKnowAboutBlockchain11082021&amp;amp;utm_campaign=EverythingYouNeedToKnowAboutBlockchain1108202"&gt;code signing&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-blockchains-data-structure"&gt;
  &lt;/a&gt;
  What is Blockchain’s Data Structure?
&lt;/h2&gt;

&lt;p&gt;In a blockchain system, data is stored in blocks of transactions. In effect is a huge timestamped log of transactions, which is replicated on multiple peers.&lt;/p&gt;

&lt;p&gt;For a blockchain network to be trusted and valid, most of the nodes have to be uncompromised. If 51 percent of the nodes are compromised, the network is hacked and has lost integrity. Note that the Blockchain expects things to go wrong on nodes, and yet it still remains reliable!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Each block in a blockchain represents transactions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If a user tries to add a block containing an incorrect hash value, the block will be rejected by multiple peers and hence will not be made part of the blockchain.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#where-can-i-learn-more-about-blockchain"&gt;
  &lt;/a&gt;
  Where Can I Learn More About Blockchain?
&lt;/h2&gt;

&lt;p&gt;You can find many interesting and useful articles related to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Blockchain API&lt;/li&gt;
&lt;li&gt;
Cryptography&lt;/li&gt;
&lt;li&gt;
Bitcoin&lt;/li&gt;
&lt;li&gt;
Delphi and Ethereum&lt;/li&gt;
&lt;li&gt;
Working with smart contracts&lt;/li&gt;
&lt;li&gt;
and more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more articles about Blockchain and cryptocurrency, click on this dynamic search link: &lt;a href="https://blogs.embarcadero.com/do-all-your-windows-applications-look-like-a-computer-virus/?utm_source=Devto&amp;amp;utm_medium=Leads%20Acquisition&amp;amp;utm_content=EverythingYouNeedToKnowAboutBlockchain11082021&amp;amp;utm_campaign=EverythingYouNeedToKnowAboutBlockchain1108202"&gt;https://blogs.embarcadero.com/?s=blockchain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@fakurian?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Fakurian Design&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/blockchain?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>10 Things to Consider before Choosing a CMS for your E-commerce Store</title>
      <author>Shada </author>
      <pubDate>Wed, 10 Nov 2021 11:42:06 +0000</pubDate>
      <link>https://dev.to/strapi/10-things-to-consider-before-choosing-a-cms-for-your-e-commerce-store-24na</link>
      <guid>https://dev.to/strapi/10-things-to-consider-before-choosing-a-cms-for-your-e-commerce-store-24na</guid>
      <description>&lt;p&gt;E-commerce stores have evolved in so many ways over the years and have indeed changed the way we shop and do business. Businesses now adopt e-commerce stores to reach more audiences and also automate their business and this has improved sales and customers. Setting up an online store, tracking sales, orders, and managing products can be challenging to handle. But, a Content Management System helps us to do all this.&lt;/p&gt;

&lt;p&gt;This article is to show you the factors to consider before choosing a particular CMS for your e-commerce store and why headless CMS is the best choice for your e-commerce store.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;A Content Management System is a computer application that allows users to create, and change web content without the need for specialized technical knowledge.&lt;/p&gt;

&lt;p&gt;CMS thus in a layman's understanding is software that allows you to build a website without having to code the website from scratch. Also, you don’t even need to know how to code at all before you can use a CMS. CMS allows users to customize the design and functionality of their website by downloading or purchasing templates and plugins. Many users can also contribute and work together in the same CMS back-end at the same time. &lt;/p&gt;

&lt;p&gt;Over the last decade, CMS market growth has increased and according to Artem Minaev in his blog post-CMS market for First guide statistics, as of January 2021, more than &lt;a href="https://trends.builtwith.com/cms/traffic/Entire-Internet"&gt;64.9 million live websites&lt;/a&gt; are built with CMS. &lt;/p&gt;

&lt;p&gt;The challenging decision among users is picking or choosing the right CMS for their e-commerce store. To choose a particular CMS, it is thus pertinent to check off certain considerations before making that decision.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ecommerce-store-requirements"&gt;
  &lt;/a&gt;
  E-commerce store requirements
&lt;/h2&gt;

&lt;p&gt;Before setting out to build your e-commerce online store, there are certain requirements that one should note. Remember, not all businesses will need a Content Management System (CMS) to manage their website. Deciding to use a CMS for your e-commerce online store or not depends on some requirements or factors which include;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What is your budget like?&lt;/li&gt;
&lt;li&gt;What is the time frame to build the e-commerce website?&lt;/li&gt;
&lt;li&gt;What features and plugins do you want in your e-commerce website?&lt;/li&gt;
&lt;li&gt;How will you be updating your website?&lt;/li&gt;
&lt;li&gt;Will you need a real-time update?&lt;/li&gt;
&lt;li&gt;What technical skills or knowledge do you have?&lt;/li&gt;
&lt;li&gt;Will your e-commerce store have a blog section for regular product releases?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#types-of-cms-available-for-your-ecommerce-store"&gt;
  &lt;/a&gt;
  Types of CMS available for your E-commerce Store
&lt;/h2&gt;

&lt;p&gt;The types of CMS available for your e-commerce store includes;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open-source CMS - This content management system is not owned or developed by a single company but maintained by its community of developers.&lt;/li&gt;
&lt;li&gt;Proprietary CMS - Proprietary Content Management System is owned, built, and managed by a single company. Using this CMS means you buy a license fee to use the software and also pay a monthly or annual charge for support and updates.&lt;/li&gt;
&lt;li&gt;Software as a Service( SaaS ) CMS - This is a Content Management System that is hosted in the cloud. The software vendor handles all maintenance and upgrades tasks for both the software and hardware and also clients don’t have to worry about scalability.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;However, CMS types can be classified into;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Headless CMS - Headless CMS makes content accessible via an API for display on any device, without a built-in front-end or presentation layer. Examples include Strapi, Sanity, Cockpit, Netlify CMS, etc.&lt;/li&gt;
&lt;li&gt;Monolithic/Traditional CMS - This CMS connects the front-end and the back-end of a website in a neat and easy application codebase. Examples include WordPress, Drupal, Wix, etc.&lt;/li&gt;
&lt;li&gt;Decoupled CMS - This CMS separates the back-end functionality of a website from the front-end HTML content. The back-end and front-end management are decoupled into two different systems: one for storage and content creation, and another system for consuming data and presenting it to the user through some interface.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This means that the different CMS types can either be headless, monolithic or decoupled. For instance, &lt;a href="https://strapi.io/"&gt;Strapi&lt;/a&gt; is an open-source headless CMS, WordPress is an open-source monolithic CMS, and Contentful is a proprietary headless CMS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-things-to-consider-before-choosing-a-cms-for-your-ecommerce-store"&gt;
  &lt;/a&gt;
  10 things to consider before choosing a CMS for your E-commerce store
&lt;/h2&gt;

&lt;p&gt;Using a CMS system is vital for numerous reasons and there are things to consider before deciding to choose a particular CMS. Before choosing a CMS, it is wise to check off certain criteria like;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt; -Security should be a top priority when choosing a CMS because if your website is hacked, you will lose your customers' trust. This means go for CMS that follows global security standards, and make your site secure by showing your secure HTTPS badge/SSL cert. Nobody will visit any site that is flagged to be insecure, not to talk of purchasing from the site. SSL(Secure  Socket Layers) helps to encrypt your website data and protect the data from hackers or intruders.&lt;br&gt;
You can also check if the CMS supports other security measure like firewall, a two-factor authentication, etc. These integrations will make your customers and visitors feel comfortable when they are purchasing from your store. &lt;br&gt;
Also, very important, make sure the CMS you are going for facilitates a secure and smooth checkout experience. This is because customers will only buy from your website when they are certain their debit card details are safe and secured and not exposed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt; - This is an important factor to consider before choosing a CMS. It is advisable to base your decision on your budget, requirements, and scale of the business. Also, check for hidden prices like maintenance, security update, etc. that would incur more money as you scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Email Marketing tools&lt;/strong&gt; - This is one of the most important and effective ways for a business to connect with customers. Sending individual promotion emails with an item related to their order history will maximize the chances of them buying that product.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mobile-First ( Responsive Design )&lt;/strong&gt; - Most traffic comes from mobile devices as most people have a mobile device with which they access the internet. Your e-commerce store must be mobile friendly. So go for a CMS that offers this compatibility. This is a must rule because great user experience retains customers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Guest Checkout&lt;/strong&gt; - The checkout section is important for optimizing conversions and reducing cart abandonment. So you need to design a secure shopping page that will allow your customers to buy items. Customers value the option of having to buy items without having to register first. So your CMS should allow them to do this.&lt;br&gt;
Also, cross-selling should be in mind too. This is simply featuring related products of products in your cart on the same page. It helps to convince customers to add more items to their carts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Search Engine Optimization(SEO)&lt;/strong&gt; - Anna Fitzgerald stated in her blog post “&lt;a href="https://blog.hubspot.com/website/best-cms-for-seo"&gt;The Best Content Management Systems for SEO &amp;amp; Why&lt;/a&gt;”, that “64% of marketers actively invest in SEO, indicating that improving SEO and growing organic presence is important to their marketing strategy”. Even though you may not have enough technical knowledge or expertise, you still want your website to hit Google’s top 10 rankings. The wise move to achieve this is to research and choose a CMS with the best SEO. SEO is the science and art of getting websites or pieces of content to rank higher in search engines like Google and Bing. Search is almost the main way that people use to discover content online. So ranking higher in search engines can lead to an increase in traffic to your website. Thus, your CMS must be able to offer SEO to your website. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ease of Use&lt;/strong&gt; - Look for a CMS that is easy to use and has an intuitive interface. You should sign up, build, deploy, and manage your website without unnecessary stress. It should take little time to create and publish content on these platforms and should also take less time for your visitors to load pages and navigate through your website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Popularity&lt;/strong&gt; - Popularity should be a significant factor when choosing a CMS. The popularity of a particular CMS means that many people have tried it, loved it, and are sticking their trust in it. It also means the CMS will have a large available community. A large community will definitely come in handy especially when you’re facing problems or what you’re trying to implement isn’t working out as you thought it would. The community assures you of a cloud of witnesses who have come across that same situation and will help you with a solution. Popularity also means the brand will ensure that its CMS is easy to use and has good customer satisfaction.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Customer Service Support&lt;/strong&gt; - These are the CMS representatives and staff that you can call in time of help. Some CMS offers 24/7 support and such services play a huge role when choosing a CMS. Always remember, you will run into problems along the way and so, having experts who you can call when it happens is very necessary. You will definitely lose customers, reputation, and money if you’re having an issue with your store and the customer service support is not answering you when you reach out to them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Core Functionality&lt;/strong&gt; - Always look for CMS that offer the core functionalities required for an e-commerce store. Remember, e-commerce websites are built to accommodate the needs and demands of your customers. &lt;br&gt;
Core functionalities here imply content tagging for indexing, product category organization, adding images and videos, adding and managing inventories, integrating communication between you and your customers, and so on.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Remember to always go for a CMS that meets your current needs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-headless-cms-is-the-best-cms-for-your-ecommerce-store"&gt;
  &lt;/a&gt;
  Why Headless CMS is the best CMS for your E-commerce store
&lt;/h2&gt;

&lt;p&gt;While traditional CMS has always been the standard or go-to, companies, however, are now looking for increased flexibility, customization, and scalability that headless CMS provides. Traditional CMSs put all content such as images, videos, text, etc. into a single system and its contents cannot be reused across different platforms. Headless CMSs solve this limitation.&lt;/p&gt;

&lt;p&gt;A Headless CMS or Headless Content Management System is a back-end-only CMS that means it separates the back-end from the front-end and only handles the back-end functionalities. It does not manage the front-end presentation layer and its contents are delivered through an API for seamless display across different platforms. &lt;/p&gt;

&lt;p&gt;Headless CMS makes content available and accessible through an API( REST or GraphQL API ) for display on any device, without a built-in presentation layer. Headless CMS makes it able to update content in your e-commerce store in one centralized location and then push the update to all platforms and channels involved, unlike in Traditional CMS where a copy of that content is managed across many channels. Strapi is a very good example of a headless CMS.&lt;/p&gt;

&lt;p&gt;Headless CMS works thus; it gives editors an interface for managing content and then provides that content via an API for developers to query and build applications with.&lt;/p&gt;

&lt;p&gt;Below are some reasons why Headless CMS is the best CMS to choose for your e-commerce store;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Enhanced Security - In Headless, users are not concerned about the presentation layer affecting the database since they are not connected. Headless eliminates direct interaction between the front-end and the back-end and only communicates through APIs. It also does not render the content they deliver. Instead, the contents are rendered by the client side JavaScript.&lt;br&gt;
Headless CMS allows for secure third-party integrations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scalability - Headless CMS makes it possible to upgrade and optimize your applications, customize your e-commerce store and even scale it across many channels quickly without any downtime during maintenance or compromising performance.&lt;br&gt;
Headless allows you to manage your content from a single source of truth and you can change developer tools at any time too.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cheaper - Maintenance, repair cost and management is cheaper with a headless CMS. Although Headless CMS is more expensive to develop initially, it is cost-effective in the long run. This means that as you scale up, you can add more services, products, features, etc. to your site without having to rebuild from scratch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Performance - Headless CMS is much much more faster because it allows the back-end and front-end to function independently which means editors can edit the CMS contents without waiting for the developers to be done with the front-end.&lt;br&gt;
Also, any update or change made on the CMS will reflect on all channels of  front-ends that consume its data making it faster in performance speed unlike the traditional CMS where you have to copy an instance of the content to all channels.&lt;br&gt;
In traditional CMS like WordPress, every plugin runs through its code every time the user views a page. So the more the plugins, the less the performance. Unlike in Headless, where your website only has the code to run the front-end site and can easily be optimized for speed.&lt;br&gt;
&lt;a href="https://strapi.io/"&gt;Strapi&lt;/a&gt; is a good example. It is built with Node.js and installation is complete in less than two minutes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Omnichannel Content Delivery - This is an approach that seeks to provide customers with a seamless shopping experience, whether they’re shopping in your store from a desktop or mobile device. Headless CMS allows for this seamless experience across channels or devices. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Future Proof - Headless is compatible with the changing demands of the digital experience of e-commerce. In Headless, you can make changes in the future without compromising the functionality of your e-commerce store. Also, if there is any need for rebranding in the future, Headless will adapt making it future-proof.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More Flexible - Since the front-end is separated from the back-end, you’re not limited to a tech stack for your front-end. You choose whichever programming language you want to use for the front-end. &lt;br&gt;
Also, a single piece of content can be used across all channels making project build and completion faster. Headless CMS sets you free from limitations and legacy software thereby giving designers, developers space for creativity. Strapi is the most flexible open-source headless CMS and its relations feature makes it easy to create many relations using only the admin panel.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Choosing a CMS for your e-commerce store has its advantages and disadvantages, especially for non-developers seeking to build an online store for their business. A small budget, time frame, and technical knowledge might make you choose a CMS over building from scratch.&lt;br&gt;
However, if you’re choosing a CMS, headless should be at the back of your mind because it provides more advantages like scalability, future proof, security and so much more over the traditional CMS. You can visit &lt;a href="https://strapi.io/"&gt;Strapi&lt;/a&gt; to begin your headless CMS journey. They have a good documentation too.&lt;br&gt;
I hope this article helps to guide you when making your decision over what, when and how to choose a CMS.&lt;/p&gt;

</description>
      <category>ecommerce</category>
      <category>cms</category>
      <category>headlesscms</category>
    </item>
    <item>
      <title>Express vs Nest</title>
      <author>kim-jos</author>
      <pubDate>Wed, 10 Nov 2021 11:31:08 +0000</pubDate>
      <link>https://dev.to/jokim/express-vs-nest-1l14</link>
      <guid>https://dev.to/jokim/express-vs-nest-1l14</guid>
      <description>&lt;p&gt;I had the opportunity to create a simple backend program with CRUD operations using ExpressJS though I've been using NestJS. I personally enjoyed using NestJS a lot more than ExpressJS because 1) ExpressJS doesn't provide a structure for your project and 2) NestJS requires less set up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Structure&lt;/strong&gt;&lt;br&gt;
I like the fact that NestJS provides a set structure for all your projects. If you see NestJS projects you'll notice that almost all their projects are structured very similarly. But ExpressJS provides a lot of freedom for the structure of your projects. I think that there is a best practice but if you see 100 different ExpressJS projects I can guarantee that there will be more variety in project structures when compared NestJS. &lt;/p&gt;

&lt;p&gt;I guess that freedom is good for others but bad for people with little experience. Let's get into the details of how it is different. Let's say that there are two different modules: User and Game. Nest structures this by putting all the User related files into a folder called User. That module would have a controller, service, repository, entity, and other testing files. ExpressJS, based on my personal experience, structures their projects according to its function. For example, all the controllers are grouped together and other routers are grouped together, etc.&lt;/p&gt;

&lt;p&gt;Nest Controller == Express Router&lt;br&gt;
Nest Service == Express Controller&lt;br&gt;
Nest Repository == Express Repository&lt;br&gt;
Nest Entity == Express Model&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Set up&lt;/strong&gt;&lt;br&gt;
Another reason I enjoy using NestJS is because everything is nicely set up for you. When I started my project there were so many errors in ExpressJS and I wasted too much time trying to figure it out. NestJS also provides a great CLI which makes it easy to get started because all the boiler plate code is already created for you.&lt;/p&gt;

&lt;p&gt;Although learning dependency injection, inversion of control, and other weird crazy words is difficult in the beginning NestJS really helps users focus on the project at hand instead of the set up which is really convenient for me personally.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Day 33 of 100 Days of Code &amp; Scrum: Skeleton Layout for My Hero Banner</title>
      <author>Rammina</author>
      <pubDate>Wed, 10 Nov 2021 11:17:22 +0000</pubDate>
      <link>https://dev.to/rammina/day-33-of-100-days-of-code-scrum-skeleton-layout-for-my-hero-banner-34pj</link>
      <guid>https://dev.to/rammina/day-33-of-100-days-of-code-scrum-skeleton-layout-for-my-hero-banner-34pj</guid>
      <description>&lt;p&gt;Greetings, everyone!&lt;/p&gt;

&lt;p&gt;Today, I got to spend a lot of time working on my website as well as learning Next.js. I was also deciding on the layout and using other web development agencies as a reference. Either way, it was just a relatively smooth day for me.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I just reviewed some Next.js and Scrum concepts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I coded the hero banner skeleton layout for my homepage.&lt;/li&gt;
&lt;li&gt;added a temporary hero banner message (most likely will replace later).&lt;/li&gt;
&lt;li&gt;still contemplating on what kind of design the hero banner will have (color scheme, image, CTAs).&lt;/li&gt;
&lt;li&gt;I decided I would just go for a single page MVP first, with everything on the homepage and then make other pages afterwards.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  Typescript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I managed to squeeze in a little bit of Typescript by reading the handbook.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a good day, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The Typescript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>What is The Serverless Edge?</title>
      <author>The Serverless Edge</author>
      <pubDate>Wed, 10 Nov 2021 11:10:16 +0000</pubDate>
      <link>https://dev.to/serverlessedge/what-is-the-serverless-edge-1cl7</link>
      <guid>https://dev.to/serverlessedge/what-is-the-serverless-edge-1cl7</guid>
      <description>&lt;p&gt;Originally published on &lt;a href="http://www.theserverlessedge.com"&gt;www.theserverlessedge.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reading Time: 4 minutes&lt;/p&gt;

&lt;p&gt;Serverless computing has become a term for how we build software. It is more than the compute; it is a mindset. A DataDog survey in 2020 stated that 50% of AWS users had serverless components, and container users are flocking to Lambda – one of the AWS Serverless Services. &lt;/p&gt;

&lt;p&gt;Many experts and leaders are still not convinced that Serverless will lead to the Future of Work and Emerging Technology. People don’t make the connection. What part does it play in the Future of Work and the 4th Industrial Revolution? We will explore this to help you learn in our blog content and case studies.&lt;/p&gt;

&lt;p&gt;We believe serverless is a gateway into many new ways of working – a technology-led, low friction, and high-value future. &lt;/p&gt;

&lt;p&gt;Why serverless?&lt;br&gt;
It represents the cutting edge of how we build business and web applications. Every business needs software, it needs it fast, and it must be cheap. Imagine if you could combine that with the ability to create a fast feedback flow and have an unlimited selection of tech to use? This is what Serverless means for business leaders. Unfortunately, the serverless term is quite technical and low-level. &lt;/p&gt;

&lt;p&gt;We want to change that. We want to support the leading edge of software development to create business capability and performance. No immense complexity security problems or large data centers. Just give it to me straight, quickly and don’t make me spend loads of money on code.&lt;/p&gt;

&lt;p&gt;Many think of Serverless as a new method of compute, which is incorrect. It is not comparable to containers. The first Serverless service in AWS was S3 – the Simple Storage Service. The definition of Serverless gets quite opinionated, so it’s explored further in this article by Ben Kehoe.&lt;/p&gt;

&lt;p&gt;How is it linked to the Future of work?&lt;br&gt;
Software is eating the World – a famous quote from Andersson in 2011. Digital is not just a channel; it’s a new mindset and will continue to redefine our workplaces into the ’20s and the ’30s. Unthinkable new business capability can be co-created with the Serverless mindset. This leads to different ways of working, collaboration patterns, the ability to reimagine work and reinvent how we deliver value to our customers. There are new business models that are generating millions of dollars, and textbooks cannot keep up.&lt;/p&gt;

&lt;p&gt;Scale down to scale up&lt;br&gt;
Technical Change for this future has already happened. Organizational change is still behind – people move slower than technology. This is fact and not criticism. The days of having 300 people in a massive programme of work are fading out. It’s wasteful (many people are in coordination roles) and slow. Imagine you could shrink down to a single, cross-functional team that included everyone required to create the vision, discover, decide, build and deliver? Serverless gives you the ability to develop software with minimal hand-offs, so you can scale down to scale up.&lt;/p&gt;

&lt;p&gt;Technology of tomorrow&lt;br&gt;
We are living in fascinating times. Artificial Intelligence has never been more accessible and powerful. We can achieve results now that we didn’t dream of a year ago. IoT and the sensor revolution expands weekly, touching every industry. Connectivity and networks invent every few years as standards evolve. Interfaces with computers created in the 1960s are finally starting to see a revolution. It has taken us around 50 years to get voice to a state that it feels natural. Quantum compute, capable of incredible speeds, is supposedly around the corner. What does this mind-boggling list have in common? Only ten years ago, if you wanted to bring in one of these capabilities into your business, the first step was to request and write a substantial cheque and wait several months. Today a student at college can integrate any of these technologies with her Serverless application in minutes, and the cost is minimal. &lt;/p&gt;

&lt;p&gt;Yes, you can use serverless to build a webpage and process payments for your business. You can also think of software as a series of events and start introducing exciting new technology into your business. An IoT use case? Need to process lots of data? Need a Voice Assistant? Need to connect many disparate systems? Serverless can make all of this a lot easier.&lt;/p&gt;

&lt;p&gt;The Serverless Edge&lt;br&gt;
The Serverless Edge title implies that we will keep on the leading edge of business. We will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;focus on business&lt;/li&gt;
&lt;li&gt;explain how the latest technology is evolving and join the 
dots for you&lt;/li&gt;
&lt;li&gt;make predictions about the Future of Work and how new 
technology will change the game, and&lt;/li&gt;
&lt;li&gt;comment on the ever-complex challenges of running efficient 
engineering functions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Serverless brings all this together as it’s a mindset, a serverless edge mindset that encourages Simplicity, Speed, Innovation, Value and the Customer. We understand the details, but we are not going to focus on Functions, Cloud Configurations or Containers – these are critical, but other sites are more comprehensive. We will retain a Serverless mindset and focus on Business Value.&lt;/p&gt;

&lt;p&gt;The Serverless Edge will stay ahead and give you insights into the Serverless Mindset, the Future of Work for business and engineers and the impact of new technology. We will look at all of this through the lens of business value and (hopefully) use plain English.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>devops</category>
      <category>aws</category>
      <category>leadership</category>
    </item>
  </channel>
</rss>
