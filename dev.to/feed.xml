<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Django - How to keep secrets safe with python-dotenv</title>
      <author>Hannah</author>
      <pubDate>Tue, 31 Aug 2021 16:54:27 +0000</pubDate>
      <link>https://dev.to/earthcomfy/django-how-to-keep-secrets-safe-with-python-dotenv-5811</link>
      <guid>https://dev.to/earthcomfy/django-how-to-keep-secrets-safe-with-python-dotenv-5811</guid>
      <description>&lt;p&gt;Often when working on a django project, we have some secret keys, OAuth keys and other critical information that needs to be kept safe and private. By no means should you expose such kind of keys because it makes your system vulnerable to security attacks.&lt;/p&gt;

&lt;p&gt;Today, we are going to see how we can use &lt;strong&gt;python-dotenv&lt;/strong&gt; to keep such kind of information hidden. As we can read from the &lt;a href="https://pypi.org/project/python-dotenv/"&gt;docs&lt;/a&gt;, basically what &lt;strong&gt;python-dotenv&lt;/strong&gt; does is read key-value pairs from a .env file and set them as environment variables to be retrieved later.&lt;/p&gt;

&lt;p&gt;First and foremost let's install this module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dotenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a &lt;em&gt;.env&lt;/em&gt; file in the root directory of our project. This is where we will put key value pairs of all the environment variables required by our application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#okay-what-should-we-put-in-the-env-file"&gt;
  &lt;/a&gt;
  Okay, what should we put in the &lt;em&gt;.env&lt;/em&gt; file?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://docs.djangoproject.com/en/dev/ref/settings/#secret-key%5B"&gt;secret key&lt;/a&gt; that comes with every django project - This needs to be kept private because it's the crucial part of security in django. &lt;/li&gt;
&lt;li&gt;Social auth configs for Github&lt;/li&gt;
&lt;li&gt;Social auth configs for Google or any other OAuth keys.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.env&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SECRET_KEY = 'YOUR SECRET KEY'

GITHUB_KEY = 'YOUR GITHUB KEY'
GITHUB_SECRET = 'YOUR GITHUB SECRET KEY'

GOOGLE_KEY = 'YOUR GOOGLE KEY'
GOOGLE_SECRET = 'YOUR GOOGLE SECRET KEY'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Pull these configs from .env and load them in the settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;settings.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;
&lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# loads the configs from .env
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now instead of exposing our secret keys and OAuth keys in the settings, let's retrieve them through their key names as follows.&lt;/p&gt;

&lt;p&gt;settings.py&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# SECURITY WARNING: keep the secret key used in production secret!
&lt;/span&gt;&lt;span class="n"&gt;SECRET_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# social auth configs for github
&lt;/span&gt;&lt;span class="n"&gt;SOCIAL_AUTH_GITHUB_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'GITHUB_KEY'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL_AUTH_GITHUB_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'GITHUB_SECRET'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# social auth configs for google
&lt;/span&gt;&lt;span class="n"&gt;SOCIAL_AUTH_GOOGLE_OAUTH2_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'GOOGLE_KEY'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'GOOGLE_SECRET'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it, with these simple steps we are able to make our app more secure. &lt;/p&gt;

&lt;p&gt;Thanks for your time. You can find the finished app in &lt;a href="https://github.com/earthcomfy/Django-registration-and-login-system"&gt;github&lt;/a&gt;. See you next time with another part of the series.&lt;/p&gt;

&lt;p&gt;Any comments and suggestions are welcome.&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>5 JetBrains plugins to upgrade the built-in Git support to the next level!
</title>
      <author>Thomas Scott</author>
      <pubDate>Tue, 31 Aug 2021 16:09:48 +0000</pubDate>
      <link>https://dev.to/anotherdevuser/5-jetbrains-plugins-to-upgrade-the-builtin-git-support-to-the-next-level-3ojf</link>
      <guid>https://dev.to/anotherdevuser/5-jetbrains-plugins-to-upgrade-the-builtin-git-support-to-the-next-level-3ojf</guid>
      <description>&lt;p&gt;The Git plugin that comes bundled with all JetBrains IDEs is actually quite impressive, it's a full blown Git client in its own right with almost all the features of a standalone client such as SourceTree, Tower or GitKraken but built into the IDE.&lt;/p&gt;

&lt;p&gt;But there are even more features you can enhance your IDE’s Git support with - allow me to present to you 5 plugins that build on top of Git and supercharge it with cool new superpowers!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gitlive"&gt;
  &lt;/a&gt;
  &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;GitLive&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This plugin is for all you team players out there, GitLive makes Git, well, live. &lt;/p&gt;

&lt;p&gt;It adds a tool window where you can see the collaborators from your repository, if they are online, and all their work in progress (branches/issues/PRs they are working on not yet merged in) where you can view diffs of the file changes, all updated in real-time.&lt;/p&gt;

&lt;p&gt;Their flagship feature, instant merge conflict detection, provides early warning of potential merge conflicts. Real-time gutter indicators show ​​where your teammates have made changes to the file you’re currently working on, which can be very useful, especially on the bigger projects. &lt;/p&gt;

&lt;p&gt;On top of that, GitLive also supports starting a Code With Me session with a fellow collaborator via a single click (or keyboard shortcut), and for those pesky collaborators that use VS Code there is even cross-IDE codeshare support!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top reason to try it out:&lt;/strong&gt; &lt;br&gt;
Bring communication and collaboration within your team to the next level!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ynau_nAG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629910035918/aQ5amhEmB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ynau_nAG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629910035918/aQ5amhEmB.png" alt="gitlive.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-machete"&gt;
  &lt;/a&gt;
  &lt;a href="https://plugins.jetbrains.com/plugin/14221-git-machete"&gt;Git Machete&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Producing small PRs is definitely a good practice, but it’s easy to get lost in multiple branches and stacked PRs. Git Machete is a useful plugin that helps you keep track of all the branches, their relationship with each other and with the remote repository. It also aims at automation of git actions and makes rebase/push/pull hassle-free (just a click on the button!), especially in the situation where there are a lot of branches and PRs. &lt;/p&gt;

&lt;p&gt;This plugin automatically discovers branch layout and creates a tree-shaped graph of branches (in case of any changes or inaccuracies you can also modify it manually in .git/machete text file). The graph provides useful information about the branches: sync to parent status, sync to remote status and custom annotation (there is also an option to toggle the unique commits for branches). &lt;/p&gt;

&lt;p&gt;After right-clicking on a chosen branch in the graph, you can perform git actions like rebase/push/pull on that branch without a need to switch from your current branch, which is very handy!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top reason to try it out:&lt;/strong&gt; &lt;br&gt;
Organize your Git repository and automate your workflow!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iSVwe-XX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629914236043/CRF0AZ17F.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iSVwe-XX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629914236043/CRF0AZ17F.png" alt="git-machete-2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gittoollbox"&gt;
  &lt;/a&gt;
  &lt;a href="https://plugins.jetbrains.com/plugin/7499-gittoolbox"&gt;GitToollBox&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The plugin adds extra features to the default IntelliJ Git support. With just one glance you can see how many commits is your branch ahead or behind, track uncommitted changes or easily perform branch cleanup. GitToolBox also automatically fetches changes  from the upstream repository, with configurable frequency. &lt;/p&gt;

&lt;p&gt;The biggest perk of using the plugin is the inline blame annotation, as IntelliJ does not come with a similar feature. Git Blame Display will show the author, date and time and commit subject for the current line. Additionally, with the Show Blame Details action, you can get more detailed information, like commit hash or full message. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top reason to try it out:&lt;/strong&gt; &lt;br&gt;
Extend Git with additional features and benefit from inline blame annotation!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dt4sLTQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629912904524/ZxrbQM2vP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dt4sLTQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629912904524/ZxrbQM2vP.png" alt="git-toolbox.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-branch-cleaner"&gt;
  &lt;/a&gt;
  &lt;a href="https://plugins.jetbrains.com/plugin/10059-git-branch-cleaner"&gt;Git Branch Cleaner&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Simple yet effective plugin, that deletes branches you don’t need anymore. All the branches without tracking remotes are going to be listed (except the current branch) and checked if they are fully merged to the current branch. Branches that are not merged to HEAD are not selected by default.&lt;/p&gt;

&lt;p&gt;In the newest versions, plugin can be found via searched tools:&lt;br&gt;
Navigate &amp;gt; Search Everywhere &amp;gt; Delete Old Branches instead of  VCS &amp;gt; Git &amp;gt; Delete Old Branches.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top reason to try it out:&lt;/strong&gt; &lt;br&gt;
Get rid of the clutter and keep your branches organized!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecXNemk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629912913724/QK5MQM5Lm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecXNemk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629912913724/QK5MQM5Lm.png" alt="git-branch-cleaner.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-bisect-run"&gt;
  &lt;/a&gt;
  &lt;a href="https://plugins.jetbrains.com/plugin/10874-git-bisect-run"&gt;Git Bisect Run&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Git Bisect is one of those Git features that are very handy but can be intimidating. Git Bisect Run is a handy plugin that automates the process and makes troubleshooting much faster. &lt;/p&gt;

&lt;p&gt;The plugin emulates git bisect run behavior. With just a click it will perform Bisect Run and all the appropriate Git commands depending on test invocation results, minimising our manual input. Once the plugin singles out the bad commit, a popup notification will appear in the IDE (as it’s language agnostic, it works in all JetBrians IDEs). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top reason to try it out:&lt;/strong&gt; &lt;br&gt;
Makes bug hunting easier than ever by automating the process!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y_WDonVZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630426030910/KSwlSOs4h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y_WDonVZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630426030910/KSwlSOs4h.png" alt="git-bisect-3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I hope some of the awesome plugins I lined up in this post make working with Git easier and smoother for you. Happy hacking!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>git</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Connecting a React Frontend to a Flask backend.</title>
      <author>Ondiek Elijah</author>
      <pubDate>Tue, 31 Aug 2021 15:49:12 +0000</pubDate>
      <link>https://dev.to/dev_elie/connecting-a-react-frontend-to-a-flask-backend-h1o</link>
      <guid>https://dev.to/dev_elie/connecting-a-react-frontend-to-a-flask-backend-h1o</guid>
      <description>&lt;p&gt;React with Flask? That's a fantastic combination.&lt;/p&gt;

&lt;p&gt;You've most likely used Flask without a frontend framework in your projects. It is not always user friendly, regardless of how it works. For example, unless you've written some advanced JQuery form submission techniques, submitting a form will result in a page reload.&lt;/p&gt;

&lt;p&gt;However, with React on the frontend, there is no need for a page reload upon form submission, and you may revel in the delights of automatic UI updates.&lt;/p&gt;

&lt;p&gt;In this tutorial, I will show you how to connect to a Flask backend, collect data from it, and then display the information on the browser using React.&lt;/p&gt;

&lt;p&gt;Also, I'll assume you're familiar with Flask and React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-structure"&gt;
  &lt;/a&gt;
  Application structure
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;react_flask_app&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;├── &lt;b&gt;backend&lt;/b&gt;&lt;br&gt;
│   ├── app.py&lt;br&gt;
│   ├── database.db&lt;br&gt;
│   ├── manage.py&lt;br&gt;
│   ├── migrations&lt;br&gt;
│   │   ├── alembic.ini&lt;br&gt;
│   │   ├── env.py&lt;br&gt;
│   │   ├── README&lt;br&gt;
│   │   ├── script.py.mako&lt;br&gt;
│   │   └── versions&lt;br&gt;
│   ├── models.py&lt;br&gt;
│   ├── requirements.txt&lt;br&gt;
│   ├── routes.py&lt;br&gt;
│   └── run&lt;br&gt;
├── &lt;b&gt;frontend&lt;/b&gt;&lt;br&gt;
│   ├── package.json&lt;br&gt;
│   ├── package-lock.json&lt;br&gt;
│   ├── public&lt;br&gt;
│   │   └── index.html&lt;br&gt;
│   ├── README.md&lt;br&gt;
│   └── src&lt;br&gt;
│       ├── App.css&lt;br&gt;
│       ├── App.js&lt;br&gt;
│       ├── Components&lt;br&gt;
│       │   └── ArticleList.js&lt;br&gt;
│       └── index.js&lt;br&gt;
└── README.md&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For this tutorial, setup instructions and scripts can be found on my &lt;a href="https://github.com/Dev-Elie/Connecting-React-Frontend-to-a-Flask-Backend"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#part-1"&gt;
  &lt;/a&gt;
  Part 1.
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#setting-up-flask-backend"&gt;
  &lt;/a&gt;
  Setting up Flask backend
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. app.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Import the required packages
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SQLAlchemy&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_migrate&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Migrate&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_marshmallow&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Marshmallow&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_cors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CORS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We import different dependencies in the preceding lines of code to make them available for use within our file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SQLAlchemy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;migrate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Migrate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Marshmallow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CORS&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code snippet above creates several application instances. Because order matters, SQLAlchemy must be initialized before Marshmallow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_app&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="s"&gt;"""Application-factory pattern"""&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"SQLALCHEMY_DATABASE_URI"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"sqlite:///database.db"&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SQLALCHEMY_TRACK_MODIFICATIONS'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

    &lt;span class="c1"&gt;# Initialize extensions
&lt;/span&gt;    &lt;span class="c1"&gt;# To use the application instances above, instantiate with an application:
&lt;/span&gt;    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;migrate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_app&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The application factory pattern is described above. It is better to design your extensions and app factories so that the extension object is not initially connected to the application.&lt;/p&gt;

&lt;p&gt;Any configuration, registration, or other setup required by the program will take place within the function, after which the application will be returned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. manage.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="s"&gt;"""Run deployment tasks."""&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;create_app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask_migrate&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;migrate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;stamp&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Articles&lt;/span&gt;

    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app_context&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# create database and tables
&lt;/span&gt;    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# migrate database to latest revision
&lt;/span&gt;    &lt;span class="n"&gt;stamp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;migrate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;upgrade&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The manage.py file allows us to conduct deployment tasks, initialize the database, check for schema changes, and then migrate it to the most recent version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;models.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Articles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;primary_key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;Articles %r&amp;gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;

&lt;span class="c1"&gt;# Generate marshmallow Schemas from your models
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ArticlesShema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Fields to expose
&lt;/span&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"body"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;article_schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ArticlesShema&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;articles_schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ArticlesShema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For serialization, the objects &lt;code&gt;article_schema&lt;/code&gt; and &lt;code&gt;articles_schema&lt;/code&gt; are utilized. The first serializes a single article, while the second serializes a queryset.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;routes.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;# Create an application instance
&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Define a route to fetch the available articles
&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/articles"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;strict_slashes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

    &lt;span class="n"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Articles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;articles_schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above snippet, we design a route that will collect the data, then serialize objects by giving them to the schema's dump method, which will provide the structured result. &lt;a href="https://r2c.dev/blog/2020/bento-check-use-jsonify-instead-of-json-dumps-in-flask/#:~:text=jsonify()%20is%20a%20helper,could%20lead%20to%20unintended%20results."&gt;jsonify()&lt;/a&gt; produces a Response object with the mimetype application/json set.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-2"&gt;
  &lt;/a&gt;
  Part 2.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-react-frontend"&gt;
  &lt;/a&gt;
  Setting up React frontend
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#fetching-data-from-flask"&gt;
  &lt;/a&gt;
  Fetching data from Flask
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;br&gt;
Connecting to a Flask backend may appear complicated, however this is not always the case. The only need is that the path to the flask api be provided. This can be accomplished by following the instructions below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setArticles&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:5000/articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;methods&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;headers&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setArticles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

  &lt;span class="p"&gt;},[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React hooks enable you to use state and other React features without having to construct a class.&lt;/p&gt;

&lt;p&gt;A call to the &lt;code&gt;useEffect&lt;/code&gt; hook allows us to do a DOM update after the render. In this case, we're instructing React to update the DOM with a json response from our flask api after the render.&lt;/p&gt;

&lt;p&gt;This method is executed on every update, ensuring that the UI is always in the most recent state.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;useState&lt;/code&gt; hook, which is now set to an empty list, will be updated with fresh data from our backend; it returns a pair of values: the current state and a function that updates it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Components/ArticleList.js&lt;/strong&gt;&lt;br&gt;
We now have data from our backend; the next step is to iterate through the queryset, displaying each article's title, description, and date of publication.&lt;/p&gt;

&lt;p&gt;We'll make an &lt;code&gt;ArticleList&lt;/code&gt; component out of a list of articles.This component receives props that we will pass in the next phase.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ArticleList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mt-2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* Display the article details if article is not None */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;

              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;hr&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="p"&gt;})}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ArticleList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need to export the component we just constructed so that it may be imported into other components.&lt;/p&gt;

&lt;p&gt;Returning to our App.js, we import the component we constructed and exported as seen below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ArticleList&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Components/ArticleList&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We pass the &lt;code&gt;ArticleList&lt;/code&gt; component to the DOM after making it available, as well as the &lt;code&gt;articles&lt;/code&gt; - the current state effect from the &lt;code&gt;useState&lt;/code&gt;, which is then consumed as props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App container m-4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Connecting&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Frontend&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;Flask&lt;/span&gt; &lt;span class="nx"&gt;Backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ArticleList&lt;/span&gt; 
      &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now have a complete Flask + React app that uses Flask to collect data from a SQlite database and React to render output on the browser. If you followed along as you did, you should have output similar to the one below on the browser.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j0sW3AlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uak7idotg5nr635mpv5s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j0sW3AlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uak7idotg5nr635mpv5s.png" alt="Sample output"&gt;&lt;/a&gt;&lt;br&gt;
In the introductory section of this tutorial, I've included a link to the GitHub repository.&lt;/p&gt;

&lt;p&gt;Thank you for reading. Please like, share, and leave a comment below.&lt;/p&gt;

&lt;p&gt; &lt;a href="https://twitter.com/dev_elie"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dCkibaup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/twitter/follow/dev_elie%3Flogo%3Dtwitter%26style%3Dfor-the-badge" alt="dev_elie"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://flask.palletsprojects.com/en/2.0.x/"&gt;flask.palletsprojects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/"&gt;reactjs.org&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>react</category>
      <category>python</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5th Anniversary of the Excelize Open Source 🎉</title>
      <author>xuri</author>
      <pubDate>Tue, 31 Aug 2021 15:44:38 +0000</pubDate>
      <link>https://dev.to/xuri/5th-anniversary-of-the-excelize-open-source-21ki</link>
      <guid>https://dev.to/xuri/5th-anniversary-of-the-excelize-open-source-21ki</guid>
      <description>&lt;p&gt;Excelize (&lt;a href="https://github.com/xuri/excelize"&gt;github.com/xuri/excelize&lt;/a&gt;) since 2016 has become the popular choice to process spreadsheets documents among cloud-native and especially among Go language developers. Deep in essence and known for their professional support and well capabilities, Excelize is being widely used by large Internet companies, SME customers, and startup companies. Now, for the 5th anniversary of the Excelize open source, it has been released 16 versions, more than 100 contributors have participated in code contributing. I would like to thank all those who support the development and contributions of the project, and I'm very happy to be able to help anyone in need it. For me personally, creating and maintaining an open-source project requires not only the ability to write code, write documentation, and community management, the more important thing is how to keep the enthusiasm, happy, energetic, and efficient output state.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Excelize Star History&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XOlKQEJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/wp-content/uploads/2021/08/excelize_5th_stargazers.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XOlKQEJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/wp-content/uploads/2021/08/excelize_5th_stargazers.png" alt="Excelize Star History on 5th Anniversary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Excelize Contributors&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8I3SaEog--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/wp-content/uploads/2021/08/excelize_5th_contributors.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8I3SaEog--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xuri.me/wp-content/uploads/2021/08/excelize_5th_contributors.png" alt="Excelize Contributors on 5th Anniversary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the future, I'll continue to work with developers in the community to optimize functions, capabilities, and performance, including to:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Make more API support concurrency safety&lt;/li&gt;
    &lt;li&gt;Keep to optimization performance for generating or reading data from a worksheet with huge amounts of data&lt;/li&gt;
    &lt;li&gt;More formula functions support in the calculation engine&lt;/li&gt;
    &lt;li&gt;Complex conditional format settings, data prediction support, etc.&lt;/li&gt;
    &lt;li&gt;Support more Chart style settings&lt;/li&gt;
    &lt;li&gt;PivotTable, PivotChart, Slicer&lt;/li&gt;
    &lt;li&gt;Number format parsing&lt;/li&gt;
    &lt;li&gt;Workbook encryption&lt;/li&gt;
    &lt;li&gt;More API will be support in the streaming reading and writing mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At last, welcome to contribute to Excelize.&lt;/p&gt;

</description>
      <category>go</category>
      <category>excel</category>
      <category>xlsx</category>
    </item>
    <item>
      <title>Serverless observability and real-time debugging with Dashbird [tutorial]</title>
      <author>Taavi Rehemägi</author>
      <pubDate>Tue, 31 Aug 2021 15:29:41 +0000</pubDate>
      <link>https://dev.to/dashbird/serverless-observability-and-real-time-debugging-with-dashbird-tutorial-17ai</link>
      <guid>https://dev.to/dashbird/serverless-observability-and-real-time-debugging-with-dashbird-tutorial-17ai</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UANCmPyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AkSHKsdvX5XssvrFLfKDUQA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UANCmPyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AkSHKsdvX5XssvrFLfKDUQA.png" alt="serverless observability&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Image by&lt;a href="https://dashbird.io/"&gt; Dashbird.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Systems run into problems all the time. To keep things running smoothly, we need to have an error &lt;strong&gt;monitoring and logging system&lt;/strong&gt; to help us discover and resolve whatever issue that may arise as soon as possible. The bigger the system the more challenging it becomes to &lt;strong&gt;monitor&lt;/strong&gt; it and &lt;strong&gt;pinpoint&lt;/strong&gt; the issue. And with serverless systems with 100s of services running concurrently, monitoring and troubleshooting are even more challenging tasks.&lt;/p&gt;

&lt;p&gt;In my last article, I introduced &lt;a href="https://dashbird.io/"&gt;&lt;strong&gt;Dashbird.io&lt;/strong&gt;&lt;/a&gt;, serverless monitoring and observability platform specifically designed to provide &lt;strong&gt;enhanced monitoring, actions, and architectural improvements&lt;/strong&gt; for your AWS-based serverless systems and how it &lt;strong&gt;fills the gaps&lt;/strong&gt; left by traditional monitoring services.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To learn more about Dashbird's features and how to set it up, check out &lt;a href="https://dashbird.io/blog/getting-started-with-dashbird/"&gt;my previous article&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#lambda-use-case-for-dashbird"&gt;
  &lt;/a&gt;
  Lambda Use Case for Dashbird
&lt;/h2&gt;

&lt;p&gt;Dashbird has a lot of cool features to offer and in this article, I'll be specifically showcasing how we can use those cool features to help debug serverless systems. For demonstration purposes, I have devised a lambda-based serverless use case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OqARZYvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A4EQKc5a4JKbc_ylcec_isQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OqARZYvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2A4EQKc5a4JKbc_ylcec_isQ.png" alt="lambda architecture use case&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lambda Use Case Architecture&lt;/p&gt;

&lt;p&gt;The architecture is simple enough, the client uploads images to a source S3(to learn more about S3 &lt;a href="https://medium.com/analytics-vidhya/amazon-s3-for-dummies-infinite-storage-on-the-cloud-cdc43da0c013"&gt;&lt;strong&gt;click here&lt;/strong&gt;&lt;/a&gt;) bucket. An S3 trigger is set up between our &lt;a href="https://medium.com/geekculture/aws-lambda-for-dummies-serverless-computing-on-the-cloud-a9fb3ca95427"&gt;Lambda function&lt;/a&gt; (to learn more about lambda service &lt;a href="https://medium.com/geekculture/aws-lambda-for-dummies-serverless-computing-on-the-cloud-a9fb3ca95427"&gt;&lt;strong&gt;click here&lt;/strong&gt;&lt;/a&gt;) which is invoked by S3 whenever a PUT request(an image is uploaded) is made on the source bucket. The lambda function extracts the metadata information of the image and saves the data in our destination DynamoDB table. Check out &lt;a href="https://medium.com/analytics-vidhya/serverless-image-processing-with-aws-lambda-and-s3-50e8966eeb0d"&gt;this article&lt;/a&gt; to learn more about S3 and AWS Lambda Triggers.&lt;/p&gt;

&lt;p&gt;We know AWS Lambda has its own set of challenges, a lot of times we run into various issues such as function time outs, out-of-memory issues, python exceptions, configuration errors, etc. Using the above architecture I'll be creating various scenarios to mock various challenges with AWS Lambda these include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Cold Starts and Latency Issues.&lt;/li&gt;
&lt;li&gt;  Function Timeouts.&lt;/li&gt;
&lt;li&gt;  Out of Memory Exceptions.&lt;/li&gt;
&lt;li&gt;  Function Configuration issues.&lt;/li&gt;
&lt;li&gt;  Lambda cost monitoring.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These challenges can be very well addressed using &lt;strong&gt;Dashbird &lt;/strong&gt;which provides very precise information regarding each of the above-mentioned issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-dashbird-to-manage-lambda-challenges"&gt;
  &lt;/a&gt;
  Using Dashbird to Manage Lambda Challenges
&lt;/h2&gt;

&lt;p&gt;In this part of the article, I'll focus on how we can use Dashbird to efficiently manage some of the common challenges we face with AWS Lambda. If you haven't configured Dashbird with your AWS account yet check out my &lt;a href="https://aws.plainenglish.io/dashbird-a-best-in-class-solution-to-serverless-monitoring-2ef791636dcc"&gt;last article&lt;/a&gt; to learn how.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Once we have set up Dashbird with our AWS account, Dashbird analyzes different services we are using from our account. Once logged in to Dashbird, we land on the dashboard which gives us a birds-eye-view of our entire account activity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_twq-Ywx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AP5_PYe_uMPZQNJiYdEsuJA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_twq-Ywx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AP5_PYe_uMPZQNJiYdEsuJA.png" alt="serverless dashboard&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashboard&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  From the dashboard, we can navigate to different modules of Dashbird to dig into different errors or warnings that may have occurred in our system. As we can see from above, I faced several errors while my system was running.&lt;/li&gt;
&lt;li&gt;  Clicking on an error takes us to the '&lt;strong&gt;Events&lt;/strong&gt;' module, which details the error we faced.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fnqWATdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Aqd28csMN3--Z3xJJ-Puglg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fnqWATdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Aqd28csMN3--Z3xJJ-Puglg.png" alt="serverless events&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashbird's Event Module&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-dashbird-for-monitoring-lambda-cold-starts-and-latency-issues"&gt;
  &lt;/a&gt;
  Using Dashbird for monitoring Lambda Cold Starts and Latency Issues:
&lt;/h3&gt;

&lt;p&gt;Cold starts are a major contributor to &lt;strong&gt;degrading&lt;/strong&gt; lambda performance. Especially for real-time systems, the impacts of cold starts are not very desirable since with each added lambda cold start the &lt;strong&gt;latency&lt;/strong&gt; experienced increases. Dashbird helps us to very efficiently &lt;strong&gt;analyze&lt;/strong&gt; which of our lambda functions faced &lt;strong&gt;cold starts &lt;/strong&gt;and its impact on the &lt;strong&gt;function latency&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;From the &lt;strong&gt;Inventory&lt;/strong&gt; module, we can easily analyze which of our functions are facing cold starts and from the &lt;strong&gt;Alarms&lt;/strong&gt; module, we can set up alarms for timely alerting us whenever lambda cold starts exceed a certain threshold.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;--- Monitoring Cold Starts and Function Latency:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  From the navbar on the left click on "&lt;strong&gt;Inventory&lt;/strong&gt;" and then click on the &lt;strong&gt;lambda resource&lt;/strong&gt; you want to view. As we can see below, we get a lot of useful information regarding our Lambda function invocations like total invocations, how many errors occurred, how many invocations had cold starts, total duration of execution, percentage of memory consumed, and cost incurred.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YvYNWOXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AsJfg5Tz8kN4ijQN_d7D5CA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YvYNWOXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AsJfg5Tz8kN4ijQN_d7D5CA.png" alt="analyzing cold starts&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1- Analyzing Lambda Cold Starts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Clicking on the "&lt;strong&gt;ColdStarts&lt;/strong&gt;" tab further shows a graph of how many times our lambda function faced cold start and at what times it occurred.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oLdNC00_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGDGA4sl1EVKcDv6mgCKWOg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oLdNC00_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGDGA4sl1EVKcDv6mgCKWOg.png" alt="lambda cold starts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- Analyzing Lambda Cold Starts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  We can also individually analyze a specific lambda invocation. In the "&lt;strong&gt;Recent Invocations&lt;/strong&gt;" section at the bottom, click on the invocation you want to view which will further detail all the necessary information associated with that invocation.&lt;/li&gt;
&lt;li&gt;  As we can see below, our lambda invocation is appropriately flagged with a &lt;strong&gt;cold start label&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-s4SLfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Apa-hmNo-Tm8jObyLxiDS0A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-s4SLfz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Apa-hmNo-Tm8jObyLxiDS0A.png" alt="aws lambda cold starts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3- Analyzing Lambda Cold Starts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Clicking on the "&lt;strong&gt;Duration&lt;/strong&gt;" tab displays the total time of execution of all lambda invocations and also a curve plot displaying the &lt;strong&gt;average, min, and max&lt;/strong&gt; execution times taken by our lambda invocations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SEMesFUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AJ-T7k10CbwgwwetMQR-baw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SEMesFUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AJ-T7k10CbwgwwetMQR-baw.png" alt="function latency"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4- Analyzing Functions Latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--suQIbDcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ANW0Du8GzcLRQlxdQrLxn2w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--suQIbDcP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ANW0Du8GzcLRQlxdQrLxn2w.png" alt="lambda execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5- Average, Min, Max Execution Duration.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  From the "&lt;strong&gt;Recent Invocations&lt;/strong&gt;" section at the bottom, we can also see that the functions with cold starts have a greater execution duration than those without cold starts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;--- Setting up Alarms for Lambda Cold Starts and Latency Issues:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Other than monitoring lambda latency and cold starts, Dashbird also provides us with a great &lt;strong&gt;system alert offering&lt;/strong&gt; using which we can set up metric-based alarms to timely notify us whenever our lambda functions are facing cold starts more than a certain desirable threshold or whenever a function's execution time is exceeding a certain time limit. I will discuss setting up lambda alarms in the coming section on &lt;strong&gt;Dashbird Alarms&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-dashbird-to-deal-with-function-timeouts"&gt;
  &lt;/a&gt;
  Using Dashbird to deal with Function Timeouts:
&lt;/h3&gt;

&lt;p&gt;Lambda functions have a &lt;strong&gt;timeout configuration&lt;/strong&gt; which is the maximum amount of execution time can have after which the function automatically timeouts. The minimum can be &lt;strong&gt;1sec&lt;/strong&gt; and the maximum value for a timeout can be &lt;strong&gt;15mins&lt;/strong&gt;(as of now). Oftentimes, our computations may &lt;strong&gt;exceed&lt;/strong&gt; the timeout limit that we have set. For any such cases, we would want to monitor which functions are facing timeouts and act accordingly. With Dashbird, we can easily deal with Lambda timeouts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  To demonstrate this behavior, I set the timeout for my "&lt;strong&gt;dashbird-img-processing-function" &lt;/strong&gt;lambda to 20 sec, and within my function, I called python's sleep function with 30 sec sleep time. After redeploying I invoked my lambda function.&lt;/li&gt;
&lt;li&gt;  On the "&lt;strong&gt;Dashboard&lt;/strong&gt;", sufficient information was available to see from the total lambda invocations how many faced an error.&lt;/li&gt;
&lt;li&gt;  In the "&lt;strong&gt;Errors&lt;/strong&gt;" section on the bottom left, we can see that our "&lt;strong&gt;dashbird-img-processing-function" &lt;/strong&gt;function faced the "&lt;strong&gt;Task Timed Out Error&lt;/strong&gt;". We can also see the number of invocations(29) that faced the error and the severity(critical) of the error.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jEcjGsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGSDiVYzhGZ_2EOnfyGPX-g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jEcjGsj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AGSDiVYzhGZ_2EOnfyGPX-g.png" alt="lambda timeout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1- Analyzing Lambda Timeouts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Clicking on the said error takes us to the "&lt;strong&gt;Events&lt;/strong&gt;" module. Here we can dig into more details. We can see when the first error occurred, when the last error occurred, the type of error(timeout), its severity, region in which the function is deployed. We also get the stack trace accompanying the error.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yu3TrQR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Az_08n1tqSkWI_EzJsztRnA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yu3TrQR1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Az_08n1tqSkWI_EzJsztRnA.png" alt="aws lambda timeout&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- Analyzing Lambda Timeouts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  From the "&lt;strong&gt;Occurrences&lt;/strong&gt;" section at the bottom, we can also see the details for each individual invocation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FJnVFEFF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AfuCv1LtoIuzUn21EQl7SRA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJnVFEFF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AfuCv1LtoIuzUn21EQl7SRA.png" alt="lambda timeout&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3- Analyzing Lambda Timeouts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Not only this, but Dashbird automatically sends an &lt;strong&gt;email alert&lt;/strong&gt; to our registered email address (or Slack channel, webhooks or SNS) regarding the timeout error prompting us to take necessary actions to resolve the issue. Using the "&lt;strong&gt;Alarms&lt;/strong&gt;" module, we can also set custom Alarms for lambda errors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qQvkDa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A0ym6iFjVRvG8qbfhP7XaTw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qQvkDa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A0ym6iFjVRvG8qbfhP7XaTw.png" alt="serverless alerts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4- Analyzing Lambda Timeouts- Email Alerts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-dashbird-for-lambda-out-of-memory-exceptions"&gt;
  &lt;/a&gt;
  Using Dashbird for Lambda Out of Memory Exceptions:
&lt;/h3&gt;

&lt;p&gt;Just like Lambda has a timeout configuration parameter, there's also a &lt;strong&gt;memory parameter&lt;/strong&gt; that defines the &lt;strong&gt;maximum amount of memory&lt;/strong&gt; a Lambda function can use. The minimum we can set is 128MB and it can go up to a maximum of 10GB(as of now). When performing a memory-intensive task, it is very likely that the function's memory consumption goes beyond the memory limit we have set for our lambda function in which case, the function will throw an "&lt;strong&gt;Out of Memory Exception&lt;/strong&gt;", halting the function's execution. Dashbird has also got this covered and provides us with proper insights and alerts to handle all "Out of Memory" exceptions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  To demonstrate this use case, I set my lambda function's memory limit to 128MB and changed the function such that whenever it is invoked, it will load a large CSV file in memory forcing it to cause a "memory error".&lt;/li&gt;
&lt;li&gt;  After invoking my lambda function, I could see on the dashboard module in my dashbird's account that indeed a memory error has occurred.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P5X-EEzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A3GSnHaEF3Sbq66_6w_L7dQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P5X-EEzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A3GSnHaEF3Sbq66_6w_L7dQ.png" alt="lambda memory error&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1- Analyzing Lambda Memory Errors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  To dig more into the cause of the error, click on the MemoryError tab in the "&lt;strong&gt;Errors"&lt;/strong&gt; section on the bottom left. This takes us to the "&lt;strong&gt;Events" &lt;/strong&gt;module where we get a deeper insight regarding all our critical events.&lt;/li&gt;
&lt;li&gt;  In this view, we can see how many of our lambda invocations caused a memory error, we get a time plot of when each error occurred, we can view the stack trace of the error and each individual invocation can be viewed separately to get even more insights.&lt;/li&gt;
&lt;li&gt;  Dashbird automatically sent an email alert as well to the registered email address to inform about the "&lt;strong&gt;MemoryError&lt;/strong&gt;" that occurred.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VWHqrTi3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A4PWd79jetBdSKFsVvS39Cg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VWHqrTi3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A4PWd79jetBdSKFsVvS39Cg.png" alt="aws lambda memory"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- Analyzing Lambda Memory Errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nr-bsAi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ATJPacLCoc2Y2I3-tKBOhnw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nr-bsAi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ATJPacLCoc2Y2I3-tKBOhnw.png" alt="lambda memory"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3- Analyzing Lambda Memory Errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z9ditT9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ACKLihK-BUvJ4ZrJktbCQ1g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z9ditT9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2ACKLihK-BUvJ4ZrJktbCQ1g.png" alt="aws lambda memory error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4- Dashbird's email alert for Memory Errors.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Just like we can set up alarms for other metrics, Dashbird's "&lt;strong&gt;Alarms&lt;/strong&gt;" module also has metrics for memory consumption which we can set as per our use case to alert us in case memory being used is above a certain threshold. More on Dashbird's alerts in the coming section.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dashbird-for-monitoring-function-configuration-issues"&gt;
  &lt;/a&gt;
  Dashbird for Monitoring Function Configuration Issues
&lt;/h3&gt;

&lt;p&gt;Lambda configuration errors are related to failed function initialization usually due to some improper import. The function execution halts and the function is unable to initialize because of some issue with some module we're trying to import. Just like other Lambda-related errors Dashbird has also got this covered.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  To demonstrate Dashbird's ability to handle "Configuration Errors", I changed my Lambda function such that it tries to import a non-existent module causing a "&lt;strong&gt;Runtime Configuration Error"&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;  From the dashboard, we can see what error occurred and navigate to the "&lt;strong&gt;Events&lt;/strong&gt;" module to get deeper insights. We can see how many of our lambda invocations caused the error, a time plot of when each error occurred, the stack trace of the error and each individual invocation can be viewed separately to get even more insights.&lt;/li&gt;
&lt;li&gt;  And just like for all other errors, Dashbird automatically sent an email alert as well.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZMoea6----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A7Bh2hA1pygOLny-Uq0jXJw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZMoea6----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2A7Bh2hA1pygOLny-Uq0jXJw.png" alt="lambda configuration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1- Analyzing Lambda Configuration Errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5fY5lI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AyXFFN7y97XGbbQGEK5CIpw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5fY5lI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AyXFFN7y97XGbbQGEK5CIpw.png" alt="aws lambda configuration error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- Analyzing Lambda Configuration Errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdVaZQ87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AYY7GC-mnKWSwI96vPs9yxA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdVaZQ87--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AYY7GC-mnKWSwI96vPs9yxA.png" alt="lambda configuration error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3- Analyzing Lambda Configuration Errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ItmY-H7i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AcWAdl2LU4mDyYwUCCnmIFA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ItmY-H7i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AcWAdl2LU4mDyYwUCCnmIFA.png" alt="lambda configuration error alert"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4- Dashbird's email alert for Configuration Errors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lambda-cost-monitoring-with-dashbird"&gt;
  &lt;/a&gt;
  Lambda Cost Monitoring with Dashbird
&lt;/h3&gt;

&lt;p&gt;Dashbird not only helps us monitoring the errors with our serverless systems but also keeps us updated with the cost of operating our infrastructure.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Within our account on the &lt;strong&gt;Dashboard&lt;/strong&gt;, there's a dedicated section to the total cost incurred by our system over a duration of time. Similarly, in the &lt;strong&gt;Inventory &lt;/strong&gt;module, we can separately see for each of our resources the cost of operating that resource.&lt;/li&gt;
&lt;li&gt;  In the &lt;strong&gt;Alarms&lt;/strong&gt; module, we can also set up an alarm for a given resource to notify us when the cost is above a certain threshold.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note --- since I have AWS free tier so my total costs are $0 for now.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2J4FFbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AlShE3I_dzueSP3w8-tSVfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2J4FFbK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AlShE3I_dzueSP3w8-tSVfg.png" alt="monitor lambda cost"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1- Monitoring Lambda Costs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fUoBjpqw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Ay4x_LwrUom5C21Rx6hJs3g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fUoBjpqw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Ay4x_LwrUom5C21Rx6hJs3g.png" alt="lambda cost"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2- Monitoring Lambda Costs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dashbird-alarms"&gt;
  &lt;/a&gt;
  Dashbird Alarms
&lt;/h2&gt;

&lt;p&gt;"&lt;strong&gt;Alarms&lt;/strong&gt;" is a dedicated module by Dashbird to help us create custom alarms for our resources based on some metrics related to that resource. This significantly improves the MTTD/R. Creating an alarm is simple enough:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  From the navbar on the left click on "&lt;strong&gt;Alarms&lt;/strong&gt;", then click on "&lt;strong&gt;New Alarm&lt;/strong&gt;" and select "&lt;strong&gt;Lambda&lt;/strong&gt;" or any other resource you would like to create an alarm for.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QvXB6kaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Am2iHBowIIHptLCvVNsqAGQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QvXB6kaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2Am2iHBowIIHptLCvVNsqAGQ.png" alt="lambda alarms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1- Setting up Alarms for Lambda&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  We can create two types of alarms, &lt;strong&gt;critical&lt;/strong&gt; or &lt;strong&gt;warning&lt;/strong&gt;. Next, we select the metric on which we want the alarm to trigger this could be errors/cold starts/retry/invocations count, throttled count, execution or billed duration, memory used, cost incurred, or concurrent lambda executions.&lt;/li&gt;
&lt;li&gt;  After selecting the metric we specify when the alarm triggers i.e. when the selected metric is &lt;strong&gt;above/below &lt;/strong&gt;a specific &lt;strong&gt;threshold&lt;/strong&gt;(5,10,20) on &lt;strong&gt;average/max/min/sum&lt;/strong&gt; for the &lt;strong&gt;duration of time&lt;/strong&gt; in minutes, hours or days. Finally, we select one or more target resources for which we want the alarm to be set.&lt;/li&gt;
&lt;li&gt;  For example, I created an alarm for my lambda function to be triggered when*&lt;strong&gt;the error count is above 10 on average over the last 15 minutes&lt;/strong&gt;*&lt;em&gt;.&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7sRR5wQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AoEyKlEoKTG9r1BbfU8iEqA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7sRR5wQP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AoEyKlEoKTG9r1BbfU8iEqA.png" alt="aws lambda alarms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashbird Lambda Alarms.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  We can set up multiple alarms for our resources based on the metrics we want to monitor and with the help of Dashbird, increase the monitoring and troubleshooting capabilities of our systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#advanced-troubleshooting-with-dashbirds-log-search-module"&gt;
  &lt;/a&gt;
  Advanced troubleshooting with Dashbird's Log Search Module
&lt;/h2&gt;

&lt;p&gt;A very cool feature in Dashbird that I would like to lastly discuss is its*&lt;em&gt; Log Search &lt;/em&gt;*module. This module allows us to do some advanced-level search on all our logs helping us to efficiently filter out the logs that are of value to us.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  We can search through all our resources or can select a few resources whose logs we want to filter out.&lt;/li&gt;
&lt;li&gt;  We can search for a specific keyword that we are interested in and all the matching results are accordingly filtered. For example, as can be seen below I filtered through all my resources to search for logs containing the keyword "&lt;strong&gt;MemoryError&lt;/strong&gt;" and all corresponding results were filtered out.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yHZ-P3MX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AQ_sdD1KbgExGM_RRuCC00w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yHZ-P3MX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/1%2AQ_sdD1KbgExGM_RRuCC00w.png" alt="aws log search"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashbird Log Search Module.&lt;/p&gt;

&lt;p&gt;Further reading:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/building-complex-well-architected-serverless-architectures/"&gt;Building complex Well-Architected serverless applications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/aws-cloudwatch-alerts-vs-dashbird-alerts/"&gt;AWS CloudWatch alerts vs Dashbird alerts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/serverless-security-critical-logs/"&gt;Securing serverless applications with critical logging&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>devops</category>
      <category>cloud</category>
    </item>
    <item>
      <title>React Inbox and React Toast Components for Notifications That Don’t Suck</title>
      <author>Riley</author>
      <pubDate>Tue, 31 Aug 2021 15:28:30 +0000</pubDate>
      <link>https://dev.to/courier/introducing-courier-inbox-and-toast-for-notifications-that-don-t-suck-5hj0</link>
      <guid>https://dev.to/courier/introducing-courier-inbox-and-toast-for-notifications-that-don-t-suck-5hj0</guid>
      <description>&lt;p&gt;We are excited to announce the availability of Courier’s newest provider, &lt;a href="https://docs.courier.com/docs/courier-push"&gt;Courier Push&lt;/a&gt;! We have released Inbox and Toast, two open source React components that exemplify the potential future applications of this feature. With Toast, you can send your user a notification within your web application and Inbox allows you to create an embeddable notification repository so that your user can access all past in-app notifications.&lt;/p&gt;

&lt;p&gt;Most importantly, Courier Push allows us the flexibility and customization to do app-to-user communication right. As software users ourselves, we are bombarded with messages constantly, which can...really suck. Yet, notifications are necessary to communicate with users. With Courier Toast and Inbox, developers can support custom notifications for their users’ specificities and communicate through multiple wide-ranging channels while maintaining a single in-app notifications repository. We are particularly excited about all the potential future applications of Courier Push in addition to Toast and Inbox and are looking forward to expanding its uses. &lt;/p&gt;

&lt;p&gt;Here at Courier, we want to improve the integration experience for you, the developer, and the notification experience for your customers. We’ve done this with Courier Toast and Inbox.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#courier-toast-and-inbox"&gt;
  &lt;/a&gt;
  Courier Toast and Inbox
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-toast"&gt;
  &lt;/a&gt;
  What is Toast
&lt;/h3&gt;

&lt;p&gt;One of the major tenets of Courier’s product offerings is sending notifications. Receiving them and displaying them in your application is game changing. The ease of implementation makes your job as a developer simple and enables you to build real-time web applications that provide a better user experience for your customers. Your end-users can see customized notifications pop up in your web application through a modular system you can easily customize.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/z7iqk1q8njt4/5c28uDPkC3iIBTT2aAlxI/ae9f06b62b5bc0d40e1d819e1f3dcab0/toast-demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/z7iqk1q8njt4/5c28uDPkC3iIBTT2aAlxI/ae9f06b62b5bc0d40e1d819e1f3dcab0/toast-demo.gif" alt="toast-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-inbox"&gt;
  &lt;/a&gt;
  What is Inbox
&lt;/h3&gt;

&lt;p&gt;Alongside Toast messages is a customizable inbox, which is essentially a notification history. This takes the pressure off users to respond immediately, lessening the anxiety around the experience in general. Inside Inbox, a user can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read their messages&lt;/li&gt;
&lt;li&gt;Mark messages as read or unread&lt;/li&gt;
&lt;li&gt;Delete messages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/z7iqk1q8njt4/2vyXBqDKYGfuIQj79yAXR9/0e0a255b6f21a02655ec64322cb0d338/inbox-demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/z7iqk1q8njt4/2vyXBqDKYGfuIQj79yAXR9/0e0a255b6f21a02655ec64322cb0d338/inbox-demo.gif" alt="inbox-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-integrate-toast-and-inbox-in-a-react-app"&gt;
  &lt;/a&gt;
  How to Integrate Toast and Inbox in a React App
&lt;/h3&gt;

&lt;p&gt;Let’s walk through how you can integrate Courier Toast and Inbox React Components in a React app. Check out the Courier React Components repository on &lt;a href="https://github.com/trycourier/courier-react"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install CourierProvider &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@trycourier/react-provider 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;...to handle all of the authentication and integration with the backend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @trycourier/react-provider or npm i @trycourier/react-provider
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; At the top level in your React tree, add something that resembles the following code. The Client Key can be found &lt;a href="https://app.courier.com/integrations/courier"&gt;here&lt;/a&gt; and the User Id is the identifier for identifying your user. Note that it will be used later in the API call to courier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { CourierProvider } from "@trycourier/react-provider";
import { Toast } from "@trycourier/react-toast";

const MyApp = ({ children }) =&amp;gt; {
  return (
    &amp;lt;CourierProvider clientKey={CLIENT_KEY} userId={USER_ID}&amp;gt;
      &amp;lt;Toast /&amp;gt;
      {children}
    &amp;lt;/CourierProvider&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;N/B: You can add Toast to the frontend anywhere as long as it’s a child of the CourierProvider.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Inbox should be added in the application as a child of CourierProvider, but where you want the Bell icon to display. For this example, we will just put it right next to Toast. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn add @trycourier/react-inbox&lt;/code&gt; or &lt;code&gt;npm i @trycourier/react-inbox&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { CourierProvider } from "@trycourier/react-provider";
import { Toast } from "@trycourier/react-toast";
import { Inbox } from "@trycourier/react-inbox";

const MyApp = ({ children }) =&amp;gt; {
  return (
    &amp;lt;CourierProvider clientKey={CLIENT_KEY} userId={USER_ID}&amp;gt;
      &amp;lt;Toast /&amp;gt;
      &amp;lt;Inbox /&amp;gt;
      {children}
    &amp;lt;/CourierProvider&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-customize-toast-and-inbox"&gt;
  &lt;/a&gt;
  How to Customize Toast and Inbox
&lt;/h3&gt;

&lt;p&gt;There are two ways to customize your Inbox and Toast.  First you can use the &lt;code&gt;studio&lt;/code&gt; to customize your application and the components will automatically update when the brand is published.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/z7iqk1q8njt4/Dlr1PTAGFpA51ZmCs5XrA/19a259e26be54a6c8847e091348c43c7/studio-designer.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/z7iqk1q8njt4/Dlr1PTAGFpA51ZmCs5XrA/19a259e26be54a6c8847e091348c43c7/studio-designer.png" alt="studio-designer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second, you can pass properties right into each component.  Each component supports a theme and also supports &lt;a href="https://reactjs.org/docs/render-props.html"&gt;render properties&lt;/a&gt;. Here’s the code for props:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;interface InboxProps = {
  //Icon Class Name
  className?: string;

  // Default Icon to use if no Icon is present in Message
  defaultIcon?: false | string;

  // Placement of the Bell relative to the Inbox
  placement?: "top" | "left" | "right" | "bottom";

  // Render Props for Custom Rendering
  renderTabs?: React.FunctionComponent&amp;lt;{
    currentTab?: ITab;
    tabs?: ITab[];
  }&amp;gt;;
  renderFooter?: React.FunctionComponent;
  renderHeader?: React.FunctionComponent;
  renderIcon?: React.FunctionComponent&amp;lt;{
    unreadMessageCount?: number;
  }&amp;gt;;
  renderMessage?: React.FunctionComponent&amp;lt;IMessage&amp;gt;;
  renderNoMessages?: React.FunctionComponent;

  // Tab Overrides
  tabs?: Array&amp;lt;ITab&amp;gt;;
  theme?: ThemeObject;

  // Inbox Title Override
  title?: string;
  trigger?: "click" | "hover";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Courier Push opens the doors to perfecting app-to-human communication with its flexibility and potential for customization. Communication is a two-way street that requires not only good messaging, but also a channel and style that works uniquely for a specific type of user using a specific app. With Toast and Inbox, developers can create an effective notifications system that reaches end users when they want, how they want, and the way they want. To learn more, check out the &lt;a href="https://docs.courier.com/docs/courier-push"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We believe that providing contextual notifications from within your app is an opportunity to provide better, more intuitive, and more interesting user experiences. We also believe that if done right, these can take us a long way towards accomplishing our goal of making computer to human communication delightful. This is just the beginning of our investment in solving this problem, so please stay tuned for more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://app.courier.com/signup"&gt;Check out&lt;/a&gt; Inbox and Toast and let us know what you think! Your feedback helps us to continuously improve.&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
      <category>devops</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Introduction to React : Real DOM &amp; Virtual DOM</title>
      <author>Swarnali Roy</author>
      <pubDate>Tue, 31 Aug 2021 15:20:36 +0000</pubDate>
      <link>https://dev.to/swarnaliroy94/introduction-to-react-real-dom-virtual-dom-363</link>
      <guid>https://dev.to/swarnaliroy94/introduction-to-react-real-dom-virtual-dom-363</guid>
      <description>&lt;p&gt;Hello Readers!&lt;/p&gt;

&lt;p&gt;I have been writing posts about &lt;em&gt;JavaScript&lt;/em&gt; for a couple of months now. A strong foundation of JavaScript is a &lt;em&gt;prerequisite&lt;/em&gt; for learning &lt;em&gt;React.JS&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I have been working and developing projects with &lt;em&gt;React.JS&lt;/em&gt; for the last one year and I have found it very flexible and useful for building user interfaces and process of developing web applications becomes easier with React.JS. &lt;/p&gt;

&lt;p&gt;First of all, let's have a look on what React.JS is and why it is so familiar nowadays among developers. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React?
&lt;/h3&gt;

&lt;p&gt;◾ React is an efficient, flexible and open-source &lt;em&gt;JavaScript Library&lt;/em&gt; for building simple and scalable front-ends, created by &lt;em&gt;Facebook&lt;/em&gt;.&lt;br&gt;
◾ It is basically used to build &lt;em&gt;Single Page Applications&lt;/em&gt;. It also allows us to create &lt;em&gt;reusable&lt;/em&gt; UI components. &lt;br&gt;
◾ React.JS is &lt;em&gt;not a framework&lt;/em&gt; of JavaScript like Angular or React Native.&lt;br&gt;
◾ It is the &lt;em&gt;View&lt;/em&gt; layer of &lt;em&gt;MVC (Model View Controller)&lt;/em&gt; application.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-does-react-work"&gt;
  &lt;/a&gt;
  How Does React Work?
&lt;/h3&gt;

&lt;p&gt;Instead of manipulating the browser's real DOM directly, React creates a virtual DOM in memory. React finds out what &lt;em&gt;changes&lt;/em&gt; are made and only manipulates the &lt;em&gt;virtual DOM&lt;/em&gt; before changing anything in the &lt;em&gt;real/browser's DOM&lt;/em&gt;.&lt;br&gt;
To understand it in a better way, we need to understand the difference between Real/Browser's DOM and React's virtual DOM.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-is-realbrowser-dom"&gt;
  &lt;/a&gt;
  What is Real/Browser DOM?
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;DOM&lt;/em&gt; stands for &lt;em&gt;"Document Object Model"&lt;/em&gt;. It represents the entire UI of the &lt;em&gt;web application&lt;/em&gt; as a &lt;em&gt;tree data structure&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In simpler terms, it is a &lt;em&gt;structural representation of the HTML elements&lt;/em&gt; of the web application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBZE16_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gj7waqg382e8txgf28mq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBZE16_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gj7waqg382e8txgf28mq.jpg" alt="Real/Browser DOM image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever there is a change in the &lt;em&gt;state of application UI&lt;/em&gt;, the DOM gets &lt;em&gt;updated&lt;/em&gt; and represents that change. With every change, the DOM gets manipulated and &lt;em&gt;re-rendered&lt;/em&gt; to update the application UI, which affects the performance and makes it slower.&lt;/p&gt;

&lt;p&gt;Hence, with more UI components and complex structure of the DOM, the DOM updates will be more costly as with every change it needs to be re-rendered.  &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#what-is-reacts-virtual-dom"&gt;
  &lt;/a&gt;
  What is React's Virtual DOM?
&lt;/h4&gt;

&lt;p&gt;To make the performance of the Real DOM better and faster, the concept of Virtual DOM arrives. The Virtual DOM is nothing but the virtual representation of the DOM. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But the key difference is, every time with every change , the virtual DOM gets updated instead of the real DOM.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like, &lt;em&gt;real DOM&lt;/em&gt; , &lt;em&gt;virtual DOM&lt;/em&gt; is also represented as a &lt;em&gt;tree structure&lt;/em&gt;. Each element is a &lt;em&gt;node&lt;/em&gt; in this tree. When a &lt;em&gt;new item&lt;/em&gt; is added to the application UI, a node is added to the tree as well. If the &lt;em&gt;state&lt;/em&gt; of any of these elements changes, a &lt;em&gt;new&lt;/em&gt; virtual DOM tree is created. The virtual DOM &lt;em&gt;computes&lt;/em&gt; the best possible way or we can say the &lt;em&gt;minimal operations&lt;/em&gt; on the real DOM to make changes to the real DOM. Thus, it makes efficient and better performance by reducing the cost and operations of re-rendering the whole real DOM. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aoqm8JlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6ybb6v0bpitt2384cq2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aoqm8JlG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6ybb6v0bpitt2384cq2.png" alt="Virtual DOM Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we have the basic understanding of Real and Virtual DOM, let's focus on how &lt;em&gt;React&lt;/em&gt; works using the &lt;em&gt;Virtual DOM&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;🔸 In React, each UI is an individual &lt;em&gt;component&lt;/em&gt; and each component has it's own &lt;em&gt;state&lt;/em&gt;. &lt;br&gt;
🔸 React follows the &lt;em&gt;observable pattern&lt;/em&gt; and observes the changes of the states.&lt;br&gt;
🔸 Whenever a change is made in the state of any component, React &lt;em&gt;updates&lt;/em&gt; the &lt;em&gt;virtual DOM tree&lt;/em&gt; but does not change the &lt;em&gt;real DOM tree&lt;/em&gt;&lt;br&gt;
🔸 After &lt;em&gt;updating&lt;/em&gt;, React then &lt;em&gt;compares&lt;/em&gt; the &lt;em&gt;current version&lt;/em&gt; of the &lt;em&gt;virtual DOM&lt;/em&gt; with the &lt;em&gt;previous version&lt;/em&gt;.&lt;br&gt;
🔸 React knows which &lt;em&gt;objects&lt;/em&gt; are changed in the &lt;em&gt;virtual DOM&lt;/em&gt;, based on that it &lt;em&gt;only&lt;/em&gt; changes those objects in the &lt;em&gt;Real DOM&lt;/em&gt;, making &lt;em&gt;minimum&lt;/em&gt; manipulating operations.&lt;br&gt;
🔸 This process is noted as &lt;em&gt;"diffing"&lt;/em&gt;. A picture below will clear the concept more. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--goghMzxz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ux2o2yg5lfrvwut60spp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--goghMzxz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ux2o2yg5lfrvwut60spp.png" alt="Diffing Process (source: https://programmingwithmosh.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this image, the &lt;em&gt;red circles&lt;/em&gt; are the &lt;em&gt;nodes&lt;/em&gt; that has been changed. That means, the &lt;em&gt;state&lt;/em&gt; of these components are changed. React computes the difference of the previous and current version of the &lt;em&gt;Virtual DOM tree&lt;/em&gt; and the whole parent sub-tree gets re-rendered to show the changed UI. Then the updated tree is &lt;em&gt;batch updated&lt;/em&gt; (This means that updates to the real DOM are sent in batches, instead of sending updates for every single change in state.) to the Real DOM.&lt;/p&gt;

&lt;p&gt;To get even deeper knowledge about it, we need to know about &lt;code&gt;React render() function&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Prior to that, we need to know about some most important &lt;em&gt;features&lt;/em&gt; of React. I will not dive into deeper knowledge about it as I will write elaborately in other separate posts later. But for now what we need to know is: &lt;/p&gt;

&lt;p&gt;🔹 JSX&lt;br&gt;
&lt;em&gt;JSX&lt;/em&gt; stands for &lt;em&gt;JavaScript XML&lt;/em&gt;. It is a &lt;em&gt;syntax extension&lt;/em&gt; of JS. By using JSX, we can write &lt;em&gt;HTML structures&lt;/em&gt; in the same file that contains &lt;em&gt;JavaScript code&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;🔹 Components&lt;br&gt;
Each UI in a React app is a &lt;em&gt;component&lt;/em&gt;. Components are &lt;em&gt;independent&lt;/em&gt; and &lt;em&gt;reusable&lt;/em&gt; bits of code. A single application may have multiple &lt;em&gt;components&lt;/em&gt;. &lt;br&gt;
Components can be of two types, &lt;em&gt;Class Components&lt;/em&gt; &amp;amp; &lt;em&gt;Functional Components&lt;/em&gt;. &lt;code&gt;Class Components&lt;/code&gt; are &lt;em&gt;stateful&lt;/em&gt; as they can use their &lt;em&gt;"state"&lt;/em&gt; to change the UI. &lt;code&gt;Functional Components&lt;/code&gt; are &lt;em&gt;stateless&lt;/em&gt; components. They act as a &lt;em&gt;JavaScript function&lt;/em&gt; that can take an &lt;em&gt;arbitrary parameter&lt;/em&gt; called &lt;em&gt;"props"&lt;/em&gt;. &lt;br&gt;
Recently, &lt;em&gt;React Hooks&lt;/em&gt; are introduced to use state within the Functional Components. &lt;/p&gt;

&lt;p&gt;🔹 Lifecycle Methods&lt;br&gt;
&lt;em&gt;Lifecycle methods&lt;/em&gt; are special methods &lt;em&gt;built-in&lt;/em&gt; to React, used to operate on components throughout their duration in the DOM. Every component in React goes through a lifecycle of events.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The &lt;code&gt;render()&lt;/code&gt; method is the most used &lt;em&gt;lifecycle method&lt;/em&gt;.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;It is the only required method within the &lt;em&gt;React Class Components&lt;/em&gt;. So, &lt;code&gt;render()&lt;/code&gt; is called in every class component. &lt;br&gt;
&lt;em&gt;render() method&lt;/em&gt; handles the rendering of the component to the UI. The render() method contains all the logic that should be displayed on the screen. It might also contain a &lt;em&gt;null&lt;/em&gt; value, if we don’t want to show anything on the display.&lt;/p&gt;

&lt;p&gt;An &lt;em&gt;example&lt;/em&gt; is shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Header&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Introduction&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This example will show the JSX written inside the render() method.&lt;/p&gt;

&lt;p&gt;When a &lt;em&gt;state&lt;/em&gt; or &lt;em&gt;prop&lt;/em&gt; within the component is updated, the &lt;em&gt;render()&lt;/em&gt; will return a different tree of React elements. &lt;br&gt;
React then &lt;em&gt;calculates&lt;/em&gt; how to update the UI to match the most &lt;em&gt;recent tree changes&lt;/em&gt;. At first, React updates its &lt;em&gt;virtual DOM&lt;/em&gt; and updates only the object that have changed in the &lt;em&gt;real DOM&lt;/em&gt;.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#in-the-next-posts-ill-write-about-the-features-of-react-in-details-if-you-like-this-post-please-save-like-and-press-unicorn-and-also-follow-me-to-keep-an-eye-on-my-other-posts"&gt;
  &lt;/a&gt;
  In the next posts, I'll write about the features of React in Details. If you like this post please save, like and press unicorn and also follow me to keep an eye on my other posts.
&lt;/h5&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>react</category>
    </item>
    <item>
      <title>How to read and write a pom in Jenkins ?</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 31 Aug 2021 15:20:03 +0000</pubDate>
      <link>https://dev.to/adaendra/how-to-read-and-write-a-pom-in-jenkins-3fj2</link>
      <guid>https://dev.to/adaendra/how-to-read-and-write-a-pom-in-jenkins-3fj2</guid>
      <description>&lt;p&gt;When I started to work with Jenkins with Java apps, I quickly have these questions&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;How to be able to read a pom?&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;How to update it?&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Am I able to update the pom version from Jenkins??&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So today, we will see how to do it!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read"&gt;
  &lt;/a&gt;
  Read
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;pom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readMavenPom&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;file:&lt;/span&gt; &lt;span class="s1"&gt;'pom.xml'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;pom_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reading part looks like all the other &lt;strong&gt;read&lt;/strong&gt; functions in Jenkins &lt;em&gt;(like readYaml, readJSON...)&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Jenkins documentation : &lt;a href="https://www.jenkins.io/doc/pipeline/steps/pipeline-utility-steps/#readmavenpom-read-a-maven-project-file"&gt;https://www.jenkins.io/doc/pipeline/steps/pipeline-utility-steps/#readmavenpom-read-a-maven-project-file&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#write"&gt;
  &lt;/a&gt;
  Write
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;pom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readMavenPom&lt;/span&gt; &lt;span class="nl"&gt;file:&lt;/span&gt; &lt;span class="s1"&gt;'pom.xml'&lt;/span&gt;

&lt;span class="c1"&gt;//Do some manipulation&lt;/span&gt;
&lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"x.x.x"&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; 

&lt;span class="n"&gt;writeMavenPom&lt;/span&gt; &lt;span class="nl"&gt;model:&lt;/span&gt; &lt;span class="n"&gt;pom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The write part is really simple and you just have to give back the &lt;strong&gt;pom&lt;/strong&gt; object you retrieve from reading;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Jenkins documentation : &lt;a href="https://www.jenkins.io/doc/pipeline/steps/pipeline-utility-steps/#writemavenpom-write-a-maven-project-file"&gt;https://www.jenkins.io/doc/pipeline/steps/pipeline-utility-steps/#writemavenpom-write-a-maven-project-file&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#bonus-update-pom-version"&gt;
  &lt;/a&gt;
  Bonus - Update pom version
&lt;/h2&gt;

&lt;p&gt;Once we know that, we can automatically change the version in the pom!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="kt"&gt;def&lt;/span&gt; &lt;span class="n"&gt;pom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readMavenPom&lt;/span&gt; &lt;span class="nl"&gt;file:&lt;/span&gt; &lt;span class="s1"&gt;'pom.xml'&lt;/span&gt;

&lt;span class="n"&gt;pom_version_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;split&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'\\.'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// You can choose any part of the version you want to update&lt;/span&gt;
&lt;span class="n"&gt;pom_version_array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"${pom_version_array[1]}"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toInteger&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pom_version_array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;join&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;writeMavenPom&lt;/span&gt; &lt;span class="nl"&gt;model:&lt;/span&gt; &lt;span class="n"&gt;pom&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;I hope it will help you!&lt;/p&gt;

</description>
      <category>devops</category>
      <category>sre</category>
    </item>
    <item>
      <title>MLH, Open Source, Mapillary &amp; Me</title>
      <author>Saif Islam</author>
      <pubDate>Tue, 31 Aug 2021 15:18:23 +0000</pubDate>
      <link>https://dev.to/rubix982/mlh-open-source-mapillary-me-nji</link>
      <guid>https://dev.to/rubix982/mlh-open-source-mapillary-me-nji</guid>
      <description>&lt;h2&gt;
  &lt;a href="#mlh-fellowship-open-source-mapillary-amp-me"&gt;
  &lt;/a&gt;
  MLH Fellowship, Open Source, Mapillary &amp;amp; Me
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UElUl1sc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieuznv53efu4mx3fvd4v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UElUl1sc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ieuznv53efu4mx3fvd4v.png" alt="MLH Fellowship"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post goes over my &lt;strong&gt;experience&lt;/strong&gt; with the &lt;strong&gt;Open Source MLH Fellowship&lt;/strong&gt; for Summer '21. 😁&lt;/p&gt;

&lt;p&gt;There's quite a lot I want to share with you, so sit down, get some popcorn if you want, and enjoy!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lkVF0gRZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/9G54QEVzMnsnXyPVLW/200w.webp%3Fcid%3Decf05e47ss6h0y4patusqcouqvh2pqjqpjgb1fxuasc5l5gj%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lkVF0gRZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/9G54QEVzMnsnXyPVLW/200w.webp%3Fcid%3Decf05e47ss6h0y4patusqcouqvh2pqjqpjgb1fxuasc5l5gj%26rid%3D200w.webp%26ct%3Dg" alt="Get Ready - Top Gear"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mlh-fellowship-open-source-mapillary--me"&gt;MLH Fellowship, Open Source, Mapillary &amp;amp; Me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table Of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hello-hello"&gt;Hello Hello!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#so-what-is-mlh-hint-its-not-just-an-internship"&gt;So what is MLH? (Hint: It's not just an 'internship')&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#some-faqs-first"&gt;Some FAQs First&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#some-terminologies"&gt;Some Terminologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-source"&gt;Open Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#software-engineering"&gt;Software Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#production-engineering"&gt;Production Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#raise-dev--mlh-fellowship-sessions-internal"&gt;Raise Dev &amp;amp; MLH Fellowship Sessions (Internal)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#my-thoughts"&gt;My thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#how-it-all-started"&gt;How it all started&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-application"&gt;The Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-code-sample"&gt;The Code Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#everything-you-know-about-tech-internships-is-wrong---mike-swift-github-education"&gt;"Everything You Know About Tech Internships Is Wrong" - Mike Swift, GitHub Education&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-interviews"&gt;The Interviews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-process"&gt;The Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#starting-out"&gt;Starting Out&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#standups"&gt;Standups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#meetings"&gt;Meetings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orientation-hackathon"&gt;Orientation Hackathon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-assignment-mapillary-facebook-open-source"&gt;Project Assignment (Mapillary, Facebook Open Source)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unexpected-contributions-jina-ai-neural-search-engine"&gt;Unexpected Contributions (Jina AI, Neural Search Engine)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#show--tells"&gt;Show &amp;amp; Tells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#capture-the-flag"&gt;Capture The Flag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#some-final-thoughts"&gt;Some Final Thoughts&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#imposter-syndrome"&gt;Imposter Syndrome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-source-misconceptions"&gt;Open Source Misconceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#developer-relations-devrel-developer-advocacy"&gt;Developer Relations, DevRel, Developer Advocacy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-did-i-feel-working-on-the-project"&gt;How did I feel working on the project?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#do-i-think-i-made-meaningful-contributions-to-the-project"&gt;Do I think I made meaningful contributions to the project?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#where-else-can-i-find-mlh"&gt;Where else can I find MLH?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#connect-with-me"&gt;Connect with me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hello-hello"&gt;
  &lt;/a&gt;
  Hello Hello!
&lt;/h2&gt;

&lt;p&gt;So, to state the obvious, I got accepted as an &lt;strong&gt;Open Source MLH Fellow&lt;/strong&gt; for the tenure of 2021! 🎉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/posts/saif-ul-islam_opensource-mlh-fellowships-activity-6800264506384646144-O89u/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fC8oRgDr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j2vy3enmtjm2x0ghpkg.png" alt="MLH Fellowship Acceptance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post details my &lt;strong&gt;experiences&lt;/strong&gt;, the &lt;strong&gt;lessons&lt;/strong&gt; I learned, the &lt;strong&gt;people&lt;/strong&gt; I met, the &lt;strong&gt;work&lt;/strong&gt; I did, and the &lt;strong&gt;events&lt;/strong&gt;/&lt;strong&gt;sessions&lt;/strong&gt; that I participated in, and a whole lot of experiences that I got to be a part of starting from June all the way to August.&lt;/p&gt;

&lt;p&gt;I'll be talking about what the MLH (&lt;strong&gt;Major League Hacking&lt;/strong&gt;) Fellowship is, what's it all about, how you can be a part of it in the coming batches, what to expect and how the experience will be extremely fruitful for you to gear start your future career if you're an undergrad like me.&lt;/p&gt;

&lt;p&gt;I'll also be talking over what the &lt;strong&gt;Open Source&lt;/strong&gt; community is, some take away ideas that I got from my experience, and then further into what my assigned project, &lt;strong&gt;Mapillary&lt;/strong&gt; is all about, how I contributed to it, and the domain that it helped me to get comfortable with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OIL6X5SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1071/0%2AX_Znv597g9ZD3wFa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OIL6X5SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1071/0%2AX_Znv597g9ZD3wFa.png" alt="Open Source"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-is-mlh-hint-its-not-just-an-internship"&gt;
  &lt;/a&gt;
  So what is MLH? (Hint: It's not just an 'internship')
&lt;/h2&gt;

&lt;p&gt;Before you apply ...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UUBfBUxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/QBd2kLB5qDmysEXre9/200w.webp%3Fcid%3Decf05e47z6ub276gj9f0mwy1kv9io90lrarhzkutcpbqv67q%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UUBfBUxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/QBd2kLB5qDmysEXre9/200w.webp%3Fcid%3Decf05e47z6ub276gj9f0mwy1kv9io90lrarhzkutcpbqv67q%26rid%3D200w.webp%26ct%3Dg" alt="Mr Bean"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://fellowship.mlh.io/"&gt;MLH Fellowship&lt;/a&gt; describes itself as "a remote internship alternative for aspiring technologists. Spend 12 weeks building your skills by collaborating on real-world projects." It's meant to be as an &lt;em&gt;remote alternative&lt;/em&gt; for students looking to &lt;strong&gt;code&lt;/strong&gt;, &lt;strong&gt;learn&lt;/strong&gt;, &lt;strong&gt;collaborate&lt;/strong&gt;, and be a part of a &lt;strong&gt;community&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;You're offered (&lt;em&gt;currently&lt;/em&gt;) to be selected into one of their three currently available tracks,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Open Source&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Software Engineering&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Production Engineering&lt;/em&gt;&lt;/strong&gt;, powered by "&lt;strong&gt;Facebook&lt;/strong&gt;"&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each of these tracks are fantastic opportunities to get exposed to an amazing community, and overall really great experience, as all of them focus on,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Remote first&lt;/em&gt; - You get to meet people from all around the world&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Small groups&lt;/em&gt; - Pods of 11 members + Pod Leader&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Extra Cirriculars&lt;/em&gt; - MLH isn't all about just putting out more lines of code on your project, there's a strong emphasis on being part of a community as well&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Technical Mentorship&lt;/em&gt; - Mentors and pod leaders are always available to help you if you run into any problems&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Career Training&lt;/em&gt; - Practice interviews, improving &amp;amp; get tactical feedback on your resume from experts&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Educational Cirriculum&lt;/em&gt; - Learn industry best practices using tools like Git &amp;amp; GitHub that you can apply to your project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fwwIpUK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/xTkcEwB8SFQniDkMJa/200w.webp%3Fcid%3Decf05e476g72l0kjuue0vab7p2hfpxz641jpwf2dbnw1iq07%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fwwIpUK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/xTkcEwB8SFQniDkMJa/200w.webp%3Fcid%3Decf05e476g72l0kjuue0vab7p2hfpxz641jpwf2dbnw1iq07%26rid%3D200w.webp%26ct%3Dg" alt="Packing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Fellowship participants are students who filled the eligibility criteria of,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Age&lt;/strong&gt; - You must be over the age of 18 or over age 13 with your parent's permission.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Residency&lt;/strong&gt; - You must not reside in a country embargoed by the United States.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Time Commitment&lt;/strong&gt; - You are able to commit the required hours per week to the program&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Communication&lt;/strong&gt; - You're proficient (enough) with English, both written and spoken.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Coding Experience&lt;/strong&gt; - You can code proficiently in at least one programming language&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Environment&lt;/strong&gt; - You have regular access to a quiet workspace for meetings &amp;amp; coding.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A/V Setup&lt;/strong&gt; - You have regular access to a video call quality Internet connection, webcam, &amp;amp; microphone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... And that's it! You're good to go! :D&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#some-faqs-first"&gt;
  &lt;/a&gt;
  Some FAQs First
&lt;/h3&gt;

&lt;p&gt;You must have some questions ...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nyo-psfv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/d1E1YlkOTe4IfdNC/200w.webp%3Fcid%3Decf05e47sh4gi4vkqqdrvs74wp0pda8a038f4pv73po1jzrc%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nyo-psfv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/d1E1YlkOTe4IfdNC/200w.webp%3Fcid%3Decf05e47sh4gi4vkqqdrvs74wp0pda8a038f4pv73po1jzrc%26rid%3D200w.webp%26ct%3Dg" alt="Questions!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;How&lt;/strong&gt; I apply to be an MLH Fellow?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Head over to &lt;a href="https://fellowship.mlh.io/"&gt;Fellowship - MLH&lt;/a&gt; to submit an application&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;When&lt;/strong&gt; can I apply?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MLH Fellowship has three batches throughout the year, each in Spring (Late Jan - Early April), Summer (Early June - Late Aug), and Fall (Oct - Dec). I could not find the dates for the next batch, but you can usually find them on &lt;a href="https://fellowship.mlh.io/"&gt;Fellowship - MLH&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Is&lt;/strong&gt; there a stipend?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If required, yes, there is a need-based stipend to cover basic expenses regarding where you live.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"The amount of the stipend is determined by your track and the country you are residing in during the program"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;See &lt;a href="https://fellowship.mlh.io/faq"&gt;&lt;strong&gt;Fellowship - FAQ&lt;/strong&gt;&lt;/a&gt; for more information&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How much do I need to know &lt;strong&gt;code wise&lt;/strong&gt;?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MLH assumes you have basic practice with coding already with familiarity, and that you at least are somewhat &lt;strong&gt;proefficient&lt;/strong&gt; in a language. It may be that you do not get to work with your strongest language (I was more proefficient with JavaScript, but worked with Python). If you are not familiar, you will always have the time to pick up new skillsets along the way&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How are you assigned to &lt;strong&gt;projects&lt;/strong&gt;?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The project assignment considers the pod member's &lt;strong&gt;interests&lt;/strong&gt; and alignments. For example, I'm heavily into &lt;strong&gt;Software Engineering&lt;/strong&gt;, and got chosen to work on &lt;strong&gt;Mapillary&lt;/strong&gt; to develop an SDK which heavily employed &lt;strong&gt;Software Engineering&lt;/strong&gt; practices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXTxR6Nr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/xT9KVBrK92mLCTDsys/200w.webp%3Fcid%3Decf05e47oo5h4rlmuo3eo2a1qdbvdvlk7umqhzgtcydl7nr2%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXTxR6Nr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/xT9KVBrK92mLCTDsys/200w.webp%3Fcid%3Decf05e47oo5h4rlmuo3eo2a1qdbvdvlk7umqhzgtcydl7nr2%26rid%3D200w.webp%26ct%3Dg" alt="Time"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How much is the &lt;strong&gt;time commitment&lt;/strong&gt;?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MLH expects that you spend at around &lt;strong&gt;25-30&lt;/strong&gt; hours with them working the projects and taking part in the standup and other sessions that are arranged. This includes everything from &lt;strong&gt;standups&lt;/strong&gt;, to &lt;strong&gt;hackathons&lt;/strong&gt;/&lt;strong&gt;competitions&lt;/strong&gt;, &lt;strong&gt;tech sessions&lt;/strong&gt;, and &lt;strong&gt;1-to-1s&lt;/strong&gt; you should be arranging with other Fellowship participants&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I would say to not worry too much about it because it can flexible. MLH acknowledges that everyone comes from different time zones, so there is conflict bound to happen at some point&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, halfway through the Fellowship, I was without my fiber optic Internet for 3 days, only relying on my mobile data for communication and text messaging because of some wire related issues near my home, ad it was perfectly understanble to my pod leader and team mates&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-terminologies"&gt;
  &lt;/a&gt;
  Some Terminologies
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8LaGy-_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/l2Je66zG6mAAZxgqI/200.webp%3Fcid%3Decf05e47620cni4w7ssdcy0405xnbzbeebquwcqqp7gw80kr%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8LaGy-_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/l2Je66zG6mAAZxgqI/200.webp%3Fcid%3Decf05e47620cni4w7ssdcy0405xnbzbeebquwcqqp7gw80kr%26rid%3D200.webp%26ct%3Dg" alt="Dictionary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each batch has,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pod&lt;/strong&gt; - A pod is a group of 11 Fellowship participants, along with a Pod Leader. Don't worry if they would be awesome or not - they're gurranteed to be great people :D&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE&lt;/em&gt;&lt;/strong&gt;: If at the time of applying you're not sure if you would be able to carry on with the Fellowship fully because of circumstances of positions at other places and you go on to be accepted, you can go on to drop your seat in the start for someone else.&lt;/p&gt;

&lt;p&gt;Also to note that if you drop in early, the MLH Fellowship will most likely be able to find someone else. However, it may not be true if you drop it mid way as it is harder to replace. Please talk to your &lt;em&gt;Pod Leader&lt;/em&gt; about your decisions/plans first&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pod Number&lt;/strong&gt; - Each group of Fellowship participants is assigned a number. Mine was &lt;strong&gt;3.0.1&lt;/strong&gt;. Each pod will work with a specific technology most likely. For example, my entire pod was assiged Python projects, and another pod was enitrely assigned Ruby projects, another was assigned JavaScript projects, and so on&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pod Leader&lt;/strong&gt; - Your pod leader is responsible for leading your daily standups, informing you about updates in the program, anything or mostly everything you may need to do, and assist you in obstacles by arranging 1-to-1s. Feel free to talk to Pod Leaders about basically &lt;strong&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/strong&gt; (yes, I mean it).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Feel relaxed to talk about &lt;em&gt;career&lt;/em&gt;, &lt;em&gt;life&lt;/em&gt;, the &lt;em&gt;project&lt;/em&gt; you're working on, &lt;strong&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/strong&gt; (I cannot stress this enough) that is troubling you, &lt;strong&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/strong&gt; you want to ask, &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; ideas you want to share about your pod or anything you would like to see happen. Pod Leaders are mostly past fellows as well, and want to make sure you're enjoying the Fellowship as you're going into the process&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Trainual&lt;/strong&gt; - Each week has a trainual where you have to at least write up about how your week went, what work you got done, and what you're planning to do next week. It can have other modules as well, such as &lt;strong&gt;Git&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt;, and other training as well&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tyEhoN0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/26tn33aiTi1jkl6H6/200w.webp%3Fcid%3Decf05e47xz7twvxk7eh7snodvozlrehzzpb1udm2hff9n8nh%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tyEhoN0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/26tn33aiTi1jkl6H6/200w.webp%3Fcid%3Decf05e47xz7twvxk7eh7snodvozlrehzzpb1udm2hff9n8nh%26rid%3D200w.webp%26ct%3Dg" alt="Coding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fellows on this track contribute to open source projects, sometimes building projects from scratch (such as &lt;a href="https://github.com/mapillary/mapillary-python-sdk"&gt;mine&lt;/a&gt;), sometimes contributing to extremely well known projects (see below).&lt;/p&gt;

&lt;p&gt;At the time of writing, the Open Source track has included so far the following OSS projects such as,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/aws-amplify/amplify-cli"&gt;AWS Amplify&lt;/a&gt; - The AWS Amplify CLI is a toolchain which includes a robust feature set for simplifying mobile and web application development. The CLI uses AWS CloudFormation and nested stacks to allow you to add or modify configurations locally before you push them for execution in your account.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bentoml/BentoML"&gt;BentoML&lt;/a&gt; - BentoML is a flexible, high-performance framework for serving, managing, and deploying machine learning models.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dfinity.org/"&gt;Dfinity&lt;/a&gt; - "Infinite Blockchain That Serves The Web", the DFINITY Foundation is a major contributor to the Internet Computer&lt;/li&gt;
&lt;li&gt;Facebook's &lt;a href="https://github.com/facebookincubator/antlir"&gt;Antlir VM&lt;/a&gt; - Antlir can reproducibly build, test, and run OS images for containers and hosts.&lt;/li&gt;
&lt;li&gt;Facebook's &lt;a href="https://www.mapillary.com/"&gt;Mapillary&lt;/a&gt; - Mapillary provides hosting, processing, and publishing street-level imagery and map data easy on a collaborative platform!&lt;/li&gt;
&lt;li&gt;Facebook's &lt;a href="https://engineering.fb.com/2020/08/07/security/pysa/"&gt;Pysa&lt;/a&gt; - An open source static analysis tool to detect and prevent security issues in Python code&lt;/li&gt;
&lt;li&gt;Facebook's &lt;a href="https://www.youtube.com/watch?v=9JZHodNR184"&gt;Stylex&lt;/a&gt; - Topics covered include Facebook's approach to CSS-in-JS, data-driven dependencies, phased code downloading, and more&lt;/li&gt;
&lt;li&gt;Facebook's &lt;a href="https://www.w3.org/TR/webxr/"&gt;WebXR&lt;/a&gt; - This specification describes support for accessing virtual reality (VR) and augmented reality (AR) devices, including sensors and head-mounted displays, on the Web&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.forem.com/"&gt;Forem&lt;/a&gt; - Forem is open source software for building communities. Communities for your peers, customers, fanbases, families, friends, and any other time and space where people need to come together to be part of a collective. See our announcement post for a high-level overview of what Forem is&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gleitz/howdoi"&gt;Howdoi&lt;/a&gt; - howdoi provides the solution to the question, "Are you a hack programmer? Do you find yourself constantly Googling for how to do basic programming tasks?"&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jina.ai/"&gt;Jina AI&lt;/a&gt; - Build and deploy your AI-powered search applications in seconds with Jina’s open-source tech stack&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jupyter.org/"&gt;JupyterLab&lt;/a&gt; - Project Jupyter exists to develop open-source software, open-standards, and services for interactive computing across dozens of programming languages&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.palletsprojects.com/"&gt;The Pallet's Project&lt;/a&gt; - The Pallets Projects are a collection of Python web development libraries that were independently developed by Armin Ronacher and later used as the basis of the Flask microframework. Today the Pallets Projects are a community-driven organization with the goal to maintain and improve those libraries&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As for the question of "Is this for me?", you can think about the goals of the track and if they align with you.&lt;/p&gt;

&lt;p&gt;The main goal of the &lt;strong&gt;Open Source&lt;/strong&gt; track is to familiarize you with,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How the &lt;strong&gt;Open Source community&lt;/strong&gt; works and how you can get started with contributing to major projects&lt;/li&gt;
&lt;li&gt;Help you get started and build your confidence up to merging more and more &lt;strong&gt;Pull Requests&lt;/strong&gt; on the projects you &lt;strong&gt;love and use&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;To hopefully make it so that you'll still be contributing and be a part of &lt;strong&gt;communities&lt;/strong&gt; after the your tenure ends&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;Open Source&lt;/strong&gt; experience for me helped me to either learn about or contribute to more than &lt;strong&gt;&lt;em&gt;3&lt;/em&gt;&lt;/strong&gt;  projects in my spare time simply because I know knew more about what goes and what doesn't go in the community, and how to take the right approach with it. It made me more &lt;em&gt;positive&lt;/em&gt; about my &lt;em&gt;contributions&lt;/em&gt;, regardless of how &lt;strong&gt;small&lt;/strong&gt; or &lt;strong&gt;large&lt;/strong&gt; they were.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#software-engineering"&gt;
  &lt;/a&gt;
  Software Engineering
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ljwVYR3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/5t9wJjyHAOxvnxcPNk/200.webp%3Fcid%3Decf05e47jr4tatvv86jnvozmntek1h807hnazp8idmn47ftq%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ljwVYR3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/5t9wJjyHAOxvnxcPNk/200.webp%3Fcid%3Decf05e47jr4tatvv86jnvozmntek1h807hnazp8idmn47ftq%26rid%3D200.webp%26ct%3Dg" alt="Not Sure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Working on a project in agreements with a "corporate or government partner". Unfortunately I don't have too much knowledge about this. Check out the &lt;a href="https://fellowship.mlh.io/programs/software-engineering"&gt;Software Engineering track here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#production-engineering"&gt;
  &lt;/a&gt;
  Production Engineering
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--14ZX4li2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/ijEiXYEo9DBxm/200.webp%3Fcid%3Decf05e47e9gdqmzf7n0ahp6xislcsag112dr586ezeib09k7%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--14ZX4li2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/ijEiXYEo9DBxm/200.webp%3Fcid%3Decf05e47e9gdqmzf7n0ahp6xislcsag112dr586ezeib09k7%26rid%3D200.webp%26ct%3Dg" alt="Facebook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Production Engineering track is designed as an educational track to learn more about the PE role at Facebook. This track included learning technologies all about the role, tools such as &lt;strong&gt;Nginx&lt;/strong&gt;, &lt;strong&gt;Docker&lt;/strong&gt;, &lt;strong&gt;Prometheus&lt;/strong&gt;, &lt;strong&gt;Grafana&lt;/strong&gt;, &lt;strong&gt;CI/CD Pipelines&lt;/strong&gt;, &lt;strong&gt;CAdvisor&lt;/strong&gt;, &lt;strong&gt;GitHub Actions&lt;/strong&gt;, &lt;strong&gt;AWS&lt;/strong&gt; and more!&lt;/p&gt;

&lt;p&gt;During my tenure, this track was only limited to North American participants from Canada, USA, and Mexico.&lt;/p&gt;

&lt;p&gt;The PE had many weekly talks from the teams at Facebook, a small sneak peak includes talks about,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Production Engineering vs Software Engineering&lt;/li&gt;
&lt;li&gt;Monitoring Concepts &amp;amp; In Action At Facebook&lt;/li&gt;
&lt;li&gt;Building Scalable Infrastructure While Still In School&lt;/li&gt;
&lt;li&gt;Recruiting Talks &amp;amp; Resume Tips&lt;/li&gt;
&lt;li&gt;Joing PE From Diff/ Career Backgrounds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fellows in this batch have to develop a project using many of the technologies taught as part of the cirriculum as their final deliverable with a project demo at the end.&lt;/p&gt;

&lt;p&gt;Most of the talks are geared towards &lt;strong&gt;PE Fellows&lt;/strong&gt;, but anyone from any track and any batch can come and be a part of the talks!&lt;/p&gt;

&lt;p&gt;As for the question of "Is this for me?", you can again think about how close you relate to the goals of the track&lt;/p&gt;

&lt;p&gt;The main goal of the &lt;strong&gt;Productin Engineering&lt;/strong&gt; track is to familiarize you and introduce you to,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Concepts of &lt;strong&gt;Software Architecture&lt;/strong&gt;, &lt;strong&gt;Site Reliability Engineering&lt;/strong&gt;, &lt;strong&gt;Software Infrastructure &amp;amp; Engineering&lt;/strong&gt;, &lt;strong&gt;Cloud&lt;/strong&gt; and &lt;strong&gt;DevOps&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Industry professionals&lt;/strong&gt; who can better cater to questions regarding the field and how you can start working professionally in a PE role&lt;/li&gt;
&lt;li&gt;Building &lt;strong&gt;projects&lt;/strong&gt; with the aforementioned tools to demonstrate capabilities as a PE enthusiast&lt;/li&gt;
&lt;li&gt;How to keep pursuing as someone who loves to build &lt;strong&gt;Software Infrastructure&lt;/strong&gt;, and putting &lt;strong&gt;projects&lt;/strong&gt; into &lt;strong&gt;production&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#raise-dev-amp-mlh-fellowship-sessions-internal"&gt;
  &lt;/a&gt;
  Raise Dev &amp;amp; MLH Fellowship Sessions (Internal)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lOudG2Hu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/4HiaeeIR11xe1pnGvO/200w.webp%3Fcid%3Decf05e4780e5n5bio3z09c7ydzy7kff94c8cie15xppt7mau%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lOudG2Hu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/4HiaeeIR11xe1pnGvO/200w.webp%3Fcid%3Decf05e4780e5n5bio3z09c7ydzy7kff94c8cie15xppt7mau%26rid%3D200w.webp%26ct%3Dg" alt="Mentorship"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being a part of MLH offered me the chance to arrange &lt;strong&gt;sessions with mentors&lt;/strong&gt; on &lt;a href="https://raise.dev/"&gt;Raise Dev&lt;/a&gt;, which made it easier in my tenure to go and talk to industry professionals for anything related to,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Career Advice&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Resume Feedback&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Pair Programming&lt;/em&gt;&lt;/strong&gt; (Yes, seriously!)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There was also the added benefit of internal MLH Fellowship Sessions that fellows get to experience and ask questions in.&lt;/p&gt;

&lt;p&gt;Some examples of the talks are,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Cracking The Coding Interview&lt;/strong&gt; (CTCI)'s series by Kunal (fantastic guy, fantastic sessions!)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cloud&lt;/strong&gt; &amp;amp; &lt;strong&gt;Cloud Native&lt;/strong&gt; Sessions (Monitoring, Prometheus, K8s No Code Contributions, Machine Learning, Service Meshes etc)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Open Source&lt;/strong&gt;, &lt;strong&gt;Developer Advocacy&lt;/strong&gt;, &lt;strong&gt;DevRel&lt;/strong&gt;, &lt;strong&gt;Tech Industry Networking&lt;/strong&gt;, &lt;strong&gt;Career Growth Advice&lt;/strong&gt;, &lt;strong&gt;Hacker Culture&lt;/strong&gt;, &lt;strong&gt;Data Governence&lt;/strong&gt;, &lt;strong&gt;Julia&lt;/strong&gt; and so much more!&lt;/li&gt;
&lt;li&gt;Sponsored talks by &lt;strong&gt;Jina AI&lt;/strong&gt;, &lt;strong&gt;Remote&lt;/strong&gt;, &lt;strong&gt;Microsoft&lt;/strong&gt;, &lt;strong&gt;DataStax&lt;/strong&gt;, &lt;strong&gt;GitHub&lt;/strong&gt;, &lt;strong&gt;Facebook&lt;/strong&gt; and more!&lt;/li&gt;
&lt;li&gt;Technical talks such as &lt;strong&gt;Emphemeral Hardware&lt;/strong&gt;, &lt;strong&gt;Serverless Video Confereing Application&lt;/strong&gt;, &lt;strong&gt;Docker&lt;/strong&gt;, &lt;strong&gt;Pallets&lt;/strong&gt;, &lt;strong&gt;GraphQl&lt;/strong&gt;, and of course, more.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#my-thoughts"&gt;
  &lt;/a&gt;
  My thoughts
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LbQu40Td--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/a5viI92PAF89q/200w.webp%3Fcid%3Decf05e47gun8qike9jk3iz7dhineitx7vk20tkvvnczqnoti%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LbQu40Td--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/a5viI92PAF89q/200w.webp%3Fcid%3Decf05e47gun8qike9jk3iz7dhineitx7vk20tkvvnczqnoti%26rid%3D200w.webp%26ct%3Dg" alt="Batman"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wouldn't use the word 'internship' to describe the experience that I had because the word seems very traditional in that it conveys the idea of something you're work on in a given time period on every weekday for a determined period.&lt;/p&gt;

&lt;p&gt;For me, I would say, it was three different kind of experiences complimenting each other.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Firstly was the getting to know people from all around the world, being able to attend sessions and talks for all topics tech and community wise. It was about making friends, seeing what others are doing, getting to know people, sharing experiences, being able to understand so many backgrounds and perspectives and learning from everyone around you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Secondly was the project that I was working on, the completely new domain for me, the company, the project, the remote work environment, everything was very new to me and very surprising.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The community experience of finding new folks and taking part in events or competitions and getting better to know each other and their expertise. This extremely helps you to get your hands dirty that you might otherwise be hesitant about, and has the immensely added benefit of networking and getting to know sooooo many talented people!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of these make the MLH experience very unique and helps you figure out not only how to work better in communities and in teams and how to communicate, but also exposes you on how to get help if you're stuck and how to share your problems.&lt;/p&gt;

&lt;p&gt;Delaying it no more, below is a more in depth on how I winded up at MLH.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-all-started"&gt;
  &lt;/a&gt;
  How it all started
&lt;/h2&gt;

&lt;p&gt;For my story, I stumbled across &lt;strong&gt;Major League Hacking&lt;/strong&gt; accidentally one day while randomly scrolling my &lt;strong&gt;LinkedIn&lt;/strong&gt; back in The main goal of the &lt;strong&gt;Open Source&lt;/strong&gt; track is to familiarize you with,. I saw students like me from across the world share their experiences on how the journey through the MLH tenure has been for them, and going through that, I said, "&lt;em&gt;Hey, this looks interesting!&lt;/em&gt;".&lt;/p&gt;

&lt;p&gt;Besides, I myself wanted to dig deeper into the &lt;strong&gt;Open Source Community&lt;/strong&gt;, but I had no idea where to even start. I took out some time to research more into what the whole fellowship was about, and how I could get involved.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-application"&gt;
  &lt;/a&gt;
  The Application
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IvqohA7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/3o7WIz0R4XwKgs2fHG/100.webp%3Fcid%3Decf05e472wdv0f746nsanch5f1sim7m7xn8lpr7ica6zydp6%26rid%3D100.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IvqohA7l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/3o7WIz0R4XwKgs2fHG/100.webp%3Fcid%3Decf05e472wdv0f746nsanch5f1sim7m7xn8lpr7ica6zydp6%26rid%3D100.webp%26ct%3Dg" alt="Writing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I submitted my application on Sept '20 to be a fellow in Spring '21.&lt;/p&gt;

&lt;p&gt;To others, I would advise applying early to the programs ... but I've found people who applied very early and got accepted, as well as folks who applied late and still got accepted. Though it is generally recommended to apply early, my opinions are to &lt;strong&gt;apply when you're ready to show something you've made to showcase what you know&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Below are my thoughts on how to approach writing the application, but feel free to add or remove any thoughts from your own perspective,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Don't worry about being not enough technical to start the application. The Fellowship is a learning experience for every pod member involved - no one knows everything&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Don't focus entirely on technicality. The Fellowship puts emphasis on building a community, getting to know people, investing time in supporting, helping, and learning from others. Share your experiences about what you've made previously and why it matters to you, what makes you happy and excited in the work you do, and what is it about the fellowship that intrigues you? Be sure to enjoy, make friends, and get to know other people in the Fellowship experience!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The answer to "Why do yo want to become an MLH Fellow" can vary, but it's really trying to ask "what brought you to technology and programming?" "Why is a community important for you?" "What kind of discussions or ideas can you bring to your pod?", and "How can MLH help you in your learning?" Even "Are you familiar with the Hacker Culture?"&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-code-sample"&gt;
  &lt;/a&gt;
  The Code Sample
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_nCaXW6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/du3J3cXyzhj75IOgvA/200.webp%3Fcid%3Decf05e47xz7twvxk7eh7snodvozlrehzzpb1udm2hff9n8nh%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_nCaXW6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/du3J3cXyzhj75IOgvA/200.webp%3Fcid%3Decf05e47xz7twvxk7eh7snodvozlrehzzpb1udm2hff9n8nh%26rid%3D200.webp%26ct%3Dg" alt="GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;Application&lt;/strong&gt;, MLH asks you to submit a code piece that will be overlooked by their team and asked about by the interviewer in the 2nd interview.&lt;/p&gt;

&lt;p&gt;I strongly believe you should show a project you're very proud of, and that you've put a lot of thought into designing, working, to getting it up and running. It doesn't have to be the most amazing idea, but here is what I recommend you show,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is useful and tries to solve problem. Nothing very big, but targets an interesting problem, like a hackathon idea&lt;/li&gt;
&lt;li&gt;Uses some API or does something very cool with different technologies&lt;/li&gt;
&lt;li&gt;Has questions interviewers can ask over why somethings are the way they are&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below are some code sample requirements from the application&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lW-66OLF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jLepoLEQ--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ow6p45m109qikdhqmmrx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lW-66OLF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jLepoLEQ--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ow6p45m109qikdhqmmrx.PNG" alt="Code Sample Requirements"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are some things that you should do,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prepare a neat and organized GitHub README that instantly helps readers understand what the project is about. Remember, presentation is as important as the project itself. If it's too clumsy, or too spreadout everywhere, or you have to explain things that could have been otherwise been in the README, maybe there is a chance for improvement. Here are some links to help with that,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-write-a-good-readme-file/"&gt;How to Write a Good README File for Your GitHub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matiassingers/awesome-readme"&gt;Awesome READMEs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Follow some &lt;strong&gt;Software Engineering&lt;/strong&gt; "best practices" (opionated, can be anything you can thnk of that makes fits your project),&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Modularity&lt;/strong&gt; - Split logic amongst components, each component doing one thing only so it is easier to explain, modify, and read&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Practical Names&lt;/strong&gt; - Obvious, but make sure you name your files and folders accordingly. I personally go check out &lt;a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme"&gt;VSCode's Material UI Icon Pack Theme&lt;/a&gt; and see which are some popular folder/file names&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DRY&lt;/strong&gt; (Don't Repeat Yourself) - Consider how you generalize similar ocurring problems in your codebase, and talk about how you managed to reduce effort and coding time by having a single point of use&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CI/CD&lt;/strong&gt; - If you're familiar, setup some &lt;em&gt;GitHub actions&lt;/em&gt; that automate tasks for you to save time&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Formatter&lt;/strong&gt;/&lt;strong&gt;Linter&lt;/strong&gt; - Consider using a formatter or a linter for your project to ensure consistent indentation, possible naming problems, possible bugs. This makes your code look clean and easy to read regardless of the codebase's size&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Testing&lt;/strong&gt; - If you can, try following a &lt;em&gt;TDD&lt;/em&gt;, &lt;em&gt;Test First&lt;/em&gt;, or &lt;em&gt;Unit Test&lt;/em&gt; approach that help with making sure your project does not break as you keep developing&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Packages&lt;/strong&gt;/&lt;strong&gt;Libraries&lt;/strong&gt; - If what you've made is akin to a package or library that can be installed (like a Python Package), prepare a demo to showcase what your project does and how it has managed to solve problems&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Workflow&lt;/strong&gt; - If you've worked with other collaborators to develop the project, showcase your methodology of how you get work done if you can. Maybe it is a &lt;em&gt;Jira&lt;/em&gt; or &lt;em&gt;Atlassian&lt;/em&gt; board, maybe it is a &lt;em&gt;GitHub Issues&lt;/em&gt;/&lt;em&gt;Pull Request&lt;/em&gt; methdology, maybe you're using something like Travis CI for a CI/CD pipeline, etc. Talk about how you solve problems and conflicts in the project, and how you keep focused on the project you're working on&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Software&lt;/strong&gt; - Showcase what technologies you've used in your project, and why. How did using that technology solve a problem you were facing&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You DO NOT have to get everything right and perfect. Remember, it's okay to not have everything. A wise man once said to me,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Focus on your strengths. What you may get done in what you're strong at may only take you 1 hour, what you get done in what you're weak at, may take more than 10 hours"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pick your battles wisely, don't stress out about it, make something you enjoy and love, and show that to the world!&lt;/p&gt;

&lt;p&gt;If you're wondering what my project was, it was &lt;strong&gt;Terrabuzz&lt;/strong&gt;, a "&lt;em&gt;social media application&lt;/em&gt;" I made in my last Fall Semester '20 in a team of 3.&lt;/p&gt;

&lt;p&gt;It had,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Register/Login/Forget Password/New Password/Verification&lt;/li&gt;
&lt;li&gt;Profiles/Following/Followers&lt;/li&gt;
&lt;li&gt;Posts/Likes/Comments/Notifications&lt;/li&gt;
&lt;li&gt;Settings/Changing Passwords&lt;/li&gt;
&lt;li&gt;Search For Profiles/Search For Hashtags&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And was &lt;em&gt;dockerized&lt;/em&gt; completely and prepared with a &lt;em&gt;Azure&lt;/em&gt; VM at the end of a &lt;em&gt;CI/CD&lt;/em&gt; pipeline.&lt;/p&gt;

&lt;p&gt;Check it out below!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Rubix982"&gt;
        Rubix982
      &lt;/a&gt; / &lt;a href="https://github.com/Rubix982/Terrabuzz"&gt;
        Terrabuzz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Social media based on connecting users on the basis of interests, integrating a system of news-feed, following/followers, notifications, profile updates, and a basic settings page
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Terrabuzz - A Student Social Media Application&lt;/h1&gt;
&lt;p&gt;
 &lt;a href="https://github.com/Rubix982/Terrabuzz#"&gt;
&lt;img alt="React" src="https://camo.githubusercontent.com/dc57ba1c6229593eea46a03363e4c218f4ad09973f3058661c57d284e8ea4eec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52656163742d52656163743f267374796c653d666f722d7468652d6261646765266c6f676f3d7265616374266c6f676f436f6c6f723d30303026636f6c6f723d363144414642"&gt;
&lt;img alt="ReactStrap" src="https://camo.githubusercontent.com/8c37138c3c1322a78097d4db15330d8dd1a174d6ee1d712e0d05b8b1acc45c61/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f526561637453747261702d526561637453747261703f267374796c653d666f722d7468652d6261646765266c6f676f3d626f6f747374726170266c6f676f436f6c6f723d30303026636f6c6f723d373935324233"&gt;
&lt;img alt="React Router" src="https://camo.githubusercontent.com/866282113aa2746a6f445b1bc50c057e73533c3a3b64780906addd9eca35cca9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5265616374253230526f757465722d5265616374253230526f757465723f267374796c653d666f722d7468652d6261646765266c6f676f3d7265616374253230726f75746572266c6f676f436f6c6f723d66666626636f6c6f723d434134323435"&gt;
&lt;img alt="JavaScript" src="https://camo.githubusercontent.com/94f30974079d62ab5d50a8ce0847907704efb2d08be89373154182733dd96708/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176617363726970742d4a6176617363726970743f267374796c653d666f722d7468652d6261646765266c6f676f3d6a617661736372697074266c6f676f436f6c6f723d66666626636f6c6f723d463744463145"&gt;
&lt;img alt="NodeJS" src="https://camo.githubusercontent.com/8f42159e9d1819f2059c5fe8756d52bd6fe269033761dd89d660d76d230e5092/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e6f64654a532d4e6f64654a533f267374796c653d666f722d7468652d6261646765266c6f676f3d6e6f64652e6a73266c6f676f436f6c6f723d66666626636f6c6f723d333339393333"&gt;
&lt;img alt="ExpressJS" src="https://camo.githubusercontent.com/87e8bffdb8eb4ac25b2bbaa09e0b2fabad1199faebf702d6c18f58961c400571/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f457870726573732d457870726573733f7374796c653d666f722d7468652d6261646765266c6f676f3d6578707265737326636f6c6f723d303030303030"&gt;
&lt;img alt="JSON Web Tokens" src="https://camo.githubusercontent.com/1270af8b275d231e80b4e5dc39072ff04b7c7d44d414d1c1e5e3013a0ee0268c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a534f4e253230576562253230546f6b656e732d4a534f4e253230576562253230546f6b656e733f7374796c653d666f722d7468652d6261646765266c6f676f3d6a736f6e253230776562253230746f6b656e7326636f6c6f723d303030303030266c6f676f436f6c6f723d666666"&gt;
&lt;img alt="Nginx" src="https://camo.githubusercontent.com/db125050e352bdc1af91d27a35c45ba13587ae64d42f70400b09dcacade1f61c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e67696e782532302d2532333030393633392e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d6e67696e78266c6f676f436f6c6f723d7768697465"&gt;
&lt;img alt="Vercel" src="https://camo.githubusercontent.com/a8daf5d93e4c6aea69f6b32d9eefa76bdcb0f2466e2042b615c981aefc4ed291/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f56657263656c2d56657263656c3f267374796c653d666f722d7468652d6261646765266c6f676f3d76657263656c266c6f676f436f6c6f723d66666626636f6c6f723d303030"&gt;
&lt;img alt="Docker" src="https://camo.githubusercontent.com/3bfee5bd68a96c3a4bb71dfb506e787b2cbf40368624ac237562905c97b94e39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f636b65722d446f636b65723f267374796c653d666f722d7468652d6261646765266c6f676f3d646f636b6572266c6f676f436f6c6f723d66666626636f6c6f723d323439364544"&gt;
&lt;img alt="Microsoft Azure" src="https://camo.githubusercontent.com/e0a9aabc0c296abd60a854a80e84814a532432aa01fb09c64c50175dc7f8864b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6963726f736f6674253230417a7572652d4d6963726f736f6674253230417a7572653f267374796c653d666f722d7468652d6261646765266c6f676f3d6d6963726f736f6674253230617a757265266c6f676f436f6c6f723d66666626636f6c6f723d303038394436"&gt;
&lt;img alt="MySQL" src="https://camo.githubusercontent.com/b37ab55e2bc02ba7a630370b028b96374fa67b8c08de14fc7415d0353e0612bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d7953514c2d4d7953514c3f7374796c653d666f722d7468652d6261646765266c6f676f3d6d7973716c26636f6c6f723d343437394131266c6f676f436f6c6f723d666666"&gt;
&lt;img alt="Mongo DB" src="https://camo.githubusercontent.com/444beacbda325f32b653cec07b011b5295e999f5a02589eb579fb63ffcb011d0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6f6e676f44422d4d6f6e676f44423f7374796c653d666f722d7468652d6261646765266c6f676f3d6d6f6e676f6462266c6f676f436f6c6f723d66666626636f6c6f723d343741323438"&gt;
&lt;img alt="Redis" src="https://camo.githubusercontent.com/d2289fff26d1b67bb41f67344e1b981f4ca9c36fa40fc7476d62e175538b1966/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52656469732d52656469733f7374796c653d666f722d7468652d6261646765266c6f676f3d7265646973266c6f676f436f6c6f723d66666626636f6c6f723d444333383244"&gt;
&lt;img alt="Neo4j" src="https://camo.githubusercontent.com/f4e93594855e461b8693b52d17150b078bf23f77a3f3e528b1c2858c1cc2e080/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e656f346a2d4e656f346a3f267374796c653d666f722d7468652d6261646765266c6f676f3d6e656f346a266c6f676f436f6c6f723d66666626636f6c6f723d303038434331"&gt;
&lt;img alt="Eslint" src="https://camo.githubusercontent.com/39e11de79f516418202ecfafee50bbd79e6d6f3b39fee78058b0c7ec7136443e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f45536c696e742d45536c696e743f267374796c653d666f722d7468652d6261646765266c6f676f3d65736c696e74266c6f676f436f6c6f723d66666626636f6c6f723d344233324333"&gt;
&lt;img alt="NPM" src="https://camo.githubusercontent.com/be788a71b4e40738283b8e8a63336e7d3cede8338065562db70a7f135ace5284/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d6e706d3f267374796c653d666f722d7468652d6261646765266c6f676f3d6e706d266c6f676f436f6c6f723d66666626636f6c6f723d434233383337"&gt;
&lt;img alt="Github" src="https://camo.githubusercontent.com/ae166416cd0f78b8b7293009ed39dfac4c94b28932186c89afda6dbfaa3ec426/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4769746875622d4769746875623f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d66666626636f6c6f723d313831373137"&gt;
&lt;img alt="Github Actions" src="https://camo.githubusercontent.com/ad526a1092f5068f56ebfff3b390d23b3bc0fd7772a03f9df17b61648f3f587c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974687562253230416374696f6e732d476974687562253230416374696f6e733f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562253230616374696f6e73266c6f676f436f6c6f723d66666626636f6c6f723d323038384646"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/b0453b8d2c78e0237b2705edecbe63cd289e3545c7069c1e82f32950da0979b4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f52756269783938322f546572726162757a7a2e7376673f7374796c653d666f722d7468652d6261646765" alt="Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Rubix982/Terrabuzz/network/members"&gt;&lt;img src="https://camo.githubusercontent.com/e9aea7568a716d576f11325db9b59e74221d250314465d1cb911412a3ae237c4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f52756269783938322f546572726162757a7a2e7376673f7374796c653d666f722d7468652d6261646765" alt="Forks"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Rubix982/Terrabuzz/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/4e6ac87dfe122d674a29fcc09f0cb549092082c76fe03ec0acf04251d92f5b4c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f52756269783938322f546572726162757a7a2e7376673f7374796c653d666f722d7468652d6261646765" alt="Stargazers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Rubix982/Terrabuzz/issues"&gt;&lt;img src="https://camo.githubusercontent.com/c52ef758eb6bbe23bb269ab0262541b327ae3829614915c8434f43a7b66e7ed1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f52756269783938322f546572726162757a7a2e7376673f7374796c653d666f722d7468652d6261646765" alt="Issues"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rubix982, Saif Ul Islam, &lt;a href="https://www.linkedin.com/in/saif-ul-islam-93786b187/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ffde4ea8d2869a62cdf80282516c524e1109befc83d6339aae7a55d94ff4ae5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d626c61636b2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e26636f6c6f72423d353535" alt="LinkedIn - Rubix982"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Hassanzhd, Muhammad Hassan Zahid, &lt;a href="https://www.linkedin.com/in/muhammad-hassan-zahid-b110971b6/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ffde4ea8d2869a62cdf80282516c524e1109befc83d6339aae7a55d94ff4ae5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d626c61636b2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e26636f6c6f72423d353535" alt="LinkedIn - Hassanzhd"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;TashikMoin23, Tashik Moin Sheikh, &lt;a href="https://www.linkedin.com/in/tashik-moin-sheikh-08872116b/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ffde4ea8d2869a62cdf80282516c524e1109befc83d6339aae7a55d94ff4ae5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d626c61636b2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e26636f6c6f72423d353535" alt="LinkedIn - TashikMoin23"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;HasanBurney, Hasan Burney &lt;a href="https://www.linkedin.com/in/hasanburney/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ffde4ea8d2869a62cdf80282516c524e1109befc83d6339aae7a55d94ff4ae5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d4c696e6b6564496e2d626c61636b2e7376673f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e26636f6c6f72423d353535" alt="LinkedIn - HasanBurney"&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Rubix982/Terrabuzz"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0K8ea1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Rubix982/Terrabuzzclient/public/favicon.ico" alt="Logo" width="80" height="80"&gt;
  &lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
Terrabuzz&lt;/h3&gt;
  &lt;p&gt;
    A student social media project
    &lt;br&gt;
    &lt;a href="https://drive.google.com/file/d/1EMZb2H9-jMr69Ac4kvM5gi9LASd5B79q/view" rel="nofollow"&gt;&lt;strong&gt;Read the SRS/SDS»&lt;/strong&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a href="https://github.com/Rubix982/Terrabuzz"&gt;Video Demo&lt;/a&gt;
    ·
    &lt;a href="https://github.com/Rubix982/Terrabuzz/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title="&gt;Report Bug&lt;/a&gt;
    ·
    &lt;a href="https://github.com/Rubix982/Terrabuzz/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title="&gt;Request Feature&lt;/a&gt;
  &lt;/p&gt;




  Table of Contents
  &lt;ol&gt;
    &lt;li&gt;
        &lt;a href="https://github.com/Rubix982/Terrabuzz#description"&gt;Description&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://github.com/Rubix982/Terrabuzz#about-the-project"&gt;About The Project&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://github.com/Rubix982/Terrabuzz#screenshots"&gt;Screenshots&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://github.com/Rubix982/Terrabuzz#demos"&gt;Demos&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#using-demo"&gt;Run Demo&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#workflow-explanation"&gt;Workflow Explanation&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://github.com/Rubix982/Terrabuzz#file-structure"&gt;File Structure&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#client"&gt;Client&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#data"&gt;Data&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#docs"&gt;Docs&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#server"&gt;Server&lt;/a&gt;&lt;/li&gt;  
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#web-server"&gt;Web Server&lt;/a&gt;&lt;/li&gt;           
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://github.com/Rubix982/Terrabuzz#getting-started"&gt;Getting Started&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#license"&gt;License&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://github.com/Rubix982/Terrabuzz#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;



&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;Finding relations among people is one of the hardest things to do with social media these days, contrary to the word social media in the first place. More and more emphasis is put on driving a great amount of reactions, rather than focusing on helping people find more connections far more easily than others.&lt;/p&gt;
&lt;p&gt;What does this mean? It means that there are lower chances or possibilities for artists, small business, startups, to more easily connect with their audience
Social…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Rubix982/Terrabuzz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#everything-you-know-about-tech-internships-is-wrong-mike-swift-github-education"&gt;
  &lt;/a&gt;
  "Everything You Know About Tech Internships Is Wrong" - Mike Swift, GitHub Education
&lt;/h3&gt;

&lt;p&gt;Check out this short (&lt;strong&gt;~16 minutes&lt;/strong&gt;) talk by Mike Swift over some ideas about technical internships!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=F4EpjB9-HeI"&gt;GitHub Education&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-interviews"&gt;
  &lt;/a&gt;
  The Interviews
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rdyiHLly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/ounv1hey86r5DM6WhP/200.webp%3Fcid%3Decf05e47j87nfnqsqdv7owdhmgu35kj94qcwmai8txxkxktl%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rdyiHLly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/ounv1hey86r5DM6WhP/200.webp%3Fcid%3Decf05e47j87nfnqsqdv7owdhmgu35kj94qcwmai8txxkxktl%26rid%3D200.webp%26ct%3Dg" alt="The Office"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This section describe the interview process, but overall, keep in mind to,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Relax and don't stress yourself out for the interviews!&lt;/li&gt;
&lt;li&gt;Please be yourself and feel free to communicate better and focus on talking and asking questions if you like&lt;/li&gt;
&lt;li&gt;Don't be afraid to express and talk about your personality. It does count and it is valuable as a Fellow (remember, it's not all coding)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The interviews were in two parts! They are as,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;first one&lt;/strong&gt; is a no code, no project, 10-15 minute interview for eligibility filtering. It describes itself as,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;During this call we'll be confirming your eligibility for the program and evaluating your ability to successfully participate. If time permits,&lt;br&gt;
  you'll have an opportunity to ask questions at the end of the conversation.&lt;/p&gt;

&lt;p&gt;What we're looking for,&lt;/p&gt;

&lt;p&gt;Eligibility: Do you meet the criteria for the program &amp;amp; understand the commitment?&lt;br&gt;
  Passion: Why do you want to become an MLH Fellow and what will you bring to the batch?&lt;br&gt;
  Communication Skills: Will you be able to successfully collaborate with other fellows?&lt;br&gt;
  A/V Setup: Do you have a remote environment that will allow you to successfully participate?&lt;br&gt;
  Professionalism: Did you show up on time and demonstrate a high level of professionalism?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;second one&lt;/strong&gt; is a more technical sided interview about the code submission made in the application.&lt;/p&gt;

&lt;p&gt;It is recommended that you freshen up on the codebase, the architecture, design and tooling decisions and have the project in an up and running state. It describes itself as,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;During this call we'll be walking through the code sample you submitted, discussing how you built it and what you would do differently in the&lt;br&gt;
  future. We may also ask you some questions about your familiarity with the specific technologies &amp;amp; programming languages you indicated you were&lt;br&gt;
  proficient with on your application. If time permits, you'll have an opportunity to ask questions at the end of the conversation.&lt;/p&gt;

&lt;p&gt;What we're looking for,&lt;/p&gt;

&lt;p&gt;Technical Proficiency: Do you have a proficient understanding of the language you used&lt;br&gt;
  Learning Potential: Do you respond well to feedback and have an aptitude for learning?&lt;br&gt;
  Communication Skills: Will you be able to successfully collaborate with other fellows?&lt;br&gt;
  A/V Setup: Do you have a remote environment that will allow you to successfully participate?&lt;br&gt;
  Professionalism: Did you show up on time and demonstrate a high level of professionalism?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-process"&gt;
  &lt;/a&gt;
  The Process
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dOQQI2dn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/AMSUrxqH4vxPW/200.webp%3Fcid%3Decf05e476avw497qjk98qcbv3pl16n3869hv2d5r1slt0tn1%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dOQQI2dn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/AMSUrxqH4vxPW/200.webp%3Fcid%3Decf05e476avw497qjk98qcbv3pl16n3869hv2d5r1slt0tn1%26rid%3D200.webp%26ct%3Dg" alt="Dexter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So come around December, I've given my interviews and am now waiting for a reply. Sadly (actually thankfully), I get redirected for the next Summer batch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thanks again for applying for the MLH Fellowship: Open&lt;br&gt;
Source (Spring 2021). Unfortunately, after careful review,&lt;br&gt;
we have decided to reject your application at this time&lt;br&gt;
because we were unable to match you to an opening on one of&lt;br&gt;
the Pods. &lt;strong&gt;However, we were significantly impressed with you&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;and your application and we would like to invite you to&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;enroll in a future batch of the MLH Fellowship in the Open&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Source program.&lt;/strong&gt;&lt;br&gt;
...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Honestly, at that time, I didn't think too much of the rejection, but still kept at eye out on the MLH Discord channel to check for updates now and then.&lt;/p&gt;

&lt;p&gt;Now comes May, I still had time and hadn't really planned what to do with my Summers. I was applying for internships around me, but getting few replies, if any ...&lt;/p&gt;

&lt;p&gt;... Then on May 7th, I get an email from Mike Swift himself asking me if I'm still interested, and for what track. My response being, "I'm interested in being considered for any track of the MLH Fellowship", and then finally on May 11th,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3v3fcS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c32qhv8n1oz8vw6p62ma.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3v3fcS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c32qhv8n1oz8vw6p62ma.jpg" alt="Acceptance Email"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I finally get accepted! 🎉 🎉 🎉 🎉 🎉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starting-out"&gt;
  &lt;/a&gt;
  Starting Out
&lt;/h3&gt;

&lt;p&gt;My tenure officially started on June 7th (in the middle of my final exams :horror:) but I was luckily able to manage both until June 23rd when I was finally free and available to get work done. 🔥&lt;/p&gt;

&lt;p&gt;So to get started, I was invited to the MLH Fellowship Discord channel through an email, where I was assigned to the 3.0.1 &lt;em&gt;"pod"&lt;/em&gt; for Python projects.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;"pod"&lt;/em&gt; is a group of 11 people + the pod leader that meets up everyday. Everyone updates what is it that they're working on, what have they got done, what blockers they're facing. At the end of each week, we also have a &lt;strong&gt;"retrospective"&lt;/strong&gt; where we talk about how the week went. In this, we talk about,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Greens&lt;/strong&gt;: Things that went really went and don't need any help from others&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Yellows&lt;/strong&gt;: Things that can go better than they have, help or advice maybe needed&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reds&lt;/strong&gt;: Anything that is a blocker or major obstacle preventing progress&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My pod leader was &lt;a href="https://www.linkedin.com/in/gabriel-de-melo-cruz/"&gt;Gabriel De Melo Cruz&lt;/a&gt;, a super friendly lead who really helped everyone feel comfortable about the fellowship experience and really coordinating with basically everything we had and did.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AMF6lGb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbybn3ogaoh43dthp55x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AMF6lGb4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbybn3ogaoh43dthp55x.png" alt="Pod Meeting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Also we named our Pod, "&lt;strong&gt;The Callback Camels&lt;/strong&gt;" which you can see the background)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#standups"&gt;
  &lt;/a&gt;
  Standups
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3NZC8Y90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/DrO4Bm325pjhc0BRM0/200.webp%3Fcid%3Decf05e47dz64eql7ojd7rbsab1rjri93qe1k536ijt87psuy%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3NZC8Y90--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/DrO4Bm325pjhc0BRM0/200.webp%3Fcid%3Decf05e47dz64eql7ojd7rbsab1rjri93qe1k536ijt87psuy%26rid%3D200.webp%26ct%3Dg" alt="Standup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We had standups!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We did it in two ways,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We had a post on a MLH Fellowship GitHub page where we had to fill in the format,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What did you achieve in the last 24 hours?:&lt;br&gt;
  -&lt;/p&gt;

&lt;p&gt;What are your priorities for the next 24 hours?:&lt;br&gt;
  -&lt;/p&gt;

&lt;p&gt;Blockers:&lt;br&gt;
  -&lt;/p&gt;

&lt;p&gt;Shoutouts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@username for x&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The first 20-30 minutes of the hourly meet from Mon-Fri would be about describing the standup in more detail, give shoutouts, ask questions about anything basically&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The remaining time that we would have, we would spend it on "&lt;strong&gt;Show &amp;amp; Tells&lt;/strong&gt;", &lt;strong&gt;discussions&lt;/strong&gt;, &lt;strong&gt;projects&lt;/strong&gt;, &lt;strong&gt;trainual&lt;/strong&gt;, arranging mock interviews, &lt;strong&gt;Resume&lt;/strong&gt; discussions, sometimes playing games like &lt;em&gt;Scrible&lt;/em&gt; or &lt;em&gt;Among Us&lt;/em&gt; if there's enough demand. :P&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Everyone was asked to arrange &lt;strong&gt;Calendly&lt;/strong&gt; 1-to-1s to get to better know everyone else in the pod, so it was pretty common to arrange &lt;strong&gt;1-to-1s&lt;/strong&gt; with everyone, even from outside the pod&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#meetings"&gt;
  &lt;/a&gt;
  Meetings
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lxhGb_JU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/usz0fqhUiVxSs6IUKB/200w.webp%3Fcid%3Decf05e47uyk8c6qbad1kyvt8uugcm6tk9bgycxfukpq57l6g%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lxhGb_JU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media2.giphy.com/media/usz0fqhUiVxSs6IUKB/200w.webp%3Fcid%3Decf05e47uyk8c6qbad1kyvt8uugcm6tk9bgycxfukpq57l6g%26rid%3D200w.webp%26ct%3Dg" alt="Planning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As above, you'll be asked and heavily encouraged to arrange 1-to-1s with other pod members, even other members. Setting up 1-to-1s included,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A Calendly account and sharing that other pod mates&lt;/li&gt;
&lt;li&gt;Your &lt;strong&gt;Pod Leader&lt;/strong&gt; throughout the Fellowship&lt;/li&gt;
&lt;li&gt;Mentors from &lt;strong&gt;Raise.dev&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pod Members&lt;/strong&gt;/&lt;strong&gt;Pod Leaders&lt;/strong&gt; from other pods&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#orientation-hackathon"&gt;
  &lt;/a&gt;
  Orientation Hackathon
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vEB8CnGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/baioc/crowd-sourced/master/assets/img/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vEB8CnGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/baioc/crowd-sourced/master/assets/img/1.png" alt="Crowd Sourced"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
 &lt;a href="#"&gt;
&lt;img alt="React" src="https://res.cloudinary.com/practicaldev/image/fetch/s--AxaFqdzw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/React-React%3F%26style%3Dfor-the-badge%26logo%3Dreact%26logoColor%3D000%26color%3D61DAFB"&gt;
&lt;img alt="React Router" src="https://res.cloudinary.com/practicaldev/image/fetch/s--xHwrCNKw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/React%2520Router-React%2520Router%3F%26style%3Dfor-the-badge%26logo%3Dreact%2520router%26logoColor%3Dfff%26color%3DCA4245"&gt;
&lt;img alt="JavaScript" src="https://res.cloudinary.com/practicaldev/image/fetch/s--lYI_bXda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Javascript-Javascript%3F%26style%3Dfor-the-badge%26logo%3Djavascript%26logoColor%3Dfff%26color%3DF7DF1E"&gt;
&lt;img alt="NodeJS" src="https://res.cloudinary.com/practicaldev/image/fetch/s--W6D8-yvo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Node.JS-339933%3F%26style%3Dfor-the-badge%26logo%3Dnode.js%26logoColor%3Dfff%26color%3D339933"&gt;
&lt;img alt="Vercel" src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnqB7IJn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Vercel-Vercel%3F%26style%3Dfor-the-badge%26logo%3Dvercel%26logoColor%3Dfff%26color%3D000"&gt;
&lt;img alt="Docker" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zOhOjmN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Docker-Docker%3F%26style%3Dfor-the-badge%26logo%3Ddocker%26logoColor%3Dfff%26color%3D2496ED"&gt;
&lt;img alt="Mongo DB" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rAXdHdhs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/MongoDB-MongoDB%3Fstyle%3Dfor-the-badge%26logo%3Dmongodb%26logoColor%3Dfff%26color%3D47A248"&gt;
&lt;img alt="Eslint" src="https://res.cloudinary.com/practicaldev/image/fetch/s--C1cQHqcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/ESlint-ESlint%3F%26style%3Dfor-the-badge%26logo%3Deslint%26logoColor%3Dfff%26color%3D4B32C3"&gt;
&lt;img alt="NPM" src="https://res.cloudinary.com/practicaldev/image/fetch/s--abEFUtBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/npm-npm%3F%26style%3Dfor-the-badge%26logo%3Dnpm%26logoColor%3Dfff%26color%3DCB3837"&gt;
&lt;img alt="Github" src="https://res.cloudinary.com/practicaldev/image/fetch/s--X0z5WNYA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Github-Github%3F%26style%3Dfor-the-badge%26logo%3Dgithub%26logoColor%3Dfff%26color%3D181717"&gt;
&lt;img alt="Flask" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cAZNgw-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Flask-000000%3F%26style%3Dfor-the-badge%26logo%3Dflask%26logoColor%3Dfff%26color%3D000000"&gt;   
&lt;img alt="GNU Bash" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mna55mIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GNU%2520Bash-4EAA25%3F%26style%3Dfor-the-badge%26logo%3DGNU%2520Bash%26logoColor%3Dfff%26color%3D4EAA25"&gt;
&lt;img alt="Linux" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJYfOFkm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Linux-FCC624%3F%26style%3Dfor-the-badge%26logo%3Dlinux%26logoColor%3Dfff%26color%3DFCC624"&gt;
&lt;img alt="Sass" src="https://res.cloudinary.com/practicaldev/image/fetch/s--6RCvkOZa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Sass-CC6699%3F%26style%3Dfor-the-badge%26logo%3Dsass%26logoColor%3Dfff%26color%3DCC6699"&gt;
&lt;img alt="Python" src="https://res.cloudinary.com/practicaldev/image/fetch/s---LH0ntBi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Python-3776AB%3F%26style%3Dfor-the-badge%26logo%3Dpython%26logoColor%3Dfff%26color%3D3776AB"&gt;
&lt;img alt="Material UI" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ahFnPvra--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Material%2520UI-0081CB%3F%26style%3Dfor-the-badge%26logo%3DMaterial%2520UI%26logoColor%3Dfff%26color%3D0081CB"&gt;
&lt;img alt="Markdown" src="https://res.cloudinary.com/practicaldev/image/fetch/s--3J1WtxIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Markdown-000000%3F%26style%3Dfor-the-badge%26logo%3DMarkdown%26logoColor%3Dfff%26color%3D000000"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;In the first week of the MLH, we went through the Orientation Hackathon where we had to build a hackathon project, with a submission till the weekend. For my presentation, I teamed with up two amazing people, Gabriel B. Saint'Anna, and Giancarlo Fissore, and we built &lt;a href="https://github.com/baioc/crowd-sourced"&gt;&lt;strong&gt;Crowd Sourced&lt;/strong&gt;&lt;/a&gt;! A platform where users could potentially upload unlabelled data, which would be labelled by contributors.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Open source "ML As A Service": high quality labels to train your models!"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#project-assignment-mapillary-facebook-open-source"&gt;
  &lt;/a&gt;
  Project Assignment (Mapillary, Facebook Open Source)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IWRQhq6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1097399669158825984/aXZ49j3I_400x400.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IWRQhq6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1097399669158825984/aXZ49j3I_400x400.png" alt="Mapillary Logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And finally starting from the 2nd week, we were assigned to Open Source projects to work on during the Fellowship.&lt;/p&gt;

&lt;p&gt;I got selected to work on &lt;a href="https://www.mapillary.com/"&gt;Mapillary&lt;/a&gt;, an Open Source alternative for better maps by providing access to street-level imagery and data from all over the world. Currently it's under &lt;strong&gt;Facebook's Open Source&lt;/strong&gt; program, which was huge for me to be a part of.&lt;/p&gt;

&lt;p&gt;First, a bit about Mapillary. Check out,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.mapillary.com/"&gt;Mapillary's Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mapillary.com/app/"&gt;Mapillary's WebApp Maps View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mapillary.com/platform"&gt;Mapillary's Image Upload Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mapillary/OpenSfM"&gt;Open Structure-From-Motion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;My project was the &lt;a href="https://github.com/mapillary/mapillary-python-sdk"&gt;Mapillary API v4 Python SDK&lt;/a&gt;, an SDK designed to interface with Mapillary's latest &lt;a href="https://www.mapillary.com/developer/api-documentation/"&gt;API v4 Release&lt;/a&gt;. For this, me and my team mate, Omar, were given a "Product Requirement Documentation" with 12 base requirements, and we had to translate that into a working SDK for GeoSpatial and GeoInformatics users.&lt;/p&gt;

&lt;p&gt;In regards to the API, we worked with with,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Images&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Map Features&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Detections&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Organizations&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Entities&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Vector Tiles&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Traffic Signs&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We had to use libraries such as &lt;strong&gt;mercantile&lt;/strong&gt;, &lt;strong&gt;mapbox&lt;/strong&gt;, &lt;strong&gt;shapely&lt;/strong&gt;, and &lt;strong&gt;turfpy&lt;/strong&gt; to implement the core functionality.&lt;/p&gt;

&lt;p&gt;In the process of all this, learn about &lt;strong&gt;GeoSpatial&lt;/strong&gt;/&lt;strong&gt;GeoInformatic&lt;/strong&gt; concepts to better interpret what we wanted to see in the SDK. This was an amazing experience as I got to touch a new domain because of this project.&lt;/p&gt;

&lt;p&gt;In the end, we designed and finished with an SDK that,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Has more than &lt;strong&gt;9K+ lines of contribution&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Currently &lt;strong&gt;53 PRs&lt;/strong&gt;, &lt;strong&gt;46 merged&lt;/strong&gt;, &lt;strong&gt;5 closed&lt;/strong&gt;, &lt;strong&gt;2 open&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Issues racked at about &lt;strong&gt;51 closed&lt;/strong&gt;, and &lt;strong&gt;19 open&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Made small releases on &lt;a href="https://pypi.org/project/mapillary/"&gt;PyPi&lt;/a&gt;. We're currently trying to fix bugs for the documentation so it is visible properly so we can release &lt;strong&gt;1.0.0&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Has a working &lt;a href="https://colab.research.google.com/drive/1BPWMP5k7QhXFB6nlWckHC1r54vIR0v2L?usp=sharing"&gt;Jupyter Notebook (Colab) demo&lt;/a&gt;!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;During the process, we,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Developed and provided interfaces for the &lt;strong&gt;12 requirements&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Created a &lt;strong&gt;CI/CD PyPi&lt;/strong&gt; release mechanism&lt;/li&gt;
&lt;li&gt;Developed &lt;strong&gt;automated testing&lt;/strong&gt; with &lt;strong&gt;PyTest&lt;/strong&gt; on every merge and PR&lt;/li&gt;
&lt;li&gt;Followed &lt;strong&gt;Software Engineering&lt;/strong&gt; best practices by employing ideas for &lt;strong&gt;maintainability&lt;/strong&gt;, &lt;strong&gt;code readability&lt;/strong&gt;, &lt;strong&gt;compatibility&lt;/strong&gt;, &lt;strong&gt;testing&lt;/strong&gt;, &lt;strong&gt;documentation&lt;/strong&gt;, and &lt;strong&gt;release management&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Implemented feature requests and used &lt;strong&gt;modularity&lt;/strong&gt; to split &lt;strong&gt;utilities&lt;/strong&gt;, &lt;strong&gt;configuration&lt;/strong&gt;, &lt;strong&gt;models&lt;/strong&gt;, and &lt;strong&gt;controllers&lt;/strong&gt; (for business logic)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#unexpected-contributions-jina-ai-neural-search-engine"&gt;
  &lt;/a&gt;
  Unexpected Contributions (Jina AI, Neural Search Engine)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NTB1w1HR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzOV_Kuo--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_66%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb30vn9taimlm5pm4a0y.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NTB1w1HR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--EzOV_Kuo--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_66%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb30vn9taimlm5pm4a0y.gif" alt="Jina AI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having some past experience in Docker, I got to know from my podmates, George McCarthy and Giancarlo that they were working on a &lt;a href="https://github.com/georgeamccarthy/protein_search"&gt;Protein Search&lt;/a&gt; project using Jina AI to demonstrate the protein seraching capabilities, and that they wanted to dockerize the application, but didn't know exactly how to ...&lt;/p&gt;

&lt;p&gt;... So I spent &lt;a href="http://github.com/georgeamccarthy/protein_search/pull/30"&gt;some time&lt;/a&gt; working on their project as well, and contributing to it to make it completely dockerized so that it is very easy for anyone to pick up the project and use it&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#show-amp-tells"&gt;
  &lt;/a&gt;
  Show &amp;amp; Tells
&lt;/h3&gt;

&lt;p&gt;We had Show &amp;amp; Tells! What they basically are is that everyone has to find something that they're working on or learning about, and share them with rest of the pod. It can be literally anything, for example, the "Show &amp;amp; Tells" for my pod included,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dicussion on Cal Newport's Book, &lt;a href="https://www.goodreads.com/book/show/25744928-deep-work"&gt;Deep Work&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/georgeamccarthy/"&gt;George A. McCarthy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Digital Art, by &lt;a href="https://www.linkedin.com/in/jyoti-bisht-9299181b1/"&gt;Jyoti Bisht&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Animation, by &lt;a href="https://www.linkedin.com/in/shezamunir/"&gt;Sheza Munir&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Vim, by &lt;a href="https://www.linkedin.com/in/gfissore/"&gt;Giancarlo Fissore&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;Bashed "Hack The Box" demonstration from &lt;a href="https://www.linkedin.com/in/gabriel-de-melo-cruz/"&gt;Gabriel Cruz&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;How to optimize Fibonacci using Scheme, as a demonstration of optimizations problems from the &lt;a href="https://mitpress.mit.edu/sites/default/files/sicp/index.html"&gt;Structure and Interpretation of Computer Programs&lt;/a&gt;, by &lt;a href="https://www.linkedin.com/in/baioc/"&gt;Gabriel B. Sant'Anna&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rubix982/MLH---DevOps-Show-Tell"&gt;DevOps&lt;/a&gt; (me)!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Towards the end of the Fellowship, we came up with the idea of giving a presentation about the project that we've been working on in the Summer as well!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#capture-the-flag"&gt;
  &lt;/a&gt;
  Capture The Flag
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h06fuOIZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i95lhh83rc9gf9qir2j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h06fuOIZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2i95lhh83rc9gf9qir2j.png" alt="Capture The Flag"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So MLH has started this tradition of doing CTFs which are basically  brain teasing, hands-on security/networking related questions in where there is a string format hidden somewhere in the problem, and you would need to find it. The format can be anything, but in our case it was &lt;code&gt;mlh{ANYTHING_CAN_COME_HERE}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Approaching the last two weeks of the Fellowship, this was mostly of what I was doing, and trust me &lt;strong&gt;IT WAS HARD&lt;/strong&gt;, but my team finished 9th out of 33 teams. :happy:&lt;/p&gt;

&lt;p&gt;Here's one, see if you can decode it,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SIISIISISIISIISIISISIIIISIISIISIISISIISIIISISISISISIISISISISIIISISISISISISISISISIIIIISI&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#some-final-thoughts"&gt;
  &lt;/a&gt;
  Some Final Thoughts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cMF6Y9GF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4us6pov638mfstqbhgi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cMF6Y9GF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4us6pov638mfstqbhgi.jpeg" alt="Final Thoughts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So before we conclude, there are some thoughts I want to share,&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imposter-syndrome"&gt;
  &lt;/a&gt;
  Imposter Syndrome
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BrY3a8ME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/7fWLhYvT5bl3Pwu1Xy/200w.webp%3Fcid%3Decf05e47ixo9uxvfrg1n7f2k8fqa2u99dre9ge5xepdd8akd%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BrY3a8ME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/7fWLhYvT5bl3Pwu1Xy/200w.webp%3Fcid%3Decf05e47ixo9uxvfrg1n7f2k8fqa2u99dre9ge5xepdd8akd%26rid%3D200w.webp%26ct%3Dg" alt="Among Us - Impostor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This may sound &lt;strong&gt;shocking&lt;/strong&gt;, but I honestly had &lt;strong&gt;NO&lt;/strong&gt; expectations of getting selected into MLH. I saw the work that everyone was doing in MLH, and I thought,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I'm no way that good at those kind of things"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But I applied anyway because I didn't want to not submit an application regardless of the chances I had.&lt;/p&gt;

&lt;p&gt;In fact, I had more hopes of getting accepted at other places rather than MLH, but I got rejected over those, and accepted here.&lt;/p&gt;

&lt;p&gt;And as a shock, I was completely taken by surprise when I did get accpted through an email.&lt;/p&gt;

&lt;p&gt;And that ended up causing a bit of a Imposter Syndrome panick in me. In a few days and after a few standups, I found out each of my podmates were suffering from Imposter Syndrome as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EWXBWGgB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/L54PaFkkxjLDkP24Ix/200w.webp%3Fcid%3Decf05e4756xmc2do012mw7h4dgmb0nmthjj0ufddvstvo5gu%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EWXBWGgB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/L54PaFkkxjLDkP24Ix/200w.webp%3Fcid%3Decf05e4756xmc2do012mw7h4dgmb0nmthjj0ufddvstvo5gu%26rid%3D200w.webp%26ct%3Dg" alt="Puzzle Pieces"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So here's the deal and breakdown on how to "accept" it - there is no real way to remove it, but rather how we react or think about it that makes all the difference between being confident and eager to learn anything and everything, and the opposite end which is being very cautious of learning and trying out new things. Here are a few things to break that mindset,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No one knows everything. They just don't. Through the Fellowship, I found friends who would talk about Machine/Deep Learning, while some of my friends would take about Digital Painting and Animation. Some talked about writing and music, some talked about philosophy. What one friend of mine knows, the other just doesn't, and vis a vis.&lt;/p&gt;

&lt;p&gt;The point is to be comfortable with what you know, and enjoy the learning and growing phase of that&lt;/p&gt;

&lt;p&gt;Don't worry about finding it time taking to learn new things. Again, the point is to give yourself a pace that works for you, it doesn't have to be necessarily on par with others&lt;/p&gt;

&lt;p&gt;If you don't know, you can always ask! If you don't feel comfortable talking about something to someone, there is always someone in the Fellowship that can help you with your worries&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mRqebWXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/RXFT6t7ALfDxK/200w.webp%3Fcid%3Decf05e47ojhj56nnn4osc4u9o6e9n1hbw8m321a1j9co4p7q%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mRqebWXL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/RXFT6t7ALfDxK/200w.webp%3Fcid%3Decf05e47ojhj56nnn4osc4u9o6e9n1hbw8m321a1j9co4p7q%26rid%3D200w.webp%26ct%3Dg" alt="Cheetah Slowed Down"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everything takes its proper time. Some things take hours, some days, some weeks. Do not be too hard on yourself to adapt to everything very rapidly. At one point doing the CTFs, I found myself angry at my own self because I was not able to quickly solve problems as much as my team mates, so I asked my lead Gabriel, and this is how the conversation went,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Me:&lt;/p&gt;

&lt;p&gt;I'll be honest&lt;/p&gt;

&lt;p&gt;I'm scared of competitions&lt;/p&gt;

&lt;p&gt;Because I have to keep reminding myself to enjoy and learn from the process and not worry about the scoreboard&lt;/p&gt;

&lt;p&gt;For some reason, it makes me think again and again if I'm not able to push with progress on something&lt;/p&gt;

&lt;p&gt;So I've never really learned to solve problems I think the way that they should be&lt;/p&gt;

&lt;p&gt;Have you ever been in something similar?&lt;/p&gt;



&lt;p&gt;Gabriel:&lt;/p&gt;

&lt;p&gt;All the time&lt;br&gt;
  One thing that helps is doing different things&lt;/p&gt;

&lt;p&gt;Like parkour shows me a lot about these things you know&lt;/p&gt;

&lt;p&gt;There's always a challenge that you'll do (either because you have better balance or you jump higher) that the other person won't. But then&lt;br&gt;
  5mins later you'll face a challenge that the other person (because they're not as tall as you, and that becomes an advantage in that particular&lt;br&gt;
  challenge) will be able to do&lt;/p&gt;

&lt;p&gt;Another thing that could be happening is that you're focusing on the solving part of the "solving problems"&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solving problems is never about the solution itself, but rather how did you get there? Would you be able to solve similar situations using the same&lt;/strong&gt;&lt;br&gt;
  &lt;strong&gt;techniques? Why? Why not?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Focus on the learning&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I would say the same, to focus on how to get to your goals, rather than what the goal looks like currently for you, and you might learn a lot more than you initially expected.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qcz6wgbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/N8wR1WZobKXaE/200w.webp%3Fcid%3Decf05e477txxzapxad4cq16v8ogqyznmjq4pmr555zvlvr4m%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qcz6wgbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media3.giphy.com/media/N8wR1WZobKXaE/200w.webp%3Fcid%3Decf05e477txxzapxad4cq16v8ogqyznmjq4pmr555zvlvr4m%26rid%3D200w.webp%26ct%3Dg" alt="This Is Okay"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trust yourself and the process - &lt;strong&gt;&lt;em&gt;everything&lt;/em&gt;&lt;/strong&gt; works out eventually&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#open-source-misconceptions"&gt;
  &lt;/a&gt;
  Open Source Misconceptions
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpUE1_5W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/3og0IF7LxXgYt4X9Bu/200.webp%3Fcid%3Decf05e47jr4tatvv86jnvozmntek1h807hnazp8idmn47ftq%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpUE1_5W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/3og0IF7LxXgYt4X9Bu/200.webp%3Fcid%3Decf05e47jr4tatvv86jnvozmntek1h807hnazp8idmn47ftq%26rid%3D200.webp%26ct%3Dg" alt="Not Sure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before I end, there are a few Open Source Misonceptions I would like to say,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You DO NOT have to be super technical to get started in Open Source. Contributions can mean anything from writing tutorials about that Open Source Technology, the documentation, helping with the release engineering, providing advice about new features and giving user feedback, staying in the community and getting to know other developers&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LLd_MJnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/MM0Jrc8BHKx3y/200w.webp%3Fcid%3Decf05e47sto8n6hbrclelsjtu6kn5bhy881r5jj2p7jgsncm%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LLd_MJnd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/MM0Jrc8BHKx3y/200w.webp%3Fcid%3Decf05e47sto8n6hbrclelsjtu6kn5bhy881r5jj2p7jgsncm%26rid%3D200w.webp%26ct%3Dg" alt="Hackerman"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get to talk to the maintainers if you really wish to spend considerable time on the project. They will really help you speed up the process to start contributing to the project, and would be more than happy to help you in anything you come across. No one knows the project as best as them.&lt;/p&gt;

&lt;p&gt;Think about it like this, Open Source projects are only as popular as the number of users using them. If tomorrow suddenly, less and less users started to adopt and learn React, it wil start to become legacy codebase, with few improvements, community participations, and code contributions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;FOSS projects only live as long as the users using them and the maintainers maintaining them&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VEfKVC4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/mNwhyN3JyuMykpxaTA/200.webp%3Fcid%3Decf05e47ohhxrxaty6vxefawuqmltdjnjo6at5id2yjs4vm1%26rid%3D200.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VEfKVC4J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/mNwhyN3JyuMykpxaTA/200.webp%3Fcid%3Decf05e47ohhxrxaty6vxefawuqmltdjnjo6at5id2yjs4vm1%26rid%3D200.webp%26ct%3Dg" alt="Talk!"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being honest, Open Source takes time. I realized I did not start seriously contributing to Open Source until I found people who were contributing to Open Source as well. This made me realize to find communities and "&lt;em&gt;developer spaces&lt;/em&gt;" that encourage and work within this space. So if you're someone who's just starting out, I would &lt;strong&gt;heavily&lt;/strong&gt; recommend getting together with friends or finding a community near you, where you work or study, and get to gether to work with them. Working together with someone gives you some great benefits,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You have someone to rubber duck to. If you go out and find people who you can talk to about your FOSS project, you'll rapidly realize how hard and time consuming it can be to have someone understand everything you're saying in one go, much less understanding how they can help you.&lt;/li&gt;
&lt;li&gt;Working with someone on the project can keep you on track with the actual intended goal, and helps to realize again and again where the direction of the project should go&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can't know everything about everything, and even if you do, you can't always make it right. &lt;strong&gt;&lt;em&gt;Software&lt;/em&gt;&lt;/strong&gt; is extremely tricky, and you'll end up writing code in one month, which you'll describe in the next month as,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"&lt;em&gt;This is messy, unorganized, and could have been way better&lt;/em&gt;"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Followed by,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Who wrote this code?!"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And you'll realize, it was &lt;strong&gt;you all along&lt;/strong&gt;. If only you had an extra pair of eyes to helpy you catch that bug/issues/feature/feedback sometime before, that would've been great ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_pywiIul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/VrSWLFiMAnD7esQjXy/200w.webp%3Fcid%3Decf05e47oo5h4rlmuo3eo2a1qdbvdvlk7umqhzgtcydl7nr2%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_pywiIul--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/VrSWLFiMAnD7esQjXy/200w.webp%3Fcid%3Decf05e47oo5h4rlmuo3eo2a1qdbvdvlk7umqhzgtcydl7nr2%26rid%3D200w.webp%26ct%3Dg" alt="Time"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Not everyone is the same skill level, and not everyone is able to give you consistent results as always, and that is &lt;strong&gt;OKAY&lt;/strong&gt;! Please do not alienate people or spread the culture of "&lt;em&gt;I'm better than you&lt;/em&gt;". If you feel that is such a case in the FOSS project you're working on, it might end up harming the work culture in the team and give rise to bad, unhelpful, not productive ideas and workflows and isn't helpful to anyone&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USXjBt7e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/eXTue7sCt6ZvG/200w.webp%3Fcid%3Decf05e47mwlq1tbb69bxc88mmvfp3zhlyccqnwne0fnrm938%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USXjBt7e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media4.giphy.com/media/eXTue7sCt6ZvG/200w.webp%3Fcid%3Decf05e47mwlq1tbb69bxc88mmvfp3zhlyccqnwne0fnrm938%26rid%3D200w.webp%26ct%3Dg" alt="Team work"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always be respectful to anyone maintaining a project out there. Working this Summer on a project from scratch made me realize how many problems and ideas each developer has to consider before they write or contribute anything. Always be appreciative of any and all efforts, and be sure to motivate them as much as you can to contribute more!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of this leading to my next opinions on ...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#developer-relations-devrel-developer-advocacy"&gt;
  &lt;/a&gt;
  Developer Relations, DevRel, Developer Advocacy
&lt;/h3&gt;

&lt;p&gt;If you're into Open Source and Community Building, you should look into DevRel and Developer Advocacy Roles. Period.&lt;/p&gt;

&lt;p&gt;I think others have better a much better job than me to explain DevRel.&lt;/p&gt;

&lt;p&gt;Here is &lt;a href="https://www.youtube.com/channel/UC5mnBodB73bR88fLXHSfzYA"&gt;Eddie Jaoude&lt;/a&gt; on &lt;a href="https://www.youtube.com/watch?v=iUZerHctTB8&amp;amp;t=1993s"&gt;How to become a DevRel? Tips + stories from the Flyless community&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-did-i-feel-working-on-the-project"&gt;
  &lt;/a&gt;
  How did I feel working on the project?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jChgOwbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/8acGIeFnqLA7S/giphy.webp%3Fcid%3Decf05e47gun8qike9jk3iz7dhineitx7vk20tkvvnczqnoti%26rid%3Dgiphy.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jChgOwbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media0.giphy.com/media/8acGIeFnqLA7S/giphy.webp%3Fcid%3Decf05e47gun8qike9jk3iz7dhineitx7vk20tkvvnczqnoti%26rid%3Dgiphy.webp%26ct%3Dg" alt="Elmo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Coming into the project I was assigned to, I was kind of scared because Facebook is a gigantic company which made me feel I should deliver a lot of results. Over time, these fears stopped because I was given room to find my own pace and ask questions. I was able to share what blocked me, discuss the direction of the project, and share new ideas. I felt closely involved in the project and invested in how it would work out.&lt;/p&gt;

&lt;p&gt;I am eager to see how the project works out down the road, and how I can still help maintain it and move it forward. After spending a lot of time on a project like this, you really want to see it succeed. Just this week, someone not from Mapillary, not from Facebook, wanted to contribute to the project. It made me extremely happy to see this, as well as seeing new traffic coming into the project repository. It definitely feels like I've made something very valuable for others!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-i-think-i-made-meaningful-contributions-to-the-project"&gt;
  &lt;/a&gt;
  Do I think I made meaningful contributions to the project?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JUNJNApD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-HKWlhXMAYeq4J%3Fformat%3Djpg%26name%3Dmedium" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JUNJNApD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E-HKWlhXMAYeq4J%3Fformat%3Djpg%26name%3Dmedium" alt="Contributing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Because it was a completely new domain, I learned about GeoSpatial data and GeoInformatics, as well as new Python libraries and processes like Structure From Motion (Open SFM). I improved on my software engineering ideas and my thinking about how to design an SDK. I also became accustomed to working remotely professionally. Finally, I met some fantastic people on Mapillary's team and learned a lot from them about their work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-else-can-i-find-mlh"&gt;
  &lt;/a&gt;
  Where else can I find MLH?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--itDTP9z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://news.mlh.io/wp-content/uploads/2021/06/img-1200x520.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--itDTP9z5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://news.mlh.io/wp-content/uploads/2021/06/img-1200x520.png" alt="Major League Hacking"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out links to other MLH socials,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mlh.io/"&gt;MLH - Webpage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/school/mlh-fellowship/mycompany/"&gt;MLH - LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.twitch.tv/mlh"&gt;MLH - Twitch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/MajorLeagueHacking"&gt;MLH - Facebook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YzPL0q4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/lbcLMX9B6sTsGjUmS3/200w.webp%3Fcid%3Decf05e47yldbjjhji0h3s9rm2tfj59dxd1dgt9t5re1vctf3%26rid%3D200w.webp%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YzPL0q4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://media1.giphy.com/media/lbcLMX9B6sTsGjUmS3/200w.webp%3Fcid%3Decf05e47yldbjjhji0h3s9rm2tfj59dxd1dgt9t5re1vctf3%26rid%3D200w.webp%26ct%3Dg" alt="Connect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="//mailto:saifulislam84210@gmail.com"&gt;Email&lt;/a&gt; - &lt;a href="mailto:saifulislam84210@gmail.com"&gt;saifulislam84210@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.facebook.com/SaifUlIslam9820/"&gt;Facebook&lt;/a&gt; - Send me a friend request!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/SaifUlI25919743"&gt;Twitter&lt;/a&gt; - I don't tweet much!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rubix982"&gt;GitHub&lt;/a&gt; - This counts as a social, right?&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/in/saif-ul-islam/"&gt;LinkedIn&lt;/a&gt; - Connect with me!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.instagram.com/rubix982/"&gt;Instagram&lt;/a&gt; - I don't use it, jut made an account once&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>mlhgrad</category>
      <category>opensource</category>
      <category>python</category>
      <category>community</category>
    </item>
    <item>
      <title>Building a Documentation Workflow in Rails</title>
      <author>Honeybadger Staff</author>
      <pubDate>Tue, 31 Aug 2021 14:48:39 +0000</pubDate>
      <link>https://dev.to/honeybadger/building-a-documentation-workflow-in-rails-dl1</link>
      <guid>https://dev.to/honeybadger/building-a-documentation-workflow-in-rails-dl1</guid>
      <description>&lt;p&gt;This article was originally written by &lt;a href="https://www.honeybadger.io/blog/documentation-worklow-rails/#authorDetails"&gt;Kate Bartolo&lt;/a&gt; on the &lt;a href="https://www.honeybadger.io/blog/documentation-worklow-rails/"&gt;Honeybadger Developer Blog&lt;/a&gt;.*  &lt;/p&gt;

&lt;p&gt;Modern documentation workflows are becoming increasingly intertwined with the software development workflow. You might track documentation issues in GitHub or Jira, or you might write docs in code comments or Markdown files. The developers on your team might be working directly with technical writers, or they might be writing docs independently. Docs are often stored in code repositories, tested for quality using linters, and published continually on static sites. Technical writers have recently coined the term &lt;em&gt;docs-like-code&lt;/em&gt; or &lt;a href="https://www.writethedocs.org/guide/docs-as-code/"&gt;&lt;em&gt;docs-as-code&lt;/em&gt;&lt;/a&gt; to describe this type of workflow.&lt;/p&gt;

&lt;p&gt;Docs-as-code is defined by automation. It involves creating, updating, reviewing, and approving documentation using familiar development tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Issue trackers&lt;/li&gt;
&lt;li&gt;Version control tools&lt;/li&gt;
&lt;li&gt;Plain-text files&lt;/li&gt;
&lt;li&gt;Text and code editors&lt;/li&gt;
&lt;li&gt;Static site generators&lt;/li&gt;
&lt;li&gt;Continuous publication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docs can be stored in the same repositories as the related code, making it easier to ensure docs are updated alongside the code itself.&lt;/p&gt;

&lt;p&gt;This workflow is flexible and adaptable to many combinations of tools and methodologies. For illustration purposes, this tutorial develops a docs-as-code workflow for a Rails app using Ruby-based tools, such as Jekyll. The docs are stored alongside the app in GitHub and managed using GitHub issues, labels, projects, and pull request reviews. This example illustrates docs-as-code principles that can be adapted to other tools and integrated into other workflows.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;This guide is intended for developers. You should be familiar with the following tools: Git, code editors, and Markdown. This article describes how to use these tools to create a documentation workflow.&lt;/p&gt;

&lt;p&gt;Accompanying this article are a &lt;a href="https://sharp-williams-b46857.netlify.app/"&gt;live sample site&lt;/a&gt;, hosted by Netlify, and a &lt;a href="https://github.com/kabartolo/documentation-workflow-rails"&gt;sample GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To follow along with this article, create a simple blog application in Rails with a few commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;rails
rails new blog
&lt;span class="nb"&gt;cd &lt;/span&gt;blog
rails generate scaffold Post title:string body:text
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In &lt;code&gt;config/routes.rb&lt;/code&gt;, create an index page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Rails.application.routes.draw do
  resources :posts

  root 'posts#index'
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, run a database migration and start the Rails server to check that everything works:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;rails db:migrate
rails s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigate to &lt;code&gt;localhost:3000&lt;/code&gt;. You should see an empty list of posts and a link to create a new post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-content-strategy"&gt;
  &lt;/a&gt;
  Creating a Content Strategy
&lt;/h2&gt;

&lt;p&gt;Planning is the first step in developing a documentation workflow, just as it is with software. The plan for your docs should include a content strategy, which determines which topics need to be documented and how.&lt;/p&gt;

&lt;p&gt;To start developing a content strategy, answer the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Who is your intended audience?

&lt;ul&gt;
&lt;li&gt;Are they developers, less technical users, or both?&lt;/li&gt;
&lt;li&gt;Are they allowed to contribute to your code or docs?&lt;/li&gt;
&lt;li&gt;Are they internal or external to your company or both?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;What are users trying to accomplish?&lt;/li&gt;
&lt;li&gt;What problems are users trying to solve by consulting your docs?&lt;/li&gt;
&lt;li&gt;How will users consult your docs?

&lt;ul&gt;
&lt;li&gt;Would a simple readme be adequate?&lt;/li&gt;
&lt;li&gt;Will users need special permission to access the documentation?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, imagine you have a Rails app with an accompanying API. For customers, you might want to develop a public user guide for all of your UI features. A user story might be, "As a user, I want to create a blog post."&lt;/p&gt;

&lt;p&gt;You could also create reference documentation for developers. A developer story might be, "As a developer, I want to retrieve all the blog posts of a specific user."&lt;/p&gt;

&lt;p&gt;You can use a static site generator, such as Jekyll or WordPress, to present the user docs in a branded, user-friendly environment. For your internal developers, a simple YARD-generated site might be sufficient. This tutorial will show you examples of both.&lt;/p&gt;

&lt;p&gt;Documentation can also be integrated into your current workflow. For example, if your team writes code in 2-week sprints, consider managing your documentation on the same schedule.&lt;/p&gt;

&lt;p&gt;You can also track documentation issues alongside code issues. Create an issue for every docs feature or bug. A feature would be a new article or section of content, and a bug would be any error, omission, typo, or other issue requiring a fix.&lt;/p&gt;

&lt;p&gt;Gathering feedback is an important part of a content strategy. Consider adding a way for users to contact you with feedback on every doc page or contribute to the docs through GitHub. A &lt;strong&gt;Feedback&lt;/strong&gt; button is usually just a form that goes to a company email address; the person(s) assigned to this task can then take each feedback item and turn it into a Jira or GitHub issue for review and implementation.&lt;/p&gt;

&lt;p&gt;To ensure a consistent style and the use of precise terminology, create a company style guide or follow an existing one. Here are some examples of documentation style guides that would work for most software projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/style"&gt;Google Developer Documentation Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/development/documentation/styleguide/"&gt;GitLab Documentation Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/style-guide/welcome/"&gt;Microsoft Writing Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is some further reading on content strategy to help get you started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://idratherbewriting.com/learnapidoc/docapis_dx_content_strategy.html"&gt;DX Content Strategy with Developer Portals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://increment.com/documentation/primer-on-documentation-content-strategy/"&gt;Primer on Documentation Content Strategy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#building-a-docs-site"&gt;
  &lt;/a&gt;
  Building a Docs Site
&lt;/h2&gt;

&lt;p&gt;From your content strategy, you can determine how your docs will be presented to the intended audience. Determining &lt;em&gt;who&lt;/em&gt; will write your docs will also help inform this decision. For example, if developers and contributors will be writing documentation in code comments, then RDoc or YARD can be used to create a simple static docs site from these comments. If user documentation will be written in Markdown files, a static site generator, such as Jekyll, would be the better choice for publishing your docs. Of course, you can also create a site from scratch that works for your team and your project.&lt;/p&gt;

&lt;p&gt;This article uses Jekyll and YARD to illustrate both types of documentation sites for a Rails app. Note that Jekyll is Ruby-based and integrates well into a Rails app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jekyll"&gt;
  &lt;/a&gt;
  Jekyll
&lt;/h3&gt;

&lt;p&gt;The purpose of Jekyll is to transform plain text into a static website. Jekyll creates a &lt;code&gt;_site&lt;/code&gt; folder containing static site files that can be published by any hosting service. Pushing these files to GitHub means that you can use continuous publication tools, such as Netlify, to publish your docs.&lt;/p&gt;

&lt;p&gt;The simplest workflow with Jekyll involves writing docs in Markdown files and pushing them to GitHub. If you use Netlify, it automatically deploys the site when you merge these changes to the repository. This process is described in more detail in the next section.&lt;/p&gt;

&lt;p&gt;To create a Jekyll site, install Jekyll and Bundler from the root directory of your Rails app (e.g., &lt;code&gt;/blog&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;jekyll bundler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Creating a Jekyll site and running it from a local development server requires only three commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;jekyll new docs
&lt;span class="nb"&gt;cd &lt;/span&gt;docs
bundle &lt;span class="nb"&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a &lt;code&gt;/docs&lt;/code&gt; directory containing a minimal Jekyll site (the default is a blog theme called Minima). You can use this as the base for your custom Jekyll docs site. Alternatively, you can install a docs theme, such as &lt;a href="https://pmarsceill.github.io/just-the-docs/"&gt;&lt;code&gt;just-the-docs&lt;/code&gt;&lt;/a&gt;, which comes with sidebar navigation and site search functionality.&lt;/p&gt;

&lt;p&gt;This tutorial will use the &lt;code&gt;just-the-docs&lt;/code&gt; theme. To install it, run the following from the &lt;code&gt;/docs&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bundle add just-the-docs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove the &lt;code&gt;minima&lt;/code&gt; theme from the Gemfile since it is the default theme you will no longer be using. You can also delete the &lt;code&gt;posts&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Next, add this theme to Jekyll's &lt;code&gt;_config.yml&lt;/code&gt; file. You can also customize your site's title and description while you're here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Docs Site&lt;/span&gt;
&lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;your-email@example.com&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;&amp;gt;-&lt;/span&gt;
  &lt;span class="s"&gt;A Jekyll docs site for a Rails app.&lt;/span&gt;
&lt;span class="na"&gt;baseurl&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;# the subpath of your site, e.g. /blog&lt;/span&gt;
&lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;# the base hostname &amp;amp; protocol for your site, e.g. http://example.com&lt;/span&gt;
&lt;span class="na"&gt;twitter_username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
&lt;span class="na"&gt;github_username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

&lt;span class="c1"&gt;# Build settings&lt;/span&gt;
&lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;just-the-docs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the server again, and you'll see a mostly empty docs site:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tocu6TQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/empty-docs-site.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tocu6TQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/empty-docs-site.png" alt="Empty docs site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check your Jekyll theme's documentation to see which directory should hold your Markdown files. For &lt;code&gt;just-the-docs&lt;/code&gt;, Markdown files can live in the root directory, which corresponds to the base path of your site. Create a new Markdown file in the root directory to see how it works:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;default&lt;/span&gt;
&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Sample&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Doc"&lt;/span&gt;
&lt;span class="na"&gt;nav_order&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;

&lt;span class="gh"&gt;# Models&lt;/span&gt;

{: .no_toc }

&lt;span class="gu"&gt;## Table of contents&lt;/span&gt;

{: .no_toc .text-delta }
&lt;span class="p"&gt;
1.&lt;/span&gt; TOC
   {:toc}
&lt;span class="p"&gt;
--------
&lt;/span&gt;
&lt;span class="gu"&gt;## Markdown header&lt;/span&gt;

Write &lt;span class="gs"&gt;**Markdown**&lt;/span&gt; here!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start the server again to see your new sample doc:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVuKrcLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/sample-doc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVuKrcLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/sample-doc.png" alt="Sample doc"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You now have a basic Jekyll site in a &lt;code&gt;/docs&lt;/code&gt; folder in your Rails app directory! See the &lt;a href="https://jekyllrb.com/docs/themes/"&gt;Jekyll docs&lt;/a&gt; for help with customizing the Jekyll theme or writing your own.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yard"&gt;
  &lt;/a&gt;
  YARD
&lt;/h3&gt;

&lt;p&gt;Documentation generators, such as Rdoc and YARD, generate developer documentation from code comments. You can create a standalone docs site using YARD, which accepts Rdoc and other syntax. In this example, we'll add YARD documentation to our existing Jekyll site. Jekyll can publish the static files generated by YARD at a path such as &lt;code&gt;/dev&lt;/code&gt;. You could also use YARD on its own to create your documentation site.&lt;/p&gt;

&lt;p&gt;When Rails generates an app, it also generates a few basic code comments:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# app/controllers/posts_controller.rb

class PostsController &amp;lt; ApplicationController
  before_action :set_post, only: %i[ show edit update destroy ]

  # GET /posts or /posts.json
  def index
    @posts = Post.all
  end

  # GET /posts/1 or /posts/1.json
  def show
  end

  # GET /posts/new
  def new
    @post = Post.new
  end

  # GET /posts/1/edit
  def edit
  end

  # code omitted

end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see how YARD uses these comments to create a docs site, run the &lt;code&gt;yard doc&lt;/code&gt; or &lt;code&gt;yardoc&lt;/code&gt; command from the root directory of your Rails app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yardoc &lt;span class="nt"&gt;--output-dir&lt;/span&gt; docs/dev app/&lt;span class="k"&gt;**&lt;/span&gt;/&lt;span class="k"&gt;*&lt;/span&gt;.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If the &lt;code&gt;yardoc&lt;/code&gt; command doesn't work, install the YARD gem with &lt;code&gt;bundle install yard&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;YARD will place its output files in the &lt;code&gt;output-dir&lt;/code&gt;, which is set to the Jekyll directory &lt;code&gt;/docs/dev&lt;/code&gt; in the command above. Jekyll can now publish YARD's site files with a base path of &lt;code&gt;/dev&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;More complex documentation can be created using RDoc or other syntax (see the &lt;a href="https://yardoc.org/"&gt;YARD documentation&lt;/a&gt;), but we'll stick with the existing documentation here.&lt;/p&gt;

&lt;p&gt;Start the Jekyll server and navigate to &lt;code&gt;localhost:4000/dev&lt;/code&gt; to see your YARD-generated documentation:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BGmuraRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/yard-site.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BGmuraRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/yard-site.png" alt="YARD-generated site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point, there is no way to navigate to these developer docs from the main Jekyll site. To add a link from the Jekyll site to the developer docs, add the following to &lt;code&gt;docs/_config.yml&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Aux links for the upper right navigation&lt;/span&gt;
&lt;span class="na"&gt;aux_links&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Developer&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Documentation"&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/dev"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This concludes the discussion of Jekyll and YARD. Now that your docs site is set up, developers and writers can simply write content in Markdown files (or code comments) and push them to GitHub. The next section explains how to deploy these docs with continuous publication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continuous-publication-and-deployment-with-netlify"&gt;
  &lt;/a&gt;
  Continuous Publication and Deployment with Netlify
&lt;/h3&gt;

&lt;p&gt;Continuous publication is convenient for docs sites because the live site can be updated automatically when changes to docs are approved and merged into the repository. This tutorial uses Netlify for this purpose, but other tools are available, such as &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, &lt;a href="https://docs.gitlab.com/ee/user/project/pages/"&gt;GitLab Pages&lt;/a&gt;, and &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The site we've been building so far is hosted by Netlify: &lt;a href="https://sharp-williams-b46857.netlify.app"&gt;Docs Site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To set up Netlify for your docs site, start by signing up for a Netlify account and connecting it to the GitHub repository containing your Rails app.&lt;/p&gt;

&lt;p&gt;Use the following settings:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;Repository
github.com/your-username/your-rails-repo
Base directory
docs
Build command
jekyll build
Publish directory
docs/&lt;span class="se"&gt;\_&lt;/span&gt;site
Builds
Active
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If some settings are not available when creating the Netlify site, click &lt;strong&gt;Deploy&lt;/strong&gt; for now. You can then cancel it and return to the &lt;strong&gt;Deploy settings&lt;/strong&gt;. Set the base directory to &lt;code&gt;docs&lt;/code&gt; to ensure that Netlify deploys your Jekyll docs site rather than your Rails app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When Netlify is finished deploying your Jekyll site, navigate to the live site to ensure that everything looks right.&lt;/p&gt;

&lt;p&gt;One benefit of using Netlify is that it provides a live preview link directly from each pull request:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tgEqRKcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/netlify-preview-link.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tgEqRKcT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/netlify-preview-link.png" alt="Netlify preview link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then check that your changes will be published correctly before merging the pull request and triggering the re-deploy of your site. The next section covers this workflow in more detail.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-an-editorial-workflow-in-github"&gt;
  &lt;/a&gt;
  Setting Up an Editorial Workflow in GitHub
&lt;/h2&gt;

&lt;p&gt;With a strategy for writing documentation and a site to publish it on, you're set to start writing docs and integrating them into your software workflow.&lt;/p&gt;

&lt;p&gt;A typical editorial workflow involves drafting a document, reviewing the document, and then publishing it. Writers should perform their own reviews of their work, but editors, managers, and stakeholders are often part of the final review process. Because this is similar to the software development process, you can use software development tools to make the process more efficient.&lt;/p&gt;

&lt;p&gt;Here is an example editorial workflow for a team using GitHub:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;[Writer] Create or update a file according to a documentation feature request or bug (as noted in a GitHub issue).&lt;/li&gt;
&lt;li&gt;[Writer] Push the change to a GitHub branch.&lt;/li&gt;
&lt;li&gt;[Writer] Open a pull request.&lt;/li&gt;
&lt;li&gt;[Reviewer] Review the changes.&lt;/li&gt;
&lt;li&gt;[Reviewer/Maintainer] Merge the changes to the repository, which should trigger a new build of the docs site.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;GitHub automatically manages the change history of your content, which is also key in a docs-as-code workflow. You can see what was changed, who changed it, when it was changed, as well as why or how it was changed (if mentioned in the comments, discussion, or a related issue). This is stored in one place for all members of your team to see at any given time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#issues-and-labels"&gt;
  &lt;/a&gt;
  Issues and Labels
&lt;/h3&gt;

&lt;p&gt;You can use the same issue templates for new documentation that you would use for code. This allows community members to request documentation that might be missing or to notify the team of errors. Managers can also use issues to assign developers or writers to documentation tasks.&lt;/p&gt;

&lt;p&gt;To distinguish docs issues from code issues, you can use labels. Add a &lt;code&gt;documentation&lt;/code&gt; label to indicate that it's related to docs. You can also create labels for specific docs issues, such as &lt;code&gt;docs::feature&lt;/code&gt; or &lt;code&gt;docs::fix&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You might add instructions to your issue templates regarding the issue title or appropriate labels, just as you would for code-related issues.&lt;/p&gt;

&lt;p&gt;Workflow labels, such as &lt;code&gt;docs::in progress&lt;/code&gt; and &lt;code&gt;docs::in review&lt;/code&gt;, are also useful. They reflect what is currently being worked on.&lt;/p&gt;

&lt;p&gt;When defining your documentation process, be sure to specify who is responsible for changing these labels and when. For example, the person writing the draft would change the label to &lt;code&gt;docs::in progress&lt;/code&gt; when they begin writing the draft. When the reviewer receives the draft, the reviewer should change the issue label to &lt;code&gt;docs::in review&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managing-the-workflow"&gt;
  &lt;/a&gt;
  Managing the Workflow
&lt;/h3&gt;

&lt;p&gt;For small teams and projects, using GitHub Projects is a convenient way to manage your editorial content directly from GitHub. They are similar to project management boards, such as in Trello, but the columns can be linked directly to issues and pull requests.&lt;/p&gt;

&lt;p&gt;For example, use the "Automated kanban with reviews" template so that new issues and pull requests are automatically added to the board. When a reviewer begins a review or approves a pull request, the issue card moves to the next column. This lets you keep track of active issues and where they are in the editorial process.&lt;/p&gt;

&lt;p&gt;For larger projects that include more than just docs, use the &lt;a href="https://github.com/philschatz/project-bot"&gt;&lt;code&gt;project-bot&lt;/code&gt; GitHub App&lt;/a&gt; to set up automation rules. For example, adding a specific label or assigning a specific reviewer would trigger automatic card movement. Alternatively, you can integrate documentation management into your larger project management workflow using a tool like Jira.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;See the sample app for a demonstration of the &lt;code&gt;project-bot&lt;/code&gt; app in a GitHub Project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#creating-documentation"&gt;
  &lt;/a&gt;
  Creating Documentation
&lt;/h2&gt;

&lt;p&gt;This section outlines the creation of documentation in more detail, from drafting to publication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#writing-and-revising-docs"&gt;
  &lt;/a&gt;
  Writing and Revising Docs
&lt;/h3&gt;

&lt;p&gt;The first step in your editorial workflow is writing some docs. For tips on writing documentation, see &lt;a href="https://www.writethedocs.org/guide/writing/beginners-guide-to-docs/"&gt;A Beginner's Guide to Writing Documentation&lt;/a&gt; from Write the Docs.&lt;/p&gt;

&lt;p&gt;For example, to create an article about your Rails blog app, create a new Markdown file called &lt;code&gt;blog-posts.md&lt;/code&gt; in your Jekyll &lt;code&gt;docs&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;--------&lt;/span&gt;
layout: default
title: Blog Posts
&lt;span class="gh"&gt;nav_order: 1
--------
&lt;/span&gt;
&lt;span class="gu"&gt;## Creating a Blog Post&lt;/span&gt;

...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you're writing code, you're probably checking the syntax as you write using syntax highlighters and code linters. If you write your docs in a code editor, you can use similar linters that check for spelling errors and grammar problems as you write. There are also linters that check your Markdown formatting.&lt;/p&gt;

&lt;p&gt;For example, VSCode allows you to preview Markdown files directly in the editor, and it has an extension for the Markdownlint linter, which checks for errors in your Markdown syntax.&lt;/p&gt;

&lt;p&gt;There is also a popular prose linter called &lt;a href="https://github.com/errata-ai/vale"&gt;Vale&lt;/a&gt;, which has extensions in VSCode and other editors.&lt;/p&gt;

&lt;p&gt;Another bonus to writing Markdown in your code editor is that you don't need to switch between editors to write docs and code for your project. With your docs stored in the same directory as your Rails app, you can use a split layout to write documentation while viewing the code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#committing-changes"&gt;
  &lt;/a&gt;
  Committing Changes
&lt;/h3&gt;

&lt;p&gt;You've written a new document in VSCode and checked it for spelling mistakes and syntax errors. The next step is to create a new branch and commit the change to Git:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; docs/blog-posts
git add docs/blog_posts.md
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Create doc: Blog Posts"&lt;/span&gt;
git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin docs/blog-posts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Push this commit to the &lt;code&gt;docs/blog-post&lt;/code&gt; branch in the remote GitHub repository.&lt;/p&gt;

&lt;p&gt;Finally, on GitHub, create a pull request between your new branch and the master (or main) branch. This pull request allows your changes to be reviewed and approved like any other code in the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reviewing-and-approving-docs"&gt;
  &lt;/a&gt;
  Reviewing and Approving Docs
&lt;/h3&gt;

&lt;p&gt;Merging documentation changes to a repository can be as dangerous as it is in software development. You're deploying changes to documentation that your customers and users rely on, so you'll want to ensure the review process is rigorous. It's a good idea to have several reviewers involved, including developers, product managers, technical writers, and editors.&lt;/p&gt;

&lt;p&gt;Keep track of the changes everyone makes to the file, and discuss any further revisions that are needed. GitHub and similar tools allow you to view the change history of your files, including what was changed, when the change was made, and who made it.&lt;/p&gt;

&lt;p&gt;You can also add GitHub Actions to automatically check your Markdown files before someone merges them into the code base. For each linter you use in VSCode, add the corresponding GitHub Action if it exists:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/errata-ai/vale-action"&gt;Vale action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/actionshub/markdownlint"&gt;Markdownlint action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These actions will check your Markdown files for various spelling and syntax errors before the changes to your docs go live:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64qRPBN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/linting-checks-github.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64qRPBN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/linting-checks-github.png" alt="Linting checks in GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Details&lt;/strong&gt; to see why a check isn't passing:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cYQ8SeU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/vale-issue-details.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cYQ8SeU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.honeybadger.io/images/blog/posts/documentation-worklow-rails/vale-issue-details.png" alt="Details of Vale issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To add Vale and Markdownlint to your pull request checks, copy the &lt;a href="https://github.com/kabartolo/documentation-workflow-rails/blob/master/.github/workflows/docs.yml"&gt;docs.yml&lt;/a&gt; workflow file from the sample repository.&lt;/p&gt;

&lt;p&gt;For the Vale action to work, you might need to create the &lt;code&gt;.github/styles/vocab.txt&lt;/code&gt; file in your repository. This is a list of words (one per line) that will be ignored by Vale, such as your company name or the names of people on your team.&lt;/p&gt;

&lt;p&gt;If you have a GitHub Pro, Team, or Enterprise account, you can create &lt;a href="https://docs.github.com/en/github/administering-a-repository/managing-a-branch-protection-rule"&gt;branch protection rules&lt;/a&gt;. These rules prevent users from merging changes unless certain requirements are met, such as passing status checks or obtaining approval from at least one team member.&lt;/p&gt;

&lt;p&gt;Remember that Netlify also provides a preview of your site in the list of checks, so the reviewer can check that everything looks good &lt;em&gt;before&lt;/em&gt; merging the changes and re-deploying the site.&lt;/p&gt;

&lt;p&gt;After you've thoroughly reviewed and then merged the changes to your documentation, Netlify will re-deploy your site. Navigate to your live Jekyll site to see the changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You should now have a basic documentation workflow in GitHub for a Rails app or any other project. Managing docs like code can be as simple or complex as it needs to be. For small projects, a bit of automation in GitHub might be all you need. Larger projects might be more closely integrated with other departments and teams and, therefore, with other tools.&lt;/p&gt;

&lt;p&gt;Be sure to look through the sample &lt;a href="https://github.com/kabartolo/documentation-workflow-rails"&gt;GitHub repository&lt;/a&gt; for the Rails app and sample Jekyll site we created in this article. The repo includes sample issues and a pull request, as well as labels. It also has an automated GitHub Project and a sample pull request template for authors, reviewers, and maintainers to follow when adding documentation to the code base.&lt;/p&gt;

&lt;p&gt;For further reading, check out GitLab's &lt;a href="https://docs.gitlab.com/ee/development/documentation/workflow.html"&gt;documentation process&lt;/a&gt;, which could be used as a starting point for developing your own. Their &lt;a href="https://docs.gitlab.com/ee/development/documentation/index.html"&gt;Documentation Guidelines&lt;/a&gt; might also provide inspiration.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>How to Find Quality Products at a Better Price From Sourcing Brokers</title>
      <author>AWs Architektur</author>
      <pubDate>Tue, 31 Aug 2021 14:32:54 +0000</pubDate>
      <link>https://dev.to/awsarchitektur/how-to-find-quality-products-at-a-better-price-from-sourcing-brokers-465p</link>
      <guid>https://dev.to/awsarchitektur/how-to-find-quality-products-at-a-better-price-from-sourcing-brokers-465p</guid>
      <description>&lt;p&gt;If you're in the business of starting and growing companies &lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Buying_agent"&gt;sourcing agent&lt;/a&gt;  out parts and components then you'll want to keep reading. In this article I'll cover a very important aspect of sourcing that goes on behind the scenes. After all, what's the point of sourcing the best materials if you don't get them shipped to you in good time for your manufacturing requirements? It goes something like this... Here's what happens:&lt;/p&gt;

&lt;p&gt;China, India, Mexico, Vietnam, Thailand, Korea, Philippines, and several other nations have become major exporters over the past five years &lt;a href="https://ed.ted.com/on/JSgCiaU9#digdeeper"&gt;https://ed.ted.com/on/JSgCiaU9#digdeeper&lt;/a&gt; . Many of these nations have been using their tremendous buying power to drive up the value of their currencies relative to the dollar of the United States, which has had a negative impact on American manufacturers who have attempted to ship goods into these markets. &lt;/p&gt;

&lt;h2&gt;Find Quality Products&lt;/h2&gt;

&lt;p&gt;This means that more foreign suppliers are shipping products in these countries which require special labeling or packaging requirements in order to ensure their acceptance by the different international clients that these countries have. Because of this worldwide trend, sourcing agents across the globe are becoming extremely important to the product sourcing process.&lt;/p&gt;

&lt;p&gt;A sourcing agent maintains a consistent and routine relationship with these international clients. They provide critical sourcing and quality inspection services, allowing the client to receive high quality products at the most competitive prices available. In this way, these agents help to protect the interests of the manufacturer as well as help to secure orders from international customers. In short, they help to make sure that the manufacturer of a given product doesn't encounter a problem getting the parts or materials it needs in the quantities necessary.&lt;/p&gt;

&lt;h2&gt;Find Chinese suppliers&lt;/h2&gt;

&lt;p&gt;In addition, a sourcing agent can also help a company find Chinese suppliers. In the past, companies had to do all of the sourcing research and sourcing themselves. For many companies, this was extremely time consuming and very difficult. But today, thanks to the Internet, companies can use a variety of tools to sift through the many China sourcing agents available, and in some cases find Chinese suppliers online.&lt;/p&gt;

&lt;p&gt;There is another aspect of sourcing agent that many companies don't think of. They may not know about the value of having a quality inspection done on any shipments that are sent from the United States into China. Quality inspections are becoming more important due to the increased pressures that China has placed on its domestic market. &lt;/p&gt;

&lt;h2&gt;Experiencing Sourcing Agents&lt;/h2&gt;

&lt;p&gt;Many companies are experiencing sourcing agent problems because they have chosen to do business with a company based in China that has little experience in the quality inspection field. The best solution for such a problem would be to find a company or supplier based in the United States that has experience in the quality inspection field and to partner with them on a one-time basis in the future.&lt;/p&gt;

&lt;p&gt;If a sourcing agent is unable to provide a high level of quality control, a company will not be able to ensure its clients that the goods they are sending to China are the highest possible quality. Without this inspection, it is possible for companies to send their raw materials to China, but if the raw materials are substandard, their products may not pass standard international quality controls. &lt;/p&gt;

&lt;p&gt;In the long run, partnering with an experienced sourcing agent who can provide a company with an excellent quality control inspection, as well as a detailed report on the status of each shipment, is essential to companies that are serious about doing business in China.&lt;/p&gt;

&lt;p&gt;Most sourcing agents that work in the United States are extremely experienced in sourcing products from China. Many of these agents are specialized in only one area, such as electronic components or sanitary supervision. It is not uncommon for sourcing agents to specialize in a particular niche, such as medical equipment or pesticides. This means that if a company needs to source medical devices or pesticides from China, it is possible to find specialized agents who know all of the necessary standards and regulations to meet the needs of these businesses.&lt;/p&gt;

&lt;p&gt;In conclusion, sourcing from China presents many opportunities for companies in the United States to serve their clients and provide them with quality products at a lower cost. However, sourcing brokering companies must work with an effective sourcing agent that can provide them with a detailed and accurate assessment of each shipment, along with a detailed report on each specific item of equipment. &lt;/p&gt;

&lt;h2&gt;Final Words&lt;/h2&gt;

&lt;p&gt;It is also important for a sourcing agent to work with its clients on an individual basis, as well as providing personalized services to ensure that all shipments are handled according to each clients' individual specifications. These agencies have the experience and expertise to help companies manage their operations effectively and ensure that the goods sent to China are exactly what their clients need.&lt;/p&gt;

</description>
      <category>sourcingagent</category>
      <category>agent</category>
      <category>sources</category>
      <category>business</category>
    </item>
    <item>
      <title>Taming the Moose: Method modifiers instead of overrides in object-oriented Perl</title>
      <author>Mark Gardner</author>
      <pubDate>Tue, 31 Aug 2021 14:00:00 +0000</pubDate>
      <link>https://dev.to/mjgardner/taming-the-moose-method-modifiers-instead-of-overrides-in-object-oriented-perl-4ag2</link>
      <guid>https://dev.to/mjgardner/taming-the-moose-method-modifiers-instead-of-overrides-in-object-oriented-perl-4ag2</guid>
      <description>&lt;p&gt;Last month &lt;a href="https://phoenixtrap.com/2021/07/13/taming-the-moose-picking-the-best-way-to-subclass-perl-methods/"&gt;I wrote about using Moose’s &lt;code&gt;override&lt;/code&gt; function&lt;/a&gt; to, well, override a superclass’s method. &lt;a href="https://chris.prather.org/"&gt;Chris Prather&lt;/a&gt; on the &lt;a href="https://kiwiirc.com/nextclient/#irc://irc.perl.org/moose"&gt;#moose IRC channel&lt;/a&gt; suggested soon after that the &lt;a href="https://metacpan.org/dist/Moose/view/lib/Moose/Manual/MethodModifiers.pod#Around-modifiers"&gt;&lt;code&gt;around&lt;/code&gt; method modifier&lt;/a&gt; (or its little sisters &lt;a href="https://metacpan.org/dist/Moose/view/lib/Moose/Manual/MethodModifiers.pod#Before-and-after-Modifiers"&gt;&lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt;&lt;/a&gt;) might be a better choice if you’re also calling the original method inside. He noted that “at a minimum &lt;code&gt;override&lt;/code&gt; only works if you’re subclassing, &lt;code&gt;around&lt;/code&gt; will apply to composed methods too.”&lt;/p&gt;

&lt;p&gt;His point was that when you decide to compose &lt;a href="https://metacpan.org/pod/Moose::Manual::Roles"&gt;roles&lt;/a&gt; (also know as &lt;a href="https://en.wikipedia.org/wiki/Trait_(computer_programming)"&gt;traits&lt;/a&gt;) instead of or in addition to more traditional inheritance, &lt;code&gt;override&lt;/code&gt; simply doesn’t work: only a method modifier will do. (And as &lt;a href="https://haarg.org/"&gt;Graham Knop&lt;/a&gt; and &lt;a href="https://github.com/karenetheridge"&gt;Karen Etheridge&lt;/a&gt; later remarked on IRC, &lt;code&gt;override&lt;/code&gt; isn’t even an option if you’re using &lt;a href="https://metacpan.org/pod/Moo"&gt;Moo&lt;/a&gt; as an alternative to Moose.)&lt;/p&gt;

&lt;p&gt;Modifying a role’s method with &lt;code&gt;around&lt;/code&gt; might look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight perl"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env perl&lt;/span&gt;

&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;v5&lt;/span&gt;&lt;span class="mf"&gt;.12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# for strict and say&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;warnings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Local::Role::&lt;/span&gt;&lt;span class="nv"&gt;Hungry&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;Moose::&lt;/span&gt;&lt;span class="nv"&gt;Role&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;requires&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;

&lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="nf"&gt;wants_food&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is hungry!&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Local::&lt;/span&gt;&lt;span class="nv"&gt;GuineaPig&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;Moose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;has&lt;/span&gt; &lt;span class="s"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ro&lt;/span&gt;&lt;span class="p"&gt;');&lt;/span&gt;
&lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Local::Role::Hungry&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;

&lt;span class="nv"&gt;around&lt;/span&gt; &lt;span class="s"&gt;wants_food&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;splice&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; runs to the front of the cage!&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
    &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$orig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Wheek!&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Local::&lt;/span&gt;&lt;span class="nv"&gt;Dog&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;Moose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;has&lt;/span&gt; &lt;span class="s"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;is&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ro&lt;/span&gt;&lt;span class="p"&gt;');&lt;/span&gt;
&lt;span class="nv"&gt;with&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Local::Role::Hungry&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;

&lt;span class="nv"&gt;around&lt;/span&gt; &lt;span class="s"&gt;wants_food&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$orig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;splice&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; runs to the kitchen!&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
    &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$orig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Woof!&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nv"&gt;before&lt;/span&gt; &lt;span class="s"&gt;wants_food&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is jumping!&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;package&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Local::&lt;/span&gt;&lt;span class="nv"&gt;Dog&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Seamus&lt;/span&gt;&lt;span class="p"&gt;');&lt;/span&gt;
&lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;@pigs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;map&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nn"&gt;Local::&lt;/span&gt;&lt;span class="nv"&gt;GuineaPig&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="vg"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="sx"&gt;qw&amp;lt;Cocoa Ginger Pepper&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$animal&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$dog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@pigs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$animal&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;wants_food&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running the above yields:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Seamus runs to the kitchen!
Seamus is hungry!
Woof!
Cocoa runs to the front of the cage!
Cocoa is hungry!
Wheek!
Ginger runs to the front of the cage!
Ginger is hungry!
Wheek!
Pepper runs to the front of the cage!
Pepper is hungry!
Wheek!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It’s a little more involved than overriding a &lt;a href="https://perldoc.perl.org/functions/sub"&gt;&lt;code&gt;sub&lt;/code&gt;&lt;/a&gt;, since method modifiers are passed both the consumed role’s original method (&lt;code&gt;$orig&lt;/code&gt; above) and the instance (&lt;code&gt;$self&lt;/code&gt; above) as parameters. It has the same effect, though, and you can call the original method by saying &lt;code&gt;$self-&amp;gt;$orig(parameters)&lt;/code&gt;. That’s why I used the &lt;a href="https://perldoc.perl.org/functions/splice"&gt;&lt;code&gt;splice&lt;/code&gt; function&lt;/a&gt; so I could pass any remaining parameters as the original &lt;a href="https://perldoc.perl.org/variables/@_"&gt;&lt;code&gt;@_&lt;/code&gt; array&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If all you want to do is have something happen either before or after the original method, just use &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;after&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight perl"&gt;&lt;code&gt;&lt;span class="nv"&gt;before&lt;/span&gt; &lt;span class="s"&gt;wants_food&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is jumping!&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that there’s no return value in a &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;after&lt;/code&gt; modifier, as those are handled by the original method.&lt;/p&gt;

&lt;p&gt;Modifiers aren’t limited to consuming classes; they can be in roles and modify their consumers’ methods. They also have a couple of other tricks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can pass an &lt;a href="https://perldoc.perl.org/perlref#Square-Brackets"&gt;array reference&lt;/a&gt; to modify multiple methods at once.&lt;/li&gt;
&lt;li&gt;You can use the contents of a variable to specify the modified method name, and use that same variable in the modifier itself.&lt;/li&gt;
&lt;li&gt;You can use a &lt;a href="https://perldoc.perl.org/perlre"&gt;regular expression&lt;/a&gt; to select methods. (Beware if you’re using Moo that its &lt;a href="https://metacpan.org/pod/Class::Method::Modifiers"&gt;Class::Method::Modifiers&lt;/a&gt; module doesn’t support this.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Putting these together gives you constructs like these:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight perl"&gt;&lt;code&gt;&lt;span class="nv"&gt;after&lt;/span&gt; &lt;span class="sx"&gt;qw&amp;lt;foo bar baz&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Something got called&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="nv"&gt;$method_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;qw&amp;lt;foo bar baz&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;before&lt;/span&gt; &lt;span class="nv"&gt;$method_name&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;say&lt;/span&gt; &lt;span class="p"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Calling &lt;/span&gt;&lt;span class="si"&gt;$method_name&lt;/span&gt;&lt;span class="s2"&gt;...&lt;/span&gt;&lt;span class="p"&gt;";&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;before&lt;/span&gt; &lt;span class="sx"&gt;qr/^request_/&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;sub &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;my&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;@_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$self&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;die&lt;/span&gt; &lt;span class="p"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invalid arguments&lt;/span&gt;&lt;span class="p"&gt;';&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Moose comes with great introductory manuals for &lt;a href="https://metacpan.org/dist/Moose/view/lib/Moose/Manual/MethodModifiers.pod"&gt;method modifiers&lt;/a&gt;and &lt;a href="https://metacpan.org/dist/Moose/view/lib/Moose/Manual/Roles.pod"&gt;roles&lt;/a&gt;, so be sure to check those out. There’s a lot more to them and a blog can only cover so much.&lt;/p&gt;

</description>
      <category>perl</category>
      <category>oop</category>
      <category>moose</category>
      <category>traits</category>
    </item>
  </channel>
</rss>
