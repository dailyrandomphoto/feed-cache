<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What is Log4j Vulnerability and how dangerous is it</title>
      <author>Vijay Patel</author>
      <pubDate>Fri, 24 Dec 2021 14:44:44 +0000</pubDate>
      <link>https://dev.to/easyawslearn/what-is-log4j-vulnerability-and-how-dangerous-is-it-3194</link>
      <guid>https://dev.to/easyawslearn/what-is-log4j-vulnerability-and-how-dangerous-is-it-3194</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-software-vulnerability"&gt;
  &lt;/a&gt;
  What is a Software Vulnerability?
&lt;/h2&gt;

&lt;p&gt;A software vulnerability is a defect in software that could allow an attacker to gain control of a system. These defects can be because of the way the software is designed, or because of a flaw in the way that it’s coded.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-software-vulnerability-work"&gt;
  &lt;/a&gt;
  How Does a Software Vulnerability Work?
&lt;/h2&gt;

&lt;p&gt;An attacker first finds out if a system has a software vulnerability by scanning it.  The scan can tell the attacker what types of software are on the system, are they up to date, and whether any of the software packages are vulnerable.  When the attacker finds that out, he or she will have a better idea of what types of attacks to launch against the system.  A successful attack would result in the attacker being able to run malicious commands on the target system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-an-attacker-do-with-a-software-vulnerability"&gt;
  &lt;/a&gt;
  What Can an Attacker Do with a Software Vulnerability?
&lt;/h2&gt;

&lt;p&gt;An attacker can exploit a software vulnerability to steal or manipulate sensitive data, join a system to a botnet, install a backdoor, or plant other types of malware.  Also, after penetrating into one network host, the attacker could use that host to break into other hosts on the same network.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is a full video which based on Log4J👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=2kBCbubSrvQ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X-qPslPM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wx5uldiarqtvll297dao.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-log4j"&gt;
  &lt;/a&gt;
  What is Log4j?
&lt;/h2&gt;

&lt;p&gt;Modern software can be large, powerful, and complex. Rather than a single author writing all the code themselves as was common decades ago, modern software creation will have large teams, and that software is increasingly made out of ‘building blocks’ pulled together by the team rather than entirely written from scratch.&lt;/p&gt;

&lt;p&gt;A team is unlikely to spend weeks writing new code when they can use existing code immediately.&lt;/p&gt;

&lt;p&gt;Log4j is one of the many building blocks that are used in the creation of modern software. It is used by many organizations to do a common but vital job. We call this a ‘software library’.&lt;/p&gt;

&lt;p&gt;Log4j is used by developers to keep track of what happens in their software applications or online services. It’s basically a huge journal of the activity of a system or application. This activity is called ‘logging’ and it’s used by developers to keep an eye out for problems for users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-issue"&gt;
  &lt;/a&gt;
  What’s the issue?
&lt;/h2&gt;

&lt;p&gt;Last week, a vulnerability was found in Log4j, an open-source logging library commonly used by apps and services across the internet. If left unfixed, attackers can break into systems, steal passwords and logins, extract data, and infect networks with malicious software.&lt;br&gt;
Log4j is used worldwide across software applications and online services, and the vulnerability requires very little expertise to exploit. This makes Log4shell potentially the most severe computer vulnerability in years.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-affected-by-this"&gt;
  &lt;/a&gt;
  Who is affected by this?
&lt;/h2&gt;

&lt;p&gt;Almost all software will have some form of ability to log (for development, operational and security purposes), and Log4j is a very common component used for this.&lt;br&gt;
For individuals, Log4j is almost certainly part of the devices and services you use online every day. The best thing you can do to protect yourself is make sure your devices and apps are as up to date as possible and continue to update them regularly, particularly over the next few weeks.&lt;br&gt;
For organizations, it may not be immediately clear that your web servers, web applications, network devices and other software and hardware use Log4j. This makes it all the more critical for every organization to pay attention to our advice, and that of your software vendors, and make necessary mitigations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-else-can-we-do"&gt;
  &lt;/a&gt;
  What else can we do?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check your systems for the use of Log4j&lt;/li&gt;
&lt;li&gt;Check the list of the vulnerable software&lt;/li&gt;
&lt;li&gt;Contact software vendors&lt;/li&gt;
&lt;li&gt;Set Web Application Firewall rules&lt;/li&gt;
&lt;li&gt;Check for scanning activity&lt;/li&gt;
&lt;li&gt;Check for exploitation&lt;/li&gt;
&lt;li&gt;Sign up for the NCSC’s Early Warning&lt;/li&gt;
&lt;li&gt;See the vulnerability alert for more technical detail on these steps.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>log4j</category>
      <category>log4shell</category>
      <category>vulnerability</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 24th December 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 24 Dec 2021 14:09:57 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-24th-december-2021-1572</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-24th-december-2021-1572</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-github-wrapped"&gt;
  &lt;/a&gt;
  1. GitHub Wrapped
&lt;/h3&gt;

&lt;p&gt;Take a look back at all the contributions you as an individual made to the open-source community&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ishandeveloper"&gt;
        ishandeveloper
      &lt;/a&gt; / &lt;a href="https://github.com/ishandeveloper/github-wrapped"&gt;
        github-wrapped
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Take a look back at all the contributions you as an individual made to the open-source community
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/ishandeveloper/github-wrapped./public/assets/images/favicon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HuNuaEz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ishandeveloper/github-wrapped./public/assets/images/favicon.png" width="25%"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://github.com/ishandeveloper/github-wrapped./public/assets/images/readme.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WqH2TZ96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ishandeveloper/github-wrapped./public/assets/images/readme.png" width="75%"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://githubwrapped.tech/" rel="nofollow"&gt;Generate your report&lt;/a&gt;
&lt;/p&gt;




&lt;h4&gt;
Why do I exist?&lt;/h4&gt;
&lt;h3&gt;
2020 has been a challenging year for all of us.&lt;/h3&gt;
&lt;p&gt;As the year is ending, we thought to take a look back at all the contributions &lt;strong&gt;you&lt;/strong&gt; as an individual
made to the open-source community, during these unprecedented times.&lt;/p&gt;
&lt;p&gt;Also, since Spotify, Snapchat and other mass platforms have their own way of year wrap up, &lt;strong&gt;why not us?&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;a href="https://githubwrapped.tech" rel="nofollow"&gt;githubwrapped.tech&lt;/a&gt;&lt;/pre&gt;

&lt;h3&gt;
Reports&lt;/h3&gt;
&lt;p&gt;This web app deployed at &lt;a href="https://githubwrapped.tech" rel="nofollow"&gt;githubwrapped.tech&lt;/a&gt; will help you to generate yearly reports that contains your stats from the beginning of this year.&lt;/p&gt;
&lt;p&gt;Including number of commits, stars etc.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ishandeveloper/github-wrapped./public/assets/images/report.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxOVAci_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ishandeveloper/github-wrapped./public/assets/images/report.png" width="75%" alt="Sample GitHub Wrapped Report"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also save your report as an image using the 'Save Report' button and share it with the community or keep it as a memorandum :)&lt;/p&gt;

&lt;h4&gt;
Project Structure&lt;/h4&gt;
&lt;p&gt;This project uses &lt;a href="https://reactjs.org" rel="nofollow"&gt;React.Js&lt;/a&gt; and the contents are bundled using webpack.&lt;/p&gt;
&lt;p&gt;The contents in this project follow the following structure.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;├───api
├───public
│   └───assets
└───src&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ishandeveloper/github-wrapped"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-vitest"&gt;
  &lt;/a&gt;
  2. Vitest
&lt;/h3&gt;

&lt;p&gt;A blazing fast unit test framework powered by Vite.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vitest-dev"&gt;
        vitest-dev
      &lt;/a&gt; / &lt;a href="https://github.com/vitest-dev/vitest"&gt;
        vitest
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A Vite-native test framework. It's fast!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/11247099/145112184-a9ff6727-661c-439d-9ada-963124a281f7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j3s2gEE9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/11247099/145112184-a9ff6727-661c-439d-9ada-963124a281f7.png" height="200"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
Vitest
&lt;/h1&gt;
&lt;p&gt;
A blazing fast unit test framework powered by Vite
&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://www.npmjs.com/package/vitest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f250719e6a4412b140758ebb98897b69e8c0e38316bf268d30096a9132c29acf/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f7669746573743f636f6c6f723d613162383538266c6162656c3d"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
&lt;a href="https://chat.vitest.dev" rel="nofollow"&gt;&lt;i&gt;Get involved!&lt;/i&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;br&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠️ &lt;strong&gt;DISCLAIMER&lt;/strong&gt;: Vitest is still in development and not stable yet. It's not recommended to use it in production.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Vitest requires Vite v2.7 and Node v14&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Follow the &lt;a href="https://vitest.dev/guide" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt; or learn &lt;a href="https://vitest.dev/guide/why" rel="nofollow"&gt;why we are building a new test runner&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://vitest.dev/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://vitejs.dev/" rel="nofollow"&gt;Vite&lt;/a&gt;'s config, transformers, resolvers, and plugins. Use the same setup from your app!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jestjs.io/docs/snapshot-testing" rel="nofollow"&gt;Jest Snapshot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.chaijs.com/" rel="nofollow"&gt;Chai&lt;/a&gt; built-in for assertions, with &lt;a href="https://jestjs.io/docs/expect" rel="nofollow"&gt;Jest expect&lt;/a&gt; compatible APIs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vitest-dev/vitest#watch-mode"&gt;Smart &amp;amp; instant watch mode&lt;/a&gt;, like HMR for tests!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vitest-dev/vitest#coverage"&gt;Native code coverage&lt;/a&gt; via &lt;a href="https://github.com/bcoe/c8"&gt;c8&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Aslemammad/tinyspy"&gt;Tinyspy&lt;/a&gt; built-in for mocking, stubbing, and spies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jsdom/jsdom"&gt;JSDOM&lt;/a&gt; and &lt;a href="https://github.com/capricorn86/happy-dom"&gt;happy-dom&lt;/a&gt; for DOM and browser API mocking&lt;/li&gt;
&lt;li&gt;Components testing (&lt;a href="https://github.com/vitest-dev/vitest./test/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://github.com/vitest-dev/vitest./test/react"&gt;React&lt;/a&gt;, &lt;a href="https://github.com/vitest-dev/vitest./test/lit"&gt;Lit&lt;/a&gt;, &lt;a href="https://github.com/vitest-dev/vitest./test/vitesse"&gt;Vitesse&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Workers multi-threading via &lt;a href="https://github.com/Aslemammad/tinypool"&gt;tinypool&lt;/a&gt; (a lightweight fork of &lt;a href="https://github.com/piscinajs/piscina"&gt;Piscina&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;ESM first, top level await&lt;/li&gt;
&lt;li&gt;Out-of-box TypeScript / JSX support&lt;/li&gt;
&lt;li&gt;Filtering, timeouts…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vitest-dev/vitest"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-rakkas"&gt;
  &lt;/a&gt;
  3. Rakkas
&lt;/h3&gt;

&lt;p&gt;Rakkas is a web framework powered by React and Vite that aims to have a developer experience similar to Next.js. Many of its features are also inspired by Svelte Kit.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rakkasjs"&gt;
        rakkasjs
      &lt;/a&gt; / &lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;
        rakkasjs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Lightning fast Next.js alternative powered by Vite
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/rakkasjs/rakkasjslogo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FRX4-jre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/rakkasjs/rakkasjslogo.png" alt="Rakkas"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;div&gt;
&lt;p&gt;Lightning fast &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; alternative powered by &lt;a href="https://vitejs.dev" rel="nofollow"&gt;Vite&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://app.travis-ci.com/rakkasjs/rakkasjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a76400c84b8ee2f76f055980f56fe9a82d7db666eafc1f672dd61b3a2a7451ae/68747470733a2f2f6170702e7472617669732d63692e636f6d2f72616b6b61736a732f72616b6b61736a732e7376673f6272616e63683d6d61696e" alt="Build Status"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/1604ed58b71b4f856b76e30cd7a6fe95d6c54e4869489ca599489ee665db9c3b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f74797065732f72616b6b61736a73"&gt;&lt;img src="https://camo.githubusercontent.com/1604ed58b71b4f856b76e30cd7a6fe95d6c54e4869489ca599489ee665db9c3b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f74797065732f72616b6b61736a73" alt="npm type definitions"&gt;&lt;/a&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/39cf7f14cb2d684a24cc2fb925dc4b1fa83d2cf7726c170fb8cbf1dc1fc74e74/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f72616b6b61736a73" alt="MIT license"&gt;&lt;/a&gt;
&lt;a href="https://reactjs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7719e4c089640a9e7399aa57e9c4528caa03d628f397a101be57d28cf910654c/68747470733a2f2f6261646765732e616c65656e34322e636f6d2f7372632f72656163742e737667" alt="React"&gt;&lt;/a&gt;
&lt;a href="https://vitejs.dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/811f5d97843f54210afa36d2622c8c5f1ca054183d43a2fd269bcdf8ed7db987/68747470733a2f2f6261646765732e616c65656e34322e636f6d2f7372632f766974656a732e737667" alt="Vite"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/tweet?text=I%20gave%20%23RakkasJS%20a%20try!&amp;amp;url=https%3A%2F%2Fgithub.com%2Frakkasjs%2Frakkasjs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3aff595f3e40201b5409100cf80787ab16f0625898a25ec46b6cba56242692de/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d68747470732533412532462532466769746875622e636f6d25324672616b6b61736a7325324672616b6b61736a73" alt="Tweet about Rakkas"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://rakkasjs.org/guide" rel="nofollow"&gt;Read the guide&lt;/a&gt; | &lt;a href="https://stackblitz.com/edit/rakkas-demo-ts?file=src%2Fpages%2Fpage.tsx" rel="nofollow"&gt;Try it in the browser&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;h2&gt;
What is Rakkas?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Rakkas&lt;/strong&gt; is a web framework powered by &lt;a href="https://reactjs.org" rel="nofollow"&gt;React&lt;/a&gt; and &lt;a href="https://vitejs.dev" rel="nofollow"&gt;Vite&lt;/a&gt; that aims to have a developer experience similar to &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt;. Many of its features are also inspired by &lt;a href="https://kit.svelte.dev" rel="nofollow"&gt;Svelte Kit&lt;/a&gt;. Important features are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Lightning fast development&lt;/li&gt;
&lt;li&gt;
🖥️  Hassle free server-side rendering&lt;/li&gt;
&lt;li&gt;
🚀  Support for deploying on serverless environments&lt;/li&gt;
&lt;li&gt;
📄  Static site generation&lt;/li&gt;
&lt;li&gt;
🇺🇳  Localizable URLs&lt;/li&gt;
&lt;li&gt;
🔀  Rendering modes (pre-rendering, server-side, client-side)&lt;/li&gt;
&lt;li&gt;
☸️  SPA-style client-side navigation&lt;/li&gt;
&lt;li&gt;
📁  Intuitive file system-based routing&lt;/li&gt;
&lt;li&gt;
⬇️  Simple but effective data fetching system&lt;/li&gt;
&lt;li&gt;
⚙️  API routes to build and organize your backend&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://rakkasjs.org/guide/feature-comparison" rel="nofollow"&gt;feature comparison with Next.js&lt;/a&gt; for other supported and planned features.&lt;/p&gt;
&lt;h2&gt;
Is Rakkas right for you?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Although many features have been implemented, Rakkas is still in development. There &lt;em&gt;will&lt;/em&gt; be breaking changes until we hit 1.0. As such, it's &lt;strong&gt;not yet&lt;/strong&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/rakkasjs/rakkasjs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-fuite"&gt;
  &lt;/a&gt;
  4. fuite
&lt;/h3&gt;

&lt;p&gt;A tool for finding memory leaks in web apps&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nolanlawson"&gt;
        nolanlawson
      &lt;/a&gt; / &lt;a href="https://github.com/nolanlawson/fuite"&gt;
        fuite
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A tool for finding memory leaks in web apps
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
fuite&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;fuite&lt;/strong&gt; &lt;em&gt;/fɥit/&lt;/em&gt; French for "leak"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;fuite&lt;/code&gt; is a CLI tool for finding memory leaks in web apps.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nolanlawson.com/2021/12/17/introducing-fuite-a-tool-for-finding-memory-leaks-in-web-apps/" rel="nofollow"&gt;Introductory blog post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://youtu.be/H0BHL2lo89M" rel="nofollow"&gt;Tutorial video&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npx fuite https://example.com&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This will check for leaks and print output to stdout.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;fuite&lt;/code&gt; will assume that the site is a client-rendered webapp, and it will search for internal links on the given page. Then for each link, it will:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the link&lt;/li&gt;
&lt;li&gt;Press the browser back button&lt;/li&gt;
&lt;li&gt;Repeat to see if the scenario is leaking&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For other scenarios, see &lt;a href="https://github.com/nolanlawson/fuite#scenarios"&gt;scenarios&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
How it works&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;fuite&lt;/code&gt; launches Chrome using Puppeteer, loads a web page, and runs a scenario against it. It runs the scenario some number of iterations (7 by default) and looks for objects that leaked 7 times (or 14 times, or 28 times). This might sound like a strange approach, but it's useful for &lt;a href="https://nolanlawson.com/2020/02/19/fixing-memory-leaks-in-web-applications/" rel="nofollow"&gt;cutting through the noise&lt;/a&gt; in memory analysis.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fuite&lt;/code&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nolanlawson/fuite"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-theatrejs"&gt;
  &lt;/a&gt;
  5. Theatre.js
&lt;/h3&gt;

&lt;p&gt;Theatre.js is an animation library for high-fidelity motion graphics. It is designed to help you express detailed animation, enabling you to create intricate movement, and convey nuance.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/AriaMinaei"&gt;
        AriaMinaei
      &lt;/a&gt; / &lt;a href="https://github.com/AriaMinaei/theatre"&gt;
        theatre
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Motion design editor for the web
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Theatre.js&lt;/h1&gt;
&lt;p&gt;Theatre.js is an animation library for high-fidelity motion graphics. It is designed to help you express detailed animation, enabling you to create intricate movement, and convey nuance.&lt;/p&gt;
&lt;p&gt;Theatre can be used both programmatically &lt;em&gt;and&lt;/em&gt; visually.&lt;/p&gt;
&lt;p&gt;You can use Theatre.js to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Animate 3D objects made with THREE.js or other 3D libraries&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-3d-short.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ucXLDouA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-3d-short.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Art by &lt;a href="https://sketchfab.com/models/91964c1ce1a34c3985b6257441efa500" rel="nofollow"&gt;drei.lu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Animate HTML/SVG via React or other libraries&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-dom.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CA_sLTTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-dom.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Design micro-interactions&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-micro-interaction.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2i2wiumJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-micro-interaction.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choreograph generative interactive art&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-generative.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8CCOzYvU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-generative.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or animate any other JS variable&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-console.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGfKlYwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/AriaMinaei/theatre-docs/main/docs/.vuepress/public/preview-console.gif" alt="s"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Documentation and Tutorials&lt;/h2&gt;
&lt;p&gt;The docs are at &lt;a href="https://docs.theatrejs.com" rel="nofollow"&gt;docs.theatrejs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/getting-started/" rel="nofollow"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/in-depth/" rel="nofollow"&gt;In depth guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/api/" rel="nofollow"&gt;API docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.theatrejs.com/extensions/" rel="nofollow"&gt;Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/channel/UCsp9XOCs8v2twyq5kMLzS2Q" rel="nofollow"&gt;Video tutorials&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=icR9EIS1q34" rel="nofollow"&gt;Crash course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QoS4gMxwq_4" rel="nofollow"&gt;Animating with music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/akella" rel="nofollow"&gt;Yuri Artiukh&lt;/a&gt;'s &lt;a href="https://youtu.be/qmRqgFbNprM?t=3462" rel="nofollow"&gt;stream&lt;/a&gt; with a section on using Theatre with THREE.js&lt;/li&gt;
&lt;li&gt;&amp;lt;Add your own tutorials here&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Community and support&lt;/h2&gt;
&lt;p&gt;Join our friendly community on &lt;a href="https://discord.gg/bm9f8F9Y9N" rel="nofollow"&gt;Discord&lt;/a&gt;, follow the updates on &lt;a href="https://twitter.com/AriaMinaei" rel="nofollow"&gt;twitter&lt;/a&gt; or write us an &lt;a href="https://github.com/AriaMinaei/theatremailto:hello@theatrejs.com"&gt;email&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Development and contributing&lt;/h2&gt;
&lt;p&gt;If you want to change the source of Theatre, have a look…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/AriaMinaei/theatre"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-molecule"&gt;
  &lt;/a&gt;
  6. Molecule
&lt;/h3&gt;

&lt;p&gt;Molecule is a lightweight Web IDE UI framework which is built with React.js and inspired by the VSCode.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/DTStack"&gt;
        DTStack
      &lt;/a&gt; / &lt;a href="https://github.com/DTStack/molecule"&gt;
        molecule
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 A lightweight Web IDE UI framework.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
 &lt;a rel="noopener noreferrer" href="https://github.com/DTStack/molecule./website/static/img/logo@3x.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXYTgKxU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/DTStack/molecule./website/static/img/logo%403x.png" width="20%" height="20%" alt="watchman-logo"&gt;&lt;/a&gt;
 &lt;h1&gt;
Molecule&lt;/h1&gt;
 &lt;h3&gt;
A lightweight Web IDE UI Framework&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/DTStack/molecule/actions/workflows/main.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aXOJNPHX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/DTStack/molecule/actions/workflows/main.yml/badge.svg" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/DTStack/molecule" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5ebed4408e3788c5539b4bae06b8ce6c3decd81051881bbfdb39e9e91389c2ea/68747470733a2f2f636f6465636f762e696f2f67682f4454537461636b2f6d6f6c6563756c652f6272616e63682f6d61696e2f67726170682f62616467652e7376673f746f6b656e3d50446a6243426f36717a" alt="Codecov"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@dtinsight/molecule" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21931a1c7861bb81ed784097c761cfde381f6ea2c9da3378858ec4e408fe8109/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f406474696e73696768742f6d6f6c6563756c652e7376673f7374796c653d666c6174" alt="NPM downloads"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@dtinsight/molecule" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f33e9a7d8b004848f5db7b07da23468cbbcf302998590d8a3a1c6f5457aac663/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f406474696e73696768742f6d6f6c6563756c652e7376673f7374796c653d666c61742d737175617265" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/DTStack/molecule./README-zhCN.md"&gt;中文&lt;/a&gt; | &lt;a href="https://github.com/DTStack/molecule./README.md"&gt;English&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Molecule&lt;/strong&gt; is a lightweight &lt;strong&gt;Web IDE UI&lt;/strong&gt; framework which is built with React.js and inspired by the VSCode. We have designed the Extension APIs similar to the VSCode, to help developers extend the Workbench in an easier way. It's convenient to integrate the Molecule with React.js applications. It has been applied to many products in &lt;a href="https://www.dtstack.com/" rel="nofollow"&gt;DTStack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dtstack.github.io/molecule-examples/#/" rel="nofollow"&gt;Online Preview&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Built-in the VSCode &lt;strong&gt;Workbench&lt;/strong&gt; UI&lt;/li&gt;
&lt;li&gt;Compatible with the VSCode &lt;strong&gt;ColorTheme&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Customize the Workbench via &lt;strong&gt;React Component&lt;/strong&gt; easily&lt;/li&gt;
&lt;li&gt;Built-in Monaco-Editor &lt;strong&gt;Command Palette, Keybinding&lt;/strong&gt; features&lt;/li&gt;
&lt;li&gt;Support the &lt;strong&gt;i18n&lt;/strong&gt;, built-in zhCN, and English&lt;/li&gt;
&lt;li&gt;Built-in &lt;strong&gt;Settings&lt;/strong&gt;, support to edit and extend via the Extension&lt;/li&gt;
&lt;li&gt;Built-in basic &lt;strong&gt;Explorer, Search&lt;/strong&gt; components, and support extending via the Extension&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Typescript&lt;/strong&gt; Ready&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install @dtinsight/molecule
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or&lt;/span&gt;
yarn add @dtinsight/molecule&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Basic Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;React&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;ReactDOM&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'react-dom'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;MoleculeProvider&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/DTStack/molecule"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-rfs"&gt;
  &lt;/a&gt;
  7. RFS
&lt;/h3&gt;

&lt;p&gt;RFS is a unit resizing engine which was initially developed to resize font sizes. RFS is capable of rescaling basically every value for any css property with units, like margin, padding, border-radius or even box-shadow.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/twbs"&gt;
        twbs
      &lt;/a&gt; / &lt;a href="https://github.com/twbs/rfs"&gt;
        rfs
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      ✩ Automates responsive resizing ✩
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/twbs/rfs/main/rfs.svg?sanitize=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vT9LWwWw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/twbs/rfs/main/rfs.svg%3Fsanitize%3Dtrue" alt="RFS logo" width="99" height="108.6"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;RFS is a unit resizing engine which was initially developed to resize font sizes (hence its abbreviation for Responsive Font Sizes). Nowadays RFS is capable of rescaling basically every value for any css property with units, like &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;border-radius&lt;/code&gt; or even &lt;code&gt;box-shadow&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The mechanism &lt;strong&gt;automatically calculates the appropriate values&lt;/strong&gt; based on the dimensions of the browser viewport. It's available in one of your favourite preprocessors or postprocessor: &lt;a href="https://sass-lang.com/" rel="nofollow"&gt;Sass&lt;/a&gt;, &lt;a href="http://lesscss.org/" rel="nofollow"&gt;Less&lt;/a&gt;, &lt;a href="http://stylus-lang.com/" rel="nofollow"&gt;Stylus&lt;/a&gt; or &lt;a href="https://postcss.org/" rel="nofollow"&gt;PostCSS&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
RFS&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/rfs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d46346e93dbb23fb758c8f2d7d19fa39ce2ca20996a592e8d5f1de68419c106e/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f726673" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://github.com/twbs/rfs/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/0f941dfbce1eff53b1141bf9f97af58f4f83bbbffca238bb7cfc39c42cd0ceee/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f726673" alt="licence"&gt;&lt;/a&gt;
&lt;a href="https://github.com/twbs/rfs/actions?query=workflow%3ATests+branch%3Amain"&gt;&lt;img src="https://camo.githubusercontent.com/9fda78c6a83b81b851a8a24d759890ab7179fa2348fd43a6449740dd6af707f3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f747762732f7266732f54657374732f6d61696e3f6c6162656c3d5465737473266c6f676f3d676974687562" alt="build"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#demos"&gt;Demos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#advantages"&gt;Advantages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#visualisation"&gt;Visualisation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#creator"&gt;Creator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twbs/rfs#copyright-and-license"&gt;Copyright and license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Demos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/vqaEBG?editors=0100" rel="nofollow"&gt;Card example (Sass)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/voXLGL?editors=1100" rel="nofollow"&gt;Card example (Sass, with custom properties)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/aeojgG?editors=0100" rel="nofollow"&gt;Card example (PostCSS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/JgRYaw?editors=0100" rel="nofollow"&gt;Card example (PostCSS, with custom properties)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codepen.io/MartijnCuppens/pen/ZBjdMy?editors=0100" rel="nofollow"&gt;Simple font rescaling Codepen Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://project-rfs.github.io/" rel="nofollow"&gt;RFS in Bootstrap demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Advantages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No need to rescale paddings or margins anymore.&lt;/li&gt;
&lt;li&gt;Text won't be chopped off in smaller viewports when RFS is applied to font sizes.&lt;/li&gt;
&lt;li&gt;RFS will prevent the font size from rescaling…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/twbs/rfs"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-clipanion"&gt;
  &lt;/a&gt;
  8. Clipanion
&lt;/h3&gt;

&lt;p&gt;Type-safe CLI library / framework with no runtime dependencies&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/arcanis"&gt;
        arcanis
      &lt;/a&gt; / &lt;a href="https://github.com/arcanis/clipanion"&gt;
        clipanion
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Type-safe CLI library / framework with no runtime dependencies
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/arcanis/clipanion./logo.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1TjHRhw8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/arcanis/clipanion./logo.svg" height="25"&gt;&lt;/a&gt; Clipanion&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Type-safe CLI library with no runtime dependencies&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://yarnpkg.com/package/clipanion" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb64b0d64b18b34d016b791126cd22d26a363f4df34e2e5798424293d3912369/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636c6970616e696f6e2e737667" alt="npm version"&gt;&lt;/a&gt; &lt;a href="https://github.com/arcanis/clipanion#license-mit"&gt;&lt;img src="https://camo.githubusercontent.com/be5c000f3f5c9433e8d8a83fda4182bcbe71c47c165c22e351a03353661f0131/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f636c6970616e696f6e2e737667" alt="Licence"&gt;&lt;/a&gt; &lt;a href="https://github.com/yarnpkg/berry"&gt;&lt;img src="https://camo.githubusercontent.com/d894b92f4de0b5d34c1469f8ebd0c405ab843d0b03afcb99080cf010f5436eed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646576656c6f706564253230776974682d5961726e253230322d626c7565" alt="Yarn"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add clipanion&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Why&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clipanion supports advanced typing mechanisms&lt;/li&gt;
&lt;li&gt;Clipanion supports nested commands (&lt;code&gt;yarn workspaces list&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Clipanion supports transparent option proxying without &lt;code&gt;--&lt;/code&gt; (for example &lt;code&gt;yarn dlx eslint --fix&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Clipanion supports all option types you could think of (including negations, batches, ...)&lt;/li&gt;
&lt;li&gt;Clipanion offers a &lt;a href="https://github.com/arcanis/typanion"&gt;Typanion&lt;/a&gt; integration for increased validation capabilities&lt;/li&gt;
&lt;li&gt;Clipanion generates an optimized state machine out of your commands&lt;/li&gt;
&lt;li&gt;Clipanion generates good-looking help pages out of the box&lt;/li&gt;
&lt;li&gt;Clipanion offers common optional command entries out-of-the-box (e.g. version command, help command)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Clipanion is used in &lt;a href="https://github.com/yarnpkg/berry"&gt;Yarn&lt;/a&gt; with great success.&lt;/p&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Check the website for our documentation: &lt;a href="https://mael.dev/clipanion/" rel="nofollow"&gt;mael.dev/clipanion&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Migration&lt;/h2&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/paul-soporan/clipanion-v3-codemod"&gt;&lt;code&gt;clipanion-v3-codemod&lt;/code&gt;&lt;/a&gt; to migrate a Clipanion v2 codebase to v3.&lt;/p&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;Commands are declared by extending from the &lt;code&gt;Command&lt;/code&gt; abstract base class, and more specifically by implementing its &lt;code&gt;execute&lt;/code&gt; method which will then be called by…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/arcanis/clipanion"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-liqvid"&gt;
  &lt;/a&gt;
  9. liqvid
&lt;/h3&gt;

&lt;p&gt;A library for making interactive videos in React. For example an interactive coding demo inside a video.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/liqvidjs"&gt;
        liqvidjs
      &lt;/a&gt; / &lt;a href="https://github.com/liqvidjs/player"&gt;
        player
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Library for interactive videos in React
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
liqvid&lt;/h1&gt;
&lt;p&gt;This is a library for making &lt;strong&gt;interactive&lt;/strong&gt; videos in React.&lt;/p&gt;
&lt;p&gt;For example, here's an interactive coding demo inside a video:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gfycat.com/frailtemptingeyra" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ba1e1387350c340f5ef19d76b3ac724fd955b15d4ab8f382013dbd0504724ec/68747470733a2f2f7468756d62732e6766796361742e636f6d2f467261696c54656d7074696e67457972612d73697a655f726573747269637465642e676966"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's an interactive graph:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gfycat.com/magnificentdopeybrownbear" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/284e22d021265ca951e0875b2fc6e308a15332d4bb8fd414e0d304e9782aea49/68747470733a2f2f7468756d62732e6766796361742e636f6d2f4d61676e69666963656e74446f70657942726f776e626561722d73697a655f726573747269637465642e676966"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get started, clone &lt;a href="https://github.com/ysulyma/rp-tutorial"&gt;https://github.com/ysulyma/rp-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For documentation, visit &lt;a href="https://liqvidjs.org/" rel="nofollow"&gt;https://liqvidjs.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For inspiration, see &lt;a href="https://epiplexis.xyz/" rel="nofollow"&gt;https://epiplexis.xyz/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/liqvidjs/player"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-ajqueryjs"&gt;
  &lt;/a&gt;
  10. ajquery.js
&lt;/h3&gt;

&lt;p&gt;The fastest, most lightweight, least dependency jQuery alternative.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/coolaj86"&gt;
        coolaj86
      &lt;/a&gt; / &lt;a href="https://github.com/coolaj86/ajquery.js"&gt;
        ajquery.js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The fastest, most lightweight, least dependency jQuery alternative.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a href="https://git.coolaj86.com/coolaj86/ajquery.js" rel="nofollow"&gt;ajquery.js&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The fastest, most lightweight, fewest dependency jQuery alternative.&lt;/p&gt;
&lt;p&gt;Development Build: 145B (with comments) &lt;br&gt;
Production Build: 103B (min + gz)&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="highlight highlight-text-html-basic position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt; &lt;span class="pl-c1"&gt;src&lt;/span&gt;="&lt;span class="pl-s"&gt;https://unpkg.com/ajquery&lt;/span&gt;"&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;script&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Example Usage&lt;/h2&gt;
&lt;p&gt;Provides modern, advanced CSS4-compatible query selection:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"innerText:"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"p:nth-child(2"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;innerText&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
API&lt;/h2&gt;
&lt;h3&gt;
&lt;code&gt;$(selector, [rootElement])&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;Selects the first matching HTML element only (or &lt;code&gt;null&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;body&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"body"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;div1&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"div"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;body&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
&lt;code&gt;$$(selector, [rootElement])&lt;/code&gt;
&lt;/h3&gt;
&lt;p&gt;Selects all matching elements (or an empty &lt;code&gt;NodeList&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;head&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"head"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;stylesheets&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;$$&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'link[rel="stylesheet"]'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;head&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;map&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Benchmarks&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/122831/126774017-9e2a4f32-3ab8-4ba8-a7f3-290977a49cd0.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y48KnqtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/122831/126774017-9e2a4f32-3ab8-4ba8-a7f3-290977a49cd0.png" alt="ajquery-benchmarks" title="it's over 9000"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Compatibility&lt;/h2&gt;
&lt;p&gt;Written entirely in modern ECMAScript 3, and directly transpilable into ES5, ES6
and beyond (up to ES11) via Webpack, Babel, Rollup, React Native, and AWS
InfiniDash.&lt;/p&gt;
&lt;p&gt;Works in…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/coolaj86/ajquery.js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +1,119 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +976 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +915 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +618 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +567 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; +74%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Aslemammad/tinyspy"&gt;TinySpy&lt;/a&gt; +63%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +45%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vinibiavatti1/TuiCss"&gt;TuiCss&lt;/a&gt; +26%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/KATT/envsafe"&gt;envsafe&lt;/a&gt; +20%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +5,737 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +5,312 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/remix-run/remix"&gt;Remix&lt;/a&gt; +5,199 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +4,608 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +4,602 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/picocss/pico"&gt;Pico&lt;/a&gt; +374%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/remix-run/remix"&gt;Remix&lt;/a&gt; +125%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; +100%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +86%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +85%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>vite</category>
    </item>
    <item>
      <title>20+ Useful JavaScript Array Methods Cheatsheet</title>
      <author>Ayesha Sahar</author>
      <pubDate>Fri, 24 Dec 2021 13:34:37 +0000</pubDate>
      <link>https://dev.to/iayeshasahar/20-useful-javascript-array-methods-cheatsheet-1o94</link>
      <guid>https://dev.to/iayeshasahar/20-useful-javascript-array-methods-cheatsheet-1o94</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Contents&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#arrays"&gt;Arrays&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#1"&gt;Array.push()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2"&gt;Array.unshift()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;Array.pop()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Array.shift()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5"&gt;Array.splice()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6"&gt;Array.concat()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7"&gt;Array.isArray()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8"&gt;Array.slice()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9"&gt;Array.length&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#10"&gt;Array.includes()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#11"&gt;Array.from()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#12"&gt;Array.fill()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#13"&gt;Array.filter()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#14"&gt;Array.find()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#15"&gt;Array.forEach()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#16"&gt;Array.map()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#17"&gt;Array.flat()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#18"&gt;Array.reverse()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#19"&gt;Array.every()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#20"&gt;Array.copyWithin()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#21"&gt;Array.reduce()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#22"&gt;Array.flatMap()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#23"&gt;Array.some()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#24"&gt;Array.of()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#25"&gt;Array.sort()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#26"&gt;Array.join()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#27"&gt;Array.toLocaleString()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#28"&gt;Array.keys()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#29"&gt;Array.values()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#30"&gt;Array.entries()&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Arrays&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If we talk in programming language, an array is said to be a collection of elements or items. They store data as elements and can retrieve them back whenever you need them. It is a widely used data structure in the programming languages that support it.&lt;br&gt;
In JavaScript, we can use a pair of square brackets [] to represent an array. Every single element in the array is separated by a comma(,). They can be a collection of elements of any data type, meaning that you can create an array with elements of data type String, Boolean, Number, Objects, and even other Arrays. They are used to store multiple values in a single variable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array_name = [itemA, itemB, itemC,.............];   
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const flowers = ["lily", "rose", "tulip"];
console.log(flowers);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;lily, rose, tulip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Arrays truly are a wonder in JavaScript. They have many useful built-in properties or methods that can help you resolve any task involving them. Let's discuss the most important and useful ones now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-arraypush"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Array.push()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method adds elements at the end of an array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// Adding 6 to the end of the array
number_arr.push(6);

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1, 2, 3, 4, 5, 6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-arrayunshift"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Array.unshift()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is the opposite of array.push(). This method adds elements to the front of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// Now adding 6 to the front of the array
number_arr.unshift(6);

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;6, 1, 2, 3, 4, 5, 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-arraypop"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Array.pop()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method removes elements from the end of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// It will remove element from end of the array
number_arr.pop();

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1, 2, 3, 4,  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-arrayshift"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4. Array.shift()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is the opposite of array.pop(). It removes elements from the front of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our number array
var number_arr = [ 1, 2, 3, 4, 5];

// Removing element from front of the array
number_arr.shift();

console.log(number_arr);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2, 3, 4, 5 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-arraysplice"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Array.splice()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It is a very useful method. It can remove or add elements from or in any particular location of the array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Adding elements using splice()
const fruits = ["Banana", "Orange", "Apple", "Mango"];

// At position 2, adding 2 elements
fruits.splice(2, 0, "Lemon", "Kiwi");

console.log(fruits);

// Removing elements using splice()

const number_arr = [ 2, 3, 4, 5, 6 ];

// using splice() to delete 3 elements starting from index 1
number_arr.splice(1, 3);

console.log(number_arr);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Banana, Orange, Lemon, Kiwi, Apple, Mango
2, 6
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-arrayconcat"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Array.concat()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method is used to join two or more arrays.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our arrays

const fruits = ["apple", "orange"];
const vegetables = ["potato", "capsicum", "carrot"];

const all = fruits.concat(vegetables);

console.log(all);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apple, orange, potato, capsicum, carrot
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-arrayisarray"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7. Array.isArray()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It determines whether the value passed through it is an array or not and returns the answer in booleans (true or false).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our array

const fruits = ["apple", "orange"];
Array.isArray(fruits);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-arrayslice"&gt;
  &lt;/a&gt;
  &lt;strong&gt;8. Array.slice()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns selected elements from an array, as a new array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our array

const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(1, 3);
console.log(citrus);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Orange, Apple
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-arraylength"&gt;
  &lt;/a&gt;
  &lt;strong&gt;9. Array.length&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns or sets the number of elements in an array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Declaring and initializing our array

const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];

// Checking the length of the array
const len = fruits.length;

// Printing the result
console.log(len);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#10-arrayincludes"&gt;
  &lt;/a&gt;
  &lt;strong&gt;10. Array.includes()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method checks if an array has a certain value among its elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Initializing and declaring our array
let fruits = ["Banana", "Apple", "Mango", "Peach", "Orange, "Grapes"];

let check = fruits.includes("Apple");
console.log(check); // true

// This method is case sensitive

let check1 = fruits.includes("apple");
console.log(check1); // false

// The second argument here specifies position to start searching from

let check2 = fruits.includes("Apple", 2);
console.log(check2); // false

// The negative argument here starts the count from backwards
// Searching starts from third-to-last element

let check3 = fruits.includes("Apple", -3);
console.log(check3); // false

let check4 = fruits.includes("Lime");
console.log(check4); // false

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;true
false
false
false
false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#11-arrayfrom"&gt;
  &lt;/a&gt;
  &lt;strong&gt;11. Array.from()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new but shallow-copied Array instance from an array-like or iterable object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(Array.from('hello'));
// output: Array ["h", "e", "l", "l", "o"]

console.log(Array.from([2, 3, 4], x =&amp;gt; x + x));
// expected output: Array [4, 6, 8]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#12-arrayfill"&gt;
  &lt;/a&gt;
  &lt;strong&gt;12. Array.fill()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method changes all elements in an array to a static value, from a start index (default 0) to an end index (default array.length). It returns the modified array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [1, 2, 3, 4];

// fill with 1 from position 2 until position 4
console.log(arrayA.fill(0, 2, 4));
// output: [1, 2, 1, 1]

// fill with 6 from position 1
console.log(arrayA.fill(5, 1));
// output: [1, 6, 6, 6]

console.log(arrayA.fill(8));
// output: [8, 8, 8, 8]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#13-arrayfilter"&gt;
  &lt;/a&gt;
  &lt;strong&gt;13. Array.filter()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new array with all elements that pass the test implemented by the provided function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const words = ['hello', 'hi', 'elite', 'amazing', 'adios', 'present'];

const result = words.filter(word =&amp;gt; word.length &amp;gt; 6);

console.log(result);
// output: Array ["amazing", "present"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#14-arrayfind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;14. Array.find()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns the value of the first element in the provided array that satisfies the provided testing function. If no values satisfy the testing function, undefined is returned.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [7, 12, 8, 140, 54];

const found = arrayA.find(element =&amp;gt; element &amp;gt; 10);

console.log(found);
// output: 12

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#15-arrayforeach"&gt;
  &lt;/a&gt;
  &lt;strong&gt;15. Array.forEach()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method executes a provided function once for each array element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['c', 'd', 'e'];

arrayA.forEach(element =&amp;gt; console.log(element));

// output: "c"
// output: "d"
// output: "e"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#16-arraymap"&gt;
  &lt;/a&gt;
  &lt;strong&gt;16. Array.map()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new array populated with the results of calling a provided function on every element in the calling array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [3, 4, 7, 16];

// pass a function to map
const map1 = arrayA.map(x =&amp;gt; x * 2);

console.log(map1);
// output: Array [6, 8, 14, 32]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#17-arrayflat"&gt;
  &lt;/a&gt;
  &lt;strong&gt;17. Array.flat()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrA = [0, 1, 2, [5, 7]];

console.log(arrA.flat());
// output: [0, 1, 2, 5, 7]

const arrB = [0, 1, 2, [[[5, 7]]]];

console.log(arrB.flat(2));
// output: [0, 1, 2, [5, 7]]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#18-arrayreverse"&gt;
  &lt;/a&gt;
  &lt;strong&gt;18. Array.reverse()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method reverses an array in place. The first array element becomes the last, and the last array element becomes the first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C'];
console.log('arrayA:', arrayA);
// output: "arrayA:" Array ["A", "B", "C"]

const reversed = arrayA.reverse();
console.log('reversed:', reversed);
// output: "reversed:" Array ["C", "B", "A"]

console.log('arrayA:', arrayA);
// output: "arrayA:" Array ["C", "B", "A"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#19-arrayevery"&gt;
  &lt;/a&gt;
  &lt;strong&gt;19. Array.every()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const isBelow = (currentValue) =&amp;gt; currentValue &amp;lt; 50;

const arrayA = [3, 0, 39, 19, 40,45];

console.log(arrayA.every(isBelow));
// output: true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#20-arraycopywithin"&gt;
  &lt;/a&gt;
  &lt;strong&gt;20. Array.copyWithin()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method shallow copies part of an array to another location in the same array and returns it without modifying its length.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C', 'D', 'E'];

// copy to index 0 the element at index 3
console.log(arrayA.copyWithin(0, 3, 4));
// output: Array ["D", "B", "C", "D", "E"]

// copy to index 1 all elements from index 3 to the end
console.log(arrayA.copyWithin(1, 3));
// output: Array ["D", "D", "E", "D", "E"]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#21-arrayreduce"&gt;
  &lt;/a&gt;
  &lt;strong&gt;21. Array.reduce()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The easiest-to-understand explanation for reduce() is that it returns the sum of all the elements in an array. It walks through the array element-by-element and at each step, it adds the current array value to the result from the previous step until there are no more elements to add.&lt;/p&gt;

&lt;p&gt;Moreover, it can also apply any callback function such as mean, median, count, etc. The sum is the simplest and easiest to understand use case!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = [3, 2, 8, 4];
const reducer = (previousValue, currentValue) =&amp;gt; previousValue + currentValue;

// 3 + 2 + 8 + 4
console.log(arrayA.reduce(reducer));
// output: 17

// 5 + 3 + 2 + 8 + 4
console.log(arrayA.reduce(reducer, 5));
// output: 22
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#22-arrayflatmap"&gt;
  &lt;/a&gt;
  &lt;strong&gt;22. Array.flatMap()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new array that is basically formed by applying a given callback function to each element of the array, and then flattening the result by one level. It is identical to a map() followed by a flat() of depth 1. But it is slightly more efficient and time-saving than calling those two methods separately.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let arrA = [3, 2, 9, 4];

arrA.flatMap(x =&amp;gt; [x * 2]);
// [6, 4, 18, 8]

// only one level is flattened
arrA.flatMap(x =&amp;gt; [[x * 2]]);
// [[3], [4], [9], [8]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#23-arraysome"&gt;
  &lt;/a&gt;
  &lt;strong&gt;23. Array.some()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method checks to see if at least one of array’s item passed a certain pre-defined condition. If passed, it return "true" otherwise "false".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   const arrayA = [1, 2, 3, 4, 5, 6];

  // at least one element is greater than 3?
  const largeNum = arr.some(num =&amp;gt; num &amp;gt; 3);
  console.log(largeNum); 
  // output: true

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#24-arrayof"&gt;
  &lt;/a&gt;
  &lt;strong&gt;24.  Array.of()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method create array from every arguments passed into it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const alphabets = Array.of(a, b, c, d, e, f);
  console.log(alphabets); 
  // output: [a, b, c, d, e, f]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#25-arraysort"&gt;
  &lt;/a&gt;
  &lt;strong&gt;25. Array.sort()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method is used to sort any array’s items either in ascending or descending order.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  const numbers = [1, 2, 3, 4, 5, 6];
  const alphabets = ['d', 'a', 'c', 't', 'z'];

  //sort in descending order
  descOrder = numbers.sort((a, b) =&amp;gt; a &amp;gt; b ? -1 : 1);
  console.log(descOrder); 
  //output: [6, 5, 4, 3, 2, 1]

  //sort in ascending order
  ascOrder = alphabets.sort((a, b) =&amp;gt; a &amp;gt; b ? 1 : -1);
  console.log(ascOrder); 
  //output: ['a', 'c', 'd', 't', 'z']

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#26-arrayjoin"&gt;
  &lt;/a&gt;
  &lt;strong&gt;26. Array.join()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;It creates and returns a new string by concatenating all of the elements in an array separated by commas or a specified separator string. But if the array consists of one item, then that item will be returned without using the separator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const elements = ['Hi', 'Hello', 'Bye'];

console.log(elements.join());
// output: "Hi,Hello,Bye"

console.log(elements.join(''));
// output: "HiHelloBye"

console.log(elements.join('-'));
// output: "Hi-Hello-Bye"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#27-arraytolocalestring"&gt;
  &lt;/a&gt;
  &lt;strong&gt;27. Array.toLocaleString()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a string representing the elements of the array. The elements are converted to Strings using their toLocaleString methods. Then those Strings are separated by a locale-specific String (such as a comma “,”).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const array1 = [1, 'a', new Date('29 Dec 2002 16:12:00 UTC')];
const localeString = array1.toLocaleString('en', { timeZone: 'UTC' });

console.log(localeString);
// output: "1,a,12/29/2002, 4:12:00 PM",
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#28-arraykeys"&gt;
  &lt;/a&gt;
  &lt;strong&gt;28. Array.keys()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new Array Iterator object that contains the keys for each index in the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C', 'D'];
const iterator = arrayA.keys();

for (const key of iterator) {
  console.log(key);
}

// output: 0
// output: 1
// output: 2
// output: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#29-arrayvalues"&gt;
  &lt;/a&gt;
  &lt;strong&gt;29. Array.values()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new array iterator object that contains the values for each index in the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C', 'D'];
const iterator = arrayA.keys();

for (const value of iterator) {
  console.log(value);
}

// output: A
// output: B
// output: C
// output: D
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#30-arrayentries"&gt;
  &lt;/a&gt;
  &lt;strong&gt;30. Array.entries()&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This method returns a new Array Iterator object that contains the key/value pairs for each index in the array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const arrayA = ['A', 'B', 'C'];

const iterator1 = arrayA.entries();

console.log(iterator1.next().value);
// output: Array [0, "A"]

console.log(iterator1.next().value);
// output: Array [1, "B"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;JavaScript arrays have quite a lot of useful methods that can simplify our development efforts. Knowing these methods can save us time and can even boost the performance of our code. I truly hoped that today you all learned something today, whether it was new array methods or refreshing your old concepts which you can use for your next project ^_^&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's connect!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;✨ &lt;a href="https://twitter.com/IAyeshaSahar"&gt;Twitter&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;✨ &lt;a href="https://github.com/AyeshaSahar"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Private AI: Machine Learning on Encrypted Data</title>
      <author>Bala Priya C</author>
      <pubDate>Fri, 24 Dec 2021 13:25:03 +0000</pubDate>
      <link>https://dev.to/balapriya/private-ai-machine-learning-on-encrypted-data-3ldl</link>
      <guid>https://dev.to/balapriya/private-ai-machine-learning-on-encrypted-data-3ldl</guid>
      <description>&lt;p&gt;&lt;a href="https://scholar.google.com/citations?user=TmuUs30AAAAJ&amp;amp;hl=en"&gt;Kristin Lauter&lt;/a&gt; is currently the head of research science at Facebook AI Research (Meta), formerly the head of Cryptography and Privacy Research Group at Microsoft Research. This post is based on her talk at the OpenMined Privacy Conference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-privacy-problem-with-ai"&gt;
  &lt;/a&gt;
  What is the privacy problem with AI?
&lt;/h2&gt;

&lt;p&gt;Let us begin by looking at a generic Machine Learning (ML) algorithm that takes in our data as input and outputs some kind of decision - a classification label, numerical value or a recommendation. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The privacy problem stems from the fact that we &lt;em&gt;have to input our data&lt;/em&gt; to get those nice and valuable predictions. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many AI applications powered by smart agents are hosted on the cloud, and protecting privacy of user data is pivotal to building secure applications. &lt;/p&gt;

&lt;p&gt;The privacy of data can be protected through encryption. However, standard encryption methods do not allow computation on encrypted data. Here's where &lt;strong&gt;Homomorphic Encryption (HE)&lt;/strong&gt; helps.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-homomorphic-encryption"&gt;
  &lt;/a&gt;
  What is Homomorphic Encryption?
&lt;/h2&gt;

&lt;p&gt;In simple terms, Homomorphic Encryption is a mathematical tool:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;that allows for encryption of data, &lt;/li&gt;
&lt;li&gt;ensuring privacy while at the same time, allowing computations to be performed on the encrypted data. &lt;/li&gt;
&lt;li&gt;The result of computation can then be decrypted to get the results.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As shown in the figure below, with Homomorphic Encryption (HE), the order of encryption and computation can be interchanged.&lt;/p&gt;

&lt;p&gt;Suppose you have data &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. You can perform computation on the data and then encrypt the result, denoted by &lt;code&gt;E(a*b)&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Alternatively, you could encrypt the data and then perform computation, denoted by &lt;code&gt;E(a) * E(b)&lt;/code&gt; in the figure below. If the encryption is homomorphic, then these two values, &lt;code&gt;E(a*b)&lt;/code&gt; and &lt;code&gt;E(a) * E(b)&lt;/code&gt; decrypt to the same value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AQQwSmQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AQQwSmQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/2m.png" alt="" width="672" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Therefore, we can choose to encrypt private data &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, &lt;br&gt;
outsource computation, say, to the cloud, and decrypt the obtained result of the computation to view the actual meaningful results.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#understanding-homomorphic-encryption-intuitively-through-homermorphic-encryption"&gt;
  &lt;/a&gt;
  Understanding Homomorphic Encryption intuitively through Homer-morphic Encryption
&lt;/h2&gt;

&lt;p&gt;Let's try to think of a fictional character and draw a relatable analogy.&lt;/p&gt;

&lt;p&gt;Remember Homer Simpson from 'The Simpsons'?🙂&lt;/p&gt;

&lt;p&gt;The following illustration is aimed at giving an intuitive explanation to what Homomorphic Encryption does.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0JK1qW3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/Screenshot-2021-06-02-174615.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0JK1qW3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.openmined.org/content/images/2021/06/Screenshot-2021-06-02-174615.jpg" alt="" width="718" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us say you need to get a jewel made and you have your gold ready! You'd now like to call your jeweler (Homer Simpson) and get your jewel made, however you're not very sure if your jeweler is trustworthy. Here's a suggestion.&lt;/p&gt;

&lt;p&gt;You may place your gold in a box, lock it and keep the key with yourself. You may now invite over your jeweler and ask him to work on the gold nuggets through the glove box. Once the jewel is done, you may unlock your box and retrieve your jewel. Isn't that cool?&lt;/p&gt;

&lt;p&gt;Let us try to parse the analogy a bit. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your &lt;em&gt;private data&lt;/em&gt; is analogous to gold, &lt;/li&gt;
&lt;li&gt;
&lt;em&gt;outsourcing computations&lt;/em&gt; on encrypted data in a public environment is similar to getting your jeweler to work on the gold through glove box, and&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;decrypting&lt;/em&gt; the results of computation to view the meaningful results is analogous to opening the box to get your jewel after the jeweler has left. 🙂&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without delving deep into the math involved, the high-level idea behind homomorphic encryption is as follows. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Homomorphic Encryption uses &lt;em&gt;lattice-based encoding&lt;/em&gt;. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Encryption&lt;/strong&gt; adds noise to a secret inner product. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Decryption&lt;/strong&gt; subtracts the secret inner product and the noise becomes easy to cancel.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next section, let's see the capabilities of Microsoft SEAL, a library for Homomorphic Encryption.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#microsoft-seal-simple-encrypted-arithmetic-library"&gt;
  &lt;/a&gt;
  Microsoft SEAL (Simple Encrypted Arithmetic Library)
&lt;/h2&gt;

&lt;p&gt;SEAL (Simple Encrypted Arithmetic Library) is Microsoft's library for Homomorphic Encryption (HE), widely adopted by research teams worldwide. It was first released publicly in 2015, followed by the standardization of HE in November 2018. Microsoft SEAL is available for download and use &lt;a href="https://www.microsoft.com/en-us/research/project/microsoft-seal/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In recent years, availability of hardware accelerators has also enabled several orders of magnitude speedup. Here's a timeline of how Homomorphic Encryption has been adopted due to advances in research and easier access to compute.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Idea: Computation on encrypted data without decrypting it&lt;/li&gt;
&lt;li&gt;2009: Considered impractical due to substantial overhead involved&lt;/li&gt;
&lt;li&gt;2011: Breakthrough at Microsoft Research&lt;/li&gt;
&lt;li&gt;Subsequent years of research: Practical encoding techniques that achieved several orders of speed-up&lt;/li&gt;
&lt;li&gt;2016: Crypto Nets at ICML 2016 - Neural Net predictions on encrypted data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we're familiar with how HE has been adopted over the years, the subsequent sections will focus on the possible applications of HE.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#cloud-compute-scenarios-benefitting-from-he"&gt;
  &lt;/a&gt;
  Cloud Compute Scenarios benefitting from HE
&lt;/h2&gt;

&lt;p&gt;The following are some of the cloud computing scenarios that could potentially benefit from Homomorphic Encryption (HE):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Private Storage and Computation&lt;/li&gt;
&lt;li&gt;Private Prediction Services&lt;/li&gt;
&lt;li&gt;Hosted Private Training&lt;/li&gt;
&lt;li&gt;Private Set Intersection&lt;/li&gt;
&lt;li&gt;Secure Collaborative Computation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The markets benefitting from such services include healthcare, pharmaceutical, financial, government, insurance, manufacturing, oil and gas sector, to name a few. A few applications of Private AI across industries are listed below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finance: Fraud detection, automated claims processing, threat intelligence, and data analytics are some applications.&lt;/li&gt;
&lt;li&gt;Healthcare: The scope of Private AI in healthcare includes medical diagnosis, medical support systems such as healthcare bots, preventive care and data analytics.&lt;/li&gt;
&lt;li&gt;Manufacturing: Predictive maintenance and data analytics on potentially sensitive data.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#azure-ml-private-prediction"&gt;
  &lt;/a&gt;
  Azure ML Private Prediction
&lt;/h2&gt;

&lt;p&gt;An image classification model for encrypted inferencing in Azure Container Instance (ACI), built on Microsoft SEAL, was announced at Microsoft Build Conference 2020. The tutorial can be accessed here.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;[1] &lt;a href="https://www.youtube.com/watch?v=78Ye1a24hyQ"&gt;Recording of the PriCon talk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>privacy</category>
      <category>machinelearning</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to CRUD Operations work in JavaScript</title>
      <author>Supriya</author>
      <pubDate>Fri, 24 Dec 2021 13:15:41 +0000</pubDate>
      <link>https://dev.to/supriyadebnath/how-to-crud-operations-work-in-javascript-jkh</link>
      <guid>https://dev.to/supriyadebnath/how-to-crud-operations-work-in-javascript-jkh</guid>
      <description>&lt;p&gt;How do CRUD Operations work in JavaScript?&lt;br&gt;
Answer: &lt;br&gt;
CRUD: 'CRUD' is the central tenet of every programming language, and we should strengthen our foundations to be hardcore developers.The purpose of this project is to demonstrate the working of CRUD operations by writing a 'Note-Taking Application' in pure Modern JavaScript.&lt;br&gt;
Together these four operations make up the basic operations of storage management known as CRUD: Create, Read, Update and Delete.&lt;br&gt;
Organizations that keep track of customer data, accounts, payment information, health data, and other records require data storage hardware and applications that provide persistent storage. This data is typically organized into a database, which is simply an organized collection of data that may be viewed electronically.&lt;/p&gt;

&lt;p&gt;Four CRUD Operations Components Explained__&lt;br&gt;
A relational database consists of tables with rows and columns. In a relational database, each row of a table is known as a tuple or a record. Each column of the table represents a specific attribute or field. The four CRUD functions can be called by users to perform different types of operations on selected data within the database. &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       Letter         Operation         Function
         C             Create            Insert
         R              Read             Select
         U             Update            Edit
         D             Delete            Delete
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;C for Create&lt;br&gt;
The create function users to create a new record in the database. In the SQL relational database application, the Create function is called INSERT. It is called create. Remember that a record is a row and that columns are termed attributes. A user can create a new row and populate it with data that corresponds to each attribute, but only an administrator might be able to add new attributes to the table itself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--31Z8g5Jz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vd7fns3zawudotorlpc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--31Z8g5Jz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vd7fns3zawudotorlpc6.png" alt="Image description" width="557" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;R for Read&lt;br&gt;
The read function is similar to a search function. It allows users to search and retrieve specific records in the table and read their values. Users may be able to find desired records using keywords, or by filtering the data based on customized criteria. For example, a database of cars might enable users to type in "1996 Toyota Corolla", or it might provide options to filter search results by make, model and year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4I2vm9Oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjszx3g714ltdgfvsfi6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4I2vm9Oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjszx3g714ltdgfvsfi6.png" alt="Image description" width="637" height="145"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;U for Update&lt;br&gt;
The update function is used to modify existing records that exist in the database. To fully change a record, users may have to modify information in multiple fields. For example, a restaurant that stores recipes for menu items in a database might have a table whose attributes are "dish", "cooking time", "cost" and "price". One day, the chef decides to replace an ingredient in the dish with something different. As a result, the existing record in the database must be changed and all of the attribute values changed to reflect the characteristics of the new dish. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvTXz7Xy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h0kcaqay7xl64uagfzz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvTXz7Xy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5h0kcaqay7xl64uagfzz.png" alt="Image description" width="571" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D for Delete&lt;br&gt;
The delete function allows users to remove records from a database that is no longer needed. Both SQL and Oracle HCM Cloud have a delete function that allows users to delete one or more records from the database. Some relational database applications may permit users to perform either a hard delete or a soft delete. A hard delete permanently removes records from the database, while a soft delete might simply update the status of a row to indicate that it has been deleted while leaving the data present and intact.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a2SOIoCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qtzurmj06i9646m4hf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a2SOIoCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qtzurmj06i9646m4hf2.png" alt="Image description" width="572" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CRUD Operations table:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c3zydW0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgqn70km3e2chnbib7cx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c3zydW0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hgqn70km3e2chnbib7cx.png" alt="Image description" width="767" height="250"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>3 razones por las cuales debes comenzar a usar ya MGPanel</title>
      <author>Eloy Manuel Chacón Martínez</author>
      <pubDate>Fri, 24 Dec 2021 13:15:00 +0000</pubDate>
      <link>https://dev.to/eloymanuelch/3-razones-por-las-cuales-debes-comenzar-a-usar-ya-mgpanel-5736</link>
      <guid>https://dev.to/eloymanuelch/3-razones-por-las-cuales-debes-comenzar-a-usar-ya-mgpanel-5736</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qaAcxTtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ore0zopxrtqcg43z1j1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qaAcxTtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ore0zopxrtqcg43z1j1.jpeg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Holaaa Programador...   Si estas leyendo ¡te felicito! porque estas a punto de saber las razones por las cuales yo desarrollo paginas web en MGPanel, el como me ha ayudado a triplicar mis clientes y lo que es mejor a mantenerlos en el tiempo.  ¡Clientes felices, programador feliz!&lt;/p&gt;

&lt;p&gt;Bueno basta de chachara y vamos al grano, aunque antes... ¿qué es MGPanel?  MGPanel es un sistema de gestión de contenido o CMS por sus siglas en ingles (content management system) que lo que permite es facilitar la gestión del contenido dinámico de una web, es decir toda la información que esta posee y que puede cambiar constantemente.&lt;/p&gt;

&lt;p&gt;Ahora bien, eso pensando en el cliente final para que este pueda agregar publicaciones a su blog por ejemplo, pero los CMS también se convirtieron en la herramienta principal de los desarrolladores web (osea nosotros) para crear sitios más rápido, fácil y escalables.&lt;/p&gt;

&lt;p&gt;Entonces ¿por qué debo usar MGPanel YA? las razones son muy simples y como te dije esto me ayudó a triplicar mis cliente, a mantenerlos por el tiempo y por su puesto a ganar más dinero.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.- Libertad total para programar:&lt;/strong&gt; Con MGPanel tengo la oportunidad de usar mis propios HTML, CSS y Javascript, sin limite alguno, es decir ya no me tengo que preocupar si la plantilla no me permite modificar algo porque el diseño y desarrollo del sitio web depende solo de mi.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.- Control de todos mis clientes:&lt;/strong&gt; Con MGPanel tengo todos mis sitios web centralizados, con el cual puedo dar soporte a mis clientes en cualquier lugar y de forma más eficiente, basta solo con entrar a mi panel de administrador, seleccionar el sitio del cliente y realizar lo ajustes que me solicitó, ¡así de fácil!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.- Lo incluye todo:&lt;/strong&gt; Con MGPanel ya no me tengo que preocupar por instalar o mantener servidores, configurar SSL, subir archivos por FTP, en fin por nada de eso porque al crear un sitio en MGPanel automáticamente lo crea todo, ahora solo me dedico a lo que me gusta que es programar, conseguir más clientes y haaaa claro a ganar más dinero.&lt;/p&gt;

&lt;p&gt;Antes me la vivía luchando con los pluging, rezando para que al subir alguna actualización solicitada por el cliente la pagina web siguiera funcionando y ¿sabes qué? 6 de cada 10 paginas se dañaban al hacer algún cambio, eso hacia que tuviera que volver a programarla de nuevo (sin cobrar) y si no lo hacia,  que el cliente se molestara conmigo y lo perdiera como cliente, realmente era muy difícil mantener las páginas y por ende los clientes.&lt;/p&gt;

&lt;p&gt;Con MGPanel todo cambio tengo paginas hechas de hace más de 5 años (bueno con diseños de hace 5 años no pueden pedir mucho ja, ja, ja) y que jamás se han caído y que aún para el cliente cumple su función, lo que ha hecho que ese cliente este feliz y me recomiende con sus amigos, puedo realizar cambios sin preocuparme que se va a dañar porque es simplemente HTML y CSS que yo mismo escribí hace años atrás, realmente ha sido una bendición para mi.&lt;/p&gt;

&lt;p&gt;Entonces programador ¿quieres seguir amargándote la vida con otros CMS o quieres disfrutar de la programación mientras aumentas tus clientes y ganas mas dinero? si tu respuesta es que ya no quiere seguir lidiando con plugins y clientes quejándose porque sus paginas se dañaron, te invito a que ahora mismo crees tu cuenta en MGPanel aquí  e inicies una nueva etapa en el desarrollo web.&lt;/p&gt;

&lt;p&gt;Crea tu cuenta en MGPanel aquí: &lt;a href="https://app.mgpanel.org/signup"&gt;https://app.mgpanel.org/signup&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mgpanel</category>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>10 Best Python Libraries For Machine Learning</title>
      <author>Ashish Yadav</author>
      <pubDate>Fri, 24 Dec 2021 12:58:46 +0000</pubDate>
      <link>https://dev.to/expoashish/10-best-python-libraries-for-machine-learning-3fc6</link>
      <guid>https://dev.to/expoashish/10-best-python-libraries-for-machine-learning-3fc6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hey-guys-please-visit-my-website-to-read-such-kind-of-blogs"&gt;
  &lt;/a&gt;
  Hey guys please visit my website to read such kind of blogs.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-python-libraries-for-machine.html"&gt;Click Here to Read this Blog&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Web 1.0, Web 2.0 &amp; Web 3.0 Explained </title>
      <author>Narottam04</author>
      <pubDate>Fri, 24 Dec 2021 12:40:47 +0000</pubDate>
      <link>https://dev.to/narottam04/web-10-web-20-web-30-explained-591n</link>
      <guid>https://dev.to/narottam04/web-10-web-20-web-30-explained-591n</guid>
      <description>&lt;p&gt;We can all agree that the web has changed dramatically over the years, both as a consumer and as a developer. Thanks to advancements in the web, producing attractive websites and applications has never been easier.&lt;/p&gt;

&lt;p&gt;The purpose of this blog post is to explore the past of the web, as well as discuss the potential future of the web, i.e. web 3.0.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JCEE9oek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0c0djupxjetogtwh3kf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JCEE9oek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0c0djupxjetogtwh3kf.jpeg" alt="meme" width="600" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-10-beta"&gt;
  &lt;/a&gt;
  Web 1.0 Beta
&lt;/h2&gt;

&lt;p&gt;The concept of hypertext predates the World Wide Web by several decades. However, almost all hypertext systems relied on local files. Tim Berners-Lee wished to develop a system that could work across networks, allowing individuals to link from one file on one machine to another file on another.&lt;/p&gt;

&lt;p&gt;So in December 1990, he coded an app with &lt;strong&gt;Objective-C&lt;/strong&gt; for his next computer system and named it world wide web.&lt;/p&gt;

&lt;p&gt;WorldWideWeb was more than just a file-browsing application. It was both a browser and an editor. &lt;/p&gt;

&lt;p&gt;You can check the first worldwideweb browser: &lt;a href="https://worldwideweb.cern.ch/"&gt;https://worldwideweb.cern.ch/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IvkaSvHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1pe1919dtrp2n4mpy2s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IvkaSvHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1pe1919dtrp2n4mpy2s.png" alt="early browser" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-10"&gt;
  &lt;/a&gt;
  Web 1.0
&lt;/h2&gt;

&lt;p&gt;Web 1.0 was the first stage of the World Wide Web revolution, usually referred to as &lt;strong&gt;read-only web&lt;/strong&gt;. Websites were informational and contained only static content that was hyperlinked together or in simple words there was no CSS, dynamic links, interactivity like logging in the users, comments on the blog posts etc.&lt;/p&gt;

&lt;p&gt;The websites were built using &lt;a href="https://en.wikipedia.org/wiki/Server_Side_Includes"&gt;Server Side Includes&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface"&gt;Common Gateway Interface&lt;/a&gt; (CGI) instead of a web application written in a dynamic programming language such as Perl, PHP, Python or Ruby.&lt;/p&gt;

&lt;p&gt;In the era of Web 1.0 i.e. from 1991 to 2004, users on the internet were &lt;strong&gt;consumers&lt;/strong&gt; of content created by &lt;strong&gt;content creators&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O1K9fxiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu9rw9wt9ibi04oellqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O1K9fxiF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu9rw9wt9ibi04oellqs.png" alt="bbc news early 2010" width="880" height="699"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-20"&gt;
  &lt;/a&gt;
  Web 2.0
&lt;/h2&gt;

&lt;p&gt;Web 2.0 from 2004 till now, is the second stage of the World Wide Web revolution, usually referred to as &lt;strong&gt;read-write web.&lt;/strong&gt; Emphasis was given to user-generated content, ease of use, participatory culture and interoperability.&lt;/p&gt;

&lt;p&gt;Some of the early platform based on web 2.0 are YouTube, Facebook, Amazon and so on. Due to CMS technologies such as WordPress, blogging, creating a ecommerce shop became extremely popular.&lt;/p&gt;

&lt;p&gt;Web 2.0 brought about a fundamental shift, where people could share their perspectives, opinions, thoughts, and experiences through a variety of online tools and platforms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLwT8H8C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/expqsf4z2dj82sfjkhu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLwT8H8C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/expqsf4z2dj82sfjkhu2.png" alt="web 2.0" width="880" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-20-disadvantages"&gt;
  &lt;/a&gt;
  Web 2.0 Disadvantages
&lt;/h2&gt;

&lt;p&gt;Before looking at disadvantages let's see how a traditional web 2.0 application works.&lt;/p&gt;

&lt;p&gt;A client(user) will make a HTTP request to the server and if everything is correct it will send back that webpage as a response.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dF1M3Xje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8sldrv16p0thjup0oao.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dF1M3Xje--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8sldrv16p0thjup0oao.jpg" alt="http protocol" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A major flaw here is that all data is stored on a centralized server, controlled by the companies. &lt;/p&gt;

&lt;p&gt;Facebook, Google, and Twitter began storing users data in their servers so that they can serve us better content through machine learning. This in turn would make us stay on their websites longer, therefore providing more ad revenue for these companies.&lt;/p&gt;

&lt;p&gt;The companies eventually started selling our information to advertisers, which meant more money for them!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bbc.com/news/technology-46618582"&gt;Facebook's data-sharing deals exposed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To summarize web 2.0 we can say that &lt;strong&gt;users are the product.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-30"&gt;
  &lt;/a&gt;
  Web 3.0
&lt;/h2&gt;

&lt;p&gt;The web 3.0 concept aims to create a decentralized, but secure, internet in which people can securely exchange money and information, without the need for middlemen or big tech companies.&lt;/p&gt;

&lt;p&gt;Unlike Web 2.0 where data is stored in a single database or on a cloud provider, Web 3 applications either runs on blockchain, peer to peer nodes (servers). &lt;/p&gt;

&lt;p&gt;In contrast to web 2.0, where you are the product, some people predict that in web 3.0, you will be the content owner. According to web 3.0 specialists, the corporation will be run by a decentralised group known as a &lt;strong&gt;DAO (Decentralized Autonomous Organization)&lt;/strong&gt; removing the need of CEO’s and upper management in a company. Because your digital identity is not tied to your real identity in web 3.0, you can be anonymous on the internet while still living your usual life.&lt;/p&gt;

&lt;p&gt;An example of web 3.0 application is Obsidian for Whatsapp, Odyessy, LBRY  for YouTube, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hx2Zr-F7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj7vgbogswx29vi79juu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hx2Zr-F7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hj7vgbogswx29vi79juu.jpg" alt="web 3.0" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-the-buzz-surrounding-web-30-worth-it"&gt;
  &lt;/a&gt;
  Is the buzz surrounding Web 3.0 worth it?
&lt;/h2&gt;

&lt;p&gt;Varied people have different perspectives on this; some believe it is a hoax created by cryptocurrency traders, while others believe it is a real deal. In my opinion, blockchain and web 3.0 are still in an early stage of development and have a long way to go.&lt;/p&gt;

&lt;p&gt;Some valid current arguments as of writings are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The compute and bandwidth problem to scale blockchain. Here is an link to the article about it &lt;a href="https://www.stephendiehl.com/blog/web3-bullshit.html"&gt;https://www.stephendiehl.com/blog/web3-bullshit.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Mining is not eco-friendly and consumes a lot of energy to mine and verify transactions. Here's a Cambridge University article about it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.cisl.cam.ac.uk/resources/sustainability-horizons/september-2019/environmental-footprint-of-cryptocurrency"&gt;https://www.cisl.cam.ac.uk/resources/sustainability-horizons/september-2019/environmental-footprint-of-cryptocurrency&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.business-standard.com/article/pti-stories/bitcoin-use-causing-co2-emissions-comparable-to-las-vegas-study-119071900858_1.html"&gt;https://www.business-standard.com/article/pti-stories/bitcoin-use-causing-co2-emissions-comparable-to-las-vegas-study-119071900858_1.html&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Personal Opinion:&lt;/strong&gt; Creating an unregulated social media platform, such as YouTube or Facebook, where users can add any data but it cannot be erased, could be a double-edged sword. On the one hand, you have freedom of speech, but on the other hand, there may be people publishing explicit content that cannot be deleted by anybody. This can be highly dangerous unless there is a means to check if the information contains explicit content by machine. I would love to hear your opinion on this issue.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ZIv4hb_Swug&amp;amp;ab_channel=Fireship"&gt;Fireship video on early web 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wHTcrmhskto&amp;amp;ab_channel=Fireship"&gt;Fireship video on web 3.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stephendiehl.com/blog/web3-bullshit.html"&gt;Article about disadvantages of web 3.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Web_2.0"&gt;Wikipedia web 2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AJLnVv0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/l4pTjOu0NsrLApt0Q/giphy.gif%3Fcid%3Decf05e47dtlkk3fe19ovkz96zbsihgjhtu6injewu9oy5v8e%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AJLnVv0U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media.giphy.com/media/l4pTjOu0NsrLApt0Q/giphy.gif%3Fcid%3Decf05e47dtlkk3fe19ovkz96zbsihgjhtu6injewu9oy5v8e%26rid%3Dgiphy.gif%26ct%3Dg" alt="https://media.giphy.com/media/l4pTjOu0NsrLApt0Q/giphy.gif?cid=ecf05e47dtlkk3fe19ovkz96zbsihgjhtu6injewu9oy5v8e&amp;amp;rid=giphy.gif&amp;amp;ct=g" width="480" height="360"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've been learning about blockchain for about two weeks now, and while I don't believe it is yet at the level where it can transform the entire web, I do find the idea and the conecpt of blockchian and decentralized web intriguing. This is the first post in a series on blockchain, so if you're interested in learning more about this technology, keep a watch out for my article next week, in which I'll explain blockchain using animated gifs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/narottam"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B27TArar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dnarottam%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DPoppins%26outline_colour%3D000000%26coffee_colour%3Dffffff" width="235" height="50"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more such insights, checkout my blog website &lt;a href="http://blog.webdrip.in/"&gt;blog.webdrip.in&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>blockchain</category>
      <category>web3</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Difference between export as class and object in javascript ?</title>
      <author>Avinash Dalvi</author>
      <pubDate>Fri, 24 Dec 2021 11:37:33 +0000</pubDate>
      <link>https://dev.to/this-is-learning/difference-between-export-as-class-and-object-in-javascript--13f5</link>
      <guid>https://dev.to/this-is-learning/difference-between-export-as-class-and-object-in-javascript--13f5</guid>
      <description>&lt;p&gt;Hello Devs,&lt;/p&gt;

&lt;p&gt;Here I am going to share what I learn from my fellow colleague while working on react application. I generally start using some concept whichever I learn recently ( generally whichever I learned I kept like arrows in quiver and whichever depends on the instance I used it ) then implement whatever requirement comes. But sometimes that concept may not be useful or best to use. This is what I learned. &lt;/p&gt;

&lt;p&gt;Long back ago I learned to use singleton class for some third party initiation code. So,  I used many times as class but one problem was addressed by colleague is everything is Javascript is object based even if we use finally it converted to object based only then if can be done simple object based approach will help to reduce lines of code and simpler approach.  Instead we should use export as object which will be a simpler approach and less code line compared to class based approach. &lt;/p&gt;

&lt;p&gt;Let me explain how to export as a class and object.&lt;/p&gt;

&lt;p&gt;First see how to export as class or singleton class : &lt;br&gt;
Below sample code is singleton class and it exports as default singleton class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// ExampleClass.js

export default class ExampleClass {
  constructor() {
    if (this.constructor.instance) {
      return this.constructor.instance;
    }
    this.constructor.instance = this;
  }

  /**
   * @name ExampleClass#setData
   * Role of this function is to set data
   * @param {Object} data
   */
  setData(data) {
    this.data = data;
  }

  /**
   * @name ExampleClass#getData
   * Role of this function is to get data
   * @returns {Object} data
   */
  getData() {
    return this.data;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This class we will import in another file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Samplefile.js
import ExampleClass from 'ExampleClass';
const obj = new ExampleClass();
const data = {};
obj.setData(data);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Samplefile1.js

import ExampleClass from 'ExampleClass';
const obj = new ExampleClass();
const data = obj.getData();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, when we use an import statement and create a new object whether class is singleton or normal class. When bundling whole code either Angular or React or other framework it adds code lines from &lt;code&gt;ExampleClass.js&lt;/code&gt; to each file wherever instance got created. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-avoid-this-"&gt;
  &lt;/a&gt;
  How to avoid this ?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65WObVDU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639750816229/pEMEIq78m.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65WObVDU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639750816229/pEMEIq78m.gif" alt="hmm-thinking.gif" width="640" height="560"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Answer is we can export as objects. Because import as an object we don't need to create an instance of it. Occurrence of code line from exported object will be one time in bundle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Example.js

const example = {
  data: {},
};

export default {

  setData(token, isIVToken = false) {
    example.data = {
      key: 'value'
    }
  },

  getData() { 
    return example.data
  },
};

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Actually as I said earlier everything is object only in Javascript. Only other approaches evolve based on condition and demand of projects like class, singleton or object based. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; :  This is what I learned recently. We have to use an approach based on the situation. Nothing like which one is best. &lt;/p&gt;

&lt;p&gt;Hope this blog helps you. If you like my blog please don't forget to like the article. It will encourage me to write more such learning related blogs. You can reach out to me over my twitter handle &lt;a href="https://twitter.com/Aviboy2006"&gt;@aviboy2006&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to comment if anything is wrong in this blog. I am happy to learn and correct.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Still Deep in Type Hierarchy Hell Code, Building DDTJ - Day 5</title>
      <author>Shai Almog</author>
      <pubDate>Fri, 24 Dec 2021 11:27:20 +0000</pubDate>
      <link>https://dev.to/codenameone/still-deep-in-type-hierarchy-hell-code-building-ddtj-day-5-19ho</link>
      <guid>https://dev.to/codenameone/still-deep-in-type-hierarchy-hell-code-building-ddtj-day-5-19ho</guid>
      <description>&lt;p&gt;Yesterday I was &lt;a href="https://dev.to/codenameone/end-to-end-debug-object-modeling-first-hard-problem-in-building-ddtj-day-4-179h"&gt;running into a roadblock&lt;/a&gt; which unfortunately I still didn't clear today... &lt;/p&gt;

&lt;p&gt;There’s a point in project development where you feel a bit like those war movie scenes. The hero is surrounded and is just fighting left and right; it seems hopeless, and it’s unclear how they’ll survive. This is where I am right now with DDTJ, deep in the swamp, with a hard to model problem. &lt;/p&gt;

&lt;p&gt;Unfortunately, it doesn’t make for great writing. I can’t really communicate what I’m doing because a lot of it is just “shooting left and right”. The code I write is pretty bad since I’m trying to “get something working” and to be fair, I keep changing my mind. Hopefully, when I get something working, I’ll have the motivation to do a cleanup. But those are pretty hard to do for a spare time project. &lt;/p&gt;

&lt;p&gt;One question I got is “why don’t you just use the JDI object model?”. &lt;/p&gt;

&lt;p&gt;JDI (Java Debug Interface) already did all the work I’m doing. At first I felt it was over-designed but now I appreciate it more (it’s a tough problem). Unfortunately, I can’t reuse their object model. If I could, it would save me a ton of work. But their model isn’t the actual data. It’s tied to a remote VM state. So as the application continues its execution, the data is lost. &lt;/p&gt;

&lt;p&gt;I need to replicate remote VM data locally so I can have it later when I want to generate a test case based on that data. That means doing something similar to what they did. But also pretty different. I need to transfer all the remote state information to my local VM. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#that-doesnt-sound-too-hard"&gt;
  &lt;/a&gt;
  That Doesn’t Sound too Hard
&lt;/h2&gt;

&lt;p&gt;It isn’t when your object model only includes basic building blocks. But it becomes pretty hard when you need to mirror entire object graphs which are built from classes you don’t have in your local VM. If you’re thinking about fetching the classes to the local VM, that’s probably not the right idea. &lt;/p&gt;

&lt;p&gt;Classes don’t work in isolation, you can’t just pull one class without pulling the entire application. Adding the entire application to the current VM is again... Not a good idea. It will break isolation and create a situation where we can affect execution significantly. &lt;/p&gt;

&lt;p&gt;So the solution is to use the JDI API to take a full snapshot of the state with everything we’ll need later to generate the code. That also includes method/class meta-data. The complexity is mostly in the way we store the data and interact with this API. A lot of the code I write looks very “ugly”.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dealing-with-project-stalls"&gt;
  &lt;/a&gt;
  Dealing with Project Stalls
&lt;/h2&gt;

&lt;p&gt;I made little progress today. I was debating posting this day at all, but I think it’s important that people read about the short-term failures as much as on the success.&lt;/p&gt;

&lt;p&gt;Every decently complex project has a grunt/uncertainty phase. You still don’t know if you’ll make it on the other side of the tunnel and have something “good”. Unfortunately, there’s no real cure for that. But there are strategies to “manage” this and avoid a long setback.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iterative-process"&gt;
  &lt;/a&gt;
  Iterative Process
&lt;/h3&gt;

&lt;p&gt;When you start a project from scratch, you’re effectively in front of an empty canvas. There’s nothing there and you can’t yet see your creation. Frustration and despair are common before you see something running. That’s why it’s important to aim much lower than your eventual goal.&lt;/p&gt;

&lt;p&gt;We need to avoid “theorized” problems, such as performance optimizations, unnecessary features, etc. Stick to the MVP religiously, even at the cost of rewriting extensive parts of the code later on. You’re better off writing bad code and throwing it away if you reach an intermediate goal. &lt;/p&gt;

&lt;p&gt;This maps very well to the concept of sprints. I’m not a big methodology fan and feel that people sometimes apply these processes too religiously. But the idea of aiming for short term quantifiable goals is powerful. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shortcuts-and-stopgaps"&gt;
  &lt;/a&gt;
  Shortcuts and Stopgaps
&lt;/h3&gt;

&lt;p&gt;Hacks, or halfway points, are an excellent way to get something working. Right now, I’m mostly ignoring the test generation aspect of the project and only focusing on the data collection portion. &lt;/p&gt;

&lt;p&gt;I also picked other shortcuts by avoiding a web interface and focusing only on the CLI for now. We can update later a lot of these decisions, but getting the first running version is crucial. Once you have things running, progress will speed up and compensate for any detours you took for these shortcuts/stopgaps.&lt;/p&gt;

&lt;p&gt;It’s important to file issues for fixing such shortcuts/stopgaps. I don’t bother doing this on a single developer project (because I’m lazy). But if you’re doing this as part of your job, it's important. A good project manager would schedule some of your time for code cleanup and will make sure to revert to these issues.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backtracking"&gt;
  &lt;/a&gt;
  Backtracking
&lt;/h3&gt;

&lt;p&gt;This is the hardest thing to do. We sometimes take the wrong direction and spend too much time trying to get it to work.&lt;/p&gt;

&lt;p&gt;It might be the “right direction” for the finished product. But for a sprint it might be too much. Unfortunately, once we started in a direction that seems “right” in the long term. It’s very hard to stop and throw away “correct code” in order to do what is effectively a hack. &lt;/p&gt;

&lt;p&gt;This is something that sometimes works. It just takes a lot of effort. In this case, I’m conflicted if the data collection logic I’m trying to implement is over-engineered for this stage of the project. I can’t see a simpler solution that would actually work, but if there was a shortcut, I would take it...&lt;/p&gt;

&lt;p&gt;One thing I might need to backtrack is my focus on quality and testing. I think I might need to put the quality aspect on hold and ignore code coverage for now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-week"&gt;
  &lt;/a&gt;
  Next Week
&lt;/h2&gt;

&lt;p&gt;I was hoping to have something running this weekend as a Christmas present... These hopes crashed against the harsh reality and constrained time because of family obligations. I have a feeling I would have made it if I was working at an office. &lt;/p&gt;

&lt;p&gt;I hope to get data collection working early next week, otherwise code generation just wouldn’t happen and the whole experiment would tank. I’m not sure when I’ll be able to get time off work to finish such an extensive project if I don’t do this now, so this is pretty crucial. &lt;/p&gt;

&lt;p&gt;In retrospect, for this week I feel I spent too much time on coverage and quality, which was probably the wrong thing to do at this early stage. Usually, I only add these tools later on when the project is functional.&lt;/p&gt;

&lt;p&gt;I’m holding off on this decision. I want to see how next week starts and where I’m at. &lt;/p&gt;

&lt;p&gt;If you find this series interesting/useful feel free to &lt;a href="https://twitter.com/debugagent"&gt;follow me on twitter&lt;/a&gt;...&lt;/p&gt;

</description>
      <category>startup</category>
      <category>tutorial</category>
      <category>java</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Adding a React Components Package to a Monorepo</title>
      <author>Matti Bar-Zeev</author>
      <pubDate>Fri, 24 Dec 2021 11:19:45 +0000</pubDate>
      <link>https://dev.to/mbarzeev/adding-a-react-components-package-to-a-monorepo-3ol5</link>
      <guid>https://dev.to/mbarzeev/adding-a-react-components-package-to-a-monorepo-3ol5</guid>
      <description>&lt;p&gt;In this post I will be adding a React components package to an existing monorepo (along with Storybook) and automatically publishing it to NPM using GitHub actions, with a somewhat &lt;em&gt;disturbing&lt;/em&gt; surprise at the end ;) &lt;br&gt;
The monorepo is my “Pedalboard” monorepo which is described in more detail in &lt;a href="https://dev.to/mbarzeev/no-bs-monorepo-part-1-3c3a"&gt;this post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The component I chose to add is my worn down, truly nothing to write back home about, &lt;strong&gt;Pagination&lt;/strong&gt; component, but hey - still a React component :) let’s get started - &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I will do this manually though I recommend that if your monorepo is supposed to be used by many developers and hold many components, you should have a sort of a package generator for it, so that the packages created are aligned and the dev experience is good. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I will start with adding a “components” directory under the “packages” directory, and in it an “src” directory.&lt;br&gt;
Then I will cd that directory and initialize yarn like so -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;packages/components &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; yarn init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the initial package.json was created, I will change its name to include the &lt;code&gt;@pedalboard&lt;/code&gt; namespace, add Jest and Eslint as dev dependencies and mark its publish config as “public” (so it will not inherit the root project’s “private” configuration). Here is how my package.json looks like now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"@pedalboard/components"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"0.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A set of well-crafted components"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Matti Bar-Zeev"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MIT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"publishConfig"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"access"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"public"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Still no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eslint ./src"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"eslint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^8.4.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"jest"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^27.4.3"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;(We are still not running any tests so the yarn test script is does nothing)&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;I will also create an “index.js” file in the root directory of the package which will act as the export barrel for all the future components this package will have.&lt;/p&gt;

&lt;p&gt;As mentioned, the component is the Pagination component, which is a simple component for pagination (You can read more details about it in &lt;a href="https://dev.to/mbarzeev/from-render-props-to-hooks-mkc"&gt;a previous post&lt;/a&gt;, where I migrated it from render-props to Hooks). &lt;br&gt;
It is a React component so we start with fetching React and ReactDOM packages as dependencies, but these are &lt;em&gt;peer dependencies&lt;/em&gt; since we assume that whomever will use this components package will do it from a project which already has them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Yarn add react react-dom &lt;span class="nt"&gt;-P&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now I will add my component’s source code to the Pagination directory (you can check the &lt;a href="https://github.com/mbarzeev/pedalboard/tree/master/packages/components/src/Pagination"&gt;GitHub repo for the source code&lt;/a&gt;), but while we have the entire logic for the component we still don’t have any means to render it on screen. For this purpose I would like to have Storybook for my components - let’s get that working for us:&lt;/p&gt;

&lt;p&gt;Following &lt;a href="https://storybook.js.org/docs/react/get-started/install"&gt;Storybook’s doc&lt;/a&gt;s I will init it on the components package -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx sb init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Right… all of the Storybook dependencies were hoisted to the root project’s node_modules (we’re using Yarn Workspaces, remember?), and I got a new “stories” directory under the “src” directory of the components package.&lt;br&gt;
In addition to that, the init process added 2 new npm scripts to my package.json file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"storybook"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"start-storybook -p 6006"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"build-storybook"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"build-storybook"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I guess it is time to see if anything works, right?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Yarn storybook
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Yep!&lt;/strong&gt; We’re up and running with some out-of-the-box stories.&lt;br&gt;
It is time to write my own story for the Pagination component just to make sure it all works as expected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Pagination&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../Pagination&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Example/Pagination&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Pagination&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="c1"&gt;// More on argTypes: https://storybook.js.org/docs/react/api/argtypes&lt;/span&gt;
 &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;onPageChange&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt; &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Page changed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Pagination&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Simple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;span class="c1"&gt;// More on args: https://storybook.js.org/docs/react/writing-stories/args&lt;/span&gt;
&lt;span class="nx"&gt;Simple&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;pagesCount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;pagesBuffer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is my component:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SQeLAJip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1cba440q3idv2580zd8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQeLAJip--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u1cba440q3idv2580zd8.png" alt="Image description" width="880" height="296"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Nothing too fancy with some functionality issues, but this is a good start :) I have a component on my monorepo which gets included in my component catalog (a.k.a Storybook).&lt;/p&gt;

&lt;p&gt;Before we go and commit these changes, let’s set our ESlint configuration for this package to suit the React nature of it. I will add the &lt;code&gt;eslint-plugin-react&lt;/code&gt; plugin to the package’s dev dependencies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yarn add eslint-plugin-react &lt;span class="nt"&gt;-D&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And my .eslintrc.json looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"browser"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"commonjs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"extends"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"eslint:recommended"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"plugin:react/recommended"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"parserOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"ecmaVersion"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"sourceType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"module"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="nl"&gt;"ecmaFeatures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
           &lt;/span&gt;&lt;span class="nl"&gt;"jsx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
       &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(sourceType as modules to support ESM import/export and ecmaFeatures including “jsx” for React)&lt;/p&gt;

&lt;p&gt;So if I push this components package to my GitHub repo, will it get published as part of my Monorepo’s GitHub action? Let’s check - &lt;/p&gt;

&lt;p&gt;I add all the changes and give my commit message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;feat: Add the first component to the components package
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;GutHub action starts the pipeline, and sure enough it got published to NPM:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g9Hl4jSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9be6x73jw67eoj3yx21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g9Hl4jSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9be6x73jw67eoj3yx21.png" alt="Image description" width="880" height="239"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Nice :)&lt;/p&gt;

&lt;p&gt;Wait… I’m noticing that although I did not change the other package I have on the monorepo (eslint-plugin-craftsmanslint) it still got version bumped and published to NPM. This is a &lt;em&gt;disturbing&lt;/em&gt; surprise. Why is this happening?&lt;br&gt;
From this &lt;a href="https://stackoverflow.com/questions/60180630/lerna-always-lists-all-packages-ready-to-publish-when-running-workflow-of-github"&gt;thread&lt;/a&gt; I’m learning that it might be to do with the fact that when the GitHub action checks out the code it does not fetch the entire tags history with it, and therefore Lerna has a hard time determining what really changed. So I’m adding to the checkout command on the npm-publish.yml that instruction.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;fetch-depth&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s try now to publish some fixes to the components package and see if only the components package gets updated and published. I added an empty test just for the sake of it, and pushed it…&lt;/p&gt;

&lt;p&gt;Yes! Only the components package was published.&lt;/p&gt;

&lt;p&gt;So there we have it:&lt;br&gt;
A new components package under the Pedalboard monorepo with a single (and quite ugly I admit)  component in it. We also have a cool Storybook catalog which can display this component and any future one to come. We have Eslint working and even an empty test ;) we made sure that only the packages that were changed get published to npm by fetching all the tags history when checking out the code on our GitHub action and… I think that this is it.&lt;/p&gt;

&lt;p&gt;Of course, all recent code resides on the &lt;a href="https://github.com/mbarzeev/pedalboard"&gt;Pedalboard monorepo&lt;/a&gt; so you can check the recent code changes there, and as always if you have any ideas on how to make this better or any other technique, be sure to share with the rest of us!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hey! If you liked what you've just read check out &lt;a href="https://twitter.com/mattibarzeev?ref_src=twsrc%5Etfw"&gt;@mattibarzeev&lt;/a&gt; on Twitter&lt;/em&gt; 🍻&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;small&gt;&lt;small&gt;Photo by &lt;a href="https://unsplash.com/@nahakiole?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Robin Glauser&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/components?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/small&gt;&lt;/small&gt;&lt;/small&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>github</category>
    </item>
    <item>
      <title>Every React Developer Should Know The Fundamental Concepts Of React.js</title>
      <author>Nazma Khatun Nishe</author>
      <pubDate>Fri, 24 Dec 2021 10:59:46 +0000</pubDate>
      <link>https://dev.to/nisheshoha/every-react-developer-should-know-the-fundamental-concepts-of-reactjs-54</link>
      <guid>https://dev.to/nisheshoha/every-react-developer-should-know-the-fundamental-concepts-of-reactjs-54</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o6PzPXha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrza1gxuxcihy24v5aqj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o6PzPXha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrza1gxuxcihy24v5aqj.jpg" alt="Image description" width="880" height="880"&gt;&lt;/a&gt;Optimize performance of the React application:-&lt;br&gt;
React is defined as a JavaScript library for building user interfaces. There are many ways to speed up your react application.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the Production Build-
If you’re facing performance problems in your React apps, make sure you’re testing with the minified production build. By default, React includes many helpful warnings. These warnings are very useful in development. However, they make React larger and slower so you should make sure to use the production version when you deploy the app.
You can check it by installing React Developer Tools for Chrome. If you visit a site with React in production mode, the icon will have a dark background:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you visit a site with React in development mode, the icon will have a red background:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;useMemo( ) :-&lt;br&gt;
This is a React hook that is used to cache functions in React, CPU-expensive functions.&lt;br&gt;
Now see an example:&lt;br&gt;
function App() {&lt;br&gt;
const [count, setCount] = useState(0)&lt;/p&gt;

&lt;p&gt;const expFunc = (count)=&amp;gt; {&lt;br&gt;
    waitSync(3000);&lt;br&gt;
    return count * 90;&lt;br&gt;
}    const resCount = useMemo(()=&amp;gt; {&lt;br&gt;
    return expFunc(count)&lt;br&gt;
}, [count])    return (&lt;br&gt;
    &amp;lt;&amp;gt;&lt;br&gt;
        Count: {resCount}&lt;br&gt;
         setCount(e.target.value)} placeholder="Set Count" /&amp;gt;&lt;br&gt;
    &amp;lt;/&amp;gt;&lt;br&gt;
)&lt;br&gt;
}&lt;br&gt;
The expFunc results will be cached against the input when the same input occurs again useMemo will skip calling the expFunc and return the output cached against the input.&lt;br&gt;
This will make the App component highly optimized.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Virtualize long lists:&lt;br&gt;
If you render large lists of data, it is recommended that you render only a small portion of the datasets within the visible viewport of a browser, then the next data are rendered as the lists are scrolled called “windowing”. Awesome React libraries have been built for this, there is the react-window and react-virtualized by Brian Vaughn.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid Reconciliation:&lt;br&gt;
React compares the newly returned elements with the previously rendered ones by comparing a snapshot of a new object with the last updated object. This way React has to update only changed nodes in React DOM&lt;br&gt;
This whole process is how to React updates DOM which is called Reconciliation.&lt;br&gt;
This process is way faster than Real DOM manipulation.&lt;br&gt;
Even though React is clever enough to update only changed nodes. But when props and state change, re-rendering takes place which takes some time.&lt;br&gt;
So we need to avoid unnecessary re-rendering for such cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Power Of Not Mutataing Data:&lt;br&gt;
You should avoid object mutations and instead create a new object. The reason for this design pattern is because React will start by doing a shallow check to see if the snapshots of your state object are the same. Mutable data types like arrays and objects can be updated without creating new copies. As a result, React must traverse these structures comparing all the values to determine if a change has occurred.&lt;br&gt;
The solution to this problem is to follow a more functional approach to setState ( ) updates. Strings and Numbers are non-issues as they are immutable, however, it can be tempting to update an array for example for just pushing a new value onto the end.&lt;br&gt;
The following is the preferred way for updating arrays in React:&lt;br&gt;
// Adding to end of array// Bad&lt;br&gt;
this.state.arr.push('foo');// Good&lt;br&gt;
this.setState({&lt;br&gt;
arr: [...this.state.arr, 'foo']&lt;br&gt;
})// Adding to middle of an array// Bad&lt;br&gt;
this.state.arr[3] = 'foo';//Good&lt;br&gt;
this.setState({&lt;br&gt;
arr: this.state.arr.map((item, index) =&amp;gt; index === 3 ? 'foo' : item)&lt;br&gt;
})// Array deletion// Bad&lt;br&gt;
this.state.arr.splice(2,1)// Good&lt;br&gt;
this.setState({&lt;br&gt;
arr: this.state.arr.filter((item, index) =&amp;gt; index !== 2 )&lt;br&gt;
})&lt;br&gt;
5 things you need to know about React&lt;br&gt;
If you are in the middle of learning it right now, you might be interested in reading this post.&lt;br&gt;
1) It’s not a framework&lt;br&gt;
Angular and other frameworks where some decisions are already made for you. React is just a library and you need to make all decisions by yourself. It helps you to build user interfaces.&lt;br&gt;
It doesn’t help you with server communication, translations, routing, and so on. Some perceive this as a weakness. React is thin and it’s extremely easy to mix it with other 3rd party libraries.&lt;br&gt;
2) JSX&lt;br&gt;
If you looking at React examples you’ve seen JSX in action already. But React code can be written in plain js too.&lt;br&gt;
const rootElement =&lt;br&gt;
React.createElement(‘div’, {},&lt;br&gt;
React.createElement(‘h1’, {style: {color: ‘red’}}, &lt;br&gt;
 ‘The world is yours’),&lt;br&gt;
React.createElement(‘p’, {}, &lt;br&gt;
 ‘Say hello to my little friend’)&lt;br&gt;
)&lt;br&gt;
ReactDOM.render(rootElement, document.getElementById(‘app’))&lt;br&gt;
The people at Facebook came up with JSX — a “syntactic sugar for the React.createElement(component, props, …children) function”.That’s why we can refactor the above example to this:&lt;br&gt;
const RootElement = (&lt;/p&gt;


&lt;h1&gt;The world is yours&lt;/h1&gt;
&lt;p&gt;Say hello to my little friend&lt;/p&gt;


&lt;p&gt;)&lt;br&gt;
ReactDOM.render(RootElement, document.getElementById('app'))&lt;br&gt;
During the build process, Babel will transpile the markup to plain JS.&lt;br&gt;
3) It’s declarative&lt;br&gt;
In React you can use declarative style to write your components.&lt;br&gt;
&lt;br&gt;
{somearray.map(element =&amp;gt; &lt;br&gt;
                          {element.text}&lt;br&gt;
                        )}&lt;br&gt;
&lt;br&gt;
In this  example you are not using for loop to manually create a mapped collection. You are not saying what should be done just how it should look like.&lt;br&gt;
4) You separate the concerns&lt;br&gt;
In React you keep HTML, JS, and often CSS together as a component. You also split JS, HTML, and CSS into different files. “If you keep HTML and JS in separate files you can easily replace the HTML and keep the JS intact”. It doesn’t work that way if you think about it. Most changes to the HTML structure require refactoring of JS logic.&lt;br&gt;
5) State&lt;br&gt;
It’s needed to create a stateful component where the state is changing over time.&lt;br&gt;
const InputBox = React.createClass({&lt;br&gt;
getInitialState () {&lt;br&gt;
return {&lt;br&gt;
  text: ''&lt;br&gt;
}&lt;br&gt;
},&lt;br&gt;
changeText (event) {&lt;br&gt;
this.setState({text: event.target.value})&lt;br&gt;
},&lt;br&gt;
render () {&lt;br&gt;
return (&lt;br&gt;
  &lt;br&gt;
    
      placeholder='text' value={this.state.text} /&amp;gt;&lt;br&gt;
    &lt;span&gt;{this.state.text}&lt;/span&gt;&lt;br&gt;
  &lt;br&gt;
)&lt;br&gt;
}&lt;br&gt;
})&lt;br&gt;
The state update will be scheduled and the component will re-render when it’s done. setState() call needs to be used to inform React about pending state change so it can apply the changes.&lt;br&gt;
Asif Hasan Irfan&lt;br&gt;
I'm a junior web developer. JavaScript is my favorite programming language. As a programmer, I love taking on challenges and love being part of the solution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Follow&lt;/p&gt;

&lt;p&gt;Your journey starts here.&lt;/p&gt;

&lt;p&gt;Bros., Lecce: We Eat at The Worst Michelin Starred Restaurant, Ever&lt;/p&gt;

&lt;p&gt;My 2021 End of Year Lists&lt;br&gt;
Here’s my annual list of favorite books, music, and movies. Art always sustains and nourishes the soul. But for me, music and storytelling…&lt;br&gt;
MONEY&lt;/p&gt;

&lt;p&gt;Sorry, but the Mother of All Crashes Is Coming and It Won’t Be Fun&lt;br&gt;
MATH&lt;/p&gt;

&lt;p&gt;The Shortest Scientific Papers Ever Published&lt;br&gt;
React&lt;br&gt;
React Performance&lt;/p&gt;

&lt;p&gt;More from Nazma Khatun Nishe&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Follow&lt;/p&gt;

&lt;p&gt;I'm a junior web developer. JavaScript is my favorite programming language. As a programmer, I love taking on challenges and love being part of the solution.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
