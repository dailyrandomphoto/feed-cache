<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Colorize your CLI output in Node.js</title>
      <author>coder4life</author>
      <pubDate>Tue, 12 Oct 2021 18:31:51 +0000</pubDate>
      <link>https://dev.to/coder4_life/colorize-your-cli-output-in-nodejs-2c1p</link>
      <guid>https://dev.to/coder4_life/colorize-your-cli-output-in-nodejs-2c1p</guid>
      <description>&lt;p&gt;Tired of the same boring console.log output? Need to highlight some output in cli app? Here you will get some examples for red, yellow, and green colored output.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/m56GZTSXcKs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Python - Input and Output</title>
      <author>Introschool</author>
      <pubDate>Tue, 12 Oct 2021 18:24:21 +0000</pubDate>
      <link>https://dev.to/introschool/python-input-and-output-3amc</link>
      <guid>https://dev.to/introschool/python-input-and-output-3amc</guid>
      <description>&lt;p&gt;&lt;strong&gt;Input and Output&lt;/strong&gt;&lt;br&gt;
In this section, we will learn about how to take input and give output in Python. Till now we were writing static programs, it means that we were not taking any input from the user.&lt;/p&gt;

&lt;p&gt;But in the real world, A developer often interacts with the user, in order to get data or show the user some result. For example, you are making a program which takes a name as an input from the user and shows a greeting message with the user‚Äôs name on the screen. For this program, you need to know two things. First, how to take input from the user and second is how to show output. &lt;/p&gt;

&lt;p&gt;Python provides lots of built-in functions. We will discuss Functions in detail later in the course. But for now, Functions are a reusable unit of code that is designed to perform single or related actions.  You have already seen a &lt;strong&gt;print()&lt;/strong&gt; function that is used to show output. Similarly, there is built-in function &lt;strong&gt;input()&lt;/strong&gt; for taking input from the user.&lt;br&gt;
How to Take Input from the User&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Take Input from the User&lt;/strong&gt;&lt;br&gt;
We will use Python‚Äôs built-in function &lt;strong&gt;input()&lt;/strong&gt; for taking input from the user. Let‚Äôs see how it works.&lt;br&gt;
Input takes a string as an optional parameter. Usually it's a description of what input you want to take from the user. See the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# get the name from a user
name = input('Enter your name : ') 
Enter your name : 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you try to run this program the following thing will happen:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you execute input() function, the program will stop until the user provides the required input.&lt;/li&gt;
&lt;li&gt;Once user enters the name it will save it in the variable &lt;strong&gt;name.&lt;/strong&gt;
&lt;strong&gt;How To Show Output&lt;/strong&gt;
Now we have the user input that we can show on the input. To show input on the screen we use Python‚Äôs built-in function print() is used&lt;/li&gt;
&lt;li&gt;In print function, you can pass multiple objects in the print functions
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# print() function

print(2, 'helo', 3, True)
# Output: 2 hello 3 True

a = 2,

print('a =', a)
# Output
# a = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using &lt;strong&gt;sep&lt;/strong&gt; and &lt;strong&gt;end&lt;/strong&gt; parameter in print function.&lt;br&gt;
&lt;strong&gt;sep&lt;/strong&gt;&lt;br&gt;
    The sep parameter is used to separate objects. Default value is a space character(‚Äò ‚Äò).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# sep 

print(2, 'Hello', 3, True, sep=', ')
# Output: 2, Hello, 3, True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;br&gt;
The end parameter is printed at the last.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# end

a = 'Hello world'
print('a =', a, end='!')
# Output: a = Hello world!

print('code =', 3, sep='0', end='0')
# output: code =030
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>#7 Best Artificial intelligence technologies and there Websitesüî•</title>
      <author>Deepak Gupta</author>
      <pubDate>Tue, 12 Oct 2021 17:54:17 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-2p9o</link>
      <guid>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-2p9o</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone! üñ§
&lt;/h1&gt;

&lt;p&gt;In this article, we look into Best Artificial intelligence technologies.&lt;br&gt;
We are using Artificial intelligence in our daily life I will tell you the best #7th website of the artificial intelligence it's help you to grow and build your knowledge.&lt;br&gt;
.&lt;br&gt;
Website are are given below and disruption also.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1robotic-process-automation"&gt;
  &lt;/a&gt;
  1.&lt;a href="https://www.turbotic.com/campaigns/robotics-operations-center?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Se8atXKde8vsqTV23wLSVqGJi2Rgi-gHu3N-IKKZ6jtvoazKSdKlTsaArgBEALw_wcB"&gt;Robotic Process Automation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Robotic process is the process of the machine work in our world every place to using this AI to saving time and making process easy.&lt;br&gt;
.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2cyber-defense"&gt;
  &lt;/a&gt;
  2.&lt;a href="https://www.google.com/search?q=cyber+defense+artificial+intelligence&amp;amp;client=ms-android-vivo&amp;amp;sxsrf=AOaemvL4EpPYi4ctNMhmmAO55Q2qhIbzyw%3A1634022805536&amp;amp;ei=lTVlYYaGILib4t4P1KGhGA&amp;amp;oq=Cyber+Defense+art&amp;amp;gs_lcp=ChNtb2JpbGUtZ3dzLXdpei1zZXJwEAEYADIGCAAQFhAeMgYIABAWEB4yBQghEKABOgQIABBHOg0ILhDHARDRAxBDEJMCOgQIABBDOgoILhDHARDRAxBDOgUIABCABDoICAAQgAQQyQNQljFYgTpguURoAHABeACAAZICiAHVBpIBBTAuMi4ymAEAoAEByAEIwAEB&amp;amp;sclient=mobile-gws-wiz-serp#fpstate=form_ad_n1s0p1"&gt;Cyber Defense&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Cyber Defense is the Cyber Security to save and protect your data and personal thing from the hacker's.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3machine-learning-platforms"&gt;
  &lt;/a&gt;
  3.&lt;a href="https://www.simplilearn.com/sem-landing/master-program/bundle_id/117/template/2?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_term=%2Bmachine%20%2Blearning&amp;amp;utm_content=1428905907-78938469271-362537006817&amp;amp;utm_device=m&amp;amp;utm_campaign=Search-DataCluster-DSAI-AIML-IN-Main-AllDevice-adgroup-AIML-Machinelearning-Course-BMM-New&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScDBtTYsGlu3H2y8AseAbEOB880mODf4DSc3wIhSiJKSjsiR_F4gosaAhWXEALw_wcB"&gt;Machine Learning Platforms&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Machine Learning Platforms&lt;br&gt;
A platform for automating and accelerating the delivery lifecycle of predictive applications capable of processing big data using machine learning or related techniques.‚Äù&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4biometrics"&gt;
  &lt;/a&gt;
  4.&lt;a href="https://www.kentcam.com/camattendance/?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScnSa4-0o8Qpgwqy16W1BsFCcGQoygil5hJaRTA3A48Px2tYwCBfosaAqKrEALw_wcB"&gt;Bio-metrics&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Biometrics is one of the AI which is Using your daily life example; school, company, factories, college etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5emotion-recognition"&gt;
  &lt;/a&gt;
  5.&lt;a href="https://www.neom.com/en-us/whatistheline?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=2195_AO_RPL_Search_Clicks_IN_CPC_Text_T1_EN_27Apr21_30Nov21_3242_SmartCity&amp;amp;utm_content=SmartCity&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Sd0WoSvj9Y2EVIkj1bgthnbPSwPrgszyhEnnB6ATOeEvj0n2bKvEXEaAt9rEALw_wcB"&gt;Emotion Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Emotion AI refers to artificial intelligence that detects your face and emotion reaction also and interprets human emotional signals. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6content-creation"&gt;
  &lt;/a&gt;
  6.&lt;a href="https://mydukaan.io/blog/ai-content-creation-tools/"&gt;Content Creation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Content Intelligence is a subset of AI that allows marketers to use machine learning algorithms to optimize content for consumption and distribution.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7speech-recognition"&gt;
  &lt;/a&gt;
  7.&lt;a href="https://www.hpe.com/in/en/solutions/artificial-intelligence.html?jumpid=ps_pwnsy6fgh7_aid-520042864&amp;amp;ef_id=Cj0KCQjw5JSLBhCxARIsAHgO2SdlfrepFz0VI6QcFhqHCPYHap3mTIoeTpb142YC81w8KnvwoBdrSUUaAml6EALw_wcB:G:s&amp;amp;s_kwcid=AL!13472!3!541195828265!p!!g!!ai%20intelligence!14386686690!127123177875&amp;amp;"&gt;Speech Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Speech recognition is the voice command to your device&lt;br&gt;
It's the most of the people are using children's also using this AI..&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.üíØ
&lt;/h3&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>techtalks</category>
      <category>webpack</category>
    </item>
    <item>
      <title>Learn programming from absolute zero</title>
      <author>Marinsborg</author>
      <pubDate>Tue, 12 Oct 2021 17:45:20 +0000</pubDate>
      <link>https://dev.to/marinsborg/learn-programming-from-absolute-zero-amj</link>
      <guid>https://dev.to/marinsborg/learn-programming-from-absolute-zero-amj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;It is 2021 and there are so many people working as programmers. If you want to be part of that world, you need to know the programming basics. &lt;/p&gt;

&lt;p&gt;Why is this post better than most of the other posts or video courses on the internet? And also how can this be a post about programming when there is not any programming language in it? &lt;/p&gt;

&lt;p&gt;Well, there is a difference between learning to program and learning some programming language. You could 'learn' two programming languages and there is a chance that you would still not know how to program.&lt;/p&gt;

&lt;p&gt;Learning a programming language is the same as learning a foreign language. Learning to program is like learning to think. When people are born they have the ability to think. That ability naturally gets better and better with time. That means most people would react in the same way in the same situation no matter where are they from. For example, if they see an accident on the road, they would call an ambulance. The only difference is that they would use their own language to describe the accident. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The ability to think is not bounded or dictated by some language&lt;/strong&gt;. If you learn a new language, your ability to think would not change at all. The same thing is with programming. Programming concepts are independent of programming languages.&lt;/p&gt;

&lt;p&gt;In this post, I will teach you programming concepts that will help you learn any programming language. Learning this way is much faster and you are not distracted by the syntax of the programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-think-like-a-programmer"&gt;
  &lt;/a&gt;
  How to think like a programmer?
&lt;/h2&gt;

&lt;p&gt;This is a question that is asked by many people who wants to start with programming. And to answer it straight away - you need to use an &lt;strong&gt;algorithmic approach&lt;/strong&gt; to solving problems. What does that mean exactly? I will explain it in this chapter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Computer_programming"&gt;Computer programming&lt;/a&gt; is the process of designing and building an executable computer program. A computer program is a &lt;strong&gt;collection of instructions&lt;/strong&gt; that can be executed by a computer to perform a specific task. &lt;/p&gt;

&lt;p&gt;In layman's terms, programming is just telling a computer what it needs to do. To describe to a computer what it needs to do, programmers use various programming languages. &lt;/p&gt;

&lt;p&gt;Now, I would require you to take a pen and paper or just open your favorite text editor and write down all steps you need to do to make a bowl of cereals. I will do the same thing, but I will do it in a way that is similar to describing it to a computer. After you are done you can compare yours and my result:&lt;br&gt;

  My result
  &lt;ul&gt;
    &lt;li&gt;go to the fridge and open its door&lt;/li&gt;
    &lt;li&gt;take out a bottle of milk and put it on the table&lt;/li&gt;
    &lt;li&gt;close the fridge door&lt;/li&gt;
    &lt;li&gt;go to a cupboard (or cabinet) and open its door&lt;/li&gt;
    &lt;li&gt;take out a cereal box and bowl and put those to the table, next to milk (this step depends on where you are keeping bowls and cereals)&lt;/li&gt;
    &lt;li&gt;close the cupboard door&lt;/li&gt;
    &lt;li&gt;go to the drawer with spoons and open it&lt;/li&gt;
    &lt;li&gt;take one spoon and close the drawer&lt;/li&gt;
    &lt;li&gt;go to the table, put the spoon next to a bowl&lt;/li&gt;
    &lt;li&gt;grab cereal box and take the plastic bag out of it (let's assume that cereals are inside a plastic bag)&lt;/li&gt;
    &lt;li&gt;pour cereal out of the plastic bag into a bowl until the bowl is half-full or one-third full&lt;/li&gt;
    &lt;li&gt;return the plastic bag to the cereal box (or throw it away if it is empty)&lt;/li&gt;
    &lt;li&gt;grab a bottle of milk and open it&lt;/li&gt;
    &lt;li&gt;pour milk over the cereal that is inside the bowl until the bowl is half full&lt;/li&gt;
    &lt;li&gt;close the bottle of milk and put it on the table&lt;/li&gt;
  &lt;/ul&gt;




&lt;br&gt;
And this is it, breakfast is ready. &lt;/p&gt;

&lt;p&gt;This is how programmers think. You can see that it is not anything complicated and that everybody can do that. In the steps above there are some extra cases that I left out for simplicity of demonstration like what if milk is not in the fridge, what if you run out of milk or cereal, what if you don't have any clean spoon or bowls, what if you dropped and broke a bowl, etc. &lt;/p&gt;

&lt;p&gt;But you got the idea. And in the following video, you will see what happens if you are not specific and detailed when you are writing instructions (or code).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cDA3_5982h8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This is how programming works most of the time. You know what you have to do, you write code for that, and then you test does it work what it needs to do. If not, then you know that you did something wrong. You change your code and try again until you get the right solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algorithm"&gt;
  &lt;/a&gt;
  Algorithm
&lt;/h2&gt;

&lt;p&gt;In this chapter, I will explain things in a formal way. &lt;/p&gt;

&lt;p&gt;An &lt;a href="https://www.verywellmind.com/what-is-an-algorithm-2794807"&gt;algorithm&lt;/a&gt; is a defined set of step-by-step procedures that provides the correct answer to a particular problem. &lt;/p&gt;

&lt;p&gt;The algorithm needs to satisfy the following conditions to be valid:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;same inputs always need to produce the same output&lt;/li&gt;
&lt;li&gt;must be unambiguous meaning that is explicitly defined and only one interpretation is possible&lt;/li&gt;
&lt;li&gt;must be finite meaning that it needs to be done in finite time and use finite space&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best example of an algorithm that you saw in your life is a meal recipe. You know how long it will take to cook that meal, what groceries you need, and in what order you need to prepar them. And if you follow that recipe twice and make the meal in the exact same way both times you will get the same meal.&lt;/p&gt;

&lt;p&gt;To solve tasks with programming, the first thing we need to do is to devise an algorithm. When you are doing that, it is a good idea to write it down. There are two ways to write an algorithm - with flowchart and with pseudocode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flowchart"&gt;
  &lt;/a&gt;
  Flowchart
&lt;/h3&gt;

&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Flowchart"&gt;flowchart&lt;/a&gt; is a type of diagram that represents a workflow or process. A flowchart can also be defined as a diagrammatic representation of an algorithm, a step-by-step approach to solving a task. &lt;/p&gt;

&lt;p&gt;Each flowchart consists of its building blocks. To understand a flowchart, you first need to know what each building block means. I created this simple table so you can always return here until you learn them all. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70jVY1zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhgcg6q9lqxfavrztok9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70jVY1zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhgcg6q9lqxfavrztok9.jpg" alt="Flowchart table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, there are not a lot of them. Some other exists but they are not important right now. I will show you how to solve tasks using only these symbols. Let's start with examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sequence"&gt;
  &lt;/a&gt;
  Sequence
&lt;/h3&gt;

&lt;p&gt;Instructions in programs are executed in the sequence in which they are written. Let's create a flowchart for a simple task in which the user will input two numbers and the program will print out a sum of those two numbers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_k4iVeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbddieinn5fjxbjs8md.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_k4iVeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbddieinn5fjxbjs8md.jpg" alt="Sequence diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#branching"&gt;
  &lt;/a&gt;
  Branching
&lt;/h3&gt;

&lt;p&gt;If some part of code in the algorithm we need to execute only in case if some condition is fulfilled then we need to use branching. With branching, we can split the code into two or more paths. To show an example of branching let's create a flowchart for a program that takes the user's input which is a number and prints "Number is positive" or "Number is negative".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hOzA6aCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p8ze21w8058xhqyzuiw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hOzA6aCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p8ze21w8058xhqyzuiw.jpg" alt="Branching diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;Sometimes in code, we need to do the same thing several times. We always have two choices. One is to write the same code several times and the other is to use a loop. The problem with writing the same code several times is that is it not clean and it is time-consuming. That is why we should use loops.&lt;/p&gt;

&lt;p&gt;In computer programming, a loop is a sequence of instructions that is continually repeated until a certain condition is reached. Most of the time we write a loop with some kind of a counter so the loop knows how many times it needs to execute the same code and when to stop. Let's create a flowchart for a program that takes a number as the user's input and prints all (whole) numbers between 0 and that number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PK3yFXUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1rra9prbtpy3oanv29.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PK3yFXUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1rra9prbtpy3oanv29.jpg" alt="Loops"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the loop repeats three steps: checking if variable A is lower than variable Counter, print value of variable Counter, and increase the value of variable Counter by one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now try to solve this task by yourself:&lt;/strong&gt; Make a program that takes the user's input and check if it is number 0. If it is not, then print the square of that number and if it is 0 then finish the program. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h3&gt;

&lt;p&gt;In previous tasks I always mentioned variables but I never explained what it is. Variables are locations in memory that have some name and in which we save data from the input. The value of each variable can be changed during program execution. To access the value of a variable we only need to write its name. &lt;/p&gt;

&lt;p&gt;Each variable has a name, a value, and a type. I will talk about data types a bit later. To assign value to a variable we need to write the name of the variable then equality sign '=' and then the value.&lt;/p&gt;

&lt;p&gt;For example: &lt;/p&gt;

&lt;p&gt;To assign a value 10 to a variable with the name 'age' we just need to write&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;age = 10&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;If we want to change the value of the variable 'age' we can do it in the same way&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;age = 30&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 That is called re-assigning.&lt;/p&gt;

&lt;p&gt;It is always a good idea to name variables in a descriptive way instead of using just one letter like 'A' or 'x'.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data types
&lt;/h3&gt;

&lt;p&gt;In computer science and computer programming, a &lt;a href="https://en.wikipedia.org/wiki/Data_type"&gt;data type&lt;/a&gt; or simply type is an attribute of data that tells the computer how the programmer intends to use the data. I will not bother you with the details, you just need to remember these five common data types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integer (int) - this data type is used for whole numbers. For example int age = 20 or int size = 10&lt;/li&gt;
&lt;li&gt;String - this data type is used for text or sequence of characters. For example string name = "John Doe" or string sentence = "Today is a sunny day." Usually, a string is always surrounded with quotation marks&lt;/li&gt;
&lt;li&gt;Character (char) - this data type is used for a single letter. char letter = 'a'&lt;/li&gt;
&lt;li&gt;Float - this data type is used for numbers that contain a decimal point. For example float number = 3.14&lt;/li&gt;
&lt;li&gt;Boolean (bool) - this data type is used for True or False only ( yes or no, 0 or 1). For example bool flag = True&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I mentioned before - Each variable has a name, a value, and a type. When I write&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;int age = 10&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;int is the type of the variable, age is the name of the variable, and 10 is the value of that variable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arithmetic-operators"&gt;
  &lt;/a&gt;
  Arithmetic operators
&lt;/h3&gt;

&lt;p&gt;In programming, you can use arithmetic operators between variables or some concrete value. Addition, subtraction, multiplication are the same as in math and division is a bit different.&lt;/p&gt;

&lt;p&gt;For example, you can write this:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sum = a + b -&amp;gt; this will save the sum of values a and b into variable sum&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;c = d - 7 -&amp;gt; this will save the result of subtraction to variable c&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;result = 15 * 3 -&amp;gt; this will save 45 in variable result&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;There are three 'types' of division:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;x = a/b -&amp;gt; this is real division&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;y = 13 DIV 5 -&amp;gt; this is integer division and it will save 2 in variable y&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;z = 13 MOD 5 -&amp;gt; this is remainder and it will save 3 in variable z&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relational-operators"&gt;
  &lt;/a&gt;
  Relational operators
&lt;/h3&gt;

&lt;p&gt;In computer science, a &lt;a href="https://en.wikipedia.org/wiki/Relational_operator"&gt;relational operator&lt;/a&gt; is a programming language construct or operator that tests or defines some kind of relation between two entities. These include numerical equality (e.g., 5 = 5) and inequalities (e.g., 4 ‚â• 3).&lt;/p&gt;

&lt;p&gt;The result of the evaluation is either true or false. Relational operators are used for branching which I explained above.  &lt;/p&gt;

&lt;p&gt;Operators are: equal to (==), not equal to (‚â†), greater than (&amp;gt;), less than (&amp;lt;), greater than or equal to (‚â•), less than or equal to (‚â§). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boolean-operations"&gt;
  &lt;/a&gt;
  Boolean operations
&lt;/h3&gt;

&lt;p&gt;Boolean operations come from &lt;a href="https://en.wikipedia.org/wiki/Boolean_algebra"&gt;Boolean algebra&lt;/a&gt; in which which the values of the variables are either true or false (1 or 0). I don't want to bother you much with Boolean algebra but there are three main operations you need to know about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AND - conjunction - the result of this operation is true only when both conditions are true, otherwise false&lt;/li&gt;
&lt;li&gt;OR - disjunction - the result of this operation is true when either of the conditions is true&lt;/li&gt;
&lt;li&gt;NOT - negation - this operation inverts the value of the condition. If the condition is true then negation will result in false and vice versa.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Boolean operations are also mostly used for branching and can be combined with relational operators. For example, if you have a task in which you need to check if the number is lower than 50 and it is not 7 then you would do that in a flowchart like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRInKPkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1e6j8w1mfp3p21itv9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRInKPkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1e6j8w1mfp3p21itv9.jpg" alt="Branching operator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is it. If you have understood everything so far &lt;strong&gt;you can say that now YOU can think like a programmer&lt;/strong&gt;. This is the bare minimum you need to know to start with programming. This is the foundation on which you build more and more knowledge. &lt;/p&gt;

&lt;p&gt;You might notice that we did not start with any programming language. It is because everything above can apply to most programming languages. Now when you understand the foundation you can easily start with any programming language. &lt;/p&gt;

&lt;p&gt;If you do not understand some part or you need extra explanation you can always search on Google or you can ask me on &lt;a href="https://www.reddit.com/r/marinsborg/"&gt;Reddit&lt;/a&gt; or &lt;a href="https://twitter.com/marinsborg"&gt;Twitter&lt;/a&gt; - I am going to help you as soon as I can.&lt;/p&gt;

&lt;p&gt;I will give you some tasks to practice, something like homework. I will publish solutions and explanations to those tasks on Reddit in near future. Follow me on Twitter for updates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homework-tasks"&gt;
  &lt;/a&gt;
  Homework tasks
&lt;/h3&gt;

&lt;p&gt;To solve these tasks you will use the knowledge from above. For each task, you need to draw a flowchart. You can draw flowcharts online on &lt;a href="https://app.diagrams.net/"&gt;diagrams.net&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a program that allows to user to input three numbers and print the product of that three numbers.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. Print if that number is odd or even. Hint - you need to use the remainder operator.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. Multiply that number by 2 and print it out. Repeat multiplication and printing until the result of the multiplication is not larger than 1000.&lt;/li&gt;
&lt;li&gt;Create a program that prints all numbers between 1 and 100 that are not divisible by 7 and are divisible by 5.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. If the number is 0, end the program and print "The end". Otherwise, multiply that number by itself and check if that new number is larger than 1000. If yes then print "Extra large number". If the number is larger than 500 then print "Large number", otherwise print "Small number"&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;Once you are done with the practice tasks above you might ask what are the next thing to do or learn. It is obvious you can't do much with just a knowledge of drawing flowcharts. &lt;/p&gt;

&lt;p&gt;Now you can select one programming language and learn its syntax. I would recommend learning Python or JavaScript. Both languages are easy to set up on your computer and syntax is straightforward. For know, if you are at this stage of programming experience, I would recommend you to pick either Python or JavaScript and not C#, Java, or any object-oriented programming language. &lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Related post:&lt;/strong&gt; &lt;a href="https://marinsborg.com/2021/10/05/first-programming-language.html"&gt;What programming language to learn first?&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you want to learn JavaScript and explore web development with it, you can start with &lt;a href="https://www.theodinproject.com/paths/foundations/courses/foundations"&gt;The Odin Project&lt;/a&gt;. It is a website that will walk you through the installation of proper tools, explain how the web works, how to use git and there are basics in HTML, CSS, and JavaScript. If you like to watch videos you can find many good JavaScript tutorials on YouTube.&lt;/p&gt;

&lt;p&gt;If you want to learn Python which is a good programming language for multiple stuff you can follow this book - &lt;a href="https://automatetheboringstuff.com/#toc"&gt;Automate the boring stuff with Python.&lt;/a&gt; It starts with Python basics and progresses into some real-world problems that are easily solved with Python. If you don't like it, you can always look for videos on YouTube. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, I explained to you the fundamentals that you need to know to start with programming. These fundamentals are applicable to most programming languages and now you need to pick one and learn its syntax.&lt;/p&gt;

&lt;p&gt;Programming is not hard as it might seem. You need to be patient with yourself, invest some time and effort in understanding the basics. &lt;/p&gt;

&lt;p&gt;I just want to point out the importance of starting with easier tasks and then progressing towards some bigger project you might want to build. You can not learn some foreign language over the night but you will get better and better with it over time - it is the same with programming.&lt;/p&gt;

&lt;p&gt;When you learn the syntax of some programming language try to solve tasks from the homework chapter with that programming language. &lt;/p&gt;

&lt;p&gt;Like I said if you have any questions or just want to see solutions to homework tasks follow me on &lt;a href="https://twitter.com/marinsborg"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.reddit.com/r/marinsborg/"&gt;Reddit&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>learning</category>
      <category>programming</category>
    </item>
    <item>
      <title>APIs Are The Prefabrication Of Software</title>
      <author>Micah Zayner</author>
      <pubDate>Tue, 12 Oct 2021 17:31:13 +0000</pubDate>
      <link>https://dev.to/courier/apis-are-the-prefabrication-of-software-3f6g</link>
      <guid>https://dev.to/courier/apis-are-the-prefabrication-of-software-3f6g</guid>
      <description>&lt;p&gt;Whether it‚Äôs for building a company, monitoring the news, or even making a grocery list, software penetrates every part of the modern western lifestyle. The demand for software far exceeds what developers (and the tech industry as a whole) are capable of supplying from scratch. In order to keep pace with demand, our industry has been increasingly shifting towards a ‚Äòprefabrication‚Äô model of software development via the utilization of third party APIs. While this trend has been in the making for 10 to 15 years already, the market is poised for continuous aggressive change in the coming years as well. &lt;/p&gt;

&lt;p&gt;We can say this with confidence because history tells us so. At the turn of the century, when large-scale construction was beginning to become common, constructing an office building or factory required bringing together a large group of expert craftsmen at a jobsite. Expert carpenters were needed to build the doors and framing, expert glass blowers for the windows, expert masons to cut and lay the stone, blacksmiths to create the steel structure, and so on. As the 20th century progressed, and demand for construction skyrocketed, various forms of prefabrication were developed in order to make construction faster, cheaper, and more accessible. For high-end, custom buildings, the prefabricated parts components could be limited to the windows, doors, and HVAC system while at the other end of the spectrum entire buildings can be erected in days out of completely prefabricated components. In fact, McDonalds has been known to complete a building in mere weeks this way.&lt;/p&gt;

&lt;p&gt;The evolution of software development has followed a similar trajectory, with APIs serving as the prefabricated software that companies are leaning on to build software faster and more cheaply than ever before. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-apis-came-to-be"&gt;
  &lt;/a&gt;
  How APIs Came To Be
&lt;/h2&gt;

&lt;p&gt;In many ways, Amazon pioneered this ‚Äòprefabrication‚Äô mode for software developers when they &lt;a href="https://techcrunch.com/2016/07/02/andy-jassys-brief-history-of-the-genesis-of-aws/?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;amp;guce_referrer_sig=AQAAAKjTagbGmqb5tALtmO9uJRDw6CvoMgqmADXnDo95xyGasEsw6TZalE5GDoqfu0uJnZRW10rlTKH6cOUiEO1iWdivlJG7I4k_NM4MXGy90xgia38Ug7dpfG2TALpGZbEVHe1SVVSy5P2xpLVhbPp3gjI7fHW8HWIssqvhzGffkGp2#:~:text=AWS%20was%20first%20to%20market,share%2C%20at%20least%20for%20now."&gt;released Amazon Web Services&lt;/a&gt; in 2006. By making Amazon‚Äôs excess compute resources available to other software companies to use in the form of APIs, the capital and expertise needed to build a software company was reduced dramatically. Do you want to spend your technical resources trying to scale and manage infrastructure better than Amazon? For the vast majority of companies the answer is no, they‚Äôd rather spend those resources focusing on the more specialized parts of their software, and that‚Äôs why AWS generated $46 billion in revenue last year. &lt;/p&gt;

&lt;p&gt;Since AWS, hundreds of other API-as-a-service companies have emerged to help other software companies build faster and cheaper. Twilio came up for digital communication. Stripe was used for payments. Shopify was available for e-commerce. Okta became important for user authentication. Just these four companies represent over $350 billion in enterprise value and have laid a lot of the groundwork for this industry, but it‚Äôs still very early in this movement. There are still many parts of the software stack that have yet to be ‚Äòprefabricated‚Äô and millions of hours of development are still spent on building the same functionality over and over again when it would be far more efficient and lead to more innovation if those hours were spent on building unique value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-vs-buy-has-become-an-important-decision-for-developers"&gt;
  &lt;/a&gt;
  Build Vs. Buy Has Become An Important Decision For Developers
&lt;/h2&gt;

&lt;p&gt;The rise of APIs-as-a-service is increasing both the prevalence and importance of the ‚Äòbuild vs buy‚Äô decision within engineering teams. Should we roll our own user authentication service or buy Auth0? Should we roll our own payments platform or buy Stripe? As my colleague Tejas controversially argued in &lt;a href="https://www.courier.com/blog/the-three-things-to-never-build-in-your-app"&gt;his post&lt;/a&gt;, user authentication, payments, and notifications are three things that you should never build yourself. While many people did not agree with that particular thesis, the trend of engineering orgs evaluating API solutions in order to get their product to market faster is certainly growing.&lt;/p&gt;

&lt;p&gt;What this means for engineers is that having the ability to effectively evaluate APIs and run a cost benefit analysis as opposed to creating a custom solution is becoming increasingly important. As a company that builds and sells an API, we see it all the time here at Courier. A software company, typically a medium to large startup, begins to run into some pain points around sending and managing product notifications. A decision is made to find a new notification service that meets their needs and tap a senior engineer to decide how this problem should be solved. He or she typically evaluates using Courier rather than rolling out a custom solution and then makes a case for which solution they think is a better fit to their team. &lt;/p&gt;

&lt;p&gt;Having a good understanding of the currently available products and functionality offer, being able to effectively estimate the total cost of ownership for both an API solution as well as a homegrowth solution, and being able to effectively map out the integration strategy for API  products are all skill sets that are becoming ever more valuable in both developers and engineering leaders.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-developer-as-artist"&gt;
  &lt;/a&gt;
  The Developer As Artist
&lt;/h2&gt;

&lt;p&gt;As APIs handle more and more of the monotonous and undifferentiated parts of the software stack, developers' time is being freed to be spent creating new, unique, and highly valuable product experiences. In the past several years we‚Äôve seen brand new software startups take on challenges as diverse and complex as automating and streamlining the mortgage application process, building marketplaces for pretty much any good or service imaginable, democratizing the ownership of publicly traded stock, and much more. &lt;/p&gt;

&lt;p&gt;As the proliferation of APIs continues, software development will be able to focus less on solving low level systems and infrastructure challenges and more on the creative side of product and customer experience. Of course, there will always be a place for the engineers who truly want to dig into systems challenges (someone does have to build these APIs, after all), but the engineer who is adept at leveraging APIs in order to deliver a more differentiated product more quickly will become increasingly valuable and sought after.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-only-the-beginning"&gt;
  &lt;/a&gt;
  This Is Only The Beginning
&lt;/h2&gt;

&lt;p&gt;The prefabrication of software via APIs is the next big wave of disruption in the software industry, and while it has already arrived, we‚Äôre only in the beginning phases. There are still hundreds, maybe thousands, of technical challenges that are repeatedly solved across nearly every software company or vertical that could be successfully prefabricated via an API. As slower moving industries such as insurance, healthcare, education, and  finance become increasingly digital, additional API services will emerge to serve those industries. As digital regulations around privacy and security continue to mature, we‚Äôll see more APIs focused at helping with compliance. The startup engineers of the future will either be building APIs to help other companies move faster or leveraging those APIs to take their own product to market.&lt;/p&gt;

</description>
      <category>api</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>startup</category>
    </item>
    <item>
      <title>Bypass AWS_ENDPOINT to interact with any S3 compatible service from CockroachDB</title>
      <author>Fabio Ghirardello</author>
      <pubDate>Tue, 12 Oct 2021 17:29:14 +0000</pubDate>
      <link>https://dev.to/cockroachlabs/bypass-awsendpoint-to-interact-with-any-s3-compatible-service-from-cockroachdb-43em</link>
      <guid>https://dev.to/cockroachlabs/bypass-awsendpoint-to-interact-with-any-s3-compatible-service-from-cockroachdb-43em</guid>
      <description>&lt;p&gt;In this blog I will demonstrate how you can trick an application or service, in our case CockroachDB, into thinking it's communicating with AWS S3 when in fact another service lays behind the scenes.&lt;/p&gt;

&lt;p&gt;CockroachDB is perfectly capable to interact with any S3 compatible services. Following the instructions of the AWS SDK, you can add parameter &lt;code&gt;AWS_ENDPOINT&lt;/code&gt; to your URI to tell CockroachDB what server to hit instead of the default AWS servers. This is clearly documented &lt;a href="https://www.cockroachlabs.com/docs/v21.1/use-cloud-storage-for-bulk-operations#url-format"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, this blog comes as a follow up from a customer interaction where their requirement was to NOT use &lt;code&gt;AWS_ENDPOINT&lt;/code&gt; in their URI, yet still using their own private S3 compatible service.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Create a t2.micro or similar instance on your favorite cloud provider.&lt;br&gt;
For this exercise, the instance has the below details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OS         : Ubuntu 20.04 LTS
Public IP  : 54.83.105.95
Private IP : 10.10.81.189
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-and-configure-minio"&gt;
  &lt;/a&gt;
  Install and Configure MinIO
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://min.io/"&gt;MinIO&lt;/a&gt; is a S3 compatible service and it is my favorite choice for when I want to play locally with the S3 API. We will therefore use the MinIO Server as our custom endpoint instead of AWS S3.&lt;/p&gt;

&lt;p&gt;Below the steps to run MinIO, also available in the &lt;a href="https://docs.min.io/docs/how-to-secure-access-to-minio-server-with-tls.html"&gt;official docs&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# download the binary&lt;/span&gt;
wget https://dl.min.io/server/minio/release/linux-amd64/minio
&lt;span class="nb"&gt;chmod&lt;/span&gt; +x minio
./minio server data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point MinIO is running in insecure mode.&lt;br&gt;
It will also have created the configuration folders at &lt;code&gt;${HOME}/.minio/certs&lt;/code&gt;.&lt;br&gt;
Stop the server with &lt;code&gt;Ctrl+C&lt;/code&gt;, then configure secure access with TLS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# allow minio to start on port 443&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;setcap &lt;span class="nv"&gt;cap_net_bind_service&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;+ep minio

&lt;span class="c"&gt;# create the private key&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; .minio/certs
openssl genrsa &lt;span class="nt"&gt;-out&lt;/span&gt; private.key 2048
&lt;span class="nb"&gt;chmod &lt;/span&gt;400 private.key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a file named &lt;code&gt;openssl.conf&lt;/code&gt; with the content below. Check the &lt;code&gt;alt_names&lt;/code&gt; section carefully: in this context, &lt;code&gt;fabio&lt;/code&gt; is the name of the s3 bucket.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[req]
distinguished_name = req_distinguished_name
x509_extensions = v3_req
prompt = no

[req_distinguished_name]
C = US
ST = VA
L = Somewhere
O = MyOrg
OU = MyOU
CN = MyServerName

[v3_req]
subjectAltName = @alt_names

[alt_names]
IP.1 = 127.0.0.1
IP.2 = 54.83.105.95
IP.3 = 10.10.81.189
DNS.1 = localhost
DNS.2 = s3.amazonaws.com
DNS.3 = fabio.s3.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the public cert&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;openssl req &lt;span class="nt"&gt;-new&lt;/span&gt; &lt;span class="nt"&gt;-x509&lt;/span&gt; &lt;span class="nt"&gt;-nodes&lt;/span&gt; &lt;span class="nt"&gt;-days&lt;/span&gt; 730 &lt;span class="nt"&gt;-key&lt;/span&gt; private.key &lt;span class="nt"&gt;-out&lt;/span&gt; public.crt &lt;span class="nt"&gt;-config&lt;/span&gt; openssl.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setup MinIO Server to use Virtual Hosted-Style, as per &lt;a href="https://stackoverflow.com/questions/59693471/how-to-setup-minio-server-to-use-virtual-hosted-style"&gt;here&lt;/a&gt;.&lt;br&gt;
This is required to match AWS S3 style.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;MINIO_DOMAIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;s3.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, start the MinIO Server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;~/minio server &lt;span class="nt"&gt;--console-address&lt;/span&gt; &lt;span class="s2"&gt;":9001"&lt;/span&gt; &lt;span class="nt"&gt;--address&lt;/span&gt; &lt;span class="s2"&gt;":443"&lt;/span&gt; ~/data

API: https://10.10.82.1  https://127.0.0.1     
RootUser: minioadmin 
RootPass: minioadmin 

Console: https://10.10.82.1:9001 https://127.0.0.1:9001   
RootUser: minioadmin 
RootPass: minioadmin 

Command-line: https://docs.min.io/docs/minio-client-quickstart-guide
   &lt;span class="nv"&gt;$ &lt;/span&gt;mc &lt;span class="nb"&gt;alias set &lt;/span&gt;myminio https://10.10.82.1 minioadmin minioadmin

Documentation: https://docs.min.io
WARNING: Detected default credentials &lt;span class="s1"&gt;'minioadmin:minioadmin'&lt;/span&gt;, we recommend that you change these values with &lt;span class="s1"&gt;'MINIO_ROOT_USER'&lt;/span&gt; and &lt;span class="s1"&gt;'MINIO_ROOT_PASSWORD'&lt;/span&gt; environment variables
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Point your browser at &lt;a href="https://54.83.105.95:9001"&gt;https://54.83.105.95:9001&lt;/a&gt; to access the &lt;strong&gt;MinIO Console&lt;/strong&gt;. As the self-signed certificate is invalid, the browser might not allow you to continue. In Brave Browser, and other Chrome based browsers, type &lt;code&gt;thisisunsafe&lt;/code&gt; anywhere on the screen (not on the address toolbar) to continue and disregard the warning.&lt;/p&gt;

&lt;p&gt;Login with &lt;code&gt;minioadmin/minioadmin&lt;/code&gt;, which are the default login details. Once logged in, you'll see the Dashboard page, below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pgPL9Als--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmyb3jlvo1v5lnyhdpt8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgPL9Als--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmyb3jlvo1v5lnyhdpt8.png" alt="minio-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using the menu on the left, create a &lt;strong&gt;bucket&lt;/strong&gt; called &lt;code&gt;fabio&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DiyeKazp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elk69mt78pwswek6zmqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DiyeKazp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elk69mt78pwswek6zmqm.png" alt="bucket"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then create a &lt;strong&gt;User&lt;/strong&gt; &lt;code&gt;fabio&lt;/code&gt; with any password you want. Make sure assign the &lt;code&gt;consoleAdmin&lt;/code&gt;, &lt;code&gt;readwrite&lt;/code&gt; and &lt;code&gt;diagnostic&lt;/code&gt; policies to the user, so you don't run into any permission issue. Later on, you can refine these permissions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Dsbt-1o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nf56coo5c77nx846vuw6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Dsbt-1o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nf56coo5c77nx846vuw6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, click on the user you just created and create a &lt;strong&gt;Service Account&lt;/strong&gt;, and make sure you save the keys. In my example, the keys are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Access Key: I6SX7TO71RZY79FXDK1T
Secret Key: 7TxSqDyrvOXCV+EWkRvZKSOXETriFik5LKNWmkQm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vGgxBqNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x1377lj2x79z0q6xe5l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vGgxBqNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x1377lj2x79z0q6xe5l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, go to &lt;strong&gt;Settings&lt;/strong&gt; and change the region to &lt;code&gt;us-east-1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nALqsTh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo5kfnggwrb94el9d1r4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nALqsTh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo5kfnggwrb94el9d1r4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will prompt you to RESTART the server. Do so by stopping the server, and restarting it.&lt;/p&gt;

&lt;p&gt;Perfect, you're all set! MinIO Server is up and running in secure mode, and you've a service account to interact with it.&lt;/p&gt;

&lt;p&gt;Next, we configure the OS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linux-os-configuration"&gt;
  &lt;/a&gt;
  Linux OS configuration
&lt;/h2&gt;

&lt;p&gt;For CockroachDB to trust the certificate, we must add it to the system cert pool. We also need to redirect the traffic aimed at AWS servers to MinIO's.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#allow-selfsigned-certs"&gt;
  &lt;/a&gt;
  Allow self-signed certs
&lt;/h3&gt;

&lt;p&gt;In Ubuntu, this is how you go about, as per &lt;a href="https://askubuntu.com/questions/73287/how-do-i-install-a-root-certificate"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo mkdir&lt;/span&gt; /usr/local/share/ca-certificates/extra
&lt;span class="nb"&gt;sudo cp&lt;/span&gt; ~/.minio/certs/public.crt /usr/local/share/ca-certificates/extra/
&lt;span class="nb"&gt;sudo &lt;/span&gt;update-ca-certificates
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;Edit file &lt;code&gt;/etc/hosts&lt;/code&gt; and add these entries to route all traffic directed to Amazon AWS servers to the MinIO Server instead.&lt;br&gt;
Again, &lt;code&gt;fabio&lt;/code&gt; is the name of the bucket.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;54.83.105.95 s3.amazonaws.com
54.83.105.95 s3.us-east-1.amazonaws.com
54.83.105.95 fabio.s3.amazonaws.com 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good, we're all set from OS point of view. Next, we test with CockroachDB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cockroachdb"&gt;
  &lt;/a&gt;
  CockroachDB
&lt;/h2&gt;

&lt;p&gt;Install and start CockroachDB. We will use the single-node feature as we're only trying to prove it works from a functionality perspective.&lt;/p&gt;

&lt;p&gt;As always, the offical installation docs are &lt;a href="https://www.cockroachlabs.com/docs/stable/install-cockroachdb-linux"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl https://binaries.cockroachdb.com/cockroach-v21.1.10.linux-amd64.tgz | &lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;-xz&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;sudo cp&lt;/span&gt; &lt;span class="nt"&gt;-i&lt;/span&gt; cockroach-v21.1.10.linux-amd64/cockroach /usr/local/bin/
cockroach start-single-node &lt;span class="nt"&gt;--insecure&lt;/span&gt; &lt;span class="nt"&gt;--background&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Connect to the SQL prompt as root:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cockroach sql &lt;span class="nt"&gt;--insecure&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a user - doesn't have to be an admin -, then logout and log back in as that user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="n"&gt;fabio&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="k"&gt;CREATEDB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cockroach sql &lt;span class="nt"&gt;--insecure&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt; fabio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As user &lt;code&gt;fabio&lt;/code&gt;, create a simple test table and export it. Make sure you update the keys with your values!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;fabio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;USE&lt;/span&gt; &lt;span class="n"&gt;fabio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; 
  &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; 
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- notice that we don't use AWS_ENDPOINT in the URI&lt;/span&gt;
&lt;span class="n"&gt;EXPORT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;CSV&lt;/span&gt;     
  &lt;span class="s1"&gt;'s3://fabio?AWS_ACCESS_KEY_ID=I6SX7TO71RZY79FXDK1T&amp;amp;AWS_SECRET_ACCESS_KEY=7TxSqDyrvOXCV+EWkRvZKSOXETriFik5LKNWmkQm'&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                              filename                             | rows | bytes
-------------------------------------------------------------------+------+--------
  export16ad4c7f75f4fe180000000000000001-n701156393427501057.0.csv |  100 |   292
(1 row)

Time: 38ms total (execution 38ms / network 0ms)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As &lt;code&gt;root&lt;/code&gt;, take a full cluster backup&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="n"&gt;BACKUP&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt;
  &lt;span class="s1"&gt;'s3://fabio?AWS_ACCESS_KEY_ID=I6SX7TO71RZY79FXDK1T&amp;amp;AWS_SECRET_ACCESS_KEY=7TxSqDyrvOXCV+EWkRvZKSOXETriFik5LKNWmkQm'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        job_id       |  status   | fraction_completed | rows | index_entries | bytes
---------------------+-----------+--------------------+------+---------------+--------
  701160820164395009 | succeeded |                  1 |  126 |            14 |  5920
(1 row)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Refresh the MinIO Console to see your files&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8aOrBsC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26avfbkd9i6dygx45t0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8aOrBsC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26avfbkd9i6dygx45t0b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome! The CockroachDB end-user has no clue that the engine behind the scenes is MinIO instead of AWS, and CockroachDB is happy to IMPORT, EXPORT, BACKUP and RESTORE from S3, be it AWS' or Minio's.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://min.io/"&gt;MinIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cockroachlabs.com/product/"&gt;CockroachDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cockroachdb</category>
      <category>minio</category>
      <category>s3</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 6 blockchain development frameworks</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 12 Oct 2021 17:11:09 +0000</pubDate>
      <link>https://dev.to/logrocket/top-6-blockchain-development-frameworks-5190</link>
      <guid>https://dev.to/logrocket/top-6-blockchain-development-frameworks-5190</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/chidumennamdi/"&gt;Chidume Nnamdi&lt;/a&gt; ‚úèÔ∏è&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Blockchain has revolutionized the way we see and do things on the internet. Many companies are switching to blockchain to increase transparency and immutability, reduce transaction costs, and eliminate the need for a middleman.&lt;/p&gt;

&lt;p&gt;A blockchain network removes need for a centralized database because everyone in the network can see the transactions and also validate them. This creates trust and transparency between participants in the network.&lt;/p&gt;

&lt;p&gt;A lot goes into the decision to switch to blockchain. Among the most fundamental and important considerations is selecting the right blockchain framework on which to run your enterprise.&lt;/p&gt;

&lt;p&gt;There are too many blockchain development frameworks to explore in a single blog post. Instead, we‚Äôll focus on six of the most popular and widely used frameworks in the blockchain development world:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Ethereum&lt;/li&gt;
&lt;li&gt; Hyperledger Fabric&lt;/li&gt;
&lt;li&gt; Hyperledger Sawtooth&lt;/li&gt;
&lt;li&gt; EOSIO&lt;/li&gt;
&lt;li&gt; Corda&lt;/li&gt;
&lt;li&gt; Quorum&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We‚Äôll evaluate each for its consensus algorithms, ledger types, cryptocurrency, and smart contract support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-blockchain"&gt;
  &lt;/a&gt;
  What is blockchain?
&lt;/h2&gt;

&lt;p&gt;Blockchain is based on decentralization networking technology, just like a peer-to-peer network. Blockchain's decentralization works just like Napster: each party in the network is connected to each other. This is different from the normal client-server network you might be accustomed to. Each node in a blockchain network serves as both the client and the server.&lt;/p&gt;

&lt;p&gt;In a blockchain network, a public database, ledger, or record is maintained and shared by the nodes in the network. This ledger contains transactions that happened in the network, and these transactions are verified by majority consensus in the network. Once a new transaction is verified and entered into the ledger, this ledger is broadcast to all the nodes in the network. This way, the nodes have the current ledger with the latest transactions.&lt;/p&gt;

&lt;p&gt;It‚Äôs easy to see why companies in a wide range of industries are adopting blockchain technology to facilitate secure transactions of valuable assets, such as digital files, properties, currency, and much more.&lt;/p&gt;

&lt;p&gt;Without further ado, let's explore six of the most popular frameworks for developing blockchain-powered apps. We'll highlight key features and break down strengths and weaknesses to help you make a more informed decision when selecting the right platform to develop your blockchain network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-ethereum"&gt;
  &lt;/a&gt;
  1. Ethereum
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMg4cqzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/ethereum.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMg4cqzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/ethereum.jpeg" alt="Ethereum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ethereum.org/en/"&gt;Ethereum&lt;/a&gt; is the most popular and widely used blockchain development platform in the world. In fact, it is the very first blockchain development platform. Built in 2015, it introduced a revolutionary feature known as the &lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/#:~:text=A%20%22smart%20contract%22%20is%20simply,runs%20on%20the%20Ethereum%20blockchain.&amp;amp;text=Smart%20contracts%20are%20a%20type,network%20and%20run%20as%20programmed."&gt;smart contract&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A smart contract is a program that contains functions and states. Each smart contract runs on a specific address in the Ethereum blockchain. Because smart contracts are an autonomous type of &lt;a href="https://ethereum.org/en/developers/docs/accounts/"&gt;account on Ethereum&lt;/a&gt;, they can &lt;a href="https://ethereum.org/en/developers/docs/transactions/"&gt;send transactions&lt;/a&gt; and also have balance.&lt;/p&gt;

&lt;p&gt;Another awesome feature of Ethereum is the &lt;a href="https://ethereum.org/en/developers/docs/evm/"&gt;Ethereum Virtual Machine (EVM)&lt;/a&gt;. The virtual machine in EVM is a virtual computer on which Ehtereum accounts and smart contracts are run.&lt;/p&gt;

&lt;p&gt;The EVM enables you to create decentralized apps (DApps) that run on Ethereum. The range of use cases for DApps is quickly expanding beyond the finance industry, stretching into fields as diverse as healthcare, logistics, real estate, the legal system, and many more.&lt;/p&gt;

&lt;p&gt;Ethereum's smart contracts are written in &lt;a href="https://soliditylang.org/"&gt;Solidity&lt;/a&gt; language. Etheruem has a &lt;strong&gt;permissionless&lt;/strong&gt; ledger type and is open for public use. Its consensus mechanism is proof of work, which is known to be quite slow.&lt;/p&gt;

&lt;p&gt;Ethereum has a cryptocurrency called Ether. Ether is used to pay for creating and initializing a transaction in the Ethereum blockchain.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissionless&lt;/td&gt;
&lt;td&gt;PoW&lt;/td&gt;
&lt;td&gt;Ether&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-hyperlegder-fabric"&gt;
  &lt;/a&gt;
  2. Hyperlegder Fabric
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZSo1D5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-fabric.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZSo1D5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-fabric.png" alt="Hyperledger Fabric"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hyperledger-fabric.readthedocs.io/en/release-2.2/"&gt;Hyperledger Fabric&lt;/a&gt; is a permissioned distributed ledger framework developed by the Hyperledger Hub. The Hyperledger Hub is a project developed by the Linux Foundation for the open development of both centralized and decentralized blockchain platforms.&lt;/p&gt;

&lt;p&gt;Fabric is aimed at enterprises that want to use, integrate, or build blockchain-based solutions and applications.&lt;/p&gt;

&lt;p&gt;Hyperledger Fabric is similar to Ethereum for not only its permissioned ledger type but also its modular architecture. This modularity gives Fabric a plug-and-play kind of interface where you can select your preferred services, such as the consensus algorithm, smart contracts types, etc.&lt;/p&gt;

&lt;p&gt;Hyperledger Fabric also supports &lt;a href="https://hyperledger-fabric.readthedocs.io/en/latest/sdk_chaincode.html"&gt;smart contracts&lt;/a&gt;. Smart contracts on Fabric can be written in Go, Java, and JavaScript.&lt;/p&gt;

&lt;p&gt;If you encounter any issues that aren‚Äôt covered by the docs, the Hyperledger Fabric team has made itself available to &lt;a href="https://hyperledger-fabric.readthedocs.io/en/latest/questions.html"&gt;answer your questions&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissionless&lt;/td&gt;
&lt;td&gt;Pluggable Framework&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3-hyperledger-sawtooth"&gt;
  &lt;/a&gt;
  3. Hyperledger Sawtooth
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBY8yG3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-sawtooth.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBY8yG3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-sawtooth.png" alt="Hyperledger Sawtooth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sawtooth.hyperledger.org/"&gt;Hyperledger Sawtooth&lt;/a&gt; is another modular blockchain platform from the Hyperledger Hub designed for developing distributed ledger applications and networks. Hyperledger Sawtooth was launched by the Linux Foundation and is now maintained by IBM and Digital Assets.&lt;/p&gt;

&lt;p&gt;Enterprises use Hyperledger Sawtooth to build scalable and robust systems and to deploy highly secured blockchain solutions. Just like Fabric and Ethereum, Hyperledger Sawtooth has a permissioned ledger type.&lt;/p&gt;

&lt;p&gt;Hyperledger Sawtooth has a range of advanced features and integrations, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  An integration project called &lt;a href="https://sawtooth.hyperledger.org/docs/seth/releases/latest/introduction.html"&gt;Seth&lt;/a&gt; (Sawtooth-Ethereum), which makes it possible to deploy Etheruem smart contracts on Hyperledger Sawtooth&lt;/li&gt;
&lt;li&gt;  Parallel processing, which facilitates faster transaction processing compared to other blockchain platforms&lt;/li&gt;
&lt;li&gt;  A dynamic, undefined consensus protocol, which means you can change the consensus algorithm anytime you want&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Speaking of consensus algorithms, Hyperledger Sawtooth has many, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  PoET (proof of elapsed time), which relies on secure instruction execution to achieve the scaling benefits of a Nakamoto-style consensus algorithm without the power consumption drawbacks of the proof of work algorithm&lt;/li&gt;
&lt;li&gt;  PBFT (practical Byzantine fault tolerance), a voting-based algorithm that uses dynamic network membership, regular view changes, and block catch-up procedure features to vote for an agreement among the participants in the network&lt;/li&gt;
&lt;li&gt;  Raft, a consensus engine that utilizes and is based on &lt;a href="http://raft.github.io/"&gt;Raft&lt;/a&gt;. This consensus uses the logs of relatively independent subproblems to agree on a value and make a decision&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;View Hyperledger Sawtooth source code is available on &lt;a href="https://github.com/hyperledger/sawtooth-core"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissionless&lt;/td&gt;
&lt;td&gt;Pluggable Framework&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#4-eosio"&gt;
  &lt;/a&gt;
  4. EOSIO
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epyYJFeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/eos.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epyYJFeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/eos.jpeg" alt="EOSIO"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eos.io/"&gt;EOSIO&lt;/a&gt; is a highly performant, open-source blockchain platform launched in 2018 by Block.one. EOSIO offers a fast, reliable, and highly secure platform for building blockchain applications.&lt;/p&gt;

&lt;p&gt;EOSIO allows you to deploy smart contracts on its existing networks. You can also build your own EOSIO networks and deploy smart contracts on them.&lt;/p&gt;

&lt;p&gt;EOSIO smart contracts are written in the C++ programming language. To learn how to write and deploy smart contracts on EOSIO, see the &lt;a href="https://eos.io/"&gt;official docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Though not as popular as stalwarts like Ethereum, EOSIO has some unique selling points. Developers choose EOSIO for their blockchain projects because it is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Fast and efficient&lt;/li&gt;
&lt;li&gt;  Highly configurable&lt;/li&gt;
&lt;li&gt;  Highly secure&lt;/li&gt;
&lt;li&gt;  Highly compatible&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://eos.io/for-developers/"&gt;Developer-focused&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a cherry on top, the EOSIO website does a great job of keeping the community abreast of the latest &lt;a href="https://eos.io/news-insights/"&gt;news&lt;/a&gt; and &lt;a href="https://eos.io/events/"&gt;events&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissioned&lt;/td&gt;
&lt;td&gt;Delegated Proof of Stake&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-corda"&gt;
  &lt;/a&gt;
  5. Corda
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Jc6qpYI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/r3-corda.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Jc6qpYI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/r3-corda.jpeg" alt="R3 Corda"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.r3.com/corda-platform/"&gt;Corda&lt;/a&gt; is an open-source blockchain platform built by the R3 Consortium in 2015. Corda was initially designed for financial institutions, but it has since been expanded to serve additional fields such as healthcare, insurance, digital assets, and finance. The next-gen blockchain framework bills itself as ‚Äúthe DLT platform of choice for financial services and beyond.‚Äù&lt;/p&gt;

&lt;p&gt;Corda has a permission ledger type and supports the smart contract feature, meaning you can write and deploy smart contracts on the Corda blockchain. &lt;a href="https://docs.r3.com/en/platform/corda/4.8/open-source/key-concepts.html"&gt;Corda smart contracts&lt;/a&gt; can either be written in Java or Kotlin.&lt;/p&gt;

&lt;p&gt;The platform has no mining feature, so part of the transactions is never seen in most nodes. In other words, Corda transactions are not open for all nodes. There are no cryptocurrencies or tokens in Corda.&lt;/p&gt;

&lt;p&gt;Corda has a pluggable consensus, which means it has many &lt;a href="https://docs.r3.com/en/platform/corda/4.8/open-source/key-concepts-consensus.html"&gt;consensus algorithms&lt;/a&gt; to choose from.&lt;/p&gt;

&lt;p&gt;Corda has validity consensus and uniqueness consensus:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Validity consensus checks that the transaction is accepted by the contracts of every state and inputs and that the transaction has all the required signatures&lt;/li&gt;
&lt;li&gt;  Unique consensus agrees to a value if the inputs to a transaction are unique and have not been used in other transactions&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissioned&lt;/td&gt;
&lt;td&gt;Delegated Proof of Stake&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#6-quorum"&gt;
  &lt;/a&gt;
  6. Quorum
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--izjqD9ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/acquies-quorum.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--izjqD9ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/acquies-quorum.jpeg" alt="Quorum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://consensys.net/quorum/"&gt;Quorum&lt;/a&gt; is an open-source blockchain platform based on Ethereum. Built around 2016, it was designed to serve the finance industry and enable enterprises to ‚Äúleveral Ethereum for their high-value blockchain applications.‚Äù&lt;/p&gt;

&lt;p&gt;Recently, &lt;a href="https://www.businesswire.com/news/home/20200825005497/en/ConsenSys-Acquires-Quorum%C2%AE-Platform-from-J.P.-Morgan"&gt;Quorum was acquired by ConsenSys from JP Morgan&lt;/a&gt;. Many companies trust Quorum and have adopted it in their business, including Microsft, JP Morgan, Covantis, South African Reserve Bank, SiaChain, Komgo, and more.&lt;/p&gt;

&lt;p&gt;Quorum has support for enterprises that want to adopt the blockchain platform for their business. It has a permissioned ledger type but also allows for customizations based on the client‚Äôs need. In addition, Quorum supports both public and private networks as well as smart contracts.&lt;/p&gt;

&lt;p&gt;Just like in Ethereum, smart contracts in Quorum are written in Solidity, making it very easy to switch from Ethereum to Quorum. The consensus algorithm of Quorum is voting-based; it agrees to a transaction and block depending on the number of votes the transaction and block have from the nodes.&lt;/p&gt;

&lt;p&gt;For more information on how to get started using the Quorum blockchain platform, see the official &lt;a href="https://consensys.net/quorum/developers/"&gt;developer docs&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissioned&lt;/td&gt;
&lt;td&gt;Voting&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There are many blockchain development frameworks available, but the ones listed here are the most popular in the world.&lt;/p&gt;

&lt;p&gt;In this guide, we introduced the concept of blockchain, described how it‚Äôs changing the world as we know it, and listed the most widely used blockchain development platforms. We evaluated each platform for its strengths and weaknesses, reviewed common use cases associated with each, and examined the supported consensus algorithms, ledger types, and cryptocurrencies.&lt;/p&gt;

&lt;p&gt;Blockchain is a complex topic to wrap your head around, especially with all the various platforms available for developing blockchain-based apps. The best way to learn is to start with the basics, discover how they work under the hood, and build from there. Keep your eye on this space for more blockchain content!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-full-visibility-into-your-web-apps"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Full visibility into your web apps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is a frontend application monitoring solution that lets you replay problems as if they happened in your own browser. Instead of guessing why errors happen, or asking users for screenshots and log dumps, LogRocket lets you replay the session to quickly understand what went wrong. It works perfectly with any app, regardless of framework, and has plugins to log additional context from Redux, Vuex, and &lt;a class="mentioned-user" href="https://dev.to/ngrx"&gt;@ngrx&lt;/a&gt;
/store.&lt;/p&gt;

&lt;p&gt;In addition to logging Redux actions and state, LogRocket records console logs, JavaScript errors, stacktraces, network requests/responses with headers + bodies, browser metadata, and custom logs. It also instruments the DOM to record the HTML and CSS on the page, recreating pixel-perfect videos of even the most complex single-page apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The 3 October Frontend tips about a11y and UX</title>
      <author>Stas Melnikov</author>
      <pubDate>Tue, 12 Oct 2021 16:35:24 +0000</pubDate>
      <link>https://dev.to/melnik909/the-3-october-frontend-tips-about-a11y-and-ux-11ba</link>
      <guid>https://dev.to/melnik909/the-3-october-frontend-tips-about-a11y-and-ux-11ba</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-bigger-clickable-area-the-better-userfriendly-interactive-elements"&gt;
  &lt;/a&gt;
  The bigger clickable area the better user-friendly interactive elements
&lt;/h2&gt;

&lt;p&gt;When we design interactive elements we have to think about how users will interact with them, in particular, a clickable area. &lt;/p&gt;

&lt;p&gt;That is important because users use different kinds of interactions. I often see designers and developers make a clickable area that is equal sizes of the element. &lt;/p&gt;

&lt;p&gt;It's nice for users who use a mouse. But that's a big problem for other users. If users have  a motor disability click on such an element is a nearly impossible task,&lt;/p&gt;

&lt;p&gt;Sometimes I can't hit on such elements when I tap on them using a finger. Also outline around elements has not enough contrast, if I focused on them using a keyboard,&lt;/p&gt;

&lt;p&gt;But we can solve these problems easily. Just we should design more largest clickable area that will not conflict with other elements around.   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y7rDml1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3Ijo2MjB9/patreon-media/p/post/56937666/67caae32ca1a41859f94e25be24d8579/1.jpg%3Ftoken-time%3D1635292800%26token-hash%3DpVEa_BCCuXgCfixBPmjEiBrn72YcJP6BxUvZQ2j2Hg0%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-button-role-isnt-enough-for-an-accessible-interface"&gt;
  &lt;/a&gt;
  The button role isn't enough for an accessible interface
&lt;/h2&gt;

&lt;p&gt;There is a practice of overriding the button's default role. It's a bad practice already because authors of the ARIA in HTML standard prohibit overriding of default roles in section 2.1.&lt;/p&gt;

&lt;p&gt;But in addition, people think if they define role="button" this element becomes accessible. Yes, it's true for screen readers. But that's only one case!&lt;/p&gt;

&lt;p&gt;This "button" isn't accessible for a keyboard. Users can't focus on this element using the tab key. Also, this "button" isn't accessible for interaction using the enter or space keys.&lt;/p&gt;

&lt;p&gt;So if you want to define role="button" don't do that. Just use the button element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- or --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Go&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-arialabelledby-simplify-navigation-for-users-of-screen-readers"&gt;
  &lt;/a&gt;
  The aria-labelledby simplify navigation for users of screen readers
&lt;/h2&gt;

&lt;p&gt;Any web interface has a lot of sections that help users without vision disabilities orient at the page. We just see headings and understand that is a section and also its sense.&lt;/p&gt;

&lt;p&gt;But some users can't see. They use the special quick navigation mode known as "Regions list" in screen readers. In this mode screen readers display all regions on the page. So users can go to any by some taps.&lt;/p&gt;

&lt;p&gt;Unfortunately, there is a problem that is section elements aren't displayed in this mode until we associate section heading with a section using the aria-labelledby attribute.&lt;/p&gt;

&lt;p&gt;So we have to add the id to the heading and add this as a value to the aria-labelledby attribute that is defined for the section element.  As a result, this section will be added to the regions list and users will know about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;don't do this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;you can use it instead&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;aria-labelledby=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"about-me"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;About me&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum, dolor sit amet consectetur...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt;&lt;br&gt;
Also read &lt;a href="https://dev.to/melnik909/the-4-frontend-tips-for-improving-a11y-and-ux-539e"&gt;The 4 September Frontend tips about a11y and UX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚ù§ Thank you so much, my sponsors: Ben Rinehart, Sergio Kagiema, Jesse Willard, Tanya Ten, Spiridon Konofaos. &lt;/p&gt;

&lt;p&gt;I wrote this article with donations of them because content creating is my full-time job. That's free because I want everyone to have the opportunity to learn how to make interfaces more user-friendly. &lt;/p&gt;

&lt;p&gt;I do that while I have donations from my sponsors. I'm looking for new sponsors who will help me. So if you want me to continue to write articles, please, support me on Patreon.&lt;br&gt;
&lt;a href="https://www.patreon.com/melnik909"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0zkeHmS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://c10.patreonusercontent.com/3/eyJ3IjoxOTIwLCJ3ZSI6MX0%253D/patreon-media/p/campaign/2871133/09751df69a6d4a3990d4f6a2fb77340f/19.jpg%3Ftoken-time%3D1633305600%26token-hash%3DF2s9h-8VI8cZLJiiUalO1rewbCh6FPD_Qyepp1C7Aiw%253D" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/melnik909"&gt;Go to Patreon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñê I help people fix accessibility mistakes. If you need help chat me on &lt;a href="mailto:melnik909@ya.ru"&gt;melnik909@ya.ru&lt;/a&gt; or dev.to direct. Please, specify the subject of the email "Stas, I need help"&lt;/p&gt;

&lt;p&gt;üëÄ Friends, I tell stories from my career on Substack. Join &lt;a href="https://stasmelnikov.substack.com"&gt;my free newsletter&lt;/a&gt;, if you're interested in my background or you want to get my updates first&lt;/p&gt;

</description>
      <category>css</category>
      <category>a11y</category>
      <category>ux</category>
      <category>html</category>
    </item>
    <item>
      <title>IBM Hacktoberfest Workshops!</title>
      <author>Jenna Ritten</author>
      <pubDate>Tue, 12 Oct 2021 16:13:44 +0000</pubDate>
      <link>https://dev.to/ibmdeveloper/ibm-hacktoberfest-workshops-5fih</link>
      <guid>https://dev.to/ibmdeveloper/ibm-hacktoberfest-workshops-5fih</guid>
      <description>&lt;h1&gt;
  &lt;a href="#welcome-back-to-tutorial-tuesday"&gt;
  &lt;/a&gt;
  Welcome back to Tutorial Tuesday!
&lt;/h1&gt;

&lt;p&gt;In honor of my absolute FAVORITE time of year, &lt;strong&gt;Hacktoberfest&lt;/strong&gt;, this week I'll share with you a list of my personal Hacktoberfest Workshops that I'll be running this month. My goal is to get you comfortable with Open Source.&lt;br&gt;
&lt;strong&gt;I hope to see you all there! Happy Hacking!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hacktoberfest-ibm-code-engine-101-amp-201-workshops"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.crowdcast.io/e/ibm-code-engine"&gt;[HACKTOBERFEST] IBM Code Engine 101 &amp;amp; 201 Workshops&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;(TOMORROW &amp;amp; THURS)&lt;br&gt;
&lt;strong&gt;10/13 &amp;amp; 10/14 @ 2pm PT / 4pm CT / 5pm ET&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.crowdcast.io/e/ibm-code-engine"&gt;&lt;strong&gt;Register Here&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ac_RZGLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkahpp1qfnvnnsp2bt4w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ac_RZGLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkahpp1qfnvnnsp2bt4w.png" alt="IBM Code Engine 101 &amp;amp; 201 Crowdcast Event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬† &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hacktoberfest-enable-flawless-logistics-with-ibm-code-engine-x-sib-solutions"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.crowdcast.io/e/ibm-ce-sib"&gt;[HACKTOBERFEST] Enable Flawless Logistics with IBM Code Engine x SiB Solutions&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;(NEXT WEEK)&lt;br&gt;
&lt;strong&gt;10/20 &amp;amp; 10/21 @ 9am PT / 11am CT / 12pm ET&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.crowdcast.io/e/ibm-ce-sib"&gt;&lt;strong&gt;Register Here&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sa4oLIzQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h39k52aqocruwjsaljqi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sa4oLIzQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h39k52aqocruwjsaljqi.png" alt="IBM x SiB Solutions Code Engine Crowdcast Event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬† &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hacktoberfest-add-googlefacebook-oauth-to-a-react-app-amp-deploy-to-openshift"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.crowdcast.io/e/appid-openshift"&gt;[HACKTOBERFEST] Add Google/Facebook OAuth to a React App &amp;amp; Deploy to OpenShift&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;10/27@ 3:30pm PT / 5:30pm CT / 6:30pm ET&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.crowdcast.io/e/appid-openshift"&gt;&lt;strong&gt;Register Here&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tdXzVCQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7h5wigj6pgs9u4jmhi9g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tdXzVCQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7h5wigj6pgs9u4jmhi9g.png" alt="React App w Google/Facebook OAuth on OpenShift Crowdcast Event"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¬† &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-get-out-there-and-hack-together-something-amazing"&gt;
  &lt;/a&gt;
  NOW GET OUT THERE AND HACK TOGETHER SOMETHING AMAZING!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0czdlwQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18jfnp4tbjwyygexin2z.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0czdlwQv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18jfnp4tbjwyygexin2z.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect w Me!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://linktr.ee/jritten"&gt;https://linktr.ee/jritten&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>JavaScript Game Dev | Sprite Animations with Keyboard Input and a Halloween Theme
</title>
      <author>CodingWith-Adam</author>
      <pubDate>Tue, 12 Oct 2021 16:03:45 +0000</pubDate>
      <link>https://dev.to/codingwithadam/javascript-game-dev-sprite-animations-with-keyboard-input-and-a-halloween-theme-1gko</link>
      <guid>https://dev.to/codingwithadam/javascript-game-dev-sprite-animations-with-keyboard-input-and-a-halloween-theme-1gko</guid>
      <description>&lt;p&gt;In this exciting tutorial we're going to learn how to animate using a series of images on a html canvas for a game. The code that we will write is going to be super clean and well architected. No Game development frameworks were used in this tutorial!&lt;/p&gt;

&lt;p&gt;Our player will have the following animations: idle, walk, run, jump and a death animation.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yTlmOpW6kOc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What HTML tag do you use for Sarcasm?</title>
      <author>Timothy Foster</author>
      <pubDate>Tue, 12 Oct 2021 16:00:32 +0000</pubDate>
      <link>https://dev.to/auroratide/what-html-tag-do-you-use-for-sarcasm-48he</link>
      <guid>https://dev.to/auroratide/what-html-tag-do-you-use-for-sarcasm-48he</guid>
      <description>&lt;p&gt;Ah yes, sarcasm, the &lt;em&gt;pinnacle&lt;/em&gt; of human language. Life would be so &lt;em&gt;incredibly&lt;/em&gt; dull without it.&lt;/p&gt;

&lt;p&gt;And yet, despite sarcasm's profound influence on both oral and written conversation, we don't have a way to denote it in text! I mean, at least in person you can roll your eyes or change your tone to indicate some witty derision. But text? It's just neutral words on a page. We can't even use code to properly mark something as sarcastic!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Or &lt;em&gt;can&lt;/em&gt; we?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#cant-we-use-punctuation"&gt;Can't we use punctuation‚∏Æ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#beyond-the-period"&gt;Beyond the period üßê&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#huh-textual-punctuation-ltsarcasmgt"&gt;Huh, textual punctuation? &amp;lt;/sarcasm&amp;gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ltsarcasmgt-is-official"&gt;&amp;lt;/sarcasm&amp;gt; is official?!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#html-tags-are-like-knives"&gt;HTML Tags are like Knives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#tagging-sarcasm-with-html"&gt;Tagging Sarcasm with HTML&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-ltigt-tag"&gt;The... &amp;lt;i&amp;gt; Tag?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#emulating-verbal-cues"&gt;&lt;em&gt;Em&lt;/em&gt;ulating Verbal Cues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#but-dont-use-ltqgt"&gt;But don't use &amp;lt;q&amp;gt;!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#sooo-where-does-this-leave-us"&gt;Sooo... where does this leave us?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cant-we-use-punctuation"&gt;
  &lt;/a&gt;
  Can't we use punctuation‚∏Æ
&lt;/h2&gt;

&lt;p&gt;Do you enjoy lemonade on a hot summer day. I know I sure do?&lt;/p&gt;

&lt;p&gt;...Is it just me, or is something &lt;em&gt;off&lt;/em&gt; about those two sentences‚∏Æ&lt;/p&gt;

&lt;p&gt;Sorry, that was meant to be a rhetorical question! You could tell because I used the &lt;b&gt;percontation point&lt;/b&gt;, that backwards question mark thing. It was invented in the 1500s specifically for questions not meant to be answered. You don't really see it &lt;del&gt;a lot&lt;/del&gt; ever nowadays though, as it fell out of favor a long time ago.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nPL2vQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by9b6rlfoacma6qhlf7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nPL2vQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/by9b6rlfoacma6qhlf7a.png" alt="A backwards question mark"&gt;&lt;/a&gt;&lt;p&gt;The Percontation Point sure looks funky.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Anyways, those first couple sentences feel wrong because I used unexpected punctuation. In a way, our periods, exclamation points, and question marks convey &lt;em&gt;tone&lt;/em&gt;, namely a neutral, excited, and questioning tone respectively.&lt;/p&gt;

&lt;p&gt;So if punctuation makes words sound exciting, how about punctuation for making something sound sarcastic?&lt;/p&gt;

&lt;p&gt;And people have tried that! Let me introduce you to...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WPiwEeKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbyohr3ytxophafcsj2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WPiwEeKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbyohr3ytxophafcsj2.png" alt="Four punctuation points in a row."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The point d'ironie (1899)&lt;/li&gt;
&lt;li&gt;The irony point (1966)&lt;/li&gt;
&lt;li&gt;The ironieteken (2007)&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://www.sarcmark.com/"&gt;SarkMark&lt;/a&gt;&lt;sup&gt;TM&lt;/sup&gt; (2010, and yes... it's even trademarked)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And of course, none of these ever caught on. Looks like we're stuck with just three ways to end a sentence, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or &lt;code&gt;!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Except...&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xTdQEBHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy9vtnyybfc9j2qkyk8p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTdQEBHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qy9vtnyybfc9j2qkyk8p.png" alt="What if I told you we have hundreds of punctuation marks?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#beyond-the-period"&gt;
  &lt;/a&gt;
  Beyond the period üßê
&lt;/h2&gt;

&lt;p&gt;The web has inspired written (typed?) language to adapt in fascinating ways, not the least of which is the advent of &lt;strong&gt;emoji&lt;/strong&gt;. Text loses facial cues, so... let's just add faces to text!&lt;/p&gt;

&lt;p&gt;End a sentence with an emoji and suddenly the words have a voice üòä&lt;/p&gt;

&lt;p&gt;Let's see how emoji changes one simple sentence...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;That was a good joke ü§£&lt;/li&gt;
&lt;li&gt;That was a good joke üëè&lt;/li&gt;
&lt;li&gt;That was a good joke üôÉ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first two seem sincere in their praise, albeit in different ways. That last one, though, sounds a bit... &lt;em&gt;sarcastic&lt;/em&gt; ü§î&lt;/p&gt;

&lt;p&gt;So in a way, emoji used this way can be thought of &lt;em&gt;like&lt;/em&gt; punctuation, giving sentences a very wide variety of tones you'd otherwise only be able to pick up in person.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wTu1UIX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmgig4lnonyf87rtc558.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wTu1UIX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmgig4lnonyf87rtc558.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But maybe a yellow face isn't appropriate or possible where you want to make your snide comment. Is there a way to use &lt;em&gt;just text&lt;/em&gt; as punctuation?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#huh-textual-punctuation-ltsarcasmgt"&gt;
  &lt;/a&gt;
  Huh, textual punctuation? &amp;lt;/sarcasm&amp;gt;
&lt;/h2&gt;

&lt;p&gt;Using text as punctuation may sound a bit silly at first, but people have (and still do) actually do this for sarcasm! Peruse the internet long enough and you might have seen people write sentences like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;John Doe is a brilliant politician &amp;lt;/sarcasm&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That &lt;a href="https://www.urbandictionary.com/define.php?term=%3C%2Fsarcasm%3E"&gt;&amp;lt;/sarcasm&amp;gt;&lt;/a&gt; bit denotes sarcasm (clearly). And yes, I &lt;em&gt;did&lt;/em&gt; just link Urban Dictionary as a reference &amp;lt;/sarcasm&amp;gt;.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Nowadays, it's usually shortened to just &lt;code&gt;/s&lt;/code&gt;.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;So where did such a funny looking thing come from anyway?&lt;/p&gt;

&lt;p&gt;Well, it turns out to be a bit of a &lt;strong&gt;code joke&lt;/strong&gt;! Websites are coded (in part) using a language called Hypertext Markup Language (HTML). HTML gives pages structure, determining whether a block of text is a paragraph, or a heading, or some other thing. This is done using &lt;b&gt;tags&lt;/b&gt;; for example, the bolded "code joke" from the earlier sentence uses the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag, which indicates it is an &lt;em&gt;important&lt;/em&gt; phrase.&lt;/p&gt;

&lt;p&gt;A web author would code it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;It is a &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;code joke&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Every start tag is paired with an end tag, so the &lt;code&gt;&amp;lt;/strong&amp;gt;&lt;/code&gt; there indicates the end of the important text. &lt;/p&gt;

&lt;p&gt;And while &lt;code&gt;&amp;lt;sarcasm&amp;gt;&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; a real HTML tag, people started using "&amp;lt;/sarcasm&amp;gt;" to indicate the end of a sarcastic phrase!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Wait wait wait&lt;/em&gt;, did I say it wasn't a real tag? Let me correct myself real quick...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WhlbFJr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nsm37wxx5qqjocj2aj6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WhlbFJr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5nsm37wxx5qqjocj2aj6.gif" alt="A man quickly flips through a book."&gt;&lt;/a&gt;&lt;p&gt;&lt;a href="https://tenor.com/view/book-confusion-huh-what-read-gif-16432979"&gt;Book Confusion&lt;/a&gt; by &lt;a href="https://tenor.com"&gt;tenor.com&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ltsarcasmgt-is-official"&gt;
  &lt;/a&gt;
  &amp;lt;/sarcasm&amp;gt; is official?!
&lt;/h2&gt;

&lt;p&gt;Funnily enough, &lt;code&gt;&amp;lt;/sarcasm&amp;gt;&lt;/code&gt; is in the &lt;em&gt;&lt;a href="https://html.spec.whatwg.org"&gt;official HTML rulebook&lt;/a&gt;&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;All the way down in &lt;a href="https://html.spec.whatwg.org/#parsing-main-inbody"&gt;section 13.2.6.4.7&lt;/a&gt; is a little blurb telling browsers what to do if they encounter &lt;code&gt;&amp;lt;/sarcasm&amp;gt;&lt;/code&gt; in code:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[When handling a token with] An end tag whose tag name is "sarcasm": Take a deep breath, then act as described in the "any other end tag" entry below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ironically, the instruction itself is rather sarcastic. But perhaps disappointingly, this is saying there's nothing special about the sarcasm end tag, and it should be treated like everything else. In other words, it's just a jab at the historical use of the meme.&lt;/p&gt;

&lt;p&gt;And besides, this just the &lt;em&gt;end&lt;/em&gt; tag; the handbook has nothing for a start tag &lt;code&gt;&amp;lt;sarcasm&amp;gt;&lt;/code&gt;, and every &lt;em&gt;real&lt;/em&gt; HTML element has a start tag.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gsCwvnl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vg1rmeombu34r5igzbzs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gsCwvnl2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vg1rmeombu34r5igzbzs.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hmm, speaking of &lt;em&gt;real&lt;/em&gt; HTML elements... above we saw that &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; was used to mark text as being very important, and yet it wasn't &lt;em&gt;named&lt;/em&gt; &lt;code&gt;&amp;lt;important&amp;gt;&lt;/code&gt;. So, even if there's not an HTML element &lt;em&gt;named&lt;/em&gt; &lt;code&gt;&amp;lt;sarcasm&amp;gt;&lt;/code&gt;, is it possible for there to be something we could &lt;em&gt;use&lt;/em&gt; for sarcasm?&lt;/p&gt;

&lt;p&gt;In other words, &lt;strong&gt;is there a way to denote sarcasm... with code?!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-tags-are-like-knives"&gt;
  &lt;/a&gt;
  HTML Tags are like Knives
&lt;/h2&gt;

&lt;p&gt;Did you know that some knives have holes in them?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WVHp5kDz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gq0i9x90wtkyvtww4hz9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WVHp5kDz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gq0i9x90wtkyvtww4hz9.png" alt="A knife with three large holes on the blade."&gt;&lt;/a&gt;&lt;p&gt;A &lt;a href="https://www.cutco.com/products/product.jsp?item=traditional-cheese-knife"&gt;Cutco Cheese Knife&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Those holes aren't there to be trendy. It turns out a knife like this is designed specifically for cutting &lt;em&gt;cheese&lt;/em&gt;. I dunno if you're like me and just cut cheese with a normal knife, but sometimes when I do that the cheese sticks to the blade. The holes on a cheese knife prevent that stickage, allowing for a cleaner, far more exquisite cut.&lt;/p&gt;

&lt;p&gt;Indeed, cooking is an advanced enough field that it has a specific knife for practically any conceivable purpose...&lt;/p&gt;

&lt;p&gt;...kinda like HTML tags! The &lt;a href="https://html.spec.whatwg.org"&gt;official HTML rulebook&lt;/a&gt; lists a myriad of tags, each with a specific purpose in mind.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bbZnceoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dfcc7dyhhu4pv2f94bo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bbZnceoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7dfcc7dyhhu4pv2f94bo.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See, HTML tags impart meaning, or &lt;strong&gt;semantics&lt;/strong&gt;, to text they annotate. Here are some examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; indicates that the text is important, serious, or urgent.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; is used for text that is a direct quote from somewhere else.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; denotes the main title of the web page. As a side effect, it also usually makes the title visibly larger.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because each tag has specific semantics, it's possible to misuse them. Just as how I shouldn't use a butter knife to cut boned meat, a web author would not use an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag just to make some text big. The &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag is &lt;em&gt;only&lt;/em&gt; for the page's title, so to make some different text big the author would need to use something else.&lt;/p&gt;

&lt;p&gt;So our question, really, is whether or not the glorious HTML handbook has a tag whose semantics include sarcasm!&lt;/p&gt;

&lt;p&gt;
  &lt;small&gt;Why would we want this anyway?&lt;/small&gt;
  &lt;p&gt;&lt;small&gt;&lt;a href="https://users.soe.ucsc.edu/~maw/papers/kbs_2014_justo.pdf"&gt;Studies with computers&lt;/a&gt; have shown that machines are not great at identifying sarcasm without significant help. Using code to annotate things like importance, emphasis, and sarcasm can help machines.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;One practical use is with screen readers, which read web pages aloud to those who cannot see the page. Maybe there's a future where if text is marked as sarcastic, the screen reader can indicate as much by fluctuating its tone.&lt;/small&gt;&lt;/p&gt; 


&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tagging-sarcasm-with-html"&gt;
  &lt;/a&gt;
  Tagging Sarcasm with HTML
&lt;/h2&gt;

&lt;p&gt;Let's say your friend told a pretty bad pun, and somehow your able to respond with HTML code. You want to say, "That was perfect." Problem is, that phrase on its own is very ambiguous. If only you could mark it somehow...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;SOMETHING&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;That was perfect.&lt;span class="nt"&gt;&amp;lt;/SOMETHING&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-ltigt-tag"&gt;
  &lt;/a&gt;
  The... &amp;lt;i&amp;gt; Tag?
&lt;/h3&gt;

&lt;p&gt;Well, there are dozens upon dozens of HTML tags, and &lt;em&gt;none&lt;/em&gt; of them are specifically for sarcasm. How perfect üôÉ&lt;/p&gt;

&lt;p&gt;The one tag that comes the closest is the &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag. It has many uses, one of them being used for text that is in an &lt;q&gt;alternate voice or mood&lt;/q&gt;. In a way, sarcasm &lt;em&gt;is&lt;/em&gt; a different mood from the rest of the text, so lacking an alternative...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sarcasm"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;That was perfect.&lt;span class="nt"&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;It is recommended to use &lt;code&gt;class&lt;/code&gt; to specify why the &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag is being used, since the tag can be used for many different things.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;There's one &lt;strong&gt;very big problem&lt;/strong&gt; with this idea, though.&lt;/p&gt;

&lt;p&gt;By default, the &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag &lt;em&gt;italicizes&lt;/em&gt; text, and by convention, italic text is interpretted as verbal stress, not sarcasm. It is possible to undo the italics with Cascading Style Sheets (CSS), a web technology that lets authors adjust how things look. But doing that leaves us back at the beginning: "That was perfect," with no indication of sarcasm!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UCZh2M12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vstu0xzskb2zjgwyzaqc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UCZh2M12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vstu0xzskb2zjgwyzaqc.gif" alt="A man dramatically rolls his eyes."&gt;&lt;/a&gt;&lt;p&gt;&lt;a href="https://tenor.com/view/house-md-gregory-house-ugh-whatever-eye-roll-gif-7380271"&gt;Gregory House&lt;/a&gt; by &lt;a href="https://tenor.com"&gt;tenor.com&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Even though the text is &lt;em&gt;semantically&lt;/em&gt; tagged as being sarcastic, it does not outwardly present itself that way, which is arguably &lt;em&gt;less&lt;/em&gt; than useless. If only there were &lt;em&gt;some&lt;/em&gt; other way to make something appear sarcastic...&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Textual semantics is usually tied with conversations about &lt;b&gt;accessibility&lt;/b&gt;, making pages work for abled and disabled people alike. By adding semantics to a page, it becomes more usable by people who cannot otherwise see the page.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Thing is, accessibility goes both ways. If a screen reader announces text as a title to a non-sighted person, then that text better &lt;em&gt;appear&lt;/em&gt; like a title to sighted people as well!&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#emulating-verbal-cues"&gt;
  &lt;/a&gt;
  &lt;em&gt;Em&lt;/em&gt;ulating Verbal Cues
&lt;/h3&gt;

&lt;p&gt;Sarcasm gets lost in text due to losing certain cues, like body language and tone. We saw that emoji are kind of able to simulate facial language, so is there a way to simulate &lt;em&gt;tone&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;In fact, there &lt;em&gt;is&lt;/em&gt;, and I've been using it all throughout this post!&lt;/p&gt;

&lt;p&gt;All of the &lt;strong&gt;&lt;em&gt;italic text&lt;/em&gt;&lt;/strong&gt; hints at some kind of verbal stress. In HTML code, this is accomplished using the &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag, and according to the rulebook, its purpose is to &lt;em&gt;em&lt;/em&gt;phasize words and phrases in order to change the overall meaning of the sentence.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;This &lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt;emphasizes&lt;span class="nt"&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; the word.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example, the following two sentences are exactly the same, but because a different word is emphasized in each, they imply different situations.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"I did not eat the &lt;em&gt;cookie&lt;/em&gt;." - implying something else was eaten&lt;/li&gt;
&lt;li&gt;"I did not &lt;em&gt;eat&lt;/em&gt; the cookie." - implying something else happened to the cookie&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6EzqaXhR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njzvzzx8s186f52e4iz1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6EzqaXhR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njzvzzx8s186f52e4iz1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let's get back to our "That was perfect" phrase. Now equipped with the glorious power of &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;, we can do two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add &lt;em&gt;word cues&lt;/em&gt;, extra words that suggest a deeper meaning&lt;/li&gt;
&lt;li&gt;Add &lt;em&gt;verbal stress&lt;/em&gt; to sharpen the phrase's sarcasm&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
    &lt;p&gt;Wow, &lt;em&gt;that&lt;/em&gt; was &lt;em&gt;just&lt;/em&gt; perfect.&lt;/p&gt;
&lt;/blockquote&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;Wow, &lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt;that&lt;span class="nt"&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; was &lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt;just&lt;span class="nt"&gt;&amp;lt;/em&amp;gt;&lt;/span&gt; perfect.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  &lt;small&gt;Can't I use &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; for italics?&lt;/small&gt;
  &lt;p&gt;&lt;small&gt;&lt;strong&gt;No!&lt;/strong&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Even though both tags result in italic text, they have different purposes. The &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag is for an alternate mood, which is why it is appropriate to use to tag an entire sentence as generally sarcastic. The &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag is used for verbal emphasis, which is why it is better for modifying key words to simulate speaking a phrase sarcastically.&lt;/small&gt;&lt;/p&gt; 

&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-dont-use-ltqgt"&gt;
  &lt;/a&gt;
  But don't use &amp;lt;q&amp;gt;!
&lt;/h3&gt;

&lt;p&gt;There's one last HTML element worth talking about: &lt;code&gt;&amp;lt;q&amp;gt;&lt;/code&gt;! It represents text that is &lt;q&gt;quoted from another source&lt;/q&gt;, and has the effect of automatically adding quotation marks.&lt;/p&gt;

&lt;p&gt;Sarcasm is often associated with so-called "air quotes", but the &lt;code&gt;&amp;lt;q&amp;gt;&lt;/code&gt; element is &lt;em&gt;only&lt;/em&gt; for quoting some other thing. In fact, the HTML handbook goes so far to say &lt;q&gt;it is inappropriate to use the q element for marking up sarcastic statements&lt;/q&gt;!&lt;/p&gt;

&lt;p&gt;So yeah, don't use it üôÉ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sooo-where-does-this-leave-us"&gt;
  &lt;/a&gt;
  Sooo... where does this leave us?
&lt;/h2&gt;

&lt;p&gt;Text loses both verbal and non-verbal cues, making it harder to detect sarcasm. Oh no!&lt;/p&gt;

&lt;p&gt;But when there's a will, there's a way!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Recreate facial cues with emoji üôÉ&lt;/li&gt;
&lt;li&gt;Wittily use textual convention to your advantage &amp;lt;/sarcasm&amp;gt;&lt;/li&gt;
&lt;li&gt;In HTML code, tag a sentence as sarcastic with the &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;Or, strategically stress words with italics and &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So thousands of words later, I guess I should end by asking one last question.&lt;/p&gt;

&lt;p&gt;Was this ever &lt;em&gt;really&lt;/em&gt; a problem to begin with‚∏Æ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.quickanddirtytips.com/education/grammar/how-to-show-sarcasm-in-text"&gt;How to show sarcasm in text&lt;/a&gt; - Sarah Peters&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Irony_punctuation"&gt;Irony Punctuation&lt;/a&gt; - Wikipedia&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://web-docs.stern.nyu.edu/pa/kruger_email_ego.pdf"&gt;Egocentrism Over E-Mail&lt;/a&gt; - Kruger et al&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://users.soe.ucsc.edu/~maw/papers/kbs_2014_justo.pdf"&gt;Extracting relevant knowledge for the detection of sarcasm&lt;/a&gt; - Justo et al&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://html.spec.whatwg.org"&gt;HTML Living Standard&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://html.spec.whatwg.org/#the-i-element"&gt;The i element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://html.spec.whatwg.org/#the-em-element"&gt;The em element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://html.spec.whatwg.org/#the-q-element"&gt;The q element&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>üî• Vue Tips #29: Component Seams Framework: The easy way to split up components</title>
      <author>Michael Thiessen</author>
      <pubDate>Tue, 12 Oct 2021 16:00:14 +0000</pubDate>
      <link>https://dev.to/michaelthiessen/vue-tips-29-component-seams-framework-the-easy-way-to-split-up-components-1j8k</link>
      <guid>https://dev.to/michaelthiessen/vue-tips-29-component-seams-framework-the-easy-way-to-split-up-components-1j8k</guid>
      <description>&lt;p&gt;&lt;em&gt;This newsletter was sent out to my list on October 6, 2021. &lt;a href="https://michaelnthiessen.com/newsletter"&gt;Sign up here&lt;/a&gt; to get emails like this each week!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Heyo,&lt;/p&gt;

&lt;p&gt;Do you like hot sauce?&lt;/p&gt;

&lt;p&gt;Well, I tried making some last week, and it was an utter failure. So I'll stick with baking bread.&lt;/p&gt;

&lt;p&gt;And if you don't like hot sauce, maybe you'll enjoy these hot tips instead.&lt;/p&gt;

&lt;p&gt;‚Äî¬†Michael&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vpre-and-vonce"&gt;
  &lt;/a&gt;
  üî• v-pre and v-once
&lt;/h2&gt;

&lt;p&gt;If you've got large chunks of static or mostly static content, you can tell Vue to ignore it using the &lt;code&gt;v-pre&lt;/code&gt; or &lt;code&gt;v-once&lt;/code&gt; directives:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- These elements never change --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-pre&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Bananas for sale üçå&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
      Come get this wonderful fruit!
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
      Our bananas are always the same price ‚Äî¬†$1 each!
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rounded p-4 bg-yellow-200 text-black"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
        Number of bananas in stock: as many as you need
      &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        That's right, we never run out of bananas!
      &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
      Some people might say that we're... bananas about bananas!
    &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These can be useful performance optimizations if you need them.&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;v-pre&lt;/code&gt; Vue will treat the element and it's children as static HTML, and won't do any of it's magic on it. The &lt;code&gt;v-once&lt;/code&gt; directive tells Vue to evaluate it once, and then never update it again.&lt;/p&gt;

&lt;p&gt;Here are the docs for &lt;a href="https://v3.vuejs.org/api/directives.html#v-pre"&gt;v-pre&lt;/a&gt; and &lt;a href="https://v3.vuejs.org/api/directives.html#v-once"&gt;v-once&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#component-seams-framework-the-easy-way-to-split-up-components"&gt;
  &lt;/a&gt;
  üî• Component Seams Framework: The easy way to split up components
&lt;/h2&gt;

&lt;p&gt;Here's a technique for splitting up components:&lt;/p&gt;

&lt;p&gt;The code you write forms natural groups. You want to identify these groups, and the seams that run between them.&lt;/p&gt;

&lt;p&gt;Once you do that, it's easy to extract components ‚Äî¬†by keeping things in their natural groups as much as possible.&lt;/p&gt;

&lt;p&gt;The Component Seams Framework helps you do that in just three steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Find the seams&lt;/strong&gt; ‚Äî¬†they can be found in your template, by looking for &lt;em&gt;repeated sections&lt;/em&gt;, as well as sections that &lt;em&gt;perform different tasks&lt;/em&gt;. You can also find them in your props, state, and computed props, by looking for things that are &lt;em&gt;related&lt;/em&gt; and are often &lt;em&gt;updated together&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Stack the seams&lt;/strong&gt; ‚Äî¬†take all of the seams you've found, line them up, and you'll start to see where they agree (and where they don't).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Split along the seams&lt;/strong&gt; ‚Äî¬†piece by piece, we'll pull things out and then figure out what to do with its dependencies. Either &lt;em&gt;include the dependency&lt;/em&gt; in the new component or &lt;em&gt;pass it in&lt;/em&gt; to the new component somehow (prop, slot, or event).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This method is covered in more detail in &lt;a href="//michaelnthiessen.com/clean-components"&gt;Clean Components&lt;/a&gt; if you want to learn more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-vue-tips-you-need-to-know"&gt;
  &lt;/a&gt;
  üìú 25 Vue Tips You Need to Know
&lt;/h2&gt;

&lt;p&gt;I've written 58 Vue tips so far this year for you.&lt;/p&gt;

&lt;p&gt;That's 2 every week for 29 weeks (since March 22).&lt;/p&gt;

&lt;p&gt;I put 25 of them together for you in this one article (which is one of the top Vue posts of all time on DEV.to).&lt;/p&gt;

&lt;p&gt;Read it now: &lt;a href="https://dev.to/michaelthiessen/25-vue-tips-you-need-to-know-2h70"&gt;25 Vue Tips You Need to Know&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%97%9E-nuxt-3-is-nuxt-week"&gt;
  &lt;/a&gt;
  üóû Nuxt 3 is nuxt week!
&lt;/h2&gt;

&lt;p&gt;It's coming October 12.&lt;/p&gt;

&lt;p&gt;This is going to be huge, and I can't wait to try it out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vue 3&lt;/li&gt;
&lt;li&gt;Vite&lt;/li&gt;
&lt;li&gt;Typescript&lt;/li&gt;
&lt;li&gt;and so many other features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://nuxtjs.org/v3"&gt;Learn more about what's coming with Nuxt 3&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-real-problem"&gt;
  &lt;/a&gt;
  üí¨ The real problem
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Sometimes the problem is to discover what the problem is. ‚Äî¬†Gordon Glegg&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I've wasted so much of my life trying to solve things that weren't actually problems.&lt;/p&gt;

&lt;p&gt;Now I try to make sure that what I think is the problem is &lt;em&gt;actually&lt;/em&gt; the problem.&lt;/p&gt;

&lt;p&gt;It saves me so much time and effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spacedrepetition-master-computed-props"&gt;
  &lt;/a&gt;
  üß† Spaced-repetition: Master computed props
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The best way to commit something to long-term memory is to periodically review it, gradually increasing the time between reviews üë®‚Äçüî¨&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Actually remembering these tips is much more useful than just a quick distraction, so here's a tip from a couple weeks ago to jog your memory.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When a function does more than just return a value, it makes your code more complicated.&lt;/p&gt;

&lt;p&gt;These are called &lt;a href="https://michaelnthiessen.com/side-effect-surgery"&gt;side effects&lt;/a&gt;, and you should never have them inside of a computed prop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchUserInformation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// Side effect&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, fixing this is quite straightforward. We can just move that side effect into a watcher that is triggered whenever the computed prop updates:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetchUserInformation&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// Side effect&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;This applies equally to the composition API, although the syntax is slightly different.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At first glance, this may seem like we made the code more complicated. But actually, we've made it a &lt;a href="https://michaelnthiessen.com/side-effect-surgery"&gt;lot simpler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This concept is expanded on in my course, &lt;a href="https://michaelnthiessen.com/clean-components"&gt;Clean Components&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exclusive-tips-and-insights-every-week"&gt;
  &lt;/a&gt;
  Exclusive tips and insights every week
&lt;/h2&gt;

&lt;p&gt;Join 8335 other Vue devs and &lt;a href="//michaelnthiessen.com/newsletter"&gt;get exclusive tips and insights&lt;/a&gt; like these delivered straight to your inbox, every week.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You have great content in your emails. I seriously learn something from every one of them. ‚Äî¬†Titus Decali&lt;/p&gt;

&lt;p&gt;Thanks for another beautiful tip üôè ‚Äî¬†Victor Onuoha&lt;/p&gt;

&lt;p&gt;Loving these, and the spaced repetition ‚Äî¬†Mark Goldstein&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="//michaelnthiessen.com/newsletter"&gt;Sign up here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
