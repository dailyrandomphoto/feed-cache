<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Hactoberfest and me!😀</title>
      <author>Veera Srivastava (she/her)</author>
      <pubDate>Thu, 28 Oct 2021 13:54:12 +0000</pubDate>
      <link>https://dev.to/veerasrivastava/hactoberfest-and-you-4ch0</link>
      <guid>https://dev.to/veerasrivastava/hactoberfest-and-you-4ch0</guid>
      <description>&lt;p&gt;I completed the Hactoberfest, 2nd year in a row!!&lt;br&gt;
With the arrival of the October, being able to be driven into scouring through Github to find a repo that suits me is kind of fun!!&lt;/p&gt;

&lt;p&gt;Every year, there are new repos and along come opportunities for more learning, It really does change our community of open source! Thanks to &lt;a class="mentioned-user" href="https://dev.to/digitalocean_staff"&gt;@digitalocean_staff&lt;/a&gt;
 &amp;amp;&amp;amp; &lt;a class="mentioned-user" href="https://dev.to/thepracticaldev"&gt;@thepracticaldev&lt;/a&gt;
 for the whole experience!!&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>My Hacktober contributions in 2021</title>
      <author>Alvaro Montoro</author>
      <pubDate>Thu, 28 Oct 2021 13:48:35 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/my-hacktober-contributions-in-2021-1756</link>
      <guid>https://dev.to/alvaromontoro/my-hacktober-contributions-in-2021-1756</guid>
      <description>&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;




&lt;p&gt;I wasn't too active at Hacktoberfest this year :S&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>Mouse tracking eye using Vue 3, VueUse and CSS</title>
      <author>Taliesin</author>
      <pubDate>Thu, 28 Oct 2021 13:41:21 +0000</pubDate>
      <link>https://dev.to/taliescript/mouse-tracking-eye-using-vue-3-vueuse-and-css-44of</link>
      <guid>https://dev.to/taliescript/mouse-tracking-eye-using-vue-3-vueuse-and-css-44of</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;In this blog, I will be showing you have to make a mouse-tracking eye component using Vue 3, VueUse and a sprinkle of CSS. This eye-catching component will make a quirky addition to your future projects.&lt;/p&gt;

&lt;p&gt;Firstly let's break the eyes, my name is Taliesin, and I work at &lt;a href="https://www.pixelhop.io/"&gt;Pixelhop&lt;/a&gt;. I made this for our Halloween special project we at Pixelhop made called &lt;a href="https://trick-or-treat.pixelhop.io/"&gt;trick-or-treat&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;If you would like to get your eyes on the whole code example, please find it &lt;a href="https://codesandbox.io/s/mouse-tracking-eye-rpzyt?file=/src/App.vue"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Readers are recommended to have a basic understanding of Vue 3 using the composition API, also not recommended for anyone with Ommetaphobia or if you have anything against terrible eye puns. So if we see eye to eye, let's crack on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;So, to summer-eyes, for this to work, we will need to have an SVG of an eye with the pupil to one side. We are then just going to set the transform rotate property to point the pupil in the direction of the mouse as it moves.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project setup
&lt;/h3&gt;

&lt;p&gt;If you already have a project and an eye SVG ready, you can roll your eyes on to the next section. But if you're like the alien called Alen and missing an eye, here I will just be setting up a basic Vue 3 project and setting the foundation of what we are making.&lt;br&gt;
So first, we want to set up a basic Vue 3 project. The easiest way to do this is using npx and the Vue CLI by running the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @vue/cli create mouse-tracking-eye
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Select the default vue 3 preset &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWqVGrN2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2qwz07rdcnoo7zsbrbaf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWqVGrN2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2qwz07rdcnoo7zsbrbaf.jpeg" alt="Selecting the default vue 3 preset" width="808" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose your dependancies manager (I'm using npm)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3kLN6VGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvi55hx9kg8eqkw6jgyu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3kLN6VGE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvi55hx9kg8eqkw6jgyu.jpeg" alt="Selecting npm" width="880" height="100"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; into the folder and install the dependancies&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;mouse-tracking-eye/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm i
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now remove all the bits the vue cli gives us that we don't need. First, remove the components and assets folders. Then in the &lt;code&gt;App.vue&lt;/code&gt;, we should remove all the base stuff it gives us. You are just left with the template, script and style tag.&lt;/p&gt;

&lt;p&gt;I am using the &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; syntax, which you can read about &lt;a href="https://v3.vuejs.org/api/sfc-script-setup.html#basic-syntax"&gt;here&lt;/a&gt; and typescript because why not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- App.js --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt; &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to eye up the template, I'm using the SVG I used for our Halloween project. Add a div and give it a class of &lt;code&gt;container&lt;/code&gt;, then paste the SVG inside the container div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- App.ts &amp;gt; temaplate --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
    &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 33 33"&lt;/span&gt;
    &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      ...
  &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Centre the eye and add a black background, so the eye stands out with a bit of CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* App.js &amp;gt; style */&lt;/span&gt;

&lt;span class="nc"&gt;.conatainer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.eye&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Spec-tacular! Now, if you run your project, you should have an eye in the middle of your screen and a black background.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mouse-tracking-functionality"&gt;
  &lt;/a&gt;
  Mouse tracking functionality
&lt;/h3&gt;

&lt;p&gt;This section will focus on getting the eye to follow the mouse.&lt;/p&gt;

&lt;p&gt;As previously mentioned, we will be using the vueuse library. Vueuse is a super helpful function library for Vue 3 with a few functions that will simplify this. So let's install it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i @vueuse/core
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Import the functions we need into our app and we might as well import the function we need from Vue as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;!--&lt;/span&gt; &lt;span class="na"&gt;App&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;vue&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; script --&amp;gt;
import &lt;span class="si"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useMouse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;debouncedWatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;throttledWatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="si"&gt;}&lt;/span&gt; from '@vueuse/core';
import &lt;span class="si"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onMounted&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="si"&gt;}&lt;/span&gt; from 'vue';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Eye eye, now we got those imported, we can start using them. The first two we will use are &lt;code&gt;useMouse&lt;/code&gt; and &lt;code&gt;useWindowSize&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;useMouse&lt;/code&gt; returns the x and y of the mouse position, and &lt;code&gt;useWindowSize&lt;/code&gt; returns... You guessed it, the window size width and height.&lt;br&gt;
So just under the import, add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.vue &amp;gt; script&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mouseY&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMouse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useWindowSize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we need to get the eye location on the screen, to do this add a ref to the SVG in the template. So it will be something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- App.vue &amp;gt; template --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
  &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"eye"&lt;/span&gt;
  &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 33 33"&lt;/span&gt;
  &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and now we can reference it in the script, we just need to add a ref variable with null as its starting value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.vue &amp;gt; script&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eye&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Element&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Side note:&lt;/strong&gt; If you are using a setup function inside a regular script tag, make sure you add the ref to the return object, or it will not work.&lt;/p&gt;

&lt;p&gt;Now define the eye location reference&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.vue &amp;gt; script&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eyeLocation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DOMRect&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here I am setting the eye location inside the &lt;code&gt;onMounted&lt;/code&gt; function we import from vue earlier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.vue &amp;gt; script&lt;/span&gt;
&lt;span class="nx"&gt;onMounted&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;eyeLocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;eye&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also want to set the eye's location when the screen size is changed because depending on where it is this might move the eye. To achieve this we can use the &lt;code&gt;debounceWatch&lt;/code&gt;&lt;br&gt;
To summarise what happening here; we are watching for a change in the window height and width and for a change and running a debounce function when it does.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.vue &amp;gt; script&lt;/span&gt;
&lt;span class="nx"&gt;debouncedWatch&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;eyeLocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;eye&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;getBoundingClientRect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;debounce&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great, now we've now we've got an eye on its location, let's get the ball rolling and actually make the eye move.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.vue &amp;gt; script&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rotationDegrees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;throttledWatch&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;mouseX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mouseY&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eyeLocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;radianDegrees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;atan2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;eyeLocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;eyeLocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;rotationDegrees&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;radianDegrees&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;throttle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So if you got an eye for this sort of thing, then you'll be able to understand it, but if you're like a blind Bambi and have no-eye-deer. Don't worry; I'll give a quick summary of what's happening;&lt;/p&gt;

&lt;p&gt;Firstly, we define the ref &lt;code&gt;rotationDegrees&lt;/code&gt; which will be the number of degrees we need to rotate our eye. Next, we are using the &lt;code&gt;throttledWatch&lt;/code&gt; function to watch the mouse location, then set the &lt;code&gt;rotationDegrees&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, it gets the &lt;code&gt;radianDegrees&lt;/code&gt; using the &lt;code&gt;Math.atan2&lt;/code&gt; function; read more &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2"&gt;here&lt;/a&gt;. Basically, it receives the radian between the eye location and the mouse. I am using the top and right locations of the eye, but depending on where your eye's pupil is pointing, you may need to use a different location. Then we convert the radian into degrees we can use to rotate the eye.&lt;/p&gt;

&lt;p&gt;This function is then throttled to 60 times per second as we don't need to run this more than that as most screens only run a 60 hertz anyway.&lt;/p&gt;

&lt;p&gt;Now all we need to do is set the transform rotate property to the SVG and you'll really be turning some eyes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- App.vue &amp;gt; temaplate --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
  &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"eye"&lt;/span&gt;
  &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"`transform: rotate(${rotationDegrees - 40}deg) translateZ(0)`"&lt;/span&gt;
  &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 33 33"&lt;/span&gt;
  &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Side note:&lt;/strong&gt; You may need to do what I did by adding or subtracting a few degrees if your eye is not pointing precisely left or right.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Because we are getting the eye location on mounted and screen size change, you can place your eye anywhere on the screen, and it will still work.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this mini tutorial, and it helps you create some fun projects. Feel free to send us your creations. I would love to eye them up. You can find our contact details at &lt;a href="https://www.pixelhop.io/contact/"&gt;https://www.pixelhop.io/contact/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are interested to see the original eye, I made and our Halloween special project, check it out here: &lt;a href="https://trick-or-treat.pixelhop.io/"&gt;https://trick-or-treat.pixelhop.io/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please keep your eyes peeled for our new blogs at &lt;a href="https://www.pixelhop.io/writing/"&gt;https://www.pixelhop.io/writing/&lt;/a&gt; or sign up for our newsletter.&lt;/p&gt;

&lt;p&gt;See you later 👋&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Quiz📣: How Well Do You Understand Asynchronous JavaScript?</title>
      <author>Ekaterina Vujasinović</author>
      <pubDate>Thu, 28 Oct 2021 13:37:47 +0000</pubDate>
      <link>https://dev.to/ditdot/quiz-how-well-do-you-understand-asynchronous-javascript-5e4j</link>
      <guid>https://dev.to/ditdot/quiz-how-well-do-you-understand-asynchronous-javascript-5e4j</guid>
      <description>&lt;p&gt;Over the last few weeks, we had a lot of discussions on asynchronous JavaScript and patterns we use in our projects to build performant apps. It resulted in an article - &lt;a href="https://www.ditdot.hr/en/4-tips-better-asynchronous-javascript-code"&gt;4 tips on writing better async/await code&lt;/a&gt;. Besides practical aspects like asynchronous coding patterns and best practices, one of the discussed topics was the importance of understanding how JavaScript handles asynchronous code under the hood.&lt;/p&gt;

&lt;p&gt;Asynchronous code is passed to wait in one of the queues and executed whenever the call stack is empty. Tasks in the queues and call stack are coordinated by the event loop - the key mechanism used by JavaScript to avoid blocking the main thread. Learn more about it &lt;a href="https://blog.bitsrc.io/understanding-asynchronous-javascript-the-event-loop-74cd408419ff"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We've collected 4 interesting examples of code (it looks like 4 is our favorite number 😉) that will help you test your knowledge of event loop and JavaScript asynchronous execution flow. Let's start ⏬&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-which-queue-is-executed-first"&gt;
  &lt;/a&gt;
  1. Which Queue Is Executed First?
&lt;/h2&gt;

&lt;p&gt;Before diving deep into the event loop, call stack, and tasks, let's begin with a little warm-up question.&lt;/p&gt;

&lt;p&gt;Not all queues were created equal. Knowing that &lt;code&gt;setTimeout()&lt;/code&gt; callback is pushed to the task queue, and &lt;code&gt;then()&lt;/code&gt; callback to the microtask queue, which one do you think will log first?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Task queue &lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;timeout&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Microtask queue &lt;/span&gt;
&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;promise&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  Show the answer 👇
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promise&lt;/span&gt; 
&lt;span class="nx"&gt;timeout&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The tasks scheduled in the task queue will run first. But wait, how come the output logged from the &lt;code&gt;setTimeout()&lt;/code&gt; callback appears second in our example?&lt;/p&gt;

&lt;p&gt;In each iteration, the event loop will run the oldest initially existing task in the task queue first, and all the microtasks in the microtask queue second. When the event loop starts its first iteration, the task queue contains only one task - the main program script run. The &lt;code&gt;setTimeout()&lt;/code&gt; callback is added to the task queue during the first iteration and will be queued from tasks only during the next iteration.&lt;/p&gt;

&lt;p&gt;To better understand these mind-blowing concepts, check this &lt;a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/#why-this-happens"&gt;animated diagram&lt;/a&gt; by Jake Archibald.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-what-is-the-output-of-the-code-below"&gt;
  &lt;/a&gt;
  2. What Is the Output of the Code Below?
&lt;/h2&gt;

&lt;p&gt;To answer this question, you need to be familiar with the concepts like synchronous vs. asynchronous code order of execution and how the event loop is running tasks.&lt;/p&gt;

&lt;p&gt;Equally important, you also need to know which code runs synchronously and which asynchronously. Hint: not all Promise-related code is asynchronous. 🤯&lt;/p&gt;

&lt;p&gt;There are four &lt;code&gt;console.log()&lt;/code&gt; calls below.  What will be logged in the console and in which order?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//A&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// B&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// C&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// D&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  Show the answer 👇
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* B */&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="cm"&gt;/* D */&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="cm"&gt;/* C */&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="cm"&gt;/* A */&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The code inside the &lt;code&gt;new Promise&lt;/code&gt; executor function runs synchronously before the Promise goes to a resolved state (when &lt;code&gt;resolve()&lt;/code&gt; is called). For this reason example code logs &lt;code&gt;1&lt;/code&gt; and sets variable &lt;code&gt;a&lt;/code&gt; value to &lt;code&gt;3&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The variable value remains unchanged in all further &lt;code&gt;console.log()&lt;/code&gt;calls.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-in-what-order-will-letters-be-logged"&gt;
  &lt;/a&gt;
  3. In What Order Will Letters Be Logged?
&lt;/h2&gt;

&lt;p&gt;How do DOM events fit in the event loop task handling mechanism?  What we have here is a &lt;code&gt;div&lt;/code&gt; container containing a &lt;code&gt;button&lt;/code&gt; element. Event listeners are added to both the button and the container. Since the click event will bubble up,  both listener handlers will be executed on a button click.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Click&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is the output after button click?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; 
  &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;B&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  Show the answer 👇
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;B&lt;/span&gt;
&lt;span class="nx"&gt;A&lt;/span&gt;
&lt;span class="nx"&gt;C&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;No surprise here. The task of dispatching &lt;code&gt;click&lt;/code&gt; event and executing handler will be invoked via the event loop, with synchronous code logging first and &lt;code&gt;then()&lt;/code&gt; callback logging second. Next, the event bubbles up and the container event handler is executed.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-will-the-output-change"&gt;
  &lt;/a&gt;
  4. Will the Output Change?
&lt;/h2&gt;

&lt;p&gt;The code is the same as in the previous example, with a small addition of &lt;code&gt;button.click()&lt;/code&gt; at the end. It is a weird UI design pattern where the button is clicked automatically. Do you think it's a game-changer or logging order stays the same? 🤔&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; 
  &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;B&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;
  Show the answer 👇
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;B&lt;/span&gt;
&lt;span class="nx"&gt;C&lt;/span&gt;
&lt;span class="nx"&gt;A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The strings are indeed logged in different order. &lt;code&gt;button.click()&lt;/code&gt; is making all the difference, sitting at the bottom of the call stack and preventing microtask queue tasks from executing. Only after the call stack is emptied, &lt;code&gt;() =&amp;gt; console.log('A')&lt;/code&gt; will be queued from the microtasks.&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Feel free to share your mind-boggling async &amp;amp; event loop related code examples in the comments ✍️. Don't forget to ❤️ and follow for more web dev content. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>quiz</category>
    </item>
    <item>
      <title>Looking into Flutter: Secrets of its Success &amp; Review of Popular UI Libraries and Components</title>
      <author>Pavel Lazarev</author>
      <pubDate>Thu, 28 Oct 2021 13:30:38 +0000</pubDate>
      <link>https://dev.to/plazarev/looking-into-flutter-secrets-of-its-success-review-of-popular-ui-libraries-and-components-fa1</link>
      <guid>https://dev.to/plazarev/looking-into-flutter-secrets-of-its-success-review-of-popular-ui-libraries-and-components-fa1</guid>
      <description>&lt;p&gt;In recent years, cross-platform development has become one of the hottest trends in the world of programming. And it is not surprising, since this approach brings in a lot of significant advantages. Product owners can expect that the use of multi-platform technologies will reduce development costs and ensure faster time to market. Developers, in turn, can use the same business logic for web, mobile, and desktop versions applications and consequently have less trouble with code maintenance.&lt;/p&gt;

&lt;p&gt;Developing a platform-independent application is a challenging task. So if you decide to start such a project, you will certainly require a special framework. Fortunately, there are plenty of them available out there. But right now, Flutter is one of the most promising tools on the landscape of cross-platform technologies. In this article, you will become familiar with Flutter, review a range of ready-made UI components for this framework, and learn about upcoming commercial Flutter components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-flutter-and-why-is-it-so-popular"&gt;
  &lt;/a&gt;
  What is Flutter and Why is it so Popular?
&lt;/h2&gt;

&lt;p&gt;Flutter is a relatively new declarative UI framework designed and maintained by Google to facilitate the implementation of cross-platform software solutions. Launched just in 2018, it has already gained recognition and popularity among developers. Responders of the popular &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-most-loved-dreaded-and-wanted-other-frameworks-libraries-and-tools-loved3"&gt;Developer Survey 2020&lt;/a&gt; held by Stack Overflow recognized Flutter as one of the most loved tools and technologies of the last year. A fresh &lt;a href="https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/"&gt;developer survey&lt;/a&gt; from Statista names Flutter the most popular cross-platform framework utilized by software developers worldwide. Moreover, it has already reached the mark of 132K stars on &lt;a href="https://github.com/flutter/flutter"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AiNJKVn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5cjr72r4ou86ih3morv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AiNJKVn2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d5cjr72r4ou86ih3morv.png" alt="Survey from Statista" width="704" height="415"&gt;&lt;/a&gt;&lt;br&gt;
Source: &lt;a href="https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/"&gt;Statista&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So why is this technology so popular among professional developers?&lt;/p&gt;

&lt;p&gt;First of all, Flutter enables you to build performant applications that feel natural on various platforms using almost the same codebase. Flutter uses the Dart as the programming language and allows you to benefit from its numerous features.  For instance, the hot reload function makes it much easier to add new features to a Flutter project and test them without restarting the app. The popularity of Flutter continues growing very fast thanks in large part to strong support from a large community led by Google.&lt;/p&gt;

&lt;p&gt;In Flutter, everything revolves around widgets. They play a key role in the Flutter hierarchy, serving as building blocks of all graphical objects in an app’s UI. The framework comes with two built-in sets of reusable widgets (Material Design and Cupertino) that can be customized to provide the desired UI and UX. If that’s not enough for your app, I’ve prepared a review of some interesting UI libraries and components that can be useful in Flutter-based applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#opensource-ui-libraries-and-components-for-flutter"&gt;
  &lt;/a&gt;
  Open-Source UI Libraries and Components for Flutter
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#getwidget"&gt;
  &lt;/a&gt;
  GetWidget
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6qrUGw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8by7slgyd20kxo404dob.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6qrUGw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8by7slgyd20kxo404dob.jpg" alt="GetWidget component" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ionicfirebaseapp/getwidget"&gt;GetWidget&lt;/a&gt; (previously known as GetFlutter) is probably one of the largest and most well-known UI libraries designed with the use of Flutter SDK. It comprises a huge collection (1000+) of reusable widgets intended for covering various cross-platform development needs. With GetWidget, you can easily create widely used UI elements such as tabs, buttons, menus, lists, sliders, and many others. According to the GetWidget team, the library helps to cut the development time by 30–40%. Here is an open-source &lt;a href="https://www.ionicfirebaseapp.com/products/flutter-news-app"&gt;News application&lt;/a&gt; based on GetWidget and Flutter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutterneumorphic"&gt;
  &lt;/a&gt;
  Flutter-Neumorphic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJkvMxGL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3ap0adpf0037x5i29au.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJkvMxGL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o3ap0adpf0037x5i29au.png" alt="Flutter-Neumorphic component" width="599" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you follow web design trends, then you are certainly familiar with the term neumorphism. It relates to a new design approach that obtained quite extensive popularity in recent times.  A neumorphic design implies extensive usage of shadows and gradients. Many developers find it difficult to implement UI elements with this kind of design with Flutter. If you are one of them, &lt;a href="https://github.com/Idean/Flutter-Neumorphic"&gt;Flutter-Neumorphic&lt;/a&gt; is exactly what you need. This UI package will help you to create neumorphic UIs in Flutter apps much faster.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#plutogrid"&gt;
  &lt;/a&gt;
  PlutoGrid
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKwNNd6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nlnxg3s0a1t7fx51bonk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKwNNd6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nlnxg3s0a1t7fx51bonk.png" alt="PlutoGrid component" width="607" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A grid functionality is a vital aspect of any application, especially if you are working on a data-intensive solution. You can consider &lt;a href="https://github.com/bosskmk/pluto_grid"&gt;PlutoGrid&lt;/a&gt; to make the implementation of this important element easier in Flutter apps. This is a client-side UI grid component for creating standard data tables that render well across various platforms. It can be navigated via the keyboard. Using this component, you can add many useful features to the table such as sorting&amp;amp;filtering, frozen columns, multiselection, cell renderer, grid as a popup, etc. It is also possible to enable a dark theme for the whole data table.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#staggered-gridview"&gt;
  &lt;/a&gt;
  Staggered GridView
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AxyU2RvB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cr7csedztcvo4z10ll6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AxyU2RvB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cr7csedztcvo4z10ll6.jpg" alt="Staggered GridView component" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/letsar/flutter_staggered_grid_view"&gt;Staggered GridView&lt;/a&gt; is a useful instrument for displaying images in a feed-like manner that is not typical for a standard GridView. This approach is used in popular social networks (Instagram) and photo hostings (Pinterest). Staggered GridView comes with multiple columns, rows of varying sizes, and many other helpful features allowing you to easily present groups of images with different height and width parameters. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boxy"&gt;
  &lt;/a&gt;
  Boxy
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mbKdnF7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9labu0rpekbbk0kofrox.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mbKdnF7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9labu0rpekbbk0kofrox.png" alt="Boxy component" width="464" height="214"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you ever used Flutter’s built-in layout widgets, then you should know that it has some limitations related to the implementation of flex and custom layouts. You can overcome these difficulties by using &lt;a href="https://github.com/PixelToast/flutter-boxy"&gt;Boxy&lt;/a&gt;. This tool is utilized for creating complex layouts with multiple children that help to arrange the interface structure of your Flutter app. Boxy offers a set of utilities for layouts, dynamic widget inflation, slivers, and many other useful things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timelinetile"&gt;
  &lt;/a&gt;
  TimelineTile
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gySPLFIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srf2e7p5thfix6c3thwu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gySPLFIk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srf2e7p5thfix6c3thwu.png" alt="TimelineTile component" width="524" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/JHBitencourt/timeline_tile"&gt;TimelineTile&lt;/a&gt; is a UI component that enables you to represent events or processes in chronological order via a timeline in Flutter. Using TimelineTile, you can build a vertical or horizontal timeline and complement it with additional items (icons, images, text). This component gives you the freedom to customize any timeline element according to your needs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#charts-library"&gt;
  &lt;/a&gt;
  Charts library
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7gUwQahr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6h703077to7vr1nauke.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7gUwQahr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6h703077to7vr1nauke.png" alt="Charts library for Flutter" width="783" height="406"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data visualization is a tricky task for any programmer. Therefore it is nice to have a good charting library in your arsenal. &lt;a href="https://github.com/google/charts"&gt;Charts&lt;/a&gt; is a charting library that certainly deserves your attention. It is designed internally at Google, though it is not the company’s official product. Written in Dart and based on Material Design, this library suits well for various data visualization purposes in Flutter apps. It supports an array of charts (bar, line, time series, pie, scatter plot, etc.) for visualizing complex data and making it more comprehensible for further analysis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fl-chart"&gt;
  &lt;/a&gt;
  FL Chart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wPLlhi2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzqc4tviva2ba8b143hd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wPLlhi2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzqc4tviva2ba8b143hd.png" alt="FL Chart component" width="656" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/imaNNeoFighT/fl_chart"&gt;FL Chart&lt;/a&gt; is one more charting option for the Flutter ecosystem that I would recommend for consideration. It is a robust Flutter chart library used for creating popular charts. Currently, the list of available chart types includes the following: line chart, bar chart, pie chart, scatter chart, and radar chart.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-formbuilder"&gt;
  &lt;/a&gt;
  Flutter FormBuilder
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZOyaylj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukgxgivubx476k4cnxnb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZOyaylj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ukgxgivubx476k4cnxnb.jpg" alt="FormBuilder component" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/danvick/flutter_form_builder"&gt;Flutter FormBuilder&lt;/a&gt; is an intuitive tool designed to help you in creating cross-platform forms, and thereby provide a reliable communication channel between users and a Flutter application. It comprises a range of input widgets encountered in standard forms: text field, checkbox, slider, rangepicker, datepicker, etc. If needed, this form maker also gives you an opportunity to produce custom input fields. Numerous built-in validators (number, mail, min, max, etc.)  help to ensure that users submit only valid data. You can incorporate a combination of several validators and conditional validation (the validation of one field depends on the value entered in other specific fields).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tablecalendar"&gt;
  &lt;/a&gt;
  TableCalendar
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CsfydfWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbjn9773wkxkjs1etim7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CsfydfWm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbjn9773wkxkjs1etim7.png" alt="TableCalendar component" width="530" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you require assistance in arranging activities (meetings, tasks, appointments) in a time sequence in Flutter projects, take a look at &lt;a href="https://github.com/aleksanderwozniak/table_calendar"&gt;TableCalendar&lt;/a&gt;. This widget has a rich API allowing you to build multifunctional calendars with multiple view formats (week, two weeks, month) and customizable styling. Besides standard one-day activities, you can schedule custom events such as recurring ones. It also supports dynamic events and holidays. The localization feature will help you to reach more potential users from different countries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flutter-map"&gt;
  &lt;/a&gt;
  Flutter Map
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_fSbcH4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o942compgxror76az9pe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_fSbcH4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o942compgxror76az9pe.jpg" alt="Map component for Flutter" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/fleaflet/flutter_map"&gt;Flutter Map&lt;/a&gt; is a map widget that brings the ability to visualize geographic data to your app. In fact, it is a Dart implementation of a popular JS mapping library named Leaflet. With Flutter Map, you can build interactive maps and enrich them with various features (panning, zooming, markers, etc.). It also supports offline maps. Numerous plugins allow extending the core feature set with additional functionalities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-commercial-ui-solutions-for-flutter"&gt;
  &lt;/a&gt;
  What about Commercial UI Solutions for Flutter
&lt;/h2&gt;

&lt;p&gt;Open-source components for Flutter are great and they help to achieve different development goals absolutely for free. But what if you need more advanced components with a regularly updated feature set and technical support? In such cases, it is better to opt for commercial UI libraries.&lt;/p&gt;

&lt;p&gt;The main issue here is that it is really hard to find any commercial UI components for Flutter on the market. We’ve managed to find just one solution - a package of Flutter widgets from Syncfusion. Although this library is still under active development, it already can offer you a lot of useful widgets such as grid, sliders, event calendar, and numerous data visualization tools.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGpFvrdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw4x918s3y06gvsrwgc9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGpFvrdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kw4x918s3y06gvsrwgc9.png" alt="DHTMLX Gantt for Flutter" width="880" height="660"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Taking into account the scarcity of complex UI components for Flutter, the DHTMLX team seriously considers the possibility of developing Flutter Gantt that will enable developers to build project management apps with Flutter. The company has abundant experience in providing Gantt libraries for popular front-end technologies. Currently, the DHTMLX product portfolio already includes Gantt components for JS, React, Vue.js, and Svelte. And Flutter Gantt can become the next step. That’s how the development team sees &lt;a href="https://dhtmlx.com/docs/products/dhtmlxGantt-for-Flutter/"&gt;DHTMLX Gantt for Flutter&lt;/a&gt; right now. On this landing page, you can make a pre-order for Flutter Gantt.&lt;/p&gt;

&lt;p&gt;This article was originally published on &lt;a href="https://dhtmlx.medium.com/looking-into-flutter-secrets-of-its-success-review-of-popular-ui-libraries-and-components-e32089172146"&gt;medium.com&lt;/a&gt; on July 27th, 2021.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>flutter</category>
      <category>mobile</category>
      <category>programming</category>
    </item>
    <item>
      <title>VSCode - Extensions</title>
      <author>Leandro Torres</author>
      <pubDate>Thu, 28 Oct 2021 13:08:57 +0000</pubDate>
      <link>https://dev.to/leandroats/vscode-extensions-5a2</link>
      <guid>https://dev.to/leandroats/vscode-extensions-5a2</guid>
      <description>&lt;p&gt;O VSCode é uma ferramenta incrível. Como possui o recurso de Extensões, você consegue aprimorar ainda mais a experiência, deixar tudo com a sua cara e de quebra aumentar a sua produtividade. Vou listar algumas extensões que eu utilizo.&lt;/p&gt;

&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=adpyke.codesnap&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;CodeSnap - adpyke&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ajuda nos prints 😁&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QEJ88-ZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://adpyke.gallerycdn.vsassets.io/extensions/adpyke/codesnap/1.3.4/1625238962906/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QEJ88-ZE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://adpyke.gallerycdn.vsassets.io/extensions/adpyke/codesnap/1.3.4/1625238962906/Microsoft.VisualStudio.Services.Icons.Default" width="256" height="256"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=vsls-contrib.codetour&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;CodeTour - Jonathan Carter&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Uma forma bastante interessante de documentar.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4UPQ6woj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vsls-contrib.gallerycdn.vsassets.io/extensions/vsls-contrib/codetour/0.0.58/1625784500119/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4UPQ6woj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vsls-contrib.gallerycdn.vsassets.io/extensions/vsls-contrib/codetour/0.0.58/1625784500119/Microsoft.VisualStudio.Services.Icons.Default" width="128" height="128"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=jmMeessen.jenkins-declarative-support&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;Declarative Jenkinsfile Support - JM Meessen&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pipeline do Jenkins de forma mais amigável.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bchmPRUV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jmmeessen.gallerycdn.vsassets.io/extensions/jmmeessen/jenkins-declarative-support/0.1.0/1493632413360/Microsoft.VisualStudio.Services.Icons.Default" width="185" height="256"&gt;
&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=dracula-theme.theme-dracula&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;Dracula Official - Dracula Theme&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Meu tema preferido, normalmente coloco esse padrão de cores nas ferramentas que utilizo.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QgeJHFHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dracula-theme.gallerycdn.vsassets.io/extensions/dracula-theme/theme-dracula/2.24.0/1630671466069/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QgeJHFHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dracula-theme.gallerycdn.vsassets.io/extensions/dracula-theme/theme-dracula/2.24.0/1630671466069/Microsoft.VisualStudio.Services.Icons.Default" width="200" height="200"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;Live Server - Ritwick Dey&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Cria um servidor web com  um click.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BvIAhKI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ritwickdey.gallerycdn.vsassets.io/extensions/ritwickdey/liveserver/5.6.1/1555497731217/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BvIAhKI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ritwickdey.gallerycdn.vsassets.io/extensions/ritwickdey/liveserver/5.6.1/1555497731217/Microsoft.VisualStudio.Services.Icons.Default" width="256" height="256"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-preview-github-styles&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;Markdown Preview Github Styling - Matt Bierner&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Preview do markdown no estilo do GitHub.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4oJJEglK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bierner.gallerycdn.vsassets.io/extensions/bierner/markdown-preview-github-styles/0.2.0/1618262856034/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oJJEglK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bierner.gallerycdn.vsassets.io/extensions/bierner/markdown-preview-github-styles/0.2.0/1618262856034/Microsoft.VisualStudio.Services.Icons.Default" width="128" height="128"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;REST Client - Huachao Mao&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Funciona como um client Rest, suporta scripts que são tranquilos de fazer de entender.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7LA3WHrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://humao.gallerycdn.vsassets.io/extensions/humao/rest-client/0.24.5/1617725796156/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7LA3WHrY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://humao.gallerycdn.vsassets.io/extensions/humao/rest-client/0.24.5/1617725796156/Microsoft.VisualStudio.Services.Icons.Default" width="256" height="256"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;🎯&lt;a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons&amp;amp;WT.mc_id=devto-blog-leandroats"&gt;&lt;em&gt;vscode-icons - VSCode Icons Team&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Uma quantidade gigante de ícones para qualquer linguagem de programação.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pFIC8Vah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vscode-icons-team.gallerycdn.vsassets.io/extensions/vscode-icons-team/vscode-icons/11.6.0/1627842034344/Microsoft.VisualStudio.Services.Icons.Default" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pFIC8Vah--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vscode-icons-team.gallerycdn.vsassets.io/extensions/vscode-icons-team/vscode-icons/11.6.0/1627842034344/Microsoft.VisualStudio.Services.Icons.Default" width="128" height="128"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Referências:&lt;br&gt;
👉 &lt;a href="https://code.visualstudio.com/?WT.mc_id=devto-blog-leandroats"&gt;VSCode&lt;/a&gt;&lt;br&gt;
👉 &lt;a href="https://draculatheme.com/?WT.mc_id=devto-blog-leandroats"&gt;Dracula Theme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Até a próxima!👊&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;us Now you can support me by buying a coffee&lt;br&gt;
pt Agora você pode me apoiar comprando um café&lt;br&gt;
☕😊👇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/leandroats"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ptbr</category>
      <category>vscode</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>Edge DevTools for Visual Studio Code 1.4.0 - Improved Screencasting, Device Emulation and live, inline issue reporting</title>
      <author>Christian Heilmann</author>
      <pubDate>Thu, 28 Oct 2021 13:05:08 +0000</pubDate>
      <link>https://dev.to/codepo8/edge-devtools-for-visual-studio-code-140-improved-screencasting-device-emulation-and-live-inline-issue-reporting-1hh</link>
      <guid>https://dev.to/codepo8/edge-devtools-for-visual-studio-code-140-improved-screencasting-device-emulation-and-live-inline-issue-reporting-1hh</guid>
      <description>&lt;p&gt;The 1.4.0 release of the &lt;a href="https://aka.ms/devtools-for-code/"&gt;Microsoft Tools for Visual Studio Code&lt;/a&gt; brings a few highly requested features. We improved the screencasting feature, added device emulation and live issue reporting in your source code. You can check the &lt;a href="https://www.youtube.com/watch?v=g_TpkkmYzXs"&gt;3 minute highlight reel here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/g_TpkkmYzXs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improved-screencasting"&gt;
  &lt;/a&gt;
  Improved screencasting
&lt;/h2&gt;

&lt;p&gt;In previous versions of the extension, the screencast was a rudimentary feature tied to the panel of the extension. This didn't give you much space to play with and the interactivity was limited. In this version, we moved the screencast to an own tab, which means that you can move it anywhere you want in your Visual Studio Code and use split panels. Furthermore, the screencast now supports developer tools overlays, which means you can see the padding and margin when navigating the HTML source and the inspector overlays.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3K6jAtQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qg5i2b8zbrabudcf05px.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3K6jAtQY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qg5i2b8zbrabudcf05px.gif" alt="A demo of the new screencast features, like moving between&amp;lt;br&amp;gt;
  tabs and showing the inspector overlays" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#device-emulation"&gt;
  &lt;/a&gt;
  Device emulation
&lt;/h2&gt;

&lt;p&gt;One of the most requested features of the screencast was device emulation. People wanted to simulate different mobile devices without having to switch to the browser. Right next to the location field of the screencast you can now find a dropdown with a pre-populated list of mobile devices. You can select any of them and the viewport of the screencast will get resized accordingly. If the device is a touch device, you also get touch emulation, as indicated by the cursor changing to a filled circle. Next to the dropdown you also get a button to switch the device orientation. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T36ayhZ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l8zxg8kyo7z453rhhk5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T36ayhZ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8l8zxg8kyo7z453rhhk5.gif" alt="A demo of the new screencast feature device emulation, showing how to pick a device and seeing the resized viewport and touch emulation" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#live-inline-issue-reporting"&gt;
  &lt;/a&gt;
  Live inline issue reporting
&lt;/h2&gt;

&lt;p&gt;The issues panel in browser developer tools shows you problems with accessibility, interoperability, performance and security. We considered moving this one to the extension, but thought we can do better. If your source code now has an issue, you will see a red underline under the line of code. You can hover over the line and you get information what the problem is, how to fix it and links to more documentation. You can also navigate all the issues in the current document or use the problems tab in the lower panel to see all issues in the current workspace.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---LacSK9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z63euz549q0ece6txo7i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---LacSK9H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z63euz549q0ece6txo7i.gif" alt="A demo of showing issues live inside source code, how to navigate the issues, using the problems panel and live code validation" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-the-extension"&gt;
  &lt;/a&gt;
  Get the extension
&lt;/h2&gt;

&lt;p&gt;The extension is available for all major platforms from inside Visual Studio Code and &lt;a href="https://aka.ms/devtools-for-code/"&gt;on the marketplace&lt;/a&gt;. The &lt;a href="https://github.com/microsoft/vscode-edge-devtools"&gt;source is also available on GitHub&lt;/a&gt; and we invite anyone to &lt;a href="https://github.com/microsoft/vscode-edge-devtools/issues"&gt;file issues&lt;/a&gt; you encounter. Some of the functionality is dependent on you having an installation of &lt;a href="https://www.microsoftedgeinsider.com/en-us/download/canary"&gt;Microsoft Edge Canary (version 96)&lt;/a&gt; and you need to have &lt;a href="https://nodejs.org/en/"&gt;Node/NPM&lt;/a&gt; installed on your machine. &lt;/p&gt;

</description>
      <category>vscode</category>
      <category>browsers</category>
      <category>developertools</category>
      <category>debugging</category>
    </item>
    <item>
      <title>5 Reasons To Use TypeScript</title>
      <author>mattstobbs</author>
      <pubDate>Thu, 28 Oct 2021 12:51:54 +0000</pubDate>
      <link>https://dev.to/mattstobbs/5-reasons-to-use-typescript-1il2</link>
      <guid>https://dev.to/mattstobbs/5-reasons-to-use-typescript-1il2</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was originally posted on my blog, &lt;a href="https://www.mattstobbs.com/reasons-to-use-typescript/"&gt;5 Reasons To Use TypeScript&lt;/a&gt;. Some changes have been made from the original post to fit the styling of dev.to. I recommend reading the post on the original site to see it styled as intended.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The rise of TypeScript seems to have happened slowly, then all at once (like &lt;a href="https://twitter.com/hankgreen/status/1183235225528061952?lang=en"&gt;ketchup&lt;/a&gt; coming out of the bottle).&lt;/p&gt;

&lt;p&gt;Over the past five years, it has continued to grow in popularity until it is now by far the most liked "&lt;a href="https://2020.stateofjs.com/en-US/technologies/javascript-flavors/"&gt;JavaScript flavour&lt;/a&gt;". According to the &lt;a href="https://2020.stateofjs.com/en-US/technologies/"&gt;State of JS 2020 survey&lt;/a&gt;, TypeScript is now one of the most used frontend technologies and one with the highest positive opinions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mSY5jF8C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mattstobbs.com/images/reasons-to-use-typescript/Rise_Of_TypeScript.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mSY5jF8C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mattstobbs.com/images/reasons-to-use-typescript/Rise_Of_TypeScript.webp" alt="A chart showing the increase in TypeScript's popularity over the past 5 years." width="880" height="712"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As I mentioned in my previous post, I was &lt;a href="https://www.mattstobbs.com/my-typescript-conversion/"&gt;sceptical&lt;/a&gt;, but have grown to love TypeScript so that I would recommend it as the default flavour for any new JavaScript project. TypeScript had so many benefits that I hadn't appreciated before I tried it.&lt;/p&gt;

&lt;p&gt;In this post, we'll take a look at five of those benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1-compile-time-errors"&gt;Compile-Time Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-clearer-code"&gt;Clearer Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-tooling-over-documentation"&gt;Tooling Over Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-safe-refactoring"&gt;Safe Refactoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-incredible-autocomplete"&gt;Incredible Autocomplete&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-compiletime-errors"&gt;
  &lt;/a&gt;
  1. Compile-Time Errors
&lt;/h2&gt;

&lt;p&gt;Let's get this out of the way first - the obvious benefit to using TypeScript is compile-time errors for type safety.&lt;/p&gt;

&lt;p&gt;Did you forget to check if a value is null? Typescript won't.&lt;/p&gt;

&lt;p&gt;Missed a case in a switch statement? Typescript won't.&lt;/p&gt;

&lt;p&gt;Added an argument to a function but overlooked the existing uses of the function? Typescript won't.&lt;/p&gt;

&lt;p&gt;This is generally how people describe TypeScript. It means that, from my experience, when people are hesitant about whether TypeScript is worth the extra effort, this is all they're thinking about.&lt;/p&gt;

&lt;p&gt;Compile-time errors are useful, but it's the secondary benefits that you get &lt;em&gt;because of&lt;/em&gt; the type checking that makes TypeScript really exciting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-clearer-code"&gt;
  &lt;/a&gt;
  2. Clearer Code
&lt;/h2&gt;

&lt;p&gt;TypeScript requires you to be more explicit with your code and with your mental model of how the code works.&lt;/p&gt;

&lt;p&gt;It is said that writing forces you to clarify your thinking. It's so hard to write what's in your head - attempting to write it down forces you to organise your thoughts, challenge your assumptions, question whether there is a better way. TypeScript is the equivalent of frontend development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.scottlogic.com/2020/12/08/finite-state-machines.html#we-are-not-smart-enough-for-complexity"&gt;Programming is hard&lt;/a&gt;. There are huge amounts of complexity. TypeScript restricts the freedom of JavaScript, but by doing so, it &lt;em&gt;reduces&lt;/em&gt; the complexity of the code. This makes it a lot easier to catch bugs and move forward with confidence with what we're writing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;TypeScript reduces the complexity of the code.&lt;/em&gt; That may surprise you. One of the common complaints against TypeScript is how complicated it is. Sure, the basic use cases may be easy, but pretty soon you're down a rabbit hole with type-generics and conditional types and you're spending more time reading the TypeScript documentation than actually coding.&lt;/p&gt;

&lt;p&gt;When this happens to me, 9 times out of 10 that's a flag that my code is too complicated. When I think about what I'm trying to do, I can usually simplify my data structures and function signatures. The advanced parts of TypeScript are &lt;a href="https://econsultancy.com/prudent-ux-for-banking-monzo-designs-positive-friction/"&gt;positive friction&lt;/a&gt;, slowing me down enough to question whether there are better ways of designing my app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"If you find yourself struggling with writing types or you're basically spending time developing your types instead of developing your app, maybe the code you're writing is too complicated." - &lt;a href="https://www.youtube.com/watch?v=4PduzmHf1YQ&amp;amp;t=2980s"&gt;Ben Ilegbodu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-tooling-over-documentation"&gt;
  &lt;/a&gt;
  3. Tooling Over Documentation
&lt;/h2&gt;

&lt;p&gt;Documentation is essential for the long-term health of a project. However, it's also easy to neglect, hard to enforce, and can't report if it is no longer up-to-date. So if it's possible, &lt;a href="https://www.youtube.com/watch?v=4PduzmHf1YQ&amp;amp;t=304s"&gt;tooling should be prioritised&lt;/a&gt; over documentation.&lt;/p&gt;

&lt;p&gt;When I started working at a new company, part of my onboarding involved reading the company's coding style guide. I skimmed through it, but very little stayed in my head. I told myself once I was coding, I would refer back to the style guide to make sure I was following the standards. Unsurprisingly, I never did.&lt;/p&gt;

&lt;p&gt;Tools like &lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt; and &lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; document your code styles. But they go a step further and enforce those styles while you're coding. You no longer need to worry about stray &lt;code&gt;console.log&lt;/code&gt;s or inconsistent semi-colons. Instead of the style guide being one extra thing you have to hold in your head, it becomes something you don't even have to think about. You just focus on what really matters.&lt;/p&gt;

&lt;p&gt;TypeScript is a tool that forces you to extract knowledge out of the developer's head and into the code. It documents what arguments a function is expecting, what shape objects are, and which variables may be undefined. And it will remind you when it is no longer up to date and where exactly you need to update.&lt;/p&gt;

&lt;p&gt;Without TypeScript, so much redundant time is spent by each developer having to track down the shapes of objects. It requires searching through documentation and praying they are up-to-date. Or it requires debugging the code and praying your guesses of which fields are required/optional are correct.&lt;/p&gt;

&lt;p&gt;TypeScript is an up-front investment that saves you and your team much more time in the future.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"TypeScript shines on a team. Even if the team is you and you-from-6-months-ago" - &lt;a href="https://swizec.com/blog/learn-typescript-in-5-minutes/#why-even-bother"&gt;@swizec&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#4-safe-refactoring"&gt;
  &lt;/a&gt;
  4. Safe Refactoring
&lt;/h2&gt;

&lt;p&gt;I recently had two refactoring experiences that were a world apart.&lt;/p&gt;

&lt;p&gt;In the first case, I was updating all our buttons to use our common &lt;code&gt;Button&lt;/code&gt; component. It was a straightforward change, and completely terrifying. The codebase was JavaScript, there were too many buttons to manually check each one and our test coverage was spotty at best. It felt like I was walking on the edge of a cliff, knowing that if I missed or misspelt a prop, that could potentially stop a button from working - a critical bug.&lt;/p&gt;

&lt;p&gt;In another refactor, I was changing the shape of the state. Originally we just needed a list of titles but now we needed a title and a description for each item. Fortunately, this time I was working on a TypeScript codebase so I updated the type from &lt;code&gt;string[]&lt;/code&gt; to &lt;code&gt;{ description: string; title: string; }[]&lt;/code&gt; and then just let TypeScript tell me exactly what would need updating. It was only halfway through that I suddenly realised how hard this could potentially be in JavaScript. Instead, I hardly needed to think at all.&lt;/p&gt;

&lt;p&gt;TypeScript not only gives you confidence that you haven't missed anything when you refactor but also shows you where you need to update. You no longer need to manually track your variables all over the code - just follow the red squiggles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-incredible-autocomplete"&gt;
  &lt;/a&gt;
  5. Incredible Autocomplete
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;This section assumes you're using VSCode as your IDE. Both TypeScript and VSCode are developed and maintained by Microsoft so are designed to integrate well with each other.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Other IDEs have TypeScript plugins which also give you Autocomplete. However, I have no experience with using them, so can't comment on how good they are.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The TypeScript autocomplete unexpectedly has become one of the biggest reasons why I love TypeScript. I imagine it's one of the reasons why it's so popular among developers.&lt;/p&gt;

&lt;p&gt;Autocomplete means I don't have to worry about typos (did we name this prop &lt;code&gt;color&lt;/code&gt; or &lt;code&gt;colour&lt;/code&gt;?). I don't have to keep jumping between files to see which component props I need. I don't need to keep googling the names of string and array functions.&lt;/p&gt;

&lt;p&gt;Let's say I have a string variable that could be undefined - &lt;code&gt;string | undefined&lt;/code&gt;. I want to see if the string, contains a &lt;code&gt;'#'&lt;/code&gt; character but I can't remember if I should be using &lt;code&gt;.contains&lt;/code&gt; or &lt;code&gt;.includes&lt;/code&gt; (happens every time!). I enter the variable name, press &lt;code&gt;.&lt;/code&gt; and all the possible string functions are shown to me:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ziZlNFFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mattstobbs.com/images/reasons-to-use-typescript/TypeScript_Autocomplete.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ziZlNFFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mattstobbs.com/images/reasons-to-use-typescript/TypeScript_Autocomplete.webp" alt="TypeScript shows autocomplete options for all the functions that can be used on strings." width="880" height="408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I find the function I want and press tab to select it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lsapoosw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mattstobbs.com/images/reasons-to-use-typescript/typescript-autocomplete-after.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lsapoosw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.mattstobbs.com/images/reasons-to-use-typescript/typescript-autocomplete-after.webp" alt="TypeScript autocompletes function and uses optional chaining." width="880" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Did you see that? Not only did it help us look up which function we wanted, but it also filled it in for us &lt;em&gt;and&lt;/em&gt; used optional chaining to make sure we handle the cases where it's &lt;code&gt;undefined&lt;/code&gt;. &lt;a href="https://emojipedia.org/exploding-head/"&gt;🤯&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All these mean you don't have to keep interrupting your flow. You can just tab and move on to the next thing. It's like having a co-pilot as you code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#typescript-as-a-default-for-new-projects"&gt;
  &lt;/a&gt;
  TypeScript As A Default For New Projects
&lt;/h2&gt;

&lt;p&gt;TypeScript isn't perfect. There are plenty of arguments against it (some better than others). But for me, TypeScript should be the default for any new project. Instead of asking if there is a good reason to include it, you should be asking if there is a good reason not to.&lt;/p&gt;

&lt;p&gt;In my next post, I'll be taking a look at some of the common arguments against TypeScript, giving my thoughts on them, and talking about when you might not want to use TypeScript.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7cATIAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FCyVfL9XMAEBJr3.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--F6FUuVBC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1397306804179251203/w3Lqy7GP_normal.jpg" alt="Matt Stobbs profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Matt Stobbs
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @matt_stobbs
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/hashtag/typescript"&gt;#typescript&lt;/a&gt; has exploded in popularity over the past few years until it is now one of the most popular JS technologies to use. Despite being sceptical at first, I'm now a TS convert.&lt;br&gt;&lt;br&gt;Here are 5 reasons why I love TypeScript: 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:43 PM - 28 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1453703985089630216" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1453703985089630216" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1453703985089630216" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Mine TetherUS USDT on Your Laptop in 2021</title>
      <author>Course Probe</author>
      <pubDate>Thu, 28 Oct 2021 12:44:14 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-mine-tetherus-usdt-on-your-laptop-in-2021-215k</link>
      <guid>https://dev.to/courseprobe/how-to-mine-tetherus-usdt-on-your-laptop-in-2021-215k</guid>
      <description>&lt;p&gt;A Step by Step Guide to Pool Mining TetherUS USDT in 2021 with a CPU or GPUs!&lt;/p&gt;

&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and USDT in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining TetherUS USDT with any laptop in under 5 minutes using this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining USDT with your CPU and GPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;USDT Tether is called a stablecoin because it was originally designed to always be worth US$1.00, maintaining $1.00 in reserves for each tether issued.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Now let's get you started !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend getting Tronlink or Metamask to receive the mined USDT as either a TRC20 or BEP20 token. This means in the Tron blockchain or over the Binance Smart Chain.&lt;/p&gt;

&lt;p&gt;In metamask you would have to add the Binance Smart Chain network and then add the token USDT to your wallet.&lt;/p&gt;

&lt;p&gt;Make sure you connect the Binance Smart Chain network to metamask (Google the instructions...) or get them from this link: &lt;a href="https://academy.binance.com/en/articles/connecting-metamask-to-binance-smart-chain"&gt;Binance Academy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Download the Unmineable Miner Software&lt;/p&gt;

&lt;p&gt;Before downloading the file, set some folder exclusions on Windows Defender, in your antivirus and also in your browser so you can download the file without being bothered with notifications of dangerous files.&lt;/p&gt;

&lt;p&gt;Official Unmineable software can be downloaded from this site: &lt;a href="https://www.unmineable.com/miner"&gt;Unmineable Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the MFI version (Miners files included).&lt;/p&gt;

&lt;p&gt;The unmineable software is just one executable file, it already contains all the configurations so it is the best and easiest way to mine USDT.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the file as an Administrator in windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It looks exactly like this when you run it: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" alt="Unmineable Start Screen" width="407" height="583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select GPU cards or CPU.&lt;/p&gt;

&lt;p&gt;It will take you to the second screen where you will enter your TetherUS USDT Address and also &lt;strong&gt;the code which will allow you to drop your Dev Fee from 1% to 0.75%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the code: &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; to drop your Dev Fee from 1% to 0.75% (it makes a difference).&lt;/p&gt;

&lt;p&gt;Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Sl2Ypyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l501qowemwhtwd9emkq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Sl2Ypyr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l501qowemwhtwd9emkq.png" alt="Unmineable USDT mining" width="412" height="588"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on the Start button, you should see a similar screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" alt="Unmineable Mining Screen" width="409" height="583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point I would recommend you to click the option at the bottom to display the logs (Looks like a sheet of paper), here click Force Stop. &lt;/p&gt;

&lt;p&gt;Then click the Settings Icon (Looks like a cog wheel), in the screen that pops up you want to double check a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure the algorithm selected is ETCHASH if you are mining with 4GB cards, use ETHASH for cards with 6GB or more, if you selected CPU everything is ready to start mining no need to select anything.&lt;/li&gt;
&lt;li&gt;Make sure the Code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; is showing in the referral box (Recommended, not mandatory).&lt;/li&gt;
&lt;li&gt;Set a name for your worker (The computer you are mining from).&lt;/li&gt;
&lt;li&gt;Set your mining Intensity at the top, I would recommend High for those periods when you are not using the computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It looks similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" alt="Unmineable Settings" width="409" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the Save &amp;amp; Restart button to start mining !!&lt;/p&gt;

&lt;p&gt;Once it starts you can check the speed of your Graphic card which shows as the Current Hashrate.&lt;/p&gt;

&lt;p&gt;Also you can click on the stats button on the top right to go directly to the Unmineable website where you can check your balance and request a manual payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; it is recommended you change a few settings in Windows, there's people that disable the Updates and also disable sleeping mode, hibernation or anything that could turn off the computer while it is not in use.&lt;/p&gt;

&lt;p&gt;When using a Laptop, make sure it has some battery or is plugged so it won't shut down.&lt;/p&gt;

&lt;p&gt;Congrats, if you are using Unmineable you are now a miner !!&lt;/p&gt;




&lt;p&gt;If you want a bit more of control over the mining software and configurations then you can download the miners and manually set them up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with CPU then you could follow below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to the xmrig site to download the latest version (MSVC) or from the oficial github repository: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download the latest version you would have to edit a file named "pool_mine_example.cmd" or "start.cmd" or "start.bat" Inside this file you need to modify 2 lines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if the file doesn't exists you would have to create it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It could look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u USDT:TC74QG8tbtixG5Raa4fEifywgjrFs45fNz.wrkID#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the USDT: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Run the file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, you are now running XMRig and are mining. Congrats !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with GPU:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would recommend you to get: Teamredminer (AMD cards), Phoenixminer (AMD/NVIDIA) or Trex (Nvidia).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download these miner from the oficial sites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Phoenix miner: &lt;a href="https://bitcointalk.org/index.php?topic=2647654.0"&gt;Bitcoin Talk forum&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teamred miner: &lt;a href="https://github.com/todxx/teamredminer/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trex: &lt;a href="https://github.com/trexminer/T-Rex/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then set them up with a smilar Start.bat file as mentioned in the CPU section above. &lt;/p&gt;

&lt;p&gt;Pay attention to some changes you would need to implement: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 4gb cards you need to set the algo on the miner to ETCHASH and the coin to ETC. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 6gb cards or more then you need to set the algo on the miner to ETHAS and the coin to ETH. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to also set the pool url accordingly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ETCHASH: etchash.unmineable.com:3333&lt;/li&gt;
&lt;li&gt;ETHASH:  ethash.unmineable.com:3333&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once done, run the file as administrator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can Log into Unmineable to check your stats:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX or GPUS using Etchash or Ethash and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site" width="880" height="687"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the Miner starter file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example USDT and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, TetherUS USDT.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX or ETCHAS or ETHASH depending on your algo, and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;

&lt;p&gt;I recommend downloading some software to monitor the running temperature of your CPU and GPU, a good and free one is Hardware Monitor.&lt;/p&gt;

&lt;p&gt;Try not to exceed the temperature more than 90 degrees celsius. In case you are mining with a laptop, change the thermal paste of your CPU, get it cleaned inside, and get some heat extractors for laptops.&lt;/p&gt;

&lt;p&gt;If you take care of the temperature your computer should work very well, the amount of coins you can mine will depend on the hashrate of your CPU and GPUs. &lt;/p&gt;

&lt;p&gt;For GPUS download MSI Afterburner and set the appropriate Overclocking profile so you can get higher hashrates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to use a valid address for each coin, for example if you want to be paid in ADA then you need a valid Cardano blockchain address. In this example Binance Smart Chain is used and you would receive a CAKE token on the BSC blockchain.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;em&gt;If you are having any difficulties, please join me on discord so I can help you further&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/sPbV8kcK"&gt;https://discord.gg/sPbV8kcK&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you are looking for more information into CPU mining, there's a good guide in a PDF ebook and is Free, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU" width="320" height="414"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Referral Disclosure:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Please read the Unmineable Referral Policy at the following link to better understand How the referral code works in detail &lt;a href="https://www.unmineable.com/referrals"&gt;Unmineable Referrals&lt;/a&gt;&lt;/p&gt;

</description>
      <category>usdt</category>
      <category>crypto</category>
      <category>mining</category>
    </item>
    <item>
      <title>Building the first open-source notification infrastructure</title>
      <author>Dima Grossman</author>
      <pubDate>Thu, 28 Oct 2021 12:34:22 +0000</pubDate>
      <link>https://dev.to/scopsy/building-the-first-open-source-notification-infrastructure-5h9k</link>
      <guid>https://dev.to/scopsy/building-the-first-open-source-notification-infrastructure-5h9k</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hi Community!&lt;/strong&gt;&lt;br&gt;
Looking forward to hear your thoughts about this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/notifirehq/notifire"&gt;Notifire&lt;/a&gt; was started out of pain me and &lt;a class="mentioned-user" href="https://dev.to/combarnea"&gt;@combarnea&lt;/a&gt;
 felt when developing products that required product based notifications. We've built the infrastructure so many times that we decided to take it out to the world. That's when Notifire was born. We took the multi-channel notifications and provided a unified set of API's to generate notification content and simplify delivery across multiple channels. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#its-more-than-just-sending-an-email-or-push"&gt;
  &lt;/a&gt;
  It's more than just sending an email or push
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J6Dr1gg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8872447/139248224-f35b2dc2-daa9-4976-ae58-b120d3561c49.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J6Dr1gg---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8872447/139248224-f35b2dc2-daa9-4976-ae58-b120d3561c49.jpg" alt="C6ROe0mU0AEmpzz" width="880" height="839"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;(Part of slacks notification system)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From our past experience, we know that a wholesome notification infrastructure requires more than a unified API. We believe that building a solid notification infrastructure is something that is accessible not only to fortune 500 companies but to every developer out there. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#notificaiton-infrastructure-foundations"&gt;
  &lt;/a&gt;
  Notificaiton infrastructure foundations
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#smart-notification-engine"&gt;
  &lt;/a&gt;
  Smart Notification Engine
&lt;/h3&gt;

&lt;p&gt;Using a stateful API instead of local config files can provide further functionality like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run time &lt;strong&gt;changes&lt;/strong&gt; without redeploying your code.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Digest&lt;/strong&gt; mechanism that allows to aggregate multiple events/messages to a single email or in-app notification for the customer. For example, a user received an email a minute ago, we don't want to send him the next one immediately and wait if further messages are planning to arrive. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;User preferences&lt;/strong&gt; - With the ever-growing number of channels, an end-user can get notifications can create a lot of noise. Notification preferences are an expected thing from most users this day. A stateful API can manage all the complexities of it out of the box. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Priority management&lt;/strong&gt; - Not all notifications created equally, while password reset email must be delivered in real-time. Repeatable and frequent notifications can be throttled or scheduled to a later time.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Timezone awareness&lt;/strong&gt; - Send a specific set of notifications only in the user wake hours.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Monitoring&lt;/strong&gt; and &lt;strong&gt;webhook&lt;/strong&gt; integrations to all the delivery providers.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Analyze&lt;/strong&gt; sending patterns and &lt;strong&gt;debug deliverability&lt;/strong&gt; across multiple channels&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#inapp-notification-center"&gt;
  &lt;/a&gt;
  In-app notification center
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;An embeddable widget that is easy to integrate and customize.&lt;/li&gt;
&lt;li&gt;Real-time update using a socket.&lt;/li&gt;
&lt;li&gt;User preference widget to control the channels and motivation groups he would love to receive.&lt;/li&gt;
&lt;li&gt;The ability of the user to Snooze, mute and hide notifications easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We would love that everyone can have the best notification infrastructure possible without investing thousands of hours on it again and again. By the community. For the community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;We are working on porting parts of the closed source platform we developed over the years to OSS. This includes an out-of-the-box API for managing notifications, an embeddable notifications widget, activity monitoring and more. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aMd-shZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8872447/139250840-23b0141f-6d0c-479f-9706-8ca46a78f6d4.png" class="article-body-image-wrapper"&gt;&lt;img alt="Screen Shot 2021-10-28 at 14 53 57" src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMd-shZR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8872447/139250840-23b0141f-6d0c-479f-9706-8ca46a78f6d4.png" width="880" height="1213"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What are your thoughts about the need for such a system? Have you built something similar with your team? What would expect to see there?&lt;/p&gt;

&lt;p&gt;Feel free to comment here or at our Github page &lt;a href="https://github.com/notifirehq/notifire/"&gt;https://github.com/notifirehq/notifire/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>opensource</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to host your website on Azure?</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Thu, 28 Oct 2021 12:11:15 +0000</pubDate>
      <link>https://dev.to/rakeshpotnuru/how-to-host-your-website-on-azure-5h11</link>
      <guid>https://dev.to/rakeshpotnuru/how-to-host-your-website-on-azure-5h11</guid>
      <description>&lt;p&gt;Hosting your website on &lt;a href="https://azure.microsoft.com"&gt;Azure&lt;/a&gt; is very simple. Just a few clicks 👀.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-result"&gt;
  &lt;/a&gt;
  Final result
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4K2pJIB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbaui4bf9npm679rq69j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4K2pJIB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbaui4bf9npm679rq69j.png" alt="Final result" width="880" height="183"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Signup for an &lt;a href="https://azure.microsoft.com/en-in/free"&gt;Azure&lt;/a&gt; account for free if you don't have already. (&lt;em&gt;Note: If you are a student you can get free credits&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Basic git knowledge and a &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; account.&lt;/li&gt;
&lt;li&gt;Your website.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;After creating Azure account, login into &lt;a href="https://portal.azure.com/"&gt;portal.azure.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Create a resource&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;Static Web App&lt;/strong&gt; and select static web app.&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Create&lt;/strong&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jy8nP0d2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6rtdf0u9iyppdce2zao1.png" alt="Azure Static Web App" width="880" height="600"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here we need to fill in a few details.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the &lt;strong&gt;project details&lt;/strong&gt;, choose your subscription.&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;Resource Group&lt;/strong&gt; click on &lt;strong&gt;create new&lt;/strong&gt; and name it anything you like. &lt;/li&gt;
&lt;li&gt;Next, give your app a &lt;strong&gt;Name&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Hosting plan: &lt;strong&gt;Free: For hobby or personal projects&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Next, select a region.&lt;/li&gt;
&lt;li&gt;After that, in deployment details select &lt;strong&gt;GitHub&lt;/strong&gt; as source and sign in with your GitHub account.

&lt;ul&gt;
&lt;li&gt;For &lt;strong&gt;Organization&lt;/strong&gt;, choose your GitHub account from the dropdown.&lt;/li&gt;
&lt;li&gt;Next, select &lt;strong&gt;Repository&lt;/strong&gt; and &lt;strong&gt;Branch&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now &lt;strong&gt;Build details&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;For &lt;strong&gt;Build Presets&lt;/strong&gt;, if your website is built with a framework or a static site generator then choose accordingly otherwise choose &lt;strong&gt;Custom&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;App location&lt;/strong&gt;, choose where your app files are there or if it is a simple website with only HTML and CSS files leave it as &lt;code&gt;/&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on &lt;strong&gt;Review + Create&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qAARtMjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zybxig4iovzi9703t1od.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qAARtMjP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zybxig4iovzi9703t1od.png" alt="Demo" width="880" height="617"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Verify all the provided details and click &lt;strong&gt;Create&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wait for a few seconds, after deployment is complete click on &lt;strong&gt;Go to resource&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy the &lt;strong&gt;URL&lt;/strong&gt;, paste in a new tab and see.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A-sqUp3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebjqh13e02sjmcilz0in.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A-sqUp3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ebjqh13e02sjmcilz0in.png" alt="Demo" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Congrats 🎉🎉🎉! Your website is now live on internet.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zl_NuzTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erem0c7vh74yzp1z4ffd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zl_NuzTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erem0c7vh74yzp1z4ffd.gif" alt="Congrats gif" width="498" height="329"&gt;&lt;/a&gt;&lt;br&gt;
If you have any doubts ask in the comments below 👇.&lt;/p&gt;




&lt;p&gt;Hope this helps you!&lt;br&gt;
Save for reference.&lt;br&gt;
Connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt; and &lt;a href="https://github.com/RakeshPotnuru"&gt;GitHub&lt;/a&gt;. Follow me for more 😃.&lt;/p&gt;

</description>
      <category>azure</category>
      <category>tutorial</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Flask and Django - the backend web frameworks</title>
      <author>mr-destructiive</author>
      <pubDate>Thu, 28 Oct 2021 12:08:44 +0000</pubDate>
      <link>https://dev.to/mrdestructiive/flask-and-django-the-backend-web-frameworks-390g</link>
      <guid>https://dev.to/mrdestructiive/flask-and-django-the-backend-web-frameworks-390g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We all have seen the buzz around web frameworks like Django, Flask, Node.js, etc but have you taken time to learn all of them? No, and you shouldn't! Because many web frameworks share the same principle and workflow with a bit of difference. It's just like learning one programming language and applying the same concepts in a different syntax and mechanism. In the world of web frameworks, this is the case as well, but most of them will disagree with it as every web framework is unique in its design and that's true, don't get me wrong.&lt;/p&gt;

&lt;p&gt;Before we get into frameworks let us understand the key components of the web application&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Database&lt;/strong&gt; - It holds the data for our application.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Server&lt;/strong&gt; - Used to fetch/store/manage requests from the client. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;API&lt;/strong&gt; - Used as an interface between the client and the Database. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Client&lt;/strong&gt; - The browser or any client that requests for resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qoCYQtLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635081505223/rLnSyA_7Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qoCYQtLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635081505223/rLnSyA_7Y.png" alt="djflask-webapp.png" width="880" height="624"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every web framework will serve the same purpose with different design, architecture, language but it will have a similar pattern in developing the application. Let's clear the concepts in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-backend-web-framework"&gt;
  &lt;/a&gt;
  What is a back-end Web framework?
&lt;/h2&gt;

&lt;p&gt;A web framework is a tool/application meant for designing, creating, testing web applications a lot quicker with a lot of ease. Without web frameworks, you will have been writing some code that will tire you very quickly. &lt;/p&gt;

&lt;p&gt;It even seems impossible to manually write markups for each piece of data in the application, which is taken care of by dynamic templating in Python-based frameworks like Django, Flask. The database queries are managed by the web frameworks as well, otherwise, you will have been writing SQL queries manually! How painful and frustrating that would look, of course, you can create scripts for querying to the database but you are then creating a component of a framework. &lt;code&gt;Don't waste time&lt;/code&gt; that's a takeaway from the philosophy of all the web frameworks.&lt;/p&gt;

&lt;p&gt;Another thing that back-end web frameworks do is create homogeneity in development across different environments and applications. It also creates a developer-friendly environment. We must not forget how easy and quick applications can be built using the back-end web frameworks. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-backend-web-framework-provides-some-of-the-features-like"&gt;
  &lt;/a&gt;
  A back-end Web framework provides some of the features like:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Handle web requests&lt;/li&gt;
&lt;li&gt;Manage DB by just using some simple scripts&lt;/li&gt;
&lt;li&gt;Render Dynamic Templates&lt;/li&gt;
&lt;li&gt;Provide a lot of native-language libraries integration&lt;/li&gt;
&lt;li&gt;Organize a project much easily and effectively&lt;/li&gt;
&lt;li&gt;Options to scale the application at any level&lt;/li&gt;
&lt;li&gt;Provide some standard and secure way to run the server(production)&lt;/li&gt;
&lt;li&gt;Design APIs much easily&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us look at two of the most popular frameworks in the Python community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-flask"&gt;
  &lt;/a&gt;
  1. Flask
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-django"&gt;
  &lt;/a&gt;
  2. Django
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y9ECDYdu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635070666410/JbMc7NKP0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y9ECDYdu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635070666410/JbMc7NKP0.png" alt="backend framework ranking" width="880" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are seeing that Django and Flask are among the top 3 back-end web frameworks in 2021. So there is no double thought on why you should learn these technologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-flask"&gt;
  &lt;/a&gt;
  What is Flask
&lt;/h3&gt;

&lt;p&gt;Flask is the bare-bones framework that provides a lot of customizability with a lot less boilerplate code. It is a framework that provides a lot of third-party libraries to add functionalities to our application. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Flask is a micro web framework&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Flask as per the official documentation is a &lt;code&gt;micro&lt;/code&gt; framework indicating it has a very minimal setup. It is a back-end web framework that can be structured as per needs with a very little configuration overhead. That being said, it can get a bit limited in structuring and functionalities as it needs to taken care of manually.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flask is the easiest back-end web framework to get started and learn the fundamentals of server-side&lt;/strong&gt;. Flask is quite flexible in terms of scalability and maintenance of decent-sized applications as well. Though the community is not that big and absence of standardization in Flask, it is a go-to back-end web framework for beginners as well as experts due to its simplicity and flawless integration with Python libraries. &lt;/p&gt;

&lt;p&gt;The main concepts in Flask might be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Virtual Environment &lt;/li&gt;
&lt;li&gt;WSGI as a web server&lt;/li&gt;
&lt;li&gt;App routing&lt;/li&gt;
&lt;li&gt;Jinga2 as a templating language&lt;/li&gt;
&lt;li&gt;Creating Database connections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, &lt;strong&gt;Flask is kind of a DIY back-end web framework with rich sets of libraries and customizability out of the box&lt;/strong&gt;. This can easily be a beginner's choice and a right one too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-django"&gt;
  &lt;/a&gt;
  What is Django
&lt;/h3&gt;

&lt;p&gt;Django is also a back-end web framework based on Python programming language but it is more standardized and high-level. Django encourages a defined pattern for development but with customization and freedom in mind.&lt;/p&gt;

&lt;p&gt;Django also modularizes the components into so-called &lt;code&gt;apps&lt;/code&gt; to provide a scalable experience. It has a lot of boilerplate code to get up and running quite easily, it also has a &lt;code&gt;Admin section&lt;/code&gt; pre-built with all the functionalities. Similar to &lt;code&gt;Flask&lt;/code&gt;, it also provides flawless integration with all the Python libraries. It provides a much easier Database integration and pre-built &lt;code&gt;User&lt;/code&gt; authentication along with its model ready to plug in and use. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Django is a Batteries included Framework&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That means it has baked in functionalities like User-Authentication, Admin Section, Database Integration, RSS/Atom syndication feeds, etc. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3I2PyBp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635079576954/WcjcokoiX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3I2PyBp5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635079576954/WcjcokoiX.png" alt="djflask-dj.png" width="880" height="624"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The main concepts in Django include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Virtual Environment&lt;/li&gt;
&lt;li&gt;WSGI/ASGI as web servers&lt;/li&gt;
&lt;li&gt;Project structure&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Model View Controller&lt;/code&gt; Architecture in developing apps&lt;/li&gt;
&lt;li&gt;Django Templating Language for rendering Dynamic Templates &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Object-Relational Mapping&lt;/code&gt; in creating the applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unlike Flask, Django is already baked in with a lot of functionalities and integration with a ton of features. It should be good for beginners but many things are already taken care of that can be a huddle in &lt;strong&gt;actual learning process&lt;/strong&gt;, that being said it is a much scalable and production-ready web framework (not only back-end).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-similarities-between-them"&gt;
  &lt;/a&gt;
  What are the similarities between them?
&lt;/h3&gt;

&lt;p&gt;Well, if you learn one the other will be quite easy enough to pick up. The overall development is almost similar but unique in its own way. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pythonic syntax and libraries&lt;/li&gt;
&lt;li&gt;Project Structure is quite similar to &lt;code&gt;blueprints&lt;/code&gt; in Flask and &lt;code&gt;apps&lt;/code&gt; in Django&lt;/li&gt;
&lt;li&gt;Templating Language is almost similar&lt;/li&gt;
&lt;li&gt;Static Files are handled similarly with a different syntax &lt;/li&gt;
&lt;li&gt;URL Routing is the same as it binds the view(functions) with a pattern&lt;/li&gt;
&lt;li&gt;Ease in Deployment with minimal configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-should-you-learn"&gt;
  &lt;/a&gt;
  What should you learn?
&lt;/h2&gt;

&lt;p&gt;That question is dependent on the type of application you are trying to make but for a beginner trying to get hands dirty on the server-side, I would recommend &lt;code&gt;Flask&lt;/code&gt; as it is quite minimal and helps in constructing the base for the concepts like APIs, Databases, Requests, Admin section, etc. &lt;/p&gt;

&lt;p&gt;This might not be that difficult for people trying to learn back-end from scratch but for people with a bit of programming and server-side experience, &lt;code&gt;Django&lt;/code&gt; should be a go-to framework for all their needs. &lt;/p&gt;

&lt;p&gt;At the end of the day, it hardly matters what you do with which framework, what people see is the end result.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Thus, from this article, you might have got a bit understanding of why are the frameworks used in making applications and also the similarities and differences in the Python-based back-end web frameworks like Django and Flask. If you have any thoughts please let me know in the comments or on my social handles, any kind of feedback is much appreciated. &lt;/p&gt;

&lt;p&gt;Thank you for reading till here, until then as always Happy Coding :)&lt;/p&gt;

</description>
      <category>django</category>
      <category>flask</category>
    </item>
  </channel>
</rss>
