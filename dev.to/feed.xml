<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Asking is thriving</title>
      <author>Ben Szabo</author>
      <pubDate>Thu, 17 Dec 2020 22:33:45 +0000</pubDate>
      <link>https://dev.to/finnhvman/asking-is-thriving-45hi</link>
      <guid>https://dev.to/finnhvman/asking-is-thriving-45hi</guid>
      <description>&lt;p&gt;I started my career as a Java Software Engineer without any prior Java knowledge. I didn't study Computer Science at the university and I didn't do any software internship. All I knew was how to create static web pages with HTML and CSS.&lt;/p&gt;

&lt;p&gt;I became the first Java Engineer in the team and my role was to take over the development of an internal tool inherited from another team. I had to get up to speed really fast in order to survive.&lt;/p&gt;

&lt;p&gt;The thing I couldn't get away without was asking questions. A lot. There was so much to learn about the tool, domain and Java that I never ran out of questions. I was determined, relentless, out of my comfort zone and I'm pretty sure I was annoying. In the back of my mind there was this thought that I'm asking too many times and they would start hating me, but the drive to fit in the role was stronger.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TzooikNV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vykowqa32cxz82mpcicy.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TzooikNV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vykowqa32cxz82mpcicy.jpeg" alt="Question marks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Though the members who built the tool always answered. However frequently I went they always gave me guidance. I guess I was lucky for having such helpful and resilient mentors, because there was a wide gap to bridge with me. In the end I came through and I have been in software for the last decade, probably thanks to all those questions.&lt;/p&gt;

&lt;p&gt;Asking questions is a pretty important thing to do in software teams (most likely in any kinds of teams). So if you are ever pondering whether you should ask a question or not, rather ask away! Okay, maybe it's not always that simple because many factors come to play. But worry not, I put together a list of tips that could help you manage these factors and make you an effective asker!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-for-asking-effectively" class="anchor"&gt;
  &lt;/a&gt;
  Tips for asking effectively
&lt;/h1&gt;

&lt;p&gt;üîç Come &lt;a href="#preparing-yourself"&gt;prepared&lt;/a&gt;&lt;br&gt;
‚åöÔ∏è Find &lt;a href="#time-and-place"&gt;the right place and right time&lt;/a&gt;&lt;br&gt;
üòä Be &lt;a href="#politeness"&gt;polite&lt;/a&gt;&lt;br&gt;
üëå Express yourself &lt;a href="#communicating-concisely"&gt;concisely&lt;/a&gt;&lt;br&gt;
üìù Take &lt;a href="#notes"&gt;notes&lt;/a&gt; of the answer if necessary&lt;br&gt;
üëã Return the favor &lt;a href="#being-the-one-asked"&gt;when asked&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#preparing-yourself" class="anchor"&gt;
  &lt;/a&gt;
  Preparing yourself
&lt;/h1&gt;

&lt;p&gt;First, try to get prepared as much as you can around the topic you are about to ask. There's a chance that you might bump into the answer. However, if you don't then you still took some time to dive deeper in the area. Presenting that you already have a level of understanding helps a lot in communication.&lt;/p&gt;

&lt;p&gt;For example let's pretend you are given a task that revolves around hypergraphs and you know nothing about them. (Let's also pretend that most knowledge of hypergraphs has been wiped off the internet.) There's an expert in the company, but before you ask you could study around the matter. In this case the best start is to learn or revisit what graphs are. For instance understand that they are made of vertices and edges, there are undirected and directed graphs, and there are unweighted and weighted graphs.&lt;/p&gt;

&lt;p&gt;The point is to gain a good base knowledge of the topic you are requesting some help about. This will save you and the person you are meaning to ask some time and reduce the friction of the interaction. Here's a visualization of a hypergraph if you were wondering how they look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0V3Pu_M7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jt9ny7mvrdpbi1ujtg89.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0V3Pu_M7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jt9ny7mvrdpbi1ujtg89.png" alt="A hypergraph visualized"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#time-and-place" class="anchor"&gt;
  &lt;/a&gt;
  Time and place
&lt;/h1&gt;

&lt;p&gt;A question might arise in you at any time, but you won't always say it out loud right away. We have been taught in ways when to speak up and when to stay quiet. So it's important to be aware of what situation you are in. There are several anchors to this. I'm dividing them into two groups: the rather objective ones and the more subjective ones in the following two sections.&lt;/p&gt;

&lt;p&gt;It's a good idea to gauge who might be interested in the answer for your question so you ask it in front of the right audience. If you are asking questions of taxation on a global all hands of a multinational company, you are probably wasting everyone's time who doesn't tax in your country. Similarly, think of the time presumably necessary to answer your question. Avoid asking long, open-ended questions if you are short on time, for example during a stand-up. In a fully remote setup you have much less meta information on what your coworkers occupied with, but you can resort to checking their calendars and chat statuses. So check these before you try to engage in a discussion with someone to diminish the "Why aren't they answering?" feeling.&lt;/p&gt;

&lt;p&gt;Some other circumstantial things need to be "felt out". Cultural backgrounds vary a lot, for example I remember the feeling of not being too encouraged to ask questions in the class room. Why? Because if you asked something dumb or obvious you got shamed by the class or even the teacher. We might carry these ideas throughout our lives as golden truths, so it's good to remind ourselves that we are not sitting in classrooms anymore. Another, maybe even greater part of this is that each country and region has their unwritten laws of how you should behave at the workplace. It's really hard to put your finger on these things, but try to be aware of these patterns as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hbG08Ylv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/33bgzi5h9uhpiqaf1o9o.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hbG08Ylv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/33bgzi5h9uhpiqaf1o9o.jpeg" alt="Children in school raising their hands"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#politeness" class="anchor"&gt;
  &lt;/a&gt;
  Politeness
&lt;/h1&gt;

&lt;p&gt;This is a no brainer, of course being polite always helps. It's good to remind ourselves to approach our colleagues respectfully. Surely people are more likely to answer a question that's asked nicely. Furthermore, keep in mind that the person might not be available to answer your question at the moment. Understand, that you may need to wait for them to come back to you, or schedule a meeting in the next few days or weeks.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#communicating-concisely" class="anchor"&gt;
  &lt;/a&gt;
  Communicating concisely
&lt;/h1&gt;

&lt;p&gt;I already mentioned respecting other people's time earlier. Being terse is respecting the time of the person you are asking. No one wants to answer long-winded questions or verbose emails. On top of it no one wants to pay the mental tax of figuring out the important details of a lengthy request. Phrase your questions with just the necessary information and you will save the receiver from spending a lot of mental energy. &lt;/p&gt;

&lt;p&gt;Take a look at the following fictional email.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hi Alice,&lt;/p&gt;

&lt;p&gt;I'm Bob, the latest member of the Hugs Team. I'm writing you  because I would like to learn about the technology you used when implemented Haha's. We are looking to integrate Hugs beside Haha's in the next quarter, so it would be really helpful if you could answered the following questions.&lt;/p&gt;

&lt;p&gt;Hugs would be something similar like Haha's, but they would represent a different emotion. (It's still a positive one, but could be used for expressing gratitude.)&lt;/p&gt;

&lt;p&gt;[some in-depth questions here]&lt;br&gt;
[...]&lt;br&gt;
[...]&lt;/p&gt;

&lt;p&gt;Thanks in advance and looking forward for your answer!&lt;/p&gt;

&lt;p&gt;Best Regards,&lt;br&gt;
&lt;em&gt;Bob Bobson&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Software Engineer&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Hugs Team&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Have you noticed any unnecessary parts? I'm not saying the above email is wrong, but it could be optimized. It's more polite than necessary, burdens the reader with a lot of extra information, and has some redundant pieces.&lt;/p&gt;

&lt;p&gt;Now take a look at the optimized version.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hi Alice,&lt;/p&gt;

&lt;p&gt;We are looking to implement a feature called Hugs that's similar to Haha's in the next quarter. We would appreciate if you could answer these questions:&lt;/p&gt;

&lt;p&gt;[some in-depth questions here]&lt;br&gt;
[...]&lt;br&gt;
[...]&lt;/p&gt;

&lt;p&gt;Many Thanks,&lt;br&gt;
&lt;em&gt;Bob Bobson&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Software Engineer&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Hugs Team&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We made the email shorter yet polite and still kept some crucial contextual information.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#notes" class="anchor"&gt;
  &lt;/a&gt;
  Notes
&lt;/h1&gt;

&lt;p&gt;Sometimes you will get some long and complicated answers, and sometimes you will get some short answers but won't use it for a long time. Either way you might forget about the answer. Taking notes will help you with that. This seems unnecessary in a mailing for example, but another benefit of taking notes is that it forces you to actually interpret the answer. Interpreting immediately will push you to find potential holes in your understanding, thus driving you to ask more questions to get closer to what you need.&lt;/p&gt;

&lt;p&gt;All in all, try to be really attentive when you are receiving an answer so you can avoid the need of repeating your questions in the future. Moreover, from the answerer's perspective it's much better to explain something to someone who is really listening. People can easily tell that, like you can tell that the dog below is paying high attention to something.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wERH1-mV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wogbdvawox0uj88wjz0s.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wERH1-mV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wogbdvawox0uj88wjz0s.jpeg" alt="Dog watching something"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#being-the-one-asked" class="anchor"&gt;
  &lt;/a&gt;
  Being the one asked
&lt;/h1&gt;

&lt;p&gt;You will certainly find yourself on the other side of Q&amp;amp;A. In that case be mindful of the tips above. Try to stay approachable so people will remember that you are someone they can ask. Set up reminders for emails you want to answer later, set up reminders even for inquiries received via Slack. It takes some effort, but people will learn that you are reliable.&lt;/p&gt;

&lt;p&gt;Consider helping others when they ask as part of your job because the success of your company's might just depend on it.  Be helpful and nourish a great culture that will lead you and your peers to great wins.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#when-desperate-be-loud" class="anchor"&gt;
  &lt;/a&gt;
  When desperate be loud
&lt;/h1&gt;

&lt;p&gt;This isn't a serious advice rather a ridiculous last resort. If none of the above worked, try following some guerrilla marketing-esque tactics: State something blatantly wrong loud enough and in time someone will come and correct you anyways. Alternative explanation by David Khourshid:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kkIzey0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/619677584805208064/RwwbnNpi_normal.jpg" alt="David K. üéπ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        David K. üéπ
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/davidkpiano"&gt;@davidkpiano&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      You can solve *any* problem if you believe in yourself, put your mind to it, and tweet the wrong answer then wait 5 minutes.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:37 PM - 30 Nov 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1333404876890648577" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1333404876890648577" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      74
      &lt;a href="https://twitter.com/intent/like?tweet_id=1333404876890648577" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      808
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;p&gt;&lt;em&gt;I hope these tips gave you a confidence boost to ask more often!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>career</category>
      <category>productivity</category>
      <category>help</category>
    </item>
    <item>
      <title>Murders in the ocean - DO+DEV Hackaton Submission (Part 1)</title>
      <author>Denislav Gavrilov üë®‚ÄçüöÄü§ñü§∑‚Äç‚ôÇÔ∏è</author>
      <pubDate>Thu, 17 Dec 2020 21:36:57 +0000</pubDate>
      <link>https://dev.to/denislav__/murders-in-the-ocean-do-dev-hackaton-submission-part-1-3jpb</link>
      <guid>https://dev.to/denislav__/murders-in-the-ocean-do-dev-hackaton-submission-part-1-3jpb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-i-built-am-building" class="anchor"&gt;
  &lt;/a&gt;
  What I built (am building)
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;STILL IN DEVELOPMENT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hey there people on the web. I hope everyone is building marvelous stuff for this amazing hackathon and I am looking forward to seeing a lot of cool projects. Let me tell you a little bit about my project and the state of it.&lt;/p&gt;

&lt;p&gt;Due to the submission template being perfect, I will stick to it. Let's go!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#category-submission" class="anchor"&gt;
  &lt;/a&gt;
  Category Submission:
&lt;/h3&gt;

&lt;p&gt;Random Roulette üïπÔ∏è&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#app-link" class="anchor"&gt;
  &lt;/a&gt;
  App Link
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://do-dev-hackaton-sv6sl.ondigitalocean.app/"&gt;https://do-dev-hackaton-sv6sl.ondigitalocean.app/&lt;/a&gt; - The URL is going to change in the future. I am, once again, having enormous problems choosing the perfect domain... I will make sure to edit my post when I pick the domain. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshots" class="anchor"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h3&gt;

&lt;p&gt;This is the screen when the game is started:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XYEs83Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/f7gs9grj7s48e46iccvm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XYEs83Ji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/f7gs9grj7s48e46iccvm.png" alt="Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the 'first-round' where everyone can still see the screen (the whole screen it a lot richer on details, this viewport is due to the 4 screens on 1 monitor):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9i988PAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jnkmo19qfgs2cm29wd5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9i988PAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jnkmo19qfgs2cm29wd5a.png" alt="First Round"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;This is what all the players see when it's the medic's round (explanation of the rules in the description):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1uBMyFxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p345dpspjht4vdbgo9ue.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1uBMyFxR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p345dpspjht4vdbgo9ue.png" alt="Medic Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what the individual screens look like for the killer and the medic when they choose who to kill/heal:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6UGe7eBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/r03monb6l02oxlzof0vo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6UGe7eBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/r03monb6l02oxlzof0vo.png" alt="Kill or Heal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#description" class="anchor"&gt;
  &lt;/a&gt;
  Description
&lt;/h3&gt;

&lt;p&gt;The game is simply a murder mystery. I doubt it if the majority of the players haven't played this format before.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#rules" class="anchor"&gt;
  &lt;/a&gt;
  Rules:
&lt;/h4&gt;

&lt;p&gt;There is 1 killer, 1 medic, and the rest of the players are passengers. The goal is to find the killer through discussion. The rules go like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Round 1 - The screen for everybody except for the killer goes off and the killer chooses his prey (who to kill).&lt;/li&gt;
&lt;li&gt;Round 2 - The screen for everybody except for the medic goes off and the medic chooses who to save.&lt;/li&gt;
&lt;li&gt;Round 3 - The screen for everybody comes clean and the results are shown: If nobody is killed, this means the medic managed to save the prey. If there is one killed, it means the medic could not save the prey. Everybody in the room discusses who to vote off and if they don't manage to catch the killer, the game continues looping through the next 3 rounds and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#link-to-source-code" class="anchor"&gt;
  &lt;/a&gt;
  Link to Source Code
&lt;/h3&gt;

&lt;p&gt;I will be pasting the source code of the game once I finish it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#permissive-license" class="anchor"&gt;
  &lt;/a&gt;
  Permissive License
&lt;/h3&gt;

&lt;p&gt;MIT License. I will post a link once I finish the project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background" class="anchor"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;I was heavily inspired by Among Us (predictable, eh?) and I also remember playing this particular format of murder mystery games with a group of friends.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-i-built-it-am-building-it" class="anchor"&gt;
  &lt;/a&gt;
  How I built it (am building it)
&lt;/h3&gt;

&lt;p&gt;I've been working as a sysadmin for 1 year and as you can imagine, development is not one of my strong sides. Having that in mind, I am amazed by how easy DigitalOcean's app platform is. I am so glad I don't have to deal with server stuff and have the ability to deploy my app with a click of a button. It's superb, really!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resourcesinfo" class="anchor"&gt;
  &lt;/a&gt;
  Additional Resources/Info
&lt;/h3&gt;

&lt;p&gt;This is my submission post to put my app out there but it is still not completed. That is why, I will be covering my adventure in a series of posts where I will be sharing my progress and post openly on how I built it, what challenges I face and how I overcome such.&lt;/p&gt;

&lt;p&gt;The game is being built with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://socket.io/"&gt;socket.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/docs/app-platform/"&gt;DigitalOcean's APP platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bootstrap for grinding&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dohackathon</category>
    </item>
    <item>
      <title>Programmatically Remind Your Teammates on Slack to Review GitHub PRs</title>
      <author>Alan Lee</author>
      <pubDate>Thu, 17 Dec 2020 17:50:56 +0000</pubDate>
      <link>https://dev.to/alanblee/programmatically-remind-your-teammates-on-slack-to-review-github-prs-b6n</link>
      <guid>https://dev.to/alanblee/programmatically-remind-your-teammates-on-slack-to-review-github-prs-b6n</guid>
      <description>&lt;p&gt;The Github integration for Slack is great for team productivity. Having the ability to give Slack channels full visibility into Github projects, for real-time notifications, is an amazing way to keep the development team on the same page. However, this can become a double-edged sword. Developers may decide to ignore these messages being sent because it may be information overload. &lt;/p&gt;

&lt;p&gt;I‚Äôve been in a similar situation where pull requests needed approval from reviewers but they wouldn‚Äôt check the channels or their emails. The only thing that got their attention were direct messages. This hindered delivery and having to ping the reviewer myself was becoming a pain.&lt;/p&gt;

&lt;p&gt;As great as the Github app for Slack is, I wanted something more custom that would suit my needs. For example, whenever a pull request is made with reviewers, only send direct messages to those who have been requested.&lt;/p&gt;

&lt;p&gt;In this article, we will use Github, Slack, and &lt;a href="https://dev.reshuffle.com/"&gt;Reshuffle&lt;/a&gt; to create the workflow to directly message the reviewers on a pull request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-it" class="anchor"&gt;
  &lt;/a&gt;
  How to Build It
&lt;/h2&gt;

&lt;p&gt;Before getting started with the code, we‚Äôll need to get credentials set up with Github and Slack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Log in and generate a token &lt;a href="https://github.com/settings/tokens"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Save the token somewhere, as you''ll need it soon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new Slack App &lt;a href="https://api.slack.com/apps"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Enter the App name and select the workspace&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Create App&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Click on your new App&lt;/li&gt;
&lt;li&gt;The signing secret is under &lt;code&gt;Basic Information&lt;/code&gt; &amp;gt; &lt;code&gt;App Credentials&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The token is under &lt;code&gt;Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Install App&lt;/code&gt; &amp;gt; &lt;code&gt;OAuth Access Token&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Save the token and signing secret somewhere, as you''ll need it soon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See links for full documentation: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle"&gt;Reshuffle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle-slack-connector"&gt;Slack Connector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle-github-connector"&gt;Github Connector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/reshufflehq/reshuffle/blob/master/doc/CronConnector.md"&gt;Cron Connector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the credentials saved somewhere safe, we can begin by instantiating a Reshuffle app and configuring the connectors.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The Github Connector requires a runTimeBaseUrl. A tool like &lt;a href="https://ngrok.com/"&gt;ngrok&lt;/a&gt; can be used to generate a url that exposes your localhost over SSL.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Reshuffle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;CronConnector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reshuffle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GitHubConnector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reshuffle-github-connector&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SlackConnector&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reshuffle-slack-connector&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Reshuffle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Cron config&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cronConnector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CronConnector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Github Config&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;githubConnector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;GitHubConnector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;runtimeBaseUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RUNTIME_BASE_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SlackConnector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SLACK_TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="na"&gt;signingSecret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SLACK_SIGN_SECRET&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

 &lt;span class="c1"&gt;// Code listed further down&lt;/span&gt;
 &lt;span class="c1"&gt;// will be inserted here&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Reshuffle Connectors provide events and actions that allow developers to easily build custom workflows and integrations. We‚Äôre now able to take advantage of what they can do.&lt;/p&gt;

&lt;p&gt;We‚Äôll continue by getting a list of the user‚Äôs Github handles and their Slack IDs. In order to get this data, we use a method on Slack Connector that exposes &lt;a href="https://slack.dev/bolt-js/concepts#web-api"&gt;Slack's web client&lt;/a&gt; actions.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: In this example, display_name is being assumed to be the same as the Github handle. You can definitely add your own profile fields that suit your team.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slackUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webClient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getWebClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;members&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;webClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;usersHash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
 &lt;span class="nx"&gt;members&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;usersHash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;usersHash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Next, we‚Äôll write a helper function to handle the event when a pull request is created, this will take in a list of reviewers from Github, the user list from Slack, and the link url to the pull request. If there are no reviewers, we‚Äôll simply post to the general channel, otherwise, we match the reviewers to the slack members list and send them a direct message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messageHelper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="nx"&gt;ghReviewers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;slackList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;prLink&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ghReviewers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;general&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pending pull request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;New pull request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;prLink&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
   &lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;ghReviewers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;slackList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;slackConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
         &lt;span class="nx"&gt;slackList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
         &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
           &lt;span class="nx"&gt;pending&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;* Pending review *&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;* New review requested *&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;prLink&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
       &lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To tie everything together, we configure the Github Connector to trigger an event anytime a pull request is created.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: See the full list of available events &lt;a href="https://github.com/reshufflehq/reshuffle-github-connector#connector-events"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We can get the list of requested reviewers from the event object, passing onto our helper, which is only called if the event action matches ‚Äúopened‚Äù or ‚Äúreopened‚Äù.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;githubConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_OWNER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;githubEvent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pull_request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;requested_reviewers&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;opened&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reopened&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reviewers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;requested_reviewers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;reviewer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;reviewer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;messageHelper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reviewers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;slackUsers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: For more information on the parameters of postMessage check the &lt;a href="https://github.com/reshufflehq/reshuffle-slack-connector#postMessage"&gt;docs&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With that, we‚Äôre finished, any time a pull requests is created with reviewers, they are directly messaged.&lt;/p&gt;

&lt;p&gt;As a bonus, if the reviewers forget about the pull request, we can use the Cron Connector as a scheduler to check for any open PRs on the repository and message the reviewers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cronConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0 12 * * 3 *&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;githubConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;pulls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
   &lt;span class="na"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_OWNER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GITHUB_REPO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;requested_reviewers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;reviewers&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;messageHelper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reviewers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;slackUsers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;html_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This example provides a good starting point to how you can easily create a custom workflow for your team's needs using Reshuffle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#now-make-it-happen" class="anchor"&gt;
  &lt;/a&gt;
  Now, Make it Happen
&lt;/h2&gt;

&lt;p&gt;As your developers and project management teams experience the ease of working with integrated applications, we encourage you to consider where else integrating workflows would benefit your teams. With so many different tools, the more you can consolidate them into one common interface, the easier people can get work done. &lt;/p&gt;

&lt;p&gt;Reshuffle is continually listening to what our customers need and desire. Don‚Äôt see a Connector to a service you‚Äôd like to integrate? Send a tweet to &lt;a href="https://twitter.com/reshufflehq"&gt;@ReshuffleHQ&lt;/a&gt; to let us know which Connector you‚Äôd like us to develop next. &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>slack</category>
      <category>reshuffle</category>
    </item>
    <item>
      <title>Women in Tech: The Great Big List of Communities by Country</title>
      <author>Andrew Stetsenko</author>
      <pubDate>Thu, 17 Dec 2020 17:29:43 +0000</pubDate>
      <link>https://dev.to/stetsenko_me/women-in-tech-the-great-big-list-of-communities-by-country-596j</link>
      <guid>https://dev.to/stetsenko_me/women-in-tech-the-great-big-list-of-communities-by-country-596j</guid>
      <description>&lt;p&gt;Although many workplaces have become much more diverse over the past few decades, the vast majority of &lt;a href="https://relocate.me/search"&gt;software engineering, cybersecurity, and other tech jobs&lt;/a&gt; are filled by men. However, a diverse workforce (especially in the IT industry) means a richer company culture, happier and more productive employees, and the ability to innovate products that appeal to all sectors of society.&lt;/p&gt;

&lt;p&gt;While women are still very much under-represented in the tech industry, there has been a small but steady increase in the number of female technologists over the past years, according to AnitaB.org‚Äôs &lt;a href="https://anitab.org/research-and-impact/top-companies/2020-results"&gt;latest report&lt;/a&gt;, which is promising.&lt;/p&gt;

&lt;p&gt;By the way, did you know that &lt;a href="https://www.europeanwomenintech.com/blog/women-in-tech-by-country"&gt;Bulgaria has the highest proportion of female ICT specialists&lt;/a&gt; in the EU?  &lt;/p&gt;

&lt;p&gt;A lot of progress has already been made in terms of diversity but unfortunately we still have a long way to go. With the help of ground-breaking, global organizations and initiatives that support the promotion of women in the workplace, females are being encouraged more than ever before to consider careers in STEM, and tech employers are being encouraged to employ women.&lt;/p&gt;

&lt;p&gt;Here are just some of these organizations and initiatives:&lt;/p&gt;

&lt;h2&gt;Global üåç&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.womentech.net"&gt;WomenTech Network&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WomenTech Network believes that women are just as (if not more so) competent as their male counterparts in the tech industry. They regularly arrange networking events and provide mentorship programs and opportunities for professional growth for female tech professionals throughout the world.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.womenwhocode.com"&gt;Women Who Code (WWCode)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women Who Code was started back in 2011 and initially served the organization‚Äôs local community. Today, WWCode has a whopping 230,000 members‚Äîsoftware engineers, data scientists, solutions architects, and more‚Äîin 122 countries and shows no signs of slowing down. Joining Women Who Code will give you access to coding resources, a global community, and the WWCode job board.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.hiretechladies.com"&gt;Tech Ladies&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tech Ladies is a leading platform that provides women with information on up and coming positions in the tech industry and provides useful information on a wide range of tech companies.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://girlswhocode.com"&gt;Girls Who Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Girls Who Code understands that careers in the tech industry still seems unattainable or unattractive to many young women. Their goal is to change this perception and to change the image of a programmer.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.womeninai.co"&gt;Women in AI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women in AI provides support and mentorship to females in the field of AI. This popular organization is the first of its kind to support women in AI and boasts over 5,000 members in more than 100 countries. They have played a large role in promoting more diversity in their field.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.womenindata.org"&gt;Women in Data (WiD)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With more than 30 global chapters and over 12,000 community members, WiD is a non-profit international organization that exists to increase gender diversity in the field of data science and analytics.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://ascend.women-in-technology.com"&gt;Ascend&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are a female tech professional, joining Ascend is free of charge and will provide you with excellent support and information on how to excel in your field.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://women-in-tech.org"&gt;Women in Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With members in more than 100 countries, Women in Tech is dedicated to closing the gender gap in the tech field. Their global reach means that they are able to support the education and training of women who wish to pursue tech careers.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.adaslist.co"&gt;Ada‚Äôs List&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ada‚Äôs List was initially founded to provide a supportive and useful community for women in the tech field. Although they never dreamed that they would become as large as they are today (with over 7,500 members), they simply wanted to help women find great jobs, suppliers and vendors, in addition to providing great quality advice.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://powertofly.com"&gt;PowerToFly&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whether you are a young, female tech professional or an experienced tech leader, PowerToFly has something for all women in the tech industry. They have many useful resources, information on new jobs and a community of like-minded professionals.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://elpha.com"&gt;Elpha&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Elpha is a community of women professionals in the tech industry. On this platform, women can ask important questions, join their mentorship program, and encourage one another in a supportive environment.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://railsgirls.com"&gt;Rails Girls&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Born in Helsinki, Rails Girls is nowadays a global movement designed to encourage more women and girls to get involved in coding. Since 2010, they have arranged hundreds of free Ruby on Rails workshops around the world.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://www.pyladies.com"&gt;PyLadies&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With over 100 &lt;a href="https://pyladies.com/locations"&gt;local Meetup groups&lt;/a&gt;, PyLadies is a global community for aspiring and experienced female developers who are passionate about the Python programming language.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://gocarrots.org"&gt;Geek Girls Carrots&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Geek Girls Carrots is one of the biggest communities of women in tech. Established in Poland in 2011, this organization now operates all around the world. Through meetups, tech workshops, and other events, it is striving to bring more women into the tech workforce.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://girlsintech.org"&gt;Girls in Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Like other initiatives and organizations mentioned in this list, Girls in Tech is working to eliminate the gender gap in tech. Since 2007, it has grown into a global community with more than 50 chapters and over 100,000 members around the globe. Programming and events vary by chapter based on local interests and needs. Membership is free.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://leanin.org"&gt;LeanIn.org&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Founded by Rachel Thomas and Facebook‚Äôs COO Sheryl Sandberg in 2013, LeanIn.org is a movement dedicated to helping women achieve their ambitions. One of its key initiatives‚ÄîLean In Circles‚Äîprovides an opportunity for tens of thousands of women around the world to meet with peers, get/give peer mentorship, and sharpen their skills. Lean In‚Äôs partner network now boasts over 1,400 companies and organizations, including LinkedIn and Salesforce, who are publicly committed to gender equality.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://anitab.org"&gt;AnitaB.org&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With a few dozens of local communities in different countries, AnitaB.org is rightly considered one of the leading organizations for women in technology. All its events and programs are aimed at promoting diversity and helping women to achieve success in tech.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.ladiesthatux.com"&gt;Ladies that UX&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ladies that UX is a welcoming and collaborative community of women who work in UX. They meet monthly to talk about UX and exchange knowledge. The community has a growing number of local groups based in different cities worldwide, including &lt;a href="https://www.meetup.com/Ladies-that-UX-Amsterdam"&gt;Amsterdam&lt;/a&gt;, &lt;a href="https://www.meetup.com/de-DE/LTUX-Berlin"&gt;Berlin&lt;/a&gt;, &lt;a href="https://twitter.com/ladiesthatux_ln"&gt;London&lt;/a&gt;, &lt;a href="https://www.meetup.com/Ladies-That-UX-Boston"&gt;Boston&lt;/a&gt;, &lt;a href="https://www.meetup.com/Ladies-that-UX-Seattle"&gt;Seattle&lt;/a&gt;, and &lt;a href="https://www.meetup.com/Ladies-That-UX-Melbourne"&gt;Melbourne&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://womenwhotech.com"&gt;Women Who Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women Who Tech works to get more women-led startups funded. Through the Women Startup Challenge, an 8-week virtual program, they provide funding, mentoring, and other resources for women entrepreneurs building innovative tech products to solve real-world issues.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.latinasintech.org"&gt;Latinas in Tech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Latinas in Tech was started in Silicon Valley in 2014 and has since grown into a 12,000-strong community with chapters in 15+ locations, including Austin, Chicago, Houston, London, Los Angeles, Mexico, New York City, and Seattle. Their mission is to connect, support, and empower Latina women working in tech and to create safe spaces for learning, mentorship, and recruitment. The members of Latinas in Tech meet regularly to advance their careers and host professional development workshops every week.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://codeop.tech"&gt;CodeOp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Founded and led by females, CodeOp is a women-focused tech school offering Full Stack Development, Data Analytics, and Product Management courses. The school operates globally through its remote programs and has campuses for in-person learning in Barcelona (HQ) and Kuala Lumpur. CodeOp is not just a bootcamp; it‚Äôs a community of 18-45 year old women, trans, and gender non-conforming people from over 50 countries worldwide.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.lmfnetwork.com"&gt;Like Minded Females (LMF) Network CIC&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;LMF Network CiC is a community founded by Sonya Barlow to reduce inequalities in tech, entrepreneurship, and digital by providing a foundation to succeed to women and underrepresented minorities. Since 2018, they have delivered more than 200 workshops globally, trained over 20,000 people, and partnered with some of the world‚Äôs top companies like Google and Vodafone. The network currently has chapters in the UK and Canada.&lt;/p&gt;

&lt;h2&gt;Australia üá¶üá∫&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://musescodejs.org"&gt;MusesCodeJS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Running workshops on Node.js and JavaScript, MusesCodeJS believes that women are just as competent as men when it comes to IT careers.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.codelikeagirl.com"&gt;Code Like a Girl&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Code Like a Girl is a Melbourne-based initiative that supports women to enter, and succeed, in the world of coding. Besides regular events for women in tech, this social enterprise is offering coding camps for girls and online short courses for adults. What‚Äôs more, they are connecting Australia‚Äôs leading companies with talented women looking to get their foot in the door.&lt;/p&gt;

&lt;h2&gt;Finland üá´üáÆ&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://mimmitkoodaa.ohjelmistoebusiness.fi/in-english"&gt;Mimmit koodaa&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The purpose of Mimmit koodaa, the program powered by the Finnish Software and E-business Association and its member companies, is to shatter stereotypes about women in coding and bridge the gender gap in the Finnish software industry. The program currently boasts over 6,000 adult women participating.&lt;/p&gt;

&lt;h2&gt;France üá´üá∑&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.50intech.com"&gt;50inTech&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;50inTech is a platform connecting women in tech with fellow peers, companies, and investors to achieve greater diversity and inclusion in the industry. (Joining the platform is free.) In addition to regular events, the team also launched a podcast dedicated to building a successful career in tech and growing a business.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.meetup.com/Women-in-FinTech-France"&gt;Women in FinTech France&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Regular meetups for women in fintech in Paris. The community currently consists of 300 members.&lt;/p&gt;

&lt;h2&gt;Netherlands üá≥üá±&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://womennetworknl.wixsite.com/womenhiringcircle"&gt;Women Hiring Circle&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Women Hiring Circle aims to support women who are seeking a job opportunity or the next step in their career. It‚Äôs a community-driven initiative that opens a dialogue between female professionals to successfully reach their potential in the local job market.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://rightbrains.nl"&gt;RightBrains&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since its founding in 2014, RightBrains has been laser-focused on increasing the number of women working in digital-focused roles. Its platform offers an opportunity for women to learn, network, and get inspired for a career in digital technology.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://techionista.com"&gt;Techionista&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Techionista is a Dutch platform that encourages women to consider a career in tech and provides support for such women.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.meetup.com/SheSharp"&gt;SheSharp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;SheSharp is a nonprofit aimed at fostering diversity and inclusion in tech and entrepreneurship. They regularly host events‚Äîpublic talks, (coding) workshops, panel events, or interviews‚Äîcovering topics like data science, machine learning, IoT, front end development, DevOps, QA, and much more.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://codetochange.org"&gt;The Code to Change&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This initiative exists to help women develop the necessary skills to flourish in the tech sector. In addition to a 5-month mentorship program, they regularly host &lt;a href="https://www.meetup.com/nl-NL/Amsterdam-Women-in-Technology"&gt;meetups&lt;/a&gt;, workshops, and other events in Amsterdam.&lt;/p&gt;

&lt;h2&gt;United States üá∫üá∏&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.wicys.org"&gt;Women in CyberSecurity (WiCyS)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As the name suggests, WiCyS is a fast-growing group of female cybersecurity professionals. The organization‚Äôs long-term goal is to ensure that there is much more gender equality and diversity in the field and they do this by encouraging the recruitment and promotion of women in cybersecurity. WiCyS offers mentoring, training programs, scholarships, virtual and in-person conferences, leadership series, career fairs, webinars, and more to women at all stages of their cybersecurity career journey!&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.hiretechladies.com"&gt;Tech Ladies&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Started as a small coffee meetup in NYC in 2015, Tech Ladies is nowadays a worldwide community with 100,000 members. Through a supportive online group, a free job board, and opportunities to learn, it helps women and non-binary people in tech grow their careers.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://rewritingthecode.org"&gt;Rewriting the Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Through mentorship, community engagement, and educational resources, Rewriting the Code supports and empowers college and early career women with a passion for technology to thrive in the industry. The community currently boasts over 9,500 members.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="https://www.writespeakcode.com"&gt;Write/Speak/Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Write/Speak/Code is on a mission to promote the visibility and leadership of women and non-binary technologists through peer-led professional development. The organization runs &lt;a href="https://www.meetup.com/pro/writespeakcode"&gt;conferences, workshops, and events&lt;/a&gt; across the country and currently has communities in at least six major US cities such as SF, NYC, Austin, Seattle, LA, and Chicago.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;strong&gt;&lt;a href="http://lwc.tech"&gt;League of Women Coders&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;League of Women Coders brings the brightest female minds together to discuss tech, hack on projects, and share ideas. Every month, they run meetups in &lt;a href="https://www.meetup.com/League-of-Women-Coders"&gt;NYC&lt;/a&gt; and &lt;a href="https://www.meetup.com/League-of-Women-Coders-Washington-DC"&gt;Washington, DC&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;em&gt;This is a non-exhaustive list of global and local communities of women in tech. To view the full list, follow &lt;a href="https://relocate.me/blog/online-communities/women-in-tech-the-great-big-list-of-communities-by-country"&gt;this link&lt;/a&gt; to the original article.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>shecoded</category>
      <category>diversity</category>
      <category>communities</category>
    </item>
    <item>
      <title>Strict Schema Enforcement vs. Schemaless vs. Dynamic Schema</title>
      <author>DavidCockerill</author>
      <pubDate>Thu, 17 Dec 2020 16:01:10 +0000</pubDate>
      <link>https://dev.to/harperdb/strict-schema-enforcement-vs-schemaless-vs-dynamic-schema-333a</link>
      <guid>https://dev.to/harperdb/strict-schema-enforcement-vs-schemaless-vs-dynamic-schema-333a</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D-7jhP5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wkkpsq2h0a30q1euv18o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D-7jhP5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wkkpsq2h0a30q1euv18o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The debate over whether to use a schema or not has passionate support on both sides. One side appreciates data integrity constraints and predictability, while the other prefers more flexibility (or ‚Äúagility‚Äù) and time effectiveness. The ultimate answer as to which is ‚Äúbetter‚Äù most likely depends on the specific project, data used, and associated skill set. &lt;/p&gt;

&lt;p&gt;In this post I will cover strict schema enforcement, schemaless, and dynamic schema, including the pros and cons of each one.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strict-schema" class="anchor"&gt;
  &lt;/a&gt;
  Strict Schema
&lt;/h3&gt;

&lt;p&gt;A schema is a blueprint of how a database is constructed. It doesn‚Äôt actually hold the data, but instead describes the shape of the data and how it might relate to other tables in the database. Schema‚Äôs contain information on all the objects in a database such as tables, attributes, data types and relationships, it can also include triggers, views, indexes and so on. Some common databases that use strict schemas are Oracle, MS SQL Server and PostgreSQL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gives a high level view of the structure and relationship of the tables in your database. Can make it easier to keep track of what information is and is not in the database. &lt;/li&gt;
&lt;li&gt;Enforces data integrity constraints, these are a set of rules that maintain consistent formatting of all entries. &lt;/li&gt;
&lt;li&gt;More predictable, which can provide a more efficient storage and indexing structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Takes time to design and build when starting a new project. Modifying the schema can be tricky. Can be a lot of work to maintain.&lt;/li&gt;
&lt;li&gt;Rigid limits, not flexible.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAccC5Me--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B7D931BFFFCC24E919AF5549F64B80AA607D7B2E243C76B3413D85BD1FDC4DD9_1607468910480_g0od-relations-with-tables-this-database-has-imgflip-conm-when-you-44714504.png" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#schemaless" class="anchor"&gt;
  &lt;/a&gt;
  Schemaless
&lt;/h3&gt;

&lt;p&gt;As the name implies, schemaless does not use a schema. It means the database does not have any fixed structure. A schemaless database does not enforce any data type limitations and can store structured and unstructured data. Some common schemaless databases are MongoDB, CouchDB, and Google Cloud Datastore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quick and easy to setup because there is no schema to model or additional layers required, so the complexity is greatly reduced. With just a few clicks a developer can have a working database.&lt;/li&gt;
&lt;li&gt;Updates can be made on the fly without having to make changes to a schema or shutting the database down.&lt;/li&gt;
&lt;li&gt;More flexibility when storing data. You don‚Äôt need to decide up front what you‚Äôre going to store, how it‚Äôs structured or related to other information in the database.&lt;/li&gt;
&lt;li&gt;Less overhead, which can lead to better performance and scalability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No columns means the application has to parse every document to find requested data.&lt;/li&gt;
&lt;li&gt;No unified metadata, you end up looking at the application to understand the data rather than having that information.&lt;/li&gt;
&lt;li&gt;No control over the data, you may be receiving garbage, but you don‚Äôt have any filters so bad data gets loaded either way. Data filters are pushed out to the application layer.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jrei5uyB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B7D931BFFFCC24E919AF5549F64B80AA607D7B2E243C76B3413D85BD1FDC4DD9_1607469313288_tumblr_o16n2kBlpX1ta3qyvo1_1280.jpg" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-schema" class="anchor"&gt;
  &lt;/a&gt;
  Dynamic Schema
&lt;/h3&gt;

&lt;p&gt;What many claim as the best of both worlds, a dynamic schema is one that changes as you add data. There is no need to define the schema beforehand. When data is inserted, updated, or removed, the database builds a schema dynamically. Popular dynamic schema databases include HarperDB and MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to set up, requires no input from the user.&lt;/li&gt;
&lt;li&gt;Provides the structure that comes with a schema, which equals a more efficient storage and indexing model. &lt;/li&gt;
&lt;li&gt;Doesn‚Äôt force data constraints, can ingest unstructured data.&lt;/li&gt;
&lt;li&gt;Flexible to develop with as the data model can easily evolve over time.&lt;/li&gt;
&lt;li&gt;Can handle semistructured data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No data enforcement means developers must ensure data adheres to the data model.&lt;/li&gt;
&lt;li&gt;Data model can get messy if proper processes are not followed
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mba57ynz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B7D931BFFFCC24E919AF5549F64B80AA607D7B2E243C76B3413D85BD1FDC4DD9_1607469797463_blog1.png" alt=""&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, there are valid points on each side of the argument and numerous factors to considering when choosing which is right for your specific project. At the end of the day, this decision has a lot to do with the preference of the user and long term project goals. For example, at HarperDB, we are big fans of the &lt;a href="https://harperdb.io/blog/dynamic-schema-the-harperdb-way/"&gt;dynamic schema&lt;/a&gt;, which enables us to ingest any type of data at scale. HarperDB frees you from the hassle of defining data types, providing unlimited flexibility as your applications evolve and scale over time. Which type of schema do you prefer?&lt;/p&gt;

&lt;p&gt;While it may not be top of mind, it‚Äôs important to get your schema right upfront to avoid unnecessary headaches and additional time and costs later on. Foundation is key, and it‚Äôs much more difficult to go back and change that foundation once you‚Äôve actually built on top of it. Take the time to weigh the pros and cons of strict schema enforcement vs. schemaless vs. dynamic schema before you start building, you won‚Äôt regret it.  &lt;/p&gt;

</description>
      <category>database</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>schema</category>
    </item>
    <item>
      <title>The Power of Pure HTTP ‚Äì screen share, real-time messaging, SSH and VNC</title>
      <author>Ryo Ota</author>
      <pubDate>Thu, 17 Dec 2020 15:27:07 +0000</pubDate>
      <link>https://dev.to/nwtgck/the-power-of-pure-http-screen-share-real-time-messaging-ssh-and-vnc-5ghc</link>
      <guid>https://dev.to/nwtgck/the-power-of-pure-http-screen-share-real-time-messaging-ssh-and-vnc-5ghc</guid>
      <description>&lt;p&gt;Hi all. Today, I'd like to show you the power of &lt;strong&gt;pure HTTP&lt;/strong&gt; stream, which allows us to do screen sharing, video chatting, real-time text messaging, SSH, VNC, and so on. The demo videos below show &lt;strong&gt;SSH and VNC&lt;/strong&gt; over pure HTTP. Let's dive into this!&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q1ZwW5vp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ybf1uh546zgbb9dpefo8.gif" width="350" alt="SSH over Piping Server"&gt;&lt;/td&gt;
    &lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9cTHGY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gm08i1qrqkfuzy9p22kx.gif" width="350" alt="VNC over Piping Server"&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;a href="https://github.com/nwtgck/piping-ssh-web"&gt;SSH on Web browser&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/nwtgck/piping-vnc-web"&gt;VNC on Web browser&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#why-http" class="anchor"&gt;
  &lt;/a&gt;
  Why HTTP?
&lt;/h2&gt;

&lt;p&gt;HTTP is everywhere for everyone and everything, which allows us to communicate in any situation. HTTP is one of the most mature protocols and wildly used. You can find HTTP in web browser in personal computers including Windows, Mac and Linux, smartphones and tablets including Android, iPhone and iPad, &lt;code&gt;curl&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt; commands in your terminal, some IoT devices, automation tools such as &lt;a href="https://support.apple.com/guide/shortcuts/welcome/ios"&gt;Shortcuts&lt;/a&gt; iOS app and &lt;a href="https://www.microsoft.com/en-us/p/microsoft-flow/9nkn0p5l9n84"&gt;Microsoft Flow&lt;/a&gt;, Web Hooks and so on. Additionally, HTTP is an evolving protocol as HTTP/2, HTTP/3 and getting faster.&lt;/p&gt;

&lt;p&gt;Usuary, an HTTP request has a short life, used for fetching HTML/CSS/JavaScript, media and API requests. So, this post introduces long-life HTTP request, which does real-time communications over pure HTTP stream without WebSocket and WebRTC.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#piping-server" class="anchor"&gt;
  &lt;/a&gt;
  Piping Server
&lt;/h2&gt;

&lt;p&gt;I made &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;, which allows us to transfer data between every device.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nwtgck"&gt;
        nwtgck
      &lt;/a&gt; / &lt;a href="https://github.com/nwtgck/piping-server"&gt;
        piping-server
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Infinitely transfer between every device over pure HTTP: designed for everyone including people using Unix pipe and even for browser users
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Piping Server&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/piping-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dfe37f54fea9cf043f9ffa13bec4d2a50046821feaa2dcf66ad185ebaa6a908/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f706970696e672d7365727665722e737667" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://www.codefactor.io/repository/github/nwtgck/piping-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e000acc03cac3b53a5efc2fc982ef90e7b3dad286ab2b7952e4b43c2200a3a2/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6e777467636b2f706970696e672d7365727665722f6261646765" alt="CodeFactor"&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/nwtgck/piping-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a74b57e066a869f256ff0a42c9b7af537ca09e271b5579cccfaea356c16e82e2/68747470733a2f2f636972636c6563692e636f6d2f67682f6e777467636b2f706970696e672d7365727665722e7376673f7374796c653d736869656c64" alt="CircleCI"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/nwtgck/piping-server" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6dcce173950c8af77ac5b186108e3b3acf8aa474f09e3c5b030a0b4023efec6f/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f673037356f333064357070346d3070613f7376673d74727565" alt="Build status"&gt;&lt;/a&gt;  &lt;a href="https://github.com/nwtgck/piping-server/actions"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2zEszEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/nwtgck/piping-server/workflows/Node%2520CI/badge.svg" alt="GitHub Actions"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/nwtgck/piping-server/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6f76587ffbdf6ca8c7db64aae0f771655558417efcf4985a215eb96ce7649481/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f6175746f6d617465642f6e777467636b2f706970696e672d7365727665722e737667" alt="Docker Automated build"&gt;&lt;/a&gt;
&lt;a href="https://microbadger.com/images/nwtgck/piping-server" title="Get your own image badge on microbadger.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a664c9e32bc9532db77ec94e598c6e2e780dfa56faa91fa44460c901d665d815/68747470733a2f2f696d616765732e6d6963726f6261646765722e636f6d2f6261646765732f696d6167652f6e777467636b2f706970696e672d7365727665722e737667" alt=""&gt;&lt;/a&gt; &lt;a href="https://dependabot.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4930231712c5c7dc261e9f814a1cdbef34826148dbad038f0642fe12bb1c8b93/68747470733a2f2f6170692e646570656e6461626f742e636f6d2f6261646765732f7374617475733f686f73743d676974687562267265706f3d6e777467636b2f706970696e672d736572766572" alt="Dependabot Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Infinitely transfer between every device over HTTP/HTTPS&lt;br&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nwtgck/piping-server/develop/demo_images/piping-server-terminal-hello.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vd90TUBr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/nwtgck/piping-server/develop/demo_images/piping-server-terminal-hello.gif" alt="Piping Server hello" width="600"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Transfer&lt;/h2&gt;
&lt;p&gt;Piping Server is simple. You can transfer as follows.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Send&lt;/span&gt;
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; curl -T - https://ppng.io/hello&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get&lt;/span&gt;
curl https://ppng.io/hello &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; hello.txt&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Piping Server transfers data to &lt;code&gt;POST /hello&lt;/code&gt; or &lt;code&gt;PUT /hello&lt;/code&gt; into &lt;code&gt;GET /hello&lt;/code&gt;. The path &lt;code&gt;/hello&lt;/code&gt; can be anything such as &lt;code&gt;/mypath&lt;/code&gt; or &lt;code&gt;/mypath/123/&lt;/code&gt;. A sender and receivers who specify the same path can transfer. Both the sender and the recipient can start the transfer first. The first one waits for the other.&lt;/p&gt;
&lt;p&gt;You can also use Web UI like &lt;a href="https://ppng.io" rel="nofollow"&gt;https://ppng.io&lt;/a&gt; on your browser. A more modern UI is found in &lt;a href="https://piping-ui.org" rel="nofollow"&gt;https://piping-ui.org&lt;/a&gt;, which supports E2E encryption.&lt;/p&gt;
&lt;h3&gt;
Stream&lt;/h3&gt;
&lt;p&gt;The most important thing is that the data are streamed. This means that you can &lt;strong&gt;transfer any data infinitely&lt;/strong&gt;. The demo below transfers an infinite text stream with &lt;code&gt;seq inf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nwtgck/piping-server/develop/demo_images/seq-inf.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LMMtR0Wf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/nwtgck/piping-server/develop/demo_images/seq-inf.gif" alt="infnite text stream" width="400"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Ideas&lt;/h2&gt;
&lt;p&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nwtgck/piping-server"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; is simple. A sender and recipient who specify the same path such as &lt;code&gt;/hello&lt;/code&gt; can transfer. The image below is the concept of transfer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QJdVm2tA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jc2n5bz3vx76dwqp2g7s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QJdVm2tA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/jc2n5bz3vx76dwqp2g7s.png" width="600" alt="The concept of Piping Server"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The image shows the sender who POSTs &lt;code&gt;/mypath&lt;/code&gt; and the recipient GETs &lt;code&gt;/mypath&lt;/code&gt; can transfer. Both the sender and the recipient can start the transfer first. The first one waits for the other. Both POST and PUT methods are the same in &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can transfer a text by using &lt;code&gt;fetch()&lt;/code&gt; in JavaScript like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Send&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://ppng.io/hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello, world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Get&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://ppng.io/hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// =&amp;gt; "hello, world"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can also use &lt;code&gt;curl&lt;/code&gt; command like below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6P9zYUMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sxo2v4pq5llq21exw0pm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6P9zYUMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sxo2v4pq5llq21exw0pm.gif" width="500" alt="Piping Server text transfer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also transfer binary data such as an image and a video like below. As you can see, the recipient just opened the URL on the browser to get the image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mexMaZUo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/veuc48jx49423odtn719.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mexMaZUo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/veuc48jx49423odtn719.gif" width="500" alt="Piping Server image transfer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTTP is everywhere. So we can transfer data freely without any extra tools.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#infinitely-transfer" class="anchor"&gt;
  &lt;/a&gt;
  Infinitely transfer
&lt;/h3&gt;

&lt;p&gt;The most notable feature of &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; is allowing you to &lt;strong&gt;transfer infinite data&lt;/strong&gt;. The demo below shows inputting  text streams into the web browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0CCo0fsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j44x8zr5hh8hjymph6u3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0CCo0fsq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/j44x8zr5hh8hjymph6u3.gif" width="600" alt="sender: curl, receiver: browser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#send-folder" class="anchor"&gt;
  &lt;/a&gt;
  Send folder
&lt;/h4&gt;

&lt;p&gt;You can transfer a folder (a directory), which has multiple files as follows. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qz7nHx74--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nqcq3aik7lfhbt6qhwpk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qz7nHx74--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nqcq3aik7lfhbt6qhwpk.gif" alt="Piping Server directory sending" width="600"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Send folder&lt;/span&gt;
&lt;span class="nb"&gt;tar &lt;/span&gt;c ./mydir | curl &lt;span class="nt"&gt;-T&lt;/span&gt; - https://ppng.io/mypath
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Get folder&lt;/span&gt;
curl https://ppng.io/mypath | &lt;span class="nb"&gt;tar &lt;/span&gt;xv
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The files are packing while uploading in the sender and unpacking while downloading in the recipient. Stream makes this possible without creating a temporary file.&lt;/p&gt;

&lt;p&gt;It is easy to end-to-end encrypt your data and transfer as follows.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;send: &lt;code&gt;... | openssl aes-256-cbc | curl -T ...&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;get: &lt;code&gt;curl ... | openssl aes-256-cbc -d&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is also easy to reduce the size by compression as follows.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;send: &lt;code&gt;... | gzip | curl -T ...&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;get: &lt;code&gt;curl ... | zcat&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can transform data as you want such as &lt;code&gt;gpg&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt; or tools invented in the future. Combining pipe is efficient in terms of both time and memory. Unix pipe is an amazing way to combine software. The name of Piping Server is derived from Unix pipe.&lt;/p&gt;

&lt;p&gt;The most common use case of &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; is a file transfer. For transferring files, you can use &lt;a href="https://github.com/nwtgck/piping-ui-web"&gt;Piping UI&lt;/a&gt;, which allows you to transfer securely with end-to-end encryption over many devices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transfer-huge-data-for-a-long-time" class="anchor"&gt;
  &lt;/a&gt;
  Transfer huge data for a long time
&lt;/h2&gt;

&lt;p&gt;Here are simple experiments to transfer data over HTTP using &lt;strong&gt;local and remote&lt;/strong&gt; &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The demo video below shows 45TB is transferred for 2,092 hours (87 days) over HTTP via remote &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;, using &lt;code&gt;cat /dev/zero | curl -T- ...&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r8lJy8eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hpijr3jofzs2rg80v6c6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r8lJy8eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hpijr3jofzs2rg80v6c6.gif" width="600" alt="remote Piping Server 45TB, 87 days"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The image below shows transferred 1,110TB (‚âà 1PB) for 64 days over HTTP via local &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pydlBdar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p0wd1ww1upnev2q90qcw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pydlBdar--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p0wd1ww1upnev2q90qcw.png" width="600" alt="local Piping Server 1110TB, 64 days"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These experiments show a huge amount of data can be continuously transferred over a single HTTP request and a single HTTP request lives long enough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#infinite-stream-for-web-browser" class="anchor"&gt;
  &lt;/a&gt;
  Infinite stream for Web browser
&lt;/h2&gt;

&lt;p&gt;Infinite stream sending over HTTP had come to Web browser at last!&lt;/p&gt;

&lt;p&gt;Google Chrome 85 or above has the feature as origin trial. Open &lt;code&gt;chrome://flags&lt;/code&gt; and enable "Experimental Web Platform features" as follows&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Rdn1c2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gxh2jb55z15v10fz5i1b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Rdn1c2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gxh2jb55z15v10fz5i1b.png" alt="Experimental Web Platform features"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Other main browsers such as Firefox and Safari are also interested in this feature.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zan_NKy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mjxvlrbl9ixbi4atk4b9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zan_NKy1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mjxvlrbl9ixbi4atk4b9.png" width="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/whatwg/fetch/pull/425#issuecomment-531680634"&gt;Uploading a Request made from a ReadableStream body by yutakahirano ¬∑ Pull Request #425 ¬∑ whatwg/fetch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a nutshell, this feature allows us to send &lt;code&gt;ReadableStream&lt;/code&gt; as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ReadableStream&lt;/span&gt; &lt;span class="nx"&gt;here&lt;/span&gt;&lt;span class="o"&gt;!&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#simple-text-messaging" class="anchor"&gt;
  &lt;/a&gt;
  Simple text messaging
&lt;/h3&gt;

&lt;p&gt;Here is a simple text messaging on Web browser with &lt;code&gt;fetch()&lt;/code&gt; and &lt;code&gt;ReadableStream&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PICNtOJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bp82n02rzubl7p9ayg9s.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PICNtOJZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bp82n02rzubl7p9ayg9s.gif" width="600" alt="sender: browser, receiver: browser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code below creates &lt;code&gt;ReadableStream&lt;/code&gt; from user input and sends the input stream to &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;. The recipient just opens the URL on the browser and sees streamed text messages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readableStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReadableStream&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;encoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TextEncoder&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myinput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onkeyup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Enter&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;encoder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://ppng.io/mytext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;readableStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/plain;charset=UTF-8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;allowHTTP1ForStreamingUpload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;(full: &lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/text_stream.html"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/text_stream.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;code&gt;allowHTTP1ForStreamingUpload&lt;/code&gt; in the code is a temporary property in Chrome to allow us to use this feature over HTTP/1.1 (see: &lt;a href="https://chromium.googlesource.com/chromium/src/+/4c75c0c9f730589ad8d6c33af919d6b105be1462"&gt;4c75c0c9f730589ad8d6c33af919d6b105be1462 - chromium/src - Git at Google&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screen-sharing" class="anchor"&gt;
  &lt;/a&gt;
  Screen sharing
&lt;/h3&gt;

&lt;p&gt;You can share your screen in almost the same way as the text streaming above. Get &lt;code&gt;MediaStream&lt;/code&gt; and convert to &lt;code&gt;ReadableStream&lt;/code&gt; and send the stream to &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; with &lt;code&gt;fetch()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V80uxTzv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0unx6iydwnvl8ayf5y11.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V80uxTzv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0unx6iydwnvl8ayf5y11.gif" width="600" alt="Piping Server screen sharing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The function &lt;code&gt;mediaStreamToReadableStream()&lt;/code&gt; below converts &lt;code&gt;MediaStream&lt;/code&gt; to &lt;code&gt;ReadableStream&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Get display&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mediaStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDisplayMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// Convert MediaStream to ReadableStream&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readableStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mediaStreamToReadableStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mediaStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://ppng.io/myvideo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;readableStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;allowHTTP1ForStreamingUpload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;

&lt;span class="c1"&gt;// Convert MediaStream to ReadableStream&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mediaStreamToReadableStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mediaStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;timeslice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReadableStream&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;recorder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MediaRecorder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mediaStream&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;recorder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ondataavailable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint8Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;arrayBuffer&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="nx"&gt;recorder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timeslice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;(full: &lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/screen_share.html"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/screen_share.html&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The recipient just opens the HTML below with one &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- viewer --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://ppng.io/myvideo"&lt;/span&gt; &lt;span class="na"&gt;autoplay&lt;/span&gt; &lt;span class="na"&gt;muted&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This way is friendy to command-line tools too. You can also view the screen with &lt;code&gt;curl https://ppng.io/myvideo | ffplay -&lt;/code&gt;. You can also send your screen with &lt;code&gt;ffmpeg&lt;/code&gt; command. See &lt;a href="https://trac.ffmpeg.org/wiki/Capture/Desktop"&gt;Capture/Desktop ‚Äì FFmpeg&lt;/a&gt; for more info.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#voice-and-video-chatting" class="anchor"&gt;
  &lt;/a&gt;
  Voice and video chatting
&lt;/h3&gt;

&lt;p&gt;For voice or video chatting, all you need to do is to replace the code, &lt;code&gt;const mediaStream =&lt;/code&gt; above with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Voice&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mediaStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;echoCancellation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// video + voice&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mediaStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;echoCancellation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;(voice: &lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/simple_phone.html"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/simple_phone.html&lt;/a&gt;)&lt;br&gt;&lt;br&gt;
(video + voice: &lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/video_chat.html"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/video_chat.html&lt;/a&gt;)  &lt;/p&gt;

&lt;p&gt;Then, you can use the &lt;code&gt;mediaStreamToReadableStream()&lt;/code&gt; to converts those &lt;code&gt;MediaStream&lt;/code&gt;s to &lt;code&gt;ReadableStream&lt;/code&gt;s to specify &lt;code&gt;body:&lt;/code&gt; in &lt;code&gt;fetch()&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#video-filtering" class="anchor"&gt;
  &lt;/a&gt;
  Video filtering
&lt;/h3&gt;

&lt;p&gt;You can get &lt;code&gt;MediaStream&lt;/code&gt; from the canvas. The function below creates a video and a canvas in memory and transforms a &lt;code&gt;MediaStream&lt;/code&gt; to another one. &lt;a href="http://joelb.me/jsmanipulate/"&gt;JSManipulate&lt;/a&gt; is used. You may create a filter app like Snap Camera.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Filter for sepia&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sepiaMediaStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mediaStream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;memVideo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;video&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;memVideo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;srcObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mediaStream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;memVideo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;memVideo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;videoWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;memVideo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;videoHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;srcCanvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;canvas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dstCanvas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;canvas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;srcCanvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dstCanvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;srcCanvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dstCanvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;srcCtx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;srcCanvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dstCtx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dstCanvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;srcCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;drawImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;memVideo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;frame&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;srcCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getImageData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;JSManipulate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sepia&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;dstCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;putImageData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;dstCanvas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;captureStream&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;(full: &lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/screen_share_with_filter.html"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/screen_share_with_filter.html&lt;/a&gt;)&lt;br&gt;&lt;br&gt;
(demo video: &lt;a href="https://youtu.be/VcKJR8D8IFA"&gt;https://youtu.be/VcKJR8D8IFA&lt;/a&gt;)  &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#compression" class="anchor"&gt;
  &lt;/a&gt;
  Compression
&lt;/h3&gt;

&lt;p&gt;Compress data with gzip as follows. In Chrome, you can easily compress a stream with &lt;code&gt;readableStream.pipeThrough(new CompressionStream('gzip'))&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---T242CvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/15teu6ebr4ikjzosb3at.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---T242CvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/15teu6ebr4ikjzosb3at.gif" width="600"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;readableStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReadableStream&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;pull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// random bytes&lt;/span&gt;
    &lt;span class="nx"&gt;ctrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;crypto&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRandomValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Uint32Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;pipeThrough&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CompressionStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gzip&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://ppng.io/mytext&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;readableStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;allowHTTP1ForStreamingUpload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;(full: &lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/gzip_inifinite_stream.html"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls/blob/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/gzip_inifinite_stream.html&lt;/a&gt;)&lt;br&gt;
The sample code sends infinite random bytes with compression over &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#endtoend-encryption-for-infinite-stream" class="anchor"&gt;
  &lt;/a&gt;
  End-to-end encryption for infinite stream
&lt;/h3&gt;

&lt;p&gt;You can safely transfer your stream even if a server is untrustable. You can encrypt any &lt;code&gt;ReadableStream&lt;/code&gt; with the code below using &lt;a href="https://github.com/openpgpjs/openpgpjs"&gt;OpenPGP.js&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Encrypt ReadableStream with password by OpenPGP&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;encryptStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;readableStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;openpgp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromBinary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;readableStream&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;passwords&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;armor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;openpgp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;packets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://youtu.be/lxpxeB_0UDk"&gt;https://youtu.be/lxpxeB_0UDk&lt;/a&gt; is a demo video of end-to-end encrypted screen sharing over &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Service Worker is used on the viewer-side. The purpose of using Service Worker is for getting a decrypted video at &lt;code&gt;https://localhost:8080/e2ee_screen_share/swvideo#myvideo&lt;/code&gt;. Service Worker is used as a proxy. See the full code for detail: &lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls/tree/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/e2ee_screen_share"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls/tree/a107dd1fb1bbee9991a9278b10d9eaf88b52c395/e2ee_screen_share&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Web browsers have &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;Web Crypto&lt;/a&gt;, which can generate keys safely and do Diffie-Hellman key exchange an untrustable channel. For example, &lt;a href="https://github.com/nwtgck/piping-ui-web"&gt;Piping UI&lt;/a&gt;, which is a file transfer tool, exchanges public keys and encrypts a file by using ECDH and &lt;a href="https://github.com/openpgpjs/openpgpjs"&gt;OpenPGP.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Access the repository below to get other examples using &lt;code&gt;fetch()&lt;/code&gt; upload streaming feature with &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://github.com/nwtgck/piping-server-streaming-upload-htmls"&gt;https://github.com/nwtgck/piping-server-streaming-upload-htmls&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ssh-over-http" class="anchor"&gt;
  &lt;/a&gt;
  SSH over HTTP
&lt;/h2&gt;

&lt;p&gt;As you see, any data can be streamed over HTTP. So, this means a protocol can be over HTTP via &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-piping-server" class="anchor"&gt;
  &lt;/a&gt;
  Why Piping Server?
&lt;/h3&gt;

&lt;p&gt;There are some environments that can not release ports public. For such kind of environment, when you have the only outward-connection to HTTP/HTTPS ports, you can use SSH. A possible example is for GitHub Actions, which does not support SSH debug like CircleCI (see: &lt;a href="https://github.com/nwtgck/actions-comment-run/tree/0cd21bd0c811a3f27ea219bdb5788cc2dc23d789#ssh-in-github-actions-over-piping-server"&gt;SSH in GitHub Actions over Piping Server&lt;/a&gt;). &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ssh-client-in-javascirpt" class="anchor"&gt;
  &lt;/a&gt;
  SSH client in JavaScirpt
&lt;/h3&gt;

&lt;p&gt;I found a wonderful project, &lt;a href="https://github.com/stuicey/SSHy"&gt;SSHy&lt;/a&gt; whose JavaScript speaks SSH. The data communication is over WebSocket, so I just need to switch WebSocket to HTTP with &lt;code&gt;fetch()&lt;/code&gt;. Unfortunately, although &lt;a href="https://github.com/stuicey/SSHy"&gt;SSHy&lt;/a&gt; is not actively maintained now, this is a perfect fit for my proof of concept to speak SSH over HTTP using &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;. We could port OpenSSH by using &lt;a href="https://emscripten.org/"&gt;Emscripten&lt;/a&gt;, write Rust and compile to Web Assembly, or do something in the future.&lt;/p&gt;

&lt;p&gt;By using &lt;a href="https://github.com/stuicey/SSHy"&gt;SSHy&lt;/a&gt;, it is possible to SSH with only Web browser and &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;. The data streamed to &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; is securely encrypted since the communication is SSH.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-ssh-over-piping-server" class="anchor"&gt;
  &lt;/a&gt;
  How to SSH over Piping Server?
&lt;/h3&gt;

&lt;p&gt;Create two sets of connections over &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; for duplex communication. One of them is for sending data to your peer. The other one is for receiving data from your peer. On HTTP/2, multiple HTTP requests are bundled into one TCP connection.&lt;/p&gt;

&lt;p&gt;The command below is an example to forward 22 port over HTTP via &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;. This way was proposed by &lt;a href="https://github.com/Cryolite"&gt;@Cryolite&lt;/a&gt; in a Japanese great post &lt;a href="https://qiita.com/Cryolite/items/ed8fa237dd8eab54ef2f"&gt;https://qiita.com/Cryolite/items/ed8fa237dd8eab54ef2f&lt;/a&gt;. The data to the 22 port is downloading from &lt;code&gt;/path1&lt;/code&gt; and the data from the 22 port is uploading to &lt;code&gt;/path2&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# server-host&lt;/span&gt;
socat &lt;span class="s1"&gt;'EXEC:curl -NsS https\://ppng.io/path1!!EXEC:curl -NsST - https\://ppng.io/path2'&lt;/span&gt; TCP:127.0.0.1:22
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The way makes possible NAT traversal without releasing port public over HTTP.&lt;/p&gt;

&lt;p&gt;The command below creates the tunnel with the command above. The 22 port is forwarded to 31376 port in your another machine.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# client-host&lt;/span&gt;
socat TCP-LISTEN:31376 &lt;span class="s1"&gt;'EXEC:curl -NsS https\://ppng.io/path2!!EXEC:curl -NsST - https\://ppng.io/path1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can do &lt;code&gt;ssh -p 31376 &amp;lt;user&amp;gt;@localhost&lt;/code&gt; in the machine in another terminal. This is a versatile way to forward a port to another device, not only SSH.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#transport-implementations-of-sshy" class="anchor"&gt;
  &lt;/a&gt;
  Transport implementations of SSHy
&lt;/h3&gt;

&lt;p&gt;The implementation below sends bytes over WebSocket.&lt;br&gt;
&lt;a href="https://github.com/stuicey/SSHy/blob/82941c8ae15359fd387109dcee3a218808df0bb0/index.html#L259-L264"&gt;https://github.com/stuicey/SSHy/blob/82941c8ae15359fd387109dcee3a218808df0bb0/index.html#L259-L264&lt;/a&gt;&lt;br&gt;
&lt;code&gt;ws&lt;/code&gt;, WebSocket instance has a user-defined method, &lt;code&gt;sendB64()&lt;/code&gt; and send Base64-encoded string. A proxy server called &lt;a href="https://github.com/stuicey/wsproxy"&gt;stuicey/wsproxy&lt;/a&gt; is used, which is for proxying WebSocket to TCP (in this case SSH).&lt;/p&gt;

&lt;p&gt;The implementation below receives bytes over WebSocket.&lt;br&gt;
&lt;a href="https://github.com/stuicey/SSHy/blob/82941c8ae15359fd387109dcee3a218808df0bb0/index.html#L233-L236"&gt;https://github.com/stuicey/SSHy/blob/82941c8ae15359fd387109dcee3a218808df0bb0/index.html#L233-L236&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#ssh-over-piping-server" class="anchor"&gt;
  &lt;/a&gt;
  SSH over Piping Server
&lt;/h4&gt;

&lt;p&gt;These sending and receiving parts are replaced &lt;code&gt;fetch()&lt;/code&gt; and a way of using &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;. The code below is the replaced implementation.&lt;br&gt;
&lt;a href="https://github.com/nwtgck/piping-ssh-web/blob/287e89ef05173e69d1302b29acf2abbe858ee78b/index.html#L187-L219"&gt;https://github.com/nwtgck/piping-ssh-web/blob/287e89ef05173e69d1302b29acf2abbe858ee78b/index.html#L187-L219&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The application is called Piping SSH. Here is a demo video.  In it, logging in Ubuntu machine from the web browser and type &lt;code&gt;ls&lt;/code&gt; and &lt;code&gt;htop&lt;/code&gt; command.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q1ZwW5vp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ybf1uh546zgbb9dpefo8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q1ZwW5vp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ybf1uh546zgbb9dpefo8.gif" width="600" alt="SSH over Piping Server"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application: &lt;a href="https://piping-ssh.netlify.app"&gt;https://piping-ssh.netlify.app&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/nwtgck/piping-ssh-web"&gt;https://github.com/nwtgck/piping-ssh-web&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#tips-keepalive-of-ssh" class="anchor"&gt;
  &lt;/a&gt;
  TIPS: Keep-alive of SSH
&lt;/h3&gt;

&lt;p&gt;In Chrome, an HTTP request is stopped when no bytes arrived for 60 seconds. To resolve the issue, you can set &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; as follows in your SSH server setting.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# /etc/ssh/sshd_config
# ...
ClientAliveInterval 20
ClientAliveCountMax 3
# ...
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#vnc-over-http" class="anchor"&gt;
  &lt;/a&gt;
  VNC over HTTP
&lt;/h2&gt;

&lt;p&gt;VNC (Virtual Network Computing) is widely used for controlling the computer remotely.&lt;/p&gt;

&lt;p&gt;Here is the demo video. The front window is a Chrome, Web browser and the back one is a controlled machine on Ubuntu on VirtualBox.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9cTHGY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gm08i1qrqkfuzy9p22kx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9cTHGY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gm08i1qrqkfuzy9p22kx.gif" width="600" alt="VNC over Piping Server"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Application: &lt;a href="https://piping-vnc.netlify.app"&gt;https://piping-vnc.netlify.app&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href="https://github.com/nwtgck/piping-vnc-web"&gt;https://github.com/nwtgck/piping-vnc-web&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For Ubuntu 20.04 users, to enable VNC, you can turn on Settings &amp;gt; Sharing and run &lt;code&gt;gsettings set org.gnome.Vino require-encryption false&lt;/code&gt; to avoid an error, "Failed when connecting: Unsupported security types (types: 18)".&lt;/p&gt;

&lt;p&gt;VNC is also available for Windows. Here is a demo controlling Windows 10 from Chrome. It was more smooth on a real Windows machine since the windows machine in the demo below was running on VirtualBox. &lt;a href="https://www.uvnc.com"&gt;UltraVNC&lt;/a&gt; is running on the Windows machine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SRqrFhSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xc72hqv25a083sftd1bw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRqrFhSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xc72hqv25a083sftd1bw.gif" alt="Piping VNC controlling Windows 10"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The fetch-uploading feature is also available on Android Chrome. The demo below controls Windows 10 by an Android smartphone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lCP94KtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ummq5s2lsf37csq225q8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lCP94KtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ummq5s2lsf37csq225q8.gif" alt="Piping VNC controlled by Android"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For windows users, you can a download tunneling tool over Piping Server here: &lt;a href="https://github.com/nwtgck/go-piping-tunnel"&gt;https://github.com/nwtgck/go-piping-tunnel&lt;/a&gt;. It is convenient to create a simple .bat file as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;.\piping&lt;span class="na"&gt;-tunnel &lt;/span&gt;&lt;span class="kd"&gt;server&lt;/span&gt; &lt;span class="na"&gt;-p &lt;/span&gt;&lt;span class="m"&gt;5900&lt;/span&gt; &lt;span class="kd"&gt;path1&lt;/span&gt; &lt;span class="kd"&gt;path2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;piping-tunnel&lt;/code&gt; has the same feature of the &lt;code&gt;socat&lt;/code&gt; + &lt;code&gt;curl&lt;/code&gt; command. For mac users, you can install by &lt;code&gt;brew install nwtgck/piping-tunnel/piping-tunnel&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-it-works" class="anchor"&gt;
  &lt;/a&gt;
  How it works
&lt;/h3&gt;

&lt;p&gt;The application is fully based on &lt;a href="https://github.com/novnc/noVNC"&gt;noVNC&lt;/a&gt;, which is a VNC client written in JavaScript. Only transport implementations are replaced with the way of using fetch and &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; instead of WebSocket.&lt;/p&gt;

&lt;p&gt;Here is the diff for replacing WebSocket transportation with fetch and &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://github.com/nwtgck/piping-vnc-web/commit/1e1f2863160bfab8c9fbfc4c6970cd2b31135bfd"&gt;https://github.com/nwtgck/piping-vnc-web/commit/1e1f2863160bfab8c9fbfc4c6970cd2b31135bfd&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#fetch-upload-streaming" class="anchor"&gt;
  &lt;/a&gt;
  fetch() upload streaming
&lt;/h2&gt;

&lt;p&gt;I have been following this feature. Here are useful links to get information about the fetch() upload streaming feature.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;whatwg: &lt;a href="https://fetch.spec.whatwg.org/#concept-body-stream"&gt;Fetch Standard&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;whatwg issue: &lt;a href="https://github.com/whatwg/fetch/pull/425"&gt;Uploading a Request made from a ReadableStream body by yutakahirano ¬∑ Pull Request #425 ¬∑ whatwg/fetch&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chromium commits: &lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=688906"&gt;688906 - Streaming upload support - chromium&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chromestatus.com/feature/5274139738767360"&gt;fetch() upload streaming - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;web.dev: &lt;a href="https://web.dev/fetch-upload-streaming/"&gt;Streaming requests with the fetch API&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Firefox: &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1387483"&gt;1387483 - [Meta-Bug] Support ReadableStream as Request.body in fetch API&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Firefox: &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1469359"&gt;1469359 - Support ReadableStream as Request.body in fetch API in necko&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Safari: &lt;a href="https://bugs.webkit.org/show_bug.cgi?id=203617"&gt;203617 ‚Äì "ReadableStream uploading is not supported" when fetch()ing a Request that has been logged to console&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#public-piping-server" class="anchor"&gt;
  &lt;/a&gt;
  Public Piping Server
&lt;/h2&gt;

&lt;p&gt;Here are public Piping Servers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://ppng.io"&gt;https://ppng.io&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;alias: &lt;a href="https://ppng.ml"&gt;https://ppng.ml&lt;/a&gt;, &lt;a href="https://piping.ml"&gt;https://piping.ml&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;These aliases can be different servers in the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://piping.glitch.me"&gt;https://piping.glitch.me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://piping-47q675ro2guv.runkit.sh"&gt;https://piping-47q675ro2guv.runkit.sh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ppng.herokuapp.com"&gt;https://ppng.herokuapp.com&lt;/a&gt; (NOTE: Heroku does not support streaming)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#selfhosted-piping-server" class="anchor"&gt;
  &lt;/a&gt;
  Self-hosted Piping Server
&lt;/h2&gt;

&lt;p&gt;Run &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; on &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; as follows using Docker.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-p&lt;/span&gt; 8080:8080 nwtgck/piping-server
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Single binaries are also available on &lt;a href="https://github.com/nwtgck/piping-server-pkg"&gt;https://github.com/nwtgck/piping-server-pkg&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are easier ways to get public your Piping Server is to use Glitch and Runkit.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remix from &lt;a href="https://glitch.com/%7Epiping"&gt;https://glitch.com/~piping&lt;/a&gt; and serve it&lt;/li&gt;
&lt;li&gt;clone from &lt;a href="https://runkit.com/nwtgck/piping/"&gt;https://runkit.com/nwtgck/piping/&lt;/a&gt; and serve it&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#piping-server-with-jwt-authentication" class="anchor"&gt;
  &lt;/a&gt;
  Piping Server with JWT authentication
&lt;/h3&gt;

&lt;p&gt;To restrict users to use &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;, you can use &lt;a href="https://github.com/nwtgck/jwt-piping-server"&gt;https://github.com/nwtgck/jwt-piping-server&lt;/a&gt; with an example using &lt;a href="https://auth0.com"&gt;Auth0&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#piping-server-in-rust" class="anchor"&gt;
  &lt;/a&gt;
  Piping Server in Rust
&lt;/h2&gt;

&lt;p&gt;Piping Server is also written in Rust. This is the fastest &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; now.&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/nwtgck/piping-server-rust"&gt;https://github.com/nwtgck/piping-server-rust&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#base-posts" class="anchor"&gt;
  &lt;/a&gt;
  Base posts
&lt;/h2&gt;

&lt;p&gt;Here are my posts based on this post.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/nwtgck/data-streaming-with-every-device-over-httphttps-mo4"&gt;Data Streaming between Every Device over HTTP/HTTPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(Japanese): &lt;a href="https://scrapbox.io/nwtgck/Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E4%B8%8A%E3%81%A7%E7%B4%94%E7%B2%8B%E3%81%AAHTTP%E3%81%A0%E3%81%91%E3%81%A7%E5%8D%98%E6%96%B9%E5%90%91%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0%E9%80%9A%E4%BF%A1%E3%82%92%E5%8F%AF%E8%83%BD%E3%81%AB%E3%81%99%E3%82%8BHTTP%E3%81%AE%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%8C%E9%81%82%E3%81%AB%E3%82%84%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8B"&gt;https://scrapbox.io/nwtgck/Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E4%B8%8A%E3%81%A7%E7%B4%94%E7%B2%8B%E3%81%AAHTTP%E3%81%A0%E3%81%91%E3%81%A7%E5%8D%98%E6%96%B9%E5%90%91%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0%E9%80%9A%E4%BF%A1%E3%82%92%E5%8F%AF%E8%83%BD%E3%81%AB%E3%81%99%E3%82%8BHTTP%E3%81%AE%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89%E3%81%8C%E9%81%82%E3%81%AB%E3%82%84%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8B&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;(Japanese): &lt;a href="https://scrapbox.io/nwtgck/SSH%E6%8E%A5%E7%B6%9A%E3%82%92Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AE%E7%B4%94%E7%B2%8B%E3%81%AAHTTP%E4%B8%8A%E3%81%A7%E5%AE%9F%E7%8F%BE%E3%81%99%E3%82%8B"&gt;https://scrapbox.io/nwtgck/SSH%E6%8E%A5%E7%B6%9A%E3%82%92Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AE%E7%B4%94%E7%B2%8B%E3%81%AAHTTP%E4%B8%8A%E3%81%A7%E5%AE%9F%E7%8F%BE%E3%81%99%E3%82%8B&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;(Japanese): &lt;a href="https://scrapbox.io/nwtgck/%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88PC%E6%93%8D%E4%BD%9C%E3%82%92Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AE%E7%B4%94%E7%B2%8B%E3%81%AAHTTP%E4%B8%8A%E3%81%A7%E5%AE%9F%E7%8F%BE%E3%81%99%E3%82%8B%EF%BC%88VNC%EF%BC%89"&gt;https://scrapbox.io/nwtgck/%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88PC%E6%93%8D%E4%BD%9C%E3%82%92Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AE%E7%B4%94%E7%B2%8B%E3%81%AAHTTP%E4%B8%8A%E3%81%A7%E5%AE%9F%E7%8F%BE%E3%81%99%E3%82%8B%EF%BC%88VNC%EF%BC%89&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#more" class="anchor"&gt;
  &lt;/a&gt;
  More
&lt;/h2&gt;

&lt;p&gt;The link below is the repository of &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt;.&lt;br&gt;
GitHub: &lt;a href="https://github.com/nwtgck/piping-server"&gt;https://github.com/nwtgck/piping-server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Get more information from the link below about &lt;a href="https://github.com/nwtgck/piping-server"&gt;Piping Server&lt;/a&gt; such as end-to-end encrypted file transfer, with basic auth, real-time drawing and so on.&lt;br&gt;
&lt;a href="https://github.com/nwtgck/piping-server/wiki/Ecosystem-around-Piping-Server"&gt;https://github.com/nwtgck/piping-server/wiki/Ecosystem-around-Piping-Server&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>linux</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Why is VSCode trying to run Java when I want to look at the source code of a `.class` file?</title>
      <author>Calin Baenen</author>
      <pubDate>Thu, 17 Dec 2020 15:16:12 +0000</pubDate>
      <link>https://dev.to/baenencalin/why-is-vscode-trying-to-run-java-when-i-want-to-look-at-the-source-code-of-a-class-file-496b</link>
      <guid>https://dev.to/baenencalin/why-is-vscode-trying-to-run-java-when-i-want-to-look-at-the-source-code-of-a-class-file-496b</guid>
      <description>&lt;p&gt;I want to look at some code in a &lt;code&gt;.class&lt;/code&gt; file in VSCode (which usually works when I do &lt;code&gt;ctrl+lclick&lt;/code&gt; on the class I want to view), but instead it brings up the terminal/console as if it's trying to execute the code for no reason.&lt;br&gt;
It randomly does this, so some times it will show a class I want to see, but other times it won't show any thing, and try and run it (sometimes this bug(?) happens on the same class that it let me view earlier (I even tested with classes from &lt;code&gt;java.lang&lt;/code&gt;, and only classes from &lt;code&gt;java.lang&lt;/code&gt;)).&lt;/p&gt;

&lt;p&gt;Any reason(s) why this may happen?&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#thankscheers" class="anchor"&gt;
  &lt;/a&gt;
  &lt;b&gt;&lt;/b&gt;&lt;center&gt;&lt;b&gt;Thanks!&lt;br&gt;Cheers!&lt;/b&gt;&lt;/center&gt;
&lt;/h2&gt;

</description>
      <category>java</category>
      <category>help</category>
      <category>vscode</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>The Bootstrap Jamstack: How Indie Players Compete</title>
      <author>Francois Lanthier Nadeau</author>
      <pubDate>Thu, 17 Dec 2020 15:06:14 +0000</pubDate>
      <link>https://dev.to/the_fln/the-bootstrap-jamstack-how-indie-players-compete-adb</link>
      <guid>https://dev.to/the_fln/the-bootstrap-jamstack-how-indie-players-compete-adb</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="#video"&gt;Jump to video version of this post&lt;/a&gt;. üé•&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2VU8A85A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205586/the-bootstrap-jamstack.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2VU8A85A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205586/the-bootstrap-jamstack.png" alt="The Bootstrap Jamstack"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hey, &lt;a href="https://twitter.com/the_fln"&gt;I‚Äôm Franck&lt;/a&gt;. üëã&lt;/p&gt;

&lt;p&gt;I run a developer-first e-commerce solution, and I try my best to grow a healthy bootstrapped company. It‚Äôs called Snipcart, and we‚Äôre based in beautiful Qu√©bec.&lt;/p&gt;

&lt;p&gt;Our product is part of the Jamstack ecosystem. If you don‚Äôt know what that is, no worries. There‚Äôs a cool intro &lt;a href="https://snipcart.com/blog/jamstack"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a nutshell, ‚ÄúJamstack‚Äù is a modern, frontend-centric way to develop sites and apps. It focuses on decoupling backend from frontend, lowering maintenance and hosting costs, pushing static assets through CDNs, edge computing, and using JavaScript and APIs for everything dynamic. Big players include Netlify, Vercel, Contentful, and many others.&lt;/p&gt;

&lt;p&gt;Some indie companies I look up to in the space are DatoCMS, Fathom analytics and Statamic.&lt;/p&gt;

&lt;p&gt;I‚Äôm seeing lots of VC-funded businesses shining, but I‚Äôd love to see more bootstrappers alongside us.&lt;/p&gt;

&lt;p&gt;In this piece, I‚Äôll show how independent players can build, compete, and grow in the Jamstack ecosystem. I‚Äôll include real-life examples from the Snipcart team and other cool products.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#industry-funding-overview" class="anchor"&gt;
  &lt;/a&gt;
  Industry funding overview
&lt;/h2&gt;

&lt;p&gt;When building businesses, there are often two commons paths for your success model:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Bootstrapped companies&lt;/strong&gt; focus on lifestyle and profitability.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;VC-backed companies&lt;/strong&gt; focus on growth and valuation.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Things aren‚Äôt so black and white anymore. Alternative funding solutions like &lt;a href="https://tinyseed.com/"&gt;TinySeed&lt;/a&gt;, &lt;a href="https://www.indie.vc/"&gt;Indie.vc&lt;/a&gt;, and &lt;a href="https://earnestcapital.com/"&gt;Earnest Capital&lt;/a&gt; are making noise. Their nuanced approach deserves a post in itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let‚Äôs take two categories: e-commerce and headless CMS. I had wondered what the ratio of bootstrapped vs. funded was for these. So I took a look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o6YMm0Oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205578/jamstack-e-commerce-solutions-funded.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o6YMm0Oa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205578/jamstack-e-commerce-solutions-funded.png" alt="E-commerce solutions - funded"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Funding abounds in this Jamstack category. Snipcart is one of the only e-commerce players that made it past five years without funding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SQBgvw1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205576/headless-cms-funded.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQBgvw1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205576/headless-cms-funded.png" alt="Headless CMS - funded"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, the ratio appears more balanced. Why? I think e-commerce, as a product category, involves more inherent complexity.&lt;/p&gt;

&lt;p&gt;Headless CMS must handle APIs, data storage and retrieval, plugins, permissions, integrations, previews, etc. That‚Äôs a lot.&lt;/p&gt;

&lt;p&gt;But e-commerce solutions must handle most of the above &lt;strong&gt;plus&lt;/strong&gt; tax management, shipping and fulfillment, emails, payment processing, refunds, security, discounts, multi-currencies, etc.&lt;/p&gt;

&lt;p&gt;E-commerce is also &lt;strong&gt;closer to the money&lt;/strong&gt;. The complexity it addresses touches more critical parts of a user‚Äôs life than a CMS: security, identity, revenue, etc.&lt;/p&gt;

&lt;p&gt;Trying to solve for e-commerce might be harder, pushing teams to untie some knots through funding. What do you think?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I quickly put together &lt;a href="https://docs.google.com/spreadsheets/d/19wDME7dDzfcj2DmUeUcIZKFml6gCW_zIxEgP_VzEgdM/edit?usp=sharing"&gt;this Google Sheet&lt;/a&gt;. If you want me to update it, drop a comment, or send me an email. I might spin this into a cuter microsite‚Äînot sure yet!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#a-word-on-venture-capital" class="anchor"&gt;
  &lt;/a&gt;
  A word on venture capital
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wI1kZJY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205587/venture-capital-yifan-wu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wI1kZJY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205587/venture-capital-yifan-wu.jpg" alt="Venture Capital - Yifan Wu"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most of us have seen the loud &lt;a href="https://www.vox.com/2019/1/23/18193685/venture-capital-money-kills-business-basecamp-ceo-jason-fried"&gt;Basecamp/37signals vs. VCs battle&lt;/a&gt; unfold over the past decade. It has, for better or worse, painted a very adversarial picture of the startup ecosystem.&lt;/p&gt;

&lt;p&gt;The boring reality is that venture capitalists aren‚Äôt as evil as some factions of the bootstrapped community claim. They are agents inside a flawed system with weird incentives and dynamics.&lt;/p&gt;

&lt;p&gt;Some companies require wide, horizontal adoption across multiple markets‚Äîthink infrastructure. The more you‚Äôre in that position, the more likely you‚Äôll need VC money to succeed. Netlify couldn‚Äôt have worked out the way it did without that kind of funding.&lt;/p&gt;

&lt;p&gt;The vital distinction peers helped me realize is that the notion of ‚Äúwinning‚Äù differs drastically on the VC and bootstrap path. An entrepreneur‚Äôs values and ambition will dictate which kind of success they want to achieve. And that‚Äôs fine. Here, I‚Äôll just be spreading the gospel that resonates best with me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-bring-jamstack-amp-bootstrapping-together" class="anchor"&gt;
  &lt;/a&gt;
  Why bring Jamstack &amp;amp; bootstrapping together?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OQW2xDuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205585/the-bootstrap-jamstack-shared-ethos.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OQW2xDuD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205585/the-bootstrap-jamstack-shared-ethos.png" alt="The Bootstrap Jamstack - shared ethos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see indie communities in SaaS popping up all the time: Startups for the rest of us, Indie Hackers, etc. There's a reason for that: some people don't want to build companies inside the VC model's incentive and pressure structure.&lt;/p&gt;

&lt;p&gt;Raising money is a rollercoaster of emotions and intensity. It ultimately offers two paths of success: get acquired or go public. Before that, "success" is exiting a round for investors. You have people putting in money just to leave the company as soon as they can. When you put it like that, it does feel odd, right?&lt;/p&gt;

&lt;p&gt;The Jamstack ethos is filled with values we also see in the bootstrapped community:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Independence üíÉ&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Jamstack: freedom from monoliths, giants, incumbents, tools with poor DX.&lt;/li&gt;
&lt;li&gt;In bootstrap: freedom from corporate lifestyle, 9-5, boredom, location.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Keeping things small üå±&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Jamstack: no need for big architectures, hefty installs, heavy downloads.&lt;/li&gt;
&lt;li&gt;In bootstrap: no need for hundreds of millions in revenue, hundreds of employees, tens of thousands of customers. No need for excessive spending on vanity marketing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Price consciousness üí∏&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Jamstack: no need to pay for a bunch of plugins, extravagant hosting, and maintenance. You can also rely on many free open source tools.&lt;/li&gt;
&lt;li&gt;In bootstrap: you gotta eat! Budget is limited, so spending wisely is extra essential.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Performance sensibility üèé&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In Jamstack: focus on critical &lt;a href="https://web.dev/performance-scoring/"&gt;user-centric metrics&lt;/a&gt; (FCP, TTI, etc.).&lt;/li&gt;
&lt;li&gt;In bootstrap: focus on critical business-centric metrics (profitability, churn, LTV) and human-centric metrics (happiness, sleep, financial comfort, free time, etc.).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-can-independent-jamstack-players-compete" class="anchor"&gt;
  &lt;/a&gt;
  How can independent Jamstack players compete?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Cool cool, but I can‚Äôt compete with the Netlify, Contentful, Shopify in the space. They raised many millions! Hundreds of people work for them!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, you can. Others have done it. &lt;a href="https://www.indiehackers.com/product/snipcart"&gt;We have done it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The trick is in how you go about it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#taming-longtails" class="anchor"&gt;
  &lt;/a&gt;
  Taming long-tails
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QjnMLDG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205584/taming-long-tails.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QjnMLDG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205584/taming-long-tails.png" alt="Taming long-tails"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you‚Äôre bootstrapped, your &lt;strong&gt;economic incentives&lt;/strong&gt; are drastically different from VC-funded businesses. They need market shares, steep growth, PR attention, multiple acquisition channels. You only need a small community, one sustainable acquisition channel, and enough customers to breakeven.&lt;/p&gt;

&lt;p&gt;Big players will often go after broad problems: Shopify wants to empower the whole world to sell online. Snipcart only wants to help a few hundred devs build better e-commerce stores.&lt;/p&gt;

&lt;p&gt;You see, the pains you solve with your product can be much more specific than bigger companies.&lt;/p&gt;

&lt;p&gt;I've got a parallel for you. If you're familiar with SEO (Search Engine Optimization), the term "long-tails" will ring a bell. When trying to drive organic traffic to their site, people often target very high volume keywords right away. Think "headless CMS". But the competition is &lt;strong&gt;super strong&lt;/strong&gt; for such &lt;em&gt;head&lt;/em&gt; terms. Big sites with high authority are battling on these SERPs (Search Engine Results Page).&lt;/p&gt;

&lt;p&gt;On the other hand, countless keywords are embodying narrower search intents out there. They have lower search volumes, true. But they are much easier to rank for, PLUS they come with more precise needs to solve‚Äî"how to read JSON files inside my Svelte app".&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leveraging-radical-transparency" class="anchor"&gt;
  &lt;/a&gt;
  Leveraging radical transparency
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey82A-9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205581/radical-transparency.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ey82A-9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205581/radical-transparency.png" alt="Radical transparency"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bootstrappers can‚Äôt hide behind corporate structures and policies. &lt;em&gt;They&lt;/em&gt; are the business.&lt;/p&gt;

&lt;p&gt;It may feel scary at first, but you can turn this into an advantage using transparency and humility. People like to do business with &lt;em&gt;people&lt;/em&gt;! That fact hasn‚Äôt changed in centuries.&lt;/p&gt;

&lt;p&gt;So embrace your smallness and personality inside your brand. Tell us your life story on your about page. Share the struggles of building your business publicly. Be warm and kind when dealing with customers. Tell jokes. Sometimes, &lt;a href="http://www.pivotmethod.com/podcast/unmistakable"&gt;being the only&lt;/a&gt; is better than being the best.&lt;/p&gt;

&lt;p&gt;All of that will foster proximity with your customers, which in turn will increase loyalty and word-of-mouth.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#building-an-audience-first" class="anchor"&gt;
  &lt;/a&gt;
  Building an audience first
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p4SHHwWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205572/audience-first.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p4SHHwWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205572/audience-first.png" alt="Audience first"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre intent on creating a business to solve a problem, chances are you know a thing or two about said problem. You can share that knowledge and experience before you even start building.&lt;/p&gt;

&lt;p&gt;Adam Wathan and Steve Schoger have done similar things throughout different projects. They shared &lt;a href="https://twitter.com/i/events/994601867987619840"&gt;design tips on Twitter&lt;/a&gt; years before publishing paid projects like &lt;a href="https://refactoringui.com/book/"&gt;Refactoring UI&lt;/a&gt; or &lt;a href="https://tailwindui.com/"&gt;Tailwind UI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Or take developer &lt;a href="https://twitter.com/swyx"&gt;Shawn Wang&lt;/a&gt;, who has been learning in public and sharing lessons for many months before launching his &lt;a href="https://www.learninpublic.org/"&gt;Coding Career Handbook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many bootstrappers also share their early journey through podcasts, like &lt;a href="https://saas.transistor.fm/"&gt;Jon and Justin with Transistor&lt;/a&gt;, or &lt;a href="https://artofproductpodcast.com/"&gt;Ben and Derrick with Tuple and SavvyCal&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cushioning-initial-risks-by-launching-inside-an-agency" class="anchor"&gt;
  &lt;/a&gt;
  Cushioning initial risks by launching inside an agency
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0CCEIHhN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205571/agency-launch.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0CCEIHhN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205571/agency-launch.png" alt="Agency launch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre already working inside a web dev/design agency, there are cool opportunities to consider.&lt;/p&gt;

&lt;p&gt;One I like: leveraging a client case to build‚Äîand pay for‚Äîyour MVP. That's how we got started with Snipcart. We were upfront with the client about it: we'd make them a custom solution to circumvent their e-commerce challenges but would also re-use some of that code to build something ourselves. We gave them a discount and free usage + priority support for life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.takeshape.io/"&gt;TakeShape&lt;/a&gt;, the headless CMS, followed a similar path early on.&lt;/p&gt;

&lt;p&gt;Doing initial product work inside the agency also lets you move faster, without administrative red tape. Once traction kicks in and &lt;a href="https://en.wikipedia.org/wiki/Product/market_fit"&gt;product-market fit&lt;/a&gt; is on the horizon, you can slowly branch out. Your ‚Äúside product‚Äù can then become its own company.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#picking-a-fight-if-youre-a-fighter" class="anchor"&gt;
  &lt;/a&gt;
  Picking a fight (if you‚Äôre a fighter)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NxjGVcvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205580/pick-a-fight.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NxjGVcvM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205580/pick-a-fight.png" alt="Pick a fight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ugh, &lt;em&gt;fights&lt;/em&gt;. Feels like they‚Äôre all over the Internet these days. We‚Äôve sure had our fair share of it with the recent &lt;a href="https://thenewstack.io/jamstack-vs-wordpress-which-is-the-future-of-web-architecture/"&gt;WordPress vs. Jamstack&lt;/a&gt; one, hehe.&lt;/p&gt;

&lt;p&gt;Still, if you feel like you‚Äôve got that kind of energy, it‚Äôs a good way to help grow a bootstrapped business.&lt;/p&gt;

&lt;p&gt;First step is often choosing a nemesis: legacy solutions, category giants, specific competitors, or industry trends. You pick your Goliath, put on your David shoes, and start slingin‚Äô!&lt;/p&gt;

&lt;p&gt;The recent &lt;a href="https://www.theverge.com/interface/2020/6/24/21300452/basecamp-apple-feud-hey-email-app-store-policies-appeals"&gt;Basecamp/Hey vs. Apple&lt;/a&gt; fight is a good example here.&lt;/p&gt;

&lt;p&gt;Folks at &lt;a href="https://usefathom.com/"&gt;Fathom analytics&lt;/a&gt; have also done a great job at fighting for a cause: privacy. It appeals to potential customers‚Äô strong values, enabling the creation of more solid bonds between business and audience.&lt;/p&gt;

&lt;p&gt;When you target the bigger guy, you can use their clout and traction (and their known pains) to fuel your growth:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;X is great but s*cks at THIS. We do THIS much better‚Äîtry us!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#opensourcing-first" class="anchor"&gt;
  &lt;/a&gt;
  Open-sourcing first
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rhc-2e26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205579/open-source.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rhc-2e26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205579/open-source.png" alt="Open source first"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs another popular one in the Jamstack space.&lt;/p&gt;

&lt;p&gt;You‚Äôll see many CMS offering a free, open-source version of their software. They build community and traction around this, then offer a paid, hosted version, for instance. &lt;a href="https://ghost.org/pricing/"&gt;Ghost&lt;/a&gt; has done that.&lt;/p&gt;

&lt;p&gt;Other things you can sell around your free offering: support, integrations, plugins, related products.&lt;/p&gt;

&lt;p&gt;You can also invite the community to support you with &lt;a href="https://github.com/sponsors"&gt;sponsorships&lt;/a&gt; and donations. It can, for sure, absorb some of the early expenses you'll face when building your bootstrapped product!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#going-first" class="anchor"&gt;
  &lt;/a&gt;
  Going first
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nfdJ9wWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205575/go-first.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nfdJ9wWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205575/go-first.png" alt="Going first"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Many tools and frameworks aren‚Äôt ‚ÄúJamstack-ready‚Äù yet.&lt;/p&gt;

&lt;p&gt;There's an opportunity to go first here. You can build Jamstack-specific products (plugins, APIs, integrations, frameworks, etc.) around or on top of existing tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://gridsome.org/"&gt;Gridsome&lt;/a&gt; lets you create better Jamstack sites with Vue.js&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.junglejs.org/"&gt;JungleJS&lt;/a&gt; helps you build static sites with Svelte&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.udesly.com/webflow-to-jamstack/"&gt;Udesly&lt;/a&gt; lets you convert your Webflow site to Jamstack&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.strattic.com/"&gt;Strattic&lt;/a&gt; enables static generation of WordPress sites&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#betting-on-integrations" class="anchor"&gt;
  &lt;/a&gt;
  Betting on integrations
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4MyFjBxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205577/integrations.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4MyFjBxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205577/integrations.png" alt="Integrations"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I‚Äôve been diving into the &lt;a href="https://www.intercom.com/resources/books/intercom-jobs-to-be-done"&gt;Jobs-to-be-done framework&lt;/a&gt; recently. A useful concept that stuck with me is knowing where your product ends and another one begins.&lt;/p&gt;

&lt;p&gt;That mental model is useful when bootstrapping. Ask yourself: what platform do people love &lt;em&gt;except for X,&lt;/em&gt; or &lt;em&gt;but they don‚Äôt do Y&lt;/em&gt;. These are opportunities for you to broadcast to an existing user base that your product can start there.&lt;/p&gt;

&lt;p&gt;On the flip side, you can also ask yourself: what tools do X better than my product? If you find compelling answers to this question, you might want to start integrating more tightly with these! Integrations let you profit from overlaps in audiences, plus they augment your feature set.&lt;/p&gt;

&lt;p&gt;In many cases, they also let you offload customer acquisition to existing marketplaces (think themes or plugin repos).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#meet-successful-independent-jamstack-players" class="anchor"&gt;
  &lt;/a&gt;
  Meet successful independent Jamstack players
&lt;/h2&gt;

&lt;p&gt;I hope that profiling these awesome companies will inspire many others. Something these businesses all share:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They‚Äôre all players in the Jamstack space (and others)&lt;/li&gt;
&lt;li&gt;They‚Äôre all profitable&lt;/li&gt;
&lt;li&gt;They‚Äôre all bootstrapped&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let‚Äôs see which ways they chose to compete.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datocms" class="anchor"&gt;
  &lt;/a&gt;
  DatoCMS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ubPqSCeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205573/datocms.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ubPqSCeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205573/datocms.png" alt="DatoCMS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool facts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;5 people team‚Äîcomparable products hire 100+ people.&lt;/li&gt;
&lt;li&gt; over 1M ARR&lt;/li&gt;
&lt;li&gt; over 1500 paid customers worldwide&lt;/li&gt;
&lt;li&gt;Vercel chose DatoCMS to manage content for Next.js conf.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Competing using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Radical transparency&lt;/strong&gt;: product journey &lt;a href="https://www.datocms.com/blog/summer-retrospective-and-plans-for-fall-2020"&gt;retrospectives&lt;/a&gt; and &lt;a href="https://www.datocms.com/company/about"&gt;proximity&lt;/a&gt; w/ agency clients.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Agency launch&lt;/strong&gt;: &lt;a href="https://www.leanpanda.com/"&gt;LeanPanda&lt;/a&gt; in Italy birthed what became DatoCMS.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Betting on integrations&lt;/strong&gt;: impressive &lt;a href="https://www.datocms.com/marketplace"&gt;marketplace&lt;/a&gt; of integrations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While researching this post, I spoke with founder &lt;a href="https://twitter.com/steffoz"&gt;Stefano Verna&lt;/a&gt;. Interesting tidbits from our conversation:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For us, going bootstrap means being able to give your own definition of success, enjoy the journey, guarantee your customers a long life for your product and focus on a minimal and self-sustaining lifestyle and business.&lt;/p&gt;

&lt;p&gt;Today DatoCMS is made up of 5 people. We are a perfectly oiled machine that produces an absurd amount of value. It is literally impossible for us to believe that products that are absolutely comparable to ours have teams of +100 people. All I can think of is "there must be some inefficiency somewhere" :)&lt;/p&gt;

&lt;p&gt;[‚Ä¶] for those who have a technical team like us, I would suggest working hard on third-party integrations, so that you can lean on the shoulders of the giants and let them do marketing and customer acquisition for you.&lt;/p&gt;

&lt;p&gt;We have 1,600 customers all over the world, big names using us, stable and regular growth of 6% month-over-month, $1M ARR, we release a new, big feature per month. Just a few weeks ago Vercel chose us instead of the other 65 VC-based competitors for its 60,000 registrants Next.js Conf.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#fathom" class="anchor"&gt;
  &lt;/a&gt;
  Fathom
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PEpCG40--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205574/fathom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PEpCG40--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205574/fathom.png" alt="Fathom"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool facts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2 people team&lt;/li&gt;
&lt;li&gt;580.8% revenue growth in last year&lt;/li&gt;
&lt;li&gt; over 1,000,000,000 page views tracked
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Competing using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Radical transparency&lt;/strong&gt;: the founders (Paul and Jack) are ultra-transparent on their &lt;a href="https://usefathom.com/blog"&gt;blog&lt;/a&gt;, &lt;a href="https://usefathom.com/podcast"&gt;podcast&lt;/a&gt;, social media, and customer support.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Audience first&lt;/strong&gt;: Paul Jarvis had already written &lt;a href="https://ofone.co/"&gt;Company of One&lt;/a&gt;. Jack Ellis had already been &lt;a href="https://serverlesslaravelcourse.com/"&gt;teaching Laravel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Pick a fight&lt;/strong&gt;: they arguably have &lt;a href="https://usefathom.com/google-analytics-alternative"&gt;The Big G&lt;/a&gt; has a nemesis, and wave the flag of &lt;a href="https://usefathom.com/blog/blackhole"&gt;privacy and open web&lt;/a&gt; super high.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Interesting tidbits from my email exchanges with the founders:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We built it slowly and iteratively, so at the start we spent less time as it was making less money. Now, we are full-time because it makes ample revenue (enough to pay us both a salary and more) - so if we got, say a few million bucks investment, we'd have no use for it.&lt;/p&gt;

&lt;p&gt;[‚Ä¶] we have to consider everything from new features to pricing to infrastructure and ensure the maintenance costs of our growth doesn't make it harder to manage in the way we like.&lt;/p&gt;

&lt;p&gt;And, we are careful/thoughtful with new features so we don't overwhelm our support channel.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#statamic" class="anchor"&gt;
  &lt;/a&gt;
  Statamic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v1HF_HYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205583/statamic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1HF_HYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205583/statamic.png" alt="Statamic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Competing using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Radical transparency&lt;/strong&gt;: one of the founders shares their journey on &lt;a href="https://fullstackradio.com/146"&gt;this podcast&lt;/a&gt;. Definitely embracing the ‚Äúnot the best but the only‚Äù w/ brand and positioning!&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Open source&lt;/strong&gt;: The core product is &lt;a href="https://statamic.com/get-started"&gt;free and open source&lt;/a&gt;. The Pro version is paid.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Going first&lt;/strong&gt;: Statamic was a &lt;a href="https://statamic.com/forum/4320-building-database-free-websites-with-statamic-cms"&gt;flat-file pioneer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Betting on integrations&lt;/strong&gt;: Huge &lt;a href="https://statamic.com/addons"&gt;marketplace&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Interesting tidbits from my email exchanges with &lt;a href="https://twitter.com/jackmcdade"&gt;Jack McDade&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Bootstrapping let us build the product I wanted, solve the pain points I (and others) had, and do it organically. It certainly is a slower way to grow, but that‚Äôs not a bad thing.&lt;/p&gt;

&lt;p&gt;Everything simply took longer. But it also gave us the ability to use the product differently and grow it more organically than if we hired a big team and fired up a few sprints. We could do things that didn‚Äôt scale, get to know customers closely, and build something that would last a long time.&lt;/p&gt;

&lt;p&gt;Statamic is used by Der Spiegel, one of the largest media and online publishing companies in Germany. It runs their largest sites. That‚Äôs a pretty big win for a small and scrappy bootstrapped company. Also in similar company: OpenTable, Asana, and Freshbooks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#snipcart" class="anchor"&gt;
  &lt;/a&gt;
  Snipcart
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fGaLDTNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205582/snipcart.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fGaLDTNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://snipcart.com/media/205582/snipcart.png" alt="Snipcart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool facts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;9 people team&lt;/li&gt;
&lt;li&gt;1M ARR&lt;/li&gt;
&lt;li&gt;over 2300 paid customers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Competing using:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;strong&gt;Long-tails&lt;/strong&gt;: focus on smaller audience (devs, no enterprise). Only solving &lt;a href="https://snipcart.com/blog/headless-ecommerce-guide"&gt;parts of e-commerce problem&lt;/a&gt;‚Äînot all of it.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Radical transparency&lt;/strong&gt;: &lt;a href="https://medium.com/swlh/our-odd-startup-3-%C2%BD-guys-no-vc-profitability-and-patience-307eb1ad1b0b"&gt;blog posts&lt;/a&gt;, honest, no-BS customer support, &lt;a href="https://www.indiehackers.com/post/francois-lanthier-nadeau-hits-a-million-a-year-with-snipcart-and-learns-patience-33bb7ec9cf"&gt;interviews&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Agency launch&lt;/strong&gt;: client project for MVP. We used √† la carte agency resources that we later refunded.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Going first&lt;/strong&gt;: we were arguably the firsts to market stack-agnostic e-commerce directly to developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚òùÔ∏è Tooting our own horn here, but I believe there are things to be learned from our journey to &lt;a href="https://twitter.com/the_fln/status/1329435539133657092"&gt;1M ARR&lt;/a&gt;. The one lesson that hits home, especially as we scale a bit, is this:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saying no‚Äîand yes‚Äîto the right things is hard.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All of the above are examples, not models. You need to scan your reality and come up with growth models that resonate with it. Occasionally, I mentor startups. I often advise leveraging their constraints. If you‚Äôre not a fighter, don‚Äôt pick a fight. If you don‚Äôt have an agency close to you, don‚Äôt go out of your way to find one. You get the idea.&lt;/p&gt;

&lt;h2 id="video"&gt;The Bootstrap Jamstack - Video&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aegc7A9v3OM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing" class="anchor"&gt;
  &lt;/a&gt;
  Closing
&lt;/h2&gt;

&lt;p&gt;The Jamstack community is one of the more dynamic and positive ones I‚Äôve seen. I‚Äôm thankful to be a part of it.&lt;/p&gt;

&lt;p&gt;If you, too, want to join in the fun, I urge you to. You can start by entering a &lt;a href="https://jamstack.org/slack"&gt;Slack&lt;/a&gt;, a &lt;a href="https://www.indiehackers.com/group/jamstack"&gt;group&lt;/a&gt;, or by &lt;a href="https://jamstackhandbook.com/"&gt;learning more&lt;/a&gt;. If you, too, fall in love with the ecosystem, then come back to this post and maybe start to build a new independent product. I‚Äôll be there to help in any way I can.&lt;/p&gt;

&lt;p&gt;I‚Äôd like to offer fellow bootstrappers some heuristics I have come to embrace:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Most markets aren‚Äôt winner-take-all&lt;/strong&gt;. Solve a problem differently, or different parts, and you‚Äôll generate real value.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Success models are inspiration, not recipes&lt;/strong&gt;. Lean on your strengths and into your constraints. You‚Äôll create your own authentic growth model.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Millions in funding aren‚Äôt a pre-requisite to succeed in the Jamstack&lt;/strong&gt;. Sustainable businesses can be built slowly, grown organically.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If any of you are interested in creating a community for the bootstrap Jamstack, &lt;a href="https://www.flanthiernadeau.com/contact/"&gt;let me know&lt;/a&gt;. I have ideas (and domain names üòÖ).  &lt;/p&gt;

&lt;p&gt;I‚Äôd love to hear your thoughts in the comments or &lt;a href="https://twitter.com/intent/tweet?url=https://snipcart.com/blog/bootstrap-jamstack&amp;amp;text=The%20Bootstrap%20Jamstack:%20How%20Independent%20Players%20Compete,%20by%20@the_fln%20at%20@snipcart"&gt;on Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cheers! üôá‚Äç‚ôÇÔ∏è&lt;/p&gt;

</description>
      <category>jamstack</category>
      <category>startup</category>
    </item>
    <item>
      <title>If it ain't got errors, break it!</title>
      <author>Kirsty Brewster</author>
      <pubDate>Thu, 17 Dec 2020 15:02:41 +0000</pubDate>
      <link>https://dev.to/kirstybrews/if-it-ain-t-got-errors-break-it-6c4</link>
      <guid>https://dev.to/kirstybrews/if-it-ain-t-got-errors-break-it-6c4</guid>
      <description>&lt;p&gt;When I started my first coding project at &lt;a href="https://flatironschool.com"&gt;Flatiron School&lt;/a&gt;, I got this feeling that I hadn't felt in a long time. It was this itch to keep coding because I was enjoying myself so much. I wanted to add more and more functionality to my project. I told friends and family that the last time I remembered having that feeling was when I played the saxophone in high school. &lt;/p&gt;

&lt;p&gt;Back then, I would practice everyday for hours on end, and nobody had to tell me to. I &lt;em&gt;wanted&lt;/em&gt; to practice.&lt;/p&gt;

&lt;p&gt;I really started to progress in my playing abilities during my sophomore year. I didn't even notice until one day, while I was practicing some audition music, I heard outside my practice room, "Who's that playing?".&lt;/p&gt;

&lt;p&gt;A head poked through the door. "Oh! You sound really good." &lt;/p&gt;

&lt;p&gt;Not gonna lie, it felt really good to hear that and it did boost my confidence. &lt;/p&gt;

&lt;p&gt;But there's a fine line to walk between confidence and fear. &lt;/p&gt;

&lt;p&gt;At some point I started to develop the identity of a "good" saxophone player. To the point where I didn't allow myself to try and learn new things on saxophone because doing so would make me a beginner again and I'd be "bad" at playing my instrument. Unless it was something that was put in front of me that I &lt;em&gt;had&lt;/em&gt; to learn how to play, I didn't venture out and learn new things. I didn't get creative. I was very rigid. Not surprisingly, playing the saxophone started to become less fun.&lt;/p&gt;

&lt;p&gt;When I was working on a mini coding project last week, I got all of my main deliverables to work. Great! I had some extra time, so I thought of trying things that were outside the scope of what I knew so far. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Maybe I should try to add a login screen. Maybe I can work on the design and make this website look pretty. Maybe I can try to embed some videos on my website.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Short of a few half-hearted attempts, I didn't try any of those things.&lt;/p&gt;

&lt;p&gt;Looking back at my project, I wish that I had ventured out and really tried out some of those ideas, even if they didn't work out in the end. Unfortunately, I had gotten that similar feeling of when I played the saxophone: I didn't want to be &lt;em&gt;bad&lt;/em&gt; at coding. My code was working! Why mess with it?&lt;/p&gt;

&lt;p&gt;But I should've messed with it. That's the only way to get better. I have to keep reminding myself that it's okay to break my code. My classmates and I are reminded in class to view errors as the default for our code. If we see errors, that's a good thing! We're learning what to do and what not to do. And the errors are guiding us.&lt;/p&gt;

&lt;p&gt;I'm inspired by my classmates because I see them get creative and try new things. It's pushing me to do the same. You can't be creative if you're afraid of being wrong.&lt;/p&gt;

&lt;p&gt;I wish that I had learned this back when I was a little band nerd in high school. It would have probably prevented me from burning out. I was just too perfectionistic and I never allowed myself a day off from practicing. Now, when it comes to coding, I know to allow myself mental breaks and to allow myself to break things. &lt;/p&gt;

&lt;p&gt;Coding is way more fun that way.&lt;/p&gt;

&lt;p&gt;I still pick up my saxophone to play now and again, but now I just do it for the enjoyment. :) &lt;/p&gt;

</description>
      <category>psychology</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>10 Awesome JavaScript String Tips You Might Not Know About</title>
      <author>Kai</author>
      <pubDate>Thu, 17 Dec 2020 14:35:05 +0000</pubDate>
      <link>https://dev.to/kais_blog/10-awesome-javascript-string-tips-you-might-not-know-about-4ep2</link>
      <guid>https://dev.to/kais_blog/10-awesome-javascript-string-tips-you-might-not-know-about-4ep2</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was originally published at &lt;a href="https://kais.blog/p/10-awesome-javascript-string-tips-you-might-not-know-about"&gt;kais.blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you like my content and you want to see more, please &lt;a href="https://twitter.com/intent/follow?screen_name=kais_blog"&gt;follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Questions, feedback or just wanna chat? Come and join my &lt;a href="https://discord.gg/fvGZsz6uXM"&gt;Discord&lt;/a&gt;!&lt;/p&gt;




&lt;p&gt;In my last post, I‚Äôve shown you &lt;a href="https://dev.to/kais_blog/14-awesome-javascript-array-tips-you-should-know-about-1d0m"&gt;14 Awesome JavaScript Array Tips You Should Know About&lt;/a&gt;. This time, let‚Äôs talk about a data type you are probably using every day.&lt;/p&gt;

&lt;p&gt;We call a sequence of characters a &lt;strong&gt;string&lt;/strong&gt;. This is one of the most basic data types you'll encounter in pretty much every programming language. Usually there's nothing fancy about it. Yet, I'd like to show you 10 awesome tips about JavaScript strings, you may not have known.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#1-how-to-copy-a-string-multiple-times"&gt;How to &lt;strong&gt;Copy&lt;/strong&gt; a &lt;strong&gt;String Multiple Times&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-how-to-pad-a-string-to-a-specific-length"&gt;How to &lt;strong&gt;Pad&lt;/strong&gt; a &lt;strong&gt;String&lt;/strong&gt; to a Specific Length&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-how-to-split-a-string-into-an-array-of-characters"&gt;How to &lt;strong&gt;Split&lt;/strong&gt; a &lt;strong&gt;String Into&lt;/strong&gt; an &lt;strong&gt;Array of Characters&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-how-to-count-characters-in-a-string"&gt;How to &lt;strong&gt;Count Characters&lt;/strong&gt; in a String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-how-to-reverse-characters-in-a-string"&gt;How to &lt;strong&gt;Reverse Characters&lt;/strong&gt; in a String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-how-to-capitalize-uppercase-the-first-letter-in-a-string"&gt;How to &lt;strong&gt;Capitalize (Uppercase)&lt;/strong&gt; the &lt;strong&gt;First Letter&lt;/strong&gt; in a String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7-how-to-split-a-string-on-multiple-separators"&gt;How to &lt;strong&gt;Split&lt;/strong&gt; a String &lt;strong&gt;on Multiple Separators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#8-how-to-check-if-a-string-contains-a-specific-sequence"&gt;How to &lt;strong&gt;Check&lt;/strong&gt; If a &lt;strong&gt;String Contains&lt;/strong&gt; a Specific Sequence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9-how-to-check-if-a-string-starts-or-ends-with-a-specific-sequence"&gt;How to &lt;strong&gt;Check&lt;/strong&gt; If a &lt;strong&gt;String Starts&lt;/strong&gt; or &lt;strong&gt;Ends With&lt;/strong&gt; a Specific Sequence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#10-how-to-replace-all-occurrences-of-a-string"&gt;How to &lt;strong&gt;Replace All&lt;/strong&gt; Occurrences of a String&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#1-how-to-copy-a-string-multiple-times" class="anchor"&gt;
  &lt;/a&gt;
  1. How to Copy a String Multiple Times
&lt;/h1&gt;

&lt;p&gt;JavaScript strings allow for easy repetition. Instead of duplicating a string by hand, you can make use of the &lt;code&gt;String#repeat&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Concatenate "ha" 3 times.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;laughing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ha&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;laughing&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "hahaha"&lt;/span&gt;

&lt;span class="c1"&gt;// Concatenate "1" 8 times.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eightBits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eightBits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "11111111"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#2-how-to-pad-a-string-to-a-specific-length" class="anchor"&gt;
  &lt;/a&gt;
  2. How to Pad a String to a Specific Length
&lt;/h1&gt;

&lt;p&gt;Sometimes, you want your string to have a specific length. If your string is too short, you‚Äôd like to &lt;em&gt;fill&lt;/em&gt; the remaining space until it reaches your specific length. In the past, people often used libraries for this. This had negative consequences with the notorious &lt;a href="https://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm"&gt;&lt;code&gt;left-pad&lt;/code&gt; incident&lt;/a&gt;. But, today you can use &lt;code&gt;String#padStart&lt;/code&gt; and &lt;code&gt;String#padEnd&lt;/code&gt;. Which method you choose depends on whether you want to pad your string at the beginning or the end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Add "0" to the beginning until the string has a length of 8.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eightBits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;001&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;eightBits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "00000001"&lt;/span&gt;

&lt;span class="c1"&gt;// Add "*" to the end until the string has a length of 5.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;anonymizedCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;34&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;anonymizedCode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "34***"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#3-how-to-split-a-string-into-an-array-of-characters" class="anchor"&gt;
  &lt;/a&gt;
  3. How to Split a String Into an Array of Characters
&lt;/h1&gt;

&lt;p&gt;There are multiple ways to split a string into an array of characters. I prefer using the spread-Operator (&lt;code&gt;...&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ["a", "p", "p", "l", "e"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Note, that this does not always work as intended. See the next tip for more information.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-how-to-count-characters-in-a-string" class="anchor"&gt;
  &lt;/a&gt;
  4. How to Count Characters in a String
&lt;/h1&gt;

&lt;p&gt;Easy. You can use the &lt;code&gt;length&lt;/code&gt; property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;But, wait a minute! Sometimes, this shows some strange behavior. Look at the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;©∏Ω&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Weird! The japanese kanji &lt;em&gt;hokke&lt;/em&gt; returns a &lt;code&gt;length&lt;/code&gt; of 2. Why? JavaScript represents most characters as 16-bit code points. But, some characters are represented as two (or more) 16-bit code points. This is called a surrogate pair. If you are using the &lt;code&gt;length&lt;/code&gt; property, it's not using the &lt;em&gt;human-perceived&lt;/em&gt; length. Instead, JavaScript tells you how many code points are used. So, ©∏Ω (hokke) consists of two code points. Therefore, the &lt;em&gt;wrong&lt;/em&gt; value is returned.&lt;/p&gt;

&lt;p&gt;Can we do something about it? Well, yes. The fellow spread-operator (&lt;code&gt;...&lt;/code&gt;) saves our day, again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;©∏Ω&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;But, this is not the full story. It works most of the time, but there are edge cases. For example, if you are working with emoji, sometimes also this length is false. If you really want to count the &lt;em&gt;human-perceived&lt;/em&gt; characters, then you have to split your word into &lt;a href="https://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries"&gt;&lt;em&gt;grapheme clusters&lt;/em&gt;&lt;/a&gt;. Unfortunately, this is beyond the scope of this article.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-how-to-reverse-characters-in-a-string" class="anchor"&gt;
  &lt;/a&gt;
  5. How to Reverse Characters in a String
&lt;/h1&gt;

&lt;p&gt;Reversing the characters in a string is easily done. Simply combine the spread-Operator (&lt;code&gt;...&lt;/code&gt;), the &lt;code&gt;Array#reverse&lt;/code&gt; method and the &lt;code&gt;Array#join&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reversedWord&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "elppa"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Again, like in the previous tip there are some rare edge cases. It might be possible that you have to split your word into &lt;a href="https://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries"&gt;&lt;em&gt;grapheme clusters&lt;/em&gt;&lt;/a&gt; first. Again, this is beyond the scope of this article. Sorry!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-how-to-capitalize-uppercase-the-first-letter-in-a-string" class="anchor"&gt;
  &lt;/a&gt;
  6. How to Capitalize (Uppercase) the First Letter in a String
&lt;/h1&gt;

&lt;p&gt;A very common operation is capitalizing the first letter of a string. While many programming languages have a &lt;em&gt;native way&lt;/em&gt; to do so, JavaScript needs a little work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Concatenate capitalized first character with remaining word.&lt;/span&gt;
&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "Apple"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// This shows an alternative way&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Use spread operator (`...`) to split into characters.&lt;/span&gt;
&lt;span class="c1"&gt;// Transform first character and join array.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "Apple"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Remember, what we perceive as characters might be different to what JavaScript perceives as a character. Look at #4 for an explanation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-how-to-split-a-string-on-multiple-separators" class="anchor"&gt;
  &lt;/a&gt;
  7. How to Split a String on Multiple Separators
&lt;/h1&gt;

&lt;p&gt;Let's say you want to split a string on a separator. Therefore, you can use the &lt;code&gt;String#split&lt;/code&gt; method. You probably know this. However, did you know you could split on multiple separators at the same time? This is possible using a regular expression:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let's split on comma (,) and semicolon (;).&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apples,bananas;cherries&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;,;&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ["apples", "bananas", "cherries"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#8-how-to-check-if-a-string-contains-a-specific-sequence" class="anchor"&gt;
  &lt;/a&gt;
  8. How to Check If a String Contains a Specific Sequence
&lt;/h1&gt;

&lt;p&gt;Searching in strings is a common task. In JavaScript you can do this very easily with the &lt;code&gt;String#includes&lt;/code&gt; method. No regular expression needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello, world! My name is Kai!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Kai&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#9-how-to-check-if-a-string-starts-or-ends-with-a-specific-sequence" class="anchor"&gt;
  &lt;/a&gt;
  9. How to Check If a String Starts or Ends With a Specific Sequence
&lt;/h1&gt;

&lt;p&gt;Similar to #8, you can search at the beginning or the end of a string. For this you can use the &lt;code&gt;String#startsWith&lt;/code&gt; and &lt;code&gt;String#endsWith&lt;/code&gt; methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello, world! My name is Kai!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;endsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#10-how-to-replace-all-occurrences-of-a-string" class="anchor"&gt;
  &lt;/a&gt;
  10. How to Replace All Occurrences of a String
&lt;/h1&gt;

&lt;p&gt;There are multiple ways for replacing all occurrences of a string. You can either use the &lt;code&gt;String#replace&lt;/code&gt; method and a regular expression with the &lt;em&gt;global&lt;/em&gt; flag. Or, you could use the new &lt;code&gt;String#replaceAll&lt;/code&gt; method. Note that this new method is not yet available in every browser and Node.js version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I like apples. You like apples.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/apples/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bananas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// "I like bananas. You like bananas."&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replaceAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bananas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// "I like bananas. You like bananas."&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;String is one of the most basic data type in almost every programming language. Also, it's one of the very first data types new developers are learning about. Yet, especially in JavaScript, many developers don't know some interesting details about strings. Hopefully, my post was interesting for you! I'll try to update it with new tips in the future.&lt;/p&gt;

&lt;p&gt;Thanks a lot for reading this post. Please consider sharing it with your friends and colleagues. See you soon!&lt;/p&gt;




&lt;p&gt;If you like my content and you want to see more, please &lt;a href="https://twitter.com/intent/follow?screen_name=kais_blog"&gt;follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Questions, feedback or just wanna chat? Come and join my &lt;a href="https://discord.gg/fvGZsz6uXM"&gt;Discord&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This post was originally published at &lt;a href="https://kais.blog/p/10-awesome-javascript-string-tips-you-might-not-know-about"&gt;kais.blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Java Spring Framework Dependency Injection Without Spring Boot</title>
      <author>Asher Toqeer</author>
      <pubDate>Thu, 17 Dec 2020 14:17:21 +0000</pubDate>
      <link>https://dev.to/ashertoqeer/java-spring-framework-dependency-injection-without-spring-boot-1acl</link>
      <guid>https://dev.to/ashertoqeer/java-spring-framework-dependency-injection-without-spring-boot-1acl</guid>
      <description>&lt;p&gt;Today, Spring Framework is used as an umbrella term for Spring projects and Spring ecosystem, However, Spring Framework is basically a &lt;strong&gt;Dependency Injection&lt;/strong&gt; Framework and we can use its Dependency Injection capabilities in &lt;em&gt;any&lt;/em&gt; Java project, without using Spring Boot or any other Spring project.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#example-java-project" class="anchor"&gt;
  &lt;/a&gt;
  Example Java Project
&lt;/h4&gt;

&lt;p&gt;Let's say we have a Java project with an &lt;code&gt;EmployeeService&lt;/code&gt; that has a dependency on &lt;code&gt;DepartmentService&lt;/code&gt; and an &lt;code&gt;Application&lt;/code&gt; class to run the application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DepartmentService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getDepartmentName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;employeeId&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;": getDepartmentName"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Accounts"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EmployeeService&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;DepartmentService&lt;/span&gt; &lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;EmployeeService&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;DepartmentService&lt;/span&gt; &lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;departmentService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;checkDepartment&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;": checkDepartment"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDepartmentName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EMP-0098"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service.DepartmentService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service.EmployeeService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Application&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;DepartmentService&lt;/span&gt; &lt;span class="n"&gt;departmentService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DepartmentService&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;EmployeeService&lt;/span&gt; &lt;span class="n"&gt;employeeService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;EmployeeService&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;checkDepartment&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here we are manually creating and injecting dependencies, we want Spring framework to do this, let's add Spring Framework to the project&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#add-spring-framework-dependency" class="anchor"&gt;
  &lt;/a&gt;
  Add Spring Framework Dependency
&lt;/h4&gt;

&lt;p&gt;We only need &lt;code&gt;spring-context&lt;/code&gt; dependency to be added in the project. It is will provide all dependency injection capabilities Spring Framework has to offer. At the time of writing this article, the latest stable version is &lt;code&gt;5.2.12.RELEASE&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-context&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.2.12.RELEASE&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#creating-and-managing-dependencies-beans" class="anchor"&gt;
  &lt;/a&gt;
  Creating and Managing Dependencies (Beans)
&lt;/h4&gt;

&lt;p&gt;Spring managed dependencies are called &lt;strong&gt;Beans&lt;/strong&gt;. Since &lt;code&gt;EmployeeService&lt;/code&gt; &lt;em&gt;depends&lt;/em&gt; on &lt;code&gt;DepartmentService&lt;/code&gt; we want Spring to manage that &lt;em&gt;dependency&lt;/em&gt;. We need to have a configuration class where we can define dependencies and let Spring know about them.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#spring-beans-configuration-class" class="anchor"&gt;
  &lt;/a&gt;
  Spring Beans Configuration class:
&lt;/h6&gt;

&lt;p&gt;Create a new &lt;code&gt;ApplicationConfig&lt;/code&gt; class that will hold dependency (Bean) configurations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.config&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service.DepartmentService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Configuration&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApplicationConfig&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;DepartmentService&lt;/span&gt; &lt;span class="nf"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;DepartmentService&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;@Configuration&lt;/strong&gt; is a Spring annotation to mark a class as Bean configuration class, it will help Spring framework to find Beans.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;@Bean&lt;/strong&gt; is a Spring annotation to let Spring know about dependency. This annotation is used on a method that Spring will call to obtain that dependency. Here a new &lt;code&gt;DepartmentService&lt;/code&gt; instance is returned for Spring to manage. That instance is now called a &lt;em&gt;Bean&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h6&gt;
  &lt;a href="#application-context" class="anchor"&gt;
  &lt;/a&gt;
  Application Context:
&lt;/h6&gt;

&lt;p&gt;Spring Framework use &lt;code&gt;ApplicationContext&lt;/code&gt; to manage the beans. &lt;code&gt;ApplicationContext&lt;/code&gt; represents a container, also called Spring Inversion of Control (IoC) container, that contains all of Spring managed instances or beans. &lt;/p&gt;

&lt;p&gt;We need to create an Application Context for our application to access beans. Let's update our main &lt;code&gt;Application&lt;/code&gt; class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.config.ApplicationConfig&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service.DepartmentService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service.EmployeeService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.ApplicationContext&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.annotation.AnnotationConfigApplicationContext&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Application&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;ApplicationContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;AnnotationConfigApplicationContext&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ApplicationConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
        &lt;span class="nc"&gt;DepartmentService&lt;/span&gt; &lt;span class="n"&gt;departmentService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBean&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;DepartmentService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 2&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;

        &lt;span class="nc"&gt;EmployeeService&lt;/span&gt; &lt;span class="n"&gt;employeeService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;EmployeeService&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;checkDepartment&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a new &lt;code&gt;ApplicationContext&lt;/code&gt; using our &lt;code&gt;ApplicationConfig&lt;/code&gt; class (this class contains our &lt;code&gt;DepartmentService&lt;/code&gt; bean). We need to specify configuration class(s) while creating context so that Spring can find our beans. We can use XML based configuration too instead of Annotation based configurations, but for simplicity we will stick with Annotation based configurations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We are getting &lt;code&gt;DepartmentService&lt;/code&gt; bean from application context (or IoC container), instead of creating it here. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We are simply printing &lt;code&gt;departmentService&lt;/code&gt; object.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We are passing &lt;code&gt;departmentService&lt;/code&gt; to &lt;code&gt;EmployeeService&lt;/code&gt; same as before.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#auto-injecting-dependencies-autowiring-beans" class="anchor"&gt;
  &lt;/a&gt;
  Auto Injecting Dependencies (Autowiring Beans)
&lt;/h4&gt;

&lt;p&gt;So far we have created &lt;code&gt;DepartmentService&lt;/code&gt; Bean and an &lt;code&gt;ApplicationContext&lt;/code&gt; to manage that bean. We can access that Bean using &lt;code&gt;context&lt;/code&gt; and pass it to another service, but it would be much cleaner if the Bean "gets injected" automatically, rather than we get it from the application context and inject manually.&lt;/p&gt;

&lt;p&gt;This auto injection of dependencies (or Beans) is called &lt;strong&gt;Autowiring&lt;/strong&gt; and Spring provides it out of the box, given that both of the instances (the dependent and the dependency) are Spring Beans. In other words, &lt;code&gt;DepartmentService&lt;/code&gt; gets injected in &lt;code&gt;EmployeeService&lt;/code&gt; automatically if both of them are Beans. It won't work otherwise. So, let's make &lt;code&gt;EmployeeService&lt;/code&gt; a bean too.&lt;/p&gt;

&lt;p&gt;Update &lt;code&gt;ApplicationConfig class&lt;/code&gt; to add &lt;code&gt;EmployeeService&lt;/code&gt; bean:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.config&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service.DepartmentService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.thebackendguy.com.service.EmployeeService&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApplicationConfig&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;DepartmentService&lt;/span&gt; &lt;span class="nf"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;DepartmentService&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Bean&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;EmployeeService&lt;/span&gt; &lt;span class="nf"&gt;employeeService&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;EmployeeService&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;departmentService&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;EmployeeService&lt;/code&gt; needs an instance of &lt;code&gt;DepartmentService&lt;/code&gt; at the time of creation, so we are calling &lt;code&gt;departmentService()&lt;/code&gt; to fulfill that dependency, but &lt;strong&gt;this will not create a new DepartmentService instance&lt;/strong&gt; rather it will automatically Inject the previously existing &lt;code&gt;DepartmentService&lt;/code&gt; bean. Both of the methods are actually Spring Bean configuration and default Bean scope is singleton (single shared instance per context) and Spring is smart enough to realize and inject existing beans where ever required. (For brevity of this article I am not going into detail of bean scope)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's update our &lt;code&gt;Application&lt;/code&gt; class to get &lt;code&gt;EmployeeService&lt;/code&gt; instance rather than creating it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Application&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;ApplicationContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;AnnotationConfigApplicationContext&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ApplicationConfig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="nc"&gt;EmployeeService&lt;/span&gt; &lt;span class="n"&gt;employeeService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBean&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;EmployeeService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;employeeService&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;checkDepartment&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Now we don't need to manually create an instance of &lt;code&gt;EmployeeService&lt;/code&gt; and inject &lt;code&gt;DepartmentService&lt;/code&gt; dependency. It is now getting handled by the Spring framework.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are the minimal steps required to use Spring Framework without Spring boot. Spring Framework Dependency Injection has a lot to offer in addition to these basic Dependency Injection capabilities.&lt;/p&gt;

&lt;p&gt;Find code on GitHub: &lt;a href="https://github.com/thebackendguy-code-examples/java-spring-demo-without-spring-boot"&gt;https://github.com/thebackendguy-code-examples/java-spring-demo-without-spring-boot&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>springframework</category>
    </item>
    <item>
      <title>Python tips: use generators more!</title>
      <author>Vitaly Shchurov</author>
      <pubDate>Thu, 17 Dec 2020 14:06:50 +0000</pubDate>
      <link>https://dev.to/v_it_aly/python-tips-use-generators-more-311c</link>
      <guid>https://dev.to/v_it_aly/python-tips-use-generators-more-311c</guid>
      <description>&lt;p&gt;When writing a function that's supposed to return a sequence of results, returning some data structure like a list or dictionary is often the most obvious choice, yet not necessarily the most effective one. Sometimes, it can be beneficial to design your functions as generators. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-quick-reminder" class="anchor"&gt;
  &lt;/a&gt;
  A QUICK REMINDER
&lt;/h4&gt;

&lt;p&gt;If you know the basics, you can skip to the next section. To put it simply, &lt;strong&gt;a generator is a function that returns its result values one by one.&lt;/strong&gt; This function is created using the keyword &lt;code&gt;yield&lt;/code&gt; instead of &lt;code&gt;return&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When reached, this keyword will pass back one result value, the function will remember its state and sleep until resumed to produce the subsequent value.&lt;/p&gt;

&lt;p&gt;In fact, generators don't return the results themselves. If you just call them like a normal function, all you'll get is a generator object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generator_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;   
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;generator_func&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;generator&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;generator_func&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x0000022BE0AA4848&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To get it working, you need to iterate over it in a &lt;code&gt;for&lt;/code&gt; loop or using methods like &lt;code&gt;next()&lt;/code&gt;, &lt;code&gt;list()&lt;/code&gt;, &lt;code&gt;set()&lt;/code&gt;, &lt;code&gt;tuple()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;gen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;generator_func&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Another important feature is that generators exhaust themselves and raise a &lt;code&gt;StopIteration&lt;/code&gt; exception when they run out of values to return.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;remaining&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;remaining&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We only got &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt;, because &lt;code&gt;1&lt;/code&gt; has already been yielded. Here, we don't see any exceptions, because &lt;code&gt;for&lt;/code&gt; loops handle them under the hood. So do methods like &lt;code&gt;list()&lt;/code&gt;, &lt;code&gt;tuple()&lt;/code&gt;, &lt;code&gt;sum()&lt;/code&gt;. The &lt;code&gt;next()&lt;/code&gt; method doesn't, though:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; next(gen)
Traceback (most recent call last):
  File "&amp;lt;pyshell#16&amp;gt;", line 1, in &amp;lt;module&amp;gt;
    next(gen)
StopIteration
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This particular generator is exhausted. To use the function again, you need a new generator object, which means you'll have to call the function again. Now, let's move on to why use generators at all.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-design-a-function-as-a-generator" class="anchor"&gt;
  &lt;/a&gt;
  WHY DESIGN A FUNCTION AS A GENERATOR?
&lt;/h4&gt;

&lt;p&gt;There a few reasons to write your function as a generator rather than a normal &lt;code&gt;return&lt;/code&gt; function:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Achieving better design clarity and readability (and sometimes, but not always, making it shorter).&lt;/li&gt;
&lt;li&gt;A generator feeds the results to the calling code one by one instead of storing the entire data structure in memory (like lists do). In some cases, this can be a deciding factor (read more about it in my &lt;a href="https://dev.to/v_it_aly/python-tips-how-to-reuse-a-generator-within-one-function-a5o"&gt;previous post.&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Separating processing data and using the results. Instead of compelling a function to interact with the output and return it, you separate functionality. A generator produces the data, and the calling code or some other function uses it. By the way, it's called decoupling interfaces, and it can boost your code's reusability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To clarify the last point, let's imagine you wrote a function that produces a list, returns it to a calling function, which continues torturing the poor list :)&lt;/p&gt;

&lt;p&gt;In case you need to make some future changes to your code, or even toss away the long-suffering list, because now you need a dictionary, you'll have to adjust all your code to the new reality.&lt;/p&gt;

&lt;p&gt;However, if you design the processing function as a generator - all you return now is a generator object, which you may iterate over or turn into a data structure using methods like &lt;code&gt;list()&lt;/code&gt;, &lt;code&gt;set()&lt;/code&gt;, &lt;code&gt;tuple()&lt;/code&gt;. And when you need to change something, you'll only be changing the calling code, while the generator can be left in peace.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#practical-example" class="anchor"&gt;
  &lt;/a&gt;
  PRACTICAL EXAMPLE
&lt;/h4&gt;

&lt;p&gt;Let's see how it can be done in practice. Say we need to analyze the vocabulary of some text (you can use &lt;a href="https://docs.google.com/document/d/1SiX30suZOTd7RKsxz2xE9uRLXs_eoUO2ZHIJQBm5FP4/edit"&gt;mine&lt;/a&gt;). Tasks like this can get pretty complicated, but we'll keep our code simple to focus on the issue at hand:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;analyze_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'I/O'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;""" 
    Search text data for words according to a pattern,
    then add found words to a defauldict, and count their frequency.
    """&lt;/span&gt;
    &lt;span class="n"&gt;frequency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;' &lt;/span&gt;&lt;span class="se"&gt;\n\'&lt;/span&gt;&lt;span class="s"&gt;",.;!?()@#$%^&amp;amp;*`~'&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="n"&gt;frequency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frequency&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Sherlock Holmes.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;frequency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analyze_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frequency&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This piece of code is not very flexible. Suppose, you'd want not only to do frequency analysis, but some further processing as well. In this case, you'll have to rewrite both the &lt;code&gt;text_analyzer&lt;/code&gt; and the calling code. In real life, a few changes like that can lead to some messy code. Not to mention that if our file would be much bigger, our current version can lead to a memory crash.&lt;/p&gt;

&lt;p&gt;With a couple of minor changes, we can make our code more adjustable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;analyze_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'I/O'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                 &lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;' &lt;/span&gt;&lt;span class="se"&gt;\n\'&lt;/span&gt;&lt;span class="s"&gt;",.;!?()@#$%^&amp;amp;*`~'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;""" 
    Search text data for words according to a pattern, then
    yield found words.
    """&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isalpha&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;frequency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Sherlock Holmes.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;analyze_text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;frequency&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="c1"&gt;# do the frequency counting here
&lt;/span&gt;    &lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frequency&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now, the calling code and &lt;code&gt;analyze_text&lt;/code&gt; do two completely different jobs. &lt;code&gt;analyze_text&lt;/code&gt; breaks down any passed-in text file and returns each word one by one. It doesn't care what you're going to do with these words after that, it'll be the job of the calling code.&lt;/p&gt;

&lt;p&gt;What's more, the second version is very well suited for working with processing huge amounts of data, because all the working memory a generator function requires is the maximum length of one line of input.&lt;/p&gt;

&lt;p&gt;Interested to learn more advanced stuff on generators? Check out my &lt;a href="https://dev.to/v_it_aly/python-tips-how-to-reuse-a-generator-within-one-function-a5o"&gt;previous post.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you enjoyed my post. If so, please, don't forget to like it :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>generator</category>
      <category>list</category>
    </item>
  </channel>
</rss>
