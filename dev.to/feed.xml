<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>November 4th, 2021: What did you learn this week?</title>
      <author>Nick Taylor (he/him)</author>
      <pubDate>Fri, 05 Nov 2021 00:21:09 +0000</pubDate>
      <link>https://dev.to/nickytonline/november-4th-2021-what-did-you-learn-this-week-54fm</link>
      <guid>https://dev.to/nickytonline/november-4th-2021-what-did-you-learn-this-week-54fm</guid>
      <description>&lt;p&gt;It's that time of the week again. So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/qKltgF7Aw515K/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/qKltgF7Aw515K/giphy.gif" alt="Information flowing through your brain" width="496" height="419"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>weeklyretro</category>
      <category>weeklylearn</category>
      <category>discuss</category>
    </item>
    <item>
      <title>I spent 3 years writing an Android Contacts API in Kotlin with Java interop. What I‚Äôve learned‚Ä¶</title>
      <author>Vandolf Estrellado</author>
      <pubDate>Thu, 04 Nov 2021 23:13:30 +0000</pubDate>
      <link>https://dev.to/vestrel00/i-spent-3-years-writing-an-android-contacts-api-in-kotlin-with-java-interop-what-ive-learned-54hp</link>
      <guid>https://dev.to/vestrel00/i-spent-3-years-writing-an-android-contacts-api-in-kotlin-with-java-interop-what-ive-learned-54hp</guid>
      <description>&lt;p&gt;Hi, my name is Vandolf and I have a problem. I get addicted and obsessed about certain things. It spirals out of control, very quickly. Once I set my sights on something, I don‚Äôt stop until I finish it, even if it takes years. Sounds like addiction‚Ä¶ It is. &lt;/p&gt;

&lt;p&gt;Before I know it, I've spent three years working on private repositories building something no one knows about. Then, I make it public and write &lt;a href="https://proandroiddev.com/android-contacts-reborn-19985c73ad43"&gt;an article&lt;/a&gt; about it thinking that it will blow people's minds. Then get shocked that the repo has less than 100 unique visitors in the first month because I think that it will just magically get discovered by everyone...&lt;/p&gt;

&lt;p&gt;Does this sound relatable to you? Probably not, right? I think I'm insane in some levels. If you are interested in the Contacts API I've built or the insanity I'm going through, keep reading!&lt;/p&gt;

&lt;p&gt;I'll split this article in two sections.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Contacts API that I've built. üî•&lt;/li&gt;
&lt;li&gt;The mistakes I made and lessons I learned from writing "open source" code, privately, for three years. ü§¶‚Äç‚ôÇÔ∏è&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are not interested in the first section, I recommend at least reading the second. You might learn something from the mistakes I've made, and hopefully avoid making them yourself!&lt;/p&gt;

&lt;p&gt;I'm actually a bit hesitant and nervous about posting this as my first article here. I have no reputation here. No one knows me. I'm just a random stranger. However, I know that doing things that are only within my comfort zone will not get me anywhere. So, I'm pushing myself to publish this article üò∞&lt;/p&gt;

&lt;p&gt;I hope to make connections, and maybe even friends, in this community ‚ù§Ô∏è&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-contacts-api-that-ive-built"&gt;
  &lt;/a&gt;
  The Contacts API that I've built.
&lt;/h2&gt;

&lt;p&gt;First, here is the GitHub repo; &lt;a href="https://github.com/vestrel00/contacts-android"&gt;https://github.com/vestrel00/contacts-android&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please take a look at it and let me know what you think?&lt;/p&gt;

&lt;p&gt;The oldest commit in the repo is 2 years old. However, I have another private repo that has the 3 year old commits. I'm not lying! üòÅ&lt;/p&gt;

&lt;p&gt;Exactly a month ago from today, I have made public the previously private repo and published &lt;a href="https://proandroiddev.com/android-contacts-reborn-19985c73ad43"&gt;an article in Medium&lt;/a&gt; introducing my Contacts API to the ether. The article covers the history of Contacts in Android since Android API 1 to API 5 (Eclair) all the way to API 31. It talks about how, for over a decade, there has not been a single open source library that abstracts away all of the complexities of Android's Contacts Provider and &lt;code&gt;ContactsContract&lt;/code&gt;. The community has been forced to deal with ContentProviders and cursors, spending a plethora of hours of trying to figure out how to do even the simplest things. Then it goes through an overview of the Contacts API that I've built and how you can use it to &lt;strong&gt;create your own full-fledged Contacts app&lt;/strong&gt; in Kotlin and/or Java.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-hypothetical-but-probable-story"&gt;
  &lt;/a&gt;
  A hypothetical, but probable, story.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rvOw7vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hax8z8ybto2wbmbc5s6x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rvOw7vH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hax8z8ybto2wbmbc5s6x.jpg" alt="Image description" width="880" height="593"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I won't repeat myself or copy-paste things so I'll take a different approach in this article. I'll go through how a normal person might use the native Contacts application and show code snippets on how you can implement those use cases using &lt;code&gt;Contacts&lt;/code&gt; API, Reborn. To make things easier to follow, let's go through a hypothetical day of someone named Vandolf.&lt;/p&gt;

&lt;p&gt;One day, Vandolf takes his phone and opens up the Contacts app. He's bored so he decides to look through the contacts he has saved over the years.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Contact&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;DisplayNamePrimary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;orderBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nc"&gt;ContactsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Starred&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="nc"&gt;ContactsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;DisplayNamePrimary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;asc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ignoreCase&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He sees favorites at the top of the list (which includes his wife, son, dogs, and cat) followed by non-favorites, ordered by the contact display name. Vandolf scrolls down to see more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One of his high school friends popped up. Curious about his ancient friends, he types a name in the search field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;friends&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;whereAnyContactDataPartiallyMatches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"henry"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He sees a bunch of contacts with the name "Henry". Determining that it is in fact the same Henry, he decides to link them all together into a single contact.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;listOfHenries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He then searches for Victor and finds that he only has one contact with that name. He knows that he has 3 friends named Victor so he opens up that contact and discovers that the Contacts Provider mistakenly combined 3 different Victors into a single contact. Facepalming, he decides to unlink the Victors into 3 separate contacts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;victor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Continuing his mindless quest of browsing his contacts, he looks through his contacts one account at a time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;allAccounts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsFromAccount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then he realized that he only wants to see contacts from all of his Google accounts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsFromGoogleAccounts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;contactsApi&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accountsWithType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"com.google"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not finding what he is looking for, he decides to browse contacts by label (group membership).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsInGroup&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;broadQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unable to find "that person", he decides to do an advanced search.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;thatPerson&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;GivenName&lt;/span&gt; &lt;span class="n"&gt;startsWith&lt;/span&gt; &lt;span class="s"&gt;"Jose"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;endsWith&lt;/span&gt; &lt;span class="s"&gt;"gmail.com"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Address&lt;/span&gt; &lt;span class="n"&gt;endsWith&lt;/span&gt; &lt;span class="s"&gt;"hotmail.com"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Country&lt;/span&gt; &lt;span class="n"&gt;equalToIgnoreCase&lt;/span&gt; &lt;span class="s"&gt;"US"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;lessThan&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;toWhereString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt; &lt;span class="n"&gt;equalTo&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;BIRTHDAY&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Contact&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Starred&lt;/span&gt; &lt;span class="n"&gt;equalTo&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Nickname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Name&lt;/span&gt; &lt;span class="n"&gt;equalToIgnoreCase&lt;/span&gt; &lt;span class="s"&gt;"Dota 2 Pro"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Organization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Company&lt;/span&gt; &lt;span class="n"&gt;`in`&lt;/span&gt; &lt;span class="nf"&gt;listOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"uber"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"eats"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"door"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"dash"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nf"&gt;and&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Note&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Note&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;isNotNullOrEmpty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;firstOrNull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vandolf got tired of browsing. He decides to make a new contact for his ol' imaginary friend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contactsApi&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;accountToAddContactTo&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Account&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"vestrel00@pixar.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"com.pixar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;insertResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forAccount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accountToAddContactTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rawContact&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;setName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;givenName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Buzz"&lt;/span&gt;
            &lt;span class="n"&gt;familyName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Lightyear"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setNickname&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Buzz"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setOrganization&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Space Toy"&lt;/span&gt;
            &lt;span class="n"&gt;company&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Pixar"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addPhone&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"(555) 555-5555"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Phone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;CUSTOM&lt;/span&gt;
            &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Fake Number"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setSipAddress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sipAddress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"sip:buzz.lightyear@pixar.com"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addEmail&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"buzz.lightyear@pixar.com"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORK&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addEmail&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"buzz@lightyear.net"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;HOME&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addAddress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;formattedAddress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"1200 Park Ave"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORK&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addIm&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"buzzlightyear@skype.com"&lt;/span&gt;
            &lt;span class="n"&gt;protocol&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Im&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Protocol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;SKYPE&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addWebsite&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://www.pixar.com"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addWebsite&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"https://www.disney.com"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addEvent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;EventDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1995&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dayOfMonth&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;BIRTHDAY&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;addRelation&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Childhood friend"&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Relation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;CUSTOM&lt;/span&gt;
            &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Imaginary Friend"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;groupMemberships&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;addAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;contactsApi&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;accounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accountToAddContactTo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;GroupsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Favorites&lt;/span&gt; &lt;span class="n"&gt;equalTo&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nf"&gt;or&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;GroupsFields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Title&lt;/span&gt; &lt;span class="n"&gt;contains&lt;/span&gt; &lt;span class="s"&gt;"friend"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toGroupMemberships&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;setNote&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The best toy in the world!"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;olImaginaryFriend&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;insertResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, Vandolf adds a photo of good ol'Buzz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onClickPhoto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Activity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;activity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;selectPhoto&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onActivityResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resultCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;onPhotoPicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resultCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;photoBitmapPicked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;bitmap&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setPhoto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="n"&gt;photoUriPicked&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;bitmap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MediaStore&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getBitmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contentResolver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setPhoto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contactsApi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Vandolf then decides to make some changes to his new contact.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;updateResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toMutableContact&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;setNickname&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The Buzz"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;removeAllPhones&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nf"&gt;removeWebsite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;websites&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"disney"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="nf"&gt;events&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ANNIVERSARY&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nf"&gt;setNote&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"The best toy in the world - EVER."&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;He also sets the first email to be the default/primary email.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;emails&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nf"&gt;setAsDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once Vandolf has finished his business in the toilet, where this entire story has been taking place üòÆ, he decides that the whole exercise was stupid and deletes his olImaginaryFriend.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;deleteResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;contactsApi&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;olImaginaryFriend&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'll stop the story here. This article is getting too long and I've probably lost 95% of the readers at this point.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#that-story-barely-scratched-the-surface-of-the-library"&gt;
  &lt;/a&gt;
  That story barely scratched the surface of the library.
&lt;/h3&gt;

&lt;p&gt;There are a lot more APIs in the library that remains untold. The story would be too long if I wanted to showcase everything that the library can do. I‚Äôd have to write a novel!&lt;/p&gt;

&lt;p&gt;One thing I will mention here as an extra is that all of the functions I‚Äôve shown in the story do not handle permissions and also does the work on the call-site thread. I left those out for brevity and to show that the APIs are framework-agnostic.  Anyways, the library provides Kotlin coroutine extensions for all core functions to handle permissions and execute work outside of the UI thread.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Use the *WithPermission extensions to ensure permissions are granted prior to querying.&lt;/span&gt;
&lt;span class="c1"&gt;// Use the *WithContext or *Async extensions to execute the operation outside the UI thread.&lt;/span&gt;

&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;queryWithPermission&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findWithContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;deferredResult&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Contacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commitAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;deferredResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;await&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Extensions for Kotlin Flow and RxJava are also in the v1 roadmap, which includes APIs for listening to Contacts database changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#all-apis-in-the-library-are-optimized"&gt;
  &lt;/a&gt;
  All APIs in the library are optimized.
&lt;/h3&gt;

&lt;p&gt;For example, to cancel a query amid execution,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;returnTrueIfQueryShouldBeCancelled&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;find&lt;/code&gt; function optionally takes in a function that, if it returns true, will cancel query processing as soon as possible. The function is called numerous times during query processing to check if processing should stop or continue. This gives you the option to cancel the query.&lt;/p&gt;

&lt;p&gt;This is useful when used in multi-threaded environments. One scenario where this would be commonly used is when performing queries as the user types a search text. You are able to cancel the current query when the user enters new text.&lt;/p&gt;

&lt;p&gt;For example, to automatically cancel the query inside a Kotlin coroutine when the coroutine is cancelled,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;withContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coroutineContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="n"&gt;isActive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Or, using the coroutine extensions in the async module...&lt;/span&gt;
    &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;contacts&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;findWithContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#all-core-apis-are-frameworkagnostic-and-works-well-with-java-and-kotlin"&gt;
  &lt;/a&gt;
  All core APIs are framework-agnostic and works well with Java and Kotlin
&lt;/h3&gt;

&lt;p&gt;The core APIs in the &lt;code&gt;core&lt;/code&gt; module does not and will not force you to use things you don‚Äôt want. As a matter of fact, the only dependency the core module has is the standard Kotlin lib! Use whatever Java or Kotlin permissions or threading library you want. The extensions are optional and are there for convenience.&lt;/p&gt;

&lt;p&gt;I also made sure that &lt;strong&gt;all core functions and entities are interoperable with Java 7+.&lt;/strong&gt; So, if you were wondering why I‚Äôm using a semi-builder pattern instead of using named arguments with default values, that is why. I‚Äôve also made some other intentional decisions about API design to ensure the best possible experience for both Kotlin and Java consumers without sacrificing Kotlin language standards. It is Kotlin-first, Java-second (with love and care).&lt;/p&gt;

&lt;p&gt;Modules other than the core module are not guaranteed to be compatible with Java.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-library-provides-full-documentation-in-code-and-with-howto-pages-the-project-also-has-a-vision-and-a-roadmap"&gt;
  &lt;/a&gt;
  The library provides full documentation in code and with how-to pages. The project also has a vision and a roadmap.
&lt;/h3&gt;

&lt;p&gt;Documentation and how-to guides are all available and linked in the repository. You can browse the &lt;a href="https://github.com/vestrel00/contacts-android/tree/master/howto"&gt;Howto pages&lt;/a&gt; or visit the &lt;a href="https://vestrel00.github.io/contacts-android/"&gt;GitHub Pages&lt;/a&gt;. Both contain the same info but the GitHub pages are not guaranteed to be up-to-date. The GitHub wiki hosts the &lt;a href="https://github.com/vestrel00/contacts-android/wiki/Project-Roadmap"&gt;project roadmap&lt;/a&gt;. It contains all planned work and release schedules, which are organized using issues, milestones, and projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-mistakes-i-made-and-lessons-i-learned-from-writing-open-source-code-privately-for-three-years"&gt;
  &lt;/a&gt;
  The mistakes I made and lessons I learned from writing "open source" code, privately, for three years.
&lt;/h2&gt;

&lt;p&gt;For the past three years, I've had my head buried in the sand. I kept myself out of all social media. No Facebook. No Twitter. No Instagram. No Reddit. No Medium. No Dev.to. I got my world news from several news outlets. I'm subscribed to AndroidWeekly and KotlinWeekly to keep myself up-to-date in the world of Android, given that my entire career hinges on it.&lt;/p&gt;

&lt;p&gt;For the most part, it was a great experience. By "it" I mean real life. We all know social media can be a detriment to one's health. I don't regret it at all. I can say with 100% confidence that I am healthier now because of it.&lt;/p&gt;

&lt;p&gt;I have been working at a great company and spending time with my family. When I find free time, I work on this project. &lt;/p&gt;

&lt;p&gt;However, now that I have made this passion project public, I'm coming to a stark realization that I should not have completely disconnected myself from everyone. At the very least, I should have kept myself active in the open source community that I'm &lt;strong&gt;attempting&lt;/strong&gt; to be a part of.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-1-writing-open-source-code-privately"&gt;
  &lt;/a&gt;
  Mistake #1 - Writing "open source" code, privately.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NBUVFvl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4y92oobd7oz3k9rfi6j.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBUVFvl3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4y92oobd7oz3k9rfi6j.jpg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you see the paradox in that statement? Really, what was I thinking ü§¶‚Äç‚ôÇÔ∏è. I know it's a classic mistake and I'm not the only one that has made this mistake. Some of you reading this may have also or is in the process of making this mistake.&lt;/p&gt;

&lt;p&gt;First, it is useful to understand why people do this. Why I did this. For most, it's something along the lines of "I don't want to show it to others until it is done". While I can relate to that, for me, it was really about not having the time to participate in open source and collaborate.&lt;/p&gt;

&lt;p&gt;In my mind, and I could be 100% wrong here given that this is the first library project that I encourage others to use, had I made it public from the beginning and successfully pulled in others to contribute, I would not have had the same flexibility and agility to build the API the way I wanted to. I would have had to convince other contributors that this is the way to go and spend time collaborating to come to the best possible solution. Collaboration takes time. To some, especially folks like me, it is a commitment. At the time, my son was just born and ever since then, finding time to do anything for myself has been very difficult.&lt;/p&gt;

&lt;p&gt;The mistake that I made here is that I missed the whole point of &lt;strong&gt;&lt;a href="https://www.redhat.com/en/topics/open-source/what-is-open-source"&gt;open source&lt;/a&gt;&lt;/strong&gt;. The very thing that I was trying to avoid because I had no time is the thing that makes something open source. It is as much about the collaboration than it is about the output. Me building something privately, then making it public does not suddenly make it open source. It just means that I built something and other people can see and use it now. My code, even though it is public now, cannot be considered open source (even though the source is open). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-2-thinking-that-no-one-else-in-the-world-is-building-what-im-building"&gt;
  &lt;/a&gt;
  Mistake #2 - Thinking that no one else in the world is building what I'm building.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VYZWEgAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80g5i5wjc6fg0ke0w3n5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VYZWEgAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/80g5i5wjc6fg0ke0w3n5.jpg" alt="Image description" width="880" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another classic mistake. My thought process here was that since no one has attempted to wrap the entirety of the &lt;code&gt;ContactsContract&lt;/code&gt; for the last decade, why would anyone do it now? There are so many contacts management apps out there already. Surely, a simplified Contacts API is not in demand. No one needs it. No one is working on something like this except me üí•&lt;/p&gt;

&lt;p&gt;While I knew deep down that this mindset was completely wrong, I lied to myself thinking that I must be the only one to discover this missing basic-but-critical component in mobile development. There are &lt;a href="https://ostoday.org/android/how-many-android-developers-are-there.html"&gt;6+ million Android devs in the world&lt;/a&gt; but I must be the only one that have scoured the internet searching for a simplified Contacts API so that I can use it for work...&lt;/p&gt;

&lt;p&gt;Because of this mistake, I now wonder how many opportunities to collaborate with like-minded individuals have I missed?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-3-not-participating-in-the-open-source-community"&gt;
  &lt;/a&gt;
  Mistake #3 - Not participating in the open source community.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vLXLjWQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c59700n4gn0wa7m6x4c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLXLjWQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c59700n4gn0wa7m6x4c.jpg" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I claim that I want to contribute and be a part of the open source community. However, I don't even make the effort to contribute to the open source libraries I use on a daily basis for work (e.g. RxJava, Glide, etc) because I don't think I'm smart enough. So, I figured that one way I can participate in open source was to work in secret by myself for years and then promote my secret-made-public code as "open source". What a joke! It is a farce. üí© üí© üí©&lt;/p&gt;

&lt;p&gt;I clearly misunderstood what &lt;strong&gt;&lt;a href="https://www.redhat.com/en/topics/open-source/what-is-open-source"&gt;open source&lt;/a&gt;&lt;/strong&gt; is.&lt;/p&gt;

&lt;p&gt;What I have now is a not-open-source-but-public repo. üòÜ&lt;/p&gt;

&lt;p&gt;Anyways, because of my isolationism, I have no reputation in any developer communities even though I‚Äôve been working for almost a decade now. This lack of reputation makes it extremely difficult to spread the word about stuff I want to share. For example, like most communities, the subreddit r/androiddev has a self-promotion rule that states that the maximum amount of posts you can do to promote your own creation is 50%. This is a big problem for me because up until less than a month ago, I didn‚Äôt even have a Reddit account!&lt;/p&gt;

&lt;p&gt;I will not post things that I‚Äôm genuinely not interested in just so that I can game the system. I have really just been interested in this project for the past three years. &lt;/p&gt;

&lt;p&gt;‚ùì Is that wrong? &lt;br&gt;
‚ùì Is there room for people like me who zoom in on one thing, spend years on it, and share once they deem it presentable? &lt;br&gt;
‚ùì Or are we living in a world of instant gratification where all you have to do is spend a few hours, days, or weeks on something and then proceed to market it?&lt;/p&gt;

&lt;p&gt;One stroke of good luck I had was when my manager at the job I had four years ago encouraged (or maybe even forced?) the entire team to write dev articles, even while at work. I wrote &lt;a href="https://proandroiddev.com/how-to-android-dagger-2-10-2-11-butterknife-mvp-part-1-eb0f6b970fd"&gt;Howto articles about dagger-android in Medium under the ProAndroidDev publication&lt;/a&gt;. The first ever article I wrote made it to &lt;a href="https://androidweekly.net/issues/issue-268"&gt;issue #268 of AndroidWeekly&lt;/a&gt;! I did spend months on the &lt;a href="https://github.com/vestrel00/android-dagger-butterknife-mvp"&gt;accompanying GitHub project&lt;/a&gt; so it was nice to see my hard work get recognition. At the time, I didn‚Äôt really think much of it. The editors of ProAndroidDev did all the marketing for me. I told them that I had no Twitter account. No Reddit account. I didn‚Äôt even know what AndroidWeekly was. From this, I managed to gain some followers and enough of a rapport with the ProAndroidDev editors, albeit four years ago, to allow me to get my newest article published under their publication.&lt;/p&gt;

&lt;p&gt;I have to keep in mind that having connections give you an incredible advantage that you can use as a platform to boost yourself up initially. It applies to everything. Landing your dream job. Meeting like-minded people. Getting a reservation at a restaurant (pre-COVID) that is always booked, let's say Dorsia? Most relevant to this article, having a reputation (or enough posts/karma) in forums such as r/androiddev allows you to self-promote when the time comes. A luxury that I currently do not have.&lt;/p&gt;

&lt;p&gt;This leads me to the next mistake...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-4-hoping-that-people-will-magically-discover-what-ive-built-without-promoting-it"&gt;
  &lt;/a&gt;
  Mistake #4 - Hoping that people will magically discover what I've built without promoting it.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twfsqzZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acy7glrh81vn2fgrryte.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twfsqzZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/acy7glrh81vn2fgrryte.jpg" alt="Image description" width="880" height="307"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I truly believe that a "good software or product will sell itself". It is a common expression for a reason right?&lt;/p&gt;

&lt;p&gt;‚ùì So, if my repo is not getting any traffic, then it must be because what I built sucks, right?&lt;/p&gt;

&lt;p&gt;As I mentioned earlier in this article, I already published an article in Medium a month ago. That was it for my promotion. I submitted a link to the medium article and my repo once to AndroidWeekly and KotlinWeekly but to no avail. I even emailed the curators of those legendary mailing lists explaining the amount of work and love I put into this project and how I think others should know about it. They are not responding. I don't blame them. Why should they look at or respond to some random person with no reputation when they probably have to sift through hundreds, if not thousands, of submissions?&lt;/p&gt;

&lt;p&gt;A month later, my repo has had less than 100 unique visitors (some of which are probably not even human). I'm not hunting for stars! I‚Äôm hunting for traffic. I sounded like an advertiser there... I don't know how else to say it. We all have to "advertise", at least a little bit in the beginning to kick things off. I feel that I owe it to myself and my family, for putting up with me sometimes spending a lot of time on this instead of with them, to get the repo looked at by enough human eyes to justify the amount of time that I've spent on it. &lt;/p&gt;

&lt;p&gt;It just happens to be that the easiest way to know if the community thinks a project is good is based on the amount of stars divided by the amount of views. The star/view ratio provides repo owners a heuristic calculation of how many people find the repo useful versus those that see it and just click it away. I could be completely wrong here, in which case please leave a comment and let me know your thoughts about it? &lt;/p&gt;

&lt;p&gt;I'm not trying to sell anything. I'm trying to help people solve their problems with anything related to Android Contacts management. I'm not going to get money from this. Will I get attention and fame? Maybe? I really don't want that, honestly. If that‚Äôs what I wanted, I would be doing things involving hot new stuff like Jetpack Compose instead of something that‚Äôs been around for over a decade.&lt;/p&gt;

&lt;p&gt;I might be contradicting myself here but I really just want to make sure that other Android devs out there are aware that they no longer have to fear Contacts like I did. There is now a Jetpack-like component that is fully documented with Howto guides on everything they can think of. They no longer have to scour the internet to find something that does not exist.&lt;/p&gt;

&lt;p&gt;At the end of it all, as long as I have &lt;strong&gt;truly&lt;/strong&gt; helped a handful (and I mean less than five) of other devs out in the world, then I have no regrets. Maybe I'll get sincere emails from three people letting me know how much my work helped them? Regardless, I will continue working on the project until I deem it complete and all issues have been closed.&lt;/p&gt;

&lt;p&gt;‚ùì BUT, how can others know the existence of the API I created if it does not appear on any search results in any search engines? &lt;/p&gt;

&lt;p&gt;Luckily, this is a mistake that I can still fix, hopefully... And no, I will not fix it with money. I will not pay to be featured in any mailing lists or to appear at the top of search results. I want the community to decide if what I had built should be used by others or not.&lt;/p&gt;

&lt;p&gt;So, I still think that "a good software or product will sell itself". However, I'll make a minor modification to that. &lt;/p&gt;

&lt;p&gt;"A good software or product will sell itself, once enough people have seen it."&lt;/p&gt;

&lt;p&gt;I will not spam the community. However, I will write genuine articles like this from time to time with new content I have not yet shared. By the way, this article took me around 10 hours to write, proof-read, rewrite, and repeat. I hope that the Dev.to community can consider that enough of a justification for this not to count as spam.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mistake-5-answering-ancient-questions-in-stackoverflow-using-the-apis-that-ive-built"&gt;
  &lt;/a&gt;
  Mistake #5 - Answering ancient questions in StackOverflow using the APIs that I've built.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jcEyq-xC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gumib3gt8lbk590vydv1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcEyq-xC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gumib3gt8lbk590vydv1.jpg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is tragic comedy. I was not aware about self-promotion rules in StackOverflow or dev forums in general. After all, I have just started participating in developer forums. But bliss cannot be used as an excuse!&lt;/p&gt;

&lt;p&gt;Anyways, I always thought that I could answer all contacts-related questions in StackOverflow after making my library public. After all, most of us find questions and answers in StackOverflow. So what better way to make sure people know about my API than answering questions in the stack?&lt;/p&gt;

&lt;p&gt;Excited and full of energy and determination, I began answering decade-old questions in the stack. I used a template for all the questions I answered. I did not save it, nor do I have access to them now, but I remember it being something like...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Android Contacts has just been &lt;a href="https://proandroiddev.com/android-contacts-reborn-19985c73ad43"&gt;Reborn&lt;/a&gt;! Using the &lt;a href="https://github.com/vestrel00/contacts-android"&gt;Contacts, Reborn library&lt;/a&gt;, you no longer have to deal with the complexities of &lt;code&gt;ContactsContract&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To answer your original question...&lt;/p&gt;

&lt;p&gt;"(quote original question here)"&lt;/p&gt;

&lt;p&gt;Using the Contacts, Reborn library...&lt;/p&gt;

&lt;p&gt;In Java,&lt;br&gt;
(insert code snippet of how to solve the problem in Java using my library)&lt;/p&gt;

&lt;p&gt;In Kotlin,&lt;br&gt;
(insert code snippet of how to solve the problem in Kotlin using my library)&lt;/p&gt;

&lt;p&gt;There is a lot more that the &lt;a href="https://github.com/vestrel00/contacts-android"&gt;Contacts, Reborn library&lt;/a&gt; can do. You can even build your own full-fledged contacts app with it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's probably not exactly that but it's the best that I can recall. &lt;/p&gt;

&lt;p&gt;Anyways, after around ten hours of answering around 20-30 questions, I continued to answer more questions. However, when I tried to post an answer on October 8, I got the message saying something like "this account can no longer post answers". Then, I noticed that I had a message from the mods. It said that I violated self-promotion rules. So, they removed all of the answers I posted. All of that hard work, excitement, and determination, vanished into thin air. Gone. Just like that. It hurt. It really did. I was sad, furious, emotional. However, I understood that rules have to be followed even if I did not know them. Bliss is no excuse! &lt;/p&gt;

&lt;p&gt;I took a screen recording of the message thread in my phone. Here is a screenshot of the message I got from the stack mods. I was too emotional at the time when I was reading it. &lt;strong&gt;In retrospect&lt;/strong&gt;, I could have taken a different approach to handling the situation üòÖ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jsKG6wtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjxbiztvo7jjl78982le.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jsKG6wtD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wjxbiztvo7jjl78982le.png" alt="Image description" width="880" height="749"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, &lt;strong&gt;in retrospect&lt;/strong&gt; (reading it again now), I could have handled the situation differently. I could have still said what I had to say (that I'm hurt) but just try again and only answer a few questions instead of trying to answer &lt;strong&gt;all&lt;/strong&gt; of them. I had over a hundred questions bookmarked and I was ready to spend tens of hours to answer them all!&lt;/p&gt;

&lt;p&gt;So, I sent them a heartfelt reply and then deleted my account. On a side note, it takes 24 hours for an account to get deleted in the stack. It's probably there to give emotional folks like me some time to calm down after getting the well-deserved hammer. There is even a message, and I paraphrase, "we noticed you just received the ban hammer, calm down and reconsider deleting your account?" &lt;/p&gt;

&lt;p&gt;I know you are curious to see the message I sent. Everyone loves a bit of drama, even if it isn't your favorite genre üòÜ. I consider this tragic comedy! I'll share it with you all. Only here in DEV.TO! Don't worry, it does not contain profanity or anything of the sort. It is &lt;strong&gt;not&lt;/strong&gt; not-safe-for-work (double negative). Even though I was emotional, my head was leveled enough to avoid sending a self-career-ending reply üòå. I knew who I was talking to. I was talking to hard-working mods that have to sift through hundreds and thousands of posts and make hard decisions like this knowing that they will get backlash from individuals. I was talking to people that keep the stack community alive and well for everyone (including you and me) to find answers. I was taking to people that have helped me get to where I am now in life. Who am I to disrespect them? I can't. I won't. &lt;/p&gt;

&lt;p&gt;Before I share a screenshot of my reply, please know the following.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I'm sharing this with you because I want to share my mistakes so you can avoid doing it yourself.&lt;/li&gt;
&lt;li&gt;I am not trying to hurt the StackOverflow community. If anything, I‚Äôm trying to help the moderators by having folks read my story as a cautionary tale!&lt;/li&gt;
&lt;li&gt;I respect, love, and admire, folks that are active in the StackOverflow community. I was just trying to be like them... but I failed.&lt;/li&gt;
&lt;li&gt;I still use StackOverflow to get answers, anonymously for now. I hope to create an account once again, when I feel like I deserve it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Without further ado, here is my reply...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AXmKjPxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/al0juctlly0c1x8b43ck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AXmKjPxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/al0juctlly0c1x8b43ck.png" alt="Image description" width="880" height="553"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reading it now after almost a month, I can see my heightened emotions. I made several grammatical errors as I only proofread it once. I was well aware that I was emotional when writing that at the time. I am typically patient and I wait to do things until I'm level-headed. However, I intentionally decided to write that reply immediately because I wanted my emotions to come through. I wanted to show them how it affected me and probably folks that have and who will experience the same thing that I did. I knew that if I had waited even just an hour, I would not be able to write a reply that conveyed what I truly felt. I don't regret writing that reply the way it is written. I felt like it had to be written that way. Otherwise, I would be doing myself (and others like me) injustice. &lt;/p&gt;

&lt;p&gt;I know for sure that I'm not the only one that went through this experience. Have you gone through this? How did you handle the situation? I'd love to know!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading!
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g2FLmMyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqqp3lvimni58n33phn0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g2FLmMyg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uqqp3lvimni58n33phn0.jpg" alt="Image description" width="880" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whether you read all of this article or just some parts of it, thank you ‚ù§Ô∏è üíó üíï üíû üíò üíñ&lt;/p&gt;

&lt;p&gt;I give every bit of love and care to this project, including the articles I write about it. I would appreciate any feedback. What do you think about the library? Did you make the same mistakes I made? Do you agree with the lessons I've learned? Any other thoughts? I sprinkled in some questions throughout the article, care to share your thoughts on any of them?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; I am working on a fun app that uses the library that I've built. It is already in a public repo. I still need to work on it a bit before I start ranting about it and getting others to contribute. I am excited about it though! This time, it will truly be "open source" ‚ù§Ô∏è&lt;/p&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>java</category>
      <category>showdev</category>
    </item>
    <item>
      <title>re:invent 2021 Sessions</title>
      <author>philbasford</author>
      <pubDate>Thu, 04 Nov 2021 22:51:00 +0000</pubDate>
      <link>https://dev.to/aws-builders/reinvent-2021-sessions-3pc6</link>
      <guid>https://dev.to/aws-builders/reinvent-2021-sessions-3pc6</guid>
      <description>&lt;p&gt;It is back and it is in person, it is re:invent! Now comes the biggest challenge, working out where to go and which sessions to catch. Therefore I have put this re:invent session guide/recommendations list together so that if your are into ML Ops, ML Architecture, Edge Computing or Data Analytics then it can act as a starting point. However please leave sometime in your schedule because as AWS announce new stuff they will add more sessions.&lt;/p&gt;

&lt;p&gt;Hang on, what if you are not going, then your are like me. I have to stay home for some personal reasons. However you can still catch the keynotes and leadership sessions on the live stream. Do not forget the big three keynotes; Adam Selipsky (taking over from Andy), Werner Vogels (always dev centric), Swami Sivasubramanian (all ML). Later you can also use this guide to watch the Breakout Session once AWS have made them available on demand.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sessions"&gt;
  &lt;/a&gt;
  Sessions
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Session ID&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;LINK&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AIM320&lt;/td&gt;
&lt;td&gt;Implementing MLOps practices with Amazon SageMaker&lt;/td&gt;
&lt;td&gt;Breakout Session&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.google.com/calendar/render?action=TEMPLATE&amp;amp;text=AIM320%09Implementing%20MLOps%20practices%20with%20Amazon%20SageMaker&amp;amp;location=Palazzo%20C%2C%20The%20Venetian&amp;amp;details=Implementing%20MLOps%20practices%20helps%20data%20scientists%20and%20operations%20engineers%20collaborate%20to%20prepare%2C%20build%2C%20train%2C%20deploy%2C%20and%20manage%20models%20at%20scale.%20During%20this%20session%2C%20explore%20the%20breadth%20of%20MLOps%20features%20in%20Amazon%20SageMaker%20that%20help%20you%20provision%20consistent%20model%20development%20environments%2C%20automate%20ML%20workflows%2C%20implement%20CI%2FCD%20pipelines%20for%20ML%2C%20monitor%20models%20in%20production%2C%20and%20standardize%20model%20governance%20capabilities.%20Then%2C%20hear%20from%20Vanguard%20as%20they%20share%20their%20journey%20enabling%20MLOps%20to%20achieve%20ML%20at%20scale%20for%20their%20polyglot%20model%20development%20platforms%20using%20Amazon%20SageMaker%20features%2C%20including%20SageMaker%20projects%2C%20SageMaker%20Pipelines%2C%20SageMaker%20Model%20Registry%2C%20and%20SageMaker%20Model%20Monitor.&amp;amp;dates=20211202T223000Z%2F20211202T233000Z"&gt;Invite&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AIM407&lt;/td&gt;
&lt;td&gt;Train deep learning models at scale with Amazon SageMaker&lt;/td&gt;
&lt;td&gt;Breakout Session&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.google.com/calendar/render?action=TEMPLATE&amp;amp;text=AIM407%09Train%20deep%20learning%20models%20at%20scale%20with%20Amazon%20SageMaker&amp;amp;location=Palazzo%20A%2C%20The%20Venetian&amp;amp;details=Today%2C%20AWS%20customers%20use%20Amazon%20SageMaker%20to%20train%20and%20tune%20millions%20of%20machine%20learning%20(ML)%20models%20with%20billions%20of%20parameters.%20In%20this%20session%2C%20learn%20about%20advanced%20SageMaker%20capabilities%20that%20can%20help%20you%20manage%20large-scale%20model%20training%20and%20tuning%2C%20such%20as%20distributed%20training%2C%20automatic%20model%20tuning%2C%20optimizations%20for%20deep%20learning%20algorithms%2C%20debugging%2C%20profiling%2C%20and%20model%20checkpointing%2C%20so%20that%20even%20the%20largest%20ML%20models%20can%20be%20trained%20in%20record%20time%20for%20the%20lowest%20cost.%20Then%2C%20hear%20from%20Aurora%2C%20a%20self-driving%20vehicle%20technology%20company%2C%20on%20how%20they%20use%20SageMaker%20training%20capabilities%20to%20train%20large%20perception%20models%20for%20autonomous%20driving%20using%20massive%20amounts%20of%20images%2C%20video%2C%20and%203D%20point%20cloud%20data.&amp;amp;dates=20211201T023000Z%2F20211201T033000Z"&gt;Invite&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AIM405&lt;/td&gt;
&lt;td&gt;Right-sizing Amazon SageMaker compute instances for ML model training and inference&lt;/td&gt;
&lt;td&gt;Chalk Talk&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.google.com/calendar/render?action=TEMPLATE&amp;amp;text=AIM405%09Right-sizing%20Amazon%20SageMaker%20compute%20instances%20for%20ML%20model%20training%20and%20inference&amp;amp;location=Summit%20217%2C%20Caesars%20Forum&amp;amp;details=Amazon%20SageMaker%20offers%20several%20compute%20capabilities%20and%20instance%20types%20to%20meet%20the%20needs%20of%20your%20machine%20learning%20(ML)%20use%20cases%2C%20including%20computer%20vision%2C%20recommendation%20engines%2C%20and%20natural%20language%20processing.%20In%20this%20session%2C%20discover%20the%20compute%20options%20available%20to%20you%2C%20including%20GPUs%2C%20CPUs%2C%20and%20AWS%20Inferentia.%20Learn%20the%20best%20practices%20and%20essential%20criteria%2C%20including%20price%2C%20performance%2C%20flexibility%20to%20support%20ML%20frameworks%2C%20and%20ease%20of%20use%2C%20so%20you%20can%20choose%20the%20right%20capabilities%20for%20your%20ML%20workload.&amp;amp;dates=20211130T013000Z%2F20211130T023000Z"&gt;Invite&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AIM413&lt;/td&gt;
&lt;td&gt;Detect machine learning model drift in production&lt;/td&gt;
&lt;td&gt;Chalk Talk&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.google.com/calendar/render?action=TEMPLATE&amp;amp;text=AIM413%09Detect%20machine%20learning%20model%20drift%20in%20production&amp;amp;location=Level%201%2C%20Forum%20104%2C%20Caesars%20Forum&amp;amp;details=One%20of%20the%20major%20factors%20that%20can%20affect%20the%20accuracy%20of%20models%20is%20the%20difference%20between%20data%20used%20to%20generate%20predictions%20and%20data%20used%20for%20training.%20For%20example%2C%20changing%20economic%20conditions%20could%20drive%20new%20interest%20rates%20affecting%20home%20purchasing%20predictions.%20Amazon%20SageMaker%20Model%20Monitor%20automatically%20detects%20drift%20in%20deployed%20models%20and%20provides%20detailed%20alerts%20that%20help%20identify%20the%20source%20of%20the%20problem%20and%20trigger%20model%20retraining%20and%20a%20validation%20pipeline.%20In%20this%20chalk%20talk%2C%20also%20learn%20how%20you%20can%20use%20human-in-the-loop%20to%20validate%20model%20predictions.&amp;amp;dates=20211130T030000Z%2F20211130T040000Z"&gt;Invite&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DOP211&lt;/td&gt;
&lt;td&gt;Building scalable machine learning pipelines&lt;/td&gt;
&lt;td&gt;Chalk Talk&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ARC323&lt;/td&gt;
&lt;td&gt;Designing Well-Architected machine learning workloads&lt;/td&gt;
&lt;td&gt;Chalk Talk&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;KYN003&lt;/td&gt;
&lt;td&gt;Swami Sivasubramanian Keynote&lt;/td&gt;
&lt;td&gt;Keynote&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AIM401&lt;/td&gt;
&lt;td&gt;Create, automate, and manage end-to-end ML workflows at scale&lt;/td&gt;
&lt;td&gt;Workshop&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.google.com/calendar/render?action=TEMPLATE&amp;amp;text=AIM401%09Create%2C%20automate%2C%20and%20manage%20end-to-end%20ML%20workflows%20at%20scale&amp;amp;location=Cristal%201%2C%20Wynn&amp;amp;details=In%20this%20workshop%2C%20learn%20how%20to%20orchestrate%20machine%20learning%20(ML)%20workflows%20across%20each%20step%20of%20the%20ML%20process%2C%20including%20exploring%20and%20preparing%20data%2C%20experimenting%20with%20different%20algorithms%20and%20parameters%2C%20training%20and%20tuning%20models%2C%20and%20deploying%20models%20to%20production%20using%20Amazon%20SageMaker%20Pipelines%20and%20SageMaker%20projects.%20SageMaker%20Pipelines%20makes%20it%20easy%20to%20manage%20dozens%20of%20ML%20models%20and%20massive%20volumes%20of%20data%20and%20to%20track%20thousands%20of%20training%20experiments.%20Learn%20how%20to%20share%20and%20reuse%20workflows%2C%20helping%20you%20scale%20ML%20throughout%20your%20organization.&amp;amp;dates=20211129T184500Z%2F20211129T210000Z"&gt;Invite&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IOT306&lt;/td&gt;
&lt;td&gt;Building a people counter with anomaly detection using AWS IoT and ML&lt;/td&gt;
&lt;td&gt;Workshop&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#must-sees"&gt;
  &lt;/a&gt;
  Must sees
&lt;/h1&gt;

&lt;p&gt;Out of these 10, my highlights and must see list, that I can not wait to catch is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Implementing MLOps practices with Amazon SageMaker&lt;/strong&gt; : ML Ops is not all about pipelines, however they are one of the key technology enablers. This session is looking at Amazon SageMaker pipelines and how to rapidly deploy your models &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Detect machine learning model drift in production&lt;/strong&gt; : One of my personal passions I speak about is the 360 view of a model. This is the business impact, the ML performance (accuracy, etc), System Performance, Inference Observability, and Cost. This session will look in detail at ML performance and detecting drift &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Designing Well-Architected machine learning workloads&lt;/strong&gt; : AWS has just released an update to the &lt;a href="https://docs.aws.amazon.com/wellarchitected/latest/machine-learning-lens/wellarchitected-machine-learning-lens.pdf#machine-learning-lens"&gt;Well Architected ML Len&lt;/a&gt; and this session will cover all the best practice about how to lower your costs, keep your security rock tight, cope with failures, scale to millions of predictions and keep a watchful eye.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#fun"&gt;
  &lt;/a&gt;
  Fun!
&lt;/h1&gt;

&lt;p&gt;So what about the parties and the fun! If your in Vegas checkout:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Midnight Madness&lt;/li&gt;
&lt;li&gt;re:Play&lt;/li&gt;
&lt;li&gt;Amazon‚Äôs World Famous Chicken Wing Eating Contest&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are staying home:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Checkout your local &lt;a href="https://aws.amazon.com/developer/community/usergroups/"&gt;user group&lt;/a&gt;. I know some are doing local watch parties! thats a nice way to still feel part of it.
&lt;/li&gt;
&lt;li&gt;Another fun thing also I know is happening is ComSum (Community Summit UK) &lt;a href="http://www.comsum.co.uk"&gt;www.comsum.co.uk&lt;/a&gt; will be back in action. ComSum will be giving you a byte size digest of the days big news and expert punditry on everything happening in Vegas.  This will include myself returning as one of their ML and Data Pundits. More details soon!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lastly, Don't worry I will be at re:invent next year, so watch out Vegas! &lt;/p&gt;

</description>
    </item>
    <item>
      <title>MongoDB through Mongoose...</title>
      <author>Roopali Singh</author>
      <pubDate>Thu, 04 Nov 2021 22:21:28 +0000</pubDate>
      <link>https://dev.to/roopalisingh/mongodb-through-mongoose-3fbd</link>
      <guid>https://dev.to/roopalisingh/mongodb-through-mongoose-3fbd</guid>
      <description>&lt;p&gt;Hi thereüëã,&lt;/p&gt;

&lt;p&gt;In this guide we will be learning how to integrate &lt;code&gt;MongoDB&lt;/code&gt; in our project using &lt;code&gt;Mongoose&lt;/code&gt;.&lt;br&gt;
We will be assuming that you have already setup your node.js app&lt;br&gt;
(&lt;em&gt;or the backend of your app&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; is an open-source document database and leading &lt;code&gt;NoSQL&lt;/code&gt; database.&lt;br&gt;
&lt;strong&gt;Mongoose&lt;/strong&gt; is an Object Data Modelling(&lt;code&gt;ODM&lt;/code&gt;) library for &lt;code&gt;MongoDB&lt;/code&gt; and &lt;code&gt;Node.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Instead of connecting our node app directly to MongoDB, we will use Mongoose.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q8FYSgw6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbqbu4banu389xdv2mp0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8FYSgw6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbqbu4banu389xdv2mp0.PNG" alt="MongoDB managed via Mongoose" width="808" height="416"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#fasten-your-seat-belt-cause-we-are-about-to-start-our-journey"&gt;
  &lt;/a&gt;
  üöÄ Fasten your seat belt cause we are about to start our journey!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6Vt_Eq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e58baslhwltqgptgbbwb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6Vt_Eq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e58baslhwltqgptgbbwb.png" alt="are you ready" width="880" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this guide, we will be storing &lt;code&gt;user&lt;/code&gt; info. in our database.&lt;br&gt;
(&lt;em&gt;If you're working on complete MERN stack then all of these steps are meant to be perform in the backend of your app.&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;&lt;span&gt;1.&lt;/span&gt; Start with installing &lt;code&gt;Mongoose&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;span&gt;2.&lt;/span&gt; Create a file &lt;code&gt;userModel.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In this file, we will create a &lt;code&gt;userSchema&lt;/code&gt;. A &lt;code&gt;schema&lt;/code&gt; is the structure of the database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// It atomatically assigns a unique _id, so we don't need to&lt;/span&gt;
    &lt;span class="c1"&gt;// define another id for it.&lt;/span&gt;
    &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// Timestamp of creating a record and last update of record.&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;span&gt;3.&lt;/span&gt; Now we will call &lt;code&gt;mongoose.model()&lt;/code&gt; on our &lt;code&gt;schema&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A &lt;code&gt;mongoose model&lt;/code&gt; is responsible for creating, querying and reading documents from the mongoDB database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#your-raw-usermodeljs-endraw-file-should-look-like-this-now"&gt;
  &lt;/a&gt;
  Your &lt;code&gt;userModel.js&lt;/code&gt; file should look like this now:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;timestamps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userSchema&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;span&gt;4.&lt;/span&gt; Now lets create another file named &lt;code&gt;userRouter.js&lt;/code&gt; to define our API routes for performing &lt;strong&gt;CRUD operations&lt;/strong&gt; on it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./userModel.js &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// express.Router() =&amp;gt;  a function to make code Modular, instead of&lt;/span&gt;
&lt;span class="c1"&gt;// creating all routes in server.js we can define multiple files&lt;/span&gt;
&lt;span class="c1"&gt;// to have our routers...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// nature of mongoose operation is async&lt;/span&gt;
&lt;span class="c1"&gt;// so we will define the async functions here.&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;span&gt;4.&lt;/span&gt; Before defining our routes in the &lt;code&gt;userRouter.js&lt;/code&gt;, we will first connect the &lt;code&gt;mongoose&lt;/code&gt; to the &lt;code&gt;database&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For this we need to add a few lines of code in the &lt;code&gt;server.js&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URL&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongodb://localhost/your_app_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;useCreateIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;span&gt;5.&lt;/span&gt; Just two more lines in the &lt;code&gt;server.js&lt;/code&gt; to connect &lt;code&gt;server.js&lt;/code&gt; to &lt;code&gt;userRouter.js&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./userRouter.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/api/users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-raw-serverjs-endraw-file-should-look-like-this-now"&gt;
  &lt;/a&gt;
  The &lt;code&gt;server.js&lt;/code&gt; file should look like this now:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// npm install dotenv&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./router/userRouter.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// to use .env file content&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;urlencoded&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;extended&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt;

&lt;span class="c1"&gt;// To connect mongoose to mongoDB database&lt;/span&gt;
&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGODB_URL&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongodb://localhost/your_app_name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;useNewUrlParser&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;useUnifiedTopology&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;useCreateIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// To connect server.js to userRouter.js&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/api/users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// listen command&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Serve at http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#so-now-everything-is-connected-to-everything"&gt;
  &lt;/a&gt;
  üåè So now everything is connected to everything üë©üèª‚Äçüíª
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aor01nHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpmbsv61gs3n631ejpxf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aor01nHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpmbsv61gs3n631ejpxf.PNG" alt="Everything is connected" width="742" height="425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;6.&lt;/span&gt; It's time to go back to &lt;code&gt;userRouter.js&lt;/code&gt; file and define the routes to perform the &lt;strong&gt;CRUD operations&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./userModel.js &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// 1) to read/fetch all users:&lt;/span&gt;

&lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/seed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// there is no condition defined in find, so it will&lt;/span&gt;
    &lt;span class="c1"&gt;// fetch all users.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allUsers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;

    &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;allUsers&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;// 2) to create new user:&lt;/span&gt;

&lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/register&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// A request body is data sent by the client to your API.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createdUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;createdUser&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;// 3) to update existing user:&lt;/span&gt;
&lt;span class="c1"&gt;// first we need to find that user and then update its info.&lt;/span&gt;

&lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/update&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;editUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;


    &lt;span class="c1"&gt;// When there are no matches find() returns [].&lt;/span&gt;
    &lt;span class="c1"&gt;// So we could not use the condition: if(!editUser){...}&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;editUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;No User Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;editUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;editUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;editUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updatedUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;editUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;updatedUser&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="c1"&gt;// 4) to delete a user:&lt;/span&gt;
&lt;span class="c1"&gt;// first we need to find that user and then delete it.&lt;/span&gt;

&lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/delete&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;


    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;deleteUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;No User Found&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userDeleted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;deleteUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteOne&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User removed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;userRouter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#we-have-successfully-integrated-mongoose-in-our-webapp-"&gt;
  &lt;/a&gt;
  üèÜ We have successfully integrated Mongoose in our webapp üî•.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---NGnpR3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djre3cqsmdqzrv6ornt1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---NGnpR3O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djre3cqsmdqzrv6ornt1.png" alt="Mission Passed" width="500" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we just need to make a &lt;code&gt;request&lt;/code&gt; to our server.&lt;br&gt;
For eg. To fetch all users, make a &lt;code&gt;get&lt;/code&gt; request to:&lt;br&gt;
&lt;strong&gt;"/api/users/seed"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are several other functions with these, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sort()&lt;/li&gt;
&lt;li&gt;findById()&lt;/li&gt;
&lt;li&gt;findOne()&lt;/li&gt;
&lt;li&gt;findByIdAndUpdate()&lt;/li&gt;
&lt;li&gt;deleteMany() &lt;/li&gt;
&lt;li&gt;updateMany() and many more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You could read more on this from &lt;a href="https://mongoosejs.com/docs/queries.html"&gt;Mongoose Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---mhKD_aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8140wkb0mh1u1gag4bb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---mhKD_aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o8140wkb0mh1u1gag4bb.jpg" alt="The End" width="820" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>How to Use Liquibase to Update the Schema of Your JHipster Application</title>
      <author>Anthony Viard ü•ë</author>
      <pubDate>Thu, 04 Nov 2021 22:05:26 +0000</pubDate>
      <link>https://dev.to/entando/how-to-use-liquibase-to-update-the-schema-of-your-jhipster-application-1cm3</link>
      <guid>https://dev.to/entando/how-to-use-liquibase-to-update-the-schema-of-your-jhipster-application-1cm3</guid>
      <description>&lt;p&gt;Hey my fellow developers,&lt;/p&gt;

&lt;p&gt;Liquibase is an open-source solution that helps you track, version, and deploy database changes. It adds version control for changes to your database schema, makes database upgrades repeatable across environments, and supports rollbacks so you can undo changes when it‚Äôs needed.&lt;/p&gt;

&lt;p&gt;It‚Äôs the solution chosen by JHipster as well as Entando to manage database updates.&lt;/p&gt;

&lt;p&gt;In this blog post, we‚Äôll explore the Liquibase architecture, and how we can incrementally upgrade the database schema for our own JHipster and Entando applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#liquibase-architecture"&gt;
  &lt;/a&gt;
  Liquibase Architecture
&lt;/h2&gt;

&lt;p&gt;Liquibase defines a master file (aka &lt;code&gt;master.xml&lt;/code&gt; in JHipster) as well as changelog files that represent the incremental updates to your database schema. A changelog file contains a changeSet (e.g add, edit or delete a table) while the master file defines the order in which the database updates are to be run.&lt;/p&gt;

&lt;p&gt;Here are some examples of what a Liquibase architecture looks like from the &lt;a href="https://www.liquibase.org/get-started/best-practices"&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-directory-structure"&gt;
  &lt;/a&gt;
  The directory structure
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt; &lt;span class="s"&gt;com&lt;/span&gt;
      &lt;span class="s"&gt;example&lt;/span&gt;
        &lt;span class="s"&gt;db&lt;/span&gt;
          &lt;span class="s"&gt;changelog&lt;/span&gt;
            &lt;span class="s"&gt;db.changelog-master.xml&lt;/span&gt;
            &lt;span class="s"&gt;db.changelog-1.0.xml&lt;/span&gt;
            &lt;span class="s"&gt;db.changelog-1.1.xml&lt;/span&gt;
            &lt;span class="s"&gt;db.changelog-2.0.xml&lt;/span&gt;
          &lt;span class="s"&gt;DatabasePool.java&lt;/span&gt;
          &lt;span class="s"&gt;AbstractDAO.java&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-master-file"&gt;
  &lt;/a&gt;
  The master file
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;databaseChangeLog&lt;/span&gt; 
 &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.liquibase.org/xml/ns/dbchangelog"&lt;/span&gt; 
 &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt; 
 &lt;span class="na"&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class="s"&gt;"http://www.liquibase.org/xml/ns/dbchangelog
                     http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
 &lt;span class="nt"&gt;&amp;lt;include&lt;/span&gt;  &lt;span class="na"&gt;file=&lt;/span&gt;&lt;span class="s"&gt;"com/example/db/changelog/db.changelog-1.0.xml"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;  
 &lt;span class="nt"&gt;&amp;lt;include&lt;/span&gt;  &lt;span class="na"&gt;file=&lt;/span&gt;&lt;span class="s"&gt;"com/example/db/changelog/db.changelog-1.1.xml"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;  
 &lt;span class="nt"&gt;&amp;lt;include&lt;/span&gt;  &lt;span class="na"&gt;file=&lt;/span&gt;&lt;span class="s"&gt;"com/example/db/changelog/db.changelog-2.0.xml"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/databaseChangeLog&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#a-sample-changelog"&gt;
  &lt;/a&gt;
  A sample changelog
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;databaseChangeLog&lt;/span&gt;  
 &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.liquibase.org/xml/ns/dbchangelog"&lt;/span&gt;  
 &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt;  
 &lt;span class="na"&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class="s"&gt;"http://www.liquibase.org/xml/ns/dbchangelog
                     http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
 &lt;span class="nt"&gt;&amp;lt;changeSet&lt;/span&gt;  &lt;span class="na"&gt;author=&lt;/span&gt;&lt;span class="s"&gt;"authorName"&lt;/span&gt;  &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"changelog-1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
   &lt;span class="nt"&gt;&amp;lt;createTable&lt;/span&gt;  &lt;span class="na"&gt;tableName=&lt;/span&gt;&lt;span class="s"&gt;"TablesAndTables"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
     &lt;span class="nt"&gt;&amp;lt;column&lt;/span&gt;  &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"COLUMN1"&lt;/span&gt;  &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"TEXT"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
       &lt;span class="nt"&gt;&amp;lt;constraints&lt;/span&gt;  &lt;span class="na"&gt;nullable=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt;  &lt;span class="na"&gt;primaryKey=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;  &lt;span class="na"&gt;unique=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; 
     &lt;span class="nt"&gt;&amp;lt;/column&amp;gt;&lt;/span&gt; 
   &lt;span class="nt"&gt;&amp;lt;/createTable&amp;gt;&lt;/span&gt; 
 &lt;span class="nt"&gt;&amp;lt;/changeSet&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/databaseChangeLog&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#your-liquibase-survival-kit"&gt;
  &lt;/a&gt;
  Your Liquibase survival kit
&lt;/h2&gt;

&lt;p&gt;Every time you start your application, Liquibase checks if it is synchronized with the latest configuration in your master file, and deploys the new changesets if it‚Äôs not up to date. Liquibase uses the checksums of the previous changelogs to ensure their integrity and fires an alert if they have changed. Here are some tips to follow to ensure your database upgrades go smoothly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#1 Avoid modifying a changelog&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You should not change the content of a changelog once it has been executed on a database. Instead, perform a rollback or add a new changelog.&lt;/p&gt;

&lt;p&gt;If the validation fails, your database will not be able to start correctly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qCgBzJBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fct8th8l8zz24wfew25o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qCgBzJBh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fct8th8l8zz24wfew25o.png" alt="Image description" width="880" height="454"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#2 Keep database changes in order&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The master file executes the changelogs in the order they are defined. So, if you have a changelog that modifies a table created in a previous changelog, be sure to respect the order to have the proper plan executed. It‚Äôs recommended to keep a clear and maintainable file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#3 Keep changesets small&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The changeset is contained in a changelog and defines actions to perform in the database (e.g. create, drop, alter tables, etc.). By default, JHipster creates one changeset per entity. This is a good pattern to follow unless there‚Äôs a reason to make updates to multiple tables in a single changelog. Avoid creating BIG one-shot changesets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-update-your-schema-in-jhipster-6"&gt;
  &lt;/a&gt;
  How to Update Your Schema in JHipster 6
&lt;/h2&gt;

&lt;p&gt;JHipster makes it simple and intuitive to generate entities using JDL Studio or via the command line. Every time a new entity is created, a new changeset is generated and the master file is updated. However, modifying an existing entity will simply update the original changelog. If this changeset has already been run, we break rule #1.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#consolidate-schema-changes-in-a-single-changeset"&gt;
  &lt;/a&gt;
  Consolidate schema changes in a single changeset
&lt;/h3&gt;

&lt;p&gt;When adding a new database entity, it‚Äôs quite common during local development to make several changes to the data model before arriving at the final schema. In this case, the easiest approach is to make updates to the entity as needed and only commit the final changelog that‚Äôs generated once you‚Äôve finished development.&lt;/p&gt;

&lt;p&gt;However, a changelog that has already been applied to a given environment cannot be modified without risking potential data loss or other breaking changes.&lt;/p&gt;

&lt;p&gt;The solution is to generate incremental changes using Maven and Gradle plugins.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generate-incremental-changesets-with-plugins"&gt;
  &lt;/a&gt;
  Generate incremental changesets with plugins
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://docs.liquibase.com/tools-integrations/maven/home.html"&gt;Maven&lt;/a&gt; and &lt;a href="https://github.com/liquibase/liquibase-gradle-plugin"&gt;Gradle&lt;/a&gt; plugins, combined with the &lt;a href="https://github.com/liquibase/liquibase-hibernate"&gt;Liquibase Hibernate&lt;/a&gt; plugin, can be used to generate incremental changesets without breaking rule &lt;strong&gt;#1&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;JHipster provides the configuration to make it work out of the box with most databases but you may need to modify it in some circumstances. Check &lt;a href="https://docs.liquibase.com/tools-integrations/maven/maven-pom-file.html"&gt;the official guide&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;Below, we‚Äôll cover &lt;a href="https://github.com/entando-samples/jhipster-sample-app-entando"&gt;a sample app from Entando&lt;/a&gt; that‚Äôs using an H2 database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maven-configuration"&gt;
  &lt;/a&gt;
  Maven configuration
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.liquibase&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;liquibase-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${liquibase.version}&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;changeLogFile&amp;gt;&lt;/span&gt;${project.basedir}/src/main/resources/config/liquibase/master.xml&lt;span class="nt"&gt;&amp;lt;/changeLogFile&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;diffChangeLogFile&amp;gt;&lt;/span&gt;${project.basedir}/src/main/resources/config/liquibase/changelog/${maven.build.timestamp}_changelog.xml&lt;span class="nt"&gt;&amp;lt;/diffChangeLogFile&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;driver&amp;gt;&lt;/span&gt;org.h2.Driver&lt;span class="nt"&gt;&amp;lt;/driver&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;jdbc:h2:file:${project.build.directory}/h2db/db/sample&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;defaultSchemaName&amp;gt;&amp;lt;/defaultSchemaName&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;username&amp;gt;&lt;/span&gt;sample&lt;span class="nt"&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;password&amp;gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;referenceUrl&amp;gt;&lt;/span&gt;hibernate:spring:com.entando.sample.domain?dialect=org.hibernate.dialect.H2Dialect&lt;span class="ni"&gt;&amp;amp;amp;&lt;/span&gt;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&lt;span class="ni"&gt;&amp;amp;amp;&lt;/span&gt;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy&lt;span class="nt"&gt;&amp;lt;/referenceUrl&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;verbose&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/verbose&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;logging&amp;gt;&lt;/span&gt;debug&lt;span class="nt"&gt;&amp;lt;/logging&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;contexts&amp;gt;&lt;/span&gt;!test&lt;span class="nt"&gt;&amp;lt;/contexts&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;diffExcludeObjects&amp;gt;&lt;/span&gt;oauth_access_token, oauth_approvals, oauth_client_details, oauth_client_token, oauth_code, oauth_refresh_token&lt;span class="nt"&gt;&amp;lt;/diffExcludeObjects&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#workflow"&gt;
  &lt;/a&gt;
  Workflow
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Update your entity with JHipster using the command &lt;code&gt;jhipster entity yourEntityName&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Discard the changes made by JHipster in the Entity changelog &lt;code&gt;git checkout -- [ENTITY_CHANGELOG].xml&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;./mvnw liquibase:diff&lt;/code&gt; for Maven or &lt;code&gt;./gradlew liquibaseDiffChangelog -PrunList=diffLog&lt;/code&gt; for Gradle&lt;/li&gt;
&lt;li&gt;A new changelog will be generated that contains the diff between your updated Entity and the original database table.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In my application, I have added a customer entity with a field ‚Äúname‚Äù. Later on, I want to add an ‚Äúage‚Äù field so I update it with JHipster: &lt;code&gt;jhipster entity customer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CVMuslVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxc6ffu52wo8ip8ccoyy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CVMuslVa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxc6ffu52wo8ip8ccoyy.png" alt="Image description" width="720" height="322"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-C-fxxQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v351kythiys38trim7kc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-C-fxxQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v351kythiys38trim7kc.png" alt="Image description" width="621" height="104"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The changelog is now updated with the ‚Äúage‚Äù field, but because my first version has already been run against my database I will break rule &lt;strong&gt;#1&lt;/strong&gt;. I‚Äôll need to revert this file and replace it with the original version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nxSxVt-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/biutrjscc1gn2kpu36md.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nxSxVt-S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/biutrjscc1gn2kpu36md.png" alt="Image description" width="720" height="395"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Next, I can run &lt;code&gt;./mvnw liquibase:diff&lt;/code&gt;. I now have an incremental changelog that contains just the updates that I made. Now, I can add this new changelog to the &lt;code&gt;master.xml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tVjE8761--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jk9qjkcns137rczhw4ca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tVjE8761--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jk9qjkcns137rczhw4ca.png" alt="Image description" width="559" height="133"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Note: This could not work if you‚Äôre using an H2 database. However, you can easily create incremental changelogs manually by extracting the generated XML code from the changelog generated by JHipster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#incremental-changelogs-in-jhipster-7"&gt;
  &lt;/a&gt;
  Incremental changelogs in JHipster 7
&lt;/h2&gt;

&lt;p&gt;With the release of JHipster 7, the &lt;code&gt;--incremental-changelog&lt;/code&gt; option allows us to generate a separate changelog when modifying an Entity.&lt;/p&gt;

&lt;p&gt;This means we don‚Äôt need to rollback the original changelog anymore, and we can generate incremental changelogs for our entities without breaking rule &lt;strong&gt;#1&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;You can run JHipster with the incremental option: &lt;code&gt;jhipster --incremental-changelog&lt;/code&gt;. It also works when you import a JDL, e.g. &lt;code&gt;jhipster jdl app.jdl --incremental-changelog --with-entities&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can check the ‚ÄúincrementalChangelog‚Äù entry is set to ‚Äútrue‚Äù in &lt;code&gt;.yo-rc.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AREelzMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8plx2aa0ykao99v3kii6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AREelzMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8plx2aa0ykao99v3kii6.png" alt="Image description" width="610" height="130"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Then, create the entity as usual with &lt;code&gt;jhipster entity customer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GYoK1fWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cc59eg8bhkurzk8t3xk9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GYoK1fWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cc59eg8bhkurzk8t3xk9.png" alt="Image description" width="880" height="393"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Finally, update the entity by running the same command to add a new field.&lt;/p&gt;

&lt;p&gt;Two new changelogs are generated, one for updating the entity and the second for injecting sample data for development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XKMPPsTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8erxvkh5z2m5uvqv31v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKMPPsTE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8erxvkh5z2m5uvqv31v.png" alt="Image description" width="850" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VWFfsP27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82qf0a6wvudbb029vkff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VWFfsP27--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82qf0a6wvudbb029vkff.png" alt="Image description" width="880" height="306"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7tX-FQRZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk258yhox71ciu1fpy3x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7tX-FQRZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk258yhox71ciu1fpy3x.png" alt="Image description" width="880" height="425"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Incremental changelogs work well when you don‚Äôt need to execute a lot of changes for a given entity, but multiplying the number of changelogs can lead to complex change management. If there‚Äôs no risk of breaking your existing database, consider merging changelogs to simplify your project structure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Upgrading your database schema can be tricky, especially when working with multiple environments. In today‚Äôs blog, we learned how Liquibase helps you version control updates to your schema, and how to generate incremental changesets for entities generated by JHipster.&lt;/p&gt;

&lt;p&gt;Entando is an application composition platform for Kubernetes that adds support for generating micro frontends along with JHipster microservices. Entando 6.3.2 currently supports JHipster 6 and will be updated to JHipster 7 in the next Entando release.&lt;/p&gt;

</description>
      <category>jhipster</category>
      <category>liquibase</category>
      <category>database</category>
      <category>opensource</category>
    </item>
    <item>
      <title>GitHub Copilot blew my mind on a code-along exercise</title>
      <author>Damian Demasi</author>
      <pubDate>Thu, 04 Nov 2021 21:47:46 +0000</pubDate>
      <link>https://dev.to/colocodes/github-copilot-blew-my-mind-on-a-code-along-exercise-186n</link>
      <guid>https://dev.to/colocodes/github-copilot-blew-my-mind-on-a-code-along-exercise-186n</guid>
      <description>&lt;p&gt;GitHub Copilot has surprised me beyond what I could have ever expected. I guess artificial intelligence is more capable than I thought initially, and this is a great example of how it can help us to code faster and better.&lt;/p&gt;

&lt;p&gt;My idea about using GitHub Copilot as a web developer was that it will be suggesting function and method names with a hint of what the method could do given a comment previously written by the programmer. My mind exploded ü§Ø when it actually suggested the full code on a video code-along exercise I was doing on Ruby!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-guessing-game"&gt;
  &lt;/a&gt;
  The guessing game
&lt;/h2&gt;

&lt;p&gt;I honestly had forgotten I installed the Copilot extension on VSCode (I have been very busy lately &lt;a href="https://dev.to/colocodes/how-ive-got-a-web-development-job-one-week-after-publishing-my-portfolio-3o6g"&gt;catching up on my new job&lt;/a&gt;). On a Saturday morning, I started with my regular studying ritual: I opened VSCode on half of the screen, which I had to update, something that included the &lt;em&gt;enabling&lt;/em&gt; of GitHub Copilot (more on that later), and on the other half I opened a Udemy course I'm doing on Ruby on Rails: &lt;a href="https://click.linksynergy.com/link?id=LO030NrbM0E&amp;amp;offerid=507388.519442&amp;amp;type=2&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fthe-complete-ruby-on-rails-developer-course%2F"&gt;The Complete Ruby on Rails Developer Course&lt;/a&gt;. The day before, I started working on a method and I was planning on continuing doing so.&lt;/p&gt;

&lt;p&gt;So, halfway through the video tutorial, I started typing away on my VSCode editor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I didn't have the chance to finish typing the name of the method that I was defining in Ruby, when suddenly, out of nowhere, GitHub Copilot suggested the rest of the code: not only the name of the method, but also its parameters, a loop, variable names, a return statement, and the whole logic. But that is not all: &lt;strong&gt;every single character was the same as the code in the Udemy video!&lt;/strong&gt; ü§Ø It even suggested a part of code that was further ahead on the video.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jQmaWkXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7shl9cy6pw3gn76kptz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jQmaWkXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7shl9cy6pw3gn76kptz.png" alt="GitHub Copilot blowing my mind" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZjAgjR_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13nxoizs3ia5bwjqpwwa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZjAgjR_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/13nxoizs3ia5bwjqpwwa.png" alt="GitHub Copilot blowing my mind" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I couldn't contain my excitement, and I started smiling like a 6-years-old on a Christmas morning.&lt;/p&gt;

&lt;p&gt;But then I thought: ü§î "I should disable this because otherwise, I won't be doing any code by myself, which is the whole point of the coding-along!".&lt;/p&gt;

&lt;p&gt;Even though I can see how useful and amazing this tool is, I won't be using it during my coding-along exercises. But I will definitely use it when building projects! It speeds up the development process greatly and helps to reduce mistakes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-github-copilot"&gt;
  &lt;/a&gt;
  What is GitHub Copilot
&lt;/h2&gt;

&lt;p&gt;GitHub Copilot is an extension that can be installed in most IDEs and text editors (including VSCode) and suggests lines of code, or entire functions, based on the &lt;a href="https://openai.com/"&gt;OpenAI engine&lt;/a&gt;. As it is trained on billions of lines of public code, I'm guessing the code from the Udemy video is on a public GitHub repository, allowing Copilot to match my code with the code in its database and make suggestions accordingly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jsS_W5g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hns33svjv215w60jnay5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jsS_W5g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hns33svjv215w60jnay5.png" alt="How GitHub Copilot works" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can learn more about this AI pair programmer on its &lt;a href="https://copilot.github.com/"&gt;official website&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-github-copilot"&gt;
  &lt;/a&gt;
  How to get GitHub Copilot
&lt;/h2&gt;

&lt;p&gt;To get GitHub Copilot you need a GitHub account, and to sign up to the waiting list. It can take a while to receive the invite to start using it (in my case was around 4 weeks). You can request the invite on &lt;a href="https://github.com/features/copilot/signup"&gt;GitHub Copilot's signup page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future"&gt;
  &lt;/a&gt;
  The future
&lt;/h2&gt;

&lt;p&gt;Is GitHub Copilot working for us, or are we working for it? This tool uses our code to, in turn, suggest code right back to us.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/h4Hz4w9Jgrc1EY9VkL/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/h4Hz4w9Jgrc1EY9VkL/giphy.gif" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, the question many are pondering is: are we feeding a monster that will replace us as developers and unleash the power of &lt;a href="https://en.wikipedia.org/wiki/Skynet_(Terminator)"&gt;Skynet&lt;/a&gt; on the world?&lt;/p&gt;

&lt;p&gt;Or is it just a tool to improve our work, and still lacks the creativity that we, humans, have when coding?&lt;/p&gt;




&lt;p&gt;üóûÔ∏è &lt;strong&gt;NEWSLETTER -&lt;/strong&gt; &lt;em&gt;If you want to hear about my latest articles and interesting software development content, &lt;a href="https://chipper-designer-8106.ck.page/1a819bffe8"&gt;subscribe to my newsletter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;üê¶ &lt;strong&gt;TWITTER -&lt;/strong&gt; &lt;em&gt;Follow me on &lt;a href="https://twitter.com/DamianDemasi"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Lessons Learned After Switching Jobs</title>
      <author>Daniel Starner</author>
      <pubDate>Thu, 04 Nov 2021 21:22:40 +0000</pubDate>
      <link>https://dev.to/dstarner/learned-lessons-of-switching-jobs-552g</link>
      <guid>https://dev.to/dstarner/learned-lessons-of-switching-jobs-552g</guid>
      <description>&lt;p&gt;Switching jobs in the tech industry can be an interesting adventure, especially if you've had years of experience at your previous position. The dramatic change can spur many emotions, experiences, and situations in your life; both good and bad. Since I know many are either actively going through this process or are considering it I figured I would leave my thoughts.&lt;/p&gt;

&lt;p&gt;For context, I recently went through a job transition and started working at &lt;a href="https://www.heroku.com"&gt;Heroku&lt;/a&gt; - aka &lt;a href="https://salesforce.com"&gt;Salesforce&lt;/a&gt; - this past September. I won't go into &lt;em&gt;why&lt;/em&gt; I left my previous position, but I want to discuss my discoveries once I started to get settled into my new position. I'm only &lt;a href="https://www.timeanddate.com/date/durationresult.html?d1=13&amp;amp;m1=9&amp;amp;y1=2021ti=on&amp;amp;"&gt;~51 days&lt;/a&gt; into this position, so while there is a lot more to learn, I find my immediate experiences to be most helpful for those considering switching.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#con-productivity-will-be-tough-at-first"&gt;
  &lt;/a&gt;
  Con: Productivity Will Be Tough at First
&lt;/h2&gt;

&lt;p&gt;During my transition phase, I decided to take almost a full month off between jobs. During this time, I went to Disney, played quite a bit of video games from my Steam backlog, and increased the amount of time that I was biking &amp;amp; exercising. It was all great! I felt like I had been revitalized as I was leaving behind some of the craziness of my old job, and I felt almost like a kid again with limited responsibilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/26ufnwz3wDUli7GU0/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/26ufnwz3wDUli7GU0/giphy.gif" alt="I was lazy" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The downside to this time off was that it was &lt;em&gt;very&lt;/em&gt; difficult to get back into the groove of working again, as I struggled to find the motivation the first few weeks to actually want to work. Obviously the paycheck üí∞ is the ultimate motivator, but it was still an adjustment to get back to always logging on 9-5 when I was getting used to being able to do whatever I wanted during the days of my unemployment.&lt;/p&gt;

&lt;p&gt;I will say that this process was made easier by switching to a fully remote position with a globally-located team. Since everyone on my team lives in different timezones, it made the work-day hours less strict, and I feel more able to get away from the keyboard in the middle of the day to do something for myself, like a bike ride or a nap. Now that I've been around for more than a month, that productivity and motivation is back, but wow, it was rough at the beginning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#grass-is-always-greener-on-the-other-side"&gt;
  &lt;/a&gt;
  Grass is Always Greener on the Other Side
&lt;/h2&gt;

&lt;p&gt;Without getting into specifics, I left my job because I was unhappy with something in their current position and I saw the opportunities of a better existence in a new environment. While I understood that no job was going to be perfect, I didn't realize the number of similarities that different companies shared, both good &amp;amp; bad. Many processes, experiences, and mindsets were similar to how my old job operated.&lt;/p&gt;

&lt;p&gt;It was nice to know that I could already be familiar with some things, but there were other places where I could build off that knowledge to learn the unique aspects of my new team. The two positions weren't as different as I had anticipated though.&lt;/p&gt;

&lt;p&gt;There was one area that I let myself be blind to during the transition process... &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#politics-exist-everywhere"&gt;
  &lt;/a&gt;
  Politics Exist Everywhere
&lt;/h3&gt;

&lt;p&gt;Without going into details, one of the reasons why I decided to find a new position was due to some internal bureaucratic decisions that I disagreed with. I got tired of playing politics for certain things that I thought were self-explanatory, and organization changes were occurring that went against some of the foundational ideals that my department had spent years building up.&lt;/p&gt;

&lt;p&gt;I had told myself, "Hey, these B.S politics are getting old, let's go somewhere else!" and I quickly realized that &lt;em&gt;every&lt;/em&gt; job has shitty politics and bureaucratic decisions to deal with. It's nothing against these companies, but at some point, business decisions have to be made and those are going to clash with engineering desires. Now, with that said, I believe that there is a line that can be crossed where one shouldn't keep putting up with politics, but to have the expectations of &lt;em&gt;never&lt;/em&gt; dealing with politics?...that is just unreasonably in the modern workplace.&lt;/p&gt;

&lt;p&gt;With this conclusion, I realized that I could change the angle that I was viewing some of these problems through. While I think the switch was still ultimately needed for me, I believe I've grown and have learned how to handle some of these situations better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-mans-trash"&gt;
  &lt;/a&gt;
  One Man's Trash...
&lt;/h3&gt;

&lt;p&gt;I find that the old adage of "&lt;em&gt;One man's trash is another man's treasure&lt;/em&gt;" is pretty true concerning jobs during &lt;a href="https://www.wired.com/story/great-resignation-misses-the-point/"&gt;&lt;em&gt;the Great Resignation&lt;/em&gt;&lt;/a&gt;. I saw pretty high levels of attrition at my old job - heck, I was one of those üòâ - and my new manager was pretty open that the team I was joining just faced some higher-than-average attrition levels.&lt;/p&gt;

&lt;p&gt;Does that raise red flags? üö©üö©üö©üö©üö©üö©üö© Hopefully not if you've done your due diligence before joining the company. I knew that this was occurring, and I knew the situation was changing; not for better or worse, it was just &lt;em&gt;changing&lt;/em&gt;. Changes meant new challenges and potential technology refreshers; it meant that I had the potential to make a bigger difference, and I was drawn to that opportunity.&lt;/p&gt;

&lt;p&gt;One thing that really excites me about starting a new job is that I can bring fresh perspectives to projects that may need it. If the same people are working on the same project for an extended period of time, it starts to create a silo of ideas and knowledge. By introducing new people to these projects - aka me onboarding - then these projects can get some new life. This allows them to be viewed in a way that allows us to make any needed changes that might have otherwise been overlooked.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-open-to-new-things"&gt;
  &lt;/a&gt;
  Be Open to New Things
&lt;/h2&gt;

&lt;p&gt;"&lt;em&gt;Of course I'm open to new things, I just quit my job for heaven's sake!&lt;/em&gt;" I tell myself as I write this. But really though, I switched jobs and immediately was thinking about how to jump on a project that is most similar to what I'd been doing previously. I worked with a lot of &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; cluster management at my old job, and I really wanted to just jump right into &lt;em&gt;more&lt;/em&gt; Kubernetes projects.&lt;/p&gt;

&lt;p&gt;Wanting to work with a specific technology is okay, but I wasn't really giving myself a full chance to grow more. With a new team &amp;amp; company came new opportunities, and I quickly realized that I was limiting myself by having such a small view of what I wanted to work on without knowing the full scope of projects and available capabilities. Once I saw myself doing this, I started giving other projects more of my time, and I found that I was learning a considerable amount in areas that I had limited familiarity in. This led to some of the confidence checks that I list below, but for the most part, its already been a pretty neat journey to connect the dots between my previous experience and the stuff that's totally new to me. &lt;strong&gt;By tackling these new problems, I am becoming a more well-rounded engineer&lt;/strong&gt;, and I can feel my confidence raising by a considerable amount in these areas.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-confident-without-faking-it"&gt;
  &lt;/a&gt;
  Be Confident without Faking It
&lt;/h2&gt;

&lt;p&gt;So this section depends on what level you were at your previous company vs what you are joining as, but I feel like there's something for people of any level.&lt;/p&gt;

&lt;p&gt;For my situation, I was a newly minted Senior Engineer when leaving, and so I applied &amp;amp; received a Senior Engineer role at my new company. Do I deserve to be a senior right now? Well, my &lt;a href="https://medium.com/@dstarner/battling-imposter-syndrome-4650a73776cb"&gt;Imposter Syndrome&lt;/a&gt; says that I'm not good enough, but I've led projects, maintained critical systems, and built large complicated systems, so here I am as a senior. ü§∑üèº‚Äç‚ôÇÔ∏è I've solved enough problems and pulled out enough of my hairs to justify being a Senior - &lt;em&gt;I'm looking at you Jenkins/Groovy for most of those hairs pulled!!!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Being a senior brings with it a certain level of expectations and responsibility, which I was familiar with in my old job. The issue was that I was attempting to maintain that same level of expectations in a job where I barely knew what was going on. Most companies and teams expect onboarding new engineers to take at least a few months - based on the complexity of the system(s) - and my new team was no different. For some reason though, I was trying to shortcut this timeline and prove my skills as an engineer to those around me as quickly as possible, which led to some failed personal expectations and confidence issues that made me question my own abilities as an engineer.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ih4tzE3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1445401963399634948/ZNHMcrPp_normal.jpg" alt="Dan Starner profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan Starner
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dan_starner
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I had a pretty nice blog post mostly together, but then _Imposter Syndrome_ hit, and I‚Äôm going to pretend like none of it was ever written because it doesn‚Äôt feel good anymore ¬Ø\_(„ÉÑ)_/¬Ø
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:28 PM - 01 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1455300847328534531" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1455300847328534531" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1455300847328534531" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;em&gt;Note: This isn't the blog post in question, but maybe I'll still post that other one implied in the Tweet&lt;/em&gt; ü§î&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-stress-about-proving-yourself"&gt;
  &lt;/a&gt;
  Don't Stress About Proving Yourself
&lt;/h3&gt;

&lt;p&gt;If you are like me who puts a lot of pressure on themself to succeed, then switching jobs will probably lead to some stress &amp;amp; Imposter Syndrome from facing problems against an unfamiliar position. &lt;strong&gt;It's okay to struggle the first few months in a new position.&lt;/strong&gt; Like I mentioned, teams expect around 3-6 months to onboard engineers, so don't expect to start dropping big &lt;a href="https://www.atlassian.com/git/tutorials/making-a-pull-request"&gt;Pull Requests&lt;/a&gt; by the end of your second week.&lt;/p&gt;

&lt;p&gt;I wish I told myself this earlier though. I've been in this position for &lt;a href="https://www.timeanddate.com/date/durationresult.html?d1=13&amp;amp;m1=9&amp;amp;y1=2021ti=on&amp;amp;"&gt;less than 60 days&lt;/a&gt; and I've already almost burned myself out üòÖ Why? Because &lt;strong&gt;I set an incredibly high bar for myself where I tried to match the work output that I had at my old position&lt;/strong&gt;. The issue there is that I don't have the 3 years of institutional knowledge at my new job that I gained at my old job. During the beginning of my onboarding, I was constantly telling myself &amp;amp; my manager that I &lt;em&gt;needed&lt;/em&gt; to get some big contributions out as soon as possible to prove I was worth hiring.&lt;/p&gt;

&lt;p&gt;It's almost impossible to hit the ground running when starting a new job though. For example, its difficult when you have a system and multiple environments as complicated as Heroku's tech. &lt;em&gt;Note: This is nothing against Heroku, its just **impossible&lt;/em&gt;* for anyone to learn a large company's tech stack within 2 months*.&lt;/p&gt;

&lt;p&gt;As time progresses, I will get more comfortable with the systems and my productivity will rise. It's going to be bad for my mental health and productivity to assume that I will be able to solve all of my new problems with the same ease that I did at my old job. My manager &amp;amp; team are not putting that level of pressure on me, so why am I putting it on myself? This is still something that I struggle with occassionally, but being away of the problem is the first step to solving it, and I just need to take a deep breath and let myself relax a bit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/yvLgbrii0xnLpG1TT2/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/yvLgbrii0xnLpG1TT2/giphy.gif" alt="Relax a bit" width="439" height="420"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pro-new-colleagues"&gt;
  &lt;/a&gt;
  Pro: New Colleagues
&lt;/h2&gt;

&lt;p&gt;Switching has allowed me to get a brand new group of work peers! I worked with some really great engineers at my old job, and my new position is no different. Having the opportunity to work, learn, and grow with some of the best engineers in the world is something that I do not take for granted. While I'm not surprised by the fact that I am growing relationships to my new coworkers, I am surprised at how quickly it's happening. I already feel like I have the support of my managers, architects, and colleagues, and I am gaining their trust more and more as time goes on.&lt;/p&gt;

&lt;p&gt;I really want to keep in touch with many of my old peers, and I'm sure I will to some extent, but I'm excited for the challenges that I'll be able to overcome with my new team. I just need to meet all of them first, which is okay, because I've been trying really hard to reach out and schedule 1:1s with everyone.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initiate-11s-with-everyone-around-you"&gt;
  &lt;/a&gt;
  Initiate 1:1s with Everyone Around You
&lt;/h3&gt;

&lt;p&gt;An easy way that I started to build relationships with my team was by reaching out and setting up &lt;a href="https://www.small-improvements.com/resources/1-on-1-meetings/"&gt;1:1 introduction meetings&lt;/a&gt; with many of the people I work with day-to-day. This included those on my immediate team, sister teams, and my management chain.&lt;/p&gt;

&lt;p&gt;I tried to schedule meetings with the following approach, and I think it worked/is working pretty well!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;First 2 weeks&lt;/strong&gt;: Meet with my manager and immediate teammates&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;First 4 weeks&lt;/strong&gt;: Meet with some members you are interacting with that are on sister teams&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;First 6 weeks&lt;/strong&gt;: Meet with any senior/principal engineers in your work tree and architects if those exist at your company&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Heroku also uses &lt;a href="https://www.donut.com/"&gt;Donut&lt;/a&gt; to connect different people in the organization, and I've been trying to actually schedule meetings with the other individuals the app pairs me with. It's made it somewhat easier to introduce myself across the organization, and to meet people in a way that is normally difficult for a remote-only workforce.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-write-down-notes-for-everything"&gt;
  &lt;/a&gt;
  Bonus: Write Down Notes for EVERYTHING
&lt;/h2&gt;

&lt;p&gt;So I thought of this extra note about my onboarding experience, because I'm usually the one writing documentation or explaining a technical solution to others, and it's been a fun experience to turn the table on that notion as I get to learn everything my team interacts with.&lt;/p&gt;

&lt;p&gt;Sometimes i feel like I am asking too many questions, but I recognize that is just a part of the onboarding process, and I appreciate my colleagues' willingness to always help me get the answers I need to understand the systems a little bit better. To keep this process more enjoyable for them though, it's important that I note &amp;amp; remember as much of the information they give me as possible, so that I don't need to ask again. This note-taking process also helps, because it provides the opportunity to convert these notes into real documentation that can be used by others who find themselves in my same position...&lt;em&gt;then maybe they'll be asking me questions&lt;/em&gt;. üëÄ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oz8xTUmZABI3PGwDe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oz8xTUmZABI3PGwDe/giphy.gif" alt="Writing notes" width="500" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As an extension, I'm glad that I found &lt;a href="https://obsidian.md/"&gt;Obsidian&lt;/a&gt; right as I was starting my new position, because my gosh I would be lost without a good note-taking app. Everything from onboarding requirements, to technical notes, to people's names/positions...you name it, and I have it in some notes from my onboarding. This has helped me stay on top of things while I start to climb the mountain of knowledge that my team works with, and I find that writing stuff down really helps me remember important details.&lt;/p&gt;




&lt;p&gt;I am excited to continuing growing in my new position, and I will probably have more posts to write about in the future regarding the cool work I get to do, but for now, I'm excited to just learn. The amount of information I'm getting to learn in my new position is truly incredible; it's like trying to drink from a fire hydrant sometimes. We'll see what I do and where the future takes me, but this transition period has been quite an experience, and I hope that some of my thoughts help you, wherever you may be in your own journey.&lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Comandos B√°sicos de GIT.</title>
      <author>Gast√≥n Danielsen</author>
      <pubDate>Thu, 04 Nov 2021 21:18:23 +0000</pubDate>
      <link>https://dev.to/gdcodev/comandos-basicos-de-git-3pha</link>
      <guid>https://dev.to/gdcodev/comandos-basicos-de-git-3pha</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--djaogIQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.knoldus.com/wp-content/uploads/2020/05/cover-first-steps-git.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--djaogIQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.knoldus.com/wp-content/uploads/2020/05/cover-first-steps-git.png" alt="Texto alternativo" width="880" height="332"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
Hola a todos, hoy les traigo una gu√≠a de comando b√°sicos de GIT que les puede ser de mucha ayuda a la hora de organizar el c√≥digo de trabajo, el historial y evoluci√≥n del mismo.
&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git:
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Es un software de "Control de Versiones" que fue dise√±ada por Linus Torvalds, es Open Source y muy potente, permite registrar el historial de cambios de un proyecto y facilita a los usuarios a llevar el seguimiento de los cambios de un archivo.&lt;/em&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#establecemos-los-valores-de-configuraci%C3%B3n"&gt;
  &lt;/a&gt;
  Establecemos los valores de configuraci√≥n
&lt;/h2&gt;

&lt;p&gt;Ahora debemos establecer las variables de configuraci√≥n global, que son muy importantes, especialmente si est√°s trabajando con otros desarrolladores.&lt;br&gt;
La principal ventaja de esto es que es m√°s f√°cil averiguar qui√©n ha hecho un commit de determinado bloque de c√≥digo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git config puede ser usado para establecer una configuraci√≥n espec√≠fica de usuario, como el nombre de usuario ,y el email, etc.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global user.name "nombre"
$ git config --global user.email "correo@correo.com"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Habilitar la √∫til colorizaci√≥n del producto de la l√≠nea de comando.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global color.ui auto
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Ver la configuracion.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Puedes establecer f√°cilmente un alias para cada comando mediante git config.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global alias.ci 'commit'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Con este comando haremos que git detecte automaticamente lo que queremos escribir
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git config --global help.autocorrect 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#crear-repositorios"&gt;
  &lt;/a&gt;
  CREAR REPOSITORIOS
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Iniciar un nuevo repositorio
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Clonar un repositorio existente, descarga un proyecto y toda su historia de versi√≥n
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone &amp;lt;https://link-con-nombre-del-repositorio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Agregar archivos a la √°rea de preparaci√≥n
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git add &amp;lt;nombre-del-archivo&amp;gt;   // Agregar un archivo especifico.
$ git add .                 // Agregar todos los archivos.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Deshacer los git add
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git reset .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Hacer commit de los cambios con un mensaje que explique los cambios
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git commit -m "mensaje de confirmaci√≥n"
$ git commit -a -m "saltar el git add" // Con este comando nos saltamos de hacer el git add 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Enumera todos los archivos nuevos o modificados que se deben confirmar
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git status -s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Muestra las diferencias de archivos que no se han enviado a√∫n al √°rea de espera
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git diff
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Modificar los git commit
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git commit --amend
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Deshacer los commit
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git reset --soft HEAD~1   // Borra el ultimo commit y no borra los cambios
$ git reset --hard HEAD~1   // Borra el ultimo commit y si borra los cambios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Subir los archivos a un repositorio remoto
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Listar el historial de versiones de la rama actual.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git log
$ git log --oneline --graph // Con este comando se lo puede ver mucho mejor 
$ git log --pretty=oneline --graph --decorate --all // Otra forma mas completa
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Deshacer el commit si ya se hizo push
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git revert 3a67899
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Para recuperar archivos que borre
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git checkout -- . 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Borrar un archivo
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git rm &amp;lt;nombre-del-archivo&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Para recuperar archivos que borre despu√©s del git rm
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git checkout HEAD -- .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Fusionar todos los cambios que se han hecho en el repositorio local con el directorio de trabajo local
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#ramas"&gt;
  &lt;/a&gt;
  RAMAS
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Crear una nueva rama
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git branch &amp;lt;nombre-de-la-rama&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Crear una rama rama (Segunda opci√≥n)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git checkout -b &amp;lt;nombre-de-la-rama&amp;gt; // Crear√° la nueva rama y cambiar√° a ella al instante
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Visualiza todas las ramas en el repositorio actual
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git branch
$ git branch --list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Cambiar a la rama especificada y actualiza el directorio activo
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git checkout &amp;lt;nombre-de-la-rama&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Volver a la rama anterior sin necesidad de escribir el nombre
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git switch -
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Borrar una Rama
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git branch -d &amp;lt;nombre-de-la-rama&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Lista los branches con mas informaci√≥n
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git show-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Combina el historial de la rama especificada con la rama actual
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git merge &amp;lt;nombre-de-la-rama&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Busca los cambios nuevos y actualiza el repositorio
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git pull origin &amp;lt;nombre-de-la-rama&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verifica cambios en el repositorio online con el local
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git fetch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rebase"&gt;
  &lt;/a&gt;
  REBASE
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Se usa para aplicar ciertos cambios de una rama en otra, Une el branch actual con la main
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git rebase
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Cuando resolvemos los conflictos --continue continua la secuencia del rebase donde se pauso
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git rebase --continue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Omite el conflicto y sigue su camino
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git rebase --skip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Devuelve todo al principio del rebase
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git rebase --abort
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Se usa para aplicar ciertos cambios de una rama en otra
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git rebase &amp;lt;nombre-de-la-rama&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tag"&gt;
  &lt;/a&gt;
  TAG
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Crea un nuevo tags
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git tag v0.0.1 -m "primera versi√≥n"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Muestra una lista de todos los tags
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git tag
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Te permite ver c√≥mo estaba el repositorio en cada estado
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git show v0.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Enviar al repositorio en GitHub
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git push --tags
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#otros"&gt;
  &lt;/a&gt;
  OTROS
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Permite ver todos los repositorios remotos
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git remote -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Remover repositorio
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git remote rm &amp;lt;Nombre/Origin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Eliminar un repositorio de Git creado con ‚Äògit init‚Äô en un directorio
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd carpeta/
$ rm -rf .git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Cambia el nombre del archivo y lo prepara para commit
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git mv [archivo-original] [archivo-renombrado]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;üìå Mis Redes: üîµ&lt;a href="https://www.facebook.com/gdcode7"&gt;Facebook&lt;/a&gt; | üíº&lt;a href="https://www.linkedin.com/in/gastondanielsen/"&gt;LinkedIn&lt;/a&gt; | üíª&lt;a href="https://github.com/gdcodev"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>git</category>
    </item>
    <item>
      <title>VS Code extensions NOT only for Frontend developers</title>
      <author>Jakub Smetanka</author>
      <pubDate>Thu, 04 Nov 2021 21:14:00 +0000</pubDate>
      <link>https://dev.to/smetankajakub/vscode-extensions-not-only-for-frontend-developers-30aj</link>
      <guid>https://dev.to/smetankajakub/vscode-extensions-not-only-for-frontend-developers-30aj</guid>
      <description>&lt;h1&gt;
  &lt;a href="#prettier-code-formatter"&gt;
  &lt;/a&gt;
  Prettier - Code formatter
&lt;/h1&gt;

&lt;p&gt;It is code formatter with support of many languages. It can automatically format the code right after save which save your time and increase productivity. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUSyxtCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm442n1mvvx7brtavcek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUSyxtCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sm442n1mvvx7brtavcek.png" alt="Image description" width="532" height="172"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#better-comments"&gt;
  &lt;/a&gt;
  Better comments
&lt;/h1&gt;

&lt;p&gt;This extension is used for more friendly comments, you are able to customize tags by your own. Very easy configurations with support to plenty of programming languages.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EKI3bRol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdme4qy8aacvvigi2cl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EKI3bRol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdme4qy8aacvvigi2cl6.png" alt="Image description" width="773" height="142"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#angular-snippets"&gt;
  &lt;/a&gt;
  Angular Snippets
&lt;/h1&gt;

&lt;p&gt;Snippets for Angular, Typescript, HTML.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OtYBX2kI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih4yzhcmxf0u7wrf906g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OtYBX2kI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih4yzhcmxf0u7wrf906g.png" alt="Image description" width="592" height="135"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#intelisense-path"&gt;
  &lt;/a&gt;
  Intelisense path
&lt;/h1&gt;

&lt;p&gt;Extension to autocomplete filenames.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBZVwGv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48mx7e4s93mgluoimjhn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBZVwGv2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/48mx7e4s93mgluoimjhn.png" alt="Image description" width="554" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#intellisense-for-css-class-names-in-html"&gt;
  &lt;/a&gt;
  IntelliSense for CSS class names in HTML
&lt;/h1&gt;

&lt;p&gt;This extension take care of completion of CSS class in HTML.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DYlyTvmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gpnnkk7b88otb5ya5tu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DYlyTvmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gpnnkk7b88otb5ya5tu.png" alt="Image description" width="793" height="165"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#eslint"&gt;
  &lt;/a&gt;
  Eslint
&lt;/h1&gt;

&lt;p&gt;Javascript Linter extension.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5tb3c0wN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3alwnf0il0bbvxn2jzaz.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tb3c0wN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3alwnf0il0bbvxn2jzaz.JPG" alt="Alt Text" width="745" height="159"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gitlens"&gt;
  &lt;/a&gt;
  GitLens
&lt;/h1&gt;

&lt;p&gt;This extension provide to you useful information from git on hovering of each line. Easy to explore repository, with possibility to be fast redirected to requested file in your Source Control Client (GitHub, BitBucket, ...).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5VnfXn8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9s1dp7av2jjij8i8spb.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5VnfXn8p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m9s1dp7av2jjij8i8spb.JPG" alt="Alt Text" width="880" height="99"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thunderclient"&gt;
  &lt;/a&gt;
  ThunderClient
&lt;/h1&gt;

&lt;p&gt;Is lightweight Rest API Client. It is alternative to Postman not that heavy but still useful.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3WAWRfi1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfciibv1pz7zheaijza8.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3WAWRfi1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tfciibv1pz7zheaijza8.JPG" alt="Alt Text" width="741" height="146"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#live-server"&gt;
  &lt;/a&gt;
  Live Server
&lt;/h1&gt;

&lt;p&gt;Helps to launch local development server with live reloading of static and dynamic pages as well.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AuWeiJjY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c7nskdf3qcr05xxkhuj.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AuWeiJjY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9c7nskdf3qcr05xxkhuj.JPG" alt="Alt Text" width="713" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>vscode</category>
      <category>frontend</category>
      <category>angular</category>
    </item>
    <item>
      <title>Meeting our standards</title>
      <author>Hendrik</author>
      <pubDate>Thu, 04 Nov 2021 21:10:01 +0000</pubDate>
      <link>https://dev.to/hendr_ik/meeting-our-standards-pei</link>
      <guid>https://dev.to/hendr_ik/meeting-our-standards-pei</guid>
      <description>&lt;p&gt;We are building &lt;a href="https://www.offen.dev/?utm_source=forum&amp;amp;utm_campaign=0200"&gt;Offen,&lt;/a&gt; a fair and lightweight web analytics software that treats operators and users as equal parties. Here is what we have achieved in the past weeks. &lt;/p&gt;

&lt;p&gt;Statistics about the location of visitors had been on our to-do list for a fairly long time. Yet implementing it in a way that met our privacy standards proved to be a veritable challenge. After &lt;a href="https://github.com/offen/offen/issues/423"&gt;careful consideration&lt;/a&gt; and intense research, we finally decided on an approach based on time zones.&lt;/p&gt;

&lt;p&gt;To derive the geographical location, this method does not rely on an IP database, but asks the browser for the selected time zone and tries to assign it to a country. This fully protects the privacy of users and provides sufficiently accurate results for analysis as well.&lt;/p&gt;

&lt;p&gt;Furthermore, we have addressed the issue of user awareness in Offen. Since the only direct link to the User Auditorium is in the consent banner, it was important for us to provide additional features to increase the attention of users. Widgets now give operators the opportunity to easily integrate a reference to the User Auditorium. Preferably with a link on every page.&lt;/p&gt;

&lt;p&gt;While there are still a few improvements on the agenda, with the implementation of location statistics we are a major step closer to v1.0. Be sure to stay tuned and follow us here or on &lt;a href="https://twitter.com/hioffen"&gt;Twitter&lt;/a&gt; and &lt;a href="https://fosstodon.org/@offen"&gt;Mastodon&lt;/a&gt; for the next release updates.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>privacy</category>
    </item>
    <item>
      <title>Introducing Codecademy Docs</title>
      <author>Sonny Li</author>
      <pubDate>Thu, 04 Nov 2021 21:07:00 +0000</pubDate>
      <link>https://dev.to/codecademy/introducing-codecademy-docs-510b</link>
      <guid>https://dev.to/codecademy/introducing-codecademy-docs-510b</guid>
      <description>&lt;p&gt;We‚Äôre thrilled to announce that we just launched a brand new site called &lt;a href="https://www.codecademy.com/resources/docs"&gt;Codecademy Docs&lt;/a&gt; ‚Äî an open-contribution coding documentation and glossary for popular languages and frameworks. üìï&lt;/p&gt;

&lt;p&gt;Every developer relies heavily on coding documentation to get their work done. At Codecademy, we wanted to build a beginner-friendly coding reference, where you can find the answer you're looking for all within three mouse-clicks. Think Wikipedia, but for coding!&lt;/p&gt;

&lt;p&gt;Poke around and let us know what you think. If you catch any bugs or typos, please feel free to make a Pull Request to the GitHub repo. You can find the &lt;a href="https://github.com/Codecademy/docs/blob/main/.github/CONTRIBUTING.md"&gt;contribution guide here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And lastly, we just launched on Product Hunt today. So please give it an upvote if you can:&lt;/p&gt;

&lt;p&gt;‚¨ÜÔ∏è &lt;strong&gt;&lt;a href="https://www.producthunt.com/posts/codecademy-docs"&gt;https://www.producthunt.com/posts/codecademy-docs&lt;/a&gt;&lt;/strong&gt; ‚¨ÜÔ∏è&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
      <category>news</category>
      <category>codecademy</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How To Deploy Cost Effective Smart Contracts</title>
      <author>Waylon Jepsen</author>
      <pubDate>Thu, 04 Nov 2021 20:41:20 +0000</pubDate>
      <link>https://dev.to/0xjepsen/how-to-deploy-cost-effective-smart-contracts-3a3l</link>
      <guid>https://dev.to/0xjepsen/how-to-deploy-cost-effective-smart-contracts-3a3l</guid>
      <description>&lt;p&gt;When people think about smart contracts, you tend to think about Ehereum However. Many ecosystems are building or have built support for the distributed computing that smart contracts allow for. Hedera recently announced their support for Smart Contracts 2.0 that will allow the contracts to run with all the native costs, security, and speeds of the Hedera network, which are pretty impressive.&lt;/p&gt;

&lt;p&gt;This post will show you how to deploy a smart contract to the Hedera network with the JavaScrip SDK. We will first compile our smart contract into byte code. Then we will store the byte-code to the Hedera File Service, deploy our contact, and modify the state variable of our contract. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compiling-your-smart-contract"&gt;
  &lt;/a&gt;
  Compiling Your Smart Contract
&lt;/h2&gt;

&lt;p&gt;You will first need to compile your smart contract into byte-code. There are a few different ways you can do this, recommend using &lt;a href=""&gt;remix&lt;/a&gt;. Remix will output a file usually called &lt;code&gt;simple_storage.json&lt;/code&gt;. If you copy this file into your IDE, you will be able to initialize it in JavaScript like this: &lt;code&gt;let json = require('./compiledSmartContract.json')&lt;/code&gt;.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storing-the-bytecode-on-the-hedera-file-service"&gt;
  &lt;/a&gt;
  Storing the byte-code on the Hedera File Service
&lt;/h2&gt;

&lt;p&gt;We need the fileID of its byte code stored on the Hedera file service to deploy our contract. We can get this by using the FileCreateTransaction API from the hedera JS SDK and passing it the byte-code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;compiled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bytecode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// Store Contact in file service. Different from eth. Transaction size is smaller on hedera for security &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mycontract&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FileCreateTransaction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setContents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;compiled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setKeys&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;PrivateKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myPrivateKey&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
        &lt;span class="c1"&gt;// The default max fee of 1 HBAR is not enough to make a file ( starts around 1.1 HBAR )&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMaxTransactionFee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Hbar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// 2 HBAR&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TransactionReceipt&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;mycontract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getReceipt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fileid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FileId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;TransactionReceipt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fileId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;file ID: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;fileid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Afterward, we can get the FileID from the FileCreateTransaction receipt, as shown in the example above.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying"&gt;
  &lt;/a&gt;
  Deploying
&lt;/h2&gt;

&lt;p&gt;Once you have a fileId of the byte-code from your contract, you can pass the fileId from the previous step to the ContractCreateTransaction() API call.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// Deploy Contract&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deploy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractCreateTransaction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setGas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setBytecodeFileId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;receipt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getReceipt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Get the new contract &lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newContractId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;receipt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contractId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The contract ID is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;newContractId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After deploying the contract you can await the receipt to get the contract ID.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calling-the-smart-contract-functions"&gt;
  &lt;/a&gt;
  Calling the Smart Contract Functions
&lt;/h2&gt;

&lt;p&gt;When calling the smart contract functions, you have to know whether or not the function you want to call is modifying the state variables of the contract. If you are changing state variables, you will use the &lt;code&gt;ContractExecuteTransaction()&lt;/code&gt; endpoint. Otherwise, you will use the &lt;code&gt;ContractCallQuery()&lt;/code&gt; endpoint. You can think of this a doing reads vs doing writes. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#modifying-state"&gt;
  &lt;/a&gt;
  Modifying State
&lt;/h3&gt;

&lt;p&gt;For example, I am calling the set function in the contract outlined in the solidity &lt;a href="https://docs.soliditylang.org/en/v0.8.8/introduction-to-smart-contracts.html"&gt;documentation&lt;/a&gt;, I am modifying the &lt;code&gt;storedData&lt;/code&gt; state variable. &lt;/p&gt;

&lt;p&gt;Using the Hedera API to call this function would look something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractExecuteTransaction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setContractId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newContractId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setGas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;set&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractFunctionParameters&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;addUint256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMaxTransactionFee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Hbar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contractCallResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;setter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;testing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;contractCallResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getRecord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Status Code:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#modifying-state"&gt;
  &lt;/a&gt;
  !Modifying State
&lt;/h3&gt;

&lt;p&gt;The call to the corresponding getter would look something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ContractCallQuery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// &lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setContractId&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newContractId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;get&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setGas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMaxQueryPayment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Hbar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// defaults to 1, if requires more than one need change&lt;/span&gt;
    &lt;span class="c1"&gt;// set should be around at least 3-5k gas&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contractGetter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;contractGetter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUint256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;contract message: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>blockchain</category>
      <category>javascript</category>
      <category>solidity</category>
    </item>
  </channel>
</rss>
