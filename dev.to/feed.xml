<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Cross-Validation and Hyperparameter Search in scikit-learn - A Complete Guide</title>
      <author>Bala Priya C</author>
      <pubDate>Tue, 24 Aug 2021 11:21:22 +0000</pubDate>
      <link>https://dev.to/balapriyac/cross-validation-and-hyperparameter-search-in-scikit-learn-a-complete-guide-5ed8</link>
      <guid>https://dev.to/balapriyac/cross-validation-and-hyperparameter-search-in-scikit-learn-a-complete-guide-5ed8</guid>
      <description>&lt;p&gt;This post is inspired by Kevin Markham's course &lt;a href="https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn"&gt;Introduction to Machine Learning with scikit-learn&lt;/a&gt; on Data School. If you're a beginner looking to get started with Machine Learning using scikit-learn, I would highly recommend this course to gain all the required foundational skills. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In just a few hours, you'd be able to understand and build basic regression and classification models with optimal hyperparameters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If this sounds interesting, please be sure to check the course at &lt;a href="https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn"&gt;this&lt;/a&gt; link. &lt;/p&gt;

&lt;p&gt;That said, we shall cover the following in this post.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to use cross-validation to search for best model hyperparameters&lt;/li&gt;
&lt;li&gt;How to use grid search for hyperparameter search&lt;/li&gt;
&lt;li&gt;How to search more efficiently for hyperparameters using randomized search&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-crossvalidation-to-evaluate-a-machine-learning-model"&gt;
  &lt;/a&gt;
  How to Use Cross-Validation to Evaluate a Machine Learning Model
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-do-we-validate-a-machine-learning-model"&gt;
  &lt;/a&gt;
  How do we validate a machine learning model?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;When evaluating a machine learning model, training and testing on the same dataset is not a great idea. Why? Let us draw a relatable analogy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ever since school days, we’ve been giving exams, and how are our exams designed? Well, they’ve been designed so as to test our understanding of the subjects rather than our ability to memorize! The same analogy can be transposed to our machine learning model as well!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here’s the answer to the question ‘Why can we not evaluate a model on the same data that it was trained on?’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is because this process inherently encourages the model to memorize the training data. So, the model performs extremely well on the training data. However, it generalizes rather poorly and performs badly on the data that it has never seen before.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-raw-traintestsplit-endraw-do"&gt;
  &lt;/a&gt;
  What does &lt;code&gt;train_test_split&lt;/code&gt; do?
&lt;/h3&gt;

&lt;p&gt;As a model's performance on data that it has never seen before is a more reliable estimate of its performance, we usually validate the model by checking how it performs on out-of-sample data, that is, on data that it has never seen before. &lt;/p&gt;

&lt;p&gt;If you remember, it is for this reason, we use the &lt;code&gt;train_test_split&lt;/code&gt; method, in our very friendly and nifty library, scikit-learn.&lt;/p&gt;

&lt;p&gt;This &lt;code&gt;train_test_split&lt;/code&gt; splits the available data into two sets: the train and test sets in certain proportions; for example, train on 70% of the available data and test on the remaining 30% of the data. In this way, we can ensure that every record in the dataset can either be in the training set or the test set but not both! By doing so, we are making sure that we test the model’s performance on unseen data.&lt;/p&gt;

&lt;p&gt;But, is this good enough? Or do we take this with a pinch of salt?&lt;br&gt;
Let us train a simple &lt;code&gt;KNeighborsClassifier&lt;/code&gt; in scikit-learn on the iris dataset.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#necessary-imports"&gt;
  &lt;/a&gt;
  Necessary imports
&lt;/h4&gt;

&lt;p&gt;As shown below, we import the necessary modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.datasets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_iris&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.neighbors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#load-the-data"&gt;
  &lt;/a&gt;
  Load the data
&lt;/h4&gt;

&lt;p&gt;Let us load the iris data and separate out the features(Sepal Length, Sepal Width, Petal Length and Petal Width) and the target variables which are the class labels indicating the iris type. (Setosa, Versicolour, and Virginica)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# read in the iris data
&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_iris&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# create X (features) and y (response)
&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#create-traintestsplit"&gt;
  &lt;/a&gt;
  Create train_test_split
&lt;/h4&gt;

&lt;p&gt;Let’s create the train and test sets with &lt;code&gt;random_state= 4&lt;/code&gt;; Setting the &lt;code&gt;random_state&lt;/code&gt; ensures reproducibility.&lt;/p&gt;

&lt;p&gt;In this case, it ensures that the records that go into the train and test sets stay the same every time our code is run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# use train/test split with different random_state values
&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#check-classification-accuracy"&gt;
  &lt;/a&gt;
  Check Classification Accuracy
&lt;/h4&gt;

&lt;p&gt;We now instantiate the &lt;code&gt;KNeighborsClassifier&lt;/code&gt; with &lt;code&gt;n_neighbors=9&lt;/code&gt; and fit the classifier on the training set and predict on the test set.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;knn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y_pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metrics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accuracy_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mf"&gt;0.9736842105263158&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let us change the &lt;code&gt;random_state&lt;/code&gt; to a different value. What do you think the accuracy score would be?&lt;/p&gt;

&lt;p&gt;Well, please feel free to insert your favorite number in the &lt;code&gt;random_state&lt;/code&gt; and check for yourselves. It'd be a different accuracy score this time.&lt;/p&gt;

&lt;p&gt;Setting the &lt;code&gt;random_state&lt;/code&gt; to another value, we would get another value for the accuracy score. The evaluation metric thus obtained is therefore susceptible to high variance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The accuracy score may depend heavily on which data points end up in the training set and which end up in the test set. &lt;/li&gt;
&lt;li&gt;Thus the accuracy score may be significantly different depending on how the division is made. Clearly, this doesn’t seem like the best way to validate our model’s performance!&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#how-do-we-reach-a-consensus-on-how-to-calculate-the-accuracy-score"&gt;
  &lt;/a&gt;
  How do we reach a consensus on how to calculate the accuracy score?
&lt;/h4&gt;

&lt;p&gt;One very natural thing to do would be to create multiple train/test splits, calculate the accuracy for each such split, and compute the average of all the accuracy scores thus obtained. This definitely seems like a better estimate of the accuracy, doesn’t it?&lt;/p&gt;

&lt;p&gt;This is precisely the essence of cross-validation, which we shall see in the subsequent section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understanding-kfold-crossvalidation"&gt;
  &lt;/a&gt;
  Understanding K-fold cross-validation
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#steps-in-kfold-crossvalidation"&gt;
  &lt;/a&gt;
  Steps in K-fold cross-validation
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Split the dataset into K equal partitions (or “folds”).&lt;/li&gt;
&lt;li&gt;Use fold 1 for testing and the union of the other folds as the training set.&lt;/li&gt;
&lt;li&gt;Calculate accuracy on the test set.&lt;/li&gt;
&lt;li&gt;Repeat steps 2 and 3 K times, using a different fold for testing each time.&lt;/li&gt;
&lt;li&gt;Use the average accuracy on different test sets as the estimate of out-of-sample accuracy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let us try to visualize this by splitting a dataset of 25 observations into 5 equal folds as shown below.&lt;/p&gt;

&lt;p&gt;The dataset contains 20 observations (numbered 0 through 24).&lt;br&gt;
5-fold cross-validation runs for 5 iterations.&lt;/p&gt;

&lt;p&gt;Let's see how the folds are created&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# simulate splitting a dataset of 25 observations into 5 folds
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KFold&lt;/span&gt;
&lt;span class="n"&gt;kf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KFold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_splits&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shuffle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# print the contents of each training and testing set
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'{} {:^61} {}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Iteration'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Training set observations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Testing set observations'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'{:^9} {} {:^25}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iteration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="n"&gt;Iteration&lt;/span&gt;                   &lt;span class="n"&gt;Training&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;observations&lt;/span&gt;                   &lt;span class="n"&gt;Testing&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;observations&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       
    &lt;span class="mi"&gt;2&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       
    &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     
    &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     
    &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We observe the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For each iteration, every observation is either in the training set or the testing set, but not both.&lt;/li&gt;
&lt;li&gt;Every observation is in the test set exactly once.&lt;/li&gt;
&lt;li&gt;Each fold is used as the test set exactly once and in the training set (K-1) times.&lt;/li&gt;
&lt;li&gt;The average accuracy thus obtained is a more accurate estimate of out-of-sample accuracy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This process uses data more efficiently as every observation is used for both training and testing.&lt;/p&gt;

&lt;p&gt;It is recommended to use stratified sampling for creating the folds, as this ensures that all class labels are represented in equal proportions in each fold. And, scikit-learn’s &lt;code&gt;cross_val_score&lt;/code&gt; does this by default.&lt;/p&gt;

&lt;p&gt;In practice, we can do even better by doing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;“Hold out” a portion of the data before beginning the model building process.&lt;/li&gt;
&lt;li&gt;Find the best model using cross-validation on the remaining data, and test it using the hold-out set. &lt;/li&gt;
&lt;li&gt;This gives a more reliable estimate of out-of-sample performance since the hold-out set is truly out-of-sample.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-crossvalidation-to-search-for-best-model-hyperparameters"&gt;
  &lt;/a&gt;
  How to Use Cross-Validation to Search for Best Model Hyperparameters
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#crossvalidation-for-hyperparameter-tuning"&gt;
  &lt;/a&gt;
  Cross-validation for hyperparameter tuning
&lt;/h3&gt;

&lt;p&gt;For the KNN classifier on the iris dataset, can we possibly use cross-validation to find the optimal value for &lt;code&gt;K&lt;/code&gt;? That is, to search for the optimal value of &lt;code&gt;n_neighbors&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Remember, &lt;code&gt;K&lt;/code&gt; in KNN classifier is the number of neighbors (&lt;code&gt;n_neighbors&lt;/code&gt;) that we take into account for predicting the class label of the test sample. Not to be confused with the &lt;code&gt;K&lt;/code&gt; in K-fold cross-validation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cross_val_score&lt;/span&gt;
&lt;span class="c1"&gt;# 10-fold cross-validation with K=5 for KNN (the n_neighbors parameter)
&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross_val_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;0.93333333&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;0.86666667&lt;/span&gt; &lt;span class="mf"&gt;0.93333333&lt;/span&gt;
 &lt;span class="mf"&gt;0.93333333&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;1.&lt;/span&gt;        &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# use average accuracy as an estimate of out-of-sample accuracy
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we shall run the K fold cross-validation for the models with different values of &lt;code&gt;n_neighbors&lt;/code&gt;, as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# search for an optimal value of K for KNN
&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;k_scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    
   &lt;span class="n"&gt;knn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
   &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross_val_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;k_scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k_scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Output k_scores
&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us plot the values to get a better idea.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="c1"&gt;# plot the value of K for KNN (x-axis) versus the cross-validated accuracy (y-axis)
&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k_scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Value of K for KNN'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Cross-Validated Accuracy'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wOde8Zho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdzir812ln0cbv4jqsqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wOde8Zho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdzir812ln0cbv4jqsqx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see that &lt;code&gt;n_neighbors (K)&lt;/code&gt; values from 13 to 20 yield higher accuracy, especially &lt;code&gt;K&lt;/code&gt;=13,18 and 20.As a larger value of &lt;code&gt;K&lt;/code&gt; yields a less complex model, we choose &lt;code&gt;K&lt;/code&gt;=20.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This process of searching for the optimal values of hyperparameters is called hyperparameter tuning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this example, we chose the values of &lt;code&gt;K&lt;/code&gt; that resulted in higher mean accuracy score under 10-fold cross validation. &lt;/p&gt;

&lt;p&gt;This is how cross-validation can be used to search for the best hyperparameters and this process can be done much more efficiently in scikit-learn.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In KNN classifiers, setting a very small value for &lt;code&gt;K&lt;/code&gt; will make the model needlessly complex, and a very large value of &lt;code&gt;K&lt;/code&gt; would result in a model with high bias that yields suboptimal performance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As &lt;code&gt;K&lt;/code&gt;=13,18 and 20 gave the highest accuracy score, close to 0.98, we decided to choose &lt;code&gt;K&lt;/code&gt;=20 as a larger value of &lt;code&gt;K&lt;/code&gt; would yield a less complex model.&lt;/p&gt;

&lt;p&gt;While it is not particularly difficult to write the for loop, we do realize that we may have to do it often.&lt;/p&gt;

&lt;p&gt;Therefore, it would be good to have a more convenient way of doing the hyperparameter search, without having to write a loop every time and identify the best parameter through inspection.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-to-use-grid-search-for-hyperparameter-search"&gt;
  &lt;/a&gt;
  How to Use Grid Search for Hyperparameter Search
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#import-gridsearchcv-class"&gt;
  &lt;/a&gt;
  Import GridSearchCV Class
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#define-the-parameter-grid"&gt;
  &lt;/a&gt;
  Define the Parameter Grid
&lt;/h4&gt;

&lt;p&gt;We now define the parameter grid (&lt;code&gt;param_grid&lt;/code&gt;), a Python dictionary, whose key is the name of the hyperparameter whose best value we’re trying to find and the value is the list of possible values that we would like to search over for the hyperparameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# define the parameter values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# create a parameter grid: map the parameter names to the values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# param_grid
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now instantiate &lt;code&gt;GridSearchCV&lt;/code&gt;. Note that we specify the &lt;code&gt;param_grid&lt;/code&gt; instead of the &lt;code&gt;n_neighbors&lt;/code&gt; argument that we had specified for &lt;code&gt;cross_val_score&lt;/code&gt; earlier. &lt;/p&gt;

&lt;p&gt;Why is this valid?&lt;/p&gt;

&lt;p&gt;Remember, the parameter grid, &lt;code&gt;param_grid&lt;/code&gt; is a dictionary whose key is &lt;code&gt;n_neighbors&lt;/code&gt; and the value is a list of possible values of &lt;code&gt;n_neighbors&lt;/code&gt;. Therefore, specifying the &lt;code&gt;param_grid&lt;/code&gt; ensures that the value at index &lt;code&gt;i&lt;/code&gt; is fetched as the value of &lt;code&gt;n_neighbors&lt;/code&gt; in the i_th run.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#instantiate-fit-the-grid-and-view-the-results"&gt;
  &lt;/a&gt;
  Instantiate, fit the grid and view the results
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# instantiate the grid
&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now go ahead and fit the grid with data, and access the &lt;code&gt;cv_results_&lt;/code&gt; attribute to get the mean accuracy score after 10-fold cross-validation, standard deviation and the parameter values. &lt;/p&gt;

&lt;p&gt;For convenience, we may store the results in a pandas DataFrame. The mean and standard deviation of the accuracy scores for &lt;code&gt;n_neighbors&lt;/code&gt;=1 to 10 are shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# fit the grid with data
&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# view the results as a pandas DataFrame
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv_results_&lt;/span&gt;&lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="s"&gt;'mean_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'std_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'params'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="n"&gt;mean_test_score&lt;/span&gt; &lt;span class="n"&gt;std_test_score&lt;/span&gt;  &lt;span class="n"&gt;params&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mf"&gt;0.953333&lt;/span&gt;    &lt;span class="mf"&gt;0.052068&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When using &lt;code&gt;cross_val_score&lt;/code&gt;, we tried eyeballing the accuracy scores to identify the best hyperparameters and to make it easier, we plotted the value of hyperparameters vs the respective cross-validated accuracy scores! &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sounds good but doesn’t seem to be a great option though!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once we’ve completed the grid search, the following attributes can be very useful! We can choose to examine:&lt;br&gt;
☑ the best_score_ , the highest cross-validated accuracy score&lt;br&gt;
☑ the best_params_, the optimal value for the hyperparameters, and&lt;br&gt;
☑ the best_estimator_, which is the best model that has the best hyperparameter.&lt;/p&gt;

&lt;p&gt;Let us now examine these for our example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# examine the best model
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_estimator_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;algorithm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'auto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;leaf_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metric&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'minkowski'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;metric_params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;K&lt;/code&gt;=13 has been chosen, remember, &lt;code&gt;K&lt;/code&gt;=13 was one of the values of &lt;code&gt;K&lt;/code&gt; that gave highest cross-validated accuracy score.✔&lt;br&gt;
So far so good!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#searching-for-multiple-hyperparameters"&gt;
  &lt;/a&gt;
  Searching for Multiple Hyperparameters
&lt;/h3&gt;

&lt;p&gt;In this example, the only hyperparameter that we searched for was &lt;code&gt;n_neighbors&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What if there were many such hyperparameters?&lt;br&gt;
We may think, “Why not tune each hyperparameter independently?”&lt;/p&gt;

&lt;p&gt;Well, we may independently search for the optimal values for each of the hyperparameters; but the model may perform best at some values of the parameters that are very different from the individual best values.&lt;/p&gt;

&lt;p&gt;So, we have to search for the combination of the parameters that optimizes performance rather than the individual best parameters.&lt;br&gt;
Let us build on the same example of KNNClassifier. &lt;/p&gt;

&lt;p&gt;In addition to &lt;code&gt;n_neighbors&lt;/code&gt;, let us also search for the optimal weighting strategy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The default weighting option is &lt;code&gt;‘uniform’&lt;/code&gt; where all points are weighted equally and &lt;code&gt;‘distance’&lt;/code&gt; option weights points by the inverse of their distance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this case, closer neighbors of a query point will have a greater influence than neighbors which are far away.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#define-the-parameter-grid"&gt;
  &lt;/a&gt;
  Define the Parameter Grid
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# define the parameter values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;weight_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# create a parameter grid: map the parameter names to the values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;weight_options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# param_grid
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let us instantiate and fit the grid and view results, as before.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# instantiate and fit the grid
&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# view the results
&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv_results_&lt;/span&gt;&lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="s"&gt;'mean_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'std_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'params'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="c1"&gt;# Results
&lt;/span&gt;&lt;span class="n"&gt;mean_test_score&lt;/span&gt; &lt;span class="n"&gt;std_test_score&lt;/span&gt;  &lt;span class="n"&gt;params&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mf"&gt;0.953333&lt;/span&gt;    &lt;span class="mf"&gt;0.052068&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;16&lt;/span&gt;  &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;  &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;18&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We see that we have 30*2=60 models.(As we had 30 possible values for &lt;code&gt;n_neighbors&lt;/code&gt; and 2 possible values for weights)&lt;br&gt;
As we chose 10-fold cross-validation, there will be 60*10=600 predictions made!&lt;/p&gt;

&lt;p&gt;Time to look at our model’s best score and parameters that yielded the best score.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# examine the best model
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# best score and best parameters
&lt;/span&gt;&lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We obtain the same best cross-validated accuracy score of 0.98, with n_neighbors=13 and weights= ‘uniform’.&lt;br&gt;
Now, let us say we have to tune 4 hyperparameters and we have a list of 10 possible values for each of the hyperparameters.&lt;br&gt;
This process creates 10*10*10*10 =10,000 models and when we run 10 fold cross-validation, there are 100,000 predictions made.&lt;br&gt;
Clearly, things do scale up very quickly and can soon become computationally infeasible.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-to-search-more-efficiently-for-hyperparameters-using-randomized-search"&gt;
  &lt;/a&gt;
  How to Search More Efficiently for Hyperparameters Using Randomized Search
&lt;/h2&gt;

&lt;p&gt;We shall now try to rephrase the limitations of Grid Search better, in a more formal way.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Say we have to search for M parameters; Let &lt;code&gt;p_1, p_2,p_3, …, p_M&lt;/code&gt; be the &lt;code&gt;M&lt;/code&gt; parameters. &lt;/li&gt;
&lt;li&gt;Let the number of values that we would like to search over for &lt;code&gt;p_1&lt;/code&gt; be &lt;code&gt;n1&lt;/code&gt;, for &lt;code&gt;p_2&lt;/code&gt; be &lt;code&gt;n2&lt;/code&gt;, and so on, with &lt;code&gt;nM&lt;/code&gt; values for &lt;code&gt;p_M&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Grid Search considers all possible hyperparameter settings (combinations) into account and creates a model for each possible setting to choose the best model with optimal hyperparameters.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To understand it better, assume that out of &lt;code&gt;M&lt;/code&gt; parameters, we decide to freeze the values of all hyperparameters except one, say the M_th parameter &lt;code&gt;p_M&lt;/code&gt;. So, Grid Search involves searching through the list of &lt;code&gt;nM&lt;/code&gt; values for the M_th hyperparameter; So, there are &lt;code&gt;nM&lt;/code&gt; models created.&lt;/li&gt;
&lt;li&gt;Suppose we now freeze the values of all hyperparameters except two, say the last two (&lt;code&gt;p_M&lt;/code&gt; and &lt;code&gt;p_(M-1)&lt;/code&gt;). We now have to search through all possible combinations of &lt;code&gt;p_M&lt;/code&gt; and &lt;code&gt;p_(M-1)&lt;/code&gt;, each having &lt;code&gt;nM&lt;/code&gt; and &lt;code&gt;n_(M-1)&lt;/code&gt; possible values that we could search over.&lt;/li&gt;
&lt;li&gt;We now take a step back and freeze the value of &lt;code&gt;p_M-1&lt;/code&gt; and search through all values for &lt;code&gt;p_M&lt;/code&gt;; To account for all possible combinations, we should repeat the procedure for all &lt;code&gt;n_M-1&lt;/code&gt; values for &lt;code&gt;p_M-1&lt;/code&gt;. So, this process would leave us with &lt;code&gt;n_(M-1) * nM&lt;/code&gt; models.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope it’s clear how the complexity scales with increasing values of the number of values each hyperparameter could take. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the above example with M hyperparameters, we would have &lt;code&gt;n1*n2*n3*…*n_M&lt;/code&gt; models. This is why we said that things could scale up quickly and become computationally intractable with Grid Search.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this motivation to make hyperparameter search computationally more efficient, let us proceed to understand Randomized Search.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#understanding-randomizedsearchcv"&gt;
  &lt;/a&gt;
  Understanding RandomizedSearchCV
&lt;/h3&gt;

&lt;p&gt;In contrast to &lt;code&gt;GridSearchCV&lt;/code&gt;, not all parameter values are tried out in &lt;code&gt;RandomizedSearchCV&lt;/code&gt;, but rather a fixed number of parameter settings is sampled from the specified distributions/ list of parameters.&lt;/p&gt;

&lt;p&gt;If some of the hyperparameters that we’re searching for are continuous, then we should specify the distribution rather than the list of values, while defining the parameter grid. How do we define the fixed number of parameter settings?&lt;/p&gt;

&lt;p&gt;The number of parameter settings that are tried is given by &lt;code&gt;n_iter&lt;/code&gt;. There's a quality vs computational cost trade-off in picking &lt;code&gt;n_iter&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A very small value of &lt;code&gt;n_iter&lt;/code&gt; would imply that we’re more likely to find a suboptimal solution, because we are actually considering too few combinations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A very high value of n_iter would mean we can ideally get closer to finding the best hyperparameters that yield the best model, but this again comes with a high computation cost as before. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In fact, if we set &lt;code&gt;n_iter= n1*n2*n3*…*n_M&lt;/code&gt; from the previous example, then, we’re essentially considering all possible hyperparameter combinations and now Randomized Search and Grid Search are equivalent.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us build on the same example of KNNClassifier from the previous section.&lt;/p&gt;

&lt;p&gt;Let us search for the optimal weighting strategy and &lt;code&gt;n_neighbors&lt;/code&gt;. And now, let us implement Randomized Search in scikit-learn and do the following steps, as we did for Grid Search.&lt;br&gt;
&lt;strong&gt;1. Import RandomizedSearchCV class&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RandomizedSearchCV&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Define the parameter grid&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# specify "parameter distributions" rather than a "parameter grid"
&lt;/span&gt;&lt;span class="n"&gt;param_dist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;weight_options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Instantiate the grid; Set n_iter=10, Fit the grid &amp;amp; View the results&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# n_iter controls the number of searches
&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RandomizedSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_dist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_iter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv_results_&lt;/span&gt;&lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="s"&gt;'mean_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'std_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'params'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="c1"&gt;#DataFrame
&lt;/span&gt;
&lt;span class="n"&gt;mean_test_score&lt;/span&gt; &lt;span class="n"&gt;std_test_score&lt;/span&gt;  &lt;span class="n"&gt;params&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.033333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mf"&gt;0.980000&lt;/span&gt;    &lt;span class="mf"&gt;0.030551&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;0.953333&lt;/span&gt;    &lt;span class="mf"&gt;0.042687&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.044222&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.044222&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Examine the best score and best hyperparameters&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# examine the best model
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Parameters of the best model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Surprisingly, we see that the highest accuracy score obtained in this case, where we only looked at 10 different parameter settings instead of 60 in Grid Search, is the same as before: 0.98 ✔&lt;/li&gt;
&lt;li&gt;And the value for n_neighbors= 18, which is also one of the optimal values that we got when we initially searched for the optimal value of n_neighbors. (Recall from the earlier blog post with the same example)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Maybe we just got lucky?&lt;br&gt;
What is the guarantee that we will always get the best results?&lt;br&gt;
Ah, this question makes perfect sense, doesn’t it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let us do the following now: Let us run &lt;code&gt;RandomizedSearchCV&lt;/code&gt; for multiple times and see how many times we really end up getting lucky!&lt;/p&gt;

&lt;p&gt;➡️Run RandomizedSearchCV 20 times and see what happens; We log the best_score_ for every run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# run RandomizedSearchCV 20 times (with n_iter=10) and record the best score
&lt;/span&gt;&lt;span class="n"&gt;best_scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RandomizedSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_dist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_iter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;best_scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Let&lt;/span&gt; &lt;span class="n"&gt;us&lt;/span&gt; &lt;span class="n"&gt;examine&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best_scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Output: Best Scores
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upon examining the best scores above for all the 20 runs, we see that we get the best accuracy score of 0.98 about 13 times.&lt;br&gt;
Looks like we’re lucky indeed! What about the other 7 times when we didn't quite get the best accuracy score? These accuracy scores are around 0.973 which is pretty close to 0.98.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This observation convinces us that even though Randomized Search may not always give the hyperparameters of the best performing model, the models obtained by using these hyperparameters do not perform much worse compared to the best model obtained from Grid Search. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means, the best models thus obtained, with the hyperparameters from randomized search are clearly very close to the optimal model.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In essence, these may not be the best hyperparameters, but certainly close to the best hyperparameters, except that these are found under resource-constrained settings. Hope you all understood how we could use Randomized Search for hyperparameter tuning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hope you all enjoyed reading this post.😀&lt;/p&gt;

&lt;p&gt;Happy Learning! Until next time!✨&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;[1]&lt;a href="https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn"&gt;https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn&lt;/a&gt;&lt;br&gt;
[2]&lt;a href="http://scikitlearn.org/stable/modules/cross_validation.html"&gt;http://scikitlearn.org/stable/modules/cross_validation.html&lt;/a&gt;&lt;br&gt;
[3]&lt;a href="http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html"&gt;http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html&lt;/a&gt;&lt;br&gt;
[4]&lt;a href="http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.RandomizedSearchCV.html"&gt;http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.RandomizedSearchCV.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cover Image: Photo by &lt;a href="https://unsplash.com/@rosssneddon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ross Sneddon&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This post is a comprehensive post for understanding model evaluation, and hyperparameter search. This is a compiled, and improved version of a few of my earlier shorter posts.&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Shop by Brand Extension for Magento 2
</title>
      <author>Mehul Patel</author>
      <pubDate>Tue, 24 Aug 2021 11:10:51 +0000</pubDate>
      <link>https://dev.to/dolphinwebsolution/shop-by-brand-extension-for-magento-2-5hb5</link>
      <guid>https://dev.to/dolphinwebsolution/shop-by-brand-extension-for-magento-2-5hb5</guid>
      <description>&lt;p&gt;Allows your customers in their desire to navigate the store in search of the favourite brands. Create customised pages, slider, A-Z alphabetical listing, and more features.&lt;/p&gt;

&lt;p&gt;Display brands separately as the main menu item.&lt;br&gt;
Sort and arrange the brands in an Asc/Desc manner.&lt;br&gt;
Layered navigation on brand-specific product listing pages.&lt;br&gt;
Display featured brand slider on any page using custom widget.&lt;br&gt;
Upload a custom logo for the brand.&lt;br&gt;
Display brands as sliders.&lt;br&gt;
Alphabetical listing of brands.&lt;br&gt;
Search Filters &amp;amp; Alphabetical order display.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  OVERVIEW
&lt;/h2&gt;

&lt;p&gt;It is proven that nine-in-ten online searchers stick to the store brands. Additionally, customers always stick to a single brand.&lt;br&gt;
In a multi-brand store, shoppers expect to have a possibility to shop by brands.&lt;/p&gt;

&lt;p&gt;Shoppers become emotionally attached to brands very quickly. Especially when the products they once found attractive and suitable confirm their quality regularly. Thus, the first thing they often do when they reach online stores is to browse by their favorite brand. Apparently, it is better not to stand in the customers' way when they are rushing to their favorite brands. with &lt;a href="https://dolphinwebsolution.com/shop/shop-by-brand-for-magento.html"&gt;Magento 2 Shop by Brand extension&lt;/a&gt;, you can make the brand-to-customer connection a lot easier and well-directed.&lt;/p&gt;

&lt;p&gt;Shop by Brand Magento 2 extension creates a separate searching tool for your shoppers to freely investigate each brand on your website. All brands will be gathered on one page to let your visitors choose from. After clicking any of the brand the category page will be open and product related to that brand will be listed there. Moreover, each brand will have its own space which contains the description, logo, and products. It is obvious that your shoppers now can shop with ease when being able to filter items by brands. Another important point of this extension is that if admin wants to display featured brand slider then he can do that simply by adding custom widget from the backend. Admin can create as many brands as they want, edit brand details (name, description, and image), filterable by brand, and easily customize the product page and product list page. Admin can also set the Meta details for the brand page. Customers will easily be able to sort brands by alphabetical names and also in Asc and Desc order.&lt;/p&gt;

&lt;p&gt;For more detail click Here: &lt;a href="https://dolphinwebsolution.com/shop/shop-by-brand-for-magento.html"&gt;Shop by brand Extension&lt;/a&gt;&lt;/p&gt;

</description>
      <category>magento2extension</category>
    </item>
    <item>
      <title>HighlightJS - How to show some code safely?</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 24 Aug 2021 11:06:36 +0000</pubDate>
      <link>https://dev.to/adaendra/highlightjs-how-to-show-some-code-safely-3j0d</link>
      <guid>https://dev.to/adaendra/highlightjs-how-to-show-some-code-safely-3j0d</guid>
      <description>&lt;p&gt;In our job, it can be really useful to expose a bloc of code without execute it. Generally, we can use Markdown or some Wiki to do it. But sometimes, we want to use it on a website.&lt;/p&gt;

&lt;p&gt;And in this case, &lt;strong&gt;HighlightJS&lt;/strong&gt; is our savior!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-highlightjs"&gt;
  &lt;/a&gt;
  What is HighlightJS?
&lt;/h2&gt;

&lt;p&gt;It's a JavaScript syntax highlighter with language auto-detection and zero dependencies.&lt;/p&gt;

&lt;p&gt;And currently &lt;strong&gt;192 languages&lt;/strong&gt; and &lt;strong&gt;242 styles&lt;/strong&gt; are implemented!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Tibixx/embed/NLpNar?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it?
&lt;/h2&gt;

&lt;p&gt;Once you've installed it &lt;em&gt;(with NodeJS or basic JavaScript import)&lt;/em&gt;, put some &lt;strong&gt;pre/code&lt;/strong&gt; &lt;em&gt;(Example just below)&lt;/em&gt; blocks with our code to show and that's it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;code&amp;gt;&lt;/span&gt;
    ...
  &lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Otherwise, you can define which language to highlight&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"language-html"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or add a class to ignore some blocks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nohighlight"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Their &lt;a href="https://highlightjs.org/usage/"&gt;documentation&lt;/a&gt; is quite complete, so go check it if you want more informations!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;HighlightJS website : &lt;a href="https://highlightjs.org/"&gt;https://highlightjs.org/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you ! 🍺&lt;/p&gt;

</description>
      <category>ui</category>
      <category>html</category>
    </item>
    <item>
      <title>Should I use Twitter as a Dev? Tell me about your Twitter experiences..</title>
      <author>Rob OLeary</author>
      <pubDate>Tue, 24 Aug 2021 10:59:39 +0000</pubDate>
      <link>https://dev.to/robole/should-i-use-twitter-as-a-dev-i-have-never-have-tell-me-about-your-twitter-experiences-2pld</link>
      <guid>https://dev.to/robole/should-i-use-twitter-as-a-dev-i-have-never-have-tell-me-about-your-twitter-experiences-2pld</guid>
      <description>&lt;p&gt;I went through phases of using social media over the years, but I always stopped. I found that it doesn't suit my personality. I'd rather do something in the real world. &lt;/p&gt;

&lt;p&gt;From time to time, I see people talk about Dev Twitter, and occasionally a story leads me to read a Twitter thread (as a visitor killing the popups to get to the content). The pandemic did make me rethink this, because the opportunities for doing things in real life largely evaporated, but I resisted. &lt;/p&gt;

&lt;p&gt;What I would like to know from you, as a Dev on Twitter, how have you benefited from using Twitter? &lt;/p&gt;

&lt;p&gt;And given your time back, would you do it all again, knowing what you know?&lt;/p&gt;




&lt;p&gt;Cover Image - loud white birds By Arnoudt, BE on noun project&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>Develop Crypto Payment Gateway</title>
      <author>Stephen Hardy</author>
      <pubDate>Tue, 24 Aug 2021 10:37:16 +0000</pubDate>
      <link>https://dev.to/stephen_hardy98/develop-crypto-payment-gateway-1ap6</link>
      <guid>https://dev.to/stephen_hardy98/develop-crypto-payment-gateway-1ap6</guid>
      <description>&lt;p&gt;Bitcoin and Ethereum continue to be the most used digital currencies for processing payments. The circulating supply of Bitcoin is 43.5% and Ethereum 18.5% respectively. According to Statista, the number of Ethereum and Bitcoin payments in July 2021 was 1.1 million and 250,000 respectively. &lt;/p&gt;

&lt;p&gt;Are you that entrepreneur who wishes to do everything fast? The business of cryptocurrency transaction processing is apt for you. Bitcoin, the world’s most valuable digital currency, witnessed a speed of 9000 transactions per second on its Scaling Test Network (STN) in January 2021. Hence, aspiring techpreneurs can take the big step now and commence customized Crypto payment gateway development. &lt;/p&gt;

&lt;p&gt;Source:&amp;gt;&amp;gt;&amp;gt; &lt;a href="https://www.appdupe.com/blog/cryptocurrency-payment-gateway-development/"&gt;Cryptocurrency Payment Gateway Development - A Detailed Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>bitcoinpayment</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 13, The Statistics Module</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 24 Aug 2021 10:25:29 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-13-the-statistics-module-2bb5</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-13-the-statistics-module-2bb5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-cover-the-raw-statistics-endraw-module-in-python"&gt;
  &lt;/a&gt;
  Today we will cover the &lt;code&gt;statistics&lt;/code&gt; module in python.
&lt;/h2&gt;




&lt;p&gt;Python has the built-in module &lt;code&gt;statistics&lt;/code&gt; that you can use to calculate mathematical statistics of numeric data. You do not require to install anything extra. This &lt;code&gt;statistics&lt;/code&gt; module was introduced new in Python 3.4.&lt;/p&gt;

&lt;p&gt;The below sample shows the various functions in the module. I have ordered the methods as per the level of usage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;statistics&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the mean (average) of the given data
&lt;/span&gt;&lt;span class="mf"&gt;5.3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the mode (central tendency) of the given numeric or nominal data
&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;#Calculates the harmonic mean of the given data
&lt;/span&gt;&lt;span class="mf"&gt;2.8317788515563547&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#StatisticsError is raised if data is empty, or any element is less than zero. 
#Harmonic mean doesn't support negative numbers
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;harmonic_mean&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_fail_neg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errmsg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;164&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_sum&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;genexpr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_fail_neg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errmsg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;289&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_fail_neg&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errmsg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;harmonic&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;negative&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the median (middle value) of the given data
&lt;/span&gt;&lt;span class="mf"&gt;6.5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the standard deviation from a sample of data
&lt;/span&gt;&lt;span class="mf"&gt;2.94580681270476&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the variance from a sample of data
&lt;/span&gt;&lt;span class="mf"&gt;8.677777777777777&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median_high&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the high median of the given data
&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median_low&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the low median of the given data
&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median_grouped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the median of grouped continuous data
&lt;/span&gt;&lt;span class="mf"&gt;6.5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvariance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the variance of an entire population(dataset)
&lt;/span&gt;&lt;span class="mf"&gt;7.81&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pstdev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the standard deviation from an entire population
&lt;/span&gt;&lt;span class="mf"&gt;2.794637722496424&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# If data is empty, StatisticsError will be raised.
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;430&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"no median for empty data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will find a more detailed and comprehensive explaination at the &lt;a href="https://docs.python.org/3/library/statistics.html"&gt;official documentation&lt;/a&gt;&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>AWS Certified Cloud Practitioner CLF-C01 Exam Questions Part 2</title>
      <author>awslagi.com</author>
      <pubDate>Tue, 24 Aug 2021 10:15:57 +0000</pubDate>
      <link>https://dev.to/awslagi/aws-certified-cloud-practitioner-clf-c01-exam-questions-part-2-oh2</link>
      <guid>https://dev.to/awslagi/aws-certified-cloud-practitioner-clf-c01-exam-questions-part-2-oh2</guid>
      <description>&lt;p&gt;Source:&lt;/p&gt;

&lt;p&gt;AWS: &lt;a href="https://www.awslagi.com"&gt;https://www.awslagi.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GCP: &lt;a href="https://www.gcp-examquestions.com"&gt;https://www.gcp-examquestions.com&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which service provides a user the ability to warehouse data in the AWS Cloud?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon EFS
B. Amazon Redshift
C. Amazon RDS
D. Amazon VPC
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user is planning to migrate an application workload to the AWS Cloud. Which control becomes the responsibility of AWS once the migration is complete?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Patching the guest operating system
B. Maintaining physical and environmental controls
C. Protecting communications and maintaining zone security
D. Patching specific applications
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can be used to provide an on-demand, cloud-based contact center?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Direct Connect
B. Amazon Connect
C. AWS Support Center
D. AWS Managed Services
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What tool enables customers without an AWS account to estimate costs for almost all AWS services?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Cost Explorer
B. TCO Calculator
C. AWS Budgets
D. Simple Monthly Calculator
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which component must be attached to a VPC to enable inbound Internet access?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. NAT gateway
B. VPC endpoint
C. VPN connection
D. Internet gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which pricing model would result in maximum Amazon Elastic Compute Cloud (Amazon EC2) savings for a database server that must be online for one year?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Spot Instance
B. On-Demand Instance
C. Partial Upfront Reserved Instance
D. No Upfront Reserved Instance
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has a MySQL database running on a single Amazon EC2 instance. The company now requires higher availability in the event of an outage. Which set of tasks would meet this requirement?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Add an Application Load Balancer in front of the EC2 instance
B. Configure EC2 Auto Recovery to move the instance to another Availability Zone
C. Migrate to Amazon RDS and enable Multi-AZ
D. Enable termination protection for the EC2 instance to avoid outages
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to ensure that AWS Management Console users are meeting password complexity requirements. How can the company configure password complexity?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Using an AWS IAM user policy
B. Using an AWS Organizations service control policy (SCP)
C. Using an AWS IAM account password policy
D. Using an AWS Security Hub managed insight
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Under the AWS shared responsibility model, which of the following is the customer’s responsibility?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Patching guest OS and applications
B. Patching and fixing flaws in the infrastructure
C. Physical and environmental controls
D. Configuration of AWS infrastructure devices
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following tasks is required to deploy a PCI-compliant workload on AWS?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Use any AWS service and implement PCI controls at the application layer
B. Use an AWS service that is in-scope for PCI compliance and raise an AWS support ticket to enable PCI compliance at the application layer
C. Use any AWS service and raise an AWS support ticket to enable PCI compliance on that service
D. Use an AWS service that is in scope for PCI compliance and apply PCI controls at the application layer
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which are benefits of using Amazon RDS over Amazon EC2 when running relational databases on AWS? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Automated backups
B. Schema management
C. Indexing of tables
D. Software patching
E. Extract, transform, and load (ETL) management
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What does the Amazon S3 Intelligent-Tiering storage class offer?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Payment flexibility by reserving storage capacity
B. Long-term retention of data by copying the data to an encrypted Amazon Elastic Block Store (Amazon EBS) volume
C. Automatic cost savings by moving objects between tiers based on access pattern changes
D. Secure, durable, and lowest cost storage for data archival
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has multiple data sources across the organization and wants to consolidate data into one data warehouse. Which AWS service can be used to meet this requirement?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon DynamoDB
B. Amazon Redshift
C. Amazon Athena
D. Amazon QuickSight
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can be used to track resource changes and establish compliance?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon CloudWatch
B. AWS Config
C. AWS CloudTrail
D. AWS Trusted Advisor
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user has underutilized on-premises resources. Which AWS Cloud concept can BEST address this issue?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. High availability
B. Elasticity
C. Security
D. Loose coupling
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user has a stateful workload that will run on Amazon EC2 for the next 3 years. What is the MOST cost-effective pricing model for this workload?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. On-Demand Instances
B. Reserved Instances
C. Dedicated Instances
D. Spot Instances
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A cloud practitioner needs an Amazon EC2 instance to launch and run for 7 hours without interruptions. What is the most suitable and cost-effective option for this task?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. On-Demand Instance
B. Reserved Instance
C. Dedicated Host
D. Spot Instance
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following are benefits of using AWS Trusted Advisor? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Providing high-performance container orchestration
B. Creating and rotating encryption keys
C. Detecting underutilized resources to save costs
D. Improving security by proactively monitoring the AWS environment
E. Implementing enforced tagging across AWS resources
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A developer has been hired by a large company and needs AWS credentials. Which are security best practices that should be followed? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Grant the developer access to only the AWS resources needed to perform the job.
B. Share the AWS account root user credentials with the developer.
C. Add the developer to the administrator’s group in AWS IAM.
D. Configure a password policy that ensures the developer’s password cannot be changed.
E. Ensure the account password policy requires a minimum length.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A E&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS storage service is designed to transfer petabytes of data in and out of the cloud?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Storage Gateway
B. Amazon S3 Glacier Deep Archive
C. Amazon Lightsail
D. AWS Snowball
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service allows for effective cost management of multiple AWS accounts?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Organizations
B. AWS Trusted Advisor
C. AWS Direct Connect
D. Amazon Connect
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is piloting a new customer-facing application on Amazon Elastic Compute Cloud (Amazon EC2) for one month. What pricing model is appropriate?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Reserved Instances
B. Spot Instances
C. On-Demand Instances
D. Dedicated Hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS tools automatically forecast future AWS costs?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Support Center
B. AWS Total Cost of Ownership (TCO) Calculator
C. AWS Simple Monthly Calculator
D. Cost Explorer
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Under the AWS shared responsibility model, which of the following is a responsibility of AWS?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Enabling server-side encryption for objects stored in S3
B. Applying AWS IAM security policies
C. Patching the operating system on an Amazon EC2 instance
D. Applying updates to the hypervisor
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user is able to set up a master payer account to view consolidated billing reports through:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Budgets.
B. Amazon Macie.
C. Amazon QuickSight.
D. AWS Organizations.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Performing operations as code is a design principle that supports which pillar of the AWS Well-Architected Framework?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Performance efficiency
B. Operational excellence
C. Reliability
D. Security
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which design principle is achieved by following the reliability pillar of the AWS Well-Architected Framework?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Vertical scaling
B. Manual failure recovery
C. Testing recovery procedures
D. Changing infrastructure manually
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What is a characteristic of Convertible Reserved Instances (RIs)?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Users can exchange Convertible RIs for other Convertible RIs from a different instance family.
B. Users can exchange Convertible RIs for other Convertible RIs in different AWS Regions.
C. Users can sell and buy Convertible RIs on the AWS Marketplace.
D. Users can shorten the term of their Convertible RIs by merging them with other Convertible RIs.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The user is fully responsible for which action when running workloads on AWS?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Patching the infrastructure components
B. Implementing controls to route application traffic
C. Maintaining physical and environmental controls
D. Maintaining the underlying infrastructure components
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;An architecture design includes Amazon EC2, an Elastic Load Balancer, and Amazon RDS. What is the BEST way to get a monthly cost estimation for this architecture?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Open an AWS Support case, provide the architecture proposal, and ask for a monthly cost estimation.
B. Collect the published prices of the AWS services and calculate the monthly estimate.
C. Use the AWS Simple Monthly Calculator to estimate the monthly cost.
D. Use the AWS Total Cost of Ownership (TCO) Calculator to estimate the monthly cost.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service allows users to download security and compliance reports about the AWS infrastructure on demand?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon GuardDuty
B. AWS Security Hub
C. AWS Artifact
D. AWS Shield
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS managed services can be used to extend an on-premises data center to the AWS network? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS VPN
B. NAT gateway
C. AWS Direct Connect
D. Amazon Connect
E. Amazon Route 53
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which requirement must be met for a member account to be unlinked from an AWS Organizations account?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. The linked account must be actively compliant with AWS System and Organization Controls (SOC).
B. The payer and the linked account must both create AWS Support cases to request that the member account be unlinked from the organization.
C. The member account must meet the requirements of a standalone account.
D. The payer account must be used to remove the linked account from the organization.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What AWS benefit refers to a customer’s ability to deploy applications that scale up and down the meet variable demand?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Elasticity
B. Agility
C. Security
D. Scalability
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;During a compliance review, one of the auditors requires a copy of the AWS SOC 2 report. Which service should be used to submit this request?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Personal Health Dashboard
B. AWS Trusted Advisor
C. AWS Artifact
D. Amazon S3
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to set up a highly available workload in AWS with a disaster recovery plan that will allow the company to recover in case of a regional service interruption. Which configuration will meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Run on two Availability Zones in one AWS Region, using the additional Availability Zones in the AWS Region for the disaster recovery site.
B. Run on two Availability Zones in one AWS Region, using another AWS Region for the disaster recovery site.
C. Run on two Availability Zones in one AWS Region, using a local AWS Region for the disaster recovery site.
D. Run across two AWS Regions, using a third AWS Region for the disaster recovery site.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has a 500 TB image repository that needs to be transported to AWS for processing. Which AWS service can import this data MOST cost-effectively?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Snowball
B. AWS Direct Connect
C. AWS VPN
D. Amazon S3
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can run a managed PostgreSQL database that provides online transaction processing (OLTP)?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon DynamoDB
B. Amazon Athena
C. Amazon RDS
D. Amazon EMR
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following assist in identifying costs by department? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Using tags on resources
B. Using multiple AWS accounts
C. Using an account manager
D. Using AWS Trusted Advisor
E. Using Consolidated Billing
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to allow full access to an Amazon S3 bucket for a particular user. Which element in the S3 bucket policy holds the user details that describe who needs access to the S3 bucket?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Principal
B. Action
C. Resource
D. Statement
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company must store critical business data in Amazon S3 with a backup to another AWS Region. How can this be achieved?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Use an Amazon CloudFront Content Delivery Network (CDN) to cache data globally
B. Set up Amazon S3 cross-region replication to another AWS Region
C. Configure the AWS Backup service to back up to the data to another AWS Region
D. Take Amazon S3 bucket snapshots and copy that data to another AWS Region
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS Cloud service can send alerts to customers if custom spending thresholds are exceeded?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Budgets
B. AWS Cost Explorer
C. AWS Cost Allocation Tags
D. AWS Organizations
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What is the recommended method to request penetration testing on AWS resources?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Open a support case
B. Fill out the Penetration Testing Request Form
C. Request a penetration test from your technical account manager
D. Contact your AWS sales representative
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user needs to automatically discover, classify, and protect sensitive data stored in Amazon S3. Which AWS service can meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon Inspector
B. Amazon Macie
C. Amazon GuardDuty
D. AWS Secrets Manager
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which components are required to build a successful site-to-site VPN connection on AWS? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Internet gateway
B. NAT gateway
C. Customer gateway
D. Transit gateway
E. Virtual private gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D E&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which Amazon EC2 pricing option is best suited for applications with short-term, spiky, or unpredictable workloads that cannot be interrupted?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Spot Instances
B. Dedicated Hosts
C. On-Demand Instances
D. Reserved Instances
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS cloud architecture principle states that systems should reduce interdependencies?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Scalability
B. Services, not servers
C. Removing single points of failure
D. Loose coupling
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What is the MOST effective resource for staying up to date on AWS security announcements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Personal Health Dashboard
B. AWS Secrets Manager
C. AWS Security Bulletins
D. Amazon Inspector
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service offers persistent storage for a file system?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon S3
B. Amazon EC2 instance store
C. Amazon Elastic Block Store (Amazon EBS)
D. Amazon ElastiCache
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following allows AWS users to manage cost allocations for billing?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Tagging resources
B. Limiting who can create resources
C. Adding a secondary payment method
D. Running all operations on a single AWS account
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following tasks can only be performed after signing in with AWS account root user credentials? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Closing an AWS account
B. Creating a new IAM policy
C. Changing AWS Support plans
D. Attaching a role to an Amazon EC2 instance
E. Generating access keys for IAM users
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Fault tolerance refers to:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. the ability of an application to accommodate growth without changing design
B. how well and how quickly an application’s environment can have lost data restored
C. how secure your application is
D. the built-in redundancy of an application’s components
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company operating in the AWS Cloud requires separate invoices for specific environments, such as development, testing, and production. How can this be achieved?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Use multiple AWS accounts
B. Use resource tagging
C. Use multiple VPCs
D. Use Cost Explorer
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can be used in the application deployment process?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS AppSync
B. AWS Batch
C. AWS CodePipeline
D. AWS DataSync
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What can be used to reduce the cost of running Amazon EC2 instances? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Spot Instances for stateless and flexible workloads
B. Memory optimized instances for high-compute workloads
C. On-Demand Instances for high-cost and sustained workloads
D. Reserved Instances for sustained workloads
E. Spend limits set using AWS Budgets
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is launching an e-commerce site that will store and process credit card data. The company requires information about AWS compliance reports and AWS agreements. Which AWS service provides on-demand access to these items?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Certificate Manager
B. AWS Config
C. AWS Artifact
D. AWS CloudTrail
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service or feature allows the user to manager cross-region application traffic?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon AppStream 2.0
B. Amazon VPC
C. Elastic Load Balancer
D. Amazon Route 53
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can be used to track unauthorized API calls?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Config
B. AWS CloudTrail
C. AWS Trusted Advisor
D. Amazon Inspector
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user needs to regularly audit and evaluate the setup of all AWS resources, identify non-compliant accounts, and be notified when a resource changes. Which AWS service can be used to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Trusted Advisor
B. AWS Config
C. AWS Resource Access Manager
D. AWS Systems Manager
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user is planning to launch two additional Amazon EC2 instances to increase availability. Which action should the user take?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Launch the instances across multiple Availability Zones in a single AWS Region.
B. Launch the instances as EC2 Reserved Instances in the same AWS Region and the same Availability Zone.
C. Launch the instances in multiple AWS Regions, but in the same Availability Zone.
D. Launch the instances as EC2 Spot Instances in the same AWS Region, but in different Availability Zones.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company’s application has flexible start and end times. Which Amazon EC2 pricing model will be the MOST cost-effective?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. On-Demand Instances
B. Spot Instances
C. Reserved Instances
D. Dedicated Hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Under the AWS shared responsibility model, what are the customer’s responsibilities? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Physical and environmental security
B. Physical network devices including firewalls
C. Storage device decommissioning
D. Security of data in transit
E. Data integrity authentication
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D E&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A cloud practitioner has a data analysis workload that is infrequently executed and can be interrupted without harm. To optimize for cost, which Amazon EC2 purchasing option should be used?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. On-Demand Instances
B. Reserved Instances
C. Spot Instances
D. Dedicated Hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS container service will help a user install, operate, and scale the cluster management infrastructure?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon Elastic Container Registry (Amazon ECR)
B. AWS Elastic Beanstalk
C. Amazon Elastic Container Service (Amazon ECS)
D. Amazon Elastic Block Store (Amazon EBS)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following allows an application running on an Amazon EC2 instance to securely write data to an Amazon S3 bucket without using long term credentials?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon Cognito
B. AWS Shield
C. AWS IAM role
D. AWS IAM user access key
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company with a Developer-level AWS Support plan provisioned an Amazon RDS database and cannot connect to it. Who should the developer contact for this level of support?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Support using a support case
B. AWS Professional Services
C. AWS technical account manager
D. AWS consulting partners
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What is the purpose of having an internet gateway within a VPC?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. To create a VPN connection to the VPC
B. To allow communication between the VPC and the Internet
C. To impose bandwidth constraints on internet traffic
D. To load balance traffic from the Internet across Amazon EC2 instances
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company must ensure that its endpoint for a database instance remains the same after a single Availability Zone service interruption. The application needs to resume database operations without the need for manual administrative intervention. How can these requirements be met?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Use multiple Amazon Route 53 routes to the standby database instance endpoint hosted on AWS Storage Gateway.
B. Configure Amazon RDS Multi-Availability Zone deployments with automatic failover to the standby.
C. Add multiple Application Load Balancers and deploy the database instance with AWS Elastic Beanstalk.
D. Deploy a single Network Load Balancer to distribute incoming traffic across multiple Amazon CloudFront origins.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS managed service can be used to distribute traffic between one or more Amazon EC2 instances?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. NAT gateway
B. Elastic Load Balancing
C. Amazon Athena
D. AWS PrivateLink
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;AWS Trusted Advisor provides recommendations on which of the following? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Cost optimization
B. Auditing
C. Serverless architecture
D. Performance
E. Scalability
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How can a company separate costs for network traffic, Amazon EC2, Amazon S3, and other AWS services by department?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Add department-specific tags to each resource
B. Create a separate VPC for each department
C. Create a separate AWS account for each department
D. Use AWS Organizations
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

</description>
      <category>aws</category>
      <category>awslagi</category>
      <category>googlecloud</category>
    </item>
    <item>
      <title>Trusted Solution for  How to Migrate Emails from Gmail to Office 365</title>
      <author>Isha</author>
      <pubDate>Tue, 24 Aug 2021 10:13:23 +0000</pubDate>
      <link>https://dev.to/isha13556615/trusted-solution-for-how-to-migrate-emails-from-gmail-to-office-365-2jo7</link>
      <guid>https://dev.to/isha13556615/trusted-solution-for-how-to-migrate-emails-from-gmail-to-office-365-2jo7</guid>
      <description>&lt;p&gt;How to migrate emails from Gmail to Office 365 directly?&lt;br&gt;
Here is the best way to export, import, move, transfer Gmail emails to Office 365 with Eml to Office 365 Migration Tool.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;How to Export Gmail Emails to Office 365 Direct Solution&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Have you been utilizing Gmail messages to send and accept your messages? Commonly individuals search for some incredible answers for moving messages starting with one customer then onto the next Migrate Emails from Gmail to Office 365. As we as a whole realize that Gmail is an email administration that gives some magnificent provisions yet because of the developments of the market, individuals are currently Migrate Emails from Gmail to Office 365. &lt;/p&gt;

&lt;p&gt;Presently on the off chance that we talk about Microsoft Office 365, it has to bring to the table clients with the absolute most fundamental provisions. Another best part is that you needn't bother with a specific gadget to get to your messages. Independent of your place and time, you can view your messages just by having a solid web association. &lt;/p&gt;

&lt;p&gt;This blog is about the clarification of why you need to move from Gmail emails to office 365. When you go through the steps referenced underneath, ready to comprehend the whole thing and carry out it with no problems. &lt;/p&gt;


&lt;h2&gt;&lt;strong&gt;Why do Users Migrate Emails from Gmail to Office 365 With Reasons?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Being a mainstream and notable suite, MS Office 365 is something that can help you a ton. How about we go through this segment with the goal that we can comprehend the significance of this move: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Components are magnificent:&lt;/strong&gt; it is the provisions of something that either acquire clients or decrease them. With the extraordinary provisions of Office 365, it assists clients with upgrading their proficiency in the most ideal manners.&lt;/li&gt; 

&lt;li&gt;
&lt;strong&gt;No Data Loss:&lt;/strong&gt; being a cloud-based stage, utilizes the capacity to chip away at their information without stressing over the misfortune.&lt;/li&gt; 

&lt;li&gt;
&lt;strong&gt;Safe stockpiling:&lt;/strong&gt; When it is tied in with getting and saving your information, no other email customer can beat Microsoft Office 365. That’s why users Migrate Emails from Gmail to Office 365&lt;/li&gt; 

&lt;li&gt;
&lt;strong&gt;Access from anyplace:&lt;/strong&gt;  simply a solid reliable web association is sufficient assuming you need to get to the records even from the bright corner of the world.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since you are entirely mindful of the explanations behind moving your Emails from Gmail to office 365, we should see how we can do it with full proficiency &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;How Might You Export Gmail Emails to Office 365 Step by Step?&lt;/strong&gt;&lt;/h3&gt; 

&lt;p&gt;Assuming you need to move Gmail emails to office 365, the most significant thing which is required is the right device to make it happen. We have introduced an astounding apparatus named &lt;strong&gt;&lt;a href="https://corbettsoftware.com/migration/eml/office-365.html"&gt;EML to Office 365 Migration Tool&lt;/a&gt;&lt;/strong&gt;, which consummately moves the messages. Not simply it makes the relocation cycle less overwhelming, you can things also. Presently, go through the steps offered underneath to comprehend the whole methodology of bringing in Gmail emails to Office 365: &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Remarkable Steps to Migrate Emails from Gmail to Office 365&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; The initial step is to &lt;strong&gt;download&lt;/strong&gt; the product from the above Download Now Button and afterward get it introduced &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kSCIV1J3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSCIV1J3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/1.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; In this step, open the product and snap on the&lt;strong&gt; ‘Open’&lt;/strong&gt; catch &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yFTNJUh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yFTNJUh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/2.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; After that hit&lt;strong&gt; ‘Email Accounts’&lt;/strong&gt; and afterward tap double an&lt;strong&gt; ‘Add Account’&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UOxw9nx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UOxw9nx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/3.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Fill the&lt;strong&gt; Gmail email id and password&lt;/strong&gt; to continue and Go to the &lt;strong&gt;‘Advanced Setting’&lt;/strong&gt; choices underneath &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9P8vck_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9P8vck_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/4.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt;Enter your &lt;strong&gt;IMAP server&lt;/strong&gt; any place it is inquired or hit &lt;strong&gt;Find&lt;/strong&gt; to auto fill &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iqj_ZHyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iqj_ZHyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/5.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Then, at that point, will consequently peruse the documents, files, and folders of Gmail Emails&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZuuuiIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZuuuiIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/6.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt;Then, You should simply tap on&lt;strong&gt; ‘Export’&lt;/strong&gt; out of the given alternatives tap on &lt;strong&gt;‘Office 365’&lt;/strong&gt; to proceed with the interaction &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3XPjt557--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3XPjt557--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/16.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well once you execute every one of the steps effectively, get your answer and you will want to change over Gmail emails to Office 365. Simply don't commit any errors since it can prompt a significant difficulty. &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Why Choose This Tool to Migrate Emails from Gmail to Office 365&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You will want to perform IMAP to the IMAP worker movement&lt;/li&gt; 

&lt;li&gt;You will not need to run over the issue of information misfortune&lt;/li&gt; 

&lt;li&gt;Specific relocation just as cluster movement is conceivable&lt;/li&gt; 

&lt;li&gt;Document configurations can likewise be changed over with the assistance of this device&lt;/li&gt; 

&lt;li&gt;Not simply that, the Corbett wizard tool permits you to export documents as per your comfort. You can easily convert into different file formats, document files, etc.&lt;/li&gt;
&lt;/ul&gt; 

&lt;h3&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;With the assistance of this blog, you may have seen how to move Gmail Emails to Office 365 in the most ideal manner. Simply this software and the right procedure are sufficient to help you complete the interaction&lt;/p&gt;

</description>
    </item>
    <item>
      <title>AWS SDKs for .Net : 1- AWSSDK.S3</title>
      <author>Ahmed Adel</author>
      <pubDate>Tue, 24 Aug 2021 10:09:14 +0000</pubDate>
      <link>https://dev.to/ahmedadel/aws-sdks-for-net-1-awssdk-s3-5e36</link>
      <guid>https://dev.to/ahmedadel/aws-sdks-for-net-1-awssdk-s3-5e36</guid>
      <description>&lt;p&gt;Let's start s series of articles about &lt;code&gt;AWS SDKs&lt;/code&gt; available for &lt;code&gt;.Net&lt;/code&gt; developers to use in their applications.&lt;/p&gt;

&lt;p&gt;First of all, let's ask a simple question...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%9E%BDwhat-is-the-aws-sdk-for-net"&gt;
  &lt;/a&gt;
  ➽What is the AWS SDK for .NET?
&lt;/h1&gt;

&lt;p&gt;☞The AWS SDK for .NET makes it easier to build .NET applications that tap into cost-effective, scalable, and reliable AWS services such as Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) and Amazon Elastic Compute Cloud (&lt;code&gt;Amazon EC2&lt;/code&gt;). The SDK simplifies the use of AWS services by providing a set of libraries that are consistent and familiar for .NET developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JMQ54ChT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gezp1dj5xdijne3b6n6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JMQ54ChT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gezp1dj5xdijne3b6n6.png" alt="AWS SDKs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start in this article with the first SDK which is &lt;code&gt;AWSSDK.S3&lt;/code&gt; ...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;AWSSDK.S3&lt;/code&gt; is a SDK that helps .Net Developers to use Access Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) in their applications  to create buckets and store objects.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; is storage for the Internet. It is designed to make web-scale computing easier.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, and inexpensive data storage infrastructure that Amazon uses to run its own global network of web sites, to read more about it &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html"&gt;go here&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Before starting, Here is the Github Repo for the code we are going to write today, clone it and use it if you want to test the SDK&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ahmed-Adel3"&gt;
        Ahmed-Adel3
      &lt;/a&gt; / &lt;a href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;
        AWSSDK.S3-Demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a simple implementation for AWSSDK.S3 which is one of the SDK provided by AWS for .Net applications to handle connections and operations on S3 buckets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
➽To use this repo :&lt;/h1&gt;
&lt;p&gt;☞You just to put your ows &lt;strong&gt;AWS Access Key&lt;/strong&gt; and &lt;strong&gt;AWS Secret Access Key&lt;/strong&gt; in the main method in the console app and try.&lt;/p&gt;

&lt;h1&gt;
➽What is the AWS SDK for .NET?&lt;/h1&gt;
&lt;p&gt;☞The AWS SDK for .NET makes it easier to build .NET applications that tap into cost-effective, scalable, and reliable AWS services such as Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) and Amazon Elastic Compute Cloud (&lt;code&gt;Amazon EC2&lt;/code&gt;). The SDK simplifies the use of AWS services by providing a set of libraries that are consistent and familiar for .NET developers.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67" alt="AWS SDKs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let's start in this article with the first SDK which is &lt;code&gt;AWSSDK.S3&lt;/code&gt; ...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AWSSDK.S3&lt;/code&gt; is a SDK that helps .Net Developers to use Access Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) in their applications  to create buckets and store objects.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; is storage for the Internet. It is designed to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#%E2%9E%BDinstalling-awssdks3-"&gt;
  &lt;/a&gt;
  ➽Installing AWSSDK.S3 :
&lt;/h1&gt;

&lt;p&gt;☞&lt;code&gt;AWSSDK.S3&lt;/code&gt; is installed mainly from Nuget, which is a package management system for the .NET platform. With NuGet, you can install the AWSSDK packages, as well as several other extensions, to your project, and here is &lt;a href="https://www.nuget.org/"&gt;Nuget Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is 3 ways to install &lt;code&gt;AWSSDK.S3&lt;/code&gt; (or any other Nuget Package in General)&lt;/p&gt;

&lt;p&gt;✎ &lt;strong&gt;1- Using NuGet from the Command prompt or terminal:&lt;/strong&gt;&lt;br&gt;
➤ Go to the &lt;a href="https://www.nuget.org/profiles/awsdotnet"&gt;AWSSDK packages on NuGet&lt;/a&gt;&lt;br&gt;
 and determine which packages you need in your project; today we will install , &lt;a href="https://www.nuget.org/packages/AWSSDK.S3/"&gt;AWSSDK.S3&lt;/a&gt;.&lt;br&gt;
➤ Copy the .NET CLI command from that package's webpage, as shown in the following example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;AWSSDK&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt; &lt;span class="p"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="m"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;110.19&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;➤ In your project's directory, run that .NET CLI command. NuGet also installs any dependencies, such as &lt;strong&gt;AWSSDK.Core&lt;/strong&gt; (which is the main dependency for all AWS SDKs for .Net ).&lt;/p&gt;

&lt;p&gt;✎ &lt;strong&gt;2- Using NuGet Package Manager in Visual Studio:&lt;/strong&gt;&lt;br&gt;
➤ In Solution Explorer, right-click your project, and then choose Manage NuGet Packages from the context menu.&lt;/p&gt;

&lt;p&gt;➤ In the left pane of the NuGet Package Manager, choose Browse. You can then use the search box to search for the package you want to install.&lt;/p&gt;

&lt;p&gt;➤ The following figure shows installation of the &lt;code&gt;AWSSDK.S3&lt;/code&gt; package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C_oV5UiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4lkyb66z16pt22piytz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C_oV5UiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4lkyb66z16pt22piytz.png" alt="Nuget Package Manager"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✎ &lt;strong&gt;3- Using NuGet from the Package Manager Console:&lt;/strong&gt;&lt;br&gt;
➤ In Visual Studio, choose Tools, NuGet Package Manager, Package Manager Console.&lt;/p&gt;

&lt;p&gt;➤ You can install the AWSSDK packages you want from the Package Manager Console by using the Install-Package command. For example, to install AWSSDK.S3, use the following command.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt; &lt;span class="n"&gt;AWSSDK&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;➤ If you need to install an earlier version of a package, use the -Version option and specify the package version you want, as shown in the following example.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt; &lt;span class="n"&gt;AWSSDK&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="m"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;106.6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#%E2%9E%BDso-how-can-we-use-it-"&gt;
  &lt;/a&gt;
  ➽So, How can we use it ?
&lt;/h1&gt;

&lt;p&gt;☞ Let's assume that we have a &lt;code&gt;.Net Core 3.1&lt;/code&gt; application:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1- Get AWS Access keys:&lt;/strong&gt;&lt;br&gt;
➤ the first step you need to do is to get your access key ID and secret access key and here is the steps to do that ..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Use your AWS account ID or account alias, your IAM user name, and your password to sign in to the IAM console.&lt;br&gt;
&lt;a href="https://console.aws.amazon.com/iam"&gt;https://console.aws.amazon.com/iam&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; In the navigation bar on the upper right, choose your user name, and then choose My Security Credentials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oC-cfjuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usctm0q1m2heq6v3cl3o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oC-cfjuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usctm0q1m2heq6v3cl3o.png" alt="My Security Credentials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Expand the Access keys (access key ID and secret access key) section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;d)&lt;/strong&gt; Choose Create New Access Key then copy the key to paste it somewhere else for safekeeping, choose Show Access Key. To save the access key ID and secret access key to a .csv file to a secure location on your computer, choose Download Key File.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now we have our access key ID and secret access key, let's continue ...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2- let's start coding:&lt;/strong&gt;&lt;br&gt;
➤ First let's assume that we have a class called "MyS3Service" registered in our app to handle connection to S3 Buckets.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3.Util&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3.Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3.Transfer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyS3Service&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IAmazonS3&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;MyS3Service&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;s3Client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;AmazonS3Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
             &lt;span class="s"&gt;"Your Aws Access Key Id here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s"&gt;"Your Aws Secret Access Key here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;RegionEndpoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetBySystemName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Your Region Name here"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I included all the namespaces needed for the upcoming APIs...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;➤ Fill your keys and your region name in &lt;code&gt;AmazonS3Client&lt;/code&gt; constructor (Note that: this constructor has many other overloads to connect to your account)&lt;/p&gt;

&lt;p&gt;✅ that's it , you are now connected to your AWS account...&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#%E2%9E%BDlets-now-check-what-we-can-do-with-this-sdk-"&gt;
  &lt;/a&gt;
  ➽Let's now check what we can do with this SDK ...
&lt;/h1&gt;

&lt;p&gt;☞&lt;strong&gt;1- Creating S3 Bucket:&lt;/strong&gt;&lt;br&gt;
• Let's add a function to our previously created class MyS3Service&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;CreateNewBucketAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// to check if there is another bucket with the same name&lt;/span&gt;
        &lt;span class="c1"&gt;// make sure to use V2 of the function because V1 is obsolete&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;AmazonS3Util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;DoesS3BucketExistV2Async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Your New Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;putBucketRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PutBucketRequest&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your New Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;UseClientRegion&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="n"&gt;PutBucketResponse&lt;/span&gt; &lt;span class="n"&gt;putBucketResponse&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PutBucketAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;putBucketRequest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Note that the following rules apply for naming buckets in Amazon S3:&lt;/p&gt;

&lt;p&gt;• Bucket names must be between 3 and 63 characters long.&lt;/p&gt;

&lt;p&gt;• Bucket names can consist only of lowercase letters, numbers, dots (.), and hyphens (-).&lt;/p&gt;

&lt;p&gt;• Bucket names must begin and end with a letter or number.&lt;/p&gt;

&lt;p&gt;• Bucket names must not be formatted as an IP address (for example, 192.168.5.4).&lt;/p&gt;

&lt;p&gt;• Bucket names must not start with the prefix xn--.&lt;/p&gt;

&lt;p&gt;• Bucket names must not end with the suffix -s3alias. This suffix is reserved for access point alias names&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;☞&lt;strong&gt;2- Upload an Object in the bucket:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;UploadObjectAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Method 1. Put object-specify only key name for the new object.&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;putRequest1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PutObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Unique identifier for the object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ContentBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"sample text"&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;PutObjectResponse&lt;/span&gt; &lt;span class="n"&gt;response1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PutObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;putRequest1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;

        &lt;span class="c1"&gt;//Method  2. Put the object-set ContentType and add metadata.&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;putRequest2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PutObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Unique identifier for the object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;FilePath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"File path goes here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ContentType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"text/plain"&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;putRequest2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x-amz-meta-title"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"someTitle"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;PutObjectResponse&lt;/span&gt; &lt;span class="n"&gt;response2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PutObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;putRequest2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;"Error encountered ***. Message:'{0}' when writing an object"&lt;/span&gt;
                &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;
            &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;3- Upload a file:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;UploadFileAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"TestBucket"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourFilepath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your File path"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Unique Key here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;TransferUtility&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Option 1. Upload a file. The file name is used as the object key name.&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 1 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;

        &lt;span class="c1"&gt;// Option 2. Specify object key name explicitly.&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 2 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;

        &lt;span class="c1"&gt;// Option 3. Upload data from a type of System.IO.Stream.&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileToUpload&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FileStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FileMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FileAccess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileToUpload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 3 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;
        &lt;span class="c1"&gt;// Option 4. Specify advanced settings.&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;TransferUtilityUploadRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;FilePath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;StorageClass&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S3StorageClass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StandardInfrequentAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;PartSize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;6291456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// 6 MB.&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;CannedACL&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S3CannedACL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PublicRead&lt;/span&gt; &lt;span class="c1"&gt;// to determine Access control list to file&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="c1"&gt;//if you need to add metadata to your files&lt;/span&gt;
        &lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"param1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Value1"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"param2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Value2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 4 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;4- Get Object data:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;ReadObjectDataAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"TestBucket"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Unique Key here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;responseBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;GetObjectRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GetObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetObjectResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Stream&lt;/span&gt; &lt;span class="n"&gt;responseStream&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseStream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StreamReader&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;StreamReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;responseStream&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"x-amz-meta-title"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// Assume you have "title" as medata added to the object.&lt;/span&gt;
            &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;contentType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Object metadata, Title: {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content type: {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contentType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;responseBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadToEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Now you process the response body.&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// If bucket or object does not exist&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered ***. Message:'{0}' when reading object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when reading object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;5- Delete Object:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;DeleteObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"TestBucket"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Unique Key here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;deleteObjectRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DeleteObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Deleting an object"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;DeleteObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deleteObjectRequest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when deleting an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when deleting an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;6- List all objects in a bucket:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;GetObjectsList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ListVersionsRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ListVersionsRequest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Bucket Name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="c1"&gt;// You can optionally specify key name prefix in the request&lt;/span&gt;
            &lt;span class="c1"&gt;// if you want list of object versions of a specific object.&lt;/span&gt;

            &lt;span class="c1"&gt;// For this example we limit response to return list of 2 versions.&lt;/span&gt;
            &lt;span class="n"&gt;MaxKeys&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ListVersionsResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ListVersionsAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;// Process response.&lt;/span&gt;
            &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3ObjectVersion&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Versions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"key = {0} size = {1}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// If response is truncated, set the marker to get the next &lt;/span&gt;
            &lt;span class="c1"&gt;// set of keys.&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsTruncated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyMarker&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NextKeyMarker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VersionIdMarker&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NextVersionIdMarker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;That's is for now :)&lt;br&gt;
Please wait for other topics about AWS other SDKs ..&lt;/p&gt;

&lt;p&gt;Please have a look at the repo of this topic &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ahmed-Adel3"&gt;
        Ahmed-Adel3
      &lt;/a&gt; / &lt;a href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;
        AWSSDK.S3-Demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a simple implementation for AWSSDK.S3 which is one of the SDK provided by AWS for .Net applications to handle connections and operations on S3 buckets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
➽To use this repo :&lt;/h1&gt;
&lt;p&gt;☞You just to put your ows &lt;strong&gt;AWS Access Key&lt;/strong&gt; and &lt;strong&gt;AWS Secret Access Key&lt;/strong&gt; in the main method in the console app and try.&lt;/p&gt;

&lt;h1&gt;
➽What is the AWS SDK for .NET?&lt;/h1&gt;
&lt;p&gt;☞The AWS SDK for .NET makes it easier to build .NET applications that tap into cost-effective, scalable, and reliable AWS services such as Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) and Amazon Elastic Compute Cloud (&lt;code&gt;Amazon EC2&lt;/code&gt;). The SDK simplifies the use of AWS services by providing a set of libraries that are consistent and familiar for .NET developers.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67" alt="AWS SDKs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let's start in this article with the first SDK which is &lt;code&gt;AWSSDK.S3&lt;/code&gt; ...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AWSSDK.S3&lt;/code&gt; is a SDK that helps .Net Developers to use Access Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) in their applications  to create buckets and store objects.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; is storage for the Internet. It is designed to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;➽To use this repo :&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
☞You just to put your ows &lt;strong&gt;AWS Access Key&lt;/strong&gt; and &lt;strong&gt;AWS Secret Access Key&lt;/strong&gt; in the main method in the console app and try.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>dotnet</category>
      <category>csharp</category>
    </item>
    <item>
      <title>10 Tips on How You Should Choose Front-End Technology</title>
      <author>Tarun Gurang</author>
      <pubDate>Tue, 24 Aug 2021 09:53:03 +0000</pubDate>
      <link>https://dev.to/tarungurang/10-tips-on-how-you-should-choose-front-end-technology-178m</link>
      <guid>https://dev.to/tarungurang/10-tips-on-how-you-should-choose-front-end-technology-178m</guid>
      <description>&lt;p&gt;To get atop-notch software product or application with fine quality depends on how you make the decisions while its development. And among those crucial decisions choosing the front-end technology is the one. The right technology stack always keeps you on track and helps in meeting customer expectations. Understanding the customer requirements and giving an appealing look that could catch one’s eyeballs would make great sense. Over time, Angular has become one of the desirable choices for front-end developments in the &lt;strong&gt;&lt;a href="https://www.ifourtechnolab.com/angular-js-development-company"&gt;angular frontend development companies&lt;/a&gt;&lt;/strong&gt;. This is due to the light-weight and impeccable features of Angular that have created a stir in the market. Not only these, but Angular applications are also known for their high-performance, security, and scalability factors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Without knowing backend technology, we don't think about frontend technology&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“The front-end technology stack includes both programming languages and frameworks that have different features and can affect the final operation of a web product. We should keep in mind that when developing a web application, we cannot talk about technologies for the front end part without reference to the technologies used for the back end. They should work great together. Among the main factors that I would advise to pay attention to when choosing front end technology for a web project are the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Goals and complexity of the project.&lt;/strong&gt; If you are going to work with a web product with a complex architecture, you need reliable and efficient technology that are more difficult to work with. For example, instead of JavaScript, you can use TypeScript, which assumes working with the Angular framework. If your goal is rapid development, you will probably choose simpler technology that suits your needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Matching your requirements with technology.&lt;/strong&gt; Technology solves specific problems. Therefore, requirements are always the main starting point. Based on the features that you want to see in your product and properties such as the level of performance, security, and scalability, the development team chooses the best tools option. This helps to achieve cost-effectiveness for both the client and the development team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Project's budget.&lt;/strong&gt; We may be missing this point, but let's be honest, it is important. Is the client ready to pay for additional paid tools or does he want to save as much as possible? A good developer will provide several options. Fortunately, there are many alternatives on the market and there is always something to replace one or another technology.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Viktor Legetsky, Managing Partner at &lt;a href="https://ideasoft.io/"&gt;IdeaSoft&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Make sure you don't copy your competitors&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“If you want to build a better software than your competitors, make sure you don't copy your competitors. If you develop your product on the same technology, it won't be any better.&lt;/p&gt;

&lt;p&gt;Another two crucial factors are scalability and the size of your app. The two are interconnected because the larger your project is, most probably, the more users it will have. So the front-end technology should be able to handle the load when the number of users goes up.&lt;/p&gt;

&lt;p&gt;Consider time to market when choosing a front-end technology, because if you need to launch your project within tight deadlines, you might want to go for MVP development.&lt;/p&gt;

&lt;p&gt;Some developers ignore the codebase, but it's crucial to use the code that is neither too concise nor too lengthy. Concise codes tend to create debugging errors, while lengthy codes are time-consuming. You must choose a language that is reusable and easy to maintain.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Thierry Tremblay, CEO &amp;amp; Founder of &lt;a href="https://www.kohezion.com/"&gt;Kohezion&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Size and complexity of the project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Before you rush out and buy any kind of technology, you must consider these factors, especially when you are choosing frontend technology. Is it going to be able to cope with the size and complexity of your project? Has it got the functions and speed you will need to complete the task/job successfully? Other things to consider are client-side programming and server-side programming. Having both of these can and will help you overcome any challenges you may incur along your way. Never choose a technology stack component just because you have used it before, technology is always updating and improving so step away from the familiar and go for something a little newer to help you manage larger processing loads.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Daniel Foley, Director of &lt;a href="https://www.assertive-media.co.uk/"&gt;Assertive Media&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.ifourtechnolab.com/blog/how-mean-stack-is-useful-for-web-development"&gt;How Mean Stack Is Useful For Web Development?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The area for which the web project will be created&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“The first factor to consider when choosing a front end technology is the area for which the web project will be created. For example, the e-commerce sector will immediately narrow the list of technologies to CMS solutions like WordPress and Magento. Content management systems have out-of-the-box technology stacks, so you just have to choose the one you need, based on capabilities of the selected CMS.&lt;/p&gt;

&lt;p&gt;If you don't use CMS, you should decide if your project needs a framework. Any project can be done using the framework, but its shortcomings can be more visible in some cases than in others. When using a framework, an inexperienced team of developers may face difficulties such as abstract code and high learning curve. Moreover, for small projects with unique components, the capacity and cost of such solutions as frameworks may become excessive.&lt;/p&gt;

&lt;p&gt;However, if you work on a large and long-term web project, a framework will effectively help in scaling and further maintenance. The choice of a framework is primarily based on the experience and preferences of the developers. I can only add that it is better to choose from trendy frameworks, as it will increase the likelihood that your specialists possess knowledge of at least one of Angular, React, or Vue.js solutions.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Igor Zaporozhets, CTO &amp;amp; Co-Founder at &lt;a href="https://www.aimprosoft.com/"&gt;Aimprosoft&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Selected platform has a broad developer base&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“As with most technology choices, ensure your selected platform has a broad developer base who is able to support the platform in the long-term. If you select a technology that has only limited adoption by the developer community, then you are more likely to have trouble finding support in the future.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Bryce Bowman, Founder of &lt;a href="https://www.demandplanner.com/"&gt;People First Planning&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prioritize Essentials for User Experience journey&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Choosing a frontend technology has so much to do with what stage your business is in and what type of essential features you need to be available to your users. There are a lot of frontend technologies that don't require a developer to set up or maintain and programs like Wordpress provide great tips and insights as you build out your first site.&lt;/p&gt;

&lt;p&gt;After you've prioritized what your most essentials features are, you have to consider what frontend tech suits your users preferences and needs because ultimately the point is to create a great user experience including all the working features your audience needs to reach their goals like mobile access, or certain security features.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-David Adler, Founder and CEO of &lt;a href="https://www.thetravelsecret.com/home"&gt;The Travel Secret&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“The main factor to consider is the user journey, this is where software development starts and finishes. Based on what you want the user to experience, design the technology around this. Think about how interactive your web project should be, how it should look and how will it make the user feel when they are using it. Definitely don’t skip the last point, it is often overlooked and if you ignore it, later on, you will struggle to understand why and how your users interact with your web app. Also, consider adaptability, operating systems and devices through which your users will interact with your app and where they’re located. After answering these questions, set out the technical specifications and make a choice. Or, consult with experts, some don’t charge for initial consultation to help you have a clearer picture of you project.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Alexander Lazutin, Director of &lt;a href="https://www.icartatechnologies.com/"&gt;ICarta&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not easy to make the end website accessible to people with disabilities&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“One factor that most people don't consider in front end technology selections is how easy it is to make the end website accessible to people with disabilities?&lt;/p&gt;

&lt;p&gt;This is becoming more and more of a legal concern as thousands of lawsuits have been filed in the US, most of which have been decided in favor of the disabled plaintiffs.&lt;/p&gt;

&lt;p&gt;1) If you choose an inaccessible Wix/GoDaddy/Wordpress template, you will never be able to provide equal access to people with disabilities.&lt;/p&gt;

&lt;p&gt;2) If you choose an inaccessible design system, you will never be able to provide equal access to people with disabilities. There are about ten accessible open source design systems available, I happen to work on one of them which is called Clarity.&lt;/p&gt;

&lt;p&gt;3) If you choose an inaccessible charting system (such as D3), equal access will be difficult and probably not the access the disabled user wished they had.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Sheri Byrne-Haber, Accessibility architect at &lt;a href="https://www.vmware.com/"&gt;VMware&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team's experience is the determining factor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“I believe that the team's experience is the determining factor. All modern front end frameworks (React, Angular, Vue) solve the same task, but in different ways. Thus, if the team is highly proficient in, say, React, there's no reason to demand the code to be written in Angular.&lt;/p&gt;

&lt;p&gt;To avoid issues with new specialist search and project scaling in the future, it's necessary to choose libraries and frameworks that are popular, well supported, and with an active dev community. Determining relevancy is pretty simple - just go to the GitHub repository and check how often new versions are released and how many issues are closed.&lt;/p&gt;

&lt;p&gt;You also have to figure out whether you need to get the top positions in search engines or not. In case your project is content-oriented, it will be necessary to take server-side rendering into account. I'd recommend using ready-made solutions like next.js or nuxt.js for that.&lt;/p&gt;

&lt;p&gt;Another thing to consider is project size. It could be very much possible that you won't need any large frameworks. For a small project, jQuery or native JS might be just enough.&lt;/p&gt;

&lt;p&gt;When it comes to CSS, I recommend using pre-processors like SASS. They make the stylesheets development process easier and faster. To simplify the responsive layout, it's possible to use Bootstrap or something similar. In case you're developing something like a CRM system, ready-made UI elements can really come in handy. You could use Bootstrap, ant.design, or material for that.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Andrey Zanouski, Web Developer at &lt;a href="https://orangesoft.co/"&gt;Orangesoft&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don't miss is the consideration of cybersecurity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“What so many development teams miss is the consideration of cybersecurity. How many times has the world seen WordPress and other competing technologies report a major vulnerability that malicious hackers have been exploiting for some time until the researchers find it!? A development team needs to fundamentally assess any front end technology through the lens of cybersecurity and ensure that the tech has a proper development life cycle for security patching as well as the ability to work with a Web Application Firewall. If these aspects are not apparent or the technology isn't capable then I'd avoid it like the plague!!”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Nick Espinosa, Chief Security Fanatic &amp;amp; CIO at &lt;a href="http://securityfanatics.com/"&gt;Security Fanatics&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Searching for Dedicated &lt;a href="https://www.ifourtechnolab.com/hire-angular-js-developer"&gt;Remote Angular developer&lt;/a&gt;? Contact Now.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus on multiple factors at the same time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“There are different factors we should consider when choosing the front end technology at the beginning of a project. Thus, it is important not only to know and feel comfortable with a specific technology, but also to have a broad and long-term vision of its scope.&lt;/p&gt;

&lt;p&gt;Below we include some of the aspects to consider when choosing the front end technology:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team experience:&lt;/strong&gt; It is essential to have an understanding of the experience team members have as well as know the developers and their skills. Experience very often gives us rapid solutions for immediate challenges.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understanding the project’s purpose and scope and its users:&lt;/strong&gt; Having a long-term vision of the project, as well as knowing its audience and our objectives will help us make decisions about the type of technology to use and avoid unexpected situations in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understanding the UX/UI:&lt;/strong&gt; From the exact moment in which we start planning the user experience and interface, we should consider which technology we will use. Choosing an incorrect technology could affect our app’s user experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security:&lt;/strong&gt; There are technologies with different levels of security, and this is another aspect to analyze. The technology for a project involving money, personal data or important information may differ from the one chosen for a common website in which we just promote a product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; Anticipating changes in our app’s size or volume to meet users’ needs (for instance, adding more features, supporting increasing numbers of users, etc.) is an essential part of the long-term and broad thinking we should have.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maintenance:&lt;/strong&gt; This is a key aspect for the second part of our project as it determines the time we must dedicate to it and the costs that the owner of our project should assume.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back end:&lt;/strong&gt; Optimizing the velocity at which front end and back end interact is definitely one of the most important aspects of any project as it directly affects our users’ experience and determines the success of our project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Community:&lt;/strong&gt; Forecasting a specific technology’s potential and knowing that we can rely on the support of an online community behind it would definitely determine which technology to use. A technology’s lifecycle is often supported by its own users and this can be considered a guarantee.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hardware:&lt;/strong&gt; To achieve the best performance for our project, we should define and elaborate a plan to know which hardware we have or which one is the best option for the chosen technology.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Costs:&lt;/strong&gt; Cost is strictly related to some of the above aspects and to some decisions we must make.&lt;/p&gt;

&lt;p&gt;There is not only one technology that fits our project’s needs, and the same technology may not be appropriate for all projects. The decision related to the selection of a specific technology starts at the very beginning of a project and covers its analysis and design phases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-Gustavo Tosolini, Javascript Developer at &lt;a href="https://santexgroup.com/"&gt;Santex&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Choosing Angular for the frontend development is a well thought out decision especially for the Small and Medium-sized organizations. The biggest reason is the Angular features that have created a dominance of adoption in the software development companies. Including a wide variety of factors and tech-driven features, it has enough calibre to meet all customer expectations and assist in streamlining the operational complexities. Taking things up a notch, Angular could help in implementing attractive frontends with impeccable features and functionalities. Ultimately, you could increase your customer base as well.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>angular</category>
    </item>
    <item>
      <title>Understand more magic methods: __callStatic()</title>
      <author>Ngo Dinh Cuong</author>
      <pubDate>Tue, 24 Aug 2021 09:50:40 +0000</pubDate>
      <link>https://dev.to/ngodinhcuong/understand-more-magic-methods-callstatic-2828</link>
      <guid>https://dev.to/ngodinhcuong/understand-more-magic-methods-callstatic-2828</guid>
      <description>&lt;p&gt;As you know, magic methods are special methods which override PHP's default's action when certain actions are performed on an object. The following method names are considered magical: &lt;code&gt;__construct()&lt;/code&gt;, &lt;code&gt;__destruct()&lt;/code&gt;, &lt;code&gt;__call()&lt;/code&gt;, &lt;code&gt;__callStatic()&lt;/code&gt;, &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt;, &lt;code&gt;__isset()&lt;/code&gt;, &lt;code&gt;__unset()&lt;/code&gt;, &lt;code&gt;__sleep()&lt;/code&gt;, &lt;code&gt;__wakeup()&lt;/code&gt;, &lt;code&gt;__serialize()&lt;/code&gt;, &lt;code&gt;__unserialize()&lt;/code&gt;, &lt;code&gt;__toString()&lt;/code&gt;, &lt;code&gt;__invoke()&lt;/code&gt;, &lt;code&gt;__set_state()&lt;/code&gt;, &lt;code&gt;__clone()&lt;/code&gt;, and &lt;code&gt;__debugInfo()&lt;/code&gt;. All magic methods, with the exception of &lt;code&gt;__construct()&lt;/code&gt;, &lt;code&gt;__destruct()&lt;/code&gt;, and &lt;code&gt;__clone()&lt;/code&gt;, must be declared as public, otherwise an E_WARNING is emitted.&lt;/p&gt;

&lt;p&gt;__callStatic() is method overloading, triggered when invoking inaccessible methods in a static context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nf"&gt;__callStatic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mixed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The $name argument is the name of the method being called. The $arguments argument is an enumerated array containing the parameters passed to the $name'ed method.&lt;/p&gt;

&lt;p&gt;With regard to &lt;code&gt;__callStatic()&lt;/code&gt;, you can call a method via double colon, and rename functions to short/pretty name&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Str&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Shortcut methods
     */&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$methods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'chunk'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'chunk_split'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'split'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'str_split'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'length'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'strlen'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'reverse'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'strrev'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'countWord'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'str_word_count'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Trigger when invoking inaccessible methods in a static context
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__callStatic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;array_key_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$methods&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'The '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' is not supported.'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$methods&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$parameters&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Parse query string to varaibles
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;parse_str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$output&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Happy New Year!"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$countWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Str&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;countWord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$countWord&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$queryStr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"first=value&amp;amp;arr[]=foo+bar&amp;amp;arr[]=baz"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Str&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$queryStr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Arr&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Shortcut methods
     */&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$methods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'search'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array_search'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'chunk'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array_chunk'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'combine'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array_combine'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'count'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array_count_values'&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Trigger when invoking inaccessible methods in a static context
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__callStatic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$parameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;array_key_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$methods&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'The '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$method&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' is not supported.'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;call_user_func_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$methods&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$parameters&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cd"&gt;/**
     * Count all elements in an array
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nv"&gt;$rs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Arr&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;combine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$rs&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Arr&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another way uses this overloading method that you can define your own function without &lt;code&gt;static&lt;/code&gt; keyword, access using double colon. However, this way restricts you must define methods as &lt;code&gt;protected&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Helper&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * __callStatic
     * @param  string $method
     * @param  mixed $args
     * @return void
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__callStatic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$called&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get_called_class&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;$called&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$class&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;$method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;...&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;generateToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$characters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$charactersLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$characters&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$randomString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$randomString&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$characters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$charactersLength&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$randomString&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Helper&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generateToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>programming</category>
      <category>php</category>
      <category>magicmethods</category>
    </item>
    <item>
      <title>Microsoft PowerToys is a must-have for Developers on Windows!</title>
      <author>Ivan Jeremic</author>
      <pubDate>Tue, 24 Aug 2021 09:40:00 +0000</pubDate>
      <link>https://dev.to/ivanjeremic/microsoft-powertoys-is-a-must-have-for-developers-on-windows-3a6o</link>
      <guid>https://dev.to/ivanjeremic/microsoft-powertoys-is-a-must-have-for-developers-on-windows-3a6o</guid>
      <description>&lt;p&gt;As the Docs say "Microsoft PowerToys is a set of utilities for power users to tune and streamline their Windows 10 experience for greater productivity."&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-color-picker"&gt;
  &lt;/a&gt;
  1.) Color Picker
&lt;/h1&gt;

&lt;p&gt;You are still using buggy Color pickers in form of a Browser Extension or similar? Well guess what Microsoft PowerToys comes with the most powerful color picker in the world, you can pick colors from anywhere browser/native and more, with a traditional browser extension you can't pick colors outside of the browser window but with this one you can even pick a color from an icon on your windows taskbar. After picking your color it provider you instantly all three major ways of using colors &lt;code&gt;HEX&lt;/code&gt; - &lt;code&gt;RGB&lt;/code&gt; - &lt;code&gt;HSL&lt;/code&gt; and a set of complimentary colors. &lt;br&gt;
You can simply open it by pressing: &lt;code&gt;SHIFT + WIN + C&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WrcIBos3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-colorpicker-editor.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WrcIBos3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-colorpicker-editor.gif" alt="pt-colorpicker-editor" title="pt-colorpicker-editor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-file-explorer-addons-utility"&gt;
  &lt;/a&gt;
  2.) File Explorer add-ons utility
&lt;/h1&gt;

&lt;p&gt;Enabling Preview Pane&lt;br&gt;
To enable, first ensure that "Enable SVG preview", "Enable SVG thumbnails", and "Enable Markdown preview" are all set to On in the PowerToys Settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uhBvjX9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-settings-fileexplorer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uhBvjX9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-settings-fileexplorer.png" alt="powertoys-settings-fileexplorer" title="powertoys-settings-fileexplorer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, open Windows File Explorer, select the View tab in the File Explorer ribbon, then select Preview Pane.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MrpzhgA5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-fileexplorer.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MrpzhgA5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-fileexplorer.gif" alt="powertoys-fileexplorer" title="powertoys-fileexplorer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-image-resizer-utility"&gt;
  &lt;/a&gt;
  3.) Image Resizer utility
&lt;/h1&gt;

&lt;p&gt;After installing PowerToys, right-click on one or more selected image files in File Explorer, and then select Resize pictures from the menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oSEOINhC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-resize-images.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oSEOINhC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-resize-images.gif" alt="powertoys-resize-images" title="powertoys-resize-images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drag-and-drop"&gt;
  &lt;/a&gt;
  Drag and Drop
&lt;/h3&gt;

&lt;p&gt;Image Resizer also allows you to resize images by dragging and dropping your selected files with the right mouse button. This allows you to quickly save your resized pictures in another folder.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VD43TPjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-resize-drag-drop.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VD43TPjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-resize-drag-drop.gif" alt="powertoys-resize-drag-drop" title="powertoys-resize-drag-drop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#settings"&gt;
  &lt;/a&gt;
  Settings
&lt;/h3&gt;

&lt;p&gt;Inside the PowerToys Image Resizer tab, you can configure the following settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bTWCpQ1x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-imageresize-settings.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bTWCpQ1x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-imageresize-settings.png" alt="powertoys-imageresize-settings" title="powertoys-imageresize-settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-awake-utility"&gt;
  &lt;/a&gt;
  4.) Awake utility
&lt;/h1&gt;

&lt;p&gt;Awake is a utility tool for Windows designed to keep a computer awake without having to manage its power &amp;amp; sleep settings. This behavior can be helpful when running time-consuming tasks, ensuring that the computer does not go to sleep or turn off its screens.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LPLp1QVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-awake-settings-menu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LPLp1QVl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-awake-settings-menu.png" alt="pt-awake-settings-menu" title="pt-awake-settings-menu"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following Awake states can be selected:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Off (Passive) - The computer awakeness state is unaffected. The application is waiting for user input.&lt;/li&gt;
&lt;li&gt;Keep awake indefinitely - The computer stays awake indefinitely, until the user explicitly puts the machine to sleep or exits/disables the application.&lt;/li&gt;
&lt;li&gt;Keep awake temporarily - Keep machine awake for a pre-defined limited time. Once the time elapses, computer resumes its previous awakeness state.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#5-fancyzones-utility"&gt;
  &lt;/a&gt;
  5.) FancyZones utility
&lt;/h1&gt;

&lt;p&gt;FancyZones is a window manager utility for arranging and snapping windows into efficient layouts to improve the speed of your workflow and restore layouts quickly. FancyZones allows the user to define a set of window locations for a desktop that are drag targets for windows. When the user drags a window into a zone, the window is resized and repositioned to fill that zone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D5Bjxafb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancy-zones2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D5Bjxafb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancy-zones2.png" alt="pt-fancy-zones2" title="pt-fancy-zones2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#choose-your-layout-layout-editor"&gt;
  &lt;/a&gt;
  Choose your layout (Layout Editor)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CPu8JCtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-picker.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CPu8JCtR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-picker.png" alt="pt-fancy-zones2" title="pt-fancy-zones2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If multiple displays are in use, the editor will detect the available monitors and display them for the user to choose between. The chosen monitor will then be the target of the selected layout.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FTJUXQXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-multimon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FTJUXQXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-multimon.png" alt="pt-fancy-zones2" title="pt-fancy-zones2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#space-around-zones"&gt;
  &lt;/a&gt;
  Space around zones
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gXUcp-ZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-spacearound.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXUcp-ZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-spacearound.png" alt="pt-fancy-zones2" title="pt-fancy-zones2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-custom-layout"&gt;
  &lt;/a&gt;
  Creating a custom layout
&lt;/h3&gt;

&lt;p&gt;The zones editor also supports creating and saving custom layouts. Select the + Create new layout button at the bottom-right.&lt;/p&gt;

&lt;p&gt;There are two ways to create custom zone layouts: Grid layout and Canvas layout. These can also be thought of as subtractive and additive models.&lt;/p&gt;

&lt;p&gt;The subtractive Grid model starts with a three column grid and allows zones to be created by splitting and merging zones, resizing the gutter between zones as desired.&lt;/p&gt;

&lt;p&gt;To merge two zones, select and hold the left mouse button and drag the mouse until a second zone is selected, then release the button and a popup menu will show up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBHfGdav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-grideditor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBHfGdav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-grideditor.png" alt="pt-fancy-zones2" title="pt-fancy-zones2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The additive Canvas model starts with a blank layout and supports adding zones that can be dragged and resized similar to windows.&lt;/p&gt;

&lt;p&gt;Canvas layout also has keyboard support for zone editing. Use the Arrows keys to move a zone by 10 pixels, or &lt;code&gt;Ctrl + Arrows&lt;/code&gt; to move a zone by 1 pixel. Use the &lt;code&gt;Shift + Arrows&lt;/code&gt; keys to resize a zone by 10 pixels (5 per edge), or &lt;code&gt;Ctrl + Shift + Arrows&lt;/code&gt; to resize a zone by 2 pixels (1 per edge). To switch between the editor and dialog, press the &lt;code&gt;Ctrl + Tab&lt;/code&gt; keys.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGHtoWDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-canvaseditor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGHtoWDA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-canvaseditor.png" alt="pt-fancy-zones2" title="pt-fancy-zones2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quickly-changing-between-layouts"&gt;
  &lt;/a&gt;
  Quickly changing between layouts
&lt;/h3&gt;

&lt;p&gt;With a custom layout, this layout can be configured to a user-defined hotkey to quickly apply it to the desired desktop. The hotkey can be set by opening the custom layout's edit menu. Once set, the custom layout can be applied by pressing the &lt;code&gt;Win ⊞ + Ctrl + Alt + [hotkey]&lt;/code&gt; binding. The layout can also be applied by pressing the hotkey when dragging a window.&lt;/p&gt;

&lt;p&gt;In the demo below, we start with a default template applied to the screen and 2 custom layouts that we assign hotkeys for. We then use the &lt;code&gt;Win ⊞ + Ctrl + Alt + [hotkey]&lt;/code&gt; binding to apply the first custom layout and bind a window to it. Finally, we apply the second custom layout while dragging a window and bind the window to it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQBv-CU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-quickswap.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQBv-CU1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-fancyzones-quickswap.gif" alt="pt-fancyzones-quickswap" title="pt-fancyzones-quickswap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-keyboard-manager-utility"&gt;
  &lt;/a&gt;
  6.) Keyboard Manager utility
&lt;/h1&gt;

&lt;p&gt;The PowerToys Keyboard Manager enables you to redefine keys on your keyboard.&lt;/p&gt;

&lt;p&gt;For example, you can exchange the letter &lt;code&gt;A&lt;/code&gt; for the letter &lt;code&gt;D&lt;/code&gt; on your keyboard. When you select the &lt;code&gt;A&lt;/code&gt; key, a &lt;code&gt;D&lt;/code&gt; will display.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBJSufUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-keyboard-remap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBJSufUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powertoys-keyboard-remap.png" alt="powertoys-keyboard-remap" title="powertoys-keyboard-remap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-powerrename-utility"&gt;
  &lt;/a&gt;
  7.) PowerRename utility
&lt;/h1&gt;

&lt;p&gt;PowerRename is a bulk renaming tool that enables you to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Modify the file names of a large number of files (without renaming all of the files the same name).&lt;/li&gt;
&lt;li&gt;Perform a search and replace on a targeted section of file names.&lt;/li&gt;
&lt;li&gt;Perform a regular expression rename on multiple files.&lt;/li&gt;
&lt;li&gt;Check expected rename results in a preview window before finalizing a bulk rename.&lt;/li&gt;
&lt;li&gt;Undo a rename operation after it is completed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this demo, all instances of the file name "Pampalona" are replaced with "Pamplona". Since all of the files are uniquely named, this would have taken a long time to complete manually one-by-one. PowerRename enables a single bulk rename. Notice that the "Undo Rename" (Ctrl+Z) command enables the ability to undo the change.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TI0rGsNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powerrename-demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TI0rGsNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/powerrename-demo.gif" alt="powerrename-demo" title="powerrename-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-powertoys-run-utility"&gt;
  &lt;/a&gt;
  8.) PowerToys Run utility
&lt;/h1&gt;

&lt;p&gt;PowerToys Run is a quick launcher for power users that contains some additional features without sacrificing performance. It is open source and modular for additional plugins.&lt;/p&gt;

&lt;p&gt;To use PowerToys Run, select &lt;code&gt;Alt&lt;/code&gt;+&lt;code&gt;Space&lt;/code&gt; and start typing!&lt;/p&gt;

&lt;p&gt;If that shortcut isn't what you like, don't worry, it is fully configurable in the settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lWHGBL9R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-powerrun-demo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lWHGBL9R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.microsoft.com/en-us/windows/images/pt-powerrun-demo.gif" alt="pt-powerrun-demo" title="pt-powerrun-demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-video-conference-mute-preview"&gt;
  &lt;/a&gt;
  9.) Video Conference Mute (Preview)
&lt;/h1&gt;

&lt;h4&gt;
  &lt;a href="#important"&gt;
  &lt;/a&gt;
  Important
&lt;/h4&gt;

&lt;p&gt;This is a preview feature and only included in the pre-release version of PowerToys. Running this pre-release requires Windows 10 version 1903 (build 18362) or later.&lt;/p&gt;

&lt;p&gt;Quickly mute your microphone (audio) and turn off your camera (video) while on a conference call with a single keystroke, regardless of what application has focus on your computer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;The default settings to use Video Conference Mute are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;⊞ Win&lt;/code&gt;+&lt;code&gt;N&lt;/code&gt; to toggle both Audio and Video at the same time&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;⊞ Win&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;A&lt;/code&gt; to toggle microphone&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;⊞ Win&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;O&lt;/code&gt; to toggle video&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When using the microphone and/or camera toggle shortcut keys, you will see a small toolbar window display letting you know whether the your Microphone and Camera are set to on, off, or not in use. You can set the position of this toolbar in the Video Conference Mute tab of PowerToys settings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h4&gt;

&lt;p&gt;Remember that you must have the pre-release/experimental version of PowerToys installed and running, with the Video Conference Mute feature enabled in PowerToys settings in order to use this utility.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-was-a-quick-intro-to-microsoft-powertoys"&gt;
  &lt;/a&gt;
  This was a quick intro to Microsoft PowerToys
&lt;/h2&gt;

&lt;p&gt;It is developed on GitHub under Microsoft's official GitHub account &lt;a href="https://github.com/microsoft/PowerToys"&gt;https://github.com/microsoft/PowerToys&lt;/a&gt; the recommended way of downloading it is directly the &lt;code&gt;.exe&lt;/code&gt; from the GitHub releases page &lt;a href="https://github.com/microsoft/PowerToys/releases/download/v0.43.0/PowerToysSetup-0.43.0-x64.exe"&gt;https://github.com/microsoft/PowerToys/releases/download/v0.43.0/PowerToysSetup-0.43.0-x64.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;

</description>
      <category>powertoys</category>
      <category>developers</category>
      <category>programming</category>
      <category>utilities</category>
    </item>
  </channel>
</rss>
