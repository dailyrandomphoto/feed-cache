<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Developing My Own Node CLI Tool! And YOU can Contribute</title>
      <author>The Unfactoring Guru</author>
      <pubDate>Sat, 20 Nov 2021 07:51:41 +0000</pubDate>
      <link>https://dev.to/the_unfactoring_guru/developing-my-own-node-cli-tool-and-you-can-contribute-2164</link>
      <guid>https://dev.to/the_unfactoring_guru/developing-my-own-node-cli-tool-and-you-can-contribute-2164</guid>
      <description>&lt;h2&gt;
  &lt;a href="#i-made-a-cli-tool-and-you-can-contribute"&gt;
  &lt;/a&gt;
  I made a CLI Tool and You Can contribute!
&lt;/h2&gt;

&lt;p&gt;Basically I'm really excited about writing packages. I just created this small tool called bring-me! This basic cli tool just brings you libraries to your current working directory directly from its cdn! You can also add libraries to the repertoir of libraries you have saved for downloading later!&lt;br&gt;
Examples: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;bring-me lib jquery -d /public/js&lt;/code&gt; you will have jquery already integrated in your project!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devasolutions"&gt;
        devasolutions
      &lt;/a&gt; / &lt;a href="https://github.com/devasolutions/bring-me"&gt;
        bring-me
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      NPM CLI tool for delivering common front-end libraries, frameworks, stylesheets, etc. for lightweight and easy development without needing them stored in node_modules or when internet connection could be a problem in the future.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
bring-me&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7c945076bd8d737b17e8ccfc5afc4ac97671a02b47a132bbc348ee68cf30a0b6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4064657661736f6c7574696f6e732f6272696e672d6d65"&gt;&lt;img src="https://camo.githubusercontent.com/7c945076bd8d737b17e8ccfc5afc4ac97671a02b47a132bbc348ee68cf30a0b6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4064657661736f6c7574696f6e732f6272696e672d6d65" alt="npm (scoped)"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e9662fa5103a0a1d2a5e6e282ba7cebc3da286ea7e09f68e09e8d8048f79a50f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f4064657661736f6c7574696f6e732f6272696e672d6d65"&gt;&lt;img src="https://camo.githubusercontent.com/e9662fa5103a0a1d2a5e6e282ba7cebc3da286ea7e09f68e09e8d8048f79a50f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f4064657661736f6c7574696f6e732f6272696e672d6d65" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NPM CLI tool for delivering common front-end libraries, frameworks, stylesheets, etc. for lightweight and easy development without needing them stored in node_modules or when internet connection could be a problem in the future.&lt;/p&gt;
&lt;h1&gt;
Install&lt;/h1&gt;
&lt;p&gt;Install globally with NPM
&lt;code&gt;npm install -g @devasolutions/bring-me&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Or install in development
&lt;code&gt;npm install --save-dev @devasolutions/bring-me&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;
Introduction&lt;/h1&gt;
&lt;p&gt;Bring-me is a CLI tool used to download popular frameworks from there CDNs so that you can use them offline when needed in mostly Front-End Development scenerios&lt;/p&gt;
&lt;p&gt;Summary:&lt;/p&gt;
&lt;p&gt;Bring-me scans a &lt;code&gt;bmconfig.json&lt;/code&gt; file inside the module's directory to get the most popular frameworks and libraries (bootstrap,bulma,jquery,lodash,phaser at the moment).&lt;/p&gt;
&lt;p&gt;bmconfig.json example:&lt;/p&gt;
&lt;div class="highlight highlight-source-json position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;[
  {
    &lt;span class="pl-ent"&gt;"url"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-ent"&gt;"file-name"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jquery.js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-ent"&gt;"lib-name"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jquery&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-ent"&gt;"format"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;js&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-ent"&gt;"version"&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.6.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  &lt;span class="pl-ii"&gt;...&lt;/span&gt;
]&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;bmconfig.json fields:&lt;/p&gt;
&lt;p&gt;url: (contains the url of the library from cdn)
file-name: (the…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/devasolutions/bring-me"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I need people to help with creating more basic commands, fefactoring, and improving documentation. So anybody is welcome to participate!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Regards&lt;/li&gt;
&lt;li&gt;The unfactoring guru&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>npm</category>
      <category>node</category>
      <category>cli</category>
    </item>
    <item>
      <title>Django RestApis example – GET/POST/PUT/DELETE requests to MongoDb database
</title>
      <author>Harry Nguyen</author>
      <pubDate>Sat, 20 Nov 2021 07:44:12 +0000</pubDate>
      <link>https://dev.to/harrynguyen88/django-restapis-example-getpostputdelete-requests-to-mongodb-database-2pop</link>
      <guid>https://dev.to/harrynguyen88/django-restapis-example-getpostputdelete-requests-to-mongodb-database-2pop</guid>
      <description>&lt;p&gt;&lt;a href="https://ozenero.com/django-restapis-mongodb-example-django-rest-framework-tutorial"&gt;https://ozenero.com/django-restapis-mongodb-example-django-rest-framework-tutorial&lt;/a&gt;&lt;br&gt;
In this tutorial, we’re gonna look at way to create Django RestAPIs with Get/Post/Put/Delete requests to interact with MongoDb Database using Django REST Framework.&lt;br&gt;
Read more&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Indefinite Arguments</title>
      <author>lizardkingLK</author>
      <pubDate>Sat, 20 Nov 2021 07:44:03 +0000</pubDate>
      <link>https://dev.to/lizardkinglk/indefinite-arguments-4lpe</link>
      <guid>https://dev.to/lizardkinglk/indefinite-arguments-4lpe</guid>
      <description>&lt;p&gt;When your program needs indefinite number of arguments, and let's say,&lt;/p&gt;

&lt;p&gt;i.  You are not allowed to pass a collection or an array. &lt;br&gt;
ii. You are not allowed to overload methods.&lt;/p&gt;

&lt;p&gt;Using varargs is the best option to use in this case.&lt;/p&gt;

&lt;p&gt;Before varargs was introduced in Java 5, the problem was solved by  allowing to use any of the mentioned two ways above.&lt;/p&gt;

&lt;p&gt;A varargs method can pass indefinite number of arguments with the following method definition. (In here the data type is String and args is the name of the argument)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;void someMethod (String... args)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below is an use-case that used varargs to solve a problem which involved printing the sum of numbers. &lt;br&gt;
Not allowing to use overloading or passing a collection or an array. &lt;br&gt;
So we use varargs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Add {
    public void add(int... nums) {
        int sum = 0;
        String label = " ";
        for (Integer n: nums) {
            label += n + " ";
            sum += n;
        }
        label = label.trim().replace(" ", "+");
        label += String.format("=%d", sum);
        System.out.println(label);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the context of C# language we change the syntax a little bit.&lt;br&gt;
We add the keyword 'params' to define it is a varargs method.&lt;/p&gt;

&lt;p&gt;It looks like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;void add(params int[] nums)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the same code for above problem in C# language is as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Add {
    public void add(params int[] nums) {
        int sum = 0;
        String label = " ";
        foreach (int n in nums) {
            label += n + " ";
            sum += n;
        }
        label = label.Trim().Replace(" ", "+");
        label += String.Format("={0}", sum);
        Console.WriteLine(label);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Call to your method like below in your main method.&lt;br&gt;
And again -&amp;gt; use any number of arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public static void main(String[] args) {
    new Add().add(1, 2, 3);
    new Add().add(1, 2, 3, 4, 5);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Learn more about varargs using the following links.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.baeldung.com/java-varargs"&gt;https://www.baeldung.com/java-varargs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>csharp</category>
      <category>oop</category>
    </item>
    <item>
      <title>Kotlin Array sort(), sortBy(), sortWith()

</title>
      <author>Harry Nguyen</author>
      <pubDate>Sat, 20 Nov 2021 07:28:34 +0000</pubDate>
      <link>https://dev.to/harrynguyen88/kotlin-array-sort-sortby-sortwith-5eop</link>
      <guid>https://dev.to/harrynguyen88/kotlin-array-sort-sortby-sortwith-5eop</guid>
      <description>&lt;p&gt;&lt;a href="https://ozenero.com/kotlin-array-sort-sortby-sortwith"&gt;https://ozenero.com/kotlin-array-sort-sortby-sortwith&lt;/a&gt;&lt;br&gt;
In the tutorial, JavaSampleApproach will guide how to sort Kotlin Array by sort(), sortBy() with selector function, and sortWith() with a comparator.&lt;br&gt;
Read more &lt;/p&gt;

</description>
    </item>
    <item>
      <title>PHP isn't dead! Don't be afraid to use it and implement it in your projects...</title>
      <author>ManuTheCoder</author>
      <pubDate>Sat, 20 Nov 2021 07:24:31 +0000</pubDate>
      <link>https://dev.to/manuthecoder/php-isnt-dead-dont-be-afraid-to-use-it-and-implement-it-in-your-projects-2225</link>
      <guid>https://dev.to/manuthecoder/php-isnt-dead-dont-be-afraid-to-use-it-and-implement-it-in-your-projects-2225</guid>
      <description>&lt;p&gt;Ok. Let's get this straight. PHP is not dead. It's not going to die anytime soon. Why? PHP released a new version recently (actually just a few months ago). It exists in more than 80% of all websites. It’s also used actively by millions of developers. None of that will disappear out of thin air.&lt;/p&gt;

&lt;p&gt;Despite the fact that many new languages flourish every year, I would not hesitate to say that PHP (besides JS) is one of the safest languages in the world in terms of jobs, and will securely guarantee an enormous job market around the world for much longer than 5 years. Here is why.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PHP adopts new ideas slowly.&lt;/strong&gt; It may sound like a weird reason for a programming language to keep up with the contemporary development trends. In fact, what happens is only proven, polished and time-checked ideas find their way into PHP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PHP has low entry level.&lt;/strong&gt; This means that it is one of the easiest languages to start coding for newbies ever. Then, once it is adopted by newbies, it often turns out that this language is enough for a lot of people that do not need genius, complex, mathematical and scientific features. Result - they just keep using PHP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Big platforms and companies which use PHP make lots of money every day!&lt;/strong&gt; WordPress, for example, which is made in PHP, is a free framework, but WordPress.com is a commercial WordPress hosting and makes money out of it. Then, there are tens of others like it. Now multiply this business volume by the number of other big PHP projects, like shopping carts, CRMs, issue tracking systems, web analytics...&lt;/p&gt;

&lt;p&gt;And one of the biggest reasons...&lt;br&gt;
&lt;strong&gt;Servers accessibility.&lt;/strong&gt; The cheapest servers / VPS for web projects always support PHP. PHP has one of the lowest minimum requirements to the memory / processor speed.&lt;/p&gt;

&lt;p&gt;Is PHP on the decline? Yes. Is it a crappy programming language? Absolutely. But that doesn’t mean it’s going away any time soon.&lt;/p&gt;

&lt;p&gt;Consider COBOL. An almost sixty year old language that’s horrible by modern standards and has been on the decline for thirty years. Yet it runs our financial infrastructure, and there are still an estimated one million COBOL developers worldwide. Maybe that is what PHP will be like in a couple of decades.&lt;/p&gt;

</description>
      <category>php</category>
    </item>
    <item>
      <title>Adding Continuous Integration with GitHub Actions 🛠</title>
      <author>Luke Nguyen</author>
      <pubDate>Sat, 20 Nov 2021 07:23:33 +0000</pubDate>
      <link>https://dev.to/mqnguyen/adding-continuous-integration-with-github-actions-33hm</link>
      <guid>https://dev.to/mqnguyen/adding-continuous-integration-with-github-actions-33hm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;With &lt;a href="https://dev.to/mqnguyen/static-analysis-tooling-n55"&gt;static analysis tooling&lt;/a&gt; and &lt;a href="https://dev.to/mqnguyen/automated-testing-with-jest-4745"&gt;unit tests&lt;/a&gt; added to the project, it is time to increase the complexity of my project. At the moment, I have written several tests to check on the different functionalities of my program. However, they had to be manually run by executing "npm run test" in the terminal, which will be very tedious if there are a lot of files to test. Additionally, we also need to consider human errors, as there is no way to guarantee that all contributors remember to run the test before committing their code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-a-ci"&gt;
  &lt;/a&gt;
  Choosing a CI
&lt;/h2&gt;

&lt;p&gt;With this in mind, it is to introduce continuous integration (or CI, for short). It allows us to set up a workflow that listens to every time someone introduces new changes, builds the code, and automatically runs tests against it.&lt;/p&gt;

&lt;p&gt;While we have many CI services, such as Azure DevOps, Evergreen, or Jenkins, I'll choose GitHub Actions for this task. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-ci"&gt;
  &lt;/a&gt;
  Setting up the CI
&lt;/h2&gt;

&lt;p&gt;There are different options to set up GitHub Actions. You can either choose to do it manually or choose from numerous templates. My project, &lt;a href="https://github.com/mqnguyen5/mini-ssg"&gt;MINI&lt;/a&gt;, works just fine with the Node.js template:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Title of the workflow&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Node.js CI&lt;/span&gt;

&lt;span class="c1"&gt;# Trigger this workflow on push and new PR&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# jobs to run inside this workflows&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# choose a platform to run on&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="c1"&gt;# options&lt;/span&gt;
    &lt;span class="na"&gt;strategy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;matrix&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;14.x&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;16.x&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# use a preset step to checkout the code &lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="c1"&gt;# use a preset step to setup Node environment&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Use Node.js ${{ matrix.node-version }}&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2&lt;/span&gt;
        &lt;span class="c1"&gt;# preset options&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ matrix.node-version }}&lt;/span&gt;
          &lt;span class="na"&gt;cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;npm'&lt;/span&gt;
      &lt;span class="c1"&gt;# command to run&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm ci&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm test&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After setting up GitHub Actions, I made two pull requests to check if it worked as intended: &lt;a href="https://github.com/mqnguyen5/mini-ssg/actions/runs/1474720001"&gt;One&lt;/a&gt; containing an intentional error and the &lt;a href="https://github.com/mqnguyen5/mini-ssg/actions/runs/1474725084"&gt;other&lt;/a&gt; with the same error fixed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-test-for-others"&gt;
  &lt;/a&gt;
  Writing test for others
&lt;/h2&gt;

&lt;p&gt;After ensuring that the CI was working, I decided to file an issue to Tue's &lt;a href="https://github.com/TueNguyen2911/tue-1st-ssg"&gt;repo&lt;/a&gt; and asked if I could help him test his text to HTML conversion. We worked with each other through Slack and GitHub, with myself taking notes of what he wanted to check and what the expected results should be. After struggling with managing and rebase commits when changing the code based on Tue's review, I was able to merge my &lt;a href="https://github.com/TueNguyen2911/tue-1st-ssg/pull/30#event-5647003435"&gt;pull request&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I intend to use continuous integration in additional projects in the future, and it was helpful to understand how it works and how to set it up. It makes collaboration considerably easier because it prevents unintended problems and code-breaking changes.&lt;/p&gt;

&lt;p&gt;Happy coding! 💻&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>How To Move an EBS volume to another region?</title>
      <author>Gurlal Sidhu</author>
      <pubDate>Sat, 20 Nov 2021 07:16:21 +0000</pubDate>
      <link>https://dev.to/gsidhu13/how-to-move-an-ebs-volume-to-another-region-5emd</link>
      <guid>https://dev.to/gsidhu13/how-to-move-an-ebs-volume-to-another-region-5emd</guid>
      <description>&lt;p&gt;Moving volumes across two regions is not permitted, however, creating a snapshot of a volume and then moving to another region is allowed. Let's see how it is done:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Launch two instances in different regions( us-east-1 and us-west-1)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a volume in the first region (us-east-1)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to EC2, under Elastic Block Store (left pane), and click on Volumes&lt;/li&gt;
&lt;li&gt;Create volume. The size of this volume would be 10 GB&lt;/li&gt;
&lt;li&gt;Once it is successfully created, you will see its state set to available &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NW36I83V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czott7gc34unegsyd3l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NW36I83V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czott7gc34unegsyd3l.jpeg" alt="pic1" width="533" height="116"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NhQHsaWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o78fjyq9czwc2t5fv2yd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NhQHsaWE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o78fjyq9czwc2t5fv2yd.jpeg" alt="pic2" width="491" height="260"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P7CPJDF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9k08tcdqlfsdra8bb0l.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P7CPJDF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9k08tcdqlfsdra8bb0l.jpeg" alt="pic3" width="624" height="60"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Now right on newly created volume and select ‘attach volume’&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select your instance, leave the device as it is - /dev/sdf and attach. It will take a couple of minutes to attach the volume.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YkDMSCmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb6rpbzvleq94nsfo8a5.jpeg" alt="pic4" width="437" height="130"&gt;
&lt;/li&gt;
&lt;li&gt;Now Connect to your EC2 Instance - either via SSH or connect directly from the portal. I will be connecting from the portal (it will open in another tab).&lt;/li&gt;
&lt;li&gt;First thing first, switch to root user - sudo su&lt;/li&gt;
&lt;li&gt;check if the attached volume is listed -  lsblk
&lt;/li&gt;
&lt;li&gt;New volumes don’t file system configure, set up a file system for this volume - mkfs -t xfs /dev/xvdf&lt;/li&gt;
&lt;li&gt;Create a mount point for your volume -mkdir gsdata and mount the volume - mount /dev/xvdf /gsdata&lt;/li&gt;
&lt;li&gt;Going to check if I can see all my buckets - aws s3 ls&lt;/li&gt;
&lt;li&gt;Copy files from Testing Vol folder in inpuutbuckgs bucket to /gsdata - aws s3 cp S3://inputbuckgs/TestingVol /gsdata --recursive &lt;/li&gt;
&lt;li&gt;Check moved files - ls -l /gsdata&lt;/li&gt;
&lt;li&gt;Now you could create directories upload files to this volume. I’ll create a test folder and move some files from s3 bucket. &lt;/li&gt;
&lt;li&gt;Before you copy files from the s3 bucket, you will need to configure your AWS profile. I have it already configured.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCfp1Aqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdsn4j8zec02lxglkmsb.jpeg" alt="pic5" width="624" height="132"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uoa_n8zM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ljt4jib9m8hei3enuwpw.jpeg" alt="pic6" width="498" height="392"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--353A39gh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1ts23u2knrsu4qrx20c.jpeg" alt="pic7" width="498" height="392"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kq2LsfTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u7nvgp34afker0h9atgc.jpeg" alt="pic8" width="417" height="155"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8PHvZ9es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/is1i4jlct8jo7kblupf3.jpeg" alt="pic9" width="624" height="117"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JgFh19D9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0w0mzlrzzs798mdtttg.jpeg" alt="pic10" width="417" height="155"&gt;
&lt;/li&gt;
&lt;li&gt;Now go back to the EC2 portal, and create a snapshot of the volume&lt;/li&gt;
&lt;li&gt;Right-click on the volume and select ‘create a snapshot’, Type in the description on the prompted screen, and create Snapshot &lt;/li&gt;
&lt;li&gt;Go to Snapshots under Elastic Block Store, right-click on this new snapshot, and select copy&lt;/li&gt;
&lt;li&gt;Select the region where you want to copy, add a description, and copy 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-WXWNed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az87sbtonhxrxl2e082f.jpeg" alt="pic11" width="385" height="281"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uhzQ2woR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nflpxzch74y3r8g5pmi.jpeg" alt="pic12" width="445" height="206"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jAbHsAiL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/thjx2toscabynp7v3f0x.jpeg" alt="pic13" width="462" height="169"&gt; 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XuL2RnJ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izphvvuztxrmtxq4anlu.jpeg" alt="pic14" width="443" height="209"&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Go to another region, check your snapshot that you just copied, it could take depending on the size of your snapshot&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Right-click on the snapshot and create Volume &lt;/li&gt;
&lt;li&gt;Select the size, type, and region on the prompted screen. Increasing size is ok, but if you try to reduce the size, you may experience data lose 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uB914og4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfiks0n93i78py3od9jz.jpeg" alt="pic15" width="624" height="105"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7GhM9VbX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vu9b0rkeukmloy75rk3x.jpeg" alt="pic16" width="351" height="243"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pkRKEV-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgxx5x0kd4yuz5rx5okv.jpeg" alt="pic17" width="446" height="263"&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EBS volume has been moved to another region. However, I am going to attach an instance in this region to show you that there was no data lost since the last snapshot &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Attach the volume like we did it above for an instance in us-east-1 region and connect to EC2 Instance &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Please don’t try to format the file system again, it will delete your data. Just mount the volume here. As you can see here, all the files that were uploaded in the us-east-1 region were available here.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVs9bBPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sc216lw8v8h50bxpmdl.jpeg" alt="pic18" width="536" height="172"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JsY52ueK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycj43xe6yqldptxyorch.jpeg" alt="pic19" width="602" height="161"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BfWIKVIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vevxdw5yms32932btlrp.jpeg" alt="pic20" width="548" height="85"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ZfdHzKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kbjmr92hf5adcl37z0fv.jpeg" alt="pic21" width="624" height="385"&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now detach your volumes in both regions, delete volumes and snapshot, and terminate your instance to avoid any charges from AWS&lt;/p&gt;

&lt;p&gt;Use case Scenarios of what we did above:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perform a backup of your volume in another region.&lt;/li&gt;
&lt;li&gt;Restore volume in another region from snapshot&lt;/li&gt;
&lt;li&gt;Please Note: you could also create a Snapshot Lifecycle Policy that will create snapshots of your volume hourly, every two or four hours, or daily and retain those snapshots up to desired days. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Code Reviews</title>
      <author>MizuhoOkimoto</author>
      <pubDate>Sat, 20 Nov 2021 07:13:18 +0000</pubDate>
      <link>https://dev.to/okimotomizuho/code-reviews-2n44</link>
      <guid>https://dev.to/okimotomizuho/code-reviews-2n44</guid>
      <description>&lt;p&gt;After I contributed to an internal project, I experienced reviewing 2 pull requests and they were in the repository I contributed to. This project is for an online note for C language in my college, and uses Docusaurus.&lt;br&gt;
🔗Repository: &lt;a href="https://github.com/Seneca-ICTOER/IPC144"&gt;IPC144&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When I contributed to the project, I audited and fixed the markdown page and was familiar with each task, so I reviewed the Pull Requests of other students who did it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#review1"&gt;
  &lt;/a&gt;
  Review1.
&lt;/h3&gt;

&lt;p&gt;🔗Issue: &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/95"&gt;https://github.com/Seneca-ICTOER/IPC144/pull/95&lt;/a&gt;&lt;br&gt;
I reviewed Reza9472's work, where he worked on not only the markdown file but also modified css and package.json file. He did a good job but I found some extra spaces similar to how I did it, so I made a comment about it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#review2"&gt;
  &lt;/a&gt;
  Review2.
&lt;/h3&gt;

&lt;p&gt;🔗Issue: &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/84"&gt;https://github.com/Seneca-ICTOER/IPC144/pull/84&lt;/a&gt;&lt;br&gt;
I read the markdown file line by line and found an extra comment, so I asked rclee91 to delete it. I wondered if we needed to delete extra indentations in the code blocks because I thought it wasn't user-friendly.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qjQd3EJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j6hxw9ujhit275hmfn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qjQd3EJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0j6hxw9ujhit275hmfn8.png" alt="code block and the mobile display" width="880" height="505"&gt;&lt;/a&gt;&lt;br&gt;
I checked C language code format, and the generator fixed the extra indentations, also some other students deleted the indentations in their PR. However, the original course note (&lt;a href="https://ict.senecacollege.ca/~ipc144/pages/content/valid.html"&gt;IPC144&lt;/a&gt;)has the same indentations so I just suggested him to change it.&lt;br&gt;
rclee91 said the indentations are the same for all of the code example in the md file. The owners of the repo didn't say anything, so I was driven by the desire to have all the formatting the same, but decided to overlook it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;I experienced getting reviews and also reviewing through this assignment. By comparing what I did with what other people did along the same task, it was helpful to be able to know what I was missing.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Really simple encryption in PHP!</title>
      <author>ManuTheCoder</author>
      <pubDate>Sat, 20 Nov 2021 07:03:52 +0000</pubDate>
      <link>https://dev.to/manuthecoder/really-simple-encryption-in-php-3kk9</link>
      <guid>https://dev.to/manuthecoder/really-simple-encryption-in-php-3kk9</guid>
      <description>&lt;p&gt;Have you ever wanted to improve your app's security by hiding everything in your database? Let's make a simple encryption and decryption script in PHP using the &lt;code&gt;openssl_encrypt&lt;/code&gt; and &lt;code&gt;openssl_decrypt&lt;/code&gt; functions&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Let's define some variables&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"encryption_method"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"AES-128-CBC"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"your_amazing_key_here"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Obviously, change the encryption key&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;Creating a function to encrypt data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_random_pseudo_bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plaintext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Explained&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;openssl_random_pseudo_bytes&lt;/code&gt;  - Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;openssl_cipher_iv_length&lt;/code&gt; - The cipher method, see openssl_get_cipher_methods() for a list of potential values&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;openssl_encrypt&lt;/code&gt; - PHP lacks a build-in function to encrypt and decrypt large files. &lt;code&gt;openssl_encrypt()&lt;/code&gt; can be used to encrypt strings&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hash_hmac&lt;/code&gt; - Returns a string containing the calculated message digest as lowercase hexits unless binary is set to true in which case the raw binary representation&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;base64_encode&lt;/code&gt; - Encodes the given string with base64&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;Let's create a simple script to decrypt our encrypted string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$calcmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash_equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hmac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$calcmac&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Explained&lt;/strong&gt; &lt;br&gt;
The only difference here is the &lt;code&gt;openssl_decrypt&lt;/code&gt; function. Takes a raw or base64 encoded string and decrypts it using a given method and key.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#complete-code"&gt;
  &lt;/a&gt;
  Complete code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"encryption_method"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"AES-128-CBC"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"your_amazing_key_here"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_random_pseudo_bytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$plaintext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;base64_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_cipher_iv_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cipher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;encryption_method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$iv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$hmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ivlen&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$sha2len&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;openssl_decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cipher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OPENSSL_RAW_DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$iv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$calcmac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash_hmac&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sha256'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$ciphertext_raw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$as_binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash_equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$hmac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$calcmac&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$original_plaintext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nf"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#to-encrypt-something"&gt;
  &lt;/a&gt;
  To encrypt something
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nf"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Foo"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#to-decrypt-something"&gt;
  &lt;/a&gt;
  To decrypt something
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nf"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"lF0wxjGE4H7bbSH/51+ihseCa7aT5hn2Wm0b4expCxqc/W9A38m37QXakG/i/hAjSrNzMpINfZWnh8/9Kd2nodHTiP0Vq0euQ4Z3BOO1vt0WP6dsGRR03po7e4dIlep/lMrwS341jzN+o+FPUtcPVPUr6BEc0RtHwFoUH6NNm+2mWXYLUVH4Ct86iuD8+6eBC1SG3IG21R1dWREGdLrsWQ=="&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See if you can decrypt the following message. I'll post the encryption key in the comments section later!&lt;br&gt;
Hint: The key is a 3-letter programming language&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h3&gt;

&lt;p&gt;This code was taken from my own app, &lt;a href="https://smartlist.ga/"&gt;Smartlist&lt;/a&gt;. Smartlist is a home inventory app that lets you keep track of what's in your home! We encrypt our items, tasks, and notes too!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
    </item>
    <item>
      <title> Open Exchange
Use Third Party Charting Libraries Today In Your Analytics Dashboard!</title>
      <author>InterSystems Developer</author>
      <pubDate>Sat, 20 Nov 2021 06:52:10 +0000</pubDate>
      <link>https://dev.to/intersystems/open-exchangeuse-third-party-charting-libraries-today-in-your-analytics-dashboard-p78</link>
      <guid>https://dev.to/intersystems/open-exchangeuse-third-party-charting-libraries-today-in-your-analytics-dashboard-p78</guid>
      <description>&lt;p&gt;Now available on &lt;a href="https://openexchange.intersystems.com/package/ThirdPartyChartPortlets"&gt;Open Exchange&lt;/a&gt; is a library of third party charts available to use within DeepSee/InterSystems IRIS BI dashboards. To start, simply download and install, select the new portlet as the widget type, then select the chart type that you desire. If you don't find the type of chart you are looking for, you can easily extend the portlet to implement your desired chart type. These new chart types can be used within existing dashboards or you can create new dashboards using them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hbQTvnv3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz1xr9l1ay7ttpjqc4qd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hbQTvnv3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz1xr9l1ay7ttpjqc4qd.png" alt="Image description" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing, the portlet can be selected and configured as follows:&lt;br&gt;&lt;br&gt;
1) Add a new widget to your dashboard&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OognvcyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k56fwdeklrzavokf72bi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OognvcyN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k56fwdeklrzavokf72bi.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Select Portlets, then Highcharts, then assign your data source&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gFb3Xegy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge3qr033qaj5mp43uuig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFb3Xegy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ge3qr033qaj5mp43uuig.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;3) The widget will default to a line chart&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pq7K-mzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjykqm65h06lis3kh0eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pq7K-mzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjykqm65h06lis3kh0eg.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;4) Navigate to the Widget Settings to change the Chart Type if desired&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ViACkeqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c00c1ks4cj48t3urvd7z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ViACkeqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c00c1ks4cj48t3urvd7z.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;5) Select the desired chart type (I will choose "Bar" for this example)&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoJkW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxx63og3sjm9bauwcu0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoJkW8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnxx63og3sjm9bauwcu0.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;6) Data is now rendered using the new chart type&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BgpxIVl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbv3gfo7cwmfipyutlyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BgpxIVl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbv3gfo7cwmfipyutlyf.png" alt="Image description" width="880" height="700"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>analytics</category>
      <category>javascript</category>
      <category>opensource</category>
      <category>uidevelopment</category>
    </item>
    <item>
      <title>UIHUT- Product of the Day</title>
      <author>Mahfuzul Islam Nabil</author>
      <pubDate>Sat, 20 Nov 2021 06:39:52 +0000</pubDate>
      <link>https://dev.to/mahfuzulnabil/uihut-product-of-the-day-5373</link>
      <guid>https://dev.to/mahfuzulnabil/uihut-product-of-the-day-5373</guid>
      <description>&lt;p&gt;Hey, Dev's Beautiful People.&lt;br&gt;
We are Really Thankful to Guys for showing your love for us. We did it. We Got #1 Product of the day Badge.🥰🥰&lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/uihut-2-0"&gt;https://www.producthunt.com/posts/uihut-2-0&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdeqdRYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oukew3379gqlgtzil0yt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdeqdRYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oukew3379gqlgtzil0yt.png" alt="Image description" width="880" height="618"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lot's of Love.&lt;/p&gt;

</description>
      <category>producthunt</category>
      <category>webdev</category>
      <category>uiresouces</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>Doing code reviews</title>
      <author>TueNguyen2911</author>
      <pubDate>Sat, 20 Nov 2021 06:26:41 +0000</pubDate>
      <link>https://dev.to/tuenguyen2911_67/doing-code-reviews-12op</link>
      <guid>https://dev.to/tuenguyen2911_67/doing-code-reviews-12op</guid>
      <description>&lt;p&gt;This week, I had a chance to review some pull requests from different students in &lt;a href="https://github.com/Seneca-ICTOER/IPC144"&gt;IPC144&lt;/a&gt; repo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#review-1"&gt;
  &lt;/a&gt;
  Review #1
&lt;/h2&gt;

&lt;p&gt;I did some reviews for this a PR on &lt;code&gt;Information.md&lt;/code&gt; but the author ran into some technical issues, I tried to help him to resolve using git, but he deleted his fork and tried opening new PRs. I pointed out some typo issues, markdown issues and his mistake committing an unresolved conflict. You can check them here, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/115"&gt;PR#1&lt;/a&gt;, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/101"&gt;PR#2&lt;/a&gt;, &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/119"&gt;PR#3&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#review-2"&gt;
  &lt;/a&gt;
  Review #2
&lt;/h2&gt;

&lt;p&gt;I pointed out an unnecessary section of the page of the &lt;a href="https://github.com/Seneca-ICTOER/IPC144/issues/79"&gt;PR&lt;/a&gt; on &lt;code&gt;functions-arrays-and-structs.md&lt;/code&gt; and advised an accessibility improvement on this &lt;a href="https://github.com/Seneca-ICTOER/IPC144/pull/92"&gt;PR&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-thoughts"&gt;
  &lt;/a&gt;
  My thoughts
&lt;/h2&gt;

&lt;p&gt;Reviewing does take quite some time and great attention to details especially with those PRs. I did have some fun reading people's reviews and I learnt more about correct markdown syntaxes. I hope to review more challenging PRs next time.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
  </channel>
</rss>
