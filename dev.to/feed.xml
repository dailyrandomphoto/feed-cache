<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create S3 Lifecycle Rules with Tag Filters Using Python AWS CDK</title>
      <author>chrishart0</author>
      <pubDate>Thu, 21 Oct 2021 23:55:21 +0000</pubDate>
      <link>https://dev.to/signet-seal/create-s3-lifecycle-rules-with-tag-filters-using-python-aws-cdk-4d2o</link>
      <guid>https://dev.to/signet-seal/create-s3-lifecycle-rules-with-tag-filters-using-python-aws-cdk-4d2o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#get-right-to-it-here-is-the-code"&gt;
  &lt;/a&gt;
  Get right to it, here is the code
&lt;/h2&gt;

&lt;p&gt;Python CDK code for creating an S3 bucket with a lifecycle rule which uses a tag filter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bucket = s3.Bucket(self, "myBucket",
    lifecycle_rules = [
        s3.LifecycleRule(
            id="example-rule-made-with-python-cdk",
            expiration=core.Duration.days(1),
            tag_filters={ 
                'Key': 'delete_in_1_day', 
                'Value': 'true'
            }
        )
    ]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Relevant CDK docs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/Bucket.html"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/Bucket.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/LifecycleRule.html#aws_cdk.aws_s3.LifecycleRule"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/LifecycleRule.html#aws_cdk.aws_s3.LifecycleRule&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; AWS Lifecycle rules do not get more precise than 24 hours[&lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/s3-lifecycle-rule-delay/"&gt;docs&lt;/a&gt;]. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-cdk-or-aws-serverless-questions"&gt;
  &lt;/a&gt;
  More CDK or AWS Serverless Questions?
&lt;/h2&gt;

&lt;p&gt;Feel free to leave a comment here or hit us up on &lt;a href="https://www.linkedin.com/company/signet-seal"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Want to learn more about how SignetSeal can help make your chats more secure? Read more about us on our website &lt;a href="https://signetseal.com/"&gt;SignetSeal.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudnative</category>
      <category>cdk</category>
      <category>s3</category>
    </item>
    <item>
      <title>Product developers’ guide to cross joins</title>
      <author>Mage</author>
      <pubDate>Thu, 21 Oct 2021 23:53:57 +0000</pubDate>
      <link>https://dev.to/mage_ai/product-developers-guide-to-cross-joins-3obn</link>
      <guid>https://dev.to/mage_ai/product-developers-guide-to-cross-joins-3obn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;Learn how to use AI to select your next outfit that matches the occasion. Featuring Pandas and the merge function to find all combinations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We’ve all been there staring into our closet, admiring all the clothes but not quite realizing all the different combinations of clothes. In this follow up guide, I’ll go over how we can use AI to make our selection more transparent by understanding all the combinations we can use and when we should wear them. Let’s get started by looking at our wardrobe!&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zNBI-fG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dms0vhx0eam74dm62562.jpg" alt="Image description"&gt;&lt;em&gt;What’s in your wardrobe? (Source: &lt;a href="https://www.inprnt.com/gallery/annamu/"&gt;Anna Mu&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#before-we-begin"&gt;
  &lt;/a&gt;
  Before we begin
&lt;/h2&gt;

&lt;p&gt;First, please make sure you know the basics of sorting and filtering in Pandas, as we’ll be using it frequently. For a quick refresher, read our &lt;a href="https://www.mage.ai/blog/product-developers-guide-to-getting-started-with-ai-pt-1-intro-dataframes"&gt;introductory guide&lt;/a&gt; for information on importing, exporting, and processing all our data, and our guide to &lt;a href="https://www.mage.ai/blog/product-developers-guide-to-customize-data-ai-pt2-join-merge-dataframes"&gt;merge&lt;/a&gt;. With that out of the way, let’s start by downloading the &lt;a href="https://app.box.com/s/tcloz4exgtckf4ed5yx1ykcv9tio3su0/file/875323384078"&gt;wardrobe&lt;/a&gt; dataset and importing it on Google Collab.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwRwMAva--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37u27fkxajn1m3q3yusk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwRwMAva--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37u27fkxajn1m3q3yusk.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-closet"&gt;
  &lt;/a&gt;
  My closet
&lt;/h2&gt;

&lt;p&gt;The wardrobe dataset contains information on 5 different shirts, and 5 different pants, along with labels for whether they are casual wear. We’ll break down this dataset into 2 portions, 1 for shirts and another for pants.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BEpw_Yq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyy0dqlyjpjbb7irlb7q.jpg" alt="Image description"&gt;&lt;em&gt;Shirts: &lt;a href="https://www.google.com/imgres?imgurl=https%3A%2F%2Frfis.freetls.fastly.net%2Fpublic%2Fcontent%2F4845243%3Far%3D3%3A4%26w%3D412&amp;amp;imgrefurl=https%3A%2F%2Fwww.stylepit.com%2Fname-it-neon-yellow-nkmterl-ss-top-356984-592&amp;amp;tbnid=sLwJXNUB0Uq8qM&amp;amp;vet=12ahUKEwiyveXR-NvzAhXqADQIHRumC9QQMygGegUIARD5Ag..i&amp;amp;docid=X1cfD5hlKU_wcM&amp;amp;w=412&amp;amp;h=549&amp;amp;q=t-shirt%20neon%20yellow&amp;amp;hl=en&amp;amp;client=safari&amp;amp;ved=2ahUKEwiyveXR-NvzAhXqADQIHRumC9QQMygGegUIARD5Ag"&gt;T-Shirt&lt;/a&gt;, &lt;a href="https://m.media-amazon.com/images/I/91lHoiqDkYL._AC_UL1500_.jpg"&gt;Sweatshirt&lt;/a&gt;, &lt;a href="https://b-edge.friartux.com/f00000000189637/www.friartux.com/pub/media/catalog/product/cache/a761eb790ae5e77b4635e4d17debaad9/a/p/apple-red-vest-102ap.jpg"&gt;Vest&lt;/a&gt;, &lt;a href="https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.lelo.com%2Fsites%2Fdefault%2Ffiles%2FLELO_Accessories_TUX_product_2x_0.jpg&amp;amp;imgrefurl=https%3A%2F%2Fwww.lelo.com%2Ftux&amp;amp;tbnid=gbvGsB8w3BaFLM&amp;amp;vet=12ahUKEwjq0PP--NvzAhVfATQIHUJxCQMQMygFegUIARCVAw..i&amp;amp;docid=K1r3uXvNZQvDJM&amp;amp;w=1000&amp;amp;h=1000&amp;amp;q=tux&amp;amp;hl=en&amp;amp;client=safari&amp;amp;ved=2ahUKEwjq0PP--NvzAhVfATQIHUJxCQMQMygFegUIARCVAw"&gt;Tuxedo&lt;/a&gt;, and &lt;a href="https://i.insider.com/549af980ecad042d5d8b456a?width=1300&amp;amp;format=jpeg&amp;amp;auto=webp"&gt;Suit&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJb8Jd5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w0id6sdxluq7hcorw0f.jpg" alt="Image description"&gt;&lt;em&gt;Pants: &lt;a href="https://images.thdstatic.com/productImages/67e1a55e-e291-4662-9119-109faeb50bb0/svn/charcoal-red-kap-work-pants-pt38ch-34-32-64_100.jpg"&gt;Slacks&lt;/a&gt;, &lt;a href="https://cdni.llbean.net/is/image/wim/250265_1145_41?hei=1092&amp;amp;wid=950&amp;amp;resMode=sharp2&amp;amp;defaultImage=llbprod/A0211793_2"&gt;Jeans&lt;/a&gt;, &lt;a href="https://cdn.shopify.com/s/files/1/0077/0432/products/Khakinators_4_34-_1_1024x1024.jpg?v=1628772654"&gt;Shorts&lt;/a&gt;, &lt;a href="https://cdni.llbean.net/is/image/wim/503739_129_41?hei=1092&amp;amp;wid=950&amp;amp;resMode=sharp2&amp;amp;defaultImage=llbprod/A0211793_2"&gt;Cargo pants&lt;/a&gt;, and &lt;a href="https://cdn.shopify.com/s/files/1/0207/7214/products/18430---Men_s-Insulated-Overall---019-Black---Front---Noble_620x.jpg?v=1608770176"&gt;overalls&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2OLZ5uvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y6ze0c5a37bks7jzo4b.png" alt="Image description"&gt;&lt;em&gt;So many options&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#cartesian-product"&gt;
  &lt;/a&gt;
  Cartesian Product
&lt;/h2&gt;

&lt;p&gt;Using our datasets, we’re going to begin creating a combination calculated by the &lt;a href="https://en.wikipedia.org/wiki/Cartesian_product"&gt;cartesian product&lt;/a&gt;. This is an operation where every object is paired with another object. In other words, a shirt for each pair of pants to calculate all possible combinations. This is a many to many relationship, where many objects connect with many other objects.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9tywz3I7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfq2d9lg6g3c3rrhetfh.png" alt="Image description"&gt;&lt;em&gt;Source: &lt;a href="https://www.mathstopia.net/wp-content/uploads/2021/01/cartesian-products.jpg"&gt;Mathstopia&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#cross-join"&gt;
  &lt;/a&gt;
  Cross Join
&lt;/h2&gt;

&lt;p&gt;Another term for the cartesian product is a cross join, which is a join that follows the operation of a cartesian product, by crossing each object with each other. A many to many relationship can be specified in Pandas using on and matching values. In this case, we want everything to match with everything, so we add a new column called ‘keys’ and store in both the same value.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ipmz7vOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk75y60xslcdy19wwo59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ipmz7vOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk75y60xslcdy19wwo59.png" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Once the key is created, we call &lt;strong&gt;merge&lt;/strong&gt; on the keys to perform the Cartesian Product.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FyQHaEjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0q3ta9ugch6a6cjtih4.png" alt="Image description"&gt;&lt;em&gt;Result of the cross join&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Our result shows that we have 25 different outfits, and will use this finalized data to answer questions about the wardrobe and pick the right outfit for each special occasion, whether it’s a date, casual hangout, trips and more. Let’s start by looking at common scenarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenarios"&gt;
  &lt;/a&gt;
  Scenarios
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What could be worn to a date?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You’ve got to dress to impress by picking formal clothing.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeIYmZJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjfj2mcm80imr5b40dzf.png" alt="Image description"&gt;&lt;em&gt;Slacks with a vest, tux, or suit. (Source: Date Night)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fK7Q7U2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq6h4a56vpkm184taxxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fK7Q7U2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq6h4a56vpkm184taxxc.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How about playing at an Amusement Park?&lt;/strong&gt;&lt;br&gt;
Casual clothing for fun and games!&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bF1q1kCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er97u5ijmc5zh997x1vl.png" alt="Image description"&gt;&lt;em&gt;You’ve got a lot of outfits to choose from.&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aR0i7Z10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvcvfrpxxco86oethkhp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aR0i7Z10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvcvfrpxxco86oethkhp.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What about going to class?&lt;/strong&gt;&lt;br&gt;
Wear clothes that match. The last thing you want is to be bullied because of the way you dress. There are 11 different combinations of matching clothes that are both casual or not.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jo3XE36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdm63zotk9dd9vdyesgx.gif" alt="Image description"&gt;&lt;em&gt;Outfits that match (Source: &lt;a href="https://media.giphy.com/media/KiXl0vfc9XIIM/giphy.gif"&gt;Tumblr&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jNgox26e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u41joka1rw0rlhyplnpe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNgox26e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u41joka1rw0rlhyplnpe.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anything special we could wear for hiking?&lt;/strong&gt;&lt;br&gt;
When hiking you want to be prepared, so wear cargo shorts with lots of pockets, along with any casual shirt.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxHpTTQF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4jm511kr6fgjtkgqc8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxHpTTQF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4jm511kr6fgjtkgqc8u.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rF-WdOIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/homrxxbv341wmzstumy2.png" alt="Image description"&gt;&lt;em&gt;A happy camper wears cargo pants and a t-shirt or a sweatshirt. (Source: &lt;a href="https://www.nationalgeographic.com/travel/national-parks/article/yosemite-national-park"&gt;National Geographic&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Finally, what about a leisure-filled vacation?&lt;/strong&gt;&lt;br&gt;
You may wear whatever outfit you wish. You’re on vacation and it doesn’t need to match. You have 25 different combinations to choose from.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mG0jNCW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mbx1uyc8j11ygq5xe0p.png" alt="Image description"&gt;&lt;em&gt;A vacation to the Caribbean (Source: &lt;a href="https://www.jetsetter.com//uploads/sites/7/2018/04/ovlZ8yxN-1380x1035.jpeg"&gt;Jade Mountain&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Outside of saving time and wearing the right attire for the occasion, cross joins are an efficient way to get all combinations. Combined with filters, this can greatly reduce the cost and increase the speed of data preprocessing. Speaking of which, our outfit isn’t complete yet. It’s become customary to wear a mask out in public. Cross join your new combination with another dataset of masks to complete the outfit.&lt;/p&gt;



&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TbHjt5f0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uypzcu6jhjzufp8cm893.png" alt="Image description"&gt;&lt;em&gt;Just in time for Halloween! (Source: &lt;a href="https://i.insider.com/5eaae05f3dac9a601e74b9b6?width=1136&amp;amp;format=jpeg"&gt;Disney&lt;/a&gt;)&lt;/em&gt;&lt;br&gt;
&lt;/center&gt;

</description>
      <category>machinelearning</category>
      <category>pandas</category>
      <category>crossjoin</category>
      <category>mage</category>
    </item>
    <item>
      <title>Create CloudWatch Alarms with Python AWS CDK </title>
      <author>chrishart0</author>
      <pubDate>Thu, 21 Oct 2021 23:24:14 +0000</pubDate>
      <link>https://dev.to/signet-seal/create-cloudwatch-alarms-with-python-aws-cdk-1e53</link>
      <guid>https://dev.to/signet-seal/create-cloudwatch-alarms-with-python-aws-cdk-1e53</guid>
      <description>&lt;h2&gt;
  &lt;a href="#create-the-alarm"&gt;
  &lt;/a&gt;
  Create the alarm
&lt;/h2&gt;

&lt;p&gt;Put this into your Python AWS CDK stack to create an alarm on a bucket asigned to a varibale named &lt;code&gt;bucket&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bucket = s3.Bucket...

s3_size_alarm = cloudwatch.Alarm(self, 'bucket_overloaded_alarm',
    metric= cloudwatch.Metric(
        namespace = "AWS/S3", 
        metric_name = "BucketSizeBytes",
        dimensions={
            "BucketName": bucket.bucket_name,
            "StorageType": "StandardStorage",
        },
        period = core.Duration.days(1),
        statistic="Maximum",
    ), 
    evaluation_periods=1, 
    threshold=1000000000 #1 GB
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a CloudWatch alarm which:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Alarm if the size of the bucket goes over 1GB&lt;/li&gt;
&lt;li&gt;Only monitors objects with the &lt;code&gt;StandardStorage&lt;/code&gt; type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Relevant CDK docs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Alarm.html"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Alarm.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Metric.html"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Metric.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Don't rely on an alarm watching the &lt;code&gt;BucketSizeBytes&lt;/code&gt; metric to make sure your bucket doesn't grow too large. This metric is &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudwatch-monitoring.html"&gt;only collected once a day&lt;/a&gt;. Consider opting in to &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/metrics-dimensions.html"&gt;S3 request metrics&lt;/a&gt; for more in-depth S3 monitoring&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-alarm-action"&gt;
  &lt;/a&gt;
  Create alarm action
&lt;/h2&gt;

&lt;p&gt;Alarms aren't very useful if they don't do anything. Setup some actions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;topic = sns.Topic.from_topic_arn(self,'snstopic',"arn:aws:sns:us-east-1:123456789012:alarm-go-ahhhhhhhhhhhh")

s3_size_alarm.add_alarm_action(
    cloudwatch_actions.SnsAction(
        topic = topic
    )
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Relevant CDK docs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_sns/Topic.html#aws_cdk.aws_sns.Topic.from_topic_arn"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_sns/Topic.html#aws_cdk.aws_sns.Topic.from_topic_arn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#more-cdk-or-aws-serverless-questions"&gt;
  &lt;/a&gt;
  More CDK or AWS Serverless Questions?
&lt;/h2&gt;

&lt;p&gt;Feel free to leave a comment here or hit us up on &lt;a href="https://www.linkedin.com/company/signet-seal"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Want to learn more about how SignetSeal can help make your chats more secure? Read more about us on our &lt;a href="https://signetseal.com/"&gt;website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cdk</category>
      <category>iac</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>What is CI/CD in DevOps?</title>
      <author>Erin Schaffer</author>
      <pubDate>Thu, 21 Oct 2021 22:09:43 +0000</pubDate>
      <link>https://dev.to/educative/what-is-cicd-in-devops-3lg4</link>
      <guid>https://dev.to/educative/what-is-cicd-in-devops-3lg4</guid>
      <description>&lt;p&gt;We’re only a couple of months away from the new year, which means it’s time to start looking ahead to the tech trends that will dominate the software industry in 2022. As the new year approaches, we want to help you get familiar with upcoming trends so you can be prepared and start taking your skills to the next level. Today, we’ll discuss &lt;strong&gt;&lt;em&gt;CI/CD&lt;/em&gt;&lt;/strong&gt;. CI/CD is a DevOps practice that enables software development teams to automate their software development lifecycle. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whatiscicd"&gt;What is CI/CD?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuousintegration"&gt;What is continuous integration?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuousdelivery"&gt;What is continuous delivery?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuousdeployment"&gt;What is continuous deployment?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cicdtools"&gt;CI/CD tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cicd"&gt;
  &lt;/a&gt;
  What is CI/CD?
&lt;/h2&gt;

&lt;p&gt;CI/CD is an important &lt;strong&gt;DevOps practice&lt;/strong&gt; and an &lt;strong&gt;Agile methodology best practice&lt;/strong&gt;. This practice allows development teams to frequently deliver and deploy applications and accelerate the application development process. Introducing a CI/CD pipeline into our software development lifecycle allows us to efficiently &lt;strong&gt;implement automation&lt;/strong&gt; and monitor code changes, new features, potential bug fixes, and more.&lt;/p&gt;

&lt;p&gt;CI/CD typically refers to continuous integration and continuous delivery, but the “CD” can also stand for continuous deployment. Continuous delivery and continuous deployment both refer to automating stages of the CI/CD pipeline, but continuous deployment goes a step further. The purpose of continuous delivery is to make it easy to deploy new code. The purpose of continuous deployment is to allow teams to be &lt;strong&gt;“hands-off”&lt;/strong&gt; in the process by automating the deployment stage.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Cloud-native CI/CD&lt;/strong&gt;: A cloud-native CI/CD pipeline allows us to take full advantage of cloud computing services and features, such as containerization, going serverless, and implementing a multi-cloud infrastructure. A cloud-native app is built to run in the cloud. The cloud-native CI/CD process supports cloud services throughout the software development lifecycle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-cicd"&gt;
  &lt;/a&gt;
  Benefits of CI/CD
&lt;/h3&gt;

&lt;p&gt;There are many benefits of implementing CI/CD into your software development lifecycle. Let’s take a look at some of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Increased speed&lt;/strong&gt;: With an automated CI/CD pipeline, teams can ship changes every hour, day, week, month, etc., and we can optimize each stage of the process. New changes and features can be launched quickly, which allows you to respond to new trends and address any issues that come up.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easy maintenance&lt;/strong&gt;: When it’s time to perform routine maintenance, you don’t want all of the system to shut down at once. To address this problem, you can create microservices in the architecture of your code so that individual areas of the system are taken down for maintenance instead of the entire system.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved collaboration and visibility&lt;/strong&gt;: A CI/CD pipeline allows many people to get involved in the process, which promotes visibility and collaboration across different teams and orgs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Real-time feedback&lt;/strong&gt;: Shipping regular updates allows you to receive more immediate feedback from users. It also allows you to experiment with different features and fixes, and then hear about their performance shortly after deployment.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Continuous reliability and continuous testing&lt;/strong&gt;: &lt;em&gt;Continuous reliability&lt;/em&gt;, or test reliability, improves in a CI/CD pipeline. This is because incremental changes are implemented one at a time, which allows for more precise and accurate tests to be conducted continuously.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;High-quality code&lt;/strong&gt;: With CI/CD, your code is tested regularly. This means that you’ll discover bugs sooner and fix them more quickly. &lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-continuous-integration"&gt;
  &lt;/a&gt;
  What is continuous integration?
&lt;/h2&gt;

&lt;p&gt;Continuous integration refers to the build / integration stage of the software release process. It’s a stage where developers &lt;strong&gt;consistently merge their changes into the main repository&lt;/strong&gt; of a version control system (like Git). After these changes are merged into the main repository, automated builds and tests are run. Before code changes are committed, you can run unit tests to verify the code before integrating it into the main repository. If you don’t run the tests yourself, the CI service performs automated tests and builds on any new code changes. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-continuous-delivery"&gt;
  &lt;/a&gt;
  What is continuous delivery?
&lt;/h2&gt;

&lt;p&gt;Continuous delivery expands upon continuous integration. It is a delivery process that allows us to &lt;strong&gt;automatically test and upload code changes to a repository&lt;/strong&gt; (like GitHub), and then deploy all code changes to a testing environment or a production environment. With a continuous delivery pipeline, we can further &lt;strong&gt;automate testing&lt;/strong&gt; beyond just unit tests and perform UI tests, integration tests, load tests, and more. When we thoroughly test the codebase, we can verify that the application is error-free and ready for deployment. With continuous delivery, the operations team triggers the deployment instead of it happening automatically (this is where continuous deployment comes in).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-continuous-deployment"&gt;
  &lt;/a&gt;
  What is continuous deployment?
&lt;/h2&gt;

&lt;p&gt;It’s common to mistake continuous deployment for continuous delivery. Continuous deployment goes a step beyond continuous delivery. It’s a software release process that refers to the &lt;strong&gt;automatic deployment of applications&lt;/strong&gt; into production. Continuous deployment releases the application from the repository to production, which eliminates the need for human interference. Since tests are still implemented throughout the process, problematic code will not be deployed to production. Development teams are notified when tests fail so they can take the necessary steps to fix the problem before deployment.&lt;/p&gt;

&lt;p&gt;Continuous deployment is beneficial because it &lt;strong&gt;speeds up the delivery&lt;/strong&gt; of the application and the feedback loop with users. It allows teams to increase productivity and efficiency and rapidly push their software to the market. Verified and tested applications can be instantaneously deployed, which allows developers to focus on other tasks, including new features, updates, bug fixes, and more. While there are many advantages to implementing continuous deployment, the initial implementation itself can be expensive. The continuous deployment pipeline may require ongoing maintenance and updates to ensure it runs as smoothly as possible.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cicd-tools"&gt;
  &lt;/a&gt;
  CI/CD tools
&lt;/h2&gt;

&lt;p&gt;A good CI/CD tool can help you create a strong CI/CD pipeline. Popular CI/CD tools include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Jenkins&lt;/strong&gt;: Jenkins is an open-source, Java-based automation server that supports building, deploying, and automating software development processes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CircleCI&lt;/strong&gt;: CircleCI supports software development and publishing. It allows you to automate the entire pipeline, and integrate with services like GitHub, GitHub Enterprise, and Bitbucket to perform builds when code is committed. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GitLab&lt;/strong&gt;: GitLab provides a suite of tools for managing the software development lifecycle. You can perform builds, run tests, and deploy code. It also allows you to build jobs in a VM, Docker container, or a different server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Major cloud providers, such as Microsoft, Amazon, and Google, also offer CI/CD process tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Azure DevOps&lt;/strong&gt;: Azure DevOps provides a variety of CI/CD tools, like Git repo management, testing, reporting, and more. It provides support for Azure, Kubernetes, and VM-based resources.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AWS CodePipeline&lt;/strong&gt;: AWS CodePipeline is a continuous delivery service that allows you to automate release pipelines. It easily integrates with third-party services like GitHub.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cloud Build from Google Cloud Platform (GCP)&lt;/strong&gt;: Cloud Build from GCP is a serverless CI/CD platform that allows you to build software across all languages, such as Java and Go, deploy across multiple environments, and access cloud-hosted CI/CD workflows within your own private network.

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;Congrats on taking your first step with CI/CD! It’s an important DevOps practice that enforces automation in the building, testing, and deployment of applications. CI/CD is just one part of DevOps. There’s still so much more to learn about DevOps, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Split API pods&lt;/li&gt;
&lt;li&gt;Collecting and querying metrics&lt;/li&gt;
&lt;li&gt;Creating a remote development environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get started learning these concepts and more, check out Educative’s learning path &lt;a href="https://www.educative.io/path/devops-for-developers"&gt;&lt;strong&gt;DevOps for Developers&lt;/strong&gt;&lt;/a&gt;. In this hands-on learning path, you’ll work with popular DevOps tools like Docker and Kubernetes. You’ll learn how to work with Docker containers, the fundamentals of Kubernetes, and more about CI/CD. By the end, you’ll have the skills to excel in any DevOps role.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-devops"&gt;
  &lt;/a&gt;
  Continue learning about DevOps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/ansible-for-beginners"&gt;Ansible for beginners: Get started with IT automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/chaos-engineering-process-principles"&gt;Chaos engineering 101: Principles, process, and examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/yaml-tutorial"&gt;YAML tutorial: Get started in 5 minutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devops</category>
      <category>git</category>
      <category>github</category>
      <category>testing</category>
    </item>
    <item>
      <title>What would you like to know about A/B Testing? Answer to be featured on our podcast 🎧  </title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 21 Oct 2021 21:13:06 +0000</pubDate>
      <link>https://dev.to/devteam/what-would-you-like-to-know-about-ab-testing-answer-to-be-featured-on-our-podcast-56ci</link>
      <guid>https://dev.to/devteam/what-would-you-like-to-know-about-ab-testing-answer-to-be-featured-on-our-podcast-56ci</guid>
      <description>&lt;p&gt;The &lt;a href="//dev.to/devdiscuss"&gt;DevDiscuss Podcast&lt;/a&gt; begins with an interview and ends with commentary from listeners — and we like to feature the &lt;em&gt;actual&lt;/em&gt; voices from our community!&lt;/p&gt;

&lt;p&gt;To inform an upcoming episode of the show, we'd like to know...&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#what-would-you-like-to-know-about-ab-testing"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What would you like to know about A/B Testing?&lt;/strong&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;For your chance to hear your actual comments on an upcoming episode, answer the question above by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Calling our Google Voice at +1 (929)500-1513 and leave a message 📞&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sending a voice memo to &lt;a href="mailto:pod@dev.to"&gt;pod@dev.to&lt;/a&gt; 🎙&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OR, leaving a comment here (we'll read your response aloud for you) 🗣&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please send in your recordings by Wednesday, October 27th at 9 AM, ET (1 PM UTC, 6 AM PT)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#voice-recordings-will-be-given-priority-placement"&gt;
  &lt;/a&gt;
  Voice recordings will be given priority placement 😉
&lt;/h4&gt;

&lt;p&gt;Catch up on recent episodes of the show &lt;a href="https://dev.to/devdiscuss"&gt;here&lt;/a&gt; 👀  &lt;/p&gt;

</description>
      <category>podcast</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Android's Locker Screen Using Shared Preferences &amp; Material UI</title>
      <author>Siddharth Singh</author>
      <pubDate>Thu, 21 Oct 2021 20:30:09 +0000</pubDate>
      <link>https://dev.to/siddharthsing/androids-in-app-lock-screen-using-shared-preferences-material-ui-103</link>
      <guid>https://dev.to/siddharthsing/androids-in-app-lock-screen-using-shared-preferences-material-ui-103</guid>
      <description>&lt;h2&gt;
  &lt;a href="#apps-overview"&gt;
  &lt;/a&gt;
  App's Overview
&lt;/h2&gt;


&lt;p&gt;&lt;br&gt;
In this article, I am going to create a multi-screen yet simple application that will be demonstrating the best way to create lock screens for the apps using shared preferences and some material UI components.&lt;br&gt;&lt;br&gt;
&lt;/p&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QewXW1IA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rl99od84mlvrxn5xj8i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QewXW1IA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rl99od84mlvrxn5xj8i.gif" alt="Lock Screen Demo App"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#steps-to-proceed"&gt;
  &lt;/a&gt;
  Steps to proceed
&lt;/h2&gt;


&lt;p&gt;&lt;br&gt;
We will be proceeding in a very beginner-friendly way. All the steps are mentioned below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Project Setup &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#UI"&gt;Building the app's UI &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#back"&gt;Creating the Backend of the app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#GitHub"&gt;GitHub Repo &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support"&gt;Writer's Support ❤️&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all, create a brand new project in your android studio. Assuming that it will be an easy part, so not explaining all. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UWzWmNFg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu4ykvvoqn5g1prrfvrp.jpg" alt="Image description"&gt;
&lt;/li&gt;
&lt;li&gt;Then set up your emulator properly to check the application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we are good to go for next step.&lt;br&gt;
&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#building-the-apps-ui"&gt;
  &lt;/a&gt;
  Building the app's UI
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;
  App's UI will be built in 4 steps :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mainA"&gt;Main Activity UI (activity_main.xml)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setA"&gt;Set Password Screen UI (activity_set_password.xml)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#passA"&gt;PIN Entering screen UI (activity_password_type.xml)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#welA"&gt;Screen open upon correct PIN UI (activity_welcome.xml)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;App's UI is built with some of the &lt;code&gt;material UI&lt;/code&gt; component for giving it a better look.&lt;/p&gt;

&lt;p&gt;Simply copy each and every &lt;code&gt;.xml&lt;/code&gt; file below and create the same into your project.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_main.xml&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;

&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/backgroud"
    android:theme="@style/Theme.MaterialComponents.DayNight.NoActionBar"
    &amp;gt;

    &amp;lt;LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center_horizontal"
        android:orientation="vertical"
        android:layout_centerInParent="true"
        tools:context=".MainActivity"&amp;gt;

        &amp;lt;ImageView
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:src="@drawable/ic_baseline_android_24"
            android:layout_marginBottom="4dp"
            /&amp;gt;
        &amp;lt;TextView
            android:id="@+id/tv_app_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Lock Up !"
            android:gravity="center"
            android:textSize="25sp"
            android:textStyle="bold"
            android:textColor="@color/gradientEnd"
            android:layout_marginBottom="26dp"
            android:letterSpacing="0.3"/&amp;gt;

        &amp;lt;androidx.cardview.widget.CardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="20dp"
            android:layout_marginEnd="20dp"
            android:background="@color/white"
            app:cardCornerRadius="8dp"
            app:cardElevation="5dp"
            &amp;gt;
            &amp;lt;LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp"&amp;gt;

                &amp;lt;TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Welcome"
                    android:gravity="center"
                    android:textSize="30sp"
                    android:textColor="#0091EA"
                    android:textStyle="bold"/&amp;gt;
                &amp;lt;TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Please set the lock screen pin"
                    android:gravity="center"
                    android:textSize="16sp"
                    android:textColor="#7A8089"
                    android:textStyle="bold"/&amp;gt;
                &amp;lt;LinearLayout
                    android:id="@+id/llLaunchScreen"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    tools:visibility="visible"
                    android:padding="8dp"
                    android:layout_centerInParent="true"
                    &amp;gt;

                    &amp;lt;androidx.cardview.widget.CardView
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:cardCornerRadius="50dp"

                        &amp;gt;
                        &amp;lt;LinearLayout
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:orientation="vertical"
                            &amp;gt;
                        &amp;lt;Button
                            android:id="@+id/buttonSetPin"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:backgroundTint="@color/gradientStart"
                            android:text="Set/Change PIN"
                            android:padding="16dp"
                            android:textColor="#FFFFFF"
                            android:textStyle="bold"
                            /&amp;gt;
                        &amp;lt;Button
                            android:id="@+id/buttonTypePin"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:backgroundTint="@color/gradientStart"
                            android:text="Type Pin To get in"
                            android:padding="16dp"
                            android:textColor="#FFFFFF"
                            android:textStyle="bold"
                            /&amp;gt;
                        &amp;lt;/LinearLayout&amp;gt;
                    &amp;lt;/androidx.cardview.widget.CardView&amp;gt;
                &amp;lt;/LinearLayout&amp;gt;

            &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;/androidx.cardview.widget.CardView&amp;gt;

    &amp;lt;/LinearLayout&amp;gt;
&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_set_password.xml&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="@drawable/backgroud"
    android:orientation="vertical"

    &amp;gt;

    &amp;lt;ImageView
        android:id="@+id/imgAnd"
        android:layout_width="170dp"
        android:layout_height="170dp"
        android:layout_marginTop="5dp"
        android:src="@drawable/ic_baseline_android_24"
        android:layout_centerHorizontal="true"
        /&amp;gt;
    &amp;lt;com.google.android.material.textfield.TextInputLayout
        android:id="@+id/mtxtName"
        android:padding="18dp"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imgAnd"
        &amp;gt;

        &amp;lt;androidx.appcompat.widget.AppCompatEditText
            android:id="@+id/edtName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Enter your Name"
            android:padding="18dp"
            android:textColorHint="@color/white"
            android:inputType="text"
            android:textSize="16sp"

            /&amp;gt;
    &amp;lt;/com.google.android.material.textfield.TextInputLayout&amp;gt;

    &amp;lt;com.google.android.material.textfield.TextInputLayout
        android:id="@+id/mtxtPass"
        android:padding="18dp"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/mtxtName"

        &amp;gt;

        &amp;lt;androidx.appcompat.widget.AppCompatEditText
            android:id="@+id/edtPass"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Enter your password"
            android:padding="18dp"
            android:textColorHint="@color/white"
            android:inputType="numberPassword"
            android:textSize="16sp"

            /&amp;gt;
    &amp;lt;/com.google.android.material.textfield.TextInputLayout&amp;gt;

    &amp;lt;Button
        android:id="@+id/btnSave"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:backgroundTint="@color/gradientEnd"
        android:text="Save Pin"
        android:padding="16dp"
        android:layout_margin="25dp"
        android:textColor="#FFFFFF"
        android:textStyle="bold"
        android:layout_below="@+id/mtxtPass"
        /&amp;gt;

&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_password_type.xml&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/backgroud"
    android:orientation="vertical"
    &amp;gt;

    &amp;lt;ImageView
        android:id="@+id/imgAnd"
        android:layout_width="170dp"
        android:layout_height="170dp"
        android:layout_marginTop="5dp"
        android:src="@drawable/ic_baseline_android_24"
        android:layout_centerHorizontal="true"
        /&amp;gt;
    &amp;lt;com.google.android.material.textfield.TextInputLayout
        android:id="@+id/mtxtName"
        android:padding="18dp"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imgAnd"
        &amp;gt;
    &amp;lt;/com.google.android.material.textfield.TextInputLayout&amp;gt;

    &amp;lt;TextView
        android:id="@+id/txtPass"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_marginTop="215dp"
        android:textColor="#EDE8E8"
        android:textStyle="bold"
        android:letterSpacing="1.5"
        android:textSize="22dp"
        android:maxLength="4"
        android:inputType="numberPassword"
        android:text="1234" /&amp;gt;

    &amp;lt;LinearLayout
        android:id="@+id/keyBoard"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_alignParentBottom="true"
        &amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            &amp;gt;

            &amp;lt;Button
                android:id="@+id/btn1"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="1"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn2"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="2"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn3"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="3"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn4"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="4"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn5"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="5"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn6"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="6"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn7"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="7"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn8"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="8"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn9"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="9"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"&amp;gt;

            &amp;lt;ImageButton
                android:id="@+id/btnErase"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="22dp"
                android:src="@drawable/ic_baseline_arrow_back_ios_24"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn0"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="0"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;ImageButton
                android:id="@+id/btnCheck"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="22dp"
                android:src="@drawable/ic_baseline_check_24"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;


    &amp;lt;/LinearLayout&amp;gt;

&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_welcome.xml&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".WelcomeActivity"
    android:background="@drawable/backgroud"&amp;gt;


    &amp;lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="WELCOME !"
        android:textColor="@color/white"
        android:textSize="56sp"
        android:layout_centerInParent="true"
        android:layout_centerHorizontal="true"
        android:textStyle="bold"
        android:letterSpacing="0.1"
        /&amp;gt;

&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apps-backend"&gt;
  &lt;/a&gt;
  App's Backend
&lt;/h2&gt;

&lt;p&gt;Similar to the UI, the app's backend is also divided into four parts namely :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mainB"&gt;MainActivity.kt &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setB"&gt;SetPasswordActivity.kt &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#passB"&gt;PasswordTypeActivity.kt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#welB"&gt;WelcomeActivity.kt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MainActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val buttonTypePin: Button = findViewById(R.id.buttonTypePin)
        val buttonSetPin: Button = findViewById(R.id.buttonSetPin)

        /* buttonSetPin will open the SetPasswordActivity.kt.
        *
        *  In other words the activity opened will
        *  overwrite the default shared preferences or set new values if not present.
        *
        *  You can further create it for reseting passwords or forgotten
        *  password option in your app
        * */

        buttonSetPin.setOnClickListener{
            val intent = Intent(this,SetPasswordActivity::class.java)
            startActivity(intent)
        }


        /*
        *  buttonTypePin will open the PasswordTypeActivit.kt
        *
        * If the user has already set the pin he/she
        * can just enter the pin correctly and can enter the
        * next screen.
        * */

        buttonTypePin.setOnClickListener{
            val intent = Intent(this,PasswordTypeActivity::class.java)
            startActivity(intent)

        }

    }
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SetPasswordActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Intent
import android.os.Bundle
import android.widget.*
import androidx.appcompat.app.AppCompatActivity

class SetPasswordActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_set_password)


        val edtName: EditText = findViewById(R.id.edtName)
        val edtPass: EditText = findViewById(R.id.edtPass)
        val btnSave: Button = findViewById(R.id.btnSave)



        /* Creating the shared preference to store (name, password)
        *  as a key value pair.
        * */

        val sharedPref = getSharedPreferences("passPref", MODE_PRIVATE)
        val editor = sharedPref.edit()


        /*
        * onClick of btnSave the data present in edit texts
        * name and pass in .xml file will be  stored in our
        * shared preference (sharedpref)
        * */

        btnSave.setOnClickListener{

            val name: String = edtName.text.toString()
            val password: String = edtPass.text.toString()

            editor.apply {

                putString("name", name)
                putString("password", password)
                apply() /* can also use commit() here but apply() is the best practice according to google */
            }


            Toast.makeText(this, "PIN successfully set ", Toast.LENGTH_SHORT).show()

            /* On successfully creating the PIN user will
            *  will be directed to the PasswordTypeActivity screen
            *  where user have to enter the correct PIN to enter the WelcomeActivity.kt
            * */

            val intent = Intent(this,PasswordTypeActivity::class.java)
            startActivity(intent)
            finish()

        }
    }
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PasswordTypeActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Context
import android.content.Intent
import android.os.Bundle
import android.preference.PreferenceManager
import android.view.View
import android.widget.Button
import android.widget.ImageButton
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity


class PasswordTypeActivity : AppCompatActivity(), View.OnClickListener {

    /* codeString is the string in which the PIN entered by user is stored.*/
    private var codeString: String = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_password_type)


        /* Since we have to check the whether the entered
        *  password by user is correct or not, we need
        *  shared preference where we stored that.
        *  To retrieve data from shared preference the below code
        *  is executed.
        * */
        val sharedPref = getSharedPreferences("passPref", MODE_PRIVATE)
        val password = sharedPref.getString("password", "1234")


        val txtPass: TextView = findViewById(R.id.txtPass)

        txtPass.text = "" /*Emptied the textview to show the simultaneous
                            entering effect of all 4 digits of PIN */

        val btn0: Button = findViewById(R.id.btn0)
        val btn1:Button = findViewById(R.id.btn1)
        val btn2:Button = findViewById(R.id.btn2)
        val btn3:Button = findViewById(R.id.btn3)
        val btn4:Button = findViewById(R.id.btn4)
        val btn5:Button = findViewById(R.id.btn5)
        val btn6:Button = findViewById(R.id.btn6)
        val btn7:Button = findViewById(R.id.btn7)
        val btn8:Button = findViewById(R.id.btn8)
        val btn9:Button = findViewById(R.id.btn9)
        val btnErase: ImageButton = findViewById(R.id.btnErase)
        val btnCheck: ImageButton = findViewById(R.id.btnCheck)


        btn0.setOnClickListener(this)
        btn1.setOnClickListener(this)
        btn2.setOnClickListener(this)
        btn3.setOnClickListener(this)
        btn4.setOnClickListener(this)
        btn5.setOnClickListener(this)
        btn6.setOnClickListener(this)
        btn7.setOnClickListener(this)
        btn8.setOnClickListener(this)
        btn9.setOnClickListener(this)
        btnErase.setOnClickListener(this)



        btnCheck.setOnClickListener{

            /* btnCheck is called means iuser enter the desired PIN
             * now it's our turn to check it.
            * */

            codeString = txtPass.text.toString()

            if(codeString == password)
            {
                Toast.makeText(this, "Correct PIN Welcome!", Toast.LENGTH_SHORT).show()
                val intent = Intent(this,WelcomeActivity::class.java)
                startActivity(intent)
                finish()
            }else{

                Toast.makeText(this, "Wrong PIN please try again", Toast.LENGTH_SHORT).show()
                txtPass.text = ""
                codeString = txtPass.text.toString()
            }


        }


    }

    private fun setDotView() {

        /* this function will simply set the values
        *  which user is entering one by one as PIN in
        *  textView (txtPass) to give a PIN entering
        *  view.
        * */

        val txtPass: TextView = findViewById(R.id.txtPass)
        txtPass.text = codeString
    }

    override fun onClick(v: View?) {
        when (v!!.id) {
            R.id.btn0 -&amp;gt; codeString += "0"
            R.id.btn1 -&amp;gt; codeString += "1"
            R.id.btn2 -&amp;gt; codeString += "2"
            R.id.btn3 -&amp;gt; codeString += "3"
            R.id.btn4 -&amp;gt; codeString += "4"
            R.id.btn5 -&amp;gt; codeString += "5"
            R.id.btn6 -&amp;gt; codeString += "6"
            R.id.btn7 -&amp;gt; codeString += "7"
            R.id.btn8 -&amp;gt; codeString += "8"
            R.id.btn9 -&amp;gt; codeString += "9"
            R.id.btnErase -&amp;gt; {
                codeString = removeLastChar(codeString).toString()
            }
            else -&amp;gt; {
            }
        }
        setDotView()
    }


    private fun removeLastChar(s: String?): String? {

        /* the erase button will erase the
        *  the last entered value from the keyboard.
        *  The Erase button's working is followed in this function.
        * */
        return if (s == null || s.length == 0) {
            s
        } else s.substring(0, s.length - 1)
    }


}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WelcomeActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Toast

class WelcomeActivity : AppCompatActivity() {

   /* Here we used onRestart() callback
   *  because if user pushes the home button
   *  or opened any other application or just closed the app and 
   *  restart it again, the first session will expire and the app
   *  will be locked up again. Thus user have to enter the password 
   *  always when he/she stops and restart the app.
   * */

    override fun onRestart() {
        super.onRestart()
        val intent = Intent(this,PasswordTypeActivity::class.java)
        startActivity(intent)
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_welcome)
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  GitHub Repository
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fork the repository for better and easy understanding and for quick learning.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Siddharth-sing"&gt;
        Siddharth-sing
      &lt;/a&gt; / &lt;a href="https://github.com/Siddharth-sing/Material-UI-LockPIN-Demo"&gt;
        Material-UI-LockPIN-Demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writers-support"&gt;
  &lt;/a&gt;
  Writer's Support
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If you find the article useful show some ❤️ by staring some of my repositories and following me on dev.to and github.

&lt;p&gt;
&lt;a href="https://www.linkedin.com/in/siddharth-singh-baghel-912866190/"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imBRhTaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-0077B5%3Fstyle%3Dfor-the-badge%26logo%3Dlinkedin%26logoColor%3Dwhite"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Siddharth-sing"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pQJI-Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GitHub-100000%3Fstyle%3Dfor-the-badge%26logo%3Dgithub%26logoColor%3Dwhite"&gt;
&lt;/a&gt;
&lt;a href="https://dev.to/siddharthsing"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6XzdLtQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/dev.to-0A0A0A%3Fstyle%3Dfor-the-badge%26logo%3Ddev.to%26logoColor%3Dwhite"&gt;
&lt;/a&gt;

&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>beginners</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Too many commits, squash'em!!</title>
      <author>Tanishq Singla</author>
      <pubDate>Thu, 21 Oct 2021 20:24:40 +0000</pubDate>
      <link>https://dev.to/tanishqsingla/too-many-commits-squashem-k0o</link>
      <guid>https://dev.to/tanishqsingla/too-many-commits-squashem-k0o</guid>
      <description>&lt;p&gt;If you're someone like me who likes to commit every small change and end up having too many commits for a single feature and think "Wouldn't it be nice if you can merge some of those meaningless commits?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#squash-to-the-rescue"&gt;
  &lt;/a&gt;
  Squash to the rescue
&lt;/h2&gt;

&lt;p&gt;Turns out you can do just that in OG git. Let us look how to use &lt;code&gt;squash&lt;/code&gt;, for following the tutorial I've created a github repo, you can open the repo by clicking &lt;a href="https://github.com/TanishqSingla/squash-example"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fixing-those-commits"&gt;
  &lt;/a&gt;
  Fixing those commits
&lt;/h2&gt;

&lt;p&gt;Take a min and look at the commit section in the repo and check the content of those commits.&lt;br&gt;
If you're also weirded out by those awful commits then don't worry, we'll fix them together.&lt;/p&gt;

&lt;p&gt;First let's find the commits that are meaningless.&lt;br&gt;
The first one that I feel is meaningless is the 3rd commit form the start of branch, here we only change the title of the this can easily be merged with the boilerplate commit.&lt;/p&gt;

&lt;p&gt;In a terminal do &lt;code&gt;git rebase -i HEAD~5&lt;/code&gt;. This command will open the rebase command in interactive mode with the last 5 commits you've from the current commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pick b1b37b5 Added boiler plate code
pick 125e103 Changing title
pick c6c03ac Adding navbar list
pick 3816fa0 Adding Downloads in navbar list
pick 10534c0 Added Pricing section

...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see something like this in your text editor which you've chosen as default in git. You can do a bunch of stuff in here, commands for which will be available in the same.&lt;br&gt;
Now, what we do is change that &lt;code&gt;pick&lt;/code&gt; in our commit where we change our title to &lt;code&gt;squash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The end result should look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pick b1b37b5 Added boiler plate code
squash 125e103 Changing title
pick c6c03ac Adding navbar list
pick 3816fa0 Adding Downloads in navbar list
pick 10534c0 Added Pricing section
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Changing the &lt;code&gt;pick&lt;/code&gt; to &lt;code&gt;squash&lt;/code&gt; will basically merge the &lt;code&gt;Changing title&lt;/code&gt; commit with the &lt;code&gt;Added boiler plate code&lt;/code&gt; commit.&lt;/p&gt;

&lt;p&gt;Save the file and close it. &lt;/p&gt;

&lt;p&gt;Now you should see this message popping up in a file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This is a combination of 2 commits.
# This is the 1st commit message:

Added boiler plate code

# This is the commit message #2:

Changing title

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Fri Oct 22 01:02:46 2021 +0530
#
# interactive rebase in progress; onto 2814ed0
# Last commands done (2 commands done):
#    pick b1b37b5 Added boiler plate code
#    squash 125e103 Changing title
# Next commands to do (3 remaining commands):
#    pick c6c03ac Adding navbar list
#    pick 3816fa0 Adding Downloads in navbar list
# You are currently rebasing branch 'master' on '2814ed0'.
#
# Changes to be committed:
#   modified:   index.html
#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this file you can change the commit message for your final commit i.e commit formed after merging. As mentioned in the instructions, lines starting with &lt;code&gt;#&lt;/code&gt; are going to get ignored, so I am going to comment the &lt;code&gt;Changing title&lt;/code&gt; message and change the &lt;code&gt;Added boiler plate code&lt;/code&gt; to `Added boilerplate and changed title.&lt;/p&gt;

&lt;p&gt;Save and close the file and now do &lt;code&gt;git log&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tada!&lt;/strong&gt; our commits are merged into one and our changes look more meaningful.&lt;/p&gt;

&lt;p&gt;Now try doing the same for &lt;code&gt;Added downloads section&lt;/code&gt; and &lt;code&gt;Added Pricing section&lt;/code&gt; commits.&lt;/p&gt;

</description>
      <category>git</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Some Node/JS package best practices</title>
      <author>Anvil Engineering</author>
      <pubDate>Thu, 21 Oct 2021 20:20:33 +0000</pubDate>
      <link>https://dev.to/useanvil/some-nodejs-package-best-practices-1o59</link>
      <guid>https://dev.to/useanvil/some-nodejs-package-best-practices-1o59</guid>
      <description>&lt;p&gt;The Node/JS ecosystem is large (over 1.7mm packages on &lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt;) and evolving, and at Anvil, we work with Node.js quite a bit. We also like to create and contribute to open source Node/JS projects as well&lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt;. As a result, we've seen some good, bad, and ugly stuff out there. In this post (and its supporting &lt;a href="https://github.com/anvilco/best-practices-node"&gt;Github repo&lt;/a&gt;) I'm going to share with you some of the best practices we've learned along the way while building a very simple web server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nvm-node-version-manager"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nvm-sh/nvm#intro"&gt;NVM&lt;/a&gt; (Node Version Manager)
&lt;/h3&gt;

&lt;p&gt;Even if you're developing JS for the browser, a streamlined development process will probably involve using Node to do some tasks for you. Different projects may require different Node runtimes/versions to be built, and developers are probably working on several different projects on their local machines at a time that may require incompatible Node versions. What do you do if your system's Node version is incompatible with the requirements of the project you're working on? Enter: &lt;a href="https://github.com/nvm-sh/nvm#intro"&gt;NVM&lt;/a&gt;. NVM allows you to have different versions of Node on your machine, and to easily switch between versions as necessary. Additionally, by setting up &lt;a href="https://github.com/nvm-sh/nvm#deeper-shell-integration"&gt;shell integration&lt;/a&gt; and adding a &lt;a href="https://github.com/nvm-sh/nvm#nvmrc"&gt;&lt;code&gt;.nvmrc&lt;/code&gt;&lt;/a&gt; file to your project, your shell will automatically change to the Node version required by your project when you &lt;code&gt;cd&lt;/code&gt; into it. This is a must for any Node/JS developer's setup and projects. Note that the &lt;code&gt;.nvmrc&lt;/code&gt; file only specifies the Node version required to &lt;strong&gt;&lt;em&gt;develop&lt;/em&gt;&lt;/strong&gt; the project, but not necessarily to &lt;strong&gt;&lt;em&gt;use&lt;/em&gt;&lt;/strong&gt; the resulting package (more on that later).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-packagejson-endraw-file"&gt;
  &lt;/a&gt;
  The &lt;code&gt;package.json&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;Every Node/JS package starts with a &lt;code&gt;package.json&lt;/code&gt; file. I'm not going to cover all the ins and outs of that file (you can do that &lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json"&gt;here&lt;/a&gt;), but I'd like to touch on a few important items that may not be intuitive at first, or that can have a big impact on your development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#main"&gt;&lt;code&gt;main&lt;/code&gt;&lt;/a&gt;: specifies the path to module in your package whose exports will be used when your package is &lt;code&gt;require&lt;/code&gt;d.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#engines"&gt;&lt;code&gt;engines&lt;/code&gt;&lt;/a&gt;: allows you to specify the version(s) of Node that your package will work on.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#config"&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt;: an object you can place arbitrary key/value data into and use elsewhere in your project. More on that later.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#scripts"&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt;: an object where you can specify named commands to run via &lt;code&gt;yarn my-command&lt;/code&gt;. Keep in mind that some names are special and correspond to "lifecycle" events. Read &lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json"&gt;the docs&lt;/a&gt; to learn more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;package.json&lt;/code&gt; can also support some more arbitrary entries that other tools you may use are expecting—we'll touch on that a bit more later.&lt;/p&gt;

&lt;p&gt;One final thing about &lt;code&gt;package.json&lt;/code&gt;: when adding a dependency, it's important to consciously decide whether it should be added to the &lt;code&gt;dependencies&lt;/code&gt; or the &lt;code&gt;devDependencies&lt;/code&gt; area (and use the appropriate installation command). Packages that are needed for development purposes only, and are not needed by the code that will be run when the package is installed and consumed, should go into &lt;code&gt;devDependencies&lt;/code&gt; (rather than &lt;code&gt;dependencies&lt;/code&gt;). This way they won't be unnecessarily installed on the user's system when they install your package. You may have noticed that this project has several &lt;code&gt;devDependencies&lt;/code&gt;, but zero &lt;code&gt;dependencies&lt;/code&gt; as it uses nothing but core Node modules at runtime. Nice!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#environment-based-configuration-and-the-raw-env-endraw-file"&gt;
  &lt;/a&gt;
  Environment based configuration and the &lt;code&gt;.env&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;In keeping with the &lt;a href="https://www.useanvil.com/blog/engineering/introduction-twelve-factor-app"&gt;12 Factor App methodology&lt;/a&gt;, it's best that your app gets any configuration information it may need from the environment (e.g. &lt;code&gt;production&lt;/code&gt; vs &lt;code&gt;staging&lt;/code&gt;). Things that vary depending on the environment as well as sensitive things like API keys and DB credentials are great candidates for being provided via the environment. In Node, environment variables can be accessed via &lt;code&gt;process.env.&amp;lt;ENV_VAR_NAME_HERE&amp;gt;&lt;/code&gt;. This application has a &lt;code&gt;config.js&lt;/code&gt; file that centralizes and simplifies the resolution of these environment variables into more developer-friendly names and then exports them for consumption by the rest of the app. In production environments, there are myriad ways to populate the environment variables, so I will not go into them. However, for local development the usage of a &lt;code&gt;.env&lt;/code&gt; file along with the &lt;a href="https://www.npmjs.com/package/dotenv"&gt;&lt;code&gt;dotenv&lt;/code&gt;&lt;/a&gt; package is very common and easy for developers. This &lt;code&gt;.env&lt;/code&gt; file should &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; be checked into source control (more on this later), but a &lt;code&gt;.env-example&lt;/code&gt; file that contains fake values is a nice thing to provide to developers so they know where to get started. Because it does not contain any sensitive information, the &lt;code&gt;.env-example&lt;/code&gt; can be checked into source control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keeping-your-code-pretty-and-clean"&gt;
  &lt;/a&gt;
  Keeping your code pretty and clean
&lt;/h3&gt;

&lt;p&gt;All developers are different, and not all teams will use the same coding styles. In addition, sometimes code can have serious problems (such as syntax errors), minor problems (such as unused variables or unreachable paths) or nits (tabs instead of spaces—oh no, I didn't!) that you don't want getting commited. Keeping code clean and uniform—especially when working with a team—can be difficult, but fortunately tools like &lt;a href="https://prettier.io/docs/en/index.html"&gt;Prettier&lt;/a&gt; and &lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt; can help with all of that. Generally speaking, Prettier is concerned with formatting issues, while ESLint is concerned with errors, inefficiencies, and waste. ESLint is not only quite configurable, but also quite extensible: you can turn rules on or off, write your own rules, include someone else's shared set of rules, and more. Our very simple ESLint configuration is specified in the &lt;code&gt;.eslintrc.js&lt;/code&gt; file. Most IDEs will integrate with these tools and provide feedback to the developers, allowing them to correct the problems immediately. They also can fix many problems they encounter automatically, which is great.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#precommit-hooks"&gt;
  &lt;/a&gt;
  Pre-commit hooks
&lt;/h3&gt;

&lt;p&gt;Sometimes you'll want to run some commands before a developer can commit to your repository. Having Prettier and ESLint adjust and fix all JS files that have been staged for commit is a great example. This way, developers don't even have to remember to run the commands to fix and adjust things—it will happen automatically when they try to commit, and git will complain if something goes wrong. A popular way to set this up is by using &lt;a href="https://www.npmjs.com/package/lint-staged"&gt;&lt;code&gt;lint-staged&lt;/code&gt;&lt;/a&gt;. Once installed, I modified the &lt;code&gt;lint-staged&lt;/code&gt; entry in &lt;code&gt;package.json&lt;/code&gt; to run Prettier, followed by ESLint (we've found that Prettier sometimes undoes some of the things that ESLint does that we want, so it's important that we run them in that order).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#babel"&gt;
  &lt;/a&gt;
  &lt;a href="https://babeljs.io/docs/en/"&gt;Babel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As I mentioned in the beginning, Node/JS has been evolving rapidly. This quick pace of evolution means there are many Node (and browser) versions still in use that do not support the latest 🔥 hotness🔥 or even some features that have been around for a while. In order to take advantage of the latest language features while ensuring that your code will run on a reasonable amount of versions, you'll need to transpile it using &lt;a href="https://babeljs.io/docs/en/"&gt;Babel&lt;/a&gt;. Basically, Babel can rewrite parts of your code so that older runtimes can use them.&lt;/p&gt;

&lt;p&gt;How do you know which language features are not supported by the runtimes you want to support? Using the &lt;a href="https://babeljs.io/docs/en/babel-preset-env"&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt; plugin, you just need to tell Babel what "target" runtimes you want to support and it will figure out which parts of your code to rewrite and which to leave alone! 😌   In this example project, I've specified supported node &lt;code&gt;engines&lt;/code&gt; as &lt;code&gt;&amp;gt;=12&lt;/code&gt; in the &lt;code&gt;package.json&lt;/code&gt;, so I've put the Babel target of &lt;code&gt;12&lt;/code&gt; in the &lt;code&gt;config&lt;/code&gt; area of &lt;code&gt;package.json&lt;/code&gt; to keep things near each other and hopefully in sync. I've added a &lt;code&gt;babel.config.js&lt;/code&gt; file that will tell Babel to use the &lt;code&gt;preset-env&lt;/code&gt; plugin, and will grab the "target" from the config area of the &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Perhaps by now you've noticed that all the code for this package is in the &lt;code&gt;src/&lt;/code&gt; directory. We'll keep all the source code there, and we'll use a directory called &lt;code&gt;dist/&lt;/code&gt; for the output of Babel's transpilation. To tie that all together, I've added a few entries to the &lt;code&gt;scripts&lt;/code&gt; area of &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;clean&lt;/code&gt;: will delete the &lt;code&gt;dist/&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;build&lt;/code&gt;: will have Babel transpile everything in the &lt;code&gt;src/&lt;/code&gt; directory to the &lt;code&gt;dist/&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;clean:build&lt;/code&gt;: will run the &lt;code&gt;clean&lt;/code&gt; and then the &lt;code&gt;build&lt;/code&gt; commands&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;prepare&lt;/code&gt;: this is one of the special "lifecycle" event scripts that will be automatically run before your code is published, and it simply calls the &lt;code&gt;clean:build&lt;/code&gt; script&lt;sup id="fnref2"&gt;&lt;a href="#fn2"&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we're able to code using proposed, non-finalized ECMA standards, ESLint will get confused about some of the syntax it may see you developing in, so I've added &lt;a href="https://www.npmjs.com/package/@babel/eslint-parser"&gt;&lt;code&gt;@babel/eslint-parser&lt;/code&gt;&lt;/a&gt; to our &lt;code&gt;devDependencies&lt;/code&gt; and referenced it as the parser for ESLint to use in the &lt;code&gt;.eslintrc.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;One last thing about Babel I'd like to discuss is &lt;a href="https://babeljs.io/docs/en/babel-node"&gt;&lt;code&gt;@babel/node&lt;/code&gt;&lt;/a&gt;. This package installs a &lt;code&gt;babel-node&lt;/code&gt; command that will transpile the scripts you want to execute on the fly! It's a great tool for executing one-off scripts that you'd like to write using language features that are not compatible with your development environment, but that you don't want transpiled into the &lt;code&gt;dist/&lt;/code&gt; folder with the rest of your package's code. I've created an example script in &lt;code&gt;scripts/my-script.js&lt;/code&gt; that can be executed using &lt;code&gt;yarn my-script&lt;/code&gt;, but would error if you tried to run it directly in Node. While &lt;code&gt;babel-node&lt;/code&gt; is great for these one-off scenarios, running your code on production using &lt;code&gt;babel-node&lt;/code&gt; is &lt;a href="https://babeljs.io/docs/en/babel-node#not-meant-for-production-use"&gt;not recommended&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodemon"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/remy/nodemon"&gt;Nodemon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;While developing your code, you'll want to verify the changes that you're making and make sure they're working properly. Shutting down and restarting this project's web server each time you make changes would be very time consuming, but fortunately there's &lt;a href="https://github.com/remy/nodemon"&gt;Nodemon&lt;/a&gt;. Nodemon allows you to execute a command (like starting your app), but when it detects changes to files or directories you specify, it will restart that command. This way the effect of your changes can quickly and easily be verified. I've added a script entry in &lt;code&gt;package.json&lt;/code&gt; called &lt;code&gt;develop&lt;/code&gt; that will (1) transpile the source code (2) start the server and (3) watch for changes to code that could impact the application. When any such changes occur, those steps will be repeated automatically. Sweet! Additionally, Nodemon is configurable so be sure to check out the documentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h3&gt;

&lt;p&gt;Unless your project is doing something extremely trivial and straightforward, you'll probably want to develop a suite of tests to make sure that your code is working as expected, and that it stays that way. I'm not going to get into test frameworks, philosophies, or specifics (perhaps another blog post would be good for that!), but I do have one big tip:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;While you're writing tests, fixing tests, or fixing code that breaks tests, it's great to leverage Nodemon to re-run your tests (or just the specific tests you're working on) with every code change. I've added a &lt;code&gt;test:watch&lt;/code&gt; script to &lt;code&gt;package.json&lt;/code&gt; for this purpose.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-gitignore-endraw-file"&gt;
  &lt;/a&gt;
  The &lt;a href="https://git-scm.com/docs/gitignore"&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt; file
&lt;/h3&gt;

&lt;p&gt;Not all the code and files that will end up in your local project directory should be committed to source control. For example, the &lt;code&gt;node_modules&lt;/code&gt; directory should not be committed since that's something that will be built by &lt;code&gt;yarn&lt;/code&gt;/&lt;code&gt;npm&lt;/code&gt; using the &lt;code&gt;package.json&lt;/code&gt; and lockfiles. Also, in our specific case, the &lt;code&gt;dist/&lt;/code&gt; folder should not be committed, since it's a byproduct/derivative of transpiling the &lt;code&gt;src/&lt;/code&gt; directory, where the actual code changes are taking place. Also, the &lt;code&gt;.env&lt;/code&gt; file is very likely to have sensitive stuff and we all know that you should never check-in sensitive information to source control, right? 😉 Patterns of things to be ignored by git can be specified in the &lt;a href="https://git-scm.com/docs/gitignore"&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt; file. In general, it's also good practice to review the files that will be added by your commits and give a quick thought as to whether they should be ignored or not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-npmignore-endraw-file"&gt;
  &lt;/a&gt;
  The &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/developers#keeping-files-out-of-your-package"&gt;&lt;code&gt;.npmignore&lt;/code&gt;&lt;/a&gt; file
&lt;/h3&gt;

&lt;p&gt;Similar to &lt;code&gt;.gitignore&lt;/code&gt;, if you're publishing your package to NPM you can leverage a &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/developers#keeping-files-out-of-your-package"&gt;&lt;code&gt;.npmignore&lt;/code&gt;&lt;/a&gt; file to control which files will be included in the tarball that users will download from NPM when using your package. If you don't add a &lt;code&gt;.npmignore&lt;/code&gt; file, the &lt;code&gt;.gitignore&lt;/code&gt; file will be used. This is bad for a few reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We've told git to ignore the &lt;code&gt;dist/&lt;/code&gt; directory, which actually has the code we want users to run!&lt;/li&gt;
&lt;li&gt;A bunch of files that are irrelevant to the usage of our package will be included: the &lt;code&gt;src/&lt;/code&gt; directory, the &lt;code&gt;scripts/&lt;/code&gt; directory, the &lt;code&gt;test/&lt;/code&gt; directory, various development configuration files etc.
For these reasons, I've found it beneficial to create a &lt;code&gt;.npmignore&lt;/code&gt; file that explicitly ignores everything, but then adds exceptions for the &lt;code&gt;dist/&lt;/code&gt; directory and a few other files that I actually want to end up on end-users' installations. While several necessary files (like &lt;code&gt;package.json&lt;/code&gt;) are included no matter what you put in your &lt;code&gt;.npmignore&lt;/code&gt;, you should still be careful with how you use it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;This project now has some great attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;developers should not have Node compatibility issues&lt;/li&gt;
&lt;li&gt;a clean &lt;code&gt;package.json&lt;/code&gt;, with as few &lt;code&gt;dependencies&lt;/code&gt; as possible and some helpful script entries&lt;/li&gt;
&lt;li&gt;a pattern where configuration is loaded from the Environment at runtime in a straightforward manner&lt;/li&gt;
&lt;li&gt;code that will remain consistently formatted and free of lint&lt;/li&gt;
&lt;li&gt;development can be done using advanced language features, but boiled down to support older runtimes&lt;/li&gt;
&lt;li&gt;the ability to rapidly view or test changes to code while developing&lt;/li&gt;
&lt;li&gt;a clean git repository that does not contain unnecessary or sensitive files&lt;/li&gt;
&lt;li&gt;a clean, minimal package when uploading to NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are certainly more things that could be done (or done differently), but this will hopefully be great food for thought as a starting point for those looking to create (or refactor) their Node/JS projects. Happy coding!&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;For example: &lt;a href="https://github.com/anvilco/spectaql"&gt;SpectaQL&lt;/a&gt;, &lt;a href="https://github.com/anvilco/node-anvil"&gt;Node Anvil&lt;/a&gt;, and &lt;a href="https://github.com/anvilco/python-anvil"&gt;Python Anvil&lt;/a&gt;. Check out more at our &lt;a href="https://github.com/anvilco/"&gt;Github page&lt;/a&gt;. &lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;It will also call &lt;code&gt;husky install&lt;/code&gt;, which is part of the pre-commit hooks stuff. &lt;a href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Know &amp; Create K8s Objects - Part 1 [Pods and Replicasets]</title>
      <author>Nithyalakshmi Kamalakkannan</author>
      <pubDate>Thu, 21 Oct 2021 20:07:26 +0000</pubDate>
      <link>https://dev.to/ktnl/know-create-k8s-objects-part-1-pods-and-replicasets-2n0c</link>
      <guid>https://dev.to/ktnl/know-create-k8s-objects-part-1-pods-and-replicasets-2n0c</guid>
      <description>&lt;p&gt;The Kubernetes objects are the persistent entities of the K8s system that collectively represent the state of the system. An object includes two attributes spec and status. Spec is the desired or requested state while status is the current state of the object. These object types are also referred to as API resources in the K8s ecosystem.&lt;/p&gt;

&lt;p&gt;In this blog series, we will understand the concept behind a few K8s objects and create them. We can create K8s objects by using Yaml files and Kubectl (Kubernetes command line interface is used to communicate with the K8s cluster). You need to setup Kubernetes (use minikube if you are a newbie to K8s ecosystem) and install Kubectl in order to create K8s objects in your machine.&lt;/p&gt;

&lt;p&gt;Let's begin!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intro to K8s object - Yaml file:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The resource specifications are provided in the Yaml descriptor file and Kubectl uses this file to create the required K8s object with given specifications. &lt;/p&gt;

&lt;p&gt;Let’s understand the four basic / widely used fields in the Yaml descriptor file used to create K8s objects.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apiVersion&lt;/code&gt; -&amp;gt; This is the version of the Kubernetes we are using to create the Pod. We need to make sure that the object we want to create is supported in the given version. &lt;br&gt;
Example: v1, apps/v1&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Kind&lt;/code&gt; -&amp;gt; The object / resource type we are intending to create.&lt;br&gt;
Example: Pod, ReplicaSet, Deployment&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Metadata&lt;/code&gt; -&amp;gt; It is the data about the object.&lt;br&gt;
Example:&lt;br&gt;
name -&amp;gt; Takes a string value that indicates the name of the object&lt;br&gt;
labels -&amp;gt; It is a list of key value pairs. You can add your custom keys and values here. We will see how this is used later in this series of blogs. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Spec&lt;/code&gt; -&amp;gt; This field is used to describe what exactly you want Kubernetes to build. The values/structure of this section varies from object to object.&lt;br&gt;
Example: &lt;br&gt;
For Pod objects, this section will contain container specifications&lt;br&gt;
For Service objects, this section will contain Pod selector specifications &lt;/p&gt;

&lt;p&gt;Given that we know how to create yaml descriptor files using the above fields, lets understand and create a few K8s objects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pod&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The smallest deployable unit that can be created and managed in the K8s architecture is Pod. It is a collection of one or more containers, along with volume storage, network stack and namespace.&lt;/p&gt;

&lt;p&gt;In Microservices architecture, every service can be analogized to a single Pod with multiple containers. Yes, even though a single container is sufficient to run your application, Pod which is a collection of containers is visualized to be a single application / service. &lt;/p&gt;

&lt;p&gt;This is because all the containers in the Pod are relatively tightly coupled. The other containers act as helper applications to support the primary application. For example, the helper applications can be data pullers, data pushers or proxies. This kind of pattern where one container is the main application and another container supports/improves the main application functioning is called the &lt;strong&gt;Sidecar patter&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Scalability Factor&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Say you want to scale out instances of your containerised application, the right way is to increase the number of Pods and not the number of containers inside the same Pod.&lt;/li&gt;
&lt;li&gt;You need to 'replicate' the Pod - with the same number of containers to achieve scalability in K8s world.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Networking&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;There are two types of communication in K8s involving Pods, Intra-Pod and Inter-Pod communication.&lt;/li&gt;
&lt;li&gt;Intra-Pod communication is where two or more containers within the same Pod communicate with each other. These containers share the same network namespace via localhost through Port binding for each container.&lt;/li&gt;
&lt;li&gt;Each Pod is assigned a  cluster-private IP address. Hence the Pods use assigned IP address to communicate with other Pods within the same K8s Cluster private network. This is termed as Inter-Pod communication.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Resilience &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;When the process running in your container crashes for some reason, K8s assures Pod resilience of starting it again. &lt;/li&gt;
&lt;li&gt;On root process crash, the container status will go into 'Error' state. K8s will restart the container in the same Pod. It would come back into 'Running' state with restart count incremented.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Let's see it in action&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enough of theory, Let’s look at creating a Pod.&lt;br&gt;
In order to create a Pod object, we need a Yaml file similar to the one given below,&lt;/p&gt;

&lt;p&gt;pod-demo.yaml&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Mytlz2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il14t8ypt2cw2z5njm25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Mytlz2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/il14t8ypt2cw2z5njm25.png" alt="Pod demo configuration yaml file"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Kubectl apply -f pod-demo.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Executing the above command will create a Pod named frontend-pod. It will be created with the ‘tier’ label with the value as ‘front-tier’. This will wrap a container which uses nginx image and has an environment variable with name as some-key and value as some-value&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This command will show the Pods running in the default namespace where you can find frontend-pod.&lt;br&gt;
or just get your pod by suffixing your Pod name&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods frontend-pod
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To get detailed report, you can suffix &lt;code&gt;-o wide&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl get pods frontend-pod -o wide
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdROtGLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yhotzu3dfe4gfonn6fnj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdROtGLS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yhotzu3dfe4gfonn6fnj.png" alt="Kubectl commands"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having known about Pods now, lets check out Replicaset! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ReplicaSet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"Helps in deploying scalable applications"&lt;/p&gt;

&lt;p&gt;This is one of the promises K8s offers you. But to scale Pods... Should we keep creating / deleting the Pods manually ?&lt;br&gt;
And what if one of the running Pod goes down ? Should it be brought back manually ?&lt;br&gt;
Of course, Not!&lt;/p&gt;

&lt;p&gt;To enhance the capability of Pod by adding scalability and reliability is our next K8s object. Lets explore Replicaset!&lt;/p&gt;

&lt;p&gt;Replicaset is an abstraction over Pod, which ensures the given number of Pods are always up and running.&lt;/p&gt;

&lt;p&gt;Sounds like some Magic, right? :) &lt;br&gt;
Well it does it with the help of Reconciliation control loop.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reconciliation control loop &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;The first phase is "Observe". K8s keeps observing two states.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;=&amp;gt; Desired state -&amp;gt; State provided in the request.&lt;br&gt;
=&amp;gt; Current state -&amp;gt; State of the K8s cluster&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next it "detects" out the difference between both the states.&lt;/li&gt;
&lt;li&gt;Then, takes necessary steps to "adjust" the difference. It can be removing an extra Pod or adding another Pod in case of failure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/lXV4NHwDxi3cSggJvR/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/lXV4NHwDxi3cSggJvR/giphy.gif" alt="Reconciliation control loop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And as the name suggests, this keeps going in loops.&lt;br&gt;
For explanation on how K8s internally does this, please checkout the K8s architecture blog. &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ktnl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6CeIZSD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FFXL9WQa--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/697502/7f8f6c78-540c-4d56-bbd3-a1b26f7d271c.png" alt="ktnl"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ktnl/get-introduced-to-kubernetes-architecture-14fo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Get introduced to Kubernetes Architecture&lt;/h2&gt;
      &lt;h3&gt;Nithyalakshmi Kamalakkannan ・ Oct 10 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#kubernetes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;Well, how replicaset is able to track its Pods to arrive at a count ? Does it have any hash Key / identifier based on Pod configuration. Relax, it's not be that complex 🧘‍♀️. It uses Labels and Selectors.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Labels and Selectors&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We already know what are labels, the metadata section of the Pod Yaml file offers us to define our custom labels. Based on these labels, the Pods are grouped. But for attaching this group to a replicaset, we need Selectors.&lt;/p&gt;

&lt;p&gt;Selectors are again Key Value pairs similar to Labels, that are defined at replicaset level.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let's see it in action&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A typical replicaset yaml file looks like this,&lt;/p&gt;

&lt;p&gt;rs-demo.yaml&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KzU3F_i_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx6x2wr80mjv1ubq31fz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KzU3F_i_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx6x2wr80mjv1ubq31fz.png" alt="Replicaset demo configuration yaml file"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As highlighted, the Pod configuration is given under template - This is like just copy pasting metadata and spec section of the Pod yaml to template section of replicaset yaml.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The replica attribute in Spec section gives the number of Pods the replicaset should create and manage.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The selector section's matchLabels and the container template labels should match.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl apply -f rs-demo.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a replicaset which is responsible for maintaining the 3 Pods with the afore mentioned spec configured.&lt;/p&gt;

&lt;p&gt;To checkout the replicaset that got created use,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Kubectl get replicaset 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Kubectl get rs 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;rs is the short form for replicaset. &lt;code&gt;replicaset&lt;/code&gt; and &lt;code&gt;rs&lt;/code&gt; can be used interchangeably for Kubectl commands.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Power of &lt;code&gt;rs&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;When a Pod managed by replicaset goes down 💥 ...
Lets delete one of the Pods created by the replicaset above.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl delete pod {pod_name}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In matter of few seconds you will see a new Pod with same configuration getting spun up.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E2bUHJgS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ybdedkd3ubnqppvi0pm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E2bUHJgS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ybdedkd3ubnqppvi0pm.png" alt="Deleting a Pod managed by Replicaset"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dare to (you can't 😛) create an extra copy of Pods managed by replicaset
Now, lets create another pod with same label manually.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;same-pod-config-demo.yaml&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qgYDRnuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdwotae92ya0u65ii1ru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qgYDRnuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mdwotae92ya0u65ii1ru.png" alt="same-pod-config-demo yaml file"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As guessed K8s will delete the latest or 4th or the extra Pod in few seconds to ensure only 3 (desired count) Pods are running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DRJLecEh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crglrpppf1zpouxcw7bc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DRJLecEh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crglrpppf1zpouxcw7bc.png" alt="Creating extra Pod with same label"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scale in / out your Pods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to scale in / out your Pod count, you can modify the replicaset yaml and apply the change.&lt;/p&gt;

&lt;p&gt;Say you need 4 Pods, just change &lt;code&gt;replicas&lt;/code&gt; attribute in replicaset yaml to 4 from 3.&lt;/p&gt;

&lt;p&gt;And apply the change with the same command.&lt;/p&gt;

&lt;p&gt;You will notice that a new Pod with the same configuration will be started.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uUKiDI2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsx98b1rb3j52ov34ux1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uUKiDI2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsx98b1rb3j52ov34ux1.png" alt="Scale out Pods"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Same works if you want to scale in Pods as well.&lt;/p&gt;

&lt;p&gt;And...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Get rid of it, at ease!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to delete all the Pods managed by this replicaset... don't worry you are just one command away.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1X4Xaz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4b4n2dgmajv50ozglkm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1X4Xaz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4b4n2dgmajv50ozglkm.png" alt="Delete rs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you enjoyed knowing Pod and Replicaset concepts and ready to practise some in real projects. &lt;/p&gt;

&lt;p&gt;Stay tuned to know about other K8s Objects in the upcoming blogs of the same series.&lt;/p&gt;

&lt;p&gt;Happy learning!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>beginners</category>
      <category>pods</category>
      <category>replicasets</category>
    </item>
    <item>
      <title>The trick to making console.log play nice with complex objects</title>
      <author>Paul Oms</author>
      <pubDate>Thu, 21 Oct 2021 20:03:24 +0000</pubDate>
      <link>https://dev.to/ehlo_250/the-trick-to-making-consolelog-play-nice-with-complex-objects-gma</link>
      <guid>https://dev.to/ehlo_250/the-trick-to-making-consolelog-play-nice-with-complex-objects-gma</guid>
      <description>&lt;p&gt;&lt;code&gt;console.log&lt;/code&gt; is useful in a lot of situations (although there are &lt;a href="https://nodejs.org/en/docs/guides/debugging-getting-started/"&gt;usually better ways to debug&lt;/a&gt; if that's what you're doing).&lt;/p&gt;

&lt;p&gt;In the browser &lt;code&gt;console.log&lt;/code&gt; works well with objects, you can drill down as much as you need. But in Node.js, when you look at the output of a nested object, you'll often see this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}}}}})&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;code&gt;d: {}&lt;/code&gt; was replaced with &lt;code&gt;[Object]&lt;/code&gt;. But why?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's because the command line / terminal doesn't have a nice UI for drilling down, so Node attempts to print up to three levels deep. Beyond three levels it just prints &lt;code&gt;[Object]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is controlled by a variable in the node 'util' module, called &lt;code&gt;depth&lt;/code&gt;, which defaults to &lt;code&gt;2&lt;/code&gt;. You can set it yourself here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;util&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;inspect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultOptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;depth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// top level only, e.g.:&lt;/span&gt;
&lt;span class="c1"&gt;// { a: [Object] }&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;util&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;inspect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defaultOptions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;depth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// print everything, e.g.: &lt;/span&gt;
&lt;span class="c1"&gt;// {&lt;/span&gt;
&lt;span class="c1"&gt;//  a: { b: { c: { d: {} } } }&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's not a great idea to change an underlying variable, as it might come back to bite later. So a cleaner way is to convert the JSON object to a &lt;code&gt;string&lt;/code&gt; and log that. We can use node's built in &lt;code&gt;JSON&lt;/code&gt; class and the &lt;code&gt;stringify&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;complexObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}}}}}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;complexObject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;// {&lt;/span&gt;
&lt;span class="c1"&gt;//   "a": {&lt;/span&gt;
&lt;span class="c1"&gt;//     "b": {&lt;/span&gt;
&lt;span class="c1"&gt;//       "c": {&lt;/span&gt;
&lt;span class="c1"&gt;//         "d": {}&lt;/span&gt;
&lt;span class="c1"&gt;//       }&lt;/span&gt;
&lt;span class="c1"&gt;//     }&lt;/span&gt;
&lt;span class="c1"&gt;//   }&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note that the 3rd parameter of &lt;code&gt;JSON.stringify&lt;/code&gt;, Number &lt;code&gt;2&lt;/code&gt;, controls the number of spaces of indentation, and the 2nd parameter can be used to filter or adjust the objects and properties shown.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now you can really see what's in those deep Objects.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Orienteering in the Time of Remote Work</title>
      <author>Jeremy Friesen</author>
      <pubDate>Thu, 21 Oct 2021 20:02:42 +0000</pubDate>
      <link>https://dev.to/jeremyf/orienteering-in-the-time-of-remote-work-5hce</link>
      <guid>https://dev.to/jeremyf/orienteering-in-the-time-of-remote-work-5hce</guid>
      <description>&lt;h2&gt;
  &lt;a href="#or-navigating-without-one-of-your-senses"&gt;
  &lt;/a&gt;
  Or Navigating without One of Your Senses
&lt;/h2&gt;

&lt;p&gt;On &lt;time title="2021-10-04"&gt;October 4&lt;sup&gt;th&lt;/sup&gt;&lt;/time&gt; I joined &lt;a href="https://forem.com"&gt;Forem&lt;/a&gt; as the Lead Engineer of Context Experience. My duties involve contributing code, managing developers, and managing the deliverables of the content experience pod.&lt;/p&gt;

&lt;p&gt;&lt;time title="2021-10-19"&gt;Tuesday&lt;/time&gt;, I called my mom and we got to talking. Just hearing her voice helped me immediately develop an analogy to explain the condition I was feeling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sharing-a-bit-about-my-mom"&gt;
  &lt;/a&gt;
  Sharing a Bit about My Mom
&lt;/h2&gt;

&lt;p&gt;My mom has a degenerative eye disease, resulting in progressive deterioration of her vision. These days she is almost completely blind.&lt;/p&gt;

&lt;p&gt;&lt;time title="2002"&gt;About twenty years ago&lt;/time&gt;, she moved to Vietnam. There she worked as a disabilities advocate, helped develop social work programs at universities, and most recently helped address the systemic problem of infant onset blindness.&lt;/p&gt;

&lt;p&gt;&lt;time title="2019-02"&gt;A little over two years ago&lt;/time&gt; she moved back to Indiana. She got herself a small apartment near a grocery store. She’s maintained her independence: going for walks, buy groceries, and indulging in a chai latte.&lt;small&gt; &lt;br&gt;
Though I sometimes go to the grocery store on her behalf; and always pick her up a chai latte.&lt;br&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;time title="2021"&gt;This year&lt;/time&gt; she’s moving to a retirement community. She’ll still maintain her independence, but will now have a much larger support network.&lt;/p&gt;

&lt;p&gt;One thing she’s done has been to practice orienting to her soon to be new home. For her to make sense of space requires an approach different from what I, her sighted son, would take.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remote-work-is-a-bit-like-losing-a-sense"&gt;
  &lt;/a&gt;
  Remote Work is a Bit Like Losing a Sense
&lt;/h2&gt;

&lt;p&gt;Just hearing my mom’s voice helped me develop an analogy to what I’ve been experiencing in beginning my work at a fully remote company. It is kind of like I’ve moved somewhere but don’t have access to one of my senses to help me orient and navigate.&lt;/p&gt;

&lt;p&gt;At all of the other places that I’ve started work, my first day always involved sitting down at a desk amidst the desks of other coworkers. Maybe the team would take me out for dinner.&lt;/p&gt;

&lt;p&gt;If I noticed a team member getting up with their laptop (or in the early days a pad of paper), I could take note. Maybe they were going to a meeting. I wonder what was that meeting? Was it something that might be relevant?&lt;/p&gt;

&lt;p&gt;Or two other people might be standing up at their cubicles and quietly talking to each other. It’s almost impossible not to notice. And if I stood up, they might turn and greet me or simply continue their private conversation.&lt;/p&gt;

&lt;p&gt;So now, going to an all remote and asynchronous organization, I have the feeling of missing one of my senses: the “Office-sense” skill if you will. Fortunately, my team members at &lt;a href="https://forem.com"&gt;Forem&lt;/a&gt; are lots of things to accommodate my lost of “Office-sense.”&lt;/p&gt;

&lt;p&gt;There’s extensive documentation and lots of wayfinding tools. There wonderful people reaching out to check in and introduce themselves and schedule Zoom time with me.&lt;small&gt; &lt;br&gt;
If you’re going to Zoom a lot, please turn off your self-view. Trust me. It will improve your experience. Even though I like staring at myself talk, I’d rather look at the person speaking without distraction of that stranger I only ever see in mirrors.&lt;br&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I’m closing in on my second week.&lt;small&gt; &lt;br&gt;
I took a week of vacation last week.&lt;br&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;In drawing forth this analogy, I’m also trying to observe what we might improve or refine. And there’s nuance. As a manager, there’s even more context to absorb than were I a contributor.&lt;/p&gt;

&lt;p&gt;I want to be mindful in my observations and contextualize them to my experience and not accidentally spark a policy/procedure change that addresses one person’s experience. But also not discredit it nor suck it up.&lt;/p&gt;

&lt;p&gt;Having long walked with my mom holding to my elbow, I’m always looking out for those bumps in the pavement to help guide her around. As I continue my on-boarding, and shift towards contributing I’m trying to take notes, submit recommendations for changes, and marveling at how well the team at Forem is doing to make me feel welcome and helping to keep the &lt;em&gt;dis&lt;/em&gt; out of &lt;em&gt;orientation&lt;/em&gt;.&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>career</category>
      <category>remote</category>
    </item>
    <item>
      <title>Send private message in chat (Telegram Bot)</title>
      <author>Lucifer25x</author>
      <pubDate>Thu, 21 Oct 2021 20:00:19 +0000</pubDate>
      <link>https://dev.to/lucifer25x/send-private-message-in-chat-telegram-bot-158b</link>
      <guid>https://dev.to/lucifer25x/send-private-message-in-chat-telegram-bot-158b</guid>
      <description>&lt;p&gt;Github Url: &lt;a href="https://github.com/Lucifer25x/secureMessage"&gt;https://github.com/Lucifer25x/secureMessage&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/for @uname=username content=Some Text
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-your-own-bot"&gt;
  &lt;/a&gt;
  Create your own bot:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Clone repository:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;https://github.com/Lucifer25x/secureMessage.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install dependencies:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create &lt;code&gt;.env&lt;/code&gt; file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch&lt;/span&gt; .env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Paste your bot token to &lt;code&gt;.env&lt;/code&gt; file like this:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TOKEN=your_token
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Start project
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>node</category>
      <category>opensource</category>
      <category>github</category>
    </item>
  </channel>
</rss>
