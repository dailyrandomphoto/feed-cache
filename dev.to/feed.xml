<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Idiots And Maniacs </title>
      <author>Adam Gordon Bell</author>
      <pubDate>Wed, 05 Jan 2022 20:12:21 +0000</pubDate>
      <link>https://dev.to/adamgordonbell/idiots-and-maniacs-nmb</link>
      <guid>https://dev.to/adamgordonbell/idiots-and-maniacs-nmb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#observability"&gt;
  &lt;/a&gt;
  Observability
&lt;/h2&gt;

&lt;p&gt;If you do software-as-a-service development and you have paying customers, you at some point learn about the need for operational monitoring and observability. Personally, I went through a process something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Service has some basic &lt;a href="//earthly.dev/blog/understanding-docker-logging-and-log-files"&gt;logging&lt;/a&gt; and an uptime alert.&lt;/li&gt;
&lt;li&gt;Service has a health-check endpoint, is deployed in triplicate behind a load balancer.&lt;/li&gt;
&lt;li&gt;Logs are real-time shipped to Splunk / ELK Stack.&lt;/li&gt;
&lt;li&gt;Metrics set up in Datadog / Prometheus with paging.&lt;/li&gt;
&lt;li&gt;Distributed Tracing set up for debugging across services.&lt;/li&gt;
&lt;li&gt;And so on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Each step requires more work to set up and has some additional benefits. I moved through each step by necessity as my service handled more requests and became more important to customers.&lt;/p&gt;

&lt;p&gt;If you had shown step-1-me what a simple REST service looks like in step 5, I would have been shocked. The metrics counters and distributed tracing spans, and various operational concerns make the service more complex. I would have thought that whoever wrote the service was obsessed with operational issues, to the detriment of solving the problems at hand. I would have thought the service author was an observability maniac.&lt;/p&gt;

&lt;p&gt;On the other hand, if step-5-me were to get paged because a service written by step-1-me was down, he would not be happy. He would have a hard time figuring out what was wrong, and he'd be pretty sure the service author was an idiot who had never been paged in the middle of the night.&lt;/p&gt;

&lt;p&gt;It reminds me a lot of driving when it first snows here in Peterborough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#driving"&gt;
  &lt;/a&gt;
  Driving
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hbppeKIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/generated/assets/images/idiots-and-maniacs/9580-800-b155e3159.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hbppeKIW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/generated/assets/images/idiots-and-maniacs/9580-800-b155e3159.webp" alt="Driving in the snow" width="800" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the winter, in Peterborough, we get snow. It's just a fact of life, and people learn how to drive in snowy conditions. But on the first substantial snowfall of the year, people struggle to remember how to drive.&lt;/p&gt;

&lt;p&gt;Some will drive way below the speed limit and slow down traffic for everyone. They are idiots in the snow. Others get frustrated by the slow drivers and go too fast for the road conditions. Don't they know there is snow on the road?&lt;/p&gt;

&lt;p&gt;Everyone driving slower than me is an idiot, but everyone going faster than me is a maniac.&lt;/p&gt;

&lt;p&gt;So it is with software development. Everyone who takes an idea further than I have is a maniac, and people who haven't taken it as far as me are idiots.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h2&gt;

&lt;p&gt;There was a time when I thought all code should have 80% unit test code coverage as a minimum. Anything less was practically unethical, and if you didn't think so, then you hadn't read Clean Code™️ enough times.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_I0fYyxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/generated/assets/images/idiots-and-maniacs/9770-500-410f473a4.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_I0fYyxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://earthly.dev/blog/generated/assets/images/idiots-and-maniacs/9770-500-410f473a4.webp" alt="SQLite" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the other hand, Richard Hipp – who tests to 100% code coverage at the machine code level, covering every branch by running billions of tests each release&lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt; – is a testing maniac.&lt;/p&gt;

&lt;p&gt;I hope you see where I'm going. This idiot to maniac gradient feels right, but it makes no sense&lt;sup id="fnref2"&gt;&lt;a href="#fn2"&gt;2&lt;/a&gt;&lt;/sup&gt;. How can I be the only the person driving the right speed? Wherever you find yourself along the spectrum is more a reflection of the context in which you work than anything else.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-examples"&gt;
  &lt;/a&gt;
  More Examples
&lt;/h2&gt;

&lt;p&gt;Here are some made-up and exaggerated examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Typescript Developer:&lt;/strong&gt; JavaScript developers are &lt;strong&gt;idiots&lt;/strong&gt;. Don't they know how many bugs the type system could have caught for them.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Typescript Developer:&lt;/strong&gt; Elm developers are obsessed with types. They are &lt;strong&gt;maniacs&lt;/strong&gt; about using types to catch things at compile time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Go Developer:&lt;/strong&gt; The JVM is such a heavyweight runtime and uses so much memory.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Go Developer:&lt;/strong&gt; Rust is so complex! Who wants to manage memory manually. Use a GC, you &lt;strong&gt;maniacs&lt;/strong&gt;!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kotlin Developer:&lt;/strong&gt; Java is so verbose and ugly. Welcome to 2021. Kotlin has a lot of sugar and type improvements that make writing correct code simpler.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kotlin Developer:&lt;/strong&gt; Scala is for &lt;strong&gt;maniacs&lt;/strong&gt;. There is so much syntactic sugar and type stuff that it's not worth learning about.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm not trying to pick on any of these languages - Typescript, Go, and Kotlin are exceptionally well suited to their niche. But contexts vary&lt;sup id="fnref3"&gt;&lt;a href="#fn3"&gt;3&lt;/a&gt;&lt;/sup&gt;, and it takes mental effort to see that people making other trade-offs sometimes have good reasons for it.&lt;/p&gt;

&lt;p&gt;That doesn't mean that other people are never wrong, though. People choose the wrong tool for the job all the time. For example, if I were doing SQLite's level of testing for a low-reliability, low-traffic, state-less web service when a couple of integration tests would do, then that'd be a mistake, but you'd have to know the context to make that call.&lt;/p&gt;

&lt;p&gt;What do you think? What are you a maniac about? &lt;/p&gt;

&lt;p&gt;I'm a maniac about builds. This article was originally published on &lt;a href="//earthly.dev"&gt;earthly.dev&lt;/a&gt; where we make pretty cool build stuff.&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;Richard is the creator of SQLite. See my &lt;a href="https://corecursive.com/066-sqlite-with-richard-hipp/#billions-of-tests"&gt;interview&lt;/a&gt; with him for a discussion of his testing approach. &lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;&lt;strong&gt;Article Update:&lt;/strong&gt; Apparently I've unintentionally stolen this idiot to maniac spectrum idea from &lt;a href="https://www.youtube.com/watch?v=XWPCE2tTLZQ"&gt;George Carlin&lt;/a&gt;. Thanks to tjones21xx on Reddit for pointing this out. All credit for this idea goes to Carlin. &lt;a href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;Personal and team familiarity can also be part of the context. PHP may not seem to be the best choice for building a command-line tool, but if it's a small tool used by a team of PHP developers, then it might be the best choice. &lt;a href="#fnref3"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Adding a discord server to Easy UI</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Wed, 05 Jan 2022 20:01:25 +0000</pubDate>
      <link>https://dev.to/sidcraftscode/adding-a-discord-server-to-easy-ui-5al8</link>
      <guid>https://dev.to/sidcraftscode/adding-a-discord-server-to-easy-ui-5al8</guid>
      <description>&lt;p&gt;Hey all! We just launched a discord server which is a more open place to chat about frontend development. The Easy UI forem isn't going anywhere, but if you're looking for somewhere more personal to chat, feel free to join!&lt;/p&gt;

&lt;p&gt;→ &lt;a href="https://discord.gg/Qq4aU2EMm9"&gt;https://discord.gg/Qq4aU2EMm9&lt;/a&gt;&lt;br&gt;
﻿&lt;/p&gt;

</description>
      <category>discord</category>
      <category>webdev</category>
      <category>easyui</category>
      <category>ui</category>
    </item>
    <item>
      <title>My thoughts on working and studying full time
</title>
      <author>Fernando Cutire</author>
      <pubDate>Wed, 05 Jan 2022 19:01:56 +0000</pubDate>
      <link>https://dev.to/fernandocutire/my-thoughts-on-working-and-studying-full-time-466e</link>
      <guid>https://dev.to/fernandocutire/my-thoughts-on-working-and-studying-full-time-466e</guid>
      <description>&lt;p&gt;Some time ago I was at an online university class, and i got lost on my mind if when i graduated i will have enough experience for a first job.&lt;/p&gt;

&lt;p&gt;I know internships and entry level jobs exist, but I dont't want to wait after i finished college to make it.&lt;/p&gt;

&lt;p&gt;Right now i decide that i will go through some interviews to get a first job. A first formal job not freelancing or internships. I have searched in different companies and i am wonder if i meet all the requirements. In the immense majority of jobs description that are listed, business want people with 3-5 years of experience on similar jobs.&lt;/p&gt;

&lt;p&gt;After job searching I know I don’t have enough experience, also project, research are not enough. Also, a full-time job in Panama are 8 hours a day, my university classes are 5 hours. The time is not enough.&lt;/p&gt;

&lt;p&gt;Right now i am on my 4th year of 5 years, which also means that the time I begin classes will be different, it varies every semester. For example, on my 3rd year we were always in the morning.&lt;/p&gt;

&lt;p&gt;But, based on my research, there’s a high chance that my classes begin at 4 pm or 5 pm (at best). Which let me work from 8am to 3pm. And if classes and work are remote (which there is a high chance that there will be) i can save on commute and make it all the work in my home.&lt;/p&gt;

&lt;p&gt;What’s the catch? No time (1 hour between work and study) and i will be with full classes (6 classes per semester), so things can get messy in bad times.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theres-always-hope"&gt;
  &lt;/a&gt;
  There’s always hope
&lt;/h2&gt;

&lt;p&gt;After these years i have been doing it pretty good with my classes, i got good grades this last 2 years. I have a high gpa and i have been praised for my very good work as an individual either as a team member.&lt;/p&gt;

&lt;p&gt;Also i have make improvements on my productivity and my life in general. So i know i could handle at make my best at these opportunities. Things always seem bad at first, but then i find a way&lt;/p&gt;

&lt;p&gt;See the full article at: &lt;a href="https://fernandocutire.com/my-thoughts-on-working-and-studying-full-time/"&gt;https://fernandocutire.com/my-thoughts-on-working-and-studying-full-time/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I share more of my experience in twitter &lt;br&gt;
&lt;a href="https://twitter.com/fernandocutire"&gt;follow me @fernandocutire&lt;/a&gt;&lt;/p&gt;

</description>
      <category>thinking</category>
      <category>beginners</category>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Leetcode Merge Intervals - Solution &amp; Video Explaination</title>
      <author>shubhsheth</author>
      <pubDate>Wed, 05 Jan 2022 18:56:45 +0000</pubDate>
      <link>https://dev.to/shubhsheth/leetcode-merge-intervals-solution-video-explaination-4ei8</link>
      <guid>https://dev.to/shubhsheth/leetcode-merge-intervals-solution-video-explaination-4ei8</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pVsGdDW4G9w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Edge Cases&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// Sorting&lt;/span&gt;
    &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="c1"&gt;// Merging&lt;/span&gt;
    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;

    &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#complexity"&gt;
  &lt;/a&gt;
  Complexity
&lt;/h2&gt;

&lt;p&gt;Runtime: O(nlogn)&lt;br&gt;
Space: O(n)&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>algorithms</category>
      <category>leetcode</category>
      <category>interview</category>
    </item>
    <item>
      <title>🌄  Let your junior team mates rise</title>
      <author>Zikitel22</author>
      <pubDate>Wed, 05 Jan 2022 18:19:31 +0000</pubDate>
      <link>https://dev.to/ziker22/let-your-juniors-rise-523g</link>
      <guid>https://dev.to/ziker22/let-your-juniors-rise-523g</guid>
      <description>&lt;p&gt;So you got that team lead promotion. Congratulations!. Chances are that the team you are about to take responsibility for has few junior developers and you are wondering how to handle it.&lt;/p&gt;

&lt;p&gt;Or maybe, a new junior developer is about to join your team. It's been a while since that last happened so you want to refresh how to make sure fresh acquisition has a smooth start. Take this article as an opinionated step-by-step guide for turning fresh out of Bootcamp/Uni newcomers into valuable team members you can rely on.&lt;br&gt;
During my career, I have mentored dozens of juniors. Each of them was unique and I had to make adjustments here and there, but generally, the following points worked for most of them.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#write-documentation"&gt;
  &lt;/a&gt;
  Write documentation
&lt;/h2&gt;

&lt;p&gt;Over the days and months, your product grows, and naturally, the codebase follows. People who wrote the code will come and go and so will the knowledge.&lt;br&gt;
It's not in human power to keep all the information about business logic, architecture, infrastructure, and processes in your head. It's not the most fun task but find time to do it.&lt;br&gt;
It is obviously a no-brainer and ideally needs to be set up beforehand. But in case you haven't done this yet no worries. Sit with newcomer go through module or service, explain high-level view. Then leave figuring out details to them and as a final step let them write docs. Win-win situation.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#overcommunicate-amp-undercommunicate-sometimes"&gt;
  &lt;/a&gt;
  Overcommunicate &amp;amp; undercommunicate (sometimes)
&lt;/h2&gt;

&lt;p&gt;So new guy went through the initial onboarding process and is ready for the first task. You click that assign button on what you think is a trivial task that would take you half an hour.&lt;br&gt;
You are a reasonable guy so you expect results at the end of the day or tomorrow at worst. But well that was Monday now it's Thursday afternoon and no PR was submitted.&lt;/p&gt;

&lt;p&gt;The problem with the juniors is that they tend to be afraid to ask any questions, especially what would they perceive as stupid ones. Or on the other hand, would spam you with stuff they should be able to figure out by themself.&lt;/p&gt;

&lt;p&gt;The first group would be stuck for hours with some random compilation error due to missing access rights or because they forgot to pull a new docker image from the nightly release.&lt;br&gt;
The ideal situation is to have them sitting next to you if you are working onsite to keep an eye on them&lt;br&gt;
As we're living in covid-19 time it's a good idea to ping a new team member once in a while in a chat with friendly &lt;em&gt;hows the task going&lt;/em&gt; or &lt;em&gt;is there anything I can help you with?&lt;/em&gt; questions. Daily team meetings aren't enough for this. Do it in one or one fashion.&lt;/p&gt;

&lt;p&gt;Members of the latter group on the other are very eager in asking questions but if you don't respond immediately they tend to figure it by themselves (if they are any good) and that speeds up their learning process.&lt;/p&gt;

&lt;p&gt;It shouldn't be that hard to figure out to which group your new colleague belongs and act accordingly. Most will fall somewhere in between so you want to use a mixture of these approaches&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#do-code-reviews"&gt;
  &lt;/a&gt;
  Do code reviews
&lt;/h2&gt;

&lt;p&gt;I have always felt this is somehow a standard part of the development process in every company. Except, it isn't. Among the million reasons why the team is not doing (proper) CR's are - laziness, &lt;em&gt;we don't have time for this,&lt;/em&gt; &lt;em&gt;we write golden code&lt;/em&gt; mentality or &lt;em&gt;it's so trivial it doesn't need code review&lt;/em&gt;. Don't fall for this it is the road to hell.&lt;br&gt;
Don't get me wrong it consumes the time of senior team members but benefits for juniors are invaluable and over time you will realize that they greatly benefit the whole team.&lt;/p&gt;

&lt;p&gt;Now, you should be pretty hard on code reviews. It's not uncommon for the newbie to have that first PR approved on 4-5th iteration. When I'm doing code review I do actually make difference between senior's and junior's PR. For seniors, I usually leave brief comments ie "Does this impact performance in any way ?". For juniors, though I tend to leave lengthy comments with links to resources I think could help them understand what I'm concerned about.&lt;/p&gt;

&lt;p&gt;From my experience, almost 100% of juniors are happy and have a real sense of accomplishment after their first pull request was approved. Afterward, I asked all of them the very same question. "Hey Susan how does your first draft of code compares to what we are actually merging into master". The answer is always "I love it".&lt;/p&gt;

&lt;p&gt;I'm not saying it because it sounds good for the article but because it's true. It requires your time, a lot of time, in the beginning, to be honest. But in the long run, it will pay off I promise.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dont-let-them-get-comfortable"&gt;
  &lt;/a&gt;
  Don't let them get comfortable
&lt;/h2&gt;

&lt;p&gt;I have a little story here. At some point, I joined the project as a senior front-end engineer. Everything went well I was shipping features, improving performance, had sleepless nights due to random memory leak, etc. Nothing too unusual you could say.&lt;/p&gt;

&lt;p&gt;One day team realized we are hella short on backend developers. In addition, the HR department wasn't doing its best in terms of hiring. So as I already had experience with the backend for some years, I volunteered to help. Sounds good, yeaaaaah no.&lt;/p&gt;

&lt;p&gt;My experience was Java 6 monolithic project compiling for 2 hours. Instead, this was Scala microservices exposing GraphQL API, using things like Kafka or gazillion of AWS services. Needless to say, I was clueless.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I can tell you time travel is real. In a blink of an eye, I went back 8 years back to my junior days. People in general, especially programmers tend to quickly forget how hard is to learn anything once we master it. After some years you know how the network layer works, what are red flags in particular functions, how a web page is rendered inside out, and a lot more. What is blurred is how we have gained that knowledge. Experience, series of AHA moments, and good mentors. Junior devs at the beginning of their careers haven't gone through it. Keep that in mind at every point.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It was hard at first but in 3 weeks with the great help of my mentor, I shipped my first production feature in service A. Oh boy, what a sense of accomplishment I had. Instant endorphins, senior ninja rockstar backend dev at your service high-fiving all his friends. Yeeaaaah no ... again.&lt;/p&gt;

&lt;p&gt;I was instantly assigned a new task in &lt;em&gt;service B&lt;/em&gt; unrelated to &lt;em&gt;service A&lt;/em&gt;. Sigh, back to square one. After that story repeated itself with &lt;em&gt;service C&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This went on for the next at least half of the year. I'm not gonna lie, it was hard, but eventually, I was able to understand and discuss most of the complicated features implemented across multiple services. If, in the beginning, I had settled with my knowledge of &lt;em&gt;service A&lt;/em&gt; all of that wouldn't happen.&lt;/p&gt;

&lt;p&gt;I have been using this technique since with awesome results. You can apply this on the backend as well as frontend. Just don't let them settle&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ownership"&gt;
  &lt;/a&gt;
  Ownership
&lt;/h2&gt;

&lt;p&gt;In my mind, this is the last step of "onboarding". Naaaah not that HR checklist onboarding stuff. Think like graduation for a junior developer.&lt;/p&gt;

&lt;p&gt;It usually comes 6 to 12 months after joining the team. Junior developer now understands how things work under the hood of your project. Does not make the same mistakes seniors already pointed out in code reviews, ask correct questions, and/or comes with his own ideas on how to improve the codebase.&lt;/p&gt;

&lt;p&gt;Select next relatively big isolated task. It can be anything. Implementing new product feature, improving accessibility of mobile app, rewriting legacy module, migrate from MongoDB to DynamoDB. Anything!.&lt;br&gt;
If a task involves architectural decisions, of course, keep eye on the process and help, you don't want to get the product into trouble.&lt;/p&gt;

&lt;p&gt;From my experience implementation, itself tends to be the easiest part. Once it passes QA and it's live for some time all bugs and improvements should be handled by the junior. That way they will learn from their own mistakes (again) and see what wasn't thought through.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you went through all the steps kudos to you. You now no longer have a junior developer but you have a real teammate and maybe friend capable of doing almost any task product requires. It took a lot of time but think of it as an investment that will pay off. Your work is done. Well except that a new junior is joining next week ...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#discuss"&gt;
  &lt;/a&gt;
  Discuss
&lt;/h2&gt;

&lt;p&gt;Let me know what are your best tips, to introduce junior devs to your team? Or what would you like to be your introduction?&lt;/p&gt;

</description>
      <category>career</category>
      <category>leadership</category>
      <category>programming</category>
    </item>
    <item>
      <title>Create a whitelist for your NFT project</title>
      <author>Abdul Rauf</author>
      <pubDate>Wed, 05 Jan 2022 18:13:32 +0000</pubDate>
      <link>https://dev.to/lilcoderman/create-a-whitelist-for-your-nft-project-1g55</link>
      <guid>https://dev.to/lilcoderman/create-a-whitelist-for-your-nft-project-1g55</guid>
      <description>&lt;p&gt;Many NFT projects have been using whitelists/allowlists to reward their most active community members. The members in this list are allowed to mint their NFTs before the rest of the public. This saves them from competing in a gas war with others.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;wen whitelist??&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well, I don't know anything about that but I can show how you can implement it in your smart contracts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;We're going to examine the smart contract of the Doodles NFT project, and see how they stored a list of their members on the blockchain. We're also going to learn about different &lt;strong&gt;function types&lt;/strong&gt;, &lt;strong&gt;modifiers&lt;/strong&gt;, and &lt;strong&gt;data locations&lt;/strong&gt; in &lt;code&gt;Solidity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To understand this tutorial, you need to know about NFTs, crypto wallets, and the Solidity programming language. We do go through some Solidity concepts as mentioned above, but you need to know how smart contracts work in general. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-why-doodles"&gt;
  &lt;/a&gt;
  But why Doodles?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://doodles.app/"&gt;Doodles&lt;/a&gt; is one of the best 10k NFT collectible projects out there. At the time of writing (5th Jan 2022), they've already traded around &lt;strong&gt;46.3k&lt;/strong&gt; ETH on Opensea and have a floor price of &lt;strong&gt;9.35&lt;/strong&gt; ETH. Their minting process went relatively smooth, so they are a good project to learn from.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Doodles OpenSea link&lt;/strong&gt;: &lt;a href="https://opensea.io/collection/doodles-official"&gt;https://opensea.io/collection/doodles-official&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-process"&gt;
  &lt;/a&gt;
  The process
&lt;/h2&gt;

&lt;p&gt;The process is simple. We just need to store all the whitelisted addresses in a list. Doodles have gone one step ahead and stored the amount of NFTs the members can mint as well. They've used a data structure called &lt;code&gt;mapping&lt;/code&gt; to do that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-mapping"&gt;
  &lt;/a&gt;
  What is mapping?
&lt;/h3&gt;

&lt;p&gt;Mapping in Solidity acts like a hash table or dictionary in any other language. It is used to store the data in the form of key-value pairs. Maps are created with the syntax &lt;code&gt;mapping(keyType =&amp;gt; valueType)&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;keyType could be a type such as &lt;code&gt;uint&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;, or &lt;code&gt;bytes&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;valueType could be all types including another mapping or an array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maps are not iterable, which means you cannot loop through them. You can only access a value through its key.&lt;/p&gt;

&lt;p&gt;This is where Doodles are storing all the members and the number of NFTs they can mint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight solidity"&gt;&lt;code&gt;&lt;span class="k"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="n"&gt;_allowList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can access data from a mapping similar to how you'd do it from an array. Instead of an index, you'll just give it a key.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight solidity"&gt;&lt;code&gt;&lt;span class="n"&gt;_allowList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;someAddress&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;someNumber&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-members-to-the-whitelist"&gt;
  &lt;/a&gt;
  Adding members to the whitelist
&lt;/h3&gt;

&lt;p&gt;Let's look at the &lt;code&gt;setAllowList&lt;/code&gt; function where everything happens.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight solidity"&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setAllowList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;address&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="k"&gt;calldata&lt;/span&gt; &lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;uint8&lt;/span&gt; &lt;span class="n"&gt;numAllowedToMint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;external&lt;/span&gt; &lt;span class="n"&gt;onlyOwner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint256&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_allowList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;addresses&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numAllowedToMint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're passing in an array of addresses and the number of tokens to the function. Inside the function, we loop through the addresses and store them in the &lt;code&gt;_allowList&lt;/code&gt;. Pretty straightforward, eh?&lt;/p&gt;

&lt;p&gt;The most interesting keywords here are &lt;code&gt;calldata&lt;/code&gt;, &lt;code&gt;external&lt;/code&gt;, and &lt;code&gt;onlyOwner&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-the-onlyowner-modifier"&gt;
  &lt;/a&gt;
  1. The "OnlyOwner" modifier
&lt;/h4&gt;

&lt;p&gt;This keyword is imported by the &lt;a href="https://openzeppelin.com/"&gt;OpenZeppelin&lt;/a&gt; library. OpenZeppelin provides &lt;a href="https://docs.openzeppelin.com/contracts/2.x/api/ownership#Ownable"&gt;Ownable&lt;/a&gt; for implementing ownership in your contracts. By adding this modifier to your function, you're only allowing it to be called by a specific address. By default, &lt;code&gt;onlyOwner&lt;/code&gt; refers to the account that deployed the contract.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight solidity"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="s"&gt;"@openzeppelin/contracts/access/Ownable.sol"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ...
&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setAllowList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;external&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// anyone can call this setAllowList()
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setAllowList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;external&lt;/span&gt; &lt;span class="n"&gt;onlyOwner&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// only the owner can call setAllowList()!
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-different-types-of-functions"&gt;
  &lt;/a&gt;
  2. Different types of functions
&lt;/h4&gt;

&lt;p&gt;There are four types of Solidity functions: &lt;code&gt;external&lt;/code&gt;, &lt;code&gt;internal&lt;/code&gt;, &lt;code&gt;public&lt;/code&gt;, and &lt;code&gt;private&lt;/code&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;private&lt;/em&gt; functions can be only called from inside the contract.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;internal&lt;/em&gt; functions can be called from inside the contract as well other contracts inheriting from it.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;external&lt;/em&gt; functions can only be invoked from the outside.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;public&lt;/em&gt; functions can be called from anywhere.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Why are we using an &lt;code&gt;external&lt;/code&gt; function here instead of, maybe, &lt;code&gt;public&lt;/code&gt;? Well, because external functions are sometimes more efficient when they receive large arrays of data.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The difference is because in public functions, Solidity immediately copies array arguments to memory, while external functions can read directly from calldata. Memory allocation is expensive, whereas reading from calldata is cheap.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was taken from a &lt;a href="https://ethereum.stackexchange.com/questions/19380/external-vs-public-best-practices"&gt;StackoverExchange answer&lt;/a&gt; on this topic.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-data-locations"&gt;
  &lt;/a&gt;
  3. Data locations
&lt;/h4&gt;

&lt;p&gt;Variables in Solidity can be stored in three different locations: &lt;code&gt;storage&lt;/code&gt;, &lt;code&gt;memory&lt;/code&gt;, and &lt;code&gt;calldata&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;storage&lt;/em&gt; variables are stored directly on the blockchain.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;memory&lt;/em&gt; variables are stored in memory and only exist while a function is being called.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;calldata&lt;/em&gt; variables are special (more efficient) data locations that contain function arguments. They are only available for &lt;code&gt;external&lt;/code&gt; functions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since our list of whitelisted members can be large, we're using &lt;code&gt;calldata&lt;/code&gt; to store our array of addresses. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-mint"&gt;
  &lt;/a&gt;
  How to mint
&lt;/h2&gt;

&lt;p&gt;Let's look at the mint function they've used for the members in the whitelist:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight solidity"&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;mintAllowList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8&lt;/span&gt; &lt;span class="n"&gt;numberOfTokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;external&lt;/span&gt; &lt;span class="k"&gt;payable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;uint256&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;totalSupply&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isAllowListActive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Allow list is not active"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numberOfTokens&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;_allowList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;"Exceeded max available to purchase"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;numberOfTokens&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;MAX_SUPPLY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Purchase would exceed max tokens"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PRICE_PER_TOKEN&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;numberOfTokens&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Ether value sent is not correct"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;_allowList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;numberOfTokens&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint256&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;numberOfTokens&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_safeMint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following line is relevant for this tutorial:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight solidity"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numberOfTokens&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;_allowList&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sender&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s"&gt;"Exceeded max available to purchase"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if the wallet minting the token i.e. &lt;code&gt;msg.sender&lt;/code&gt; is not available in the &lt;code&gt;_allowList&lt;/code&gt;, this line will throw an exception.&lt;/p&gt;

&lt;p&gt;You can take a look at the complete &lt;a href="https://etherscan.io/address/0x8a90cab2b38dba80c64b7734e58ee1db38b8992e#code"&gt;source code here&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#dont-leave-me-take-me-with-you"&gt;
  &lt;/a&gt;
  Don't leave me, take me with you
&lt;/h2&gt;

&lt;p&gt;Like what you read? Follow me on social media to know more about NFTs, Web development, and shit-posting.&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/lilcoderman"&gt;@lilcoderman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instagram: &lt;a href="https://www.instagram.com/lilcoderman/"&gt;@lilcoderman&lt;/a&gt;&lt;/p&gt;

</description>
      <category>solidity</category>
      <category>nft</category>
      <category>blockchain</category>
      <category>ethereum</category>
    </item>
    <item>
      <title>Soft UI Design Django - Free Template</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 05 Jan 2022 18:05:47 +0000</pubDate>
      <link>https://dev.to/sm0ke/soft-ui-design-django-free-template-i57</link>
      <guid>https://dev.to/sm0ke/soft-ui-design-django-free-template-i57</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;code&gt;Django Template&lt;/code&gt; crafted with authentication, database on top of a pixel-perfect Bootstrap 5 design. &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Django Soft UI Design&lt;/a&gt; can be downloaded directly from Github and used for a commercial project or simply for eLearning activities. For newcomers, &lt;strong&gt;Django&lt;/strong&gt; is a leading web framework actively supported and versioned by programming experts using a &lt;code&gt;batteries-included&lt;/code&gt; concept. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/django-soft-ui-design-system"&gt;Soft UI Design Django&lt;/a&gt; - Product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://django-soft-ui-free.appseed-srv1.com/"&gt;Soft UI Design Django&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Designed for those who like bold elements and beautiful websites, Soft UI Design is made of hundreds of elements, designed blocks, and fully coded pages.&lt;/p&gt;

&lt;p&gt;Probably the most easier way to compile the product locally or deploy it in production is to use the pre-built Docker configuration.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;✨ Step #1 - Clone/Download sources from Github (public repository)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-soft-ui-design.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-soft-ui-design
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;✨ Step #2 - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;--build&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Once the above commands are executed, we should be able to access the app in the browser, register new users, authenticate and interact with the UI.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ra7RB-tR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2rhr560yjzbj2wvaixr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ra7RB-tR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v2rhr560yjzbj2wvaixr.png" alt="Django Soft UI - HERO Section." width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tEZowxp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t75oin5sgz8uzujl61xg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tEZowxp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t75oin5sgz8uzujl61xg.png" alt="Django Soft UI - User Profile Page." width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For production, we might want to serve compressed HTML pages and this case can be achieved pretty easily with a small update:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;django-htmlmin&lt;/code&gt; to the project &lt;code&gt;requirements&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Update Project &lt;code&gt;settings&lt;/code&gt; to enable the compression
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# core/settings.py - Partial Content
&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;MIDDLEWARE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.security.SecurityMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'whitenoise.middleware.WhiteNoiseMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.sessions.middleware.SessionMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.common.CommonMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.csrf.CsrfViewMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.auth.middleware.AuthenticationMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.messages.middleware.MessageMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.clickjacking.XFrameOptionsMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'htmlmin.middleware.HtmlMinifyMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c1"&gt;# &amp;lt;-- NEW  
&lt;/span&gt;    &lt;span class="s"&gt;'htmlmin.middleware.MarkRequestMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;     &lt;span class="c1"&gt;# &amp;lt;-- NEW 
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources, feel free to access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;👉 Get &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/product/flask-soft-ui-design-system"&gt;Flask Soft UI Design&lt;/a&gt; - open-source Flask version
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>django</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Time for secure dependencies? Private Maven repository for Java, Kotlin, Scala</title>
      <author>Andreas Sommarström</author>
      <pubDate>Wed, 05 Jan 2022 17:59:12 +0000</pubDate>
      <link>https://dev.to/sumstrm/time-for-secure-dependencies-private-maven-repository-for-java-kotlin-scala-5afl</link>
      <guid>https://dev.to/sumstrm/time-for-secure-dependencies-private-maven-repository-for-java-kotlin-scala-5afl</guid>
      <description>&lt;p&gt;Maven is a build tool to manage &lt;strong&gt;Java&lt;/strong&gt;, &lt;strong&gt;Kotlin&lt;/strong&gt;, &lt;strong&gt;Scala&lt;/strong&gt; or similar JVM based languages projects - including all its dependencies, both open source and private. A great way to make sure your organization uses trusted and approved dependencies is to use a private Maven repository - and it's no more complicated than using the default repository. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The two main reasons to use private Maven repositories for your JVM packages:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Secure source for open source dependencies&lt;/em&gt;. With 1300+ public repositories and over 24 million Java artifacts, organizations need to control the code they are using - and not allow free entry of untrusted components.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Distribute internal components&lt;/em&gt;. With a wide range of applications that depend on each other, organizations require private repositories to share code between services while keeping artifacts private and secure.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Protect your software supply chain and make sure every developer and CI/CD system uses trusted dependencies from a single secure source. With hundreds of automated CI/CD pipelines and decentralized developers this is not an easy task - but definitely achievable with the right tools.&lt;/p&gt;

&lt;p&gt;With the recent disclosures of critical vulnerabilities in the widely used open source framework &lt;code&gt;log4j&lt;/code&gt;, this is more relevant than ever.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RonOKzQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgcobl00o9r5eex2t0th.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RonOKzQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgcobl00o9r5eex2t0th.png" alt="Apache log4j vulernabilities" width="862" height="181"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The exploits in &lt;a href="https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance"&gt;log4j&lt;/a&gt; have once again stressed the need to keep track of open source dependencies - &lt;em&gt;else risk being exploited by vulnerabilities that could give full server control&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This post describes how you easily set up a secure and private Maven repository - so you can stay in control of the dependencies you are using.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Require a private Maven repository of your own? &lt;a href="https://bytesafe.dev/maven/"&gt;Bytesafe&lt;/a&gt; repositories are compatible with both&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Maven&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;and&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Gradle&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;- hosted so you can get started instantly without having to think of infrastructure.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-a-secure-maven-repository"&gt;
  &lt;/a&gt;
  Getting started with a secure Maven repository
&lt;/h2&gt;

&lt;p&gt;With minimal configuration your build clients can fetch trusted dependencies from your private repository instead of relying on (the default) Maven Central.&lt;/p&gt;

&lt;p&gt;The popular build tools Maven &amp;amp; Gradle fully support private repositories, both as the target when deploying packages or as the source when fetching dependencies. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-maven-repository"&gt;
  &lt;/a&gt;
  Create a Maven repository
&lt;/h3&gt;

&lt;p&gt;To get started you need to create a Maven repository and configure access to it for your client of choice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bknmj9lG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opmbun2yfhnf23ul1i5i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bknmj9lG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opmbun2yfhnf23ul1i5i.png" alt="create a Maven registry in Bytesafe" width="880" height="469"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After you have created your Maven repository, you need to add an access token to your project. The access token ensures only intended users have access to packages stored in the private registry.&lt;/p&gt;

&lt;p&gt;Create an access token and add it to your list of repositories in your configuration file for Maven (&lt;code&gt;settings.xml&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Add the access token and id configuration to settings.xml --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;servers&amp;gt;&lt;/span&gt; 
    &lt;span class="nt"&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;{MAVEN-REGISTRY}&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;username&amp;gt;&lt;/span&gt;{USER}&lt;span class="nt"&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;password&amp;gt;&lt;/span&gt;{ACCESS-TOKEN}&lt;span class="nt"&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;httpConfiguration&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;all&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;usePreemptive&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/usePreemptive&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/all&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/httpConfiguration&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/servers&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; in &lt;code&gt;settings.xml&lt;/code&gt; needs to match other configuration provided for uploading packages and installing dependencies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upload-a-maven-package"&gt;
  &lt;/a&gt;
  Upload a Maven package
&lt;/h3&gt;

&lt;p&gt;Maven artifacts can be added to the private repository using &lt;code&gt;mvn deploy&lt;/code&gt; (or by uploading files manually).&lt;/p&gt;

&lt;p&gt;To deploy using the &lt;code&gt;mvn&lt;/code&gt; client users need to add the necessary configuration to the project &lt;code&gt;pom.xml&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Add the repository and snapshotRepository configuration to pom.xml --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;distributionManagement&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;repository&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;{MAVEN-REGISTRY}&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/repository&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;snapshotRepository&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;{MAVEN-REGISTRY}&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;/id
        &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/snapshotRepository&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/distributionManagement&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Users can choose to deploy snapshots and release versions to either the same or different registries.&lt;/p&gt;

&lt;p&gt;With your Maven project configured you can deploy artifacts to your private registry either manually or as part of your CI/CD chain.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Deploy artifacts to Bytesafe using Maven&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;mvn clean deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As soon as the process has completed, the artifact will be available and accessible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resolving-maven-project-dependencies"&gt;
  &lt;/a&gt;
  Resolving Maven project dependencies
&lt;/h3&gt;

&lt;p&gt;A major part of building a Maven project is resolving any dependencies specified for the project. Any &lt;code&gt;&amp;lt;dependency&amp;gt;&lt;/code&gt; specified in the &lt;code&gt;pom.xml&lt;/code&gt; file, will be fetched when building the project.&lt;/p&gt;

&lt;p&gt;When using private repositories from &lt;a href="https://bytesafe.dev"&gt;Bytesafe&lt;/a&gt;, public dependencies will be proxied, pulling any required (and allowed) version into your private Maven repository. Using public repositories like Maven Central as an &lt;a href="https://docs.bytesafe.dev/upstreams/configuring-upstreams/"&gt;upstream&lt;/a&gt; makes sure you can access your organization's required open source dependencies - while maintaining security and control.&lt;/p&gt;

&lt;p&gt;To make sure security features are not bypassed for individual projects, it's recommended to use a mirror configuration to set the private Maven repository as the general package source.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Mirror configuration in settings.xml --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;mirrors&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;{MAVEN-REGISTRY}&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;*&lt;span class="nt"&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/&lt;span class="nt"&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/mirrors&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With project dependencies specified in the &lt;code&gt;pom.xml&lt;/code&gt; file, you can install dependencies using regular Maven commands like &lt;code&gt;mvn install&lt;/code&gt; or &lt;code&gt;mvn verify&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install Maven dependencies from Bytesafe&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;mvn clean &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#installing-snapshot-versions"&gt;
  &lt;/a&gt;
  Installing SNAPSHOT versions
&lt;/h4&gt;

&lt;p&gt;To install snapshot versions (&lt;code&gt;X.-SNAPSHOT&lt;/code&gt;) with Maven, users are required to explicitly specify the use of a snapshot repository. This is because there is no default snapshot repository associated with Maven.&lt;/p&gt;

&lt;p&gt;This can be set either per project in the &lt;code&gt;pom.xml&lt;/code&gt; file or project agnostic as part of a user's profile. See the &lt;a href="https://docs.bytesafe.dev/package-managers/maven/#installing-snapshot-versions"&gt;Bytesafe documentation&lt;/a&gt; or the official &lt;a href="https://maven.apache.org/guides/getting-started/index.html"&gt;Maven docs&lt;/a&gt; for more details. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-gradle-with-your-maven-repository"&gt;
  &lt;/a&gt;
  Using Gradle with your Maven repository
&lt;/h2&gt;

&lt;p&gt;Gradle is a popular alternative build automation tool for JVM-based projects that works with Maven compatible repositories.&lt;/p&gt;

&lt;p&gt;To resolve project dependencies from the private Maven repository, the repository needs to be declared in the &lt;code&gt;build.gradle&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// repository configuration in build.gradle&lt;/span&gt;

&lt;span class="nf"&gt;repositories&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nf"&gt;maven&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;bytesafe&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
      &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/'&lt;/span&gt;
      &lt;span class="nf"&gt;credentials&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;bytesafe&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
         &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ACCESS-TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// specify project dependencies&lt;/span&gt;

&lt;span class="nf"&gt;dependencies&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;GROUP_ID&lt;/span&gt;&lt;span class="p"&gt;}:{&lt;/span&gt;&lt;span class="nc"&gt;ARTIFACT_ID&lt;/span&gt;&lt;span class="p"&gt;}:{&lt;/span&gt;&lt;span class="nc"&gt;VERSION&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Users should consider storing credentials in &lt;code&gt;~/.gradle/gradle.properties&lt;/code&gt; file in-place of &lt;code&gt;build.gradle&lt;/code&gt; to avoid unintended distribution of credentials.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To publish a package using Gradle, enable the &lt;code&gt;maven-publish&lt;/code&gt; plugin and specify the target publishing repository in the &lt;code&gt;build.gradle&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// enable the maven-publish plugin&lt;/span&gt;
&lt;span class="nf"&gt;plugins&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;maven-publish&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;publishing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nf"&gt;publications&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nf"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;MavenPublication&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;repositories&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nf"&gt;maven&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;bytesafe&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
      &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/'&lt;/span&gt;
      &lt;span class="nf"&gt;credentials&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;bytesafe&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
        &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nc"&gt;ACCESS-TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With these quick additions to your Gradle project, you should be able to both build and deploy your own project using a private Maven repository as well as install any required dependencies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-to-know-more-about-bytesafes-firewall-for-dependencies"&gt;
  &lt;/a&gt;
  Want to know more about Bytesafe's Firewall for dependencies?
&lt;/h2&gt;

&lt;p&gt;Secure your supply chain with private registries compatible with package managers like npm, maven and nuget. Refer to the Bytesafe documentation on &lt;a href="https://docs.bytesafe.dev/package-managers/"&gt;package managers&lt;/a&gt; for more in-depth information and guides. &lt;/p&gt;

&lt;p&gt;Enforce your security policies and &lt;a href="https://bytesafe.dev/posts/using-quarantine-dependency-firewall/"&gt;automatically quarantine&lt;/a&gt; unwanted dependencies. Avoid &lt;a href="https://bytesafe.dev/posts/safety-delay-protect-from-compromised-versions/"&gt;compromised new versions&lt;/a&gt; with a set delay before newly published versions are allowed in your organization.&lt;/p&gt;

&lt;p&gt;Want to try it for yourself? &lt;a href="https://login.bytesafe.dev/signup"&gt;Sign up&lt;/a&gt; for Bytesafe and get started today - no strings attached.&lt;/p&gt;

</description>
      <category>java</category>
      <category>kotlin</category>
      <category>maven</category>
      <category>gradle</category>
    </item>
    <item>
      <title>Kubernetes Hardening Tutorial Part 1: Pods</title>
      <author>Tiexin Guo</author>
      <pubDate>Wed, 05 Jan 2022 17:40:24 +0000</pubDate>
      <link>https://dev.to/gitguardian/kubernetes-hardening-tutorial-part-1-pods-4656</link>
      <guid>https://dev.to/gitguardian/kubernetes-hardening-tutorial-part-1-pods-4656</guid>
      <description>&lt;p&gt;In my previous two articles, we discussed Kubernetes security and created a guideline for enhancing K8s. If you haven't read them yet, here are the links:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.gitguardian.com/hardening-your-k8-pt-1/"&gt;Hardening Your Kubernetes Cluster - Threat Model (Pt. 1)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.gitguardian.com/hardening-your-k8s-pt-2/"&gt;Hardening Your Kubernetes Cluster - Guidelines (Pt. 2)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today, we will follow the advice of the second article and do some hands-on work to have a deeper understanding. Let's start with Pod security.&lt;/p&gt;

&lt;p&gt;After reading this article, you will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how not to run pods as root;&lt;/li&gt;
&lt;li&gt;how to use immutable root fs (lock the root filesystem);&lt;/li&gt;
&lt;li&gt;how to do Docker image scan locally and with your CI pipelines;&lt;/li&gt;
&lt;li&gt;how to use PSP.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#1-run-containers-as-nonroot-user"&gt;
  &lt;/a&gt;
  1. Run Containers as Non-Root User
&lt;/h2&gt;

&lt;p&gt;If you do the bare minimum and absolutely nothing else, by default, the Docker container will run as the root user, and K8s will allow it to do so.&lt;/p&gt;

&lt;p&gt;Consider the following Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="c"&gt;# omitted above&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; alpine&lt;/span&gt;
&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; app /app/app&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["./app"]&lt;/span&gt;
&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8080/tcp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since the user with which to run the container isn't explicitly set, if you start a Docker container with this image, the container process is running as root:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/app &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;whoami
&lt;/span&gt;root
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we use this image to run a pod in a K8s cluster, consider the following container spec:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# omitted above&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;hello&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ironcore864/k8s-security-demo:pod-as-non-root&lt;/span&gt;
      &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since there aren't any restrictions, K8s will allow this pod to run as the root user.&lt;/p&gt;

&lt;p&gt;If you want to try it yourself, the code used for this section is shown in &lt;a href="https://github.com/IronCore864/k8s-security-demo/pull/1"&gt;this pull request here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can deploy the test in K8s by running the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git@github.com:IronCore864/k8s-security-demo.git
&lt;span class="nb"&gt;cd &lt;/span&gt;k8s-security-demo
git checkout pod-run-as-root
kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; deploy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#11-the-raw-user-endraw-instruction"&gt;
  &lt;/a&gt;
  1.1 The &lt;code&gt;USER&lt;/code&gt; Instruction
&lt;/h3&gt;

&lt;p&gt;With Docker, you can use the USER instruction. The USER instruction sets the user name (or UID), and optionally the user group (or GID) to use when running the image, and for any RUN, CMD and ENTRYPOINT instructions that follow it in the Dockerfile. So, by simply adding this line in the Dockerfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;USER&lt;/span&gt;&lt;span class="s"&gt; 1000:1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have changed the user with which the container will be run.&lt;/p&gt;

&lt;p&gt;So, now we have sorted it out from the container level. But how about the pod? If an image doesn't have a USER instruction, K8s will still allow it.&lt;/p&gt;

&lt;p&gt;Enter security context.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-security-context"&gt;
  &lt;/a&gt;
  1.2 Security Context
&lt;/h3&gt;

&lt;p&gt;A security context defines privilege and access control settings for a Pod or Container. Security context settings include, but are not limited to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Discretionary Access Control&lt;/strong&gt;: Permission to access an object, like a file, is based on user ID (UID) and group ID (GID).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Security Enhanced Linux (SELinux)&lt;/strong&gt;: Objects are assigned security labels.&lt;/li&gt;
&lt;li&gt;Running as &lt;strong&gt;privileged&lt;/strong&gt; or &lt;strong&gt;unprivileged&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Linux Capabilities&lt;/strong&gt;: Give a process some privileges, but not all the privileges of the root user.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AppArmor&lt;/strong&gt;: Use program profiles to restrict the capabilities of individual programs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Seccomp&lt;/strong&gt;: Filter a process's system calls.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AllowPrivilegeEscalation&lt;/strong&gt;: Controls whether a process can gain more privileges than its parent process. This bool directly controls whether the &lt;code&gt;no_new_privs&lt;/code&gt;  flag gets set on the container process. &lt;strong&gt;AllowPrivilegeEscalation is  true always when the container is: 1) run as Privileged OR 2) has CAP_SYS_ADMIN&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;code&gt;readOnlyRootFilesystem&lt;/code&gt;&lt;/strong&gt;: Mounts the container's root filesystem as read-only.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For demo purposes, we only need to add one small section in to the container spec:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;securityContext&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;runAsNonRoot&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, if the image runs as root, it will fail at deployment.&lt;/p&gt;

&lt;p&gt;With security context, you can even limit the user ID and group ID with which the container must be run. For more details, check out the &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"&gt;official doc here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to try it yourself, the code used for this section is shown in this &lt;a href="https://github.com/IronCore864/k8s-security-demo/pull/2"&gt;pull request here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can deploy the test in K8s by running the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git@github.com:IronCore864/k8s-security-demo.git
&lt;span class="nb"&gt;cd &lt;/span&gt;k8s-security-demo
git checkout pod-run-as-non-root
kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; deploy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#2-immutable-file-system"&gt;
  &lt;/a&gt;
  2. Immutable File System
&lt;/h2&gt;

&lt;p&gt;If we get into the pod we created so far:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~/work/k8s-security-demo &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; k8s-security-demo-748f4cfc8c-66lm7 sh
/app &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/
/tmp &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"abc"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; file.txt
/tmp &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cat &lt;/span&gt;file.txt
abc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see, we basically can create any file in the root filesystem.&lt;/p&gt;

&lt;p&gt;To lock the root filesystem, we simply add one line into the security context section:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;readOnlyRootFilesystem&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After re-apply, if we run another test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~/work/k8s-security-demo &lt;span class="nv"&gt;$ &lt;/span&gt;kubectl &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-it&lt;/span&gt; k8s-security-demo-66dd894b84-fccfl - sh
/app &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/
/tmp &lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"abc"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; file.txt
sh: can&lt;span class="s1"&gt;'t create file.txt: Read-only file system
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can't do anything on the root filesystem anymore.&lt;/p&gt;

&lt;p&gt;The change is shown in this &lt;a href="https://github.com/IronCore864/k8s-security-demo/pull/3"&gt;pull request here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can deploy the test in K8s by running the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git@github.com:IronCore864/k8s-security-demo.git
&lt;span class="nb"&gt;cd &lt;/span&gt;k8s-security-demo
git checkout immutable-root-fs
kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; deploy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#3-image-scanning"&gt;
  &lt;/a&gt;
  3. Image Scanning
&lt;/h2&gt;

&lt;p&gt;There are quite a few image scanning tools out there which can identify known vulnerabilities, outdated libraries, or misconfigurations, such as insecure ports or unnecessary permissions. There are also numerous ways to integrate the image scanning process with your CI workflow.&lt;/p&gt;

&lt;p&gt;Today, let's have a quick look at a small but powerful tool: &lt;a href="https://github.com/aquasecurity/trivy"&gt;trivy&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#31-localmanual"&gt;
  &lt;/a&gt;
  3.1 Local/Manual
&lt;/h3&gt;

&lt;p&gt;If you are using Mac OS with brew, run one easy command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;aquasecurity/trivy/trivy 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you will have it.&lt;/p&gt;

&lt;p&gt;Now let's scan an image with it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nv"&gt;$ &lt;/span&gt;trivy image ironcore864/go-hello-http:2.0.13
2021-11-28T11:40:58.863+0800 INFO Using your github token
2021-11-28T11:41:10.217+0800 INFO Detected OS: alpine
2021-11-28T11:41:10.217+0800 INFO Detecting Alpine vulnerabilities...
2021-11-28T11:41:10.219+0800 INFO Number of language-specific files: 0
ironcore864/go-hello-http:2.0.13 &lt;span class="o"&gt;(&lt;/span&gt;alpine 3.14.3&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;================================================&lt;/span&gt;
Total: 0 &lt;span class="o"&gt;(&lt;/span&gt;UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you think that because an image is released by a big company or by an open-source community, it should have no vulnerabilities at all, you are wrong. Try to scan some images from some well-known projects, and you will be shocked. Knowing what base image you are using and what vulnerabilities you have in your image is important.&lt;/p&gt;

&lt;p&gt;You might also want to check &lt;code&gt;ggshield&lt;/code&gt; which can scan for leaked secrets in Docker images: check the &lt;a href="https://www.youtube.com/watch?v=SOd_XMIGRqo&amp;amp;t=700s"&gt;video tutorial&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#32-integrate-with-ci"&gt;
  &lt;/a&gt;
  3.2 Integrate with CI
&lt;/h3&gt;

&lt;p&gt;You can also integrate trivy with your  CI. For example, &lt;a href="https://github.com/IronCore864/k8s-security-demo/pull/4/commits/70f6d6af3d96173999aea2564acc2769e01b7482"&gt;this is a workflow for GitHub Actions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And the result is &lt;a href="https://github.com/IronCore864/k8s-security-demo/runs/4343716875?check_suite_focus=true"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to use trivy with GitHub Actions, simply &lt;a href="https://github.com/aquasecurity/trivy-action"&gt;set up this workflow here&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-pod-security-policies-psp"&gt;
  &lt;/a&gt;
  4. Pod Security Policies (PSP)
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Note: As of 2021, the PSP is being deprecated in Kubernetes 1.21.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;PSP will continue to be fully functional for several more releases before being removed completely, though. In the future, as a replacement, there will be a "PSP Replacement Policy" (temporary name) which covers critical use cases more easily and sustainably.&lt;/p&gt;

&lt;p&gt;Before the new thing emerges, let's have a quick look at the capabilities of PSP. PSP can do many things, some of which will be reviewed in other posts following this one. Today, let's have a look at a feature which is related to the first section of this article: run Pod as a non-root user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#41-psp-explained"&gt;
  &lt;/a&gt;
  4.1 PSP Explained
&lt;/h3&gt;

&lt;p&gt;Let's create a user, PSP, role bindings so that this user is allowed to create pod and can use PSP. The RBAC and PSP are shown in &lt;a href="https://github.com/IronCore864/k8s-security-demo/pull/5/commits/6ddb4a16944bdaaedd98ec134de9753405755f8f#diff-c2e4a5c082f737d65ba49d1032a4bd0498a8b9484928ad33d392df4123ebfe94"&gt;this pull request&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# psp.yaml&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;policy/v1beta1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PodSecurityPolicy&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;restricted&lt;/span&gt;
  &lt;span class="na"&gt;annotations&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;seccomp.security.alpha.kubernetes.io/allowedProfileNames&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;docker/default,runtime/default'&lt;/span&gt;
    &lt;span class="na"&gt;apparmor.security.beta.kubernetes.io/allowedProfileNames&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;runtime/default'&lt;/span&gt;
    &lt;span class="na"&gt;apparmor.security.beta.kubernetes.io/defaultProfileName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;runtime/default'&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;privileged&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
  &lt;span class="na"&gt;allowPrivilegeEscalation&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
  &lt;span class="na"&gt;seLinux&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;rule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RunAsAny&lt;/span&gt;
  &lt;span class="na"&gt;supplementalGroups&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;rule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RunAsAny&lt;/span&gt;
  &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt;
  &lt;span class="na"&gt;runAsUser&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Require the container to run without root privileges.&lt;/span&gt;
    &lt;span class="na"&gt;rule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;MustRunAsNonRoot'&lt;/span&gt;
  &lt;span class="na"&gt;fsGroup&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;rule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;RunAsAny&lt;/span&gt;
  &lt;span class="na"&gt;readOnlyRootFilesystem&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As from &lt;a href="https://kubernetes.io/docs/concepts/policy/pod-security-policy/"&gt;the docs&lt;/a&gt;: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Privileged&lt;/em&gt; - determines if any container in a pod can enable privileged mode. By default, a container is not allowed to access any devices on the host, but a "privileged" container is given access to all devices on the host.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;AllowPrivilegeEscalation&lt;/em&gt; - gates whether or not a user is allowed to set the security context of a container to allowPrivilegeEscalation=true.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;RunAsUser&lt;/em&gt; - Controls which user ID the containers are run with.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;MustRunAs&lt;/em&gt; - Requires at least one range to be specified. Uses the minimum value of the first range as the default. Validates against all ranges.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;MustRunAsNonRoot&lt;/em&gt; - Requires that the pod be submitted with a non-zero runAsUser or have the USER directive defined (using a numeric UID) in the image. This will cascade to all pods with &lt;code&gt;runAsNonRoot=true&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;RunAsAny&lt;/em&gt; - No default provided. Allows any runAsUser to be specified.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;ReadOnlyRootFilesystem&lt;/em&gt; - Requires that containers must run with a read-only root filesystem (i.e., no writable layer).&lt;/p&gt;

&lt;p&gt;We can ignore the other part of the PSP for now, which will be covered in future articles.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#42-psp-rbac-explained"&gt;
  &lt;/a&gt;
  4.2 PSP RBAC Explained
&lt;/h3&gt;

&lt;p&gt;When a PodSecurityPolicy resource is created, it does nothing. In order to use it, the requesting user or target pod's service account must be authorized to use the policy by allowing the use verb on the policy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#43-psp-demo"&gt;
  &lt;/a&gt;
  4.3 PSP Demo
&lt;/h3&gt;

&lt;p&gt;Now that we are ready if we run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;kubectl-user&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'kubectl --as=system:serviceaccount:default:fake-user -n default'&lt;/span&gt;
kubectl-user apply &lt;span class="nt"&gt;-f&lt;/span&gt; deploy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;We would not be successful because the restricted PSP requires "MustRunAsNonRoot"&lt;/strong&gt;, while the container runs as root, even though there isn't any security context defined in the container spec.&lt;/p&gt;

&lt;p&gt;We can try something else to create a privileged pod:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl-user create &lt;span class="nt"&gt;-f-&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="no"&gt;EOF&lt;/span&gt;&lt;span class="sh"&gt;
apiVersion: v1
kind: Pod
metadata:
  name: privileged
spec:
  containers:
    - name: pause
      image: k8s.gcr.io/pause
      securityContext:
        privileged: true
&lt;/span&gt;&lt;span class="no"&gt;EOF
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would get similar error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Error from server &lt;span class="o"&gt;(&lt;/span&gt;Forbidden&lt;span class="o"&gt;)&lt;/span&gt;: error when creating &lt;span class="s2"&gt;"STDIN"&lt;/span&gt;: pods &lt;span class="s2"&gt;"privileged"&lt;/span&gt; is forbidden: PodSecurityPolicy: unable to admit pod: &lt;span class="o"&gt;[&lt;/span&gt;spec.containers[0].securityContext.privileged: Invalid value: &lt;span class="nb"&gt;true&lt;/span&gt;: Privileged containers are not allowed]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can try the PSP by running the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git@github.com:IronCore864/k8s-security-demo.git
&lt;span class="nb"&gt;cd &lt;/span&gt;k8s-security-demo
git checkout psp
kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; psp.yaml
kubectl apply &lt;span class="nt"&gt;-f&lt;/span&gt; rbac.yaml
&lt;span class="nb"&gt;alias &lt;/span&gt;kubectl-user&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'kubectl --as=system:serviceaccount:default:fake-user -n default'&lt;/span&gt;
kubectl-user apply &lt;span class="nt"&gt;-f&lt;/span&gt; deploy.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;In the next part of this series, we will show some hands-on tutorial about network security configurations in Kubernetes. If you like this article, please share, and subscribe!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devsecops</category>
      <category>security</category>
    </item>
    <item>
      <title> كيف اصبح AWS Community Builder</title>
      <author>Mohammed Ismaeel</author>
      <pubDate>Wed, 05 Jan 2022 17:34:41 +0000</pubDate>
      <link>https://dev.to/aws-builders/kyf-sbh-aws-community-builder-4111</link>
      <guid>https://dev.to/aws-builders/kyf-sbh-aws-community-builder-4111</guid>
      <description>&lt;h2&gt;
  &lt;a href="#-aws-community-builders-%D9%83%D9%8A%D9%81-%D8%A7%D8%B5%D8%A8%D8%AD%D8%AA"&gt;
  &lt;/a&gt;
  ؟؟ AWS Community Builders كيف اصبحت
&lt;/h2&gt;

&lt;p&gt;كثيرا ما يطرح علي هذا السؤال وعن ماذا يعني ان تكون جزئا من هذه المنظومة ؟؟&lt;br&gt;
...... سوف أحاول في هذا المقال ان اجيب عن هذه التسأولات &lt;br&gt;
أولا وقبل كل شي يجب ان تكون شخص طموح ولكن متواضع ولديك رغبة في  التعلم. أنت تحب ان تشارك المعلومات المتعلقة بالحوسبة السحابية مع العالم ومقابلة الاشخاص الآخرين الذين يشاركونك نفس الاهتمامات  &lt;/p&gt;

&lt;p&gt;لا تخف ان احسست بانك غير ملائم للتقديم في هذه المرحلة او من اين قد ابدأ لاكون مؤهل للدخول الى هذه البرنامج الاجابة الخبر السار ان اعضاء الكوميونتي منتشرون حول العالم وسوف يكونون سعيدين بالمساعدة &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%D9%85%D8%A7-%D9%87%D9%8A-%D8%A7%D9%84%D9%81%D8%A7%D8%A6%D8%AF%D8%A9-%D9%85%D9%86-%D8%A7%D9%84%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D8%AC"&gt;
  &lt;/a&gt;
  ما هي الفائدة من البرنامج
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;يعتبر اضافة جيدة الى السيرة الذاتية &lt;/li&gt;
&lt;li&gt; فاوتشر مجاني للشهادة الي تود تمتحن فيها قد تصل قيمته ل $300 &lt;/li&gt;
&lt;li&gt;AWS خمسمئة دولار في حسابك تساعدك في تطبيق واستخدام خدمات &lt;/li&gt;
&lt;li&gt;التعرف على اشخاص اخرين وتكوين نيتورك تشاركك نفس الاهتمامات&lt;/li&gt;
&lt;li&gt;AWSلديك افضلية الحصول على اخر التطورات والخدمات التي تقدمها
&lt;/li&gt;
&lt;li&gt;بعض الهدايا الخاصة باعضاء البرنامج &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t-rOVMMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6346k6zixsrhz9jowu4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t-rOVMMG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6346k6zixsrhz9jowu4.jpg" alt="Image description" width="499" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%D9%83%D9%8A%D9%81-%D8%A7%D9%82%D9%88%D9%85-%D8%A8%D8%A7%D9%84%D8%AA%D9%82%D8%AF%D9%8A%D9%85"&gt;
  &lt;/a&gt;
  كيف اقوم بالتقديم
&lt;/h2&gt;

&lt;p&gt;تُفتح الطلبات مرتين سنويًا ويمكنك التقديم من خلال رابط التقديم ادناه &lt;br&gt;
&lt;a href="https://aws.amazon.com/developer/community/community-builders/"&gt;AWS Community Builder&lt;/a&gt;&lt;br&gt;
ستجد اخر التحديثات في الصفحة وعند التقديم سيطلب التطبيق معلومات .AWS عنك وعن مشاركتك في مجتمع &lt;/p&gt;

&lt;p&gt;الاشخاص القادمون من خلفيات غير تقنية مرحب بهم ايضا في البرنامج &lt;br&gt;
 تشجع الجميع على ان يكونوا جزئا من هذه العائلة AWS &lt;br&gt;
  فان الدخول في AWS Hero بما انه لا يوجد مسار رسمي للتقديم على &lt;br&gt;
 هو بداية جيدة ومكان جيد للبدءAWS community builder عائلة ال &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-%D8%B9%D9%86-%D9%85%D9%86-%D8%AA%D8%A8%D8%AD%D8%AB"&gt;
  &lt;/a&gt;
  AWS  عن من تبحث
&lt;/h2&gt;

&lt;p&gt;الامر ليس سرا وتجدونه في صفحة التقديم وهذه هي الترجمة الحرفية &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;عشاق الحوسبة السحابية وقادة الفكر الناشئين المتحمسين لمشاركة المعرفة والتواصل مع المجتمع التقني &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;لم يتم وضع معايير محددة ، لذلك لا داعي للقلق بشأن الحاجة إلى نشر عشر منشورات مدونة ، أو تصوير خمسة مقاطع فيديو على يوتيوب، &lt;br&gt;
أو انك تحتاج ثلاث سنوات من الخبرة في المجال&lt;br&gt;&lt;br&gt;
بل على العكس لا يعني انك اذا قد كنت تمتلك الخبرة التقنية وانك &lt;br&gt;
 انك فد ضمنت مكانا في البرنامج AWS حاصل على شهادات من&lt;br&gt;&lt;br&gt;
المفتاح هو أنهم يريدون من الأشخاص الذين يتوقون إلى مشاركت &lt;br&gt;
 AWS حماسهم وشغفهم تجاه كل ما يتعلق بـ  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%D9%85%D8%A7%D8%B0%D8%A7-%D8%B9%D9%84%D9%8A-%D8%A3%D9%86-%D8%A3%D9%81%D8%B9%D9%84-%D9%84%D9%84%D9%85%D8%B4%D8%A7%D8%B1%D9%83%D8%A9"&gt;
  &lt;/a&gt;
  ماذا علي أن أفعل للمشاركة؟
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-aws-user-groups%D8%A3%D9%84%D8%AA%D8%B7%D9%88%D8%B9-%D9%81%D9%8A"&gt;
  &lt;/a&gt;
  1.  &lt;a href="https://aws.amazon.com/developer/community/usergroups/"&gt;AWS user groups&lt;/a&gt;ألتطوع في
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-%D8%A3%D9%84%D9%84%D9%82%D8%A7%D8%A1-%D8%A7%D9%84%D9%85%D8%AD%D8%A7%D8%B6%D8%B1%D8%A7%D8%AA"&gt;
  &lt;/a&gt;
  2. أللقاء المحاضرات
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#3-%D8%A7%D9%84%D9%85%D9%82%D8%A7%D9%84%D8%A7%D8%AA"&gt;
  &lt;/a&gt;
  3. المقالات
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#4-%D8%A7%D9%84%D8%AA%D8%AC%D9%85%D8%B9%D8%A7%D8%AA-%D8%A7%D9%84%D8%AA%D9%82%D9%86%D9%8A%D8%A9"&gt;
  &lt;/a&gt;
  4. التجمعات التقنية
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#5-%D8%A7%D9%84%D8%AA%D9%88%D8%A7%D8%B5%D9%84-%D8%A7%D9%84%D8%A7%D8%AC%D8%AA%D9%85%D8%A7%D8%B9%D9%8A"&gt;
  &lt;/a&gt;
  5. التواصل الاجتماعي
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#6-podcast"&gt;
  &lt;/a&gt;
  6. Podcast
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#7-%D8%A7%D9%84%D8%AA%D8%B7%D8%A8%D9%8A%D9%82-%D8%A7%D9%84%D8%B9%D9%85%D9%84%D9%8A"&gt;
  &lt;/a&gt;
  7. التطبيق العملي
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#%D9%85%D9%85%D9%86-%D9%8A%D9%85%D9%83%D9%86%D9%86%D9%8A-%D8%B7%D9%84%D8%A8-%D8%A7%D9%84%D9%86%D8%B5%D9%8A%D8%AD%D8%A9"&gt;
  &lt;/a&gt;
  ممن يمكنني طلب النصيحة؟
&lt;/h2&gt;

&lt;p&gt;افضل طريقة هي التواصل مع احد اعضاء البرنامج والسؤال عن كيفية التقديم والقبول وهم كثر ولابد انك على علم باحدهم اذا لم تكن على &lt;br&gt;
AWS  او في تجمعات linkedin  اتصال باحدهم قم بالبحث في &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%D9%85%D8%A7%D8%B0%D8%A7-%D9%8A%D8%AD%D8%B5%D9%84-%D8%A7%D9%86-%D9%84%D9%85-%D8%A7%D9%82%D8%A8%D9%84-%D9%81%D9%8A-%D8%A7%D9%84%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D8%AC"&gt;
  &lt;/a&gt;
  ماذا يحصل ان لم اقبل في البرنامج
&lt;/h2&gt;

&lt;p&gt;البرنامج تنافسي ، ولن يتم قبول الجميع في طلبهم الأول. وهذا جيد&lt;/p&gt;

&lt;p&gt;يتم إعادة فتح جولات الطلبات مرتين في السنة ، لذلك سيكون هناك المزيد من الفرص. باستخدام بعض النصائح من المقالة والنصائح من بناة المجتمع الآخرين ، يمكنك أيضًا تعزيز تطبيقك في المرة القادمة. فرصتك في النجاح تتحسن فقط&lt;/p&gt;

&lt;p&gt;في الاخير لا تردد في سؤالي اذا كان لديك اي استفسار&lt;/p&gt;

</description>
      <category>aws</category>
      <category>career</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Built-In Angular Pipes - DecimalPipe - Part 3</title>
      <author>Anubhab Mukherjee</author>
      <pubDate>Wed, 05 Jan 2022 17:15:40 +0000</pubDate>
      <link>https://dev.to/this-is-angular/built-in-angular-pipes-decimalpipe-part-3-33p1</link>
      <guid>https://dev.to/this-is-angular/built-in-angular-pipes-decimalpipe-part-3-33p1</guid>
      <description>&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;oday we will continue with the remaining built in Angular pipes. If you are not aware of pipe I would recommend you to go through the &lt;a href="https://dev.to/this-is-angular/built-in-angular-pipes-part-1-23ec"&gt;post&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;&lt;code&gt;DecimalPipe&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The DecimalPipe is used to format a value/ number as per the required decimal digits and locale information.&lt;/p&gt;

&lt;p&gt;The name of the pipe is &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;{{ value | number [ : digitsInfo [ : locale ] ] }}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Present in the &lt;code&gt;Common Module&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-input-value"&gt;
  &lt;/a&gt;
  The Input value
&lt;/h3&gt;

&lt;p&gt;Input Value which the pipe accepts must be either in &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-parameter"&gt;
  &lt;/a&gt;
  The Parameter
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;digitsInfo&lt;/code&gt;&lt;br&gt;
It is of type &lt;code&gt;string&lt;/code&gt;.&lt;br&gt;
It is used to set the digit and decimal representation.&lt;br&gt;
It is Optional.&lt;br&gt;
Default value is undefined.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;locale&lt;/code&gt;&lt;br&gt;
It is of type string.&lt;br&gt;
It specifies what locale format that will be implemented.&lt;br&gt;
It is Optional.&lt;br&gt;
Default value is undefined.&lt;/p&gt;

&lt;p&gt;The digitsInfo follows the following format -&lt;br&gt;
&lt;code&gt;{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;minIntegerDigits&lt;/code&gt;&lt;br&gt;
Minimum number of integer digits before the decimal point.&lt;br&gt;
Default value is 1.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;minFractionDigits&lt;/code&gt;&lt;br&gt;
Minimum number of digits allowed after the decimal point.&lt;br&gt;
Default is 0.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;maxFractionDigits&lt;/code&gt;&lt;br&gt;
Maximum number of digits allowed after the decimal point.&lt;br&gt;
Default is 3.&lt;/p&gt;

&lt;p&gt;Now, lets see in practice. Lets open the component.ts file -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2MdG8dUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6h986m6wqhn9dkew7sc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2MdG8dUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6h986m6wqhn9dkew7sc.PNG" alt="Image description" width="509" height="284"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And add a variable &lt;code&gt;pi&lt;/code&gt; and assign the value &lt;u&gt;3.14159&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  pi = 3.14159;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in the corresponding template file lets add the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h2&amp;gt;Decimal Pipe&amp;lt;/h2&amp;gt;

&amp;lt;h4&amp;gt;Without the pipe&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;{{ pi }}&amp;lt;/p&amp;gt;
&amp;lt;hr /&amp;gt;
&amp;lt;h4&amp;gt;Default Decimal Pipe&amp;lt;/h4&amp;gt;
&amp;lt;p&amp;gt;{{ pi | number }}&amp;lt;/p&amp;gt;
&amp;lt;hr /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will see the below output -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gbrvp7NV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7997prub6pd8jbze3d2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gbrvp7NV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g7997prub6pd8jbze3d2.PNG" alt="Image description" width="236" height="301"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So here in the above output we can see when we display the value of &lt;code&gt;pi&lt;/code&gt; without any pipe it shows the entire value. But when we use the decimal pipe the number of digits after decimal becomes &lt;strong&gt;3&lt;/strong&gt; and does the rounding off too.&lt;/p&gt;

&lt;p&gt;Now lets see the &lt;code&gt;digitsInfo&lt;/code&gt; parameter in detail-&lt;/p&gt;

&lt;p&gt;Lets paste in the below code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h4&amp;gt;digitsInfo Example&amp;lt;/h4&amp;gt;

&amp;lt;p&amp;gt;
  Here number of digits before decimal is 1. &amp;lt;br&amp;gt;
  Minimum number of digits after decimal is 1 &amp;lt;br&amp;gt;
  Maximum numberof digits after decimal is 2 &amp;lt;br&amp;gt;
  &amp;lt;i&amp;gt;Output- &amp;lt;/i&amp;gt;
  &amp;lt;b&amp;gt;{{ pi | number: "1.1-2" }}&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  Here number of digits before decimal is 3. 
Since the value has only one digit so the remaining 
digits are covered by 0.&amp;lt;br&amp;gt;
  Minimum number of digits after decimal is 2. &amp;lt;br&amp;gt;
  Maximum numberof digits after decimal is 4. 
Number of digits shown after decimal is 4. &amp;lt;br&amp;gt;
  &amp;lt;i&amp;gt;Output- &amp;lt;/i&amp;gt;
  &amp;lt;b&amp;gt;{{ pi | number: "3.2-4" }}&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  No digits after the Decimal Point. &amp;lt;br&amp;gt;
  &amp;lt;i&amp;gt;Output- &amp;lt;/i&amp;gt;
  &amp;lt;b&amp;gt;{{ pi | number: "1.0-0" }}&amp;lt;/b&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the output for the above code you would see - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6B6oz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j44wxh4qjcp273mtbelh.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LS6B6oz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j44wxh4qjcp273mtbelh.PNG" alt="Image description" width="766" height="279"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for now. &lt;br&gt;
Coming up the remaining pipes in the next post.&lt;br&gt;
So stay tuned...&lt;br&gt;
Hope you enjoyed the post if yes do like share and comment!!!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cheers&lt;/strong&gt;!!!&lt;br&gt;
&lt;em&gt;Happy Coding&lt;/em&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>pipe</category>
    </item>
    <item>
      <title>🔥 Serverless boilerplate with TypeScript and Express [Open Source] 🚀</title>
      <author>Remi W.</author>
      <pubDate>Wed, 05 Jan 2022 16:50:09 +0000</pubDate>
      <link>https://dev.to/ixartz/serverless-boilerplate-with-typescript-and-express-open-source-3h0l</link>
      <guid>https://dev.to/ixartz/serverless-boilerplate-with-typescript-and-express-open-source-3h0l</guid>
      <description>&lt;p&gt;A Serverless boilerplate to build a backend in Express JS with TypeScript. Built with developer-experience in mind with ESLint, Prettier, Husky and Lint-Staged to help you writing high-quality code.&lt;/p&gt;

&lt;p&gt;It also includes VSCode integration for better debugging session.&lt;/p&gt;

&lt;p&gt;The Serverless starter code supports several features like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;⚡️ Offline support&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;⚙️ Environment variable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;🚀 Production-ready&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✨ Live reload&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Serverless-Boilerplate-Express-TypeScript"&gt;
        Serverless-Boilerplate-Express-TypeScript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Boilerplate and Starter for Serverless framework, ExpressJS and TypeScript ⚡️ Made with developer experience first: Serverless framework + Live reload + Offline support + ExpressJS + TypeScript + ESLint + Prettier + Husky + Lint-Staged + Dotenv + VSCode
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Serverless Boilerplate with Serverless Framework, ExpressJS and TypeScript &lt;a href="https://twitter.com/ixartz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22898de970db41d476e65546387c7b5147565904f1a4197980bb0e3eb30eb8ab/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f636c6f7564706f7373652e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f7725323025343049786172747a" alt="Twitter"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rh5YlA6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://repository-images.githubusercontent.com/341987132/6a6a5100-777a-11eb-8b21-8c8c71881eb2" alt="Serverless Boilerplate Banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;🚀 Serverless Boilerplate is starter code for your backend and REST API based on Serverless framework with Express JS and TypeScript. ⚡️ Made with Serverless framework, Live reload, Offline support, ExpressJS, TypeScript, ESLint, Prettier, Husky, Lint-Staged, Dotenv, VSCode.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own backend.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
🔥 &lt;a href="https://www.serverless.com" rel="nofollow"&gt;Serverless framework&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
📖 Local support with Serverless Offline&lt;/li&gt;
&lt;li&gt;
⚙️ Environment variable with Serverless Dotenv&lt;/li&gt;
&lt;li&gt;
⚡️ &lt;a href="http://expressjs.com" rel="nofollow"&gt;ExpressJS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🎉 Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt; with strict mode&lt;/li&gt;
&lt;li&gt;
✏️ Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt; with Airbnb configuration&lt;/li&gt;
&lt;li&gt;
🛠 Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🦊 Husky for Git Hooks&lt;/li&gt;
&lt;li&gt;
🚫 Lint-staged for running linters on Git staged files&lt;/li&gt;
&lt;li&gt;
🗂 VSCode configuration: Debug, Settings, Tasks and extension for ESLint, Prettier, TypeScript&lt;/li&gt;
&lt;li&gt;
✨ HTTP Api instead of API gateway for cost optimization&lt;/li&gt;
&lt;li&gt;
💨 Live reload&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Philosophy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Minimal code&lt;/li&gt;
&lt;li&gt;
🚀 Production-ready&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Nextless.js SaaS Boilerplate&lt;/h3&gt;

&lt;p&gt;Building your SaaS product faster with…&lt;/p&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Serverless-Boilerplate-Express-TypeScript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;I use this boilerplate to build all my backend projects. Perfect to start any backend projects like building a REST Api in Serverless.&lt;/p&gt;

&lt;p&gt;Fully managed without any server maintenance. No need to learn or use Docker. Highly scalable and keep your cost low.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fullstack-serverless-saas-application"&gt;
  &lt;/a&gt;
  Full-stack serverless SaaS application
&lt;/h2&gt;

&lt;p&gt;If you want to build a SaaS application faster and better without losing your time configuring and installing dependencies, I have built a &lt;a href="https://nextlessjs.com"&gt;Serverless SaaS Boilerplate&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It includes everything you need to launch your SaaS in 1 month with authentication, subscription payment, user dashboards, landing pages, form management, infrastructure as code, etc. A full-stack application, 100% Serverless written in TypeScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextlessjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1qKLlCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/nextless-react-saas-boilerplate.png" alt="Serverless SaaS Boilerplate" width="720" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>serverless</category>
    </item>
  </channel>
</rss>
