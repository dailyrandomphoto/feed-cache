<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>6 Different Ways I Make Money as a Software Developer  -  You Can Too</title>
      <author>Sunil Kumar</author>
      <pubDate>Sat, 17 Apr 2021 15:28:02 +0000</pubDate>
      <link>https://dev.to/sunilc_/6-different-ways-i-make-money-as-a-software-developer-you-can-too-6nd</link>
      <guid>https://dev.to/sunilc_/6-different-ways-i-make-money-as-a-software-developer-you-can-too-6nd</guid>
      <description>&lt;p&gt;I wanted to make money on the internet for years, but I didn't know how to get started.&lt;/p&gt;

&lt;p&gt;Being a Software Developer is like a super power. The skill provides abundant opportunities to make money on the internet. You can literally change your life with this one skill. Although most of us learn how to code &amp;amp; build software as part of academia and then work in big MNCs, we still don't know the endless possibilities the skill offers.&lt;/p&gt;

&lt;p&gt;In this article I'll share the 6 different ways I made money from and how can do it too.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Professional Developer&lt;/li&gt;
&lt;li&gt;Freelancing&lt;/li&gt;
&lt;li&gt;Affiliate Marketing&lt;/li&gt;
&lt;li&gt;Blogging&lt;/li&gt;
&lt;li&gt;Info Products&lt;/li&gt;
&lt;li&gt;Bootstrapping a SaaS Product&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#1-professional-developer"&gt;
  &lt;/a&gt;
  1. Professional Developer
&lt;/h3&gt;

&lt;p&gt;This is the obvious choice everyone knows about. Software Developer is a lucrative job and you can make a lot of money if you stick with this for a long time. Software industry is surging and right now there's a huge demand for good software developers. So if you're a good developer, you can definitely be employed by one of the top paying companies like Google, Facebook, Atlassian etc.&lt;/p&gt;

&lt;p&gt;This path is becoming less popular nowadays with the boom of creator economy. More people want to step away from the 9-5 rate race &amp;amp; want to have the freedom and start their own businesses even if they make less money initially.&lt;/p&gt;

&lt;p&gt;But if you're okay with working for someone else throughout your career and lead a comfortable life, then this is definitely an option you should consider.&lt;/p&gt;

&lt;p&gt;I'm currently working as a Team Lead myself in Startup in India and getting paid good salary. But I do not want to continue working for someone else forever. I want to build a business of my own and retire early. To achieve this in the long term I'm working on the below ideas to make money on the side. Let's discuss about each of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-freelancing"&gt;
  &lt;/a&gt;
  2. Freelancing
&lt;/h3&gt;

&lt;p&gt;Getting started with freelancing is not easy. Everyone knows that. You know that some people are making hell lot of money through freelancing, charging thousand dollars to multiple clients building websites every month. But most people don't know how to get started with freelancing.&lt;/p&gt;

&lt;p&gt;There are many platforms where you can start your freelancing journey:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Toptal&lt;/li&gt;
&lt;li&gt;Freelancing .com&lt;/li&gt;
&lt;li&gt;Upwork&lt;/li&gt;
&lt;li&gt;Codementor&lt;/li&gt;
&lt;li&gt;Hubstaff Talent&lt;/li&gt;
&lt;li&gt;Fiverr etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Start with small tasks. For example: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Write a Python script to scrape top 10 results from google dot com.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find such tasks on all the above platforms. &lt;/p&gt;

&lt;p&gt;Remember that it's not easy to find your first task. I had given up on freelancing numerous times in the past after applying for countless jobs without getting any conversion. Finally in September 2019 Codementor helped me earn my first dollars through freelancing on the internet. If you want to get started with Codementor, &lt;a href="https://sunilkumarc.in/kick-start-your-freelancing-career-with-these-tips"&gt;here&lt;/a&gt;'s an article for you.&lt;/p&gt;

&lt;p&gt;Start slow. Once you gain the confidence to talk to people, convince them to give you tasks, try to scale your freelancing business. Try to find bigger projects which can span multiple months. I know this is not easy. But if you can do this, it can give you the flexibility &amp;amp; freedom you always wanted from your 9-5 job.&lt;/p&gt;

&lt;p&gt;I have been making good money on the side from freelancing. I'm mainly active on Codementor &amp;amp; trying to get into Toptal now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-affiliate-marketing"&gt;
  &lt;/a&gt;
  3. Affiliate Marketing
&lt;/h3&gt;

&lt;p&gt;Affiliate Marketing is one of the easiest ways to make money on the internet. But without an audience or a social media following it can be difficult.&lt;/p&gt;

&lt;p&gt;Here you basically earn a commission by selling someone else's product to people through your unique link. The thing I love about affiliate marketing is that you don't need to have a product of your own. You can sell the already proven and loved products &amp;amp; make a commission.&lt;/p&gt;

&lt;p&gt;Companies like Gumroad are really revolutionising the creator economy with more and more people creating info products every single day. You can find these creators on social media channels like Twitter, Instagram etc. You can DM them and ask them if they're open to add you as an affiliate for their products. Once they add you, you get a unique link which you can then share with your audience and make sales.&lt;/p&gt;

&lt;p&gt;But It's not as simple as it sounds. There are challenges with this business, just like with any other. To sell products to more people you need to have a good online presence, basically a list of people who follow you, trust you and want to buy products from you.&lt;/p&gt;

&lt;p&gt;Building an online presence is a slow process and takes time. You need to consistently provide value for free for a long period of time to build a significant follower base. I have been growing my Twitter presence from the past 10 months. I had around 150 followers when I started. At the time of writing this articles I have 17.1k followers on my Twitter &lt;a href="https://twitter.com/sunilc_"&gt;account&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have made around 2.6k USD on &lt;a href="https://gumroad.com/sunilkumarc"&gt;Gumroad&lt;/a&gt; from the past 8 months, mainly promoting products on Twitter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X1Q83wwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618579957482/eB3jV8Wzv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1Q83wwP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618579957482/eB3jV8Wzv.png" alt="Screenshot 2021-04-16 at 7.01.49 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right now I'm trying to scale this income by applying new strategies. Let's see where it takes me in the next couple of months.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-blogging"&gt;
  &lt;/a&gt;
  4. Blogging
&lt;/h3&gt;

&lt;p&gt;Blogging is another great way to make money on the internet. Many people think that blogs are dead and nobody reads articles anymore in a world where YouTube is famous. But that's not the case at all. &lt;/p&gt;

&lt;p&gt;People do read articles and you can still try blogging if you're not comfortable with talking in front of a camera.&lt;/p&gt;

&lt;p&gt;There are many ways to make money through blogging. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Medium partner program&lt;/li&gt;
&lt;li&gt;Freelance writer&lt;/li&gt;
&lt;li&gt;Affiliate marketing&lt;/li&gt;
&lt;li&gt;Paid articles etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Medium partner program is one of the popular platforms for beginners to start making money. Of course you will earn less in the beginning. But if you are consistent you can make a lot of money in the long run. Some of the top writers on Medium make more than 25k USD per month on Medium partner program. In fact the money you make per view is more than you make on YouTube!&lt;/p&gt;

&lt;p&gt;You can see how Shelby was able to make money from Medium Partner Program without any prior experience in these videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aZqG2ESJUaw"&gt;Making Money Online Writing for Medium... Is It Worth Your Time?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EGQn7xg2kSs"&gt;I made $6,000 from my Medium.com article... an update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I've started writing articles on &lt;a href="https://sunilc.medium.com"&gt;Medium&lt;/a&gt; and have made very little money so far. But this is still the beginning &amp;amp; I'm happy with the way things are going. Here are my earning for the month of April 2021 so far.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gDCE-6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618582157175/HRR0R7hcD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gDCE-6p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618582157175/HRR0R7hcD.png" alt="Screenshot 2021-04-16 at 7.39.06 PM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-info-products"&gt;
  &lt;/a&gt;
  5. Info Products
&lt;/h3&gt;

&lt;p&gt;As mentioned earlier the creator economy is booming and more people are creating info products and making a living out it, every single day.&lt;/p&gt;

&lt;p&gt;Basically you create info products like ebooks which can be as small as 10 pages to a couple of hundred pages or a video course etc.&lt;/p&gt;

&lt;p&gt;Pick any niche you know something about and create an info product in that. You don't need to be an expert in the area to do this. You can research on the things you're not clear about. Basically people are willing to pay for anything which they can learn from or solves their problems. &lt;/p&gt;

&lt;p&gt;For example so many people want to make money through freelancing but most of them struggle to find their first task. Having freelancing experience on my side, I can create a small ebook which covers how to get that first task and start making money. This information can be valuable to many people and they will pay for such a product.&lt;/p&gt;

&lt;p&gt;The good thing about info products is that it's a one time effort to create the product and you can make money for life with minimal effort for occasional marketing.&lt;/p&gt;

&lt;p&gt;For instance &lt;a href="https://twitter.com/dvassallo"&gt;Daniel Vassallo&lt;/a&gt; has made around 350k USD from 2 of his products in around 2 years after quitting his job at Amazon. &lt;br&gt;
&lt;a href="https://twitter.com/dvassallo/status/1379690025177124867"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fg6CWsaK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618595858240/dQos8sieP.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are so many successful people on Twitter who are killing it with their info products on Twitter. After getting inspired by Daniel's journey even I started building an audience and released my &lt;a href="https://gum.co/joCkt"&gt;ebook&lt;/a&gt; for free in December 2020. These are the stats at the time of writing this article:&lt;/p&gt;

&lt;p&gt;Downloads: 1639 copies &lt;br&gt;&lt;br&gt;
Revenue: 150.99 USD &lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eNPRDrnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618646566907/zQQjhpOgK.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eNPRDrnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618646566907/zQQjhpOgK.jpeg" alt="developer-wisdom-stats.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though the ebook is available for free, so many people still decided to pay for it because they want to support my work and appreciate all the valuable free content I post on Twitter every single day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-bootstrapping-a-saas-product"&gt;
  &lt;/a&gt;
  6. Bootstrapping a SaaS Product
&lt;/h3&gt;

&lt;p&gt;Bootstrapping SaaS products is another popular way to make money on the internet. Basically the idea here is to build a small product which solves a niche problem and sell it to users. This doesn't follow the typical startup path where the plan is to raise funds, build a team and scale it to a billion dollar company.&lt;/p&gt;

&lt;p&gt;Here you mainly focus on keeping the team small. Typically between 1-5 people taking care of the complete product. &lt;/p&gt;

&lt;p&gt;The main idea behind bootstrapping is to get the freedom from working for someone else and work on something you love.&lt;/p&gt;

&lt;p&gt;Bootstrapping a business is typically not easy (at least for me it wasn't!). You need to find a niche problem, validate the idea, see if people are willing to pay for such a product, build an MVP and finally market it and make money.&lt;/p&gt;

&lt;p&gt;Most people make the mistake of starting to build the product without validating the idea first. I made this mistake and built a product which I thought was cool and later realised that there was no demand for it. Do not make this mistake.&lt;/p&gt;

&lt;p&gt;If you want to go this way, you should follow these people and see how they are building indie businesses online:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/levelsio"&gt;Pieter Levels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/arvidkahl"&gt;Arvid Kahl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Arvid has a lot of resources on building bootstrapped businesses on his &lt;a href="https://thebootstrappedfounder.com"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was also so inspired by Peiter's talk &lt;a href="https://www.youtube.com/watch?v=6reLWfFNer0"&gt;here&lt;/a&gt; that it made me build my first bootstrapped product &lt;a href="https://landr.page"&gt;Landr&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources:
&lt;/h3&gt;

&lt;p&gt;Here's is a list of all the &lt;a href="https://linktr.ee/sunilkumarc"&gt;courses&lt;/a&gt; I bought in 2020 which have helped me make money on the internet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Internet is a great place to build businesses with Software Developer skills.&lt;/li&gt;
&lt;li&gt;Build an online presence first. Having an online presence will help you see significant results.&lt;/li&gt;
&lt;li&gt;Don't focus on too many ideas at once. Stick to a couple and scale them.&lt;/li&gt;
&lt;li&gt;You will make peanuts in the beginning. Stick with it for a long time to make more money. Compounding is the best thing there is.&lt;/li&gt;
&lt;li&gt;Know that it's not easy to build an online business. Everyone struggles. Only when you are persistent, you will be successful at it.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;The article was originally published on my blog. You can find it &lt;a href="https://sunilkumarc.in/6-different-ways-i-make-money-as-a-software-developer-you-can-too"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can connect with me on &lt;a href="https://twitter.com/sunilc_"&gt;twitter&lt;/a&gt; where I usually share my knowledge more frequently on AWS concepts, building SaaS products and becoming a better developer in general.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>career</category>
      <category>startup</category>
      <category>learning</category>
    </item>
    <item>
      <title>#6 of 100DaysOfCode</title>
      <author>atulit023</author>
      <pubDate>Sat, 17 Apr 2021 14:50:08 +0000</pubDate>
      <link>https://dev.to/icecoffee/6-of-100daysofcode-47ge</link>
      <guid>https://dev.to/icecoffee/6-of-100daysofcode-47ge</guid>
      <description>&lt;p&gt;Today was a regular day. All thanks to closures I was only able to learn just one new concept.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#higherorder-components-in-react"&gt;
  &lt;/a&gt;
  Higher-Order Components in React
&lt;/h3&gt;

&lt;p&gt;Those are basically nothing but Higher-order functions.&lt;/p&gt;

&lt;p&gt;So Higher-Order Components basically takes one component as input do something with it and return a new component and components are basically functions returning JSX markup (type of return value).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;EnhancedComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;higherOrderComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ComponentToBeWrapped&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is the code that shows beautiful use of closures.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Speakers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;speakers&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;speakers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt; &lt;span class="nx"&gt;imageSrc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/images/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;imageSrc&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.png`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;imageSrc&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/img&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;})}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;withData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;maxSpeakersToShow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;speakers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;imageSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;speaker-component-1124&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Douglas Crockford&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;imageSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;speaker-component-1530&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tamara Baker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;imageSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;speaker-component-10803&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Eugene Chuvyrov&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// This is the place where magic happens&lt;/span&gt;
      &lt;span class="c1"&gt;// How can this function access Components if its parent function have already executed?&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="nx"&gt;speakers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;speakers&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Component&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Speakers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/*
Speakers are nothing but just the people who are supposed to give a presentation on the given day, like a regular TED talk.
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And my beautiful friends, I present Mr. Closure in front of you.&lt;/p&gt;

&lt;p&gt;Returned child function can access environment variables of its parent and hence it can get the job done.&lt;/p&gt;

&lt;p&gt;Hope this might have helped in any way.&lt;br&gt;
Thanks for reading.😀😀&lt;br&gt;
Have a beautiful day.🌼&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Launch A Multi-node Kubernetes Cluster Using Vagrant And KVM</title>
      <author>Vu Dao</author>
      <pubDate>Sat, 17 Apr 2021 14:49:01 +0000</pubDate>
      <link>https://dev.to/vumdao/launch-a-multi-node-kubernetes-cluster-using-vagrant-and-kvm-2pm</link>
      <guid>https://dev.to/vumdao/launch-a-multi-node-kubernetes-cluster-using-vagrant-and-kvm-2pm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#whats-in-this-document"&gt;
  &lt;/a&gt;
  What’s In This Document
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-Create-Vagrantfile"&gt;Create Vagrantfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Bootstrap-script-for-master-and-worker-nodes"&gt;Bootstrap script for master and worker nodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Bootstrap-a-Kubernetes-cluster-using-Kubeadm"&gt;Bootstrap a Kubernetes cluster using Kubeadm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Join-nodes-to-Kubernetes-cluster"&gt;Join nodes to Kubernetes cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Vagrant-up-and-check-result"&gt;Vagrant up and check result&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#create-vagrantfile"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Create-Vagrantfile"&gt;Create Vagrantfile&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Following is to create 1 master + 2 slaves (libvirt driver KVM)&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.provider :libvirt do |libvirt|
        libvirt.driver = "kvm"
    end
    config.vm.synced_folder './shared', '/vagrant', type: '9p', disabled: false, accessmode: "mapped"
    config.vm.box = "generic/ubuntu2004"
    config.vm.box_version = "3.0.6"
    config.vm.network "forwarded_port", guest: 5432, host: 5432
    config.vm.provision:shell, inline: &amp;lt;&amp;lt;-SHELL
        echo "root:rootroot" | sudo chpasswd
        sudo timedatectl set-timezone Asia/Ho_Chi_Minh
    SHELL

    config.vm.define "kube1" do |kube1|
        kube1.vm.hostname = "kube1"
        kube1.vm.network "private_network", ip: "192.168.121.211"
        kube1.vm.provision:shell, inline: &amp;lt;&amp;lt;-SHELL
            sudo echo -e "192.168.121.211\tkube1" &amp;gt;&amp;gt; /etc/hosts
        SHELL
        kube1.vm.provision:shell, path: "kube-bootstrap.sh"
    end

    config.vm.define "kube2" do |kube2|
        kube2.vm.hostname = "kube2"
        kube2.vm.network "private_network", ip: "192.168.121.212"
        kube2.vm.provision:shell, inline: &amp;lt;&amp;lt;-SHELL
            sudo echo -e "192.168.121.212\tkube2" &amp;gt;&amp;gt; /etc/hosts
        SHELL
        kube2.vm.provision:shell, path: "kube-bootstrap.sh"
    end

    config.vm.define "master" do |master|
        master.vm.hostname = "master"
        master.vm.network "private_network", ip: "192.168.121.210"
        master.vm.provision:shell, inline: &amp;lt;&amp;lt;-SHELL
            sudo sed -i 's/127\.0\.1\.1.*master//' /etc/hosts
            sudo echo -e "192.168.121.210\tmaster" &amp;gt;&amp;gt; /etc/hosts
        SHELL
        master.vm.provision:shell, path: "kube-bootstrap.sh"
        master.vm.provision:shell, path: "kubeadm_reinstall.sh"
    end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You can configure as many masters and slaves as you like.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# master
kube1.vm.network "private_network", ip: "192.168.121.210"

# kube1
kube1.vm.network "private_network", ip: "192.168.121.211"

# kube2
kube2.vm.network "private_network", ip: "192.168.121.212"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bootstrap-script-for-master-and-worker-nodes"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Bootstrap-script-for-master-and-worker-nodes"&gt;Bootstrap script for master and worker nodes&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/bash
# Bootstrap machine

ensure_netplan_apply() {
    # First node up assign dhcp IP for eth1, not base on netplan yml
    sleep 5
    sudo netplan apply
}

step=1
step() {
    echo "Step $step $1"
    step=$((step+1))
}

resolve_dns() {
    step "===== Create symlink to /run/systemd/resolve/resolv.conf ====="
    sudo rm /etc/resolv.conf
    sudo ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf
}

install_docker() {
    step "===== Installing docker ====="
    sudo apt update
    sudo apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io
    sudo groupadd docker
    sudo gpasswd -a $USER docker
    sudo chmod 777 /var/run/docker.sock
}

install_kube() {
    step "===== Installing kube ====="
    sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    sudo apt update
    sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
    sudo apt install -y kubeadm
    sudo swapoff -a
    sudo echo "source &amp;lt;(kubectl completion bash)" &amp;gt;&amp;gt; /home/vagrant/.bashrc
    sudo echo "source &amp;lt;(kubeadm completion bash)" &amp;gt;&amp;gt; /home/vagrant/.bashrc
}

setup_root_login() {
    step "===== Setup root login ====="
    sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    sudo systemctl restart ssh
    sudo echo "root:rootroot" | chpasswd
}

setup_welcome_msg() {
    step "===== Bash ====="
    sudo apt -y install cowsay
    sudo echo -e "\necho \"Welcome to Vagrant Kube Ubuntu 18.04\" | cowsay\n" &amp;gt;&amp;gt; /home/vagrant/.bashrc
    sudo ln -s /usr/games/cowsay /usr/local/bin/cowsay
    sudo apt install -y tcl expect net-tools
}

main() {
    ensure_netplan_apply
    resolve_dns
    install_docker
    install_kube
    setup_root_login
    setup_welcome_msg
}

main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bootstrap-a-kubernetes-cluster-using-kubeadm"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Bootstrap-a-Kubernetes-cluster-using-Kubeadm"&gt;Bootstrap a Kubernetes cluster using Kubeadm&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/bash
# Reset and start kubeadm

echo "Enter password:"
read -s PASSWORD

sudo_expect() {
    command="sudo $1"
    cat &amp;gt; /tmp/tmp.exp &amp;lt;&amp;lt;EOF
#!/usr/bin/expect
set password [lindex \$argv 0]
set cmd [lrange \$argv 1 end]

spawn {*}\$cmd

expect {
    "password" {
        send "\$password\r"
        exp_continue
    }
    "Are you sure you want to proceed?" {
        send "y\r"
        exp_continue
    }
    eof {
        exit
    }
}

interact
EOF

    expect /tmp/tmp.exp $PASSWORD $command
}

resestKubeadm() {
    sudo_expect "kubeadm reset -f"
    sudo_expect "iptables -F"
}

initKubeadm() {
    sudo_expect "swapoff -a"
    if [ "$(hostname)" != "master" ]; then
        sudo_expect "hostname master"
    fi
    sudo_expect "rm -rf /var/lib/etcd/member"
    sudo_expect "kubeadm init --node-name master --apiserver-advertise-address $(hostname -i)"
    mkdir -p $HOME/.kube
    rm -f $HOME/.kube/config
    sudo_expect "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"
    sudo_expect "chown $(id -u):$(id -g) $HOME/.kube/config"
    sudo_expect "chmod +wr /etc/kubernetes/admin.conf"
}

kubeAddOn() {
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
}

resestKubeadm
initKubeadm
kubeAddOn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#join-nodes-to-kubernetes-cluster"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Join-nodes-to-Kubernetes-cluster"&gt;Join nodes to Kubernetes cluster&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/bash
# Join remote node to kubernetes cluster

ip=$1
PASSWORD="rootroot"

ssh_expect() {
    command="$1"
    cat &amp;gt; /tmp/tmp.exp &amp;lt;&amp;lt;EOF
#!/usr/bin/expect
set password [lindex \$argv 0]
set cmd [lrange \$argv 1 end]

spawn {*}\$cmd

expect {
    "password" {
        send "\$password\r"
        exp_continue
    }
    "Are you sure you want to proceed?" {
        send "y\r"
        exp_continue
    }
    eof {
        exit
    }
}

interact
EOF

    expect /tmp/tmp.exp $PASSWORD $command
}

# Get token-ca-cert-hash
sha=$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&amp;gt;/dev/null | \
        openssl dgst -sha256 -hex | sed 's/^.* //')

# Get token of master node by creating new one
token=$(kubeadm token create)

# Join the remote node
cluster_ip=$(kubectl get node master -o jsonpath="{.status.addresses[0].address}")
ssh_expect "ssh root@$ip kubeadm reset"
ssh_expect "ssh root@$ip swapoff -a"
ssh_expect "ssh root@$ip kubeadm join ${cluster_ip}:6443 --token ${token} --discovery-token-ca-cert-hash sha256:${sha}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vagrant-up-and-check-result"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Vagrant-up-and-check-result"&gt;Vagrant up and check result&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;UP
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get nodes
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vagrant@master:/vagrant$ kubectl get node
NAME     STATUS   ROLES                  AGE    VERSION
kube1    Ready    &amp;lt;none&amp;gt;                 2d1h   v1.21.0
kube2    Ready    &amp;lt;none&amp;gt;                 2d1h   v1.21.0
master   Ready    control-plane,master   2d1h   v1.21.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;KVM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R3uEsfhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/vagrant/blob/master/kube/k8s_cluster.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R3uEsfhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/vagrant/blob/master/kube/k8s_cluster.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="https://dev.to/vumdao"&gt;🌠 Blog&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://github.com/vumdao/"&gt;Github&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://stackoverflow.com/users/11430272/vumdao"&gt;Web&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/in/vu-dao-9280ab43/"&gt;Linkedin&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/groups/12488649/"&gt;Group&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.facebook.com/CloudOpz-104917804863956"&gt;Page&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://twitter.com/VuDao81124667"&gt;Twitter 🌠&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>k8s</category>
      <category>devops</category>
      <category>cloudopz</category>
      <category>kvm</category>
    </item>
    <item>
      <title>Boat 441 TWS Ear-Bud - 2021 review</title>
      <author>Web_Codr</author>
      <pubDate>Sat, 17 Apr 2021 14:33:06 +0000</pubDate>
      <link>https://dev.to/web_dev/boat-441-tws-ear-bud-2021-review-4he5</link>
      <guid>https://dev.to/web_dev/boat-441-tws-ear-bud-2021-review-4he5</guid>
      <description>&lt;p&gt;&lt;a rel="nofollow" href="https://offers.codewithbishal.com/boat-airdopes-441-tws-ear-buds/"&gt;Click to view the review&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, Boat is creating one of the best Budget-friendly Ear-Buds with great features, best sound quality, and best designing headphones.&lt;/p&gt;

&lt;p&gt;Boat 441 TWS is one of the best earbuds under 2000 rupees you can see the full review here: &lt;a rel="nofollow" href="https://offers.codewithbishal.com/boat-airdopes-441-tws-ear-buds/"&gt;&lt;/a&gt;&lt;a href="https://offers.codewithbishal.com/boat-airdopes-441-tws-ear-buds/"&gt;https://offers.codewithbishal.com/boat-airdopes-441-tws-ear-buds/&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Awesome Ruby on Rails Hotwire Admin Panel</title>
      <author>Eric Chapman</author>
      <pubDate>Sat, 17 Apr 2021 14:08:27 +0000</pubDate>
      <link>https://dev.to/ericchapman/awesome-ruby-on-rails-hotwire-admin-panel-56d2</link>
      <guid>https://dev.to/ericchapman/awesome-ruby-on-rails-hotwire-admin-panel-56d2</guid>
      <description>&lt;h2&gt;Avo Ruby on Rails Admin Panel&lt;/h2&gt;

&lt;p&gt;First, I must say that I am happy to see that the Ruby on Rails community is more alive than ever and continues to produce great products.&lt;/p&gt;

&lt;p&gt;Just in case you have any doubts, no I have no affiliation of any kind with this project :-)&lt;/p&gt;

&lt;p&gt;I came across their site in a discord chat and out of curiosity I decided to go see what was going on.&lt;/p&gt;

&lt;p&gt;My first impression was more than good and that's why I wanted to tell you about it in this post.&lt;/p&gt;

&lt;p&gt;Currently I am working to create a web application with Laravel and I use Laravel Nova every day. Nova is an admin panel for a Laravel application. In fact this is the best admin panel I have used. The design is superb and it is powerful and customizable at will. I no longer count the time I save using this admin panel vs doing everything manually.&lt;/p&gt;

&lt;p&gt;Until now, I thought that Rails had no equivalent (of this quality). I knew a few admin panel. All very good but none of the caliber of Laravel Nova ... That was before I discovered Avo! (&lt;a href="https://avohq.io/"&gt;https://avohq.io/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Avo is the equivalent of Nova but for Ruby on Rails applications. The modern design is rich, flexible and customizable. Moreover, it uses Hotwire in order to make the user experience worthy of a SPA.&lt;/p&gt;

&lt;p&gt;Besides the fact of not using javascript or a framework like vue.js, the customization is done in Ruby, therefore simpler and faster.&lt;/p&gt;

&lt;p&gt;Version 1 should be available shortly. There is a free community version and the full version is $ 99 per business project.&lt;/p&gt;

&lt;p&gt;Curious, see by yourself: &lt;a href="https://avohq.io/"&gt;https://avohq.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bLxWxrQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4u6jfj4sf47ccz8jhqdf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bLxWxrQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4u6jfj4sf47ccz8jhqdf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Thanks for reading this post!&lt;/p&gt;

&lt;p&gt;I am new on twitter so if you want to make me happy&lt;br&gt;
Follow me!: &lt;a href="https://twitter.com/justericchapman?ref_src=twsrc%5Etfw"&gt;Follow @justericchapman&lt;/a&gt;&lt;/p&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Intro to web app using AWS Serverless Architecture</title>
      <author>dev0928</author>
      <pubDate>Sat, 17 Apr 2021 13:54:26 +0000</pubDate>
      <link>https://dev.to/dev0928/intro-to-web-app-using-aws-serverless-architecture-f91</link>
      <guid>https://dev.to/dev0928/intro-to-web-app-using-aws-serverless-architecture-f91</guid>
      <description>&lt;p&gt;Serverless architecture comprises a group of technologies working together as a single unit to deliver a solution. In this write-up, let’s review the involved technologies along with their high level purpose to build a web application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_WUGfhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b94wkskjehhaahhsisko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_WUGfhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b94wkskjehhaahhsisko.png" alt="High level serverless architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Backend&lt;/h3&gt;

&lt;p&gt;Backend is a stand-alone service comprising three main components - Data store, Lambda functions used as a compute service and API Gateway acting as a main backend interface.&lt;/p&gt;

&lt;h4&gt;Data Store / Database&lt;/h4&gt;

&lt;p&gt;Aurora Serverless (PostgreSQL) is one of the options. There are few other serverless database options available to choose from. Data store choice purely depends on the type of data stored within the application.&lt;/p&gt;

&lt;h4&gt;Lambda Functions&lt;/h4&gt; 

&lt;p&gt;Lambda functions with Python could be used on the backend. AWS Lambda supports many other options such as Node.js, Java, .NET Core, PHP.&lt;/p&gt;

&lt;h4&gt;API Gateway&lt;/h4&gt;

&lt;p&gt;API Gateway serves as a gatekeeper to the backend service. API endpoints can be secured and served through the API Gateway. API Gateway leverages lambda functions to perform necessary data processing to serve requests made to the API endpoint. Frontend applications or any other service requiring data can call these API endpoints with required security token to obtain necessary data. &lt;/p&gt;

&lt;h3&gt;Frontend&lt;/h3&gt; 

&lt;p&gt;Frontend framework such as Angular, Vue, React or any other framework could be used to build the frontend website. During deployment, front-end code is built and deployed to &lt;strong&gt;AWS CloudFront&lt;/strong&gt; CDN and served to the end users’ browsers upon request. &lt;/p&gt;

&lt;h3&gt;Security&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS Cognito&lt;/strong&gt; is an Amazon authentication and authorization service. This service also has support for SAML / OAuth2 / Open ID authentication through major Identify providers such as Facebook, Google, Okta.  &lt;/p&gt;

&lt;h3&gt;Supporting Services&lt;/h3&gt;

&lt;p&gt;Besides above mentioned core services, there are many other supporting services involved in the serverless application architecture. Let’s review the purpose of these supporting services.&lt;/p&gt;

&lt;h4&gt;Serverless Framework&lt;/h4&gt; 

&lt;p&gt;Serverless Framework helps develop and deploy serverless applications along with the required infrastructure resources they require. It's a CLI that offers structure, automation and best practices out-of-the-box and helps build sophisticated, event-driven, serverless architecture applications. Framework itself is built with Node.js but it can support multiple languages (Node.js, Python, Java, and more). This framework is cloud-agnostic meaning one can use this framework to develop serverless applications for any cloud provider. &lt;/p&gt;

&lt;p&gt;AWS Serverless Application Model is an alternative option to serverless framework but it is specific to AWS.&lt;/p&gt;

&lt;h4&gt;AWS CloudFormation&lt;/h4&gt;

&lt;p&gt;AWS CloudFormation gives an easy way to model a collection of related AWS resources, provision them quickly and consistently across different environments, and manage them throughout their life cycles, by treating infrastructure as code. Serverless framework’s configuration files describe all of the services that need to be provisioned for a given application.&lt;/p&gt;

&lt;h4&gt;AWS S3&lt;/h4&gt; 

&lt;p&gt;Simple Storage Service(S3) can be used as an intermediate storage for transferring and processing data from external systems. S3 can also be used for storing artifacts during the build and deployment process. &lt;/p&gt;

&lt;h4&gt;IAM&lt;/h4&gt;

&lt;p&gt;Identity and Access Management Service is one of the important services in this solution. This service is mainly used for providing granular access permissions among various services used within the AWS serverless environment.&lt;/p&gt;

&lt;h4&gt;Route 53&lt;/h4&gt;

&lt;p&gt;This service is used for domain registration so deployed applications could be accessed using a user-friendly URL.&lt;/p&gt;

&lt;h4&gt;AWS CloudWatch&lt;/h4&gt;

&lt;p&gt;AWS CloudWatch is a logging service used by other services to log messages within the serverless solution. Messages logged in the service can be used for setting up alerts in case there are errors/issues within the application.   &lt;/p&gt;

&lt;h4&gt;Source Control&lt;/h4&gt; 

&lt;p&gt;&lt;strong&gt;AWS CodeCommit&lt;/strong&gt; is AWS provided solution for source control. Other third party source control solutions such as &lt;strong&gt;Github&lt;/strong&gt; can also be used for source code management.&lt;/p&gt;

&lt;h4&gt;Code Pipeline&lt;/h4&gt;

&lt;p&gt;This AWS solution enables automation of continuous build and deployment of applications.&lt;/p&gt;

&lt;h4&gt;Amazon SNS&lt;/h4&gt;

&lt;p&gt;Simple Notification Service used for event messaging. Events could be notified to multiple interested systems enabling microservices / distributed processing.&lt;/p&gt;

&lt;h4&gt;Amazon SQS&lt;/h4&gt;

&lt;p&gt;Simple Queue Service is a messaging service used for processing events sequentially. This service can scale well and also has facilities for guaranteed delivery of sequenced messages.&lt;/p&gt;

&lt;h4&gt;AWS Systems Manager&lt;/h4&gt;

&lt;p&gt;Systems Manager Parameter Store is used for application’s configuration and secrets management.&lt;/p&gt;

&lt;h4&gt;VPC&lt;/h4&gt;

&lt;p&gt;All of the services configured for the serverless solution would be deployed within the application’s secure Virtual Private Cloud environment. VPC should be configured properly to avoid security holes.&lt;/p&gt;

&lt;h3&gt;Benefits&lt;/h3&gt;

&lt;p&gt;Here are some of the benefits of using serverless architecture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This architecture scales well from few users to thousands of concurrent users.&lt;/li&gt;
&lt;li&gt;As there are no dedicated hardware resources provisioned as part of this solution, there is no infrastructure cost around server maintenance and upgrades.&lt;/li&gt;
&lt;li&gt;Also, the services involved in this solution are charged based on usage. This solution could be cost effective if configured properly.
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Further Learning&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/getting-started/deep-dive-serverless/"&gt;https://aws.amazon.com/getting-started/deep-dive-serverless/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.serverless.com/learn/"&gt;https://www.serverless.com/learn/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Aprendizados da programação aplicados a vida</title>
      <author>Ed</author>
      <pubDate>Sat, 17 Apr 2021 13:09:06 +0000</pubDate>
      <link>https://dev.to/guynikan/aprendizados-da-programacao-aplicados-a-vida-47h4</link>
      <guid>https://dev.to/guynikan/aprendizados-da-programacao-aplicados-a-vida-47h4</guid>
      <description>&lt;p&gt;Durante minha trajetória em desenvolvimento de software, muitas vezes o que eu aprendia sobre a disciplina eu conseguia aplicar na minha vida pessoal e vice versa.&lt;/p&gt;

&lt;p&gt;Pra mim, foram conhecimentos bem úteis e que me ajudaram a lidar da melhor forma com muitas questões que antes eram bem difíceis.&lt;/p&gt;

&lt;p&gt;Com isso, resolvi então escrever este artigo pra compartilhar algumas dessas lições com vocês.&lt;/p&gt;

&lt;p&gt;Vamos lá!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conhecimento-b%C3%A1sico-de-gerenciamento-de-projetos"&gt;
  &lt;/a&gt;
  Conhecimento básico de gerenciamento de projetos.
&lt;/h2&gt;

&lt;p&gt;Na área de desenvolvimento de software se fala bastante sobre metodologias ágeis, gerenciamento de projetos e por aí vai.&lt;/p&gt;

&lt;p&gt;E talvez não seja a área que você estuda diretamente, mas com certeza será algo que você irá entender as vantagens e saber como aplicar, nem que seja apenas algo inspirado em Kanban ou Scrum.&lt;/p&gt;

&lt;p&gt;Mas com isso você já consegue aproveitar bem e utilizar em outras áreas da sua vida, por exemplo na hora de dividir as tarefas de casa com outras pessoas, ou até mesmo priorizar as suas tarefas do dia a dia.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gJGj5reh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lv94ixjkfpz119q76wa.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJGj5reh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4lv94ixjkfpz119q76wa.jpg" alt="Quadro Kanban"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Essa é uma foto da @barbrabrgs em que ela aplicou a ideia no dia dia, bem legal, né? :)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#entender-o-que-se-deve-fazer"&gt;
  &lt;/a&gt;
  Entender o que se deve fazer
&lt;/h2&gt;

&lt;p&gt;Acho que todo programador sabe da importância de entender o que o cliente quer antes de perder horas desenvolvendo uma funcionalidade inútil.&lt;/p&gt;

&lt;p&gt;Saber fazer as perguntas certas, a fim de entender melhor o que o outro quer, é uma boa habilidade para se ter como desenvolvedor e em geral também. Nossos relacionamentos também pedem isso.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#saber-onde-procurar-as-respostas"&gt;
  &lt;/a&gt;
  Saber onde procurar as respostas
&lt;/h2&gt;

&lt;p&gt;Muitas vezes a sua geladeira pode dar pau do nada 1h da madrugada, acabando com qualquer chance de você recorrer a assistência imediatamente.&lt;/p&gt;

&lt;p&gt;Você pode até esperar o dia seguinte, mas e se a mistura da semana já tiver lá, você não pode arriscar perder (Você já viu o preço da carne!?).&lt;/p&gt;

&lt;p&gt;E aí, o que fazer?&lt;/p&gt;

&lt;p&gt;Google, claro.&lt;/p&gt;

&lt;p&gt;Mas e se você não achar a resposta lá? Bom, talvez ler o manual lhe dê alguma resposta ou talvez não. A assistência ainda está fechada, então não custa nada dar uma olhada, você não vai conseguir dormir por conta da preocupação mesmo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dividir-e-conquistar"&gt;
  &lt;/a&gt;
  Dividir e conquistar
&lt;/h2&gt;

&lt;p&gt;Pelo menos em algum momento do seu trabalho você vai precisar lidar com um problema escabroso que você olha e não sabe nem por onde começar. Talvez depois de surtar um pouco, você perceba que talvez quebrar em várias partes menores vai pelo menos deixar o seu problema menos assustador.&lt;/p&gt;

&lt;p&gt;Além de menos assustador, muitas vezes é o que vai possibilitar a resolução daquele b.o.&lt;/p&gt;

&lt;p&gt;A mesma estratégia pode ser aplicada pra absolutamente qualquer coisa na sua vida, vai por mim.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aten%C3%A7%C3%A3o-aos-detalhes"&gt;
  &lt;/a&gt;
  Atenção aos detalhes
&lt;/h2&gt;

&lt;p&gt;No dia a dia de um desenvolvedor a falta de um simples ponto e vírgula pode fazer você perder algum tempo de trabalho por conta da sua aplicação inteira não estar rodando devidamente.&lt;/p&gt;

&lt;p&gt;Pra não perder esses pequenos detalhes é preciso ter uma atenção extra (Ou então uma ferramenta que faça isso por você, omitir não é uma opção).&lt;/p&gt;

&lt;p&gt;Na vida essa atenção aos detalhes é bem parecida com a habilidade adquirida através da meditação.&lt;/p&gt;

&lt;p&gt;O poder de observar o externo e o interno mas sem se apegar, voltando sempre o seu foco pra sua respiração.&lt;/p&gt;

&lt;p&gt;É um baita exercício mental de como se manter lúcido.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#feito-%C3%A9-melhor-que-perfeito"&gt;
  &lt;/a&gt;
  Feito é melhor que perfeito
&lt;/h2&gt;

&lt;p&gt;No desenvolvimento profissional é preciso conhecer os padrões e aplicar boas práticas de programação.&lt;/p&gt;

&lt;p&gt;Mas só é possível melhorar algo que já existe.&lt;/p&gt;

&lt;p&gt;Então você primeiro cria sua funcionalidade e só depois pensa em refatorar, aplicar padrões etc.&lt;/p&gt;

&lt;p&gt;Se você for do tipo perfeccionista e estiver ficando ansioso com tantos projetos inacabados, com esse aprendizado novo aplicado na sua vida muitas coisas podem mudar, e pra melhor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bases-s%C3%B3lidas"&gt;
  &lt;/a&gt;
  Bases sólidas
&lt;/h2&gt;

&lt;p&gt;Esse item se relaciona diretamente com o item de cima.&lt;br&gt;
Começar é importante, mas é necessário voltar ao começo para construir bases sólidas.&lt;/p&gt;

&lt;p&gt;E ao meu ver, ter a mente aberta sobre qualquer tópico, assumindo que nunca saberá tudo, é o que vai permitir você estar sempre aprendendo sobre ele e consequentemente solidificando cada vez mais suas bases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ingl%C3%AAs"&gt;
  &lt;/a&gt;
  Inglês
&lt;/h2&gt;

&lt;p&gt;Tecnologia é uma área em plena mudança e na maioria das vezes as novidades chegam primeiro em inglês. Após um tempo na área você não vai mais querer ou então poder esperar esse conteúdo ser traduzido.&lt;/p&gt;

&lt;p&gt;Além da relação de obrigação, aprender uma língua estrangeira através de um tópico do seu interesse - no caso a programação - pode não ser o melhor método, mas com certeza é que te levará mais longe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#its-not-a-problem-its-a-challenge"&gt;
  &lt;/a&gt;
  It's not a problem, it's a challenge
&lt;/h2&gt;

&lt;p&gt;Pode ser que você já entrou na área com essa filosofia, eu acho que é algo bem comum entre as pessoas que se interessam por tecnologia.&lt;/p&gt;

&lt;p&gt;Mas também é possível desenvolvê-la e quando isso acontecer, sua visão de mundo será outra, pois agora nada pode te impedir!&lt;/p&gt;

&lt;p&gt;Nada é difícil de mais para ser feito. Claro, isso não significa que você vai sair por aí construindo foguetes. Pode ser só que você não esteja afim de se dedicar a essa finalidade, mas se por algum motivo sua vida depender disso, você sabe que pode dar conta do recado. &lt;del&gt;Se tiver uma documentação, melhor ainda&lt;/del&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pe%C3%A7a-ajuda"&gt;
  &lt;/a&gt;
  Peça ajuda
&lt;/h2&gt;

&lt;p&gt;As vezes o erro está na sua cara, mas por ter sido escrito por você, nada parece estar fora do lugar.&lt;/p&gt;

&lt;p&gt;Nessas horas talvez seja uma boa pedir uma segunda opinião. &lt;br&gt;
E muitas vezes você vai perceber através dos olhos do outro que o erro estava ali o tempo todo, só você não viu.&lt;/p&gt;




&lt;p&gt;E essas são algumas das lições que eu aprendi e que consigo aplicar em outras áreas da minha vida.&lt;/p&gt;

&lt;p&gt;Acredito que existam milhares de outras, tanto por aqui quanto por aí. Então se você quiser compartilhar algumas comigo também, eu vou ficar bem contente!&lt;/p&gt;

&lt;p&gt;Espero que tenham gostado! :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Host Your React.JS Application to Firebase</title>
      <author>Rithik Samanthula</author>
      <pubDate>Sat, 17 Apr 2021 12:36:38 +0000</pubDate>
      <link>https://dev.to/code2rithik/how-to-host-your-react-js-application-to-firebase-2foa</link>
      <guid>https://dev.to/code2rithik/how-to-host-your-react-js-application-to-firebase-2foa</guid>
      <description>&lt;p&gt;Previously I wrote a blog about my portfolio. If you haven't checked it out yet, check it out here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/code2rithik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJQFkaLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GFKV3RMj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571318/596c73a4-b890-49d7-b0fb-5eb141aafd91.png" alt="code2rithik image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/code2rithik/my-new-react-portfolio-is-out-37l7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My New React Portfolio is out!&lt;/h2&gt;
      &lt;h3&gt;Rithik Samanthula ・ Apr 14 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#portfolio&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;In the ending of the post, I mentioned that I deployed my React Application to Firebase. &lt;/p&gt;

&lt;p&gt;Want to know how to do this as well?&lt;/p&gt;

&lt;p&gt;Well today, I am going to be showing you the same.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h1&gt;

&lt;p&gt;In this tutorial, I will be demonstrating how you can deploy your React app using Firebase Hosting. I will assume that you already have a Firebase project set up. If you do not, you can create one using the Firebase Console.&lt;br&gt;
You will also need to ensure have a React app created. For this, I will use Create React App. You can create a new React app by running the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npx create-react-app firebase-hosting-demo&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#1-installing-the-firebase-cli-tools"&gt;
  &lt;/a&gt;
  1. Installing the Firebase CLI Tools
&lt;/h1&gt;

&lt;p&gt;You will need the Firebase CLI Tools in order to deploy your app to the internet.&lt;/p&gt;

&lt;p&gt;You can do this by using the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install firebase-tools -g&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(Don't forget to add the -g flag or else it will not be enabled globally and will set the scope to only &lt;strong&gt;this&lt;/strong&gt; project)&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#2-login-to-firebase"&gt;
  &lt;/a&gt;
  2. Login to Firebase
&lt;/h1&gt;

&lt;p&gt;Login to Firebase console by using:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;firebase login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then, proceed with your google account to login to the Firebase console.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#3-initialize-firebase"&gt;
  &lt;/a&gt;
  3. Initialize Firebase
&lt;/h1&gt;

&lt;p&gt;The next step is to Initialize Firebase with your project using:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;firebase init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You will then be prompted with a series of questions and configuration options that I will walk through with you.&lt;/p&gt;

&lt;p&gt;Select Hosting: Configure and deploy Firebase Hosting sites.&lt;/p&gt;

&lt;p&gt;Then, create a project on the &lt;a href="https://console.firebase.google.com/"&gt;Firebase Console&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, back in the CLI:&lt;/p&gt;

&lt;p&gt;Select Use an existing project&lt;/p&gt;

&lt;p&gt;Then, select your firebase project that you created.&lt;/p&gt;

&lt;p&gt;You will now need to specify the folder where Firebase will look for assets to deploy. By default, Create React App will generate a build folder that will contain the production assets. Unless you changed the default configuration, you’ll want to enter build for this option.&lt;/p&gt;

&lt;p&gt;You will also be asked whether or not Firebase should configure as a single-page app. You’ll want to enter y (Yes) for this option.&lt;/p&gt;

&lt;p&gt;The last option is whether or not Firebase should overwrite your existing build/index.html. If you haven’t created a build for your app yet, then you won’t see this option. You’ll want to enter N (No) for this option, though.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#auto-generated-configuration-files"&gt;
  &lt;/a&gt;
  Auto Generated Configuration files
&lt;/h3&gt;

&lt;p&gt;After you have completed the initialization, you should see 2 new files &lt;code&gt;.firebaserc&lt;/code&gt;, &lt;code&gt;firebase.json&lt;/code&gt;. These files are automatically generated and you will want to save these files, and commit them in your git repo, as they live in your firebase hosting config. You can ignore the .firebase directory for now.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;.firebaserc&lt;/code&gt; should look similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"projects"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"firebase-hosting-demo"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;firebase.json&lt;/code&gt; should look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"hosting"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"public"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ignore"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"firebase.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"**/.*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"**/node_modules/**"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"rewrites"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"source"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"**"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"destination"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/index.html"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#4-deploying-your-app"&gt;
  &lt;/a&gt;
  4. Deploying your App
&lt;/h1&gt;

&lt;p&gt;Now that everything is set up, you can go ahead and deploy your app! All you need to do now is run:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;firebase deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Firebase will then give you a unique URL where your deployed app is located. For example, it might look similar to:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;a href="https://yourprojectid.firebaseapp.com"&gt;https://yourprojectid.firebaseapp.com&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;a href="https://yourprojectid.web.app"&gt;https://yourprojectid.web.app&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And thats pretty much it!&lt;/p&gt;

&lt;p&gt;Thank You for reading my blog and remember...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-yall"&gt;
  &lt;/a&gt;
  Keep Coding Y'All 👨🏻‍💻
&lt;/h1&gt;

</description>
      <category>firebase</category>
      <category>react</category>
      <category>deploy</category>
    </item>
    <item>
      <title>Connecting The Dots: Front-end and Algorithms</title>
      <author>Trung Nguyen</author>
      <pubDate>Sat, 17 Apr 2021 12:36:26 +0000</pubDate>
      <link>https://dev.to/papercoding22/connecting-the-dots-front-end-and-algorithms-2jpc</link>
      <guid>https://dev.to/papercoding22/connecting-the-dots-front-end-and-algorithms-2jpc</guid>
      <description>&lt;p&gt;Last week, I had an interview, there's an algorithm test which I met it again next week when I was working in the current React project.  Instantly, I recognized it and solved it "like eat a cake". This just reminds me one of my favorite quotes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6DUyZvqW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otpr2dywnet67v60t5kp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6DUyZvqW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otpr2dywnet67v60t5kp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-algorithm-dot-merge-intervals"&gt;
  &lt;/a&gt;
  The algorithm dot - Merge Intervals
&lt;/h3&gt;

&lt;p&gt;You can see details here in &lt;a href="https://leetcode.com/problems/merge-intervals/"&gt;LeetCode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Example 1:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;intervals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="nx"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="nx"&gt;Explanation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Since&lt;/span&gt; &lt;span class="nx"&gt;intervals&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;overlaps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="nx"&gt;them&lt;/span&gt; &lt;span class="nx"&gt;into&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example 2:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;intervals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="nx"&gt;Output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="nx"&gt;Explanation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Intervals&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;considered&lt;/span&gt; &lt;span class="nx"&gt;overlapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A picture says a thousand words&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BVaoQRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjvjsfq3koij61zwp1l7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BVaoQRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjvjsfq3koij61zwp1l7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connecting-to-frontend"&gt;
  &lt;/a&gt;
  Connecting to Front-end
&lt;/h3&gt;

&lt;p&gt;So, how this algorithm test I took last week related to my current work. Let's see a gif below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R6A9PF_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/piqt092ekcmygn5rtm7j.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6A9PF_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/piqt092ekcmygn5rtm7j.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A gif says a million words.&lt;/p&gt;

&lt;p&gt;Try it yourself ⇒ &lt;a href="https://codesandbox.io/s/eloquent-bogdan-9lkyr?file=/src/App.js"&gt;codesandbox&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There's a list transactions grouped by date.&lt;/li&gt;
&lt;li&gt;At first load, we only load a few items.&lt;/li&gt;
&lt;li&gt;When users press "Load More" button, we call an api to get more data.&lt;/li&gt;
&lt;li&gt;Data come but in section date "19.10.2021", without merge we see two separate sections.&lt;/li&gt;
&lt;li&gt;Now my mission is to merge theme together. Let's go&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#connecting-the-dots"&gt;
  &lt;/a&gt;
  Connecting The Dots
&lt;/h3&gt;

&lt;p&gt;This is the solution&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// We take the currentList at first load, and the "load more" list.&lt;/span&gt;
    &lt;span class="c1"&gt;// First we just merge it by spread operator =&amp;gt; [...currentList, ...newList]&lt;/span&gt;
    &lt;span class="c1"&gt;// After that we use `Array.prototype.reduce` to generate a new array,&lt;/span&gt;
    &lt;span class="c1"&gt;// Which is merged and grouped by date.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;currentList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;newList&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Condition 1: just push the item to the new empty array, or&lt;/span&gt;
        &lt;span class="c1"&gt;// if the last item in `acc` doesn't have the same date with the current item&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Condition 2: if they have the same date, we merge it. 🤝&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lastItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mergedDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;lastItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="nx"&gt;lastItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transactions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mergedDate&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fakeAPIRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;setMergedList&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cloneDeep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prevList&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;cloneDeep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, this is a little bit different from the algorithm test, but the idea is the same. Now, you can come back to Leetcode and let's solve it by yourself.&lt;/p&gt;

&lt;p&gt;Algorithm test is nightmare sometimes, and we often underestimate because in real-life project we barely think or use it. This experience makes me think differently and inspires me to practice more in next weekends.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>An IDE for Data Science</title>
      <author>Alexander Chichigin</author>
      <pubDate>Sat, 17 Apr 2021 12:03:10 +0000</pubDate>
      <link>https://dev.to/gabrielfallen/an-ide-for-data-science-mpi</link>
      <guid>https://dev.to/gabrielfallen/an-ide-for-data-science-mpi</guid>
      <description>&lt;p&gt;A little over a year ago &lt;a href="https://dev.to/gabrielfallen/what-s-wrong-with-computational-notebooks-44oi"&gt;I stated&lt;/a&gt; somewhat obvious hypothesis that JetBrains develops a specialized IDE for Data Science. Now it's &lt;a href="https://blog.jetbrains.com/blog/2021/03/30/announcing-the-eap-for-jetbrains-dataspell-our-new-data-science-ide/"&gt;official&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>ide</category>
      <category>python</category>
    </item>
    <item>
      <title>Solution: Number of Submatrices That Sum to Target</title>
      <author>seanpgallivan</author>
      <pubDate>Sat, 17 Apr 2021 11:57:33 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-number-of-submatrices-that-sum-to-target-3521</link>
      <guid>https://dev.to/seanpgallivan/solution-number-of-submatrices-that-sum-to-target-3521</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/discuss/1162767"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1074-hard-number-of-submatrices-that-sum-to-target"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/"&gt;Leetcode Problem #1074 (&lt;em&gt;Hard&lt;/em&gt;): Number of Submatrices That Sum to Target&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a &lt;code&gt;matrix&lt;/code&gt; and a &lt;code&gt;target&lt;/code&gt;, return the number of non-empty submatrices that sum to &lt;code&gt;target&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A submatrix &lt;code&gt;x1, y1, x2, y2&lt;/code&gt; is the set of all cells &lt;code&gt;matrix[x][y]&lt;/code&gt; with &lt;code&gt;x1 &amp;lt;= x &amp;lt;= x2&lt;/code&gt; and &lt;code&gt;y1 &amp;lt;= y &amp;lt;= y2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Two submatrices (&lt;code&gt;x1, y1, x2, y2&lt;/code&gt;) and (&lt;code&gt;x1', y1', x2', y2'&lt;/code&gt;) are different if they have some coordinate that is different: for example, if &lt;code&gt;x1 != x1'&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The four 1x1 submatrices that only contain 0.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NI8fXUrt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/09/02/mate1.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;matrix = [[1,-1],[-1,1]], target = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The two 1x2 submatrices, plus the two 2x1 submatrices, plus the 2x2 submatrix.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;matrix = [[904]], target = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= matrix.length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= matrix[0].length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1000 &amp;lt;= matrix[i] &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-10^8 &amp;lt;= target &amp;lt;= 10^8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This problem is essentially a &lt;strong&gt;2-dimensional&lt;/strong&gt; version of &lt;a href="https://leetcode.com/problems/subarray-sum-equals-k/description/"&gt;&lt;strong&gt;#560. Subarray Sum Equals K (S.S.E.K)&lt;/strong&gt;&lt;/a&gt;. By using a &lt;strong&gt;prefix sum&lt;/strong&gt; on each row or each column, we can compress this problem down to either &lt;strong&gt;N^2&lt;/strong&gt; iterations of the &lt;strong&gt;O(M)&lt;/strong&gt; SSEK, or &lt;strong&gt;M^2&lt;/strong&gt; iterations of the &lt;strong&gt;O(N)&lt;/strong&gt; SSEK.&lt;/p&gt;

&lt;p&gt;In the SSEK solution, we can find the number of subarrays with the target sum by utilizing a &lt;strong&gt;result map&lt;/strong&gt; (&lt;strong&gt;res&lt;/strong&gt;) to store the different values found as we iterate through the array while keeping a running sum (&lt;strong&gt;csum&lt;/strong&gt;). Just as in the case with a prefix sum array, the sum of a subarray between &lt;strong&gt;i&lt;/strong&gt; and &lt;strong&gt;j&lt;/strong&gt; is equal to the sum of the subarray from &lt;strong&gt;0&lt;/strong&gt; to &lt;strong&gt;j&lt;/strong&gt; minus the sum of the subarray from &lt;strong&gt;0&lt;/strong&gt; to &lt;strong&gt;i-1&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Rather than iteratively checking if &lt;strong&gt;sum[0,j] - sum[0,i-1] = T&lt;/strong&gt; for every pair of &lt;strong&gt;i, j&lt;/strong&gt; values, we can flip it around to &lt;strong&gt;sum[0,j] - T = sum[0,i-1]&lt;/strong&gt; and since every earlier sum value has been stored in &lt;strong&gt;res&lt;/strong&gt;, we can simply perform a lookup on &lt;strong&gt;sum[0,j] - T&lt;/strong&gt; to see if there are any matches.&lt;/p&gt;

&lt;p&gt;When extrapolating this solution to our &lt;strong&gt;2-dimensional&lt;/strong&gt; matrix (&lt;strong&gt;M&lt;/strong&gt;), we will need to first prefix sum the rows or columns, (which we can do &lt;strong&gt;in-place&lt;/strong&gt; to avoid extra space, as we will not need the original values again). Then we should iterate through &lt;strong&gt;M&lt;/strong&gt; again in the opposite order of rows/columns where the prefix sums will allow us to treat a group of columns or rows as if it were a &lt;strong&gt;1-dimensional&lt;/strong&gt; array and apply the SSEK algorithm.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;There are only minor differences in the code of all four languages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;numSubmatrixSumTarget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;xlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ylen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;ylen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;ylen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;csum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;csum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;numSubmatrixSumTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ylen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ylen&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                    &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;numSubmatrixSumTarget&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[][]&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;].&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ylen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
                &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;clear&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ylen&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getOrDefault&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="no"&gt;T&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getOrDefault&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="o"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numSubmatrixSumTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;ylen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;unordered_map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ylen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;xlen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ylen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;csum&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>My first attempt at micro-SaaS; suggestions and feedback please.</title>
      <author>daltonfury42</author>
      <pubDate>Sat, 17 Apr 2021 11:49:56 +0000</pubDate>
      <link>https://dev.to/daltonfury42/my-first-attempt-at-micro-saas-suggestions-and-feedback-please-4cf6</link>
      <guid>https://dev.to/daltonfury42/my-first-attempt-at-micro-saas-suggestions-and-feedback-please-4cf6</guid>
      <description>&lt;p&gt;One Friday evening, on pre-covid good old days, me and my friends went to a very busy fine dine restaurant in HSR Layout, Bangalore. There was a crowd in front of the restaurant, and two muscular men stood with a notepad, I gave my name and contact number, and we chilled around, occasionally pushing through the crowd to ask if our turn was up.&lt;/p&gt;

&lt;p&gt;Later in the office, there was a free help checkup for all employees, and I went multiple times, only to come back because there was a big queue. Once the lockdown was announced, unable to go outside and chill our weekends, we saw on the TV or when we stepped outside were long queues. &lt;/p&gt;

&lt;p&gt;These few things made me think if there is some generic problem here that we could use technology to solve. Thus was born the idea of Simpl-Q (Simple Queue), a "generic" virtual crowd management website.&lt;/p&gt;

&lt;p&gt;The idea was very simple. Instead of waiting in a queue, enter a link or scan a QR and wait using your smartphone. A virtual waiting room.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;No standing in an unfair physical queue&lt;/li&gt;
&lt;li&gt;No wondering if your turn is approaching.&lt;/li&gt;
&lt;li&gt;Crowded businesses can use the system to make the customer waiting experience more delightful.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I worked on a basic prototype, iterated over it a couple of times (more on that, and some learnings &lt;a href="https://dev.to/daltonfury42/simplq-how-we-went-from-a-hackathon-project-to-a-fully-open-source-project-with-contributors-d0a"&gt;here&lt;/a&gt;), and we have a fully working MVP now: &lt;a href="http://simplq.me/"&gt;http://simplq.me/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SimplQ is not a startup. It is just an idea and a MVP as of now. Honestly, it's more of a hobby project / experiment than a startup idea. We have no plans to monetize it. Our code is open source, we have around 30 active collaborators from around the globe who have contributed to the project. &lt;/p&gt;

&lt;p&gt;I am currently thinking of making an android app that would listen in to events on the queue that the user created (&lt;a href="https://github.com/SimplQ/simplQ-frontend/discussions/496"&gt;here&lt;/a&gt;), and send out SMS in the background to the people when they join the queue. Otherwise thinking of how to market the app and get some real users. &lt;/p&gt;

&lt;p&gt;Thoughts? Looking for any feedback, ideas, or any advice. Thanks.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>react</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
