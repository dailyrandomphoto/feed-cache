<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Management in Linux </title>
      <author>Ayush Bhat</author>
      <pubDate>Sun, 17 Oct 2021 10:45:13 +0000</pubDate>
      <link>https://dev.to/ayush11_bhat/management-in-linux-1743</link>
      <guid>https://dev.to/ayush11_bhat/management-in-linux-1743</guid>
      <description>&lt;p&gt;In this blog we will be exploring the following fields in Linux:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;User Account Management&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Group Management&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File Permissions And Ownership&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-with-user-account-management"&gt;
  &lt;/a&gt;
  Let's start with User Account Management
&lt;/h2&gt;

&lt;p&gt;Question arises why to have different user accounts? To answer this following are some points that we keep in mind.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Each user will have their own individualized private space.&lt;/li&gt;
&lt;li&gt;Will help in distinguishing privileges among users.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note : &lt;strong&gt;root&lt;/strong&gt; user is a special user who is able to do anything on the system.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#attributes-of-a-user"&gt;
  &lt;/a&gt;
  Attributes Of a User
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;UID : It is a unique number that is assigned to the user account. It is also used for determination of user privileges and activity tracking.&lt;/li&gt;
&lt;li&gt;GID : Indicates default group of the user.&lt;/li&gt;
&lt;li&gt;Comment : Using comment field for contact information.&lt;/li&gt;
&lt;li&gt;Home Directory : This is owned by a user and will be found on system under &lt;strong&gt;/home&lt;/strong&gt; directory, except for root.&lt;/li&gt;
&lt;li&gt;Login Shell : Various shells are there e.g. /bin/bash or /bin/csh.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#create-user-accounts"&gt;
  &lt;/a&gt;
  Create user accounts
&lt;/h4&gt;

&lt;p&gt;WHAT actually happens behind the scene when a user account is created let's debug it 😎&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In &lt;strong&gt;/etc/login.defs&lt;/strong&gt; ; the next UID greater than UID_MIN by default is assigned to the new user.&lt;/li&gt;
&lt;li&gt;By default value of UID is assigned to GID.&lt;/li&gt;
&lt;li&gt;Then the home directory for the user is created.&lt;/li&gt;
&lt;li&gt;A login shell is attached with the user.&lt;/li&gt;
&lt;li&gt;The contents of &lt;strong&gt;/etc/skel&lt;/strong&gt; is copied to home directory of user. &lt;strong&gt;Note&lt;/strong&gt; : /etc/skel contains the startup files for bash and for the X Window system.&lt;/li&gt;
&lt;li&gt;Command to create a user named &lt;strong&gt;student&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; useradd -s /bin/bash -m  student
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#deleting-and-modifying-user-account"&gt;
  &lt;/a&gt;
  Deleting and Modifying User Account
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;userdel&lt;/strong&gt; : The root user can remove user accounts using this command. This command doesn't delete the home directory. To delete the home directory use &lt;strong&gt;-r&lt;/strong&gt; option. User reference is removed from &lt;strong&gt;/etc/passwd, /etc/shadow, and /etc/group&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;usermod&lt;/strong&gt; : Change the characteristics of a user account, such as group memberships, home directory, login, name, password, default shell, user id etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#locked-accounts"&gt;
  &lt;/a&gt;
  Locked Accounts
&lt;/h4&gt;

&lt;p&gt;You might be thinking what is locked accounts? To answer this in Linux some accounts are locked means they can run programs but can never login to the system and have no valid password associated with them, such as bin and daemon.&lt;br&gt;
If you look up these entries in the &lt;strong&gt;/etc/passwd&lt;/strong&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To lock a user account&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;usermod -L student
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Unlocking can be done by -U option.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#user-ids-and-etcpasswd"&gt;
  &lt;/a&gt;
  User ID's and /etc/passwd
&lt;/h4&gt;

&lt;p&gt;If we look up in some entries of /etc/passwd we will see the following records. Each record consists of a number of fields separated by colons (:):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;student:x:1006:1008::/home/student:/bin/bash
user1:x:1002:1002:user 1:/home/user1:/bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;username : user's unique name &lt;/li&gt;
&lt;li&gt;password : it can be hashed password or a placeholder ("x")&lt;/li&gt;
&lt;li&gt;UID : User Identification Number&lt;/li&gt;
&lt;li&gt;GID : primary group identification number for the user&lt;/li&gt;
&lt;li&gt;comment : comment area, usually the user's real name&lt;/li&gt;
&lt;li&gt;home : user's home drectory&lt;/li&gt;
&lt;li&gt;shell : name of the shell to be invoked at the login&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#why-to-use-etcshadow-when-etcpasswd-is-available"&gt;
  &lt;/a&gt;
  Why to use /etc/shadow when /etc/passwd is available?
&lt;/h5&gt;

&lt;p&gt;The default permissions in /etc/passwd is &lt;em&gt;644 (-rw-r--r--)&lt;/em&gt;&lt;em&gt;, this make the file vulnerable to attack as anyone can read this file. Tools like Crack, John the ripper can easily exploit this file. &lt;br&gt;
*&lt;/em&gt;/etc/shadow** : provides greater security of hashed passwords, also provides the option of enabling password aging on a per user basis. The permission attached to this file **400 (-r--------), means only root can access this file. Let's see one record from this file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;student:$6$2BDjRtz3.i4hg.bY$/KxesQ.UefXY3dUpvnWf0L6oi24TaPONhqHQgm9g/9IunYY1w2x0jNbuUNuRuvjTcx1Hjk0VUTnjDPKJjqBS51:18917:0:99999:7:::
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This file contains one record for each user.&lt;br&gt;
Colon separated fields are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;username&lt;/li&gt;
&lt;li&gt;password (hashed 512)&lt;/li&gt;
&lt;li&gt;last change : days since Jan 1,1970 that password was last changed.&lt;/li&gt;
&lt;li&gt;mindays : minimum days after which password must be changed.&lt;/li&gt;
&lt;li&gt;maxdays : maximum days after which password must be changed.&lt;/li&gt;
&lt;li&gt;warn : days before password expires that the user is warned.&lt;/li&gt;
&lt;li&gt;grace : days after password expires that account is disabled.&lt;/li&gt;
&lt;li&gt;expire : date that account will be disabled.&lt;/li&gt;
&lt;li&gt;reserved &lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#password-management"&gt;
  &lt;/a&gt;
  Password Management
&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;passwd&lt;/strong&gt; is the command to change the password. Remember, Normal users can change only their own password. Root can change any user password. Normal users will not be allowed to set bad passwords, such as short words. However, root is allowed to do so.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root@ayush:~# passwd student
New password:
Retype new password:
passwd: password updated successfully
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#group-management"&gt;
  &lt;/a&gt;
  Group Management
&lt;/h4&gt;

&lt;p&gt;Linux Systems form collection of users called groups, whose member share some common purpose. They share certain files and directories, and maintain some common privileges; this separates them from others on the system called the world. Groups are defined in &lt;strong&gt;/etc/group&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cat /etc/group
student:x:1008:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;groupname is name of the group&lt;/li&gt;
&lt;li&gt;password is password placeholder&lt;/li&gt;
&lt;li&gt;GID is the group identifier. Values between 0 and 99 are for system groups. Values between 100 and GID_MIN are considered special. Values over GID_MIN are for User Private Groups. Each user will have his or her own group, not guaranteed to be private, this is called UPG(User Private Groups).&lt;/li&gt;
&lt;li&gt;user1, user2 is the list of users who are the members of the group.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#group-management"&gt;
  &lt;/a&gt;
  Group Management
&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;groupadd: Add a new group.&lt;/li&gt;
&lt;li&gt;groupmod: Modify a group and add new users.&lt;/li&gt;
&lt;li&gt;groupdel: Remove a group.&lt;/li&gt;
&lt;li&gt;usermod: Manage a user's group memberships.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's see the demo of it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Step 1 - Create a group
   groupadd -r -g 245 student_grp
2. Step 2 - Add users in the group
   usermod -G  student_grp student
   usermod -G  student_grp user1
3. Check whether the group is created or not
   root@ayush:~# cat /etc/group | grep student_grp
   student_grp:x:245:student,user1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : Be careful while using &lt;strong&gt;usermod -G&lt;/strong&gt; as grouplist that follows is complete list of groups, not just the changes, any supplemented groups left out will be gone !&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-a option in usermod will preserve pre-existing group memberships when adding new ones.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Linux User has 1 primary group listed in /etc/passwd and /etc/group. Primary group GID is used whenever the user creates the files or directories.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Group membership can be identified by running the following command:
root@ayush:~# groups
root
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#file-permissions-and-ownership"&gt;
  &lt;/a&gt;
  File Permissions and Ownership
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First character indicates the type of the file object. There are nine more which indicate the access rights granted to file users.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root@ayush:~# ls -l file.txt
-rw-r--r--. 1 root root 16 Oct  8 12:31 file.txt 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;These are arranged in three groups of three:

&lt;ul&gt;
&lt;li&gt;owner: the user who owns the file&lt;/li&gt;
&lt;li&gt;group: the group of users who have access&lt;/li&gt;
&lt;li&gt;other: the rest of the world (also called world)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;File access rights
r : read access is allowed
w : write access is allowed
x : execute access is allowed &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If permission is not allowed a, - (dash) appears.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#want-to-change-file-permissions-use-chmod"&gt;
  &lt;/a&gt;
  Want to change file permissions - Use chmod
&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;Changing file permissions is done with chmod&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's see a demo now.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a file, give the owner and world execute permission, and remove the group write permission:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O9wJpHOl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1dos1hsax21nhdt0gsb2.PNG" alt="Image description"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;You can only change permissions on files you own, unless you are the supervisor.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;student user tried to change the file permissions but failed as this file is owned by other user.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cquui4zO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x53run4tovb1kpc14urt.PNG" alt="Image description"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Octal Digits&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple algorithm, and a single digit suffices to specify all three permissions bits for each entity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Octal Number representation&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Octal Number representation is sum of each digit of:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;4&lt;/strong&gt; - if read permission is desired&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;2&lt;/strong&gt; - if write permission is desired&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;1&lt;/strong&gt; - if execute permission is desired&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Chown and Chgrp&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Changing file ownership is done with &lt;strong&gt;chown&lt;/strong&gt; and changing the group is done with &lt;strong&gt;chgrp&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt; : Only Superuser can change ownership on files.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this demo we have changed the owner of file from &lt;strong&gt;ayush&lt;/strong&gt; to &lt;strong&gt;user1&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SxhVxXYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85hpczw2cahalgbue5rx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SxhVxXYM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85hpczw2cahalgbue5rx.PNG" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this demo we have changed the group ownership. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6_83Ov0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gl0hkeyr9ljc43ifmyfk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6_83Ov0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gl0hkeyr9ljc43ifmyfk.PNG" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Umask&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Default permission given when creating a file are read/write for owner, group and world (0666) and for directory is (0777)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But we noticed that actual permission on file is 664(u=rw, g=rw, o=r)  and for directory is 775(u=rwx, g=rwx, o=wx)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KDsEcC7p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0zknbl8acg9vztzpbsd.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KDsEcC7p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0zknbl8acg9vztzpbsd.PNG" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Question arises who has done it ? Umask is the answer.
Umask whose purpose is to show permissions should be denied.
Let's see the value of umask set by default.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;umask
0002
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This represents that for the other users write permission is disabled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;That's all for now. Thank you for reading. Do share your feedback and if you have liked the article share it with your friends.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>linux</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Hactoberfest 2021 #hactoberfest #dev</title>
      <author>Sambhav-Jindal-github</author>
      <pubDate>Sun, 17 Oct 2021 10:26:19 +0000</pubDate>
      <link>https://dev.to/sambhavjindalgithub/hactoberfest-2021-hactoberfest-dev-2bo</link>
      <guid>https://dev.to/sambhavjindalgithub/hactoberfest-2021-hactoberfest-dev-2bo</guid>
      <description>&lt;p&gt;Completed hactoberfest 2021, feeling great and love to share my experience with everyone.#hactoberfest #dev&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How To Think Like a Programmer?</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Sun, 17 Oct 2021 10:13:54 +0000</pubDate>
      <link>https://dev.to/unitybuddy/how-to-think-like-a-programmer-4pd9</link>
      <guid>https://dev.to/unitybuddy/how-to-think-like-a-programmer-4pd9</guid>
      <description>&lt;p&gt;Hello, buddies! Lemme ask you a common question, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Do programmers think differently?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's true; real programmers think differently than everyone else. &lt;/p&gt;

&lt;p&gt;Everyone’s programmer perspective is different; means, each programmer thinks in a different way and learns how to approach and break down problems in an unique way. Through practice, you'll develop your programming perspective, and it'll get easier to communicate with machines to solve increasingly complex problems. But the question remains, &lt;em&gt;How to think like a real programmer?&lt;/em&gt; Let's see!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#break-down-the-problem-into-smaller-problems"&gt;
  &lt;/a&gt;
  Break down the problem into smaller problems.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBOKhgXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630481999969/2vfLablYg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBOKhgXh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630481999969/2vfLablYg.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
How do you put an elephant into the fridge?&lt;/p&gt;

&lt;p&gt;Here’s what most people would answer:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the fridge&lt;/li&gt;
&lt;li&gt;Put the elephant in&lt;/li&gt;
&lt;li&gt;Close the fridge&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Problem solved!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSuN6jna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630480281889/Ev4A7BfjZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSuN6jna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630480281889/Ev4A7BfjZ.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Poor elephant :(&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This answer is the best example of why you get stuck when you face a blank JavaScript file. You skip steps.&lt;/p&gt;

&lt;p&gt;If you think logically about the question, you’ll see a few glaring problems that remain unanswered:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What fridge are we talking about?&lt;/li&gt;
&lt;li&gt;What kind of elephant are we talking about?&lt;/li&gt;
&lt;li&gt;If the elephant is too huge to fit into the fridge, what do you do?&lt;/li&gt;
&lt;li&gt;Where do you find the elephant in the first place?&lt;/li&gt;
&lt;li&gt;How do you transport the elephant to your fridge?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you code, you need to answer every small question you can think of. That’s why the first step is to break your problem into smaller pieces.&lt;/p&gt;

&lt;p&gt;If you need a real example for this, write a comment below 👇🏻&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-good-habits"&gt;
  &lt;/a&gt;
  Build Good Habits
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thiFvKX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482072155/mayNHHF2q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thiFvKX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482072155/mayNHHF2q.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
A developer’s environment can be, be it mildly, hectic. Requests and requirements change with little notice, and the pace needed to meet deadlines can accelerate quickly. That’s why a developer needs to develop strong habits with what they can control, whether it’s managing work/life balance, templatizing repetitive codes, or even finding the ideal height on your chair. Habits make a reliable backbone that’s invaluable in frenzied situations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#practice-dont-memorize"&gt;
  &lt;/a&gt;
  Practice, don’t memorize
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnrpYqgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482112576/ZsSVjWjV9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnrpYqgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482112576/ZsSVjWjV9.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Memorizing code is tough, and you don’t need to go down that road to think like a programmer. Instead, focus on the fundamentals. Learn the principles and ideas behind programming, and you’ll get much further than trying to remember everything.&lt;/p&gt;

&lt;p&gt;Every time you solve a simple problem using programming, you’ll develop your fundamentals even further, making it easier as you progress. Practice is key to your programming perspective becoming second nature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#talk-through-the-problem-aloud"&gt;
  &lt;/a&gt;
  Talk through the problem aloud
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X7m2YMT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482212677/Aw3pVojwG.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7m2YMT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482212677/Aw3pVojwG.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
First, you can talk through the problem by calling up a friend or family member and explaining to them what you’re trying to tackle. By having a conversation with someone, you’ll be able to determine how you can communicate with them to clearly explain the problem and your solution.&lt;/p&gt;

&lt;p&gt;Don’t have anyone to talk to right now? No problem! Just try speaking through the problem out loud. Explain your approach and understanding to your pets or even a stuffed animal. It’s speaking aloud that is the key.&lt;/p&gt;

&lt;p&gt;If you're explaining to a human, please be careful! They may get mad from your programming terms 😤&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shortcuts-can-be-dangerous"&gt;
  &lt;/a&gt;
  Shortcuts can be dangerous
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a4r_MRMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482391353/I4OX7IRLOZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a4r_MRMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482391353/I4OX7IRLOZ.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Taking shortcuts while you’re learning to program can be more hurtful than helpful. Try to think of the learning process like running tennis drills. You could take steroids to get stronger and become a better player, but that’s likely to hurt you in the long run.&lt;/p&gt;

&lt;p&gt;Rather than searching for an answer right away when you encounter a problem, try to solve it yourself first. When you rely on other people’s coding solutions, you don’t get to develop that programming muscle yourself.&lt;/p&gt;

&lt;p&gt;Focus on the basics, put in the practice, and run your drills. The tried and true training methods are that for a reason; they work! We know that it can be frustrating when it takes time to learn to program, but that’s all part of the process of forming your own programming perspective.&lt;/p&gt;

&lt;p&gt;(Also keep remember that you must ask questions and seek help if needed.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-familiar-with-reading-documentation-and-applying-it-to-your-code"&gt;
  &lt;/a&gt;
  Get familiar with reading documentation and applying it to your code 📃
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B6HJbKHG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482416292/DfdmqzJeX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B6HJbKHG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482416292/DfdmqzJeX.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Documentation for programming is just like a recipe for cooking. It lays out how the code is intended to work and is an excellent resource to help you understand programming better. Learning to read documentation will also steer you away from looking for a shortcut or an easy solution to your problems or bugs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stay-positive"&gt;
  &lt;/a&gt;
  Stay Positive ✌️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QrlbSjs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482522566/PwxLQlRu2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QrlbSjs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630482522566/PwxLQlRu2.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
If you’ve ever viewed the source code of a major entity’s website, you’ve seen just how sprawling and indecipherable it is to the naked eye. Yet the people responsible for generating that mass of code aren’t super-machines that appeared on Earth after a solar eclipse. They’re suspiciously similar to you and me. Professional developers (even the surly ones) have a positive approach to their work. They’ve embraced challenges in their own way and see them as a normal part of a healthy human life ✌️&lt;/p&gt;

&lt;p&gt;Always try to keep a smile just like &lt;a href="https://hashnode.com/@laughing-dev"&gt;Laughing Dev&lt;/a&gt;! &lt;/p&gt;

&lt;p&gt;So, buddies, that's it! Hope you learned something and Happy Coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mr-unity-buddy.hashnode.dev/how-to-think-like-a-programmer"&gt;Originally&lt;/a&gt; published on Hashnode&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zapier.com/blog/think-like-a-programmer/"&gt;https://zapier.com/blog/think-like-a-programmer/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://careerfoundry.com/en/blog/web-development/getting-started-in-code-how-to-think-like-a-programmer/"&gt;https://careerfoundry.com/en/blog/web-development/getting-started-in-code-how-to-think-like-a-programmer/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/how-to-think-like-a-programmer/"&gt;https://www.geeksforgeeks.org/how-to-think-like-a-programmer/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>Create a passwordless authentication using Auth0, Cloudinary and Nextjs</title>
      <author>Demola Malomo</author>
      <pubDate>Sun, 17 Oct 2021 09:42:45 +0000</pubDate>
      <link>https://dev.to/hackmamba/create-a-passwordless-authentication-using-auth0-cloudinary-and-nextjs-4b54</link>
      <guid>https://dev.to/hackmamba/create-a-passwordless-authentication-using-auth0-cloudinary-and-nextjs-4b54</guid>
      <description>&lt;p&gt;Passwordless authentication is an authentication method that allows users to log in without remembering a password. Instead, it requires users to enter public identifiers like username, phone number, email e.t.c and receive a one-time code or link, which they can then use to log in.&lt;/p&gt;

&lt;p&gt;In this post, we will discuss how to build a passwordless coupon generation app using &lt;a href="https://cloudinary.com/"&gt;Cloudinary&lt;/a&gt;, &lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt;, and &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;. At the end of this tutorial, we would have learnt how to build a secure application using Auth0, Cloudinary and Next.js.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can find the source code of this project &lt;a href="https://github.com/Mr-Malomz/auth_pwdless"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;The next steps in this post require JavaScript and React.js experience. Experience with Next.js isn’t a requirement, but it’s nice to have.&lt;/p&gt;

&lt;p&gt;We also need the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://cloudinary.com/"&gt;Cloudinary account&lt;/a&gt; for file hosting. &lt;a href="https://cloudinary.com/users/register/free"&gt;&lt;strong&gt;Signup&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;An &lt;a href="https://auth0.com/"&gt;Auth0 account&lt;/a&gt; for authentication. &lt;a href="https://auth0.com/signup?place=header&amp;amp;type=button&amp;amp;text=sign%20up"&gt;&lt;strong&gt;Signup&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a href="http://codesandbox.com/"&gt;CodeSandbox&lt;/a&gt; account. &lt;a href="http://codesandbox.com/"&gt;&lt;strong&gt;Signup&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;We need to create a Next.js starter project by navigating to the desired directory and running the command below in our terminal&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-next-app auth_pwdless &amp;amp;&amp;amp; cd auth_pwdless
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;This command creates a Next.js project called &lt;code&gt;auth_pwdless&lt;/code&gt; and navigates into the project directory.&lt;/p&gt;

&lt;p&gt;We proceed to install the required dependencies with:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install cloudinary-react auth0-js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;code&gt;cloudinary-react&lt;/code&gt; is a &lt;a href="https://github.com/cloudinary/cloudinary-react#readme"&gt;library&lt;/a&gt; that handles rendering of media files.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;auth0-js&lt;/code&gt; is a &lt;a href="https://github.com/auth0/auth0.js#readme"&gt;library&lt;/a&gt; for managing client-side authentication.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#setting-up-passwordless-functionality-on-auth0"&gt;
  &lt;/a&gt;
  Setting up Passwordless functionality on Auth0
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#creating-an-application"&gt;
  &lt;/a&gt;
  Creating an Application
&lt;/h2&gt;

&lt;p&gt;To get started, we need to log into our &lt;a href="https://auth0.com/auth/login"&gt;Auth0&lt;/a&gt; dashboard. Click on &lt;strong&gt;Applications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WS-BYDSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_39889F3A941E007B2BE724DE6F2C4C4FFE6C2B007CCCDB3B36F915067C40E3D1_1633445331548_Screenshot%2B2021-10-05%2Bat%2B15.44.55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WS-BYDSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_39889F3A941E007B2BE724DE6F2C4C4FFE6C2B007CCCDB3B36F915067C40E3D1_1633445331548_Screenshot%2B2021-10-05%2Bat%2B15.44.55.png" alt="Auth0 Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the application page, click on the &lt;strong&gt;Create Application&lt;/strong&gt; button, input application name &lt;code&gt;auth_pwdless&lt;/code&gt; in our case, select &lt;strong&gt;Single Page Web Application&lt;/strong&gt; as the application type and &lt;strong&gt;Create&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xuU8pZoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633741349305_Screenshot%2B2021-10-08%2Bat%2B20.35.14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xuU8pZoD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633741349305_Screenshot%2B2021-10-08%2Bat%2B20.35.14.png" alt="creating app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;Settings&lt;/strong&gt; tab and copy the &lt;strong&gt;Domain&lt;/strong&gt; and &lt;strong&gt;Client ID&lt;/strong&gt;. They will come in handy when configuring Auth0.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G0AajyCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633742207801_Screenshot%2B2021-10-08%2Bat%2B20.00.25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G0AajyCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633742207801_Screenshot%2B2021-10-08%2Bat%2B20.00.25.png" alt="app configuration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then scroll down to the &lt;strong&gt;Applications URIs&lt;/strong&gt; section and fill in the details below for &lt;strong&gt;Allowed Callback URLs, Allowed Logout URLs, Allowed Web Origins,&lt;/strong&gt; and &lt;strong&gt;Allowed Origins (CORS)&lt;/strong&gt; respectively. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; For security reasons, Auth0 does not allow the use of URLs like &lt;code&gt;http://localhost:3000/&lt;/code&gt; and &lt;code&gt;http://127.0.0.1:3000/&lt;/code&gt;. We will be using the custom URL CodeSandbox provides. Auth0 also supports custom domains.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Allowed Callback URLs

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;https://ueofp.sse.codesandbox.io/coupon&lt;/code&gt;. The &lt;code&gt;coupon&lt;/code&gt; at the end of this URL represents the page in our application.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Allowed Logout URLs, Allowed Web Origins, and Allowed Origins (CORS)

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;https://ueofp.sse.codesandbox.io/&lt;/code&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KNoF3XS7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633743206535_Screenshot%2B2021-10-09%2Bat%2B02.33.14.png" alt="URI"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then scroll down to the bottom of the page and click on the &lt;strong&gt;Save Changes&lt;/strong&gt; button.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-passwordless"&gt;
  &lt;/a&gt;
  Setting up Passwordless
&lt;/h2&gt;

&lt;p&gt;With the application configured, click on the &lt;strong&gt;Authentication&lt;/strong&gt; and select &lt;strong&gt;Passwordless&lt;/strong&gt;.&lt;br&gt;
Then select &lt;strong&gt;Email&lt;/strong&gt; authentication type.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QWHwv2yF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633743842260_Screenshot%2B2021-10-08%2Bat%2B19.55.39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QWHwv2yF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633743842260_Screenshot%2B2021-10-08%2Bat%2B19.55.39.png" alt="auth method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, edit the &lt;strong&gt;From Field&lt;/strong&gt;, &lt;strong&gt;Subject Field&lt;/strong&gt; and &lt;strong&gt;Save&lt;/strong&gt;. Auth0 also support custom settings like the email template format, OTP validity period, e.t.c.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMPcFJp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633743886656_Screenshot%2B2021-10-08%2Bat%2B20.03.15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMPcFJp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633743886656_Screenshot%2B2021-10-08%2Bat%2B20.03.15.png" alt="configure OTP Email"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, connect the &lt;code&gt;auth_pwdless&lt;/code&gt; app we created earlier and &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cCCuD05N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633744165149_Screenshot%2B2021-10-08%2Bat%2B20.03.38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cCCuD05N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633744165149_Screenshot%2B2021-10-08%2Bat%2B20.03.38.png" alt="Connecting app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, we can test the application by clicking on the &lt;strong&gt;Try&lt;/strong&gt; button and then check our mail for the one-time-password(OTP).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ik6SB2eS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633744300199_Screenshot%2B2021-10-08%2Bat%2B20.04.46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ik6SB2eS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633744300199_Screenshot%2B2021-10-08%2Bat%2B20.04.46.png" alt="Try Passwordless"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#integrating-passwordless-with-auth0"&gt;
  &lt;/a&gt;
  Integrating Passwordless with Auth0
&lt;/h1&gt;

&lt;p&gt;First, we can leverage Next.js &lt;a href="https://github.com/css-modules/css-module"&gt;CSS Module&lt;/a&gt; support to style our page by replacing the content in &lt;code&gt;Home.module.css&lt;/code&gt; in the &lt;code&gt;styles&lt;/code&gt; folder with the gist below:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;With that done, we need to create an helper function to help us instantiate Auth0. Create a a &lt;code&gt;config&lt;/code&gt; folder in the project root directory and, in the folder, create an &lt;code&gt;auth.js&lt;/code&gt; file and add the code snippet below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;WebAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auth0-js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WebAuth&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;clientID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;YOUR_CLIEND_ID&lt;/span&gt; &lt;span class="nx"&gt;HERE&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;YOUR&lt;/span&gt; &lt;span class="nx"&gt;DOMAIN&lt;/span&gt; &lt;span class="nx"&gt;HERE&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;redirectUri&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://ueofp.sse.codesandbox.io/coupon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;//replace with your codesandbox url&lt;/span&gt;
      &lt;span class="na"&gt;responseType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;webAuth&lt;/code&gt; variable creates an instance of the &lt;code&gt;WebAuth&lt;/code&gt; class and configures it with &lt;code&gt;clientID&lt;/code&gt;, &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;redirectUri&lt;/code&gt; and &lt;code&gt;responseType&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-login"&gt;
  &lt;/a&gt;
  Setting up Login
&lt;/h2&gt;

&lt;p&gt;Next, we need to modify &lt;code&gt;index.js&lt;/code&gt; file in the &lt;code&gt;pages&lt;/code&gt;  folder by importing the &lt;code&gt;webAuth&lt;/code&gt; variable to create &lt;code&gt;handleAuth&lt;/code&gt; and &lt;code&gt;handleVerifyToken&lt;/code&gt; functions to send OTP to specified email and verify the OTP.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../styles/Home.module.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/dist/client/router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;webAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../config/auth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setOtp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;emailError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;otpError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setSuccess&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;webAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwordlessStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;send&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;code&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;setSuccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;emailError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleVerifyToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;webAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passwordlessLogin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;verificationCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;otp&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;otpError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/coupon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* remaining JSX comes here */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import required dependencies&lt;/li&gt;
&lt;li&gt;Create states to manage email, OTP, errors and success.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;handleAuth&lt;/code&gt; configures how the OTP will be sent(email), the type of OTP to be sent(code) and the email to which the OTP will be sent.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;handleVerifyToken&lt;/code&gt; configures how the OTP will be sent(email), the user's email to which the OTP is delivered, and the code sent to the user. The function also routes the user to the &lt;code&gt;coupon&lt;/code&gt; page if the OTP is valid. We will create this page shortly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then we need to include markups to conditionally display forms to request for OTP and  verify OTP as shown below:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//imports here&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;//states here&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//send token code here&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleVerifyToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//verify token code here&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleAuth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;enter email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;required&lt;/span&gt;
              &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Get&lt;/span&gt; &lt;span class="nx"&gt;Coupon&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emailError&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="nx"&gt;sending&lt;/span&gt; &lt;span class="nx"&gt;mail&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;)}&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleVerifyToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
                &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;otp&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setOtp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;required&lt;/span&gt;
              &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Verify&lt;/span&gt; &lt;span class="nx"&gt;Token&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;otpError&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="nx"&gt;validating&lt;/span&gt; &lt;span class="nx"&gt;OTP&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Complete index.js&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setting-up-the-coupon-page"&gt;
  &lt;/a&gt;
  Setting up the coupon page
&lt;/h2&gt;

&lt;p&gt;With the authentication setup, we need to create a &lt;code&gt;coupon.js&lt;/code&gt; file inside the &lt;code&gt;pages&lt;/code&gt; folder, and in this file, add the code snippet below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;CloudinaryContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Transformation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cloudinary-react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../styles/Home.module.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Coupon&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Congratulations&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;emoji&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="err"&gt;🎉&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Coupon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;67646676&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;6746&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;74664&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CloudinaryContext&lt;/span&gt; &lt;span class="nx"&gt;cloudName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dtgbzmpca&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="nx"&gt;publicId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;v1633726853/tamanna-rumee-rOBRka7Q12U-unsplash.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Transformation&lt;/span&gt;
                &lt;span class="nx"&gt;crop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scale&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;600&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;400&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;dpr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;responsive_placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
              &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Image&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/CloudinaryContext&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;Coupon&lt;/code&gt; page uses the &lt;code&gt;Math&lt;/code&gt; object to generate random numbers as coupons and &lt;code&gt;cloudinary-react&lt;/code&gt; to optimize and transform a congratulatory sample image.&lt;/p&gt;

&lt;p&gt;Finally, we need to protect our page using Auth0 as we want only users with OTP to access the coupon.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//remaining import comes here&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//add&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;webAuth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../config/auth&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//add&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;next/dist/client/router&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//add&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Coupon&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRouter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;webAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parseHash&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;authResult&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;webAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;authResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;accessToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="c1"&gt;// get user info&lt;/span&gt;
              &lt;span class="nx"&gt;setUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Congratulations&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* modify this to show email*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;aria&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;emoji&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="err"&gt;🎉&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* remaining JSX comes here */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The updated snippet above does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import required dependencies.&lt;/li&gt;
&lt;li&gt;Creates state to manage authenticated users.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;webAuth&lt;/code&gt; variable created earlier to parse URL hash fragment sent by Auth0 when redirecting to the &lt;code&gt;Coupon&lt;/code&gt; page and get the &lt;code&gt;user&lt;/code&gt;’s information. Then, we use the &lt;code&gt;user&lt;/code&gt; information to render the &lt;code&gt;Coupon&lt;/code&gt; page when valid or redirect to the &lt;code&gt;Home&lt;/code&gt; page when it is not.&lt;/li&gt;
&lt;li&gt;Display user’s email.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Complete coupon.js&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Finally, we can test our application by requesting OTP, checking specified email, verifying OTP and getting a coupon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIjc01TA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633775830692_Screenshot%2B2021-10-09%2Bat%2B11.31.56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIjc01TA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633775830692_Screenshot%2B2021-10-09%2Bat%2B11.31.56.png" alt="send OTP"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CpPMFU9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633775830702_Screenshot%2B2021-10-09%2Bat%2B11.32.53.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CpPMFU9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633775830702_Screenshot%2B2021-10-09%2Bat%2B11.32.53.png" alt="Verify OTP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bGUwny1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633775860533_Screenshot%2B2021-10-09%2Bat%2B11.33.47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGUwny1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_92805FED2D981D79B86FF452AD4C2AB3F80EA63850F0C154653F5111C1E5C74F_1633775860533_Screenshot%2B2021-10-09%2Bat%2B11.33.47.png" alt="getting coupon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This post discussed how to build a secure passwordless coupon generation app using Cloudinary, Auth0, and Next.js.&lt;/p&gt;

&lt;p&gt;You may find these resources useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://auth0.com/docs/libraries/auth0js#passwordless-login"&gt;Auth0 passwordless authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/auth0/auth0.js"&gt;Auth0.js library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudinary/cloudinary-react"&gt;Cloudinary react library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Content created for the &lt;a href="https://content.hackmamba.io/"&gt;Hackmamba&lt;/a&gt; Jamstack Content Hackathon.&lt;/p&gt;

</description>
      <category>cloudinary</category>
      <category>hackjamstack</category>
      <category>auth0</category>
      <category>jamstack</category>
    </item>
    <item>
      <title> Problem 15 puzzle game</title>
      <author>Kirill Live</author>
      <pubDate>Sun, 17 Oct 2021 09:34:51 +0000</pubDate>
      <link>https://dev.to/kirilllive/15-puzzle-is-a-tricky-game-59k0</link>
      <guid>https://dev.to/kirilllive/15-puzzle-is-a-tricky-game-59k0</guid>
      <description>&lt;p&gt;I had nothing to do, I decided to test my skills and tried to create a 15 puzzle game for the browser using only JavaScript and CSS. During development, I did not read how this could be implemented, and did not use the Internet. In the end, everything went smoothly, as it seemed to me, but I often noticed that the last two puzzle squares could not be placed in the right places. At first it seemed to me that something was wrong with me, but the situation where the puzzle could not be completed was stable, and I began to figure out what went wrong.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kirilllive.github.io/Fifteen_puzzle_maker/example.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w0QgVto5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ozdtnksqlgikabtiedou.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After reading several articles on the mathematical analysis of this game, I learned that exactly half of all possible combinations of the initial position of the squares (20.922.789.888.000 (= 16!)) Will lead to the impossibility of solving the puzzle. Elsewhere I found out that this problem occurs if swap squares 14 and 15.&lt;br&gt;
In such a situation, in my game, I used mixing squares, just replacing the random block with another random block, it was a very wrong decision. So I decided to replace this part of the game with a natural shuffle, the program just randomly shifted an empty block vertically or horizontally by one square. This option eliminated combinations of blocks that would get in the way of solving the puzzle.&lt;/p&gt;

&lt;p&gt;About ten years ago I was making a similar game for Android, but then I did not face this problem, because the terms of reference said: "the movement of the squares when mixing should be visible." And then I remembered about one more item of the same task "The ability to move several blocks towards an empty cell." Oddly enough, when I tackled the previous problem, almost all versions of this game that I have seen did not use this feature. Then I decided to add the ability to move several blocks to my game, and the game became more interesting, the puzzle began to be assembled faster and new tactical possibilities appeared, but, most importantly, it became easier to collect large puzzles with 100 chips or more.&lt;/p&gt;

&lt;p&gt;This is how a simple game became an interesting experience for me with new discoveries, despite the fact that I had done it before, with the only difference that at first I did the game on a task, and now for the sake of testing my skills.&lt;/p&gt;

&lt;p&gt;But I didn't stop there and made an editor for this game "&lt;a href="https://github.com/Kirilllive/Fifteen_puzzle_maker"&gt;Fifteen Sliding Puzzle maker&lt;/a&gt;". You just need to add your own image and the editor will automatically split it into proportional blocks and adapt the CSS style. You can export the result to an HTML file for integration into your project, or simply use FrameWork "fifteen_puzzle.js", which can be easily modified to suit your needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kirilllive.github.io/Fifteen_puzzle_maker/"&gt;Editor&lt;/a&gt;  |  &lt;a href="https://kirilllive.github.io/Fifteen_puzzle_maker/example.html"&gt;Demo&lt;/a&gt;  |  &lt;a href="https://kirill-live.itch.io/fifteen-puzzle"&gt;itch.io&lt;/a&gt;  |  &lt;a href="https://github.com/Kirilllive/Fifteen_puzzle_maker"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kirilllive.github.io/Fifteen_puzzle_maker/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dnkoHGpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1l3mbnl3laxd02b8frg.jpg" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>gamedev</category>
      <category>html</category>
    </item>
    <item>
      <title>What is the correct HTML tag for the largest heading?</title>
      <author>Coder</author>
      <pubDate>Sun, 17 Oct 2021 08:46:07 +0000</pubDate>
      <link>https://dev.to/codehacker/what-is-the-correct-html-tag-for-the-largest-heading-2l71</link>
      <guid>https://dev.to/codehacker/what-is-the-correct-html-tag-for-the-largest-heading-2l71</guid>
      <description>&lt;p&gt;As  you have seen in the title I will tell you What is the correct HTML tag for the largest heading or you can say which is the largest heading tag in HTML I will tell you answer to the so follow up with me till the end of this article.&lt;/p&gt;
&lt;p&gt;If you are complete beginner to HTML then you need to know that there are six heading tags which you can use. You can see below the 6 heading tags.&lt;/p&gt;
&lt;pre class="highlight-height language-html"&gt;&lt;code&gt;&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Heading 1&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Heading 2&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Heading 3&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;h3&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Heading 4&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;h4&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;h5&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Heading 5&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;h5&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;h6&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;Heading 6&lt;span class="token tag"&gt;&lt;span&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;h6&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;Copy&lt;p&gt;As you can see above each heading tag have a number from 1 to 6 now which one is the largest heading tag you think. You may say that &amp;lt;h6&amp;gt; looks like the largest heading because of higher number but it is not.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The correct HTML tag for the largest heading is &amp;lt;h1&amp;gt; tag&lt;/span&gt; as the number goes up the heading tags become smaller in size. For example &amp;lt;h2&amp;gt; will be little smaller then &amp;lt;h1&amp;gt; then same with the others. &amp;lt;h6&amp;gt; is the smallest heading tag in HTML. &lt;/p&gt;
&lt;p&gt;Below is the output of the above code which I have shown&lt;/p&gt;
&lt;img alt="heading tags structure" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FwKBie4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://coderzway.com/wp-content/uploads/2021/09/Screenshot-267-e1630731106763-1024x535.png"&gt;&lt;p&gt;As you can see from the above image the words written inside the h1 tag is the largest compared to others so you found your answer to this question which &lt;span&gt;h1&lt;/span&gt; is the largest heading tag in HTML. &lt;/p&gt;
&lt;p&gt;&lt;span&gt;Want more solutions and guides like this then join our coding community on Telegram to get latest blog updates and more – &lt;/span&gt;&lt;a href="https://t.me/codelivly" rel="noopener"&gt;&lt;span&gt;Join Telegram channel&lt;/span&gt;&lt;/a&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;

</description>
      <category>html</category>
    </item>
    <item>
      <title> the web developer dream - learn the AJAX technique</title>
      <author>Gabriele Boccarusso</author>
      <pubDate>Sun, 17 Oct 2021 08:33:42 +0000</pubDate>
      <link>https://dev.to/gabrieleboccarusso/the-web-developer-dream-learn-the-ajax-technique-9fg</link>
      <guid>https://dev.to/gabrieleboccarusso/the-web-developer-dream-learn-the-ajax-technique-9fg</guid>
      <description>&lt;p&gt;The only way to change a web page with new informations is by refreshing the page and working on the requestbut this way is too rude and inefficient. A better way to achieve the same result but with maximum efficiency and professionality is the &lt;strong&gt;AJAX protocol&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;AJAX stands for &lt;em&gt;Asynchrouns javascript and XML&lt;/em&gt;, and, despite the name, can bring any kind of new data in a web page without the need to refresh it by connecting to a database or to an API.&lt;/p&gt;

&lt;p&gt;AJAX does essentially two important things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Connect with the server/API&lt;/li&gt;
&lt;li&gt;Retrieve the data&lt;/li&gt;
&lt;li&gt;Change the web page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Everyone of this step is at our complete discretion being a technique that offers great flexibility in our ends and a lot of abstraction in how it executes the actual operations.&lt;/p&gt;

&lt;p&gt;This technique is used through a javascript object called the &lt;em&gt;XMLHttpRequest&lt;/em&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ajax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now that we have the object we need to assign a function to the &lt;em&gt;onreadystatechange&lt;/em&gt; method that will be called everytime the internal state of the object will change:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// execute what's here&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Everything inside the assigned function should always be inside an &lt;em&gt;if statement&lt;/em&gt;. &lt;br&gt; The first thing to check is the &lt;strong&gt;readyState attribute&lt;/strong&gt; of the object. &lt;br&gt; This attributes can have five different values, ranging from 0 to 4, and 4 means that the operations is fully complete. &lt;br&gt; For the reference you can go &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;status attribute&lt;/strong&gt; refers to the HTTP protocol: &lt;em&gt;200&lt;/em&gt; means that was successful, 404 that what was requested was not found and so on. &lt;br&gt; For the complete documentation you can go &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If readyState and status are on 4 and 200 that means that everything was successful and is in this state that you want to operate any change to the webpage.&lt;/p&gt;

&lt;p&gt;Now that everything is set we need only to retrieve the data from the server. with the &lt;em&gt;send&lt;/em&gt; function we initialize the request and with the &lt;em&gt;send&lt;/em&gt; one we execute the data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://myapi.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;open&lt;/strong&gt; method accept three paramters:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The request method, in most cases we want to &lt;em&gt;get&lt;/em&gt; something&lt;/li&gt;
&lt;li&gt;The string that represents the URL to send the request to&lt;/li&gt;
&lt;li&gt;If the request must be asynchronous, which is obviusly &lt;code&gt;true&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;the send method is the one that performs all the underline operations needed to perform the changes to the web page.&lt;/p&gt;

&lt;p&gt;Integrating AJAX with our backend language of choice is very easy, by using a web server to host our website and PHP we can set the call to a determined script that performs the operations basically creating our own API.&lt;/p&gt;

&lt;p&gt;Please note that without a basic knowledge of PHP you'll not be able to fully comprehend the next code.&lt;/p&gt;

&lt;p&gt;Let's create a simple webpage that dynamically creates and updates a table.&lt;br&gt;
The only code that we need in our html file is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"cols"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;rows:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"cols"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"cols"&lt;/span&gt; &lt;span class="na"&gt;onkeyup=&lt;/span&gt;&lt;span class="s"&gt;"SetCols(this.value)"&lt;/span&gt; &lt;span class="na"&gt;onload=&lt;/span&gt;&lt;span class="s"&gt;"this.value=''"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"rows"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;cols:&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"rows"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"rows"&lt;/span&gt; &lt;span class="na"&gt;onkeyup=&lt;/span&gt;&lt;span class="s"&gt;"SetRows(this.value)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"out"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code define three simple things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an input field for the column of the table&lt;/li&gt;
&lt;li&gt;an input field for the rows of the table&lt;/li&gt;
&lt;li&gt;a span that will contain the output of the AJAX request, our table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before explaining the actual code let's see the variable that we are going to use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// before calling our backend we have to first polish the data&lt;/span&gt;
&lt;span class="c1"&gt;// that we are going to send.&lt;/span&gt;
&lt;span class="c1"&gt;// php accepts everything as a request&lt;/span&gt;
&lt;span class="c1"&gt;// our variables are just pieces of the request&lt;/span&gt;
&lt;span class="c1"&gt;// that will then be concatenated &lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;out&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ajax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// we receive from the script a table in html&lt;/span&gt;
        &lt;span class="c1"&gt;// and then we replace it with the old one&lt;/span&gt;
        &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we see in the HTML code, everytime we change the value of the input field the dedicated function that sets the rows and the columns get called, let's see them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SetCols&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ncols&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cols=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;ncols&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;CreateTable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SetRows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nrows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rows=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;nrows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;CreateTable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The functions just sets the rows or the cols variable in a way that PHP understands it and if the other one is not void it calls the &lt;code&gt;createtable&lt;/code&gt; function, which:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CreateTable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;make_ajax_table.php?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// console.log(script);&lt;/span&gt;
    &lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;what we are sending to the PHP script is just a line with a request that contains the &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; variables.&lt;/p&gt;

&lt;p&gt;Now let's see the actual PHP script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_REQUEST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'cols'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_REQUEST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'rows'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$cols&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;$rows&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'hi, something strange happened. &amp;lt;br&amp;gt; Let the developers know of this error '&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;table border=1&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$cols&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;tr&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nv"&gt;$rows&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;td&amp;gt;'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$j&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/td&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/tr&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/table&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Everything that we echo out get transposed as a string and then put into the inner HTML of the span tag.&lt;br&gt;
Let's see the final result:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LkSg0fPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uti12yxqsjn0fgkgt78i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LkSg0fPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uti12yxqsjn0fgkgt78i.gif" alt="table that changes height and width based on user input"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full code you can check the github gist &lt;a href="https://gist.github.com/gabrieleboccarusso/5b36631e44c7fcbeed1233f92ff86aec"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>php</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Activation Functions used in Neural network with Advantages and Disadvantages</title>
      <author>keshavs759</author>
      <pubDate>Sun, 17 Oct 2021 07:58:16 +0000</pubDate>
      <link>https://dev.to/keshavs759/activation-functions-used-in-neural-network-with-advantages-and-disadvantages-3men</link>
      <guid>https://dev.to/keshavs759/activation-functions-used-in-neural-network-with-advantages-and-disadvantages-3men</guid>
      <description>&lt;br&gt;
&lt;br&gt;





&lt;p&gt;Deep learning needs lots of data to perform efficiently. Today internet provides tons of data but the issue with it is that there is no solid partition between the useful and not-so-useful data. In technical terms, there is some amount of noise without out required information. If we train our learning model without removing the noise, our model will not produce the required output. This is where the Activation Function comes into the picture.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Activation functions are mathematical equations that determine the output of a neural network model. They help the network to use the important information and suppress the noise.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;In a neural network, activation functions are utilized to bring non-linearities into the decision border. The goal of introducing nonlinearities in data is to simulate a real-world situation. Almost much of the data we deal with in real life is nonlinear. This is what makes neural networks so effective.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Before we dive deeper into different types of activation functions, let's first look at where is activation function used in a neural network.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Following is the picture of a simple model of neuron commonly known as the perceptron. It can be divided into 3 parts: Input layer, neuron, and output layer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTo7BVpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/artificial%2520Neurone%2520self-explanatory.png" class="article-body-image-wrapper"&gt;&lt;img title="ANN" src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTo7BVpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/artificial%2520Neurone%2520self-explanatory.png" alt="ANN"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have input as&lt;strong&gt; X1, X2, X3,..., Xm&lt;/strong&gt;. and the weights associated with those inputs as &lt;strong&gt;w1, w2, w3,...,wm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;We first calculate the weighted sum of the input i.e.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tqyjad9h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/weighted%2520sum.png" class="article-body-image-wrapper"&gt;&lt;img title="weighted sum" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tqyjad9h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/weighted%2520sum.png" alt="weighted sum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then Activation function is applied as,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1goFJDC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/apply%2520activation%2520function.png" class="article-body-image-wrapper"&gt;&lt;img title="activation Function application" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1goFJDC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/apply%2520activation%2520function.png" alt="activation Function application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The calculated value is then passed to the next layer if present.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Now let's look at the most common types of Activation functions used in deep learning. We will also learn how to implement using python.&lt;/p&gt;


&lt;br&gt;


 



&lt;h2 id="Sigmoid-Function"&gt;&lt;a href="https://vidyasheela.com/post/sigmoid-logistic-activation-function-with-python-code"&gt;Sigmoid Function&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Sigmoid Activation Function is one of the widely used activation functions in deep learning. As its name suggests the curve of the sigmoid function is S-shaped.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Sigmoid transforms the values between the range 0 and 1.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The Mathematical function of the sigmoid function is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5IiJzJeD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/sigmoid.png" class="article-body-image-wrapper"&gt;&lt;img title="sigmoid activation function" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5IiJzJeD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/sigmoid.png" alt="sigmoid activation function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Derivative of the sigmoid is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SfqIywA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_sigmoid.png" class="article-body-image-wrapper"&gt;&lt;img title="derivative sigmoid function" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SfqIywA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_sigmoid.png" alt="derivative sigmoid function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="Python-Code"&gt;Python Code&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import numpy as np
import matplotlib.pyplot as plt

# Sigmoid Activation Function
def sigmoid(x):
  return 1/(1+np.exp(-x))

# Derivative of Sigmoid
def der_sigmoid(x):
  return sigmoid(x) * (1- sigmoid(x))

# Generating data to plot
x_data = np.linspace(-10,10,100)
y_data = sigmoid(x_data)
dy_data = der_sigmoid(x_data)

# Plotting
plt.plot(x_data, y_data, x_data, dy_data)
plt.title('Sigmoid Activation Function &amp;amp; Derivative')
plt.legend(['sigmoid','der_sigmoid'])
plt.grid()
plt.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/post/sigmoid-logistic-activation-function-with-python-code"&gt;&lt;img title="sigmoid activation function and derivative " src="https://res.cloudinary.com/practicaldev/image/fetch/s--975xxlXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/sigmoid%2520activation%2520function%2520and%2520derivative.png" alt="sigmoid activation function and derivative "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Advantages:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The output value is between 0 and 1.&lt;/li&gt;
&lt;li&gt;The prediction is simple, ie based on a threshold probability value.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Disadvantages:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Computationally expensive&lt;/li&gt;
&lt;li&gt;Outputs not zero centered&lt;/li&gt;
&lt;li&gt;&lt;span&gt;Vanishing gradient—for very high or very low values of X, there is almost no change to the prediction, causing a vanishing gradient problem. This can result in the network refusing to learn further, or being too slow to reach an accurate prediction.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="Hyperbolic-Tangent-(htan)-Activation-Function"&gt;&lt;a href="https://vidyasheela.com/post/hyperbolic-tangent-tanh-activation-function-with-python-code"&gt;Hyperbolic Tangent (htan) Activation Function&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The tanh function is similar to the sigmoid function. The output ranges from -1 to 1.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The Mathematical function of tanh function is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iEYqbDQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/tanh.png" class="article-body-image-wrapper"&gt;&lt;img title="tanh" src="https://res.cloudinary.com/practicaldev/image/fetch/s--iEYqbDQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/tanh.png" alt="tanh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Derivative of tanh function is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D2gfpbp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_tanh.png" class="article-body-image-wrapper"&gt;&lt;img title="derivative tanh" src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2gfpbp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_tanh.png" alt="derivative tanh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="Python-Code"&gt;Python Code&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import numpy as np
import matplotlib.pyplot as plt

# Hyperbolic Tangent (htan) Activation Function
def htan(x):
  return (np.exp(x) - np.exp(-x))/(np.exp(x) + np.exp(-x))

# htan derivative
def der_htan(x):
  return 1 - htan(x) * htan(x)

# Generating data for Graph
x_data = np.linspace(-6,6,100)
y_data = htan(x_data)
dy_data = der_htan(x_data)

# Graph
plt.plot(x_data, y_data, x_data, dy_data)
plt.title('htan Activation Function &amp;amp; Derivative')
plt.legend(['htan','der_htan'])
plt.grid()
plt.show()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/post/hyperbolic-tangent-tanh-activation-function-with-python-code"&gt;&lt;img title="tanh acticvation function and dericative" src="https://res.cloudinary.com/practicaldev/image/fetch/s--uhTF5Mlm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/tanh%2520acticvation%2520function%2520and%2520dericative.png" alt="tanh acticvation function and dericative"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Advantages:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Zero Centered&lt;/li&gt;
&lt;li&gt;The prediction is simple, ie based on a threshold probability value.&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;&lt;/ul&gt;

&lt;h2 id="Rectified-Linear-Unit-(ReLU)-Activation-Function"&gt;&lt;a href="https://vidyasheela.com/post/relu-activation-function-with-python-code"&gt;Rectified Linear Unit (ReLU) Activation Function&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The rectified linear activation function (RELU) is a piecewise linear function that, if the input is positive say x, the output will be x. otherwise, it outputs zero.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The mathematical representation of ReLU function is,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X7-pkmC_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/ReLU.png" class="article-body-image-wrapper"&gt;&lt;img title="ReLU" src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7-pkmC_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/ReLU.png" alt="ReLU"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The derivative of ReLU is,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ithUSbom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_ReLU.png" class="article-body-image-wrapper"&gt;&lt;img title="derivative ReLU" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ithUSbom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_ReLU.png" alt="derivative ReLU"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ReLU is used widely nowadays, but it has some problems. let's say if we have input less than 0, then it outputs zero, and the neural network can't continue the backpropagation algorithm. This problem is commonly known as Dying ReLU. To get rid of this problem we use an improvised version of ReLU, called Leaky ReLU.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3 id="Python-Code"&gt;Python Code&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import numpy as np
import matplotlib.pyplot as plt

# Rectified Linear Unit (ReLU)
def ReLU(x):
  data = [max(0,value) for value in x]
  return np.array(data, dtype=float)

# Derivative for ReLU
def der_ReLU(x):
  data = [1 if value&amp;gt;0 else 0 for value in x]
  return np.array(data, dtype=float)

# Generating data for Graph
x_data = np.linspace(-10,10,100)
y_data = ReLU(x_data)
dy_data = der_ReLU(x_data)

# Graph
plt.plot(x_data, y_data, x_data, dy_data)
plt.title('ReLU Activation Function &amp;amp; Derivative')
plt.legend(['ReLU','der_ReLU'])
plt.grid()
plt.show()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/post/relu-activation-function-with-python-code"&gt;&lt;img title="ReLU activation Function and Derivative" src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSi-liAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/ReLU%2520activation%2520Function%2520and%2520Derivative.png" alt="ReLU activation Function and Derivative"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Advantages:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Non-Linear&lt;/li&gt;
&lt;li&gt;Computationally efficient&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Disadvantages:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Dying ReLU problem i.e for the inputs 0 or negative the gradient of ReLu becomes zero and thus the network cannot make backpropagation&lt;span&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="Leaky-Rectified-Linear-Unit-(leaky-ReLU)-Activation-Function"&gt;&lt;a href="https://vidyasheela.com/post/leaky-relu-activation-function-with-python-code"&gt;Leaky Rectified Linear Unit (leaky ReLU) Activation Function&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Leaky ReLU is the most common and effective method to solve a dying ReLU problem. It is nothing but an improved version of the ReLU function. It adds a slight slope in the negative range to prevent the dying ReLU issue.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The mathematical representation of Leakt ReLU is,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t0ZAQR-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/leaky_ReLU.png" class="article-body-image-wrapper"&gt;&lt;img title="leaky ReLU" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t0ZAQR-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/leaky_ReLU.png" alt="leaky ReLU"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Derivative of Leaky ReLU is,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ithUSbom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_ReLU.png" class="article-body-image-wrapper"&gt;&lt;img title="derivative leaky ReLU" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ithUSbom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/der_ReLU.png" alt="derivative leaky ReLU"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt; &lt;/h3&gt;

&lt;h3 id="Python-Code"&gt;Python Code&lt;/h3&gt;

&lt;p&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import numpy as np
import matplotlib.pyplot as plt

# Leaky Rectified Linear Unit (leaky ReLU) Activation Function
def leaky_ReLU(x):
  data = [max(0.05*value,value) for value in x]
  return np.array(data, dtype=float)

# Derivative for leaky ReLU 
def der_leaky_ReLU(x):
  data = [1 if value&amp;gt;0 else 0.05 for value in x]
  return np.array(data, dtype=float)

# Generating data For Graph
x_data = np.linspace(-10,10,100)
y_data = leaky_ReLU(x_data)
dy_data = der_leaky_ReLU(x_data)

# Graph
plt.plot(x_data, y_data, x_data, dy_data)
plt.title('leaky ReLU Activation Function &amp;amp; Derivative')
plt.legend(['leaky_ReLU','der_leaky_ReLU'])
plt.grid()
plt.show()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/post/leaky-relu-activation-function-with-python-code"&gt;&lt;img title="leaky ReLU activation Function and Derivative" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ypLDt7ca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/35/leaky%2520ReLU%2520activation%2520Function%2520and%2520Derivative.png" alt="leaky ReLU activation Function and Derivative"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;Advantages:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;modification of the ReLU function to solve the dying ReLU problem.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Disadvantages:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;leaky ReLU does not provide consistent predictions for negative input values.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;

</description>
      <category>machinelearning</category>
      <category>python</category>
      <category>ai</category>
      <category>beginners</category>
    </item>
    <item>
      <title>5 Cool HTML Tricks and Tips
</title>
      <author>keshavs759</author>
      <pubDate>Sun, 17 Oct 2021 07:46:31 +0000</pubDate>
      <link>https://dev.to/keshavs759/5-cool-html-tricks-and-tips-18ci</link>
      <guid>https://dev.to/keshavs759/5-cool-html-tricks-and-tips-18ci</guid>
      <description>&lt;br&gt;
&lt;br&gt;


&lt;p&gt;In this article, we'll go through some of the Cool HTML Tricks and Tips that will make your development more pleasurable. As developers, we all want to present the user with appealing content that is also valuable. All of the tricks are explained in detail below, along with an example.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;h3&gt;&lt;strong&gt;Tool Tip:&lt;/strong&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can make a simple tool-tip using the &lt;strong&gt;“span”&lt;/strong&gt; tag. Tool-tips are the piece of text that is displayed when you hover over some elements in your webpage.&lt;/p&gt;

&lt;p&gt;Following is an example to create a tooltip.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;span title=" Iam tool tip :)"&amp;gt;Hover over me and wait to see Tool-tip&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ol start="2"&gt;
&lt;li&gt;
&lt;h3&gt;&lt;strong&gt;Color Picker:&lt;/strong&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can make your own color picker using a single line of code in HTML. The trick is you place the &lt;strong&gt;“type”&lt;/strong&gt; property with the value of &lt;strong&gt;“color”&lt;/strong&gt; to act the input field as a color picker. &lt;/p&gt;

&lt;p&gt;Following is an example to create a color picker.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;input type="color" id="color" name="color" onchange="colorValue(this.value)" value="#e66465"&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also Read:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/html-tags-cheat-sheet-pdf-included"&gt;HTML tags cheat sheet [pdf included]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/how-to-make-sticky-nav-bar-using-html-and-css"&gt;How to make Sticky Nav Bar Using HTML and CSS?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/how-to-make-show-password-button-using-javascript"&gt;How To Make Show Password Button Using Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;ol start="3"&gt;
&lt;li&gt;
&lt;h3&gt;&lt;strong&gt;Clickable Image Maps:&lt;/strong&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can make any specified clickable area inside an image using the &lt;strong&gt;“map” &lt;/strong&gt;tag in HTML. The &lt;strong&gt;“map” &lt;/strong&gt;contains a number of &lt;strong&gt;“area” &lt;/strong&gt;elements that define the clickable areas in the image map.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img src="https://medplus.co.nz/media/thumbnails/blog/entry/2020/05/15/Green_and_red_800__600_horizontal.png.0x300_q90_crop-smart_upscale.png" alt="Workplace" usemap="#workmap" width="400" height="379"&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;map name="workmap"&amp;gt;&lt;br&gt;
  &amp;lt;area shape="rect" coords="0,0,350,110" alt="Green" href="https://en.wikipedia.org/wiki/Green"&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;area shape="rect" coords="0,110,350,220" alt="Cup of coffee" href="https://en.wikipedia.org/wiki/Red"&amp;gt;&lt;br&gt;
&amp;lt;/map&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ol start="4"&gt;
&lt;li&gt;
&lt;h3&gt;&lt;strong&gt;Editable Contents:&lt;/strong&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In HTML you can make any element editable. All you have to do is set the &lt;strong&gt;“contenteditable”&lt;/strong&gt; attribute to &lt;strong&gt;“true”&lt;/strong&gt; on nearly any HTML element to make it editable.&lt;/p&gt;

&lt;p&gt;Here's a simple example that creates a &lt;strong&gt;“div”&lt;/strong&gt; element whose contents the user can edit.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;div contenteditable="true"&amp;gt;&lt;br&gt;
  This peice of text can be edited by the user.&lt;br&gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ol start="5"&gt;
&lt;li&gt;
&lt;h3&gt;&lt;strong&gt;Hidden Inputs:&lt;/strong&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A hidden input field lets web developers include data that cannot be seen or modified by users when a form is submitted. For example, a unique security token or the ID of the content that is presently being ordered or modified. In the displayed page, hidden inputs are completely invisible, and there is no method to make them visible in the content.&lt;/p&gt;

&lt;p&gt;Note: While the value is not visible to the user in the content of the page, it may be viewed (and altered) using any browser's developer tools or "View Source" capabilities. So don’t use hidden inputs as means of security.&lt;/p&gt;

&lt;p&gt;Following is the example to create hidden Inputs,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt; When the form is submitted the value Cust-55214 is send in the name Id&amp;lt;/p&amp;gt;  &lt;br&gt;
&amp;lt;input type="hidden" id="Id" name="Id" value="Cust-55214"&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Document Object Model🔥</title>
      <author>Sudharshan S</author>
      <pubDate>Sun, 17 Oct 2021 07:22:37 +0000</pubDate>
      <link>https://dev.to/sudharshan24/document-object-model-4420</link>
      <guid>https://dev.to/sudharshan24/document-object-model-4420</guid>
      <description>&lt;p&gt;👉 DOM stands for Document Object Model.&lt;/p&gt;

&lt;p&gt;👉 DOM is 'World Wide Web Consortium' (W3C) standard.&lt;/p&gt;

&lt;p&gt;👉 DOM is a programming interface for HTML documents.&lt;/p&gt;

&lt;p&gt;👉 When browser try to render a HTML document, it creates an &lt;br&gt;
   object based on the HTML document called DOM. &lt;/p&gt;

&lt;p&gt;👉 By using DOM, we can manipulate or change various elements &lt;br&gt;
   inside the HTML document.&lt;/p&gt;

</description>
      <category>code</category>
      <category>javascript</category>
      <category>dom</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Learn With Me:Apple's Swift Literals</title>
      <author>Ansh Gupta</author>
      <pubDate>Sun, 17 Oct 2021 07:09:49 +0000</pubDate>
      <link>https://dev.to/thisisanshgupta/learn-with-meapples-swift-literals-2ijd</link>
      <guid>https://dev.to/thisisanshgupta/learn-with-meapples-swift-literals-2ijd</guid>
      <description>&lt;p&gt;Hello guys and Welcome to &lt;em&gt;Learn With Me: Apple's Swift&lt;/em&gt;.In previous tutorial you learned about Variables and Constants and today we are going to learn about Literals .So without wasting time let's start.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#literals"&gt;
  &lt;/a&gt;
  Literals
&lt;/h1&gt;

&lt;p&gt;Literals are representations of fixed values in a program. They can be numbers, characters, or strings, etc. For example, "Hello, World!", 12, 23.0, "C", etc.&lt;br&gt;
Swift supports 4 types of &lt;br&gt;
literals,that are: &lt;br&gt;
•&lt;strong&gt;Integer Literals&lt;/strong&gt;&lt;br&gt;
•&lt;strong&gt;Floating-point Literals&lt;/strong&gt;&lt;br&gt;
•&lt;strong&gt;Boolean Literals&lt;/strong&gt;&lt;br&gt;
•&lt;strong&gt;String and Character Literals&lt;/strong&gt;.&lt;br&gt;
So let's study about them in brief.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#integer-literals"&gt;
  &lt;/a&gt;
  Integer Literals
&lt;/h1&gt;

&lt;p&gt;Integer literals are those that do not have a fractional or an exponential part.&lt;/p&gt;

&lt;p&gt;There are four types of integer literals in Swift:&lt;br&gt;
•A decimal number, with no prefix.&lt;br&gt;
•A binary number, with a 0b prefix.&lt;br&gt;
•An octal number, with a 0o prefix.&lt;br&gt;
•A hexadecimal number, with a 0x prefix.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#floatingpoint-literals"&gt;
  &lt;/a&gt;
  Floating-Point Literals
&lt;/h1&gt;

&lt;p&gt;Floating-point literals are numeric literals that have floating decimal points or they are in fraction. For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Float&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;7.008&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here,&lt;strong&gt;7.008&lt;/strong&gt; is a floating-point literal assigned to the &lt;strong&gt;radius&lt;/strong&gt; constant.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#boolean-literals"&gt;
  &lt;/a&gt;
  Boolean Literals
&lt;/h1&gt;

&lt;p&gt;There are only two Boolean Literals:&lt;strong&gt;true&lt;/strong&gt; and &lt;strong&gt;false&lt;/strong&gt;.&lt;br&gt;
For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;pass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Bool&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#character-literals"&gt;
  &lt;/a&gt;
  Character Literals
&lt;/h1&gt;

&lt;p&gt;Character literals are Unicode characters enclosed in double quotes.For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;char&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Character&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"S"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#string-literals"&gt;
  &lt;/a&gt;
  String Literals
&lt;/h1&gt;

&lt;p&gt;String literals are sequences of characters enclosed in double quotes.For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Jonathan"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Thanks for reading.I hope you will enjoy learning it.If you have any issues then let me know in the discussions.And in next part we are going to learn about Data Types in Swift.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>ios</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Tales of the Autistic Developer - Loud Loud World</title>
      <author>Brandon Weaver</author>
      <pubDate>Sun, 17 Oct 2021 06:14:37 +0000</pubDate>
      <link>https://dev.to/baweaver/tales-of-the-autistic-developer-loud-loud-world-122c</link>
      <guid>https://dev.to/baweaver/tales-of-the-autistic-developer-loud-loud-world-122c</guid>
      <description>&lt;p&gt;For those who don't know me, I'm autistic. I've been a developer for the better part of a decade.&lt;/p&gt;

&lt;p&gt;I didn't find out I was ASD until 19, and didn't reconcile with that until years later. These posts will be a combination of advice I've given to those who are like me, as well as a letter of sorts to my past self who could have used a lot of it.&lt;/p&gt;

&lt;p&gt;I write these posts in the hopes that someone like me will find value in knowing a very simple and very important truth about ASD:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You are not alone, and you are loved.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#loud-loud-world"&gt;
  &lt;/a&gt;
  Loud Loud World
&lt;/h2&gt;

&lt;p&gt;For autistic people the world is so very loud, and I fear that this has led to a very common misunderstanding of our experience.&lt;/p&gt;

&lt;p&gt;It's not that we lack the capacity for things like listening, eating, empathy, or so many other skills as much as we're in a near-constant state of being overwhelmed by everything around us.&lt;/p&gt;

&lt;p&gt;This post is less about solutions, and more about my experience as a disability. So many would like to frame what I have as a "superpower" but deny the handicaps I face, so I'd like to take this time to write on the struggles I face on a daily basis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-can-hear-everything"&gt;
  &lt;/a&gt;
  I Can Hear Everything
&lt;/h3&gt;

&lt;p&gt;A common complaint of myself as a child is I was never paying attention, would frequently ask folks to repeat things, and in general just not "hear".&lt;/p&gt;

&lt;p&gt;Ironically I was also mocked for having near supernatural hearing abilities. If my name was mentioned or any other trigger word for a hobby I would hear it, even clear across a room.&lt;/p&gt;

&lt;p&gt;The misconceptions of the first section are a direct result of the second. It's not that I couldn't hear, but that I heard too much.&lt;/p&gt;

&lt;p&gt;My brain is constantly on, and I experience everything at once. I can't turn it off, I don't know how and there aren't any great solutions I've found beyond noise cancelling headphones and moving out of noisy environments.&lt;/p&gt;

&lt;p&gt;Heck, I can hear electricity in the walls. Did you know it makes noise, because I certainly do. A short in an electronic device will scream at me, and with it my focus goes right out a window.&lt;/p&gt;

&lt;p&gt;I'm most certainly not ignoring you when you're talking, in fact I'm reminding myself to pay attention in my head on repeat, but if a loud noise or something troubling happens my attention is gone. You could talk about my favorite hobbies and I'd still twitch at anything around me happening, try as I might to stop it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smell-everything"&gt;
  &lt;/a&gt;
  Smell Everything
&lt;/h3&gt;

&lt;p&gt;In elementary school I was quite viciously mocked for smelling things, including by a teacher who egged it on. A lot of trauma in me realizing who I was could be traced to teachers like this, but back to the point I could smell anything around.&lt;/p&gt;

&lt;p&gt;If lunch was being prepared I could tell you exactly what it was (if I'd experienced it before), what burned, what flavor the gum under the table probably was, and whether or not my classmates had just been to gym class.&lt;/p&gt;

&lt;p&gt;Just in the past year I'd smelled rain and heard a dropping that led me to find a small leak in one of the doors of my home.&lt;/p&gt;

&lt;p&gt;It wasn't unusual for this to make me slightly sick, as scent is very closely tied to taste.&lt;/p&gt;

&lt;p&gt;Any more I've taken to a habit of wearing a certain amount of cologne as a centering scent to try and distract me from doing this. Most of my coping follows a similar strategy of dulling my senses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#taste-overload"&gt;
  &lt;/a&gt;
  Taste Overload
&lt;/h3&gt;

&lt;p&gt;Some would call me a picky eater, they're probably right. If something is unfamiliar to me it's overwhelming, and certain textures and combinations for some reason will make me physically sick.&lt;/p&gt;

&lt;p&gt;The annoying part is that I don't always know what those textures or combinations might be.&lt;/p&gt;

&lt;p&gt;It's been a perpetual fear of mine that I might offend someone by not being able to eat their cooking, so many times I'll try anyways and end up making myself sick for a few days afterwards.&lt;/p&gt;

&lt;p&gt;Back in college there was an eating competition where they gave us tacos with lettuce. Those who know me would know that  that's one thing which will absolutely make me visibly sick within seconds, so I had to drop out.&lt;/p&gt;

&lt;p&gt;This certainly does not make it easy to find a balanced diet, and trust me I do try. It's also why I order the exact same thing every time I go to the same restaurant. I know it's safe, and safe matters a lot to me, which is how I cope.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-stimulus"&gt;
  &lt;/a&gt;
  Visual Stimulus
&lt;/h3&gt;

&lt;p&gt;Now I'm not at the point of epilepsy, but flashing gifs and reactions will wreck my concentration. I'm very happy that Slack added an option to turn them off or I'd never get anything done.&lt;/p&gt;

&lt;p&gt;My vision isn't perfect, I wear glasses, but any visual stimulus around me sends my head into full alert mode. It's also why you'll catch me closing one eye outside, or closing both if I'm thinking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#touch-and-feel"&gt;
  &lt;/a&gt;
  Touch and Feel
&lt;/h3&gt;

&lt;p&gt;There are even fabrics and various textures that if I touch or have to keep on I get very uncomfortable with. Fabric tags, wools (especially socks), seams, and other things some folks can ignore will drive me up a wall.&lt;/p&gt;

&lt;p&gt;If there's so much as a small pebble that gets into my shoe it's going to annoy me the entire day until I get it out, including ones embedded in the bottom of my sole.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#emotional-overload"&gt;
  &lt;/a&gt;
  Emotional Overload
&lt;/h3&gt;

&lt;p&gt;People have called me a robot for years, slightly monotone voice, and a seeming absence of cognizance of emotions. Sure, there's some truth to that, I don't social well all the time and I had to learn those rules the hard way.&lt;/p&gt;

&lt;p&gt;What isn't true, however, is that I don't feel. Quite the contrary.&lt;/p&gt;

&lt;p&gt;I have to turn off news, social media, and stop talking to people because once I hear problems I become deeply invested in fixing them. My mind is hard-wired like that, I want to help, and I'm far too easy to bait into things.&lt;/p&gt;

&lt;p&gt;As a result I've had to become exceptionally cautious in how much I talk to others outside of close groups. The real annoyance is I can feel their pain, but I have no idea how to respond appropriately, so rather than try I frequently have to wait and internalize that pain which is not healthy.&lt;/p&gt;

&lt;p&gt;I hate that I cannot fix everything, so instead I try and focus on what I know I can have an impact on and direct my attentions there. Doesn't help that sick feeling though knowing how much more pain there is in the world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#temporal-hijinks"&gt;
  &lt;/a&gt;
  Temporal Hijinks
&lt;/h3&gt;

&lt;p&gt;I have no concept of time. People at work would disagree with me on that and comment that I show up early to things, know exactly when things are happening, and am generally on top of it.&lt;/p&gt;

&lt;p&gt;That's only because I have alarms for everything, calendar reminders, sticky notes, and entire systems meant to keep me on track. I adhere to strict schedules, and should I break those schedules I'll burn out hard and lose my sense of self for at least a few weeks while I recover and recalibrate.&lt;/p&gt;

&lt;p&gt;It's a similar reason to why I despise phone calls and synchronous events which require presence, as they'll ruin the entire rest of my day for getting anything done.&lt;/p&gt;

&lt;p&gt;The irony, as it tends to be, is that all of these systems got me promoted into roles where it's my job to be on top of such things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-migraines"&gt;
  &lt;/a&gt;
  The Migraines
&lt;/h3&gt;

&lt;p&gt;When the world is too much, when anxiety gets to me, and when I just can't turn it off my body will eventually take drastic measures and start me into a series of migraines that will have me laid up in bed for at least a full day, often times two to three days.&lt;/p&gt;

&lt;p&gt;As I get close to that point I will be very short tempered and intentional with my time, trying to jettison anything and everything that's not completely relevant to tasks at hand that are required to get done. I start going into lockdown mode to protect myself, and if I miss I'm going to be out of it for potentially multiple days.&lt;/p&gt;

&lt;p&gt;If I keep ignoring it? Burnout is a very real threat for me, and one that I have to be exceptionally cautious of. Some would say enjoying what you do is a cure, but if anything that's the curse which has me constantly flirting with the line where I'm not coming back for a good couple of months beyond rote and repetition.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;If there's one thing I want people to get out of this, it's that I'm a whole human. You don't get all the benefits of autism without the drawbacks, and the drawbacks make you no less valid of love and acceptance.&lt;/p&gt;

&lt;p&gt;Over the years I've had great success in the industry, but many would erase my disability, and in doing such they would discriminate against those with similar issues. To only write of the good, and never the bad, would be dishonest.&lt;/p&gt;

&lt;p&gt;So I wrap up today by saying that I'm me, flaws and all. It's a loud loud world out there, and we do our best to participate in it.&lt;/p&gt;

</description>
      <category>autism</category>
      <category>mentalhealth</category>
    </item>
  </channel>
</rss>
