<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>17 Essential REST API Interview Questions</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 16 Sep 2021 12:07:59 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/17-essential-rest-api-interview-questions-7cg</link>
      <guid>https://dev.to/hrishikesh1990/17-essential-rest-api-interview-questions-7cg</guid>
      <description>&lt;p&gt;Hello, fellow developers, based on the response I got from my previous posts I have compiled another list of essential RestAPI interview questions that I felt every developer should know.&lt;/p&gt;

&lt;p&gt;Do drop your thoughts in the comments section below. Also, feel free to comment in case you find any content to be incorrect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-what-are-restful-web-services-also-mention-their-features"&gt;
  &lt;/a&gt;
  1. What are RESTful web services? Also mention their features.
&lt;/h2&gt;

&lt;p&gt;Services that allow REST architecture are called RESTful web services. REST or Representational State Transfer uses the HTTP web protocol.&lt;/p&gt;

&lt;p&gt;Some major features of REST architecture are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Services are lightweight and hence can be easily maintained&lt;/li&gt;
&lt;li&gt;Supports communication across applications developed in other languages&lt;/li&gt;
&lt;li&gt;Testing RESTful web services is quite easy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-what-is-the-concept-of-statelessness-in-rest"&gt;
  &lt;/a&gt;
  2. What is the concept of statelessness in REST?
&lt;/h2&gt;

&lt;p&gt;The REST architecture is called stateless as it does not store any state related to the client session on the server. Essentially session states are entirely kept on the client side. This is effectively called Statelessness.&lt;/p&gt;

&lt;p&gt;It ensures that the server cannot take undue advantage of any stored data. However, since no data is stored, each request from the client to the server must contain all the necessary information about the request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-what-are-the-advantages-and-disadvantages-of-statelessness-in-rest-apis"&gt;
  &lt;/a&gt;
  3. What are the advantages and disadvantages of Statelessness in REST APIs?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Advantages of statelessness:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Statelessness allows scaling of the APIs to millions of concurrent users as it does not have any session-related dependencies and can be deployed on any server&lt;/li&gt;
&lt;li&gt;The server knows "where" each client is in the application as all the necessary information is sent with each request&lt;/li&gt;
&lt;li&gt;Statelessness makes REST APIs simpler as it removes all complexity involving server-side synchronization&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disadvantages of Statelessness:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A lot of additional information must be sent along with each request for the client&lt;/li&gt;
&lt;li&gt;This repeated data transfer may decrease network performance
Being stateless also reduces the server-side control over the application’s behavior&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-explain-addressing-in-restful-web-service"&gt;
  &lt;/a&gt;
  4. Explain ‘Addressing’ in RESTful WEB service.
&lt;/h2&gt;

&lt;p&gt;The process of locating resources on a server is called addressing. In RESTful web services, these resources are addressed using a URL. These addresses could either refer to a single or even multiple resources.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;protocol&amp;gt;&lt;/span&gt;://&lt;span class="nt"&gt;&amp;lt;application-name&amp;gt;&lt;/span&gt;/&lt;span class="nt"&gt;&amp;lt;type-of-resource&amp;gt;&lt;/span&gt;/&lt;span class="nt"&gt;&amp;lt;id-of-resource&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-what-are-options-in-rest-apis"&gt;
  &lt;/a&gt;
  5. What are "Options" in REST APIs?
&lt;/h2&gt;

&lt;p&gt;Options is an HTTP method that fetches all the various HTTPS options/operations that are supported. This helps the client decide which operations can be used.&lt;/p&gt;

&lt;p&gt;REST Option methods are also used for Cross-origin Resource Sharing (CORS).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-what-are-http-status-codes"&gt;
  &lt;/a&gt;
  6. What are HTTP status codes?
&lt;/h2&gt;

&lt;p&gt;HTTP status codes are a common REST API interview question. These Status codes are divided into five categories with multiple codes under them. The most commonly used codes under each category are listed below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Format - "1XX" - Used to represent transfer protocol level informational responses&lt;/li&gt;
&lt;li&gt;Format - "2XX" - Used to represent successful responses

&lt;ul&gt;
&lt;li&gt;"200" (OK) - Represents that the request was successfully carried out&lt;/li&gt;
&lt;li&gt;"201" (CREATED) - Represents the successful creation of a resource&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Format - "3XX" - Used to represent redirects&lt;/li&gt;
&lt;li&gt;Format - "4XX" - Used to represent client-side errors

&lt;ul&gt;
&lt;li&gt;"400" (BAD REQUEST) - Represents errors or missing data
&lt;/li&gt;
&lt;li&gt;"401" (FORBIDDEN) - Represents that the user does not have necessary access&lt;/li&gt;
&lt;li&gt;"404" (NOT FOUND) - Represents that the resource method is not available&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Format - "5XX" - Used to represent server-side errors

&lt;ul&gt;
&lt;li&gt;"500" (INTERNAL SERVER ERROR) - Represents that the server threw some exceptions&lt;/li&gt;
&lt;li&gt;"502" (BAD GATEWAY) - Represents that the server could not get a response from another server&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-list-the-various-http-methods-supported-by-rest"&gt;
  &lt;/a&gt;
  7. List the various HTTP methods supported by REST
&lt;/h2&gt;

&lt;p&gt;The various HTTP methods supported by REST are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET - This method fetches the resource at the requested URL&lt;/li&gt;
&lt;li&gt;POST - This method submits a new resource to the server&lt;/li&gt;
&lt;li&gt;PUT - This method updates an existing resource that's already on the server&lt;/li&gt;
&lt;li&gt;DELETE - This method deletes a resource from the server&lt;/li&gt;
&lt;li&gt;OPTION - This method fetches the list of supported HTTP methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-what-is-messaging-in-restful-web-services"&gt;
  &lt;/a&gt;
  8. What is messaging in RESTful web services?
&lt;/h2&gt;

&lt;p&gt;In REST web services, the client sends messages to the server and the server responds using HTTP requests. The process or technique in which any form of communication takes place is called Messaging.&lt;/p&gt;

&lt;p&gt;These messages contain message data, metadata, and all the other relevant data about the message.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-what-are-idempotent-methods"&gt;
  &lt;/a&gt;
  9. What are Idempotent methods?
&lt;/h2&gt;

&lt;p&gt;Idempotent methods are methods that return the same outcome irrespective of how many times the same request has been made.&lt;/p&gt;

&lt;p&gt;These methods are important as there are common instances where the client-side might send out duplicate requests. Hence it is important to use Idempotent methods to avoid such errors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-what-are-payloads-in-restful-web-services"&gt;
  &lt;/a&gt;
  10. What are payloads in RESTFul web services?
&lt;/h2&gt;

&lt;p&gt;Payload refers to the request data present in the body part of every HTTP request message. However, the payload is not the same as request parameters and can only be passed through the POST method.&lt;/p&gt;

&lt;p&gt;Payloads do not have size restrictions, however, more data would consume more bandwidth and take more time to transfer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-what-do-you-mean-by-caching"&gt;
  &lt;/a&gt;
  11. What do you mean by caching?
&lt;/h2&gt;

&lt;p&gt;The process of storing server response so that it can be used whenever required is called caching. This reduces the need to generate the same response again, increasing performance and server load time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-can-you-give-examples-of-tools-that-can-be-used-to-develop-or-test-restful-web-services"&gt;
  &lt;/a&gt;
  12. Can you give examples of tools that can be used to develop or test RESTful web services?
&lt;/h2&gt;

&lt;p&gt;Some example of tools used to develop and test RESTful APIs are:&lt;/p&gt;

&lt;p&gt;Spring REST web service using MVC&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jersey API&lt;/li&gt;
&lt;li&gt;CXF&lt;/li&gt;
&lt;li&gt;Axis&lt;/li&gt;
&lt;li&gt;Restlet&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#13-what-are-cachecontrol-headers"&gt;
  &lt;/a&gt;
  13. What are cache-control headers?
&lt;/h2&gt;

&lt;p&gt;Cache-control headers help attain caching ability and are also used to control caching.&lt;/p&gt;

&lt;p&gt;The most commonly used cache-control headers are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Public - Resources marked as public can be cached by any component between the client and the server.&lt;/li&gt;
&lt;li&gt;Private - These resources are marked private and can only be cached by the client.&lt;/li&gt;
&lt;li&gt;No-Store - In this third type, browsers aren’t allowed to cache a response and the data must be always pulled from the client. This type of cache control is used for sensitive data like bank details or passwords.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#14-what-is-postman-why-is-it-used"&gt;
  &lt;/a&gt;
  14. What is Postman? Why is it used?
&lt;/h2&gt;

&lt;p&gt;Postman is a popular tool that is used to develop and test API workflows. It has been adopted widely as it helps manage each step of the API lifecycle facilitating development.&lt;/p&gt;

&lt;p&gt;Postman provides a one-stop to help design, test, document, and publish your API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-what-are-the-major-security-issues-faced-by-web-services"&gt;
  &lt;/a&gt;
  15. What are the major security issues faced by web services?
&lt;/h2&gt;

&lt;p&gt;Since web services often deal with a lot of confidential information, the security of the application becomes a major concern. Below are a few issues to keep in mind.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Encryption - A web service may consist of multiple applications and could potentially contain a weak node. Hence a safe practice is to encrypt data so that they remain confidential at any cost.&lt;/li&gt;
&lt;li&gt;Authentication - This issue arises when dealing with a large user base. Authentication prevents other people from accessing user data and it also helps you keep track of user activity.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#16-what-is-the-difference-between-ajax-and-rest"&gt;
  &lt;/a&gt;
  16. What is the difference between AJAX and REST?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AJAX&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Requests are sent to the server using the XMLHttpRequest object. Javascript later interprets the response and changes the page dynamically&lt;/li&gt;
&lt;li&gt;AJAX supports asynchronous requests and thereby does not require constant client-server interactions&lt;/li&gt;
&lt;li&gt;AJAX dynamically updates the UI without reloading the page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;REST&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;REST uses a URL and a request/response pattern to access resources&lt;/li&gt;
&lt;li&gt;REST requires a constant client-server interaction&lt;/li&gt;
&lt;li&gt;REST requests data or information from the server and then updates it&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#17-what-is-jaxrs"&gt;
  &lt;/a&gt;
  17. What is JAX-RS?
&lt;/h2&gt;

&lt;p&gt;JAX-RS stands for Java API for RESTful web services. It is a Java-based specification, developed for the implementation of Java in RESTful services.&lt;/p&gt;

&lt;p&gt;JAX-RS helps REST applications communicate well with Java. It is also used for SOAP communication in Java.&lt;/p&gt;

&lt;p&gt;Some of the common implementations of JAX-RS are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Jersey&lt;/li&gt;
&lt;li&gt;RESTEasy&lt;/li&gt;
&lt;li&gt;Apache CXF&lt;/li&gt;
&lt;li&gt;Play&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>devops</category>
    </item>
    <item>
      <title>How To Reduce Context Switching as a Developer</title>
      <author>Alex Omeyer</author>
      <pubDate>Thu, 16 Sep 2021 12:05:30 +0000</pubDate>
      <link>https://dev.to/alexomeyer/how-to-reduce-context-switching-as-a-developer-1hnn</link>
      <guid>https://dev.to/alexomeyer/how-to-reduce-context-switching-as-a-developer-1hnn</guid>
      <description>&lt;p&gt;Context switching is the act of working on several tasks in parallel. More specifically, working on one task and switching to another task while not finishing the previous task. &lt;/p&gt;

&lt;p&gt;Constantly switching between different tasks requires your brain to jump from one thought process to another. Developers often prefer long blocks of uninterrupted work to get into a so-called state of flow or &lt;a href="https://betterprogramming.pub/deep-programming-da7dc58a7104"&gt;deep work&lt;/a&gt;. For that reason, context switching prevents developers from reaching this state of flow.&lt;/p&gt;

&lt;p&gt;Some of the most common reasons for productivity loss are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Interruptions at your workplace&lt;/li&gt;
&lt;li&gt;Switching between tools &amp;amp; apps&lt;/li&gt;
&lt;li&gt;Balancing between personal and team productivity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s take a look at each of these causes and possible solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoid-potential-interruptions"&gt;
  &lt;/a&gt;
  Avoid potential interruptions
&lt;/h2&gt;

&lt;p&gt;Organising a space for you to work without distractions is the number one step to reduce context switching and increase productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grouping similar tasks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m a huge fan of grouping similar tasks because it helps me reduce context switching. For instance, I prefer to block time in my calendar to answer all my emails or Slack messages at once.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0jPGQkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eh93yxy9w7b6209q5gfy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0jPGQkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eh93yxy9w7b6209q5gfy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Organising TODO lists&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another great approach to &lt;a href="https://www.stepsize.com/blog/how-to-organise-your-todos-as-a-software-engineer"&gt;organise your work in TODO lists&lt;/a&gt;. A TODO list helps you to list all tasks and clear your mind of any unfinished ones. On top of that, a TODO list is an essential tool to prioritise your tasks. It will help you to focus on the most impactful ones. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Turning off notifications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First of all, let’s talk about notifications and their disruptive effect on deep work. &lt;/p&gt;

&lt;p&gt;Imagine you are working on a new feature, and a Slack notification pops up. You decide to ignore the notification and continue work on the feature. However, your mind briefly switches its context to analyse the importance of the notification and determines if you should take immediate action. &lt;/p&gt;

&lt;p&gt;In fact, we can label this as context switching even though you decide not to engage with the notification. Yet, your mind gets distracted by the notification, which disrupts your flow state. Therefore, the single best tip to reach a deep state of work is to &lt;a href="https://support.google.com/chrome/answer/3220216?hl=en&amp;amp;co=GENIE.Platform%3DDesktop"&gt;turn off all notifications&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoid-switching-between-tools"&gt;
  &lt;/a&gt;
  Avoid switching between tools
&lt;/h2&gt;

&lt;p&gt;For devs, context switching often occurs when switching between different tools. Just think about the number of times you leave your IDE to access a project management tool like JIRA, Trello, or Monday.com.&lt;/p&gt;

&lt;p&gt;Each time you create an issue, you need to switch between tools.&lt;/p&gt;

&lt;p&gt;Luckily, modern tools solve this problem by helping you stay in your IDE, e.g. VS Code or JetBrains.&lt;/p&gt;

&lt;p&gt;Stepsize is an editor-first &lt;a href="https://www.stepsize.com/r/vscode?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=editor-first"&gt;issue tracker for VS Code&lt;/a&gt; and &lt;a href="https://www.stepsize.com/r/jetbrains?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=editor-first"&gt;JetBrains&lt;/a&gt; that allows you to create, bookmark, and prioritise codebase issues directly in your editor. Therefore, it’s an excellent tool to reduce tool switching and keep your mind focused while improving your codebase health.&lt;/p&gt;

&lt;p&gt;Moreover, you can collaborate on the codebase issues with your colleagues by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating issues from the IDE&lt;/li&gt;
&lt;li&gt;Seeing all relevant issues linked to a particular piece of code&lt;/li&gt;
&lt;li&gt;Prioritising and resolving issues &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will significantly reduce context switching and improve your team communication.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#balancing-between-personal-and-team-productivity"&gt;
  &lt;/a&gt;
  Balancing between personal and team productivity
&lt;/h2&gt;

&lt;p&gt;Often, developers struggle to balance timely communication and context switching. As we already know, context switching has a negative impact on your productivity because it prevents you from reaching a deep state of work. &lt;/p&gt;

&lt;p&gt;On the other hand, when colleagues ask a question, you want to help them promptly. For example, a developer asks for your assistance and might be blocked if you don’t help him. But should you sacrifice your flow state to help your colleague? Well, the answer is somewhat divided. &lt;/p&gt;

&lt;p&gt;Try to find a balance between responding on time and prioritising your work. Asynchronous communication has become a popular approach to tackle this problem. Instead of calling a meeting for each problem, communicate with the involved people and resolve it via text-based communication such as Slack. Moreover, it would help if you blocked time in your calendar to reach a flow state and leave time slots open for meetings or handling questions from colleagues.&lt;/p&gt;

&lt;p&gt;For instance, you can block two slots of three hours of deep work and leave two slots of one hour for asynchronous communication. This is one approach to prioritise your work while helping colleagues in a timely manner.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-gamify-your-work-to-reduce-context-switching"&gt;
  &lt;/a&gt;
  Bonus: Gamify your work to reduce context switching
&lt;/h2&gt;

&lt;p&gt;Here are a couple of fun apps to make your journey to productivity more fun:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Forest: Planting distracting-free trees&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.forestapp.cc/"&gt;Forest&lt;/a&gt; is one of the most simple yet effective tools to reduce context switching. This shows again that a simple tool can do wonders. You can download Forest as a mobile application, but you can also install it as a Chrome extension in your browser. &lt;/p&gt;

&lt;p&gt;Forest helps you to stay focused by planting virtual trees. If you stay focused, the tree will grow while you work. However, when you get distracted and open blocked websites or your phone, the tree will die. The cool thing about this app is that you can earn virtual coins in Forest that you can exchange for planting real trees!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Habitica: gamified habit-building&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://habitica.com/static/home"&gt;Habitica&lt;/a&gt; takes habit-building to a whole level by adding gamification to the mix. First of all, you have to define what goals you want to achieve or what tasks you want to accomplish. Each time you accomplish a task, you can check the task off in the app. It allows you to earn experience points and gold tokens in the game. These gold tokens can be used to buy equipment and some items, as well as custom rewards.&lt;/p&gt;

&lt;p&gt;It’s a great application that makes habit-building fun and engaging, even involving your friends or finding people working towards a similar goal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Many developers struggle with context switching. Nowadays, developers have to use many different tools in their day-to-day tasks. IDE-based tools and extensions can help you to reduce context switching.&lt;/p&gt;

&lt;p&gt;On top of that, the most important lesson is to block dedicated focus time. During these focus blocks, you should turn off all notifications to avoid them interrupting your flow state. For many developers, it’s a process of trial and error to find the right tools that can help them to work distraction-free.&lt;/p&gt;

&lt;p&gt;P.S. I wrote an article on &lt;a href="https://dev.to/alexomeyer/7-vs-code-extensions-that-help-ll-you-stay-in-your-editor-a5f"&gt;7 VS Code extensions that will help you stay in your editor&lt;/a&gt; to avoid context switching - check it out!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>tooling</category>
      <category>vscode</category>
    </item>
    <item>
      <title>7 VS Code Extensions that Help'll You Stay in Your Editor</title>
      <author>Alex Omeyer</author>
      <pubDate>Thu, 16 Sep 2021 12:03:42 +0000</pubDate>
      <link>https://dev.to/alexomeyer/7-vs-code-extensions-that-help-ll-you-stay-in-your-editor-a5f</link>
      <guid>https://dev.to/alexomeyer/7-vs-code-extensions-that-help-ll-you-stay-in-your-editor-a5f</guid>
      <description>&lt;p&gt;Constantly switching between different tasks and tools requires your brain to jump from one thought process to another. Developers often prefer long blocks of uninterrupted work to get into deep work.&lt;/p&gt;

&lt;p&gt;Extensions that help you stay in the editor &lt;a href="https://dev.to/alexomeyer/how-to-reduce-context-switching-as-a-developer-1hnn"&gt;reduce context switching&lt;/a&gt; and help you reach the state of flow.&lt;/p&gt;

&lt;p&gt;Let’s look at some of the most useful ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-git-history"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory"&gt;Git History&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Git History helps you avoid switching from VS Code editor to GitHub. It'll show you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git log along with the graph and details&lt;/li&gt;
&lt;li&gt;previous copy of the file&lt;/li&gt;
&lt;li&gt;the history of a file or a line in a file (Git Blame) and more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---pm1Ou1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jddbiqb2ncc9c3j3fyn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---pm1Ou1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jddbiqb2ncc9c3j3fyn.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-image-preview"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://marketplace.visualstudio.com/items?itemName=kisstkondoros.vscode-gutter-preview"&gt;Image preview&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Image Preview extension provides inline previews for images included HTML file types. The extension shows a pop-up window in the editor surface, and an optional image preview in the gutter, which can be toggled on or off in User Settings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBGbEKgG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8b55p0rof88oqy0onalz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBGbEKgG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8b55p0rof88oqy0onalz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-stepsize"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.stepsize.com/r/vscode?utm_medium=dev.to&amp;amp;utm_source=referral&amp;amp;utm_campaign=editor-first"&gt;Stepsize&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Stepsize allows you to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create, view, and edit codebase issues, such as technical debt, refactoring work, and other defects  directly from your editor.&lt;/li&gt;
&lt;li&gt;you can then collaborate on these issues with your teammates, upvoting important issues, adding key issues to your sprints with the Jira integration, and resolving them - all directly in the editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is an excellent tool to reduce tool switching while improving your codebase.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MEg8goUI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7mdsjk74maj6clkisef.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MEg8goUI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y7mdsjk74maj6clkisef.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-browser-preview"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://marketplace.visualstudio.com/items?itemName=auchenberg.vscode-browser-preview"&gt;Browser Preview&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Browser Preview for VS Code enables you to open a real browser preview inside your editor that you can debug.&lt;/p&gt;

&lt;p&gt;• Browser preview inside VS Code (Powered by headless Chromium).&lt;br&gt;
• Ability to have multiple previews open at the same time.&lt;br&gt;
• Debuggable. Launch urls and attach Debugger for Chrome to the browser view instance, and debug within VS Code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yH4p9XWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yle736b83ykvshvtc8al.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yH4p9XWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yle736b83ykvshvtc8al.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-remote-containers"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"&gt;Remote - Containers&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Remote - Containers extension lets you use a Docker container as a full-featured development environment. Whether you deploy to containers or not, containers make a great development environment because you can:&lt;/p&gt;

&lt;p&gt;• Develop with a consistent, easily reproducible toolchain on the same operating system you deploy to.&lt;br&gt;
• Quickly swap between different, separate development environments and safely make updates without worrying about impacting your local machine.&lt;br&gt;
• Make it easy for new team members / contributors to get up and running in a consistent development environment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8oV0cwbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9eckxaa9eh8fmumput6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8oV0cwbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v9eckxaa9eh8fmumput6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-excel-viewer"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://marketplace.visualstudio.com/items?itemName=GrapeCity.gc-excelviewer"&gt;Excel Viewer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This extension is a must for devs who are dealing a lot with CSV files. It provides read-only viewers for CSV files and Excel spreadsheets within the current VS Code workspace, and will easily save you hours of work!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--onOikrxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezi8c6qysl1s1uaemv98.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--onOikrxA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ezi8c6qysl1s1uaemv98.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-dash"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://marketplace.visualstudio.com/items?itemName=deerawan.vscode-dash"&gt;Dash&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Dash is an API Documentation Browser and Code Snippet Manager. Dash instantly searches offline documentation sets for 200+ APIs, 100+ cheat sheets and more. You can even generate your own docsets or request docsets to be included.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5uzTHJ4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1w7i8l347na7710dvluf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5uzTHJ4N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1w7i8l347na7710dvluf.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-extension-vsinder"&gt;
  &lt;/a&gt;
  Bonus Extension: &lt;a href="https://marketplace.visualstudio.com/items?itemName=benawad.vsinder"&gt;Vsinder&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Vsinder is a dating app for devs where you swipe on code. If you think this is crazy, just check out this review! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CHGI25u3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u18wzxlsnmpr1skxyjg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHGI25u3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u18wzxlsnmpr1skxyjg4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you have any favourite extensions that help you stay focused? Share in the comments!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>codequality</category>
      <category>productivity</category>
      <category>tooling</category>
    </item>
    <item>
      <title>⚡JS Tip: Create Emoji Characters in JavaScript using String.fromCodePoint();</title>
      <author>-</author>
      <pubDate>Thu, 16 Sep 2021 11:51:00 +0000</pubDate>
      <link>https://dev.to/iamatifriaz/js-tip-create-emoji-characters-in-javascript-using-string-fromcodepoint-20nh</link>
      <guid>https://dev.to/iamatifriaz/js-tip-create-emoji-characters-in-javascript-using-string-fromcodepoint-20nh</guid>
      <description>&lt;p&gt;The String.fromCodePoint() method was added to ECMAScript 2015. The result of this method is a string (and not a String object).&lt;br&gt;
Because fromCodePoint() is a static String method, you must call it as String.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let smile = String.fromCodePoint(128516); // '128516' is character code
let str = `I got you ${smile}!`;
console.log(str);
// output: "I got you 😄!" 


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKByfYdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/483aunrbvexwk9qvtvlr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKByfYdU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/483aunrbvexwk9qvtvlr.png" alt="You can create emoji characters in JavaScript using String.fromCodePoint( );"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h2&gt;

&lt;p&gt;Here is the syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;String.fromCodePoint(num1)
String.fromCodePoint(num1, num2)
String.fromCodePoint(num1, num2, ..., numN)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#initially-created-on-twitter"&gt;
  &lt;/a&gt;
  Initially created on Twitter
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CeJYUGOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E_QMnlbWQAIm-Lb.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--grrUDOzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1422286620498309132/m3FX0agM_normal.jpg" alt="Atif Riaz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Atif Riaz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/iamatifriaz"&gt;@iamatifriaz&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ⚡JS Tip :  &lt;br&gt;You can create emoji characters in JavaScript using String.fromCodePoint( );&lt;br&gt;&lt;br&gt;Give it a try 🚀&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/javascriptdeveloper"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/hashtag/javascript"&gt;#javascript&lt;/a&gt;developer &lt;a href="https://twitter.com/hashtag/javascript"&gt;#javascript&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:40 PM - 14 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1437788236332605449" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1437788236332605449" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1437788236332605449" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;If you liked this article, be sure to ❤️ it.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>javascript30</category>
    </item>
    <item>
      <title>How to fix microphone including system sounds on Linux</title>
      <author>Seth</author>
      <pubDate>Thu, 16 Sep 2021 11:49:09 +0000</pubDate>
      <link>https://dev.to/saluki/how-to-fix-microphone-including-system-sounds-on-linux-4fpp</link>
      <guid>https://dev.to/saluki/how-to-fix-microphone-including-system-sounds-on-linux-4fpp</guid>
      <description>&lt;h1&gt;
  &lt;a href="#magright-the-problem"&gt;
  &lt;/a&gt;
  🔎 The Problem
&lt;/h1&gt;

&lt;p&gt;Recently, I have been on voice calls with my friends, and I have been noticing that my system sounds are being included in my microphone playback. An example of this would be if I listen to music whilst talking to friends, my friends can hear the music too. This isn't ideal, so I decided I would try and fix it. Luckily, I found it to be quite an easy fix.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bulb-the-solution"&gt;
  &lt;/a&gt;
  💡 The Solution
&lt;/h1&gt;

&lt;p&gt;To fix this, open up a terminal and type &lt;code&gt;alsamixer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, make sure the correct sound card is selected. If you aren't sure, the default one is probably correct. You can press &lt;code&gt;F6&lt;/code&gt; to view your options and switch to a different card.&lt;/p&gt;

&lt;p&gt;The field we're interested in is the one called &lt;strong&gt;Loopback&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Using the arrow keys, navigate to right until you have it selected. Then press the down arrow key to set it to &lt;em&gt;disabled&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gear-testing"&gt;
  &lt;/a&gt;
  ⚙️ Testing
&lt;/h1&gt;

&lt;p&gt;Hopefully this is all you'll need to do to fix your microphone issues. You can now press &lt;code&gt;Esc&lt;/code&gt; to exit Alsamixer.&lt;/p&gt;

&lt;p&gt;If you want to make sure that this has worked, then navigate to a folder somewhere in your home directory and type &lt;code&gt;arecord test.wav&lt;/code&gt;. Now talk a bit, and play some music or audio in the background. When you're done, press &lt;code&gt;Ctrl+C&lt;/code&gt; to stop the recording.&lt;/p&gt;

&lt;p&gt;To play the audio file, run &lt;code&gt;aplay test.wav&lt;/code&gt; to playback the recording. If this sounds good, then you should have solved your problems. &lt;/p&gt;

&lt;p&gt;The last thing you should do is delete the file you created to test your microphone, you can do this with &lt;code&gt;rm test.wav&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thinking-not-working"&gt;
  &lt;/a&gt;
  🤔 Not working?
&lt;/h1&gt;

&lt;p&gt;If this didn't solve your problem, then don't panic. In my experience this is the most common cause of the issue, but there are definitely others out there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://forums.linuxmint.com/viewtopic.php?t=301725"&gt;This forum post&lt;/a&gt; goes into quite a bit more detail and solves a more complex instance of the issue.&lt;/p&gt;

&lt;p&gt;And if that still doesn't help you, feel free to tag me on Twitter and I'll do my best to help you figure it out.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For the original version of this article, with images for guidance, see: &lt;a href="https://saluki.tech/posts/2021/09/2021-09-16-fix-mic-playback-with-system-sounds/"&gt;https://saluki.tech/posts/2021/09/2021-09-16-fix-mic-playback-with-system-sounds/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Learn to know the best Python IDEs and Code Editors</title>
      <author>cloudytech147</author>
      <pubDate>Thu, 16 Sep 2021 11:32:20 +0000</pubDate>
      <link>https://dev.to/cloudytech147/learn-to-know-the-best-python-ides-and-code-editors-19de</link>
      <guid>https://dev.to/cloudytech147/learn-to-know-the-best-python-ides-and-code-editors-19de</guid>
      <description>&lt;h2&gt;
  &lt;a href="#best-python-ides"&gt;
  &lt;/a&gt;
  Best Python IDEs
&lt;/h2&gt;

&lt;p&gt;Generally, all the &lt;a href="https://www.techgeekbuzz.com/best-python-ides-text-editor/"&gt;top Python IDEs&lt;/a&gt; are available for all the popular operating systems. At least almost all the IDEs are available for Windows. Here is the list of top Python IDEs that you can download and start tinkering with the Python code.&lt;/p&gt;

&lt;p&gt;Note: Before considering any of the following IDEs please check if it is available for your operating system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-pycharm"&gt;
  &lt;/a&gt;
  1. PyCharm
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Type: Open-source [Community Edition] and commercial; $199 for professional development. [Professional Edition]&lt;/li&gt;
&lt;li&gt;It supports Windows, Linux, macOS, etc.&lt;/li&gt;
&lt;li&gt;You can download it from here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qM1RcotG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://secureservercdn.net/160.153.137.163/84g.4be.myftpupload.com/wp-content/uploads/2019/03/Pycharm-300x300.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qM1RcotG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://secureservercdn.net/160.153.137.163/84g.4be.myftpupload.com/wp-content/uploads/2019/03/Pycharm-300x300.png" alt="PyCharm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PyCharm is widely used for writing Python code across the globe. It is ideal for beginners. PyCharm is specially designed for Python by JetBrains and is the best Python IDE for macOS users. The neatness and maintainability of code can be seen in PyCharm.&lt;/p&gt;

&lt;p&gt;Whenever it comes to python programming, PyCharm IDE always comes first. Intelligent code editor, fast and safe refactoring, debugging, testing, profiling, remote development, Python console, IPython Notebook, and scientific&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-spyder"&gt;
  &lt;/a&gt;
  2. Spyder
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;By Anaconda distribution&lt;/li&gt;
&lt;li&gt;Type: Open-source&lt;/li&gt;
&lt;li&gt;Supported by Qt, Windows, macOS, and Linux.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Hrer4Uc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://secureservercdn.net/160.153.137.163/84g.4be.myftpupload.com/wp-content/uploads/2019/03/5-Best-Python-IDEs-and-Code-Editors-in-2019-2-300x300.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Hrer4Uc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://secureservercdn.net/160.153.137.163/84g.4be.myftpupload.com/wp-content/uploads/2019/03/5-Best-Python-IDEs-and-Code-Editors-in-2019-2-300x300.png" alt="Spyder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The interesting fact about Spyder is that it’s built using Python. Spyder is specifically designed for Python data analysis. For engineers and data scientists who have a keen interest in scientific development, Spyder would be a great IDE.&lt;/p&gt;

&lt;p&gt;You can run Spyder by installing the Anaconda distribution. Anaconda is a famous Python distribution for data science and machine learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spyder-features"&gt;
  &lt;/a&gt;
  Spyder Features:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Code editor&lt;/li&gt;
&lt;li&gt;IPython console&lt;/li&gt;
&lt;li&gt;Variable Explorer&lt;/li&gt;
&lt;li&gt;Profiler&lt;/li&gt;
&lt;li&gt;Debugger&lt;/li&gt;
&lt;li&gt;Support for many data Science libraries.&lt;/li&gt;
&lt;li&gt;3rd-party plugin support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-thonny"&gt;
  &lt;/a&gt;
  3. Thonny
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;By Aivar Annamaa and contributors&lt;/li&gt;
&lt;li&gt;Type: Open-source&lt;/li&gt;
&lt;li&gt;Supported by Windows, Linux, and macOS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mF_t2ZGR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://secureservercdn.net/160.153.137.163/84g.4be.myftpupload.com/wp-content/uploads/2019/03/Thonny.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mF_t2ZGR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://secureservercdn.net/160.153.137.163/84g.4be.myftpupload.com/wp-content/uploads/2019/03/Thonny.png" alt="Thonny"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thonny is recently introduced as an IDE for Python. If you are a complete beginner and looking for an IDE, then Thonny can help you to start your Python journey.&lt;/p&gt;

&lt;p&gt;Thonny is specially designed for beginners. It is small in size and works great on low-end computers. Other Python IDEs can be too complex to pick up for a newcomer, but operating Thonny is very easy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-idle"&gt;
  &lt;/a&gt;
  4. IDLE
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Developed By Guido van Rossum&lt;/li&gt;
&lt;li&gt;Type: Open-source&lt;/li&gt;
&lt;li&gt;For Linux, macOS, and Windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IDLE (Integrated Development and Learning Environment) is the default Python IDE that comes along with the python interpreter. When you download Python from its official website the IDEL IDE comes along with it, hence, you do not need to install it separately.&lt;/p&gt;

&lt;p&gt;Even if you install the updated version of Python, the compatible version of IDLE automatically installs with it too. IDLE is beginner-friendly, but using it for big projects is not a very good idea. Although IDLE provides many customization features, it lacks some basic IDE features that other top-notch Python IDEs offer, such as auto-ending brackets and quotes.&lt;/p&gt;

&lt;p&gt;IDLE is intended for the educational environment. That’s why it is very lightweight and does not consume many CPU resources.&lt;/p&gt;

&lt;p&gt;Go through our blogs to know more.&lt;/p&gt;

</description>
      <category>python</category>
      <category>ide</category>
    </item>
    <item>
      <title>Five Steps to Increase Your Online Sales</title>
      <author>Jyoti</author>
      <pubDate>Thu, 16 Sep 2021 11:07:26 +0000</pubDate>
      <link>https://dev.to/jyoti_/five-steps-to-increase-your-online-sales-o72</link>
      <guid>https://dev.to/jyoti_/five-steps-to-increase-your-online-sales-o72</guid>
      <description>&lt;p&gt;Selling on online platforms has become challenging and quite competitive with more advancements in technology. And, only by taking smart steps can you stand out from other businesses. &lt;a href="https://cedcommerce.com/blog/ecommerce-marketplace-integration-for-multichannel-selling/?utm_source=devto-magento&amp;amp;utm_medium=jyoti-ecommerceintegration"&gt;eCommerce Marketplace Integration&lt;/a&gt; is one such smart decision that can help you increase your online sales and beat your competitors.&lt;br&gt;
Here is everything you should know about eCommerce Integration and how to increase sales online.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-ecommerce-integration"&gt;
  &lt;/a&gt;
  What is eCommerce Integration?
&lt;/h2&gt;

&lt;p&gt;eCommerce Integration is an API connector tool that connects the seller’s store with the marketplace account. So, the sellers get a centralized platform where every marketplace-related activity is visible. In this way, the sellers don’t have to switch between the different accounts now and then to check new notifications.&lt;br&gt;
This integration has many features like the &lt;a href="https://cedcommerce.com/blog/cron-job-in-magento-multichannel-selling/?utm_source=devto-magento&amp;amp;utm_medium=jyoti-ecommerceintegration"&gt;Cron scheduler&lt;/a&gt; that establishes the synchronization between the connected channels. Its main task is to keep all the data uniform across the platforms. It also saves time and effort as the sellers no longer have to perform these tasks manually. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#things-you-should-know"&gt;
  &lt;/a&gt;
  Things You Should Know:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Charges&lt;/strong&gt;&lt;br&gt;
The Integration charges start from $99 and vary according to the marketplaces. Most importantly, the sellers are charged only once, and they don’t have to pay any recurring or commission charges.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Compatibility&lt;/strong&gt;&lt;br&gt;
This Integration extension is highly compatible with most eCommerce frameworks such as Magento, WooCommerce, Shopify, etc. Talking about marketplaces, you can use the extension with Amazon, eBay, &lt;a href="https://cedcommerce.com/magento-2-extensions/zalando-magento-2-multichannel-integration?utm_source=devto-magento&amp;amp;utm_medium=jyoti-ecommerceintegration"&gt;Zalando&lt;/a&gt; and 80 other marketplaces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Number of Users Worldwide&lt;/strong&gt;&lt;br&gt;
There are over 15,000 merchants worldwide who are using eCommerce Integration to simplify their selling process.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-improve-your-online-sales-with-ecommerce-integration"&gt;
  &lt;/a&gt;
  How to Improve Your Online Sales with eCommerce Integration?
&lt;/h2&gt;

&lt;p&gt;The Integration works in 5 steps. And, these five steps can help you increase your online sales.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-connection"&gt;
  &lt;/a&gt;
  API Connection
&lt;/h3&gt;

&lt;p&gt;API is the essential part of &lt;a href="https://cedcommerce.com/magento-2-extensions/?cat=46&amp;amp;q=&amp;amp;utm_source=devto-magento&amp;amp;utm_medium=jyoti-ecommerceintegration#"&gt;eCommerce Integration&lt;/a&gt;. This tool makes it easy to establish the connection between the seller’s store and the marketplace. The API first connects with the seller’s store and establishes a connection with the marketplace to do so successfully.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#establishing-a-connection-with-inventory"&gt;
  &lt;/a&gt;
  Establishing a connection with Inventory
&lt;/h3&gt;

&lt;p&gt;There should be a secure connection between the inventory and the store to sell successfully on the marketplace. It ensures that the stock is updated on the store and other connected platforms.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-transfer-product-upload-with-proper-category-mapping"&gt;
  &lt;/a&gt;
  Data Transfer (Product Upload with proper category mapping)
&lt;/h3&gt;

&lt;p&gt;Once the API connection is established safely, the seller can choose to upload data such as products along with their details from their store to the marketplace. As the process is automated, it saves many hours and effort from the seller’s end.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#realtime-sync-between-all-platforms"&gt;
  &lt;/a&gt;
  Real-Time Sync between all platforms
&lt;/h3&gt;

&lt;p&gt;Uploading products on different channels is an important task. But it is also necessary to have their data such as product price, details, stock information synchronized across the connected platforms.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#acceptance-and-fulfilment-of-orders"&gt;
  &lt;/a&gt;
  Acceptance and Fulfilment of orders
&lt;/h3&gt;

&lt;p&gt;Managing new orders and shipments from different seller panels is another challenging task. But eCommerce Integration simplifies it by providing a centralized platform from where the sellers can easily manage everything at once.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h2&gt;

&lt;p&gt;eCommerce Integration helps sellers in many ways. Most importantly, it saves time, reduces chances of errors, improves online visibility, and makes the selling process efficient.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, what are your plans to increase your online sales?&lt;/em&gt;&lt;/p&gt;

</description>
      <category>ecommerceintegration</category>
      <category>marketplaceintegration</category>
      <category>apiconnector</category>
      <category>ecommercesolution</category>
    </item>
    <item>
      <title>Free Bootstrap 5 Dashboard - Built with Flask and Docker</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 16 Sep 2021 10:44:05 +0000</pubDate>
      <link>https://dev.to/sm0ke/bootstrap-5-admin-dashboard-flask-and-docker-449m</link>
      <guid>https://dev.to/sm0ke/bootstrap-5-admin-dashboard-flask-and-docker-449m</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a simple &lt;strong&gt;Admin Dashboard&lt;/strong&gt; built with &lt;strong&gt;Flask and Docker&lt;/strong&gt; on top of a modern &lt;strong&gt;Bootstrap 5&lt;/strong&gt; design: Volt Dashboard. The product can be used in many ways from simple learning to bootstrap a production-ready project with speed. For newcomers, Flask is a popular lightweight web framework, and Docker is a virtualization software used to build and deliver software.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-volt"&gt;Flask Volt Bootstrap 5&lt;/a&gt; - product page&lt;/strong&gt; (contains DEMO and sources)&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aeI77trl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/flask-dashboard-volt/master/media/flask-dashboard-volt-intro.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aeI77trl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/app-generator/flask-dashboard-volt/master/media/flask-dashboard-volt-intro.gif" alt="Bootstrap Admin Dashboard built with Flask and Docker."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Probably the most easier way to start and use this free product is to download the sources from the product page and start the app in Docker. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Download and unzip sources&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;unzip flask-dashboard-volt.zip
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-dashboard-volt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build 
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, we can visit Flask Volt in the browser &lt;code&gt;http://localhost:85&lt;/code&gt; and interact with the UI.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IL6Uldwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e9hpd51mlfqxnfzs5ku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IL6Uldwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7e9hpd51mlfqxnfzs5ku.png" alt="Login page of an open-source Bootstrap Admin Dashboard built with Flask and Docker."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The relevant files, listed below, can be used to Dockerize any Flask project with ease:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Dockerfile&lt;/code&gt; - the entry point for Docker setup&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docker-compose.yml&lt;/code&gt; - configure the modules and network layers used to deploy the project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;gunicorn-cfg.py&lt;/code&gt; - configure the Gunicorn (WSGI) Server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Nginx&lt;/code&gt; - the HTTP server that handles the browser requests &lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt; - File contents&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; python:3.9&lt;/span&gt;

&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="c"&gt;# set environment variables&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; PYTHONDONTWRITEBYTECODE 1&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; PYTHONUNBUFFERED 1&lt;/span&gt;

&lt;span class="c"&gt;# install python dependencies&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--upgrade&lt;/span&gt; pip
&lt;span class="k"&gt;RUN &lt;/span&gt;pip &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--no-cache-dir&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt

&lt;span class="c"&gt;# gunicorn&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["gunicorn", "--config", "gunicorn-cfg.py", "run:app"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The file basically copy the sources inside the Docker container, uses Python 3.9 as runtime environment, install the dependencies and Gunicorn as WSGI server. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;docker-compose.yml&lt;/strong&gt; - Docker stack configurator&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3.8'&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;appseed-app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;appseed_app&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db_network&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;web_network&lt;/span&gt;
  &lt;span class="na"&gt;nginx&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt;
    &lt;span class="na"&gt;restart&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;always&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;nginx:latest"&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;85:85"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;./nginx:/etc/nginx/conf.d&lt;/span&gt;
    &lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;web_network&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;appseed-app&lt;/span&gt;
&lt;span class="na"&gt;networks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db_network&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;driver&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bridge&lt;/span&gt;
  &lt;span class="na"&gt;web_network&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;driver&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bridge&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above settings will expose the app on port &lt;strong&gt;85&lt;/strong&gt; (see &lt;code&gt;ports&lt;/code&gt; node)&lt;/p&gt;




&lt;p&gt;To integrate the files to another project, all we need is to edit the &lt;code&gt;Dockerfile&lt;/code&gt; to match the new app signature (&lt;code&gt;run:app&lt;/code&gt; for this sample) and just copy all mentioned files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;...
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["gunicorn", "--config", "gunicorn-cfg.py", "run:app"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;When the project runs in the browser, we can create, authenticate and access all private pages provided by this simple Flask Dashboard. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Full Features:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Up-to-date dependencies: &lt;strong&gt;Flask 2.0.1&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SCSS compilation&lt;/strong&gt; via &lt;code&gt;Gulp&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;DBMS: SQLite, PostgreSQL (production) &lt;/li&gt;
&lt;li&gt;DB Tools: SQLAlchemy ORM, Flask-Migrate (schema migrations)&lt;/li&gt;
&lt;li&gt;Modular design with &lt;strong&gt;Blueprints&lt;/strong&gt;, simple codebase&lt;/li&gt;
&lt;li&gt;Session-Based authentication (via &lt;strong&gt;flask_login&lt;/strong&gt;), Forms validation&lt;/li&gt;
&lt;li&gt;Deployment scripts: Docker, Gunicorn / Nginx, Heroku&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8YaH-4zj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scdo1v98y43vgq6trq69.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YaH-4zj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/scdo1v98y43vgq6trq69.jpg" alt="User Profile page of an open-source Bootstrap Admin Dashboard built with Flask and Docker."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access: &lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/flask"&gt;Flask Dashboards&lt;/a&gt; - the page contains free &amp;amp; commercial products&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-Source Dashboards&lt;/a&gt; - a curated list provided by AppSeed &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flask</category>
      <category>docker</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>No Code tools are either hype or niche — you should opt for niche</title>
      <author>Anton Vasin</author>
      <pubDate>Thu, 16 Sep 2021 10:35:18 +0000</pubDate>
      <link>https://dev.to/readymag/no-code-tools-are-either-hype-or-niche-you-should-opt-for-niche-4nh2</link>
      <guid>https://dev.to/readymag/no-code-tools-are-either-hype-or-niche-you-should-opt-for-niche-4nh2</guid>
      <description>&lt;p&gt;No-code is a broad term. It describes a vast set of products that help end-users assemble web pages and applications without hiring developers.&lt;/p&gt;

&lt;p&gt;In recent years, it has also become an ideology of sorts (praised, for example, in this &lt;a href="https://www.forbes.com/sites/johneverhard/2019/01/15/what-really-is-low-codeno-code-development/?sh=20c508132a8e"&gt;Forbes&lt;/a&gt; column): a promise to get rid of all complications that are intertwined with IT development — its proverbial high costs, unpredictability, and difficulty to scale the teams fast enough.&lt;/p&gt;

&lt;p&gt;However, I’d argue the promise is often exaggerated, as the proposed approaches are oversold and/or not particularly new. Still, niche solutions from the no-code toolbox might get your tasks in certain pipeline parts done surprisingly well.&lt;/p&gt;

&lt;p&gt;So let’s pick apart the ideology and get into what startups and businesses should consider when thinking about no-code solutions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nocode-is-not-particularly-new"&gt;
  &lt;/a&gt;
  No-code is not particularly new
&lt;/h2&gt;

&lt;p&gt;Speaking of no-code, we usually think of it as a recent development, a step made in the late 2010s to emancipate the world from expensive engineers. Be it Notion, Mailchimp, Voiceflow, or Bubble, companies associated with no-code approaches are usually recently found startups. But is the approach actually that recent?&lt;/p&gt;

&lt;p&gt;In fact, no-code-like tools were there from the very beginning of the computer era. Take Microsoft Excel: it’s basically a way to embark on visual point-and-click methods to create a simple database instead of using SQL. Or any graphical operating system like Windows, Mac OS, or Ubuntu: they give users a command line functionality combined with visual means, without the need to learn code-like commands.&lt;/p&gt;

&lt;p&gt;This point also perfectly illustrates the limitations of no-code. It is no coincidence that most operating systems still have a command line-based core and give their power users access to it: some things are just intrinsically difficult to visualize.&lt;/p&gt;

&lt;p&gt;Yes, a lot of people don’t touch the Mac OS X Terminal and never will, but in most cases, somebody terminal-savvy needs to be around to perform any actions above a certain level of complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nocode-limits-patterns-of-thought"&gt;
  &lt;/a&gt;
  No-code limits patterns of thought
&lt;/h2&gt;

&lt;p&gt;The visualization and simplification, these pillars of no-code, come at a price: no-code tools usually nudge a client to a limited number of patterns — in fact, that’s exactly what allows them to get rid of the code.&lt;/p&gt;

&lt;p&gt;Say, only a certain number of product management techniques go hand in hand with no-code task management tools such as, say, Trello. As a result, the idea itself might become stale. &lt;/p&gt;

&lt;p&gt;The problem with patterns is that they deny you the possibility of learning. A salesperson can’t become an expert in business only by using landing page presets. The code usually gives you almost infinite possibilities of configuring the system (open-source culture and the competition of approaches, programming languages and libraries usually guarantee it in any given field).&lt;/p&gt;

&lt;p&gt;It might not be that important for the first project, but crucial for the growth and future of any professional. There are some domains such as computations or high-load systems performance where you can not simply ‘no-code’ your way out of complexity.&lt;/p&gt;

&lt;p&gt;That’s why I and my team at &lt;a href="https://readymag.com?utm_source=dev.to&amp;amp;utm_medium=pr&amp;amp;utm_campaign=nocode_tools"&gt;Readymag&lt;/a&gt;, a browser-based design tool that helps create websites, portfolios and all kinds of online publications without coding try to avoid staleness at all costs in our solutions, never limiting our users to presets, always giving them access to a clean canvas. We also give our users tools for coding.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#good-tools-have-precise-scope"&gt;
  &lt;/a&gt;
  Good tools have precise scope
&lt;/h2&gt;

&lt;p&gt;However, I firmly believe that no-code approaches are great when it comes to a narrow-scope task. Take Zapier, a tool for API integration, that we actually use in Readymag; or Airtable, a tool to automate the creation of CMS.&lt;/p&gt;

&lt;p&gt;The idea here is not to waste your time on something that can be easily automated and configured, still use the power of engineering for the necessary parts. &lt;/p&gt;

&lt;p&gt;Another example is specialized e-commerce tools such as Stripe or Ecwid. Instead of creating our own e-commerce sub-tool, we at Readymag have integrated them. We try to leave each part of the pipeline to the specialized tool, be it code or no-code. &lt;/p&gt;

&lt;p&gt;And we think of Readymag as another such tool — a web editor, great for interactive graphics and interactive UX, but possibly powered up with additional APIs or custom code for larger and more complex projects. A full-fledged no-code approach is limiting, but a specific no-code tool might significantly increase your development process. &lt;/p&gt;

&lt;p&gt;Summing it up — never buy into no-code as a mantra, but always keep an eye out for its niche practical uses.&lt;/p&gt;

</description>
      <category>readymag</category>
      <category>nocode</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>4 Ways to Remove Element from an Array in JavaScript ❌</title>
      <author>Gaël Thomas</author>
      <pubDate>Thu, 16 Sep 2021 10:32:32 +0000</pubDate>
      <link>https://dev.to/gaelgthomas/how-remove-element-from-an-array-in-javascript-25om</link>
      <guid>https://dev.to/gaelgthomas/how-remove-element-from-an-array-in-javascript-25om</guid>
      <description>&lt;p&gt;In this article, you will discover how to remove an element from an array in JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remove-element-from-an-array-by-its-index"&gt;
  &lt;/a&gt;
  Remove element from an array by its index
&lt;/h2&gt;

&lt;p&gt;In JavaScript, you can delete an element from an array using its index. To do so, you can use the built-in Splice method.&lt;/p&gt;

&lt;p&gt;In the example below, you want to remove the blue color at index 2. In that case, we will use the two first parameters of the Splice method. The first is the start position, while the second is the number of elements to delete (index 2 and 1 element to delete in our case).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ['red', 'green', 'yellow']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can follow the same example if you want to delete an object from an array using its index. The only difference is that your array will be an array of objects. Since you're using the index to delete an element, it will work whatever the element is.&lt;/p&gt;

&lt;p&gt;The Splice method is also helpful if you want to &lt;a href="https://herewecode.io/blog/replace-item-array-javascript/"&gt;replace an element in a JavaScript array&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Take care when using the Splice method because it mutates the original array.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#remove-element-from-an-array-by-its-value"&gt;
  &lt;/a&gt;
  Remove element from an array by its value
&lt;/h2&gt;

&lt;p&gt;If you want to delete an element from an array in JavaScript, you can do it by using its value.&lt;/p&gt;

&lt;p&gt;Let's say that you have an array of colors and you want to delete the green color.&lt;br&gt;
You can use the built-in JavaScript filter method to keep only the values that are not equal to "green".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filteredColors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filteredColors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ['red', 'blue', 'yellow']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#remove-object-from-an-array-by-its-value"&gt;
  &lt;/a&gt;
  Remove object from an array by its value
&lt;/h3&gt;

&lt;p&gt;The filter method works the same way with objects. For example, if you want to delete each person with the name "Bob" in an array, you can do as below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;persons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Roger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Romane&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filteredPersons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bob&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filteredPersons&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// [&lt;/span&gt;
&lt;span class="c1"&gt;//   { id: 1, name: 'Roger' },&lt;/span&gt;
&lt;span class="c1"&gt;//   { id: 2, name: 'Romane' }&lt;/span&gt;
&lt;span class="c1"&gt;// ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to learn more about &lt;a href="https://herewecode.io/blog/filter-array-javascript/"&gt;how to filter an array with JavaScript&lt;/a&gt;, here is my other article about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remove-the-first-element-from-an-array"&gt;
  &lt;/a&gt;
  Remove the first element from an array
&lt;/h2&gt;

&lt;p&gt;If you only want to delete the first element from an array, you can use the previous ways. But, there is one faster using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift"&gt;the array Shift method&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ['green', 'blue', 'yellow']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use the Shift method &lt;a href="https://herewecode.io/blog/javascript-remove-first-character-string/"&gt;remove the first character from a string&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Take care when using the Shift method because it mutates the original array.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#remove-the-last-element-from-an-array"&gt;
  &lt;/a&gt;
  Remove the last element from an array
&lt;/h2&gt;

&lt;p&gt;If you only want to delete the first element from an array, there is another way using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift"&gt;the array Pop method&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ['red', 'green', 'blue']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Pop method is also helpful if you want &lt;a href="https://herewecode.io/blog/remove-last-character-string-javascript/"&gt;remove the last character from a string&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Take care when using the Pop method because it mutates the original array.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;➡️ I help web developers improve their skills 💻 If you want to get more tips and resources about web programming -&amp;gt; &lt;a href="https://twitter.com/gaelgthomas/"&gt;Follow me on my Twitter 🐦&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Deploying Twitter Post Scheduler Built With React, NodeJS, FaunaDB and Vercel (Part 2)</title>
      <author>Nick Bull</author>
      <pubDate>Thu, 16 Sep 2021 10:29:46 +0000</pubDate>
      <link>https://dev.to/nickbulljs/deploying-twitter-post-scheduler-built-with-react-nodejs-faunadb-and-vercel-part-2-3npb</link>
      <guid>https://dev.to/nickbulljs/deploying-twitter-post-scheduler-built-with-react-nodejs-faunadb-and-vercel-part-2-3npb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In our first article, we have &lt;a href="https://dev.to/nickbulljs/building-twitter-post-scheduler-with-react-nodejs-and-fauna-part-1-4332"&gt;created a Twitter post scheduler&lt;/a&gt; called Twittler with React, Node.js, and &lt;a href="https://dashboard.fauna.com/accounts/register?utm_source=writewithfauna&amp;amp;utm_medium=dev.to&amp;amp;utm_campaign=q3wfw&amp;amp;utm_id=nickbull"&gt;Fauna&lt;/a&gt;. In this chapter, we will deploy it to the &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why Vercel?&lt;/p&gt;

&lt;p&gt;Vercel is the best place to deploy any frontend app with zero configuration and scale it dynamically to millions of pages without breaking a sweat. As an addition, we can deploy our backend as serverless functions without any additional configuration. Serverless functions are pieces of code written with backend languages that take an HTTP request and provide a response.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h2&gt;

&lt;p&gt;Before we start, make sure you have:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A Vercel account where we will deploy our application. You can create it &lt;a href="https://vercel.com/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A Github account as our version control. You can create it &lt;a href="https://github.com/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A Cronhub account where our cron job will be located. You can create it &lt;a href="https://cronhub.io/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#deployment-architecture"&gt;
  &lt;/a&gt;
  Deployment Architecture
&lt;/h2&gt;

&lt;p&gt;Here is how Twittler high-level deployment architecture will look like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uMKjHHdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mn4a4bt02zorr1txu7b3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uMKjHHdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mn4a4bt02zorr1txu7b3.png" alt="fauna twittler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We push our app to Github using the &lt;code&gt;git --push&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Then Github pushes our code to Vercel automatically.&lt;/li&gt;
&lt;li&gt;Vercel builds it and makes it live.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To create this architecture and bring it to life, we need to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a Github repository for our application.&lt;/li&gt;
&lt;li&gt;Make small changes in our codebase to make it suitable with &lt;a href="https://vercel.com/docs/serverless-functions/introduction"&gt;Vercel serverless functions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Connect our Github repository with Vercel, to automate Github → Vercel deployment.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s start!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pushing-twittler-to-github"&gt;
  &lt;/a&gt;
  Pushing Twittler to Github
&lt;/h2&gt;

&lt;p&gt;To push our application to Github, first, we need to create a Github repository. It’s a place that will contain all of our project's files and each file's revision history. To create a repository follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to the “&lt;a href="https://github.com/new"&gt;Create a new repository&lt;/a&gt;” page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qnZJkRZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lu44rfpcyfh8th1x21w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qnZJkRZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3lu44rfpcyfh8th1x21w.png" alt="fauna twittler"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add repository name (I used “twittler”)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the “Create repository” button. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’ve created a repository! Now, let’s push our existing codebase to it. To do it, follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using your terminal/command line, get inside the folder where your project files are kept: &lt;code&gt;cd your_path_to_the_application&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git remote add origin [git@github.com](mailto:git@github.com):YOUR_GITHUB_USERNAME/REPO_NAME.git&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git branch -M main&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git add .&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git commit -m "first commit"&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;li&gt;And finally, type &lt;code&gt;git push -u origin main&lt;/code&gt; and press enter. It will push our application to Github.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are having difficulties with pushing your application, use &lt;a href="https://gist.github.com/mindplace/b4b094157d7a3be6afd2c96370d39fad"&gt;this&lt;/a&gt; guide or official Github recommendations:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSzD9fBY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl7gbfhctowizjoest74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSzD9fBY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl7gbfhctowizjoest74.png" alt="fauna twittler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make sure your application is on Github, go to &lt;code&gt;https://github.com/YOUR_GITHUB_NAME/twittler&lt;/code&gt; and check if you see your local files there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-our-application-suitable-for-vercel"&gt;
  &lt;/a&gt;
  Making our Application Suitable for Vercel
&lt;/h2&gt;

&lt;p&gt;Vercel &lt;a href="https://vercel.com/docs/solutions/cron-jobs"&gt;doesn’t support cron jobs&lt;/a&gt; at the moment so we will use &lt;a href="https://cronhub.io/"&gt;Cronhub&lt;/a&gt; to handle our Twitter posting job, which is located in the &lt;code&gt;server/index.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;With Cronhub, we can create a recurring task that will call our Vercel serverless function every minute and post tweets on Twitter. Basically, we will create an API route that the cron job will call every minute.&lt;/p&gt;

&lt;p&gt;This is how our application architecture will change due to that.&lt;/p&gt;

&lt;p&gt;From:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xwZBvpu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4rrmj8sergv9ifwlf87.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xwZBvpu---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4rrmj8sergv9ifwlf87.png" alt="fauna twittler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o2QmiLyS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bnajwh7jpe7ac9r8s5m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2QmiLyS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bnajwh7jpe7ac9r8s5m.png" alt="fauna twittler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s start with transforming our &lt;code&gt;server/indiex.js&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-expressjs-to-vercel-serverless-functions"&gt;
  &lt;/a&gt;
  From Express.js to Vercel Serverless Functions
&lt;/h2&gt;

&lt;p&gt;To create and deploy serverless functions without additional configuration, we need to place a file with our Twitter posting functionality, wrapped in an exportable function, in the &lt;code&gt;/api&lt;/code&gt; directory at the root of our project. To do it, follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to the root folder of Twittler project.&lt;/li&gt;
&lt;li&gt;Create an &lt;code&gt;api&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Put there &lt;code&gt;cron.js&lt;/code&gt; file (you can use any name here).&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And add to it this code.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const faunadb = require('faunadb')
const {TwitterApi} = require('twitter-api-v2')
const twitterClient = new TwitterApi(process.env.TWITTER_BEARER_TOKEN)

const q = faunadb.query
const faunaClient = new faunadb.Client({
  secret: process.env.REACT_APP_FAUNADB_SECRET,
})

module.exports = async (req, res) =&amp;gt; {
  if (req.method === 'POST') {
    try {
      const now = new Date()
      now.setSeconds(0)
      now.setMilliseconds(0)

      // get all tweets from Now - 1 minute to Now
      const {data} = await faunaClient.query(

        q.Map(
          q.Paginate(q.Match(q.Index('tweetsByDate'), now.getTime())),
          q.Lambda(['date', 'ref'], q.Get(q.Var('ref')))
        )
      )

      // post all tweets from date range on twitter
      data.forEach(async ({data: {tweet}}) =&amp;gt; {
          await twitterClient.v1.tweet(tweet)
      })

      res.status(200).json({success: true})
    } catch (err) {
      res.status(500).json({statusCode: 500, message: err.message})
    }
  } else {
    res.setHeader('Allow', 'POST')
    res.status(405).end('Method Not Allowed')
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Creating a &lt;code&gt;cron.js&lt;/code&gt; file in the &lt;code&gt;/api&lt;/code&gt; directory will provide us with an API call &lt;a href="https://ourapp.com/api/cron"&gt;https://ourapp.com/api/cron&lt;/a&gt; that will post tweets on Twitter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-to-vercel"&gt;
  &lt;/a&gt;
  Deploying to Vercel
&lt;/h2&gt;

&lt;p&gt;Before we deploy our application on Vercel let’s push our latest changes to the Github repository. Open terminal, go to the root folder of your project and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
git add .

git commit -m “vercel setup”

git push -u origin main

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let’s deploy our application to Vercel:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to the new Vercel project &lt;a href="https://vercel.com/new"&gt;page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose your repository and click the “Import” button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WXfluv0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bi3ebqv3lu9g6qvwcg3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WXfluv0P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1bi3ebqv3lu9g6qvwcg3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure your project by adding project name and all environment variables from your &lt;code&gt;.env.local&lt;/code&gt; file in the project root folder to &lt;code&gt;Environment Variables&lt;/code&gt; tab like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kna_-AYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c75u0io3587vglm01p5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kna_-AYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c75u0io3587vglm01p5q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the “Deploy” button.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Great, our application is live!&lt;/p&gt;

&lt;p&gt;The last thing we have to do is create a cron job that will call it every minute.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#moving-cron-job-to-cronhub"&gt;
  &lt;/a&gt;
  Moving Cron Job to Cronhub
&lt;/h2&gt;

&lt;p&gt;To move our cron job to Cronhub follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to “Scheduler” tab and click on “+ New Scheduler” button &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6s6v7El4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewjc9cefnkixezp7eifi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6s6v7El4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewjc9cefnkixezp7eifi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your cron job:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2tqhW0uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clj33e3a5791iz25ccgz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2tqhW0uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clj33e3a5791iz25ccgz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find your “Target HTTP URL” at your Vercel domain settings:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVdRbkjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdhklmz8hiwc1u96in5i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVdRbkjT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hdhklmz8hiwc1u96in5i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the “Save” button.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We have created our cron job!&lt;/p&gt;

&lt;p&gt;You can verify it by going to “Shedulers” tab:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9V8ohLwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09n3utp5b46dkpts3hxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9V8ohLwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09n3utp5b46dkpts3hxi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What this job does is make a POST request to &lt;code&gt;yourdomain.com/api/cron&lt;/code&gt; every minute. The handler function, located on the &lt;code&gt;yourdomain.com/api/cron&lt;/code&gt;, fetches all tweets from Fauna and publishes them to Twitter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations! We created and deployed the Twitter scheduler application.&lt;/p&gt;

&lt;p&gt;You can find a repository with the final example &lt;a href="https://github.com/abraztsov/twittler"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Written in connection with the &lt;a href="https://fauna.com/blog/write-with-fauna"&gt;Write with Fauna Program&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>fauna</category>
      <category>react</category>
      <category>node</category>
      <category>vercel</category>
    </item>
    <item>
      <title>Composing palettes</title>
      <author>Thomas Künneth</author>
      <pubDate>Thu, 16 Sep 2021 10:12:32 +0000</pubDate>
      <link>https://dev.to/tkuenneth/composing-palettes-4pec</link>
      <guid>https://dev.to/tkuenneth/composing-palettes-4pec</guid>
      <description>&lt;p&gt;In this article I will show you a barely known Jetpack library, &lt;em&gt;Palette&lt;/em&gt; It can extract significant colors from an &lt;code&gt;android.graphics.Bitmap&lt;/code&gt;. We will use the data created by &lt;em&gt;Palette&lt;/em&gt; in a Jetpack Compose app. Here's how the app looks like right after the start:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Czdijoxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7usbhv30dtmgziy99lkn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Czdijoxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7usbhv30dtmgziy99lkn.png" alt="The app PaletteDemo right after the start"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking the FAB the user can select an image. Then, the app looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SQDfXFWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/333g6kslkwxw0vxnd6fc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQDfXFWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/333g6kslkwxw0vxnd6fc.png" alt="PaletteDemo showing the selected image and significant colors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not too bad, right? Let's dive into the source code. You can find it on &lt;a href="https://github.com/tkuenneth/android-demos/tree/master/misc/PaletteDemo"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loading-a-bitmap-and-getting-a-palette"&gt;
  &lt;/a&gt;
  Loading a bitmap and getting a palette
&lt;/h3&gt;

&lt;p&gt;To use Jetpack Palette, we need to add it to the implementation dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight groovy"&gt;&lt;code&gt;&lt;span class="n"&gt;implementation&lt;/span&gt; &lt;span class="s1"&gt;'androidx.palette:palette-ktx:1.0.0'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, let's look at the activity.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PaletteDemoActivity&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ComponentActivity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;PaletteDemoViewModel&lt;/span&gt;

  &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;viewModel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ViewModelProvider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;PaletteDemoViewModel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nf"&gt;setContent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nc"&gt;PaletteDemoTheme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Surface&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;MaterialTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nc"&gt;PaletteDemo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;onClick&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nf"&gt;showGallery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get a nice architecture, we use &lt;code&gt;ViewModel&lt;/code&gt;. You will see shortly where &lt;code&gt;viewModel&lt;/code&gt; is used in the activity. But let's look at &lt;code&gt;PaletteViewModel&lt;/code&gt; first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PaletteDemoViewModel&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewModel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;_bitmap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Bitmap&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Bitmap&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;

  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Bitmap&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_bitmap&lt;/span&gt;

  &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;setBitmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bitmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_bitmap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bitmap&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;_palette&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Palette&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="nc"&gt;MutableLiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Palette&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;

  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LiveData&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Palette&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_palette&lt;/span&gt;

  &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;setPalette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Palette&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;_palette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;palette&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, we have two properties, a bitmap and a palette. Both will be set from inside the activity and consumed inside composable functions. &lt;code&gt;PaletteDemo()&lt;/code&gt; is the root of my composable hierarchy. It receives a lambda expression that invokes &lt;code&gt;showGallery()&lt;/code&gt;. Here's what this function does:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;showGallery&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;intent&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ACTION_PICK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"image/*"&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;mimeTypes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="nf"&gt;arrayOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"image/png"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;putExtra&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;EXTRA_MIME_TYPES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mimeTypes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;startActivityForResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;REQUEST_GALLERY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that we should replace &lt;code&gt;startActivityForResult()&lt;/code&gt; because it is deprecated in &lt;code&gt;ComponentActivity&lt;/code&gt;, but let's save this for a future article. 😎 Next comes the interesting part. What happens when the user has picked an image?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onActivityResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                              &lt;span class="n"&gt;resultCode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                              &lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Intent&lt;/span&gt;&lt;span class="p"&gt;?)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;onActivityResult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resultCode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requestCode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;REQUEST_GALLERY&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resultCode&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="nc"&gt;RESULT_OK&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;intent&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ImageDecoder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;createSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
              &lt;span class="n"&gt;contentResolver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="n"&gt;uri&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;bitmap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ImageDecoder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;decodeBitmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;asShared&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setBitmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;lifecycleScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setPalette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nc"&gt;Palette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Builder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
              &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get a bitmap, we first create a source using &lt;code&gt;ImageDecoder.createSource()&lt;/code&gt;. The source is then passed to &lt;code&gt;ImageDecoder.decodeBitmap()&lt;/code&gt;. Have you spotted &lt;code&gt;asShared()&lt;/code&gt;? Inside Jetpack Palette, &lt;code&gt;getPixels()&lt;/code&gt; is invoked. This method may fail with &lt;code&gt;IllegalStateException: unable to getPixels(), pixel access is not supported on Config#HARDWARE bitmaps&lt;/code&gt;. &lt;code&gt;asShared()&lt;/code&gt; prevents this. The docs &lt;a href="https://developer.android.com/reference/android/graphics/Bitmap#asShared()"&gt;say&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Return an immutable bitmap backed by shared memory which&lt;br&gt;
can be efficiently passed between processes via Parcelable.&lt;/p&gt;

&lt;p&gt;If this bitmap already meets these criteria it will return&lt;br&gt;
itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The method was introduced with API level 31, so to support older platforms you should replace it by something similar.&lt;/p&gt;

&lt;p&gt;Back to the code. How do we obtain significant colors from the bitmap? First we create a &lt;code&gt;Palette.Builder&lt;/code&gt; instance, passing the bitmap. Then we invoke &lt;code&gt;generate()&lt;/code&gt; on this object. Besides this synchronous version, there is also a variant based on &lt;code&gt;AsyncTask&lt;/code&gt;. As you can see, I chose to use a coroutine instead.&lt;/p&gt;

&lt;p&gt;Now, let's turn to the composable function &lt;code&gt;PaletteDemo()&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#composing-the-palette"&gt;
  &lt;/a&gt;
  Composing the palette
&lt;/h3&gt;

&lt;p&gt;Most Compose apps will have a &lt;code&gt;Scaffold()&lt;/code&gt; as its root, which may include a &lt;code&gt;TopAppBar()&lt;/code&gt; and, like my example, a &lt;code&gt;FloatingActionButton()&lt;/code&gt;. My content area consists of a vertically scrollable &lt;code&gt;Column()&lt;/code&gt;, which remains empty until an image has been selected. Then it contains an &lt;code&gt;Image()&lt;/code&gt; and several &lt;code&gt;Box()&lt;/code&gt; elements which represent the significant colors.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;PaletteDemo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;PaletteDemoViewModel&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="n"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;Unit&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;bitmap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observeAsState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;palette&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;viewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;observeAsState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nc"&gt;Scaffold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topBar&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;TopAppBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;stringResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
                                 &lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app_name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;floatingActionButton&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nc"&gt;FloatingActionButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onClick&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Icon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nc"&gt;Icons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;contentDescription&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
              &lt;span class="nf"&gt;stringResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;verticalScroll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;rememberScrollState&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="n"&gt;horizontalAlignment&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Alignment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;CenterHorizontally&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;bitmap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;bitmap&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;asImageBitmap&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
          &lt;span class="n"&gt;contentDescription&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="n"&gt;alignment&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Alignment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;swatches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;modifier&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Modifier&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;height&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;RectangleShape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get informed about changes, we need to invoke &lt;code&gt;observeAsState()&lt;/code&gt; on both &lt;code&gt;bitmap&lt;/code&gt; and &lt;code&gt;palette&lt;/code&gt;. Have you noticed &lt;code&gt;asImageBitmap()&lt;/code&gt;? It converts the bitmap to &lt;code&gt;ImageBitmap&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There a quite a few methods you can invoke on &lt;code&gt;Palette&lt;/code&gt; instances, for example &lt;code&gt;getVibrantColor()&lt;/code&gt; or &lt;code&gt;getDarkVibrantColor()&lt;/code&gt;. My code just iterates over a list of &lt;a href="https://developer.android.com/reference/androidx/palette/graphics/Palette.Swatch"&gt;swatches&lt;/a&gt;. Please refer to the documentation for details.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Using Jetpack Palette inside Composable apps is easy and fun. It will be interesting to see if the library receives updates in the wake of Material You. I hope you liked this post. Please share your thoughts in the comments.&lt;/p&gt;

</description>
      <category>android</category>
      <category>jetpack</category>
      <category>jetpackcompose</category>
      <category>kotlin</category>
    </item>
  </channel>
</rss>
