<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Social Media Posting and Scheduling APIs of 2021</title>
      <author>Geoffrey Bourne</author>
      <pubDate>Mon, 16 Aug 2021 23:02:51 +0000</pubDate>
      <link>https://dev.to/gbourne/best-social-media-posting-and-scheduling-apis-of-2021-jno</link>
      <guid>https://dev.to/gbourne/best-social-media-posting-and-scheduling-apis-of-2021-jno</guid>
      <description>&lt;p&gt;Last year we published one of our most popular &lt;a href="https://www.ayrshare.com/best-social-media-posting-and-scheduling-apis-of-2020/"&gt;articles&lt;/a&gt; on the best social media APIs for posting and scheduling. It got a lot of attention from platforms, CMS, agencies, and companies that want to programmatically post on behalf themselves or their users. For 2021, we’re updating the the list and giving more in-depth analysis so you can find the right solutions for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-a-social-media-api"&gt;
  &lt;/a&gt;
  Why Use a Social Media API?
&lt;/h2&gt;

&lt;p&gt;===========================&lt;/p&gt;

&lt;p&gt;If you want to manually post and schedule social media to networks like Twitter, Instagram, Facebook, LinkedIn, or YouTube, there are some excellent &lt;a href="https://www.techradar.com/best/best-social-media-management-tools"&gt;web-based posting tools&lt;/a&gt; out there. However, if you run an app or platform, say for example a CMS that allows user to create content, your users typically want a simple process to post to social media networks without having to download the content and do it manually. This sharing can be part of a workflow or an automatic process, but the point is you want to make sharing simple and easy for your users without them leaving your platform.&lt;/p&gt;

&lt;p&gt;A social media API makes it possible to programmatically publish from your backend system, allowing you to control the content, posting schedule, management, and reposting on behalf of your users.&lt;/p&gt;

&lt;p&gt;There are two ways to integrate with the networks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.ayrshare.com/top-10-social-media-apis-for-developers/"&gt;Direct API connection&lt;/a&gt; with each social network. This often requires an approval process at each network and continuous maintenance, but the networks do not charge for standard access.&lt;/li&gt;
&lt;li&gt;  3rd party social media API. While integration is easier and they handle maintenance, there typically is a monthly charge.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some 3rd party social media scheduling tools that offer API access in alphabetical order.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-of-the-top-social-media-apis"&gt;
  &lt;/a&gt;
  List of the Top Social Media APIs
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-ayrshare"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.ayrshare.com/"&gt;Ayrshare&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tagline:&lt;/strong&gt; Powerful APIs that enable you to send social media posts effortlessly. For developers and businesses of all sizes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Documentation&lt;/strong&gt;: &lt;a href="https://docs.ayrshare.com/rest-api/overview"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;: &lt;a href="https://www.ayrshare.com/pricing/"&gt;Free to $14.99/mo for Unlimited Premium&lt;/a&gt;. Free plan offers 8 social accounts and 30 posts a month. Business Plans for multiple users as low as $1.85/mo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Good:&lt;/strong&gt; In our humble opinion, Ayrshare is the best choice around if you’re looking for a social media API…I mean it is our product and all. We’re the only API-first social media scheduling tool, so everything we build is about working seamlessly with your backend system. That is why we offer numerous &lt;a href="https://docs.ayrshare.com/packages/overview"&gt;SDK packages&lt;/a&gt; and coding examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Bad:&lt;/strong&gt; The manual posting dashboard is basic. If you’re looking to spend your day manually posting in a desktop GUI, there are better choices than Ayrshare. In fact, we wrote and article &lt;a href="https://www.ayrshare.com/why-you-shouldnt-use-ayrshare/"&gt;Why You Shouldn’t Use Ayrshare&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-buffer"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://buffer.com/"&gt;Buffer&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tagline:&lt;/strong&gt; Tell your brand’s story and grow your audience with a publishing, analytics, and engagement platform you can trust.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Documentation&lt;/strong&gt;: &lt;a href="https://buffer.com/developers/api"&gt;link&lt;/a&gt; — no new developer accounts &lt;a href="https://buffer.com/developers/api"&gt;since 2019&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;: &lt;a href="https://buffer.com/pricing/publish"&gt;$15 to $99&lt;/a&gt; a month. Free plan offers 5 social accounts and 10 posts a month.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Good:&lt;/strong&gt; We love Buffer! It was the first tool we used before developing Ayrshare. Buffer’s dashboard is perfectly simple and really a model for all other apps. The API is clear and has all the features needed to schedule posts, with some cool features such as reorder and shuffle future posts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Bad:&lt;/strong&gt; Simple — Buffer shut down new developer access. Unless you already have a developer account, you’re out of luck.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-hootsuite"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://hootsuite.com/"&gt;Hootsuite&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tagline:&lt;/strong&gt; Easily manage all your social media and get results with Hootsuite.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Documentation&lt;/strong&gt;: &lt;a href="https://platform.hootsuite.com/docs/api/index.html#section/Introduction"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;: &lt;a href="https://hootsuite.com/plans"&gt;$49 to $599&lt;/a&gt; a month. The Free plan recently was changed to 2 social profiles and 5 posts a month.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Good:&lt;/strong&gt; Hootsuite is one of the most popular scheduling tools. They have a great reputation, feature set, and have been around a long time. Their API is well documented and straight-forward. And if you’re looking to manually post, they have one of the best GUIs around.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Bad:&lt;/strong&gt; Hootsuite’s API has &lt;a href="https://developer.hootsuite.com/docs/api-changelog"&gt;not been updated&lt;/a&gt; in over 2 years and they are lacking many newer integrations, such as Instagram. Also, Hootsuite just &lt;a href="https://www.ayrshare.com/why-did-hootsuite-raise-prices-1200/"&gt;raised prices&lt;/a&gt; for a lot of their users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-hubspot"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://hubspot.com/"&gt;HubSpot&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tagline:&lt;/strong&gt; Marketing, sales, and service software that helps your business grow without compromise. Because “good for the business” should also mean “good for the customer.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Documentation&lt;/strong&gt;: &lt;a href="https://legacydocs.hubspot.com/docs/methods/social_media/create_broadcast"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;: &lt;a href="https://amplifr.com/en/prices/"&gt;$50 to $3,200 a month&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Good:&lt;/strong&gt; HubSpot is a great platform for marketing and they also have an API integration for social posting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Bad:&lt;/strong&gt; Unfortunately, it looks like HubSpot &lt;a href="https://developers.hubspot.com/docs/api/deprecated-apis"&gt;deprecated their API&lt;/a&gt;. We found the API to be a bit confusing without a clear way to choose a network, such as Twitter or Instagram, to publish the post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-socialoomph"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.socialoomph.com/"&gt;SocialOomph&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tagline:&lt;/strong&gt; Boost your productivity with advanced post scheduling tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Documentation&lt;/strong&gt;: &lt;a href="https://www.socialoomph.com/developers/api/"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;: &lt;a href="https://www.socialoomph.com/pricing/"&gt;$20 to $83&lt;/a&gt; a month&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Good:&lt;/strong&gt; SocialOomph take a unique approach where each user sets up their open webhook and provides that to the platform. The platform then calls the webhook to post to that user’s account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Bad:&lt;/strong&gt; The use of webhooks is very technical and might be a lot fo the average customer/user to understand and setup.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-social-flow"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.socialflow.com/"&gt;Social Flow&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tagline:&lt;/strong&gt; We help publishers extract more revenue from their best content on social platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Documentation&lt;/strong&gt;: Not publicly available&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Good:&lt;/strong&gt; SocialFlow is focused on publishing and advertising for the media industry. It is used by many publishers such as The New York Times, National Geographical Channel, and Fast Company.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Bad:&lt;/strong&gt; Because SocialFlow keeps a tight lipped on pricing and their API, you’ll need to contact them directly.&lt;/p&gt;

&lt;p&gt;Do you know of other Social Media APIs that we should include? If so, &lt;a href="https://www.ayrshare.com/cdn-cgi/l/email-protection#e68589889592878592a6879f94958e879483c885898b"&gt;let us know&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at&lt;/em&gt; &lt;a href="https://www.ayrshare.com/best-social-media-posting-and-scheduling-apis-of-2021/"&gt;&lt;em&gt;https://www.ayrshare.com&lt;/em&gt;&lt;/a&gt; &lt;em&gt;on May 6, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>api</category>
      <category>social</category>
      <category>programming</category>
    </item>
    <item>
      <title>Making PUT &amp; DELETE Request Using Axios In React.js</title>
      <author>Aya Bouchiha</author>
      <pubDate>Mon, 16 Aug 2021 22:42:02 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/making-put-delete-request-using-axios-in-react-js-j07</link>
      <guid>https://dev.to/ayabouchiha/making-put-delete-request-using-axios-in-react-js-j07</guid>
      <description>&lt;p&gt;Hi, I'm &lt;a href="//developer.aya.b@gmail.com"&gt;Aya Bouchiha&lt;/a&gt;, today, we'll cover sending PUT and DELETE requests in react.js using &lt;strong&gt;axios&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/ayabouchiha/making-get-and-post-request-using-axios-7g8"&gt;POST &amp;amp; GET Request using axios in react.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#axios"&gt;
  &lt;/a&gt;
  Axios
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;axios&lt;/strong&gt;: is a popular Javascript library used for making HTTP requests to an API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://axios-http.com/docs/intro"&gt;docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/axios/axios"&gt;github&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-axios-instead-of-fetch"&gt;
  &lt;/a&gt;
  Why axios instead of fetch?
&lt;/h2&gt;

&lt;p&gt;I recommend reading this article by Faraz Kelhini :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/axios-or-fetch-api/"&gt;why axios instead of fetch&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#axios-installation"&gt;
  &lt;/a&gt;
  Axios installation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cdn"&gt;
  &lt;/a&gt;
  cdn
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/axios/dist/axios.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#npm"&gt;
  &lt;/a&gt;
  npm
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#yarn"&gt;
  &lt;/a&gt;
  yarn
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#bower"&gt;
  &lt;/a&gt;
  bower
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bower install axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#put-request-using-axios"&gt;
  &lt;/a&gt;
  PUT request using axios
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;PUT&lt;/strong&gt;: is a request used for creating or updating a resource in a specific server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-using-then-and-catch"&gt;
  &lt;/a&gt;
  Code using then and catch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;go to gym&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;practicing sport is very important&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/posts/10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;something went wrong :(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;PUT REQUEST&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#console"&gt;
  &lt;/a&gt;
  Console
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;go to gym&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;practicing sport is very important&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code-using-async-and-await"&gt;
  &lt;/a&gt;
  Code using async and await
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;go to gym&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;practicing sport is very important&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;putTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/posts/10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;something went wrong :(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nx"&gt;putTodo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;PUT REQUEST&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#console"&gt;
  &lt;/a&gt;
  Console
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;go to gym&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;practicing sport is very important&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#delete-request-using-axios"&gt;
  &lt;/a&gt;
  DELETE request using axios
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DELETE&lt;/strong&gt;: is a request used to delete a specific resource in a server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-using-then-and-catch"&gt;
  &lt;/a&gt;
  Code using then and catch
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;axios&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/posts/10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;something went wrong!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;DELETE REQUEST&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#console"&gt;
  &lt;/a&gt;
  console
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#code-using-async-and-await"&gt;
  &lt;/a&gt;
  Code using async and await
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/posts/10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;something went wrong!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="nx"&gt;deleteTodo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;DELETE REQUEST&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#console"&gt;
  &lt;/a&gt;
  console
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#useful-resources"&gt;
  &lt;/a&gt;
  Useful Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://rapidapi.com/blog/api-glossary/get/"&gt;https://rapidapi.com/blog/api-glossary/get/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://assertible.com/blog/7-http-methods-every-web-developer-should-know-and-how-to-test-them"&gt;https://assertible.com/blog/7-http-methods-every-web-developer-should-know-and-how-to-test-them&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://blog.logrocket.com/how-to-make-http-requests-like-a-pro-with-axios/"&gt;https://blog.logrocket.com/how-to-make-http-requests-like-a-pro-with-axios/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://gist.github.com/fgilio/230ccd514e9381fafa51608fcf137253"&gt;https://gist.github.com/fgilio/230ccd514e9381fafa51608fcf137253&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested Posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://dev.to/ayabouchiha/youtube-courses-projects-to-master-javascript-3lhc"&gt;Youtube Courses, Projects To Master Javascript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://dev.to/ayabouchiha/the-essential-guide-to-map-built-in-object-in-javascript-17d2"&gt;Your Essential Guide To Map Built-in Object In Javascript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://dev.to/ayabouchiha/all-js-string-methods-in-one-post-4h23"&gt;All JS String Methods In One Post!&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Contact Me:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  email: &lt;a href="mailto:developer.aya.b@gmail.com"&gt;developer.aya.b@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  telegram: &lt;a href="https://t.me/AyaBouchiha"&gt;Aya Bouchiha&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy codding!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>Setting up a CI/CD with Jenkins</title>
      <author>Kenneth Atria</author>
      <pubDate>Mon, 16 Aug 2021 22:41:41 +0000</pubDate>
      <link>https://dev.to/kennethatria/setting-up-a-ci-cd-with-jenkins-4hln</link>
      <guid>https://dev.to/kennethatria/setting-up-a-ci-cd-with-jenkins-4hln</guid>
      <description>&lt;h3&gt;
  &lt;a href="#-what-you-need-"&gt;
  &lt;/a&gt;
  ** What you need ? **
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Dockerhub and Github Account&lt;/li&gt;
&lt;li&gt;Server with linux setup. For this case ubuntu&lt;/li&gt;
&lt;li&gt;Your application is already need to be configured on your test instances
*This tutorial assumes you have set up a Jenkins file in your project. View &lt;a href="https://github.com/kennethatria/my_guy/blob/master/Jenkinsfile"&gt;reference&lt;/a&gt; make necessary changes&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#1-installing-jenkins-on-your-server"&gt;
  &lt;/a&gt;
  1. Installing Jenkins on your Server
&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;*sudo apt update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;search of all available packages &amp;amp; pick one from the options&lt;br&gt;
sudo apt search openjdk*&lt;/p&gt;

&lt;p&gt;For this case I will be using version 11, so &lt;br&gt;
&lt;code&gt;sudo apt install openjdk-11-jdk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Confirm installation with running version check&lt;br&gt;
&lt;code&gt;java -version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we are ready to install Jenkins. We start off by appending the Debian package repository address to the server's sources.list&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add - sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ &amp;gt; \&lt;br&gt;
    /etc/apt/sources.list.d/jenkins.list'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We'll run update so that apt will use the new repo&lt;br&gt;
&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Installing Jenkins&lt;br&gt;
&lt;code&gt;sudo apt-get install jenkins=2.289.3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That's all &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-setting-up-your-github-and-retrieving-an-api-key"&gt;
  &lt;/a&gt;
  2. Setting up your Github and retrieving an API key
&lt;/h4&gt;

&lt;p&gt;Login into your Github, and head over to your developer settings : &lt;em&gt;Profile -&amp;gt; Settings -&amp;gt; Developer settings -&amp;gt; Personal access tokens&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Note: I wouldn't consider this optional but it's good practice to set an expiration duration for your token.&lt;/p&gt;

&lt;p&gt;Select admin:repo_hook&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5trk8QZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmc62i2c6nuq0mnzmb04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5trk8QZD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmc62i2c6nuq0mnzmb04.png" alt="Screenshot 2021-08-06 at 07.33.21"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly set repo: &lt;em&gt;repo_status&lt;/em&gt;. Jenkins likes to access the repo commit status &lt;/p&gt;

&lt;p&gt;Click "Generate token" and save your token somewhere.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-setting-up-jenkins"&gt;
  &lt;/a&gt;
  3. Setting up Jenkins
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#31-setting-up-an-administrator"&gt;
  &lt;/a&gt;
  3.1 Setting up an Administrator
&lt;/h5&gt;

&lt;p&gt;1.SSH in your Jenkins instance&lt;br&gt;
2.To retrieve your temporary password&lt;br&gt;
&lt;code&gt;sudo "cat /var/lib/jenkins/secrets/initialAdminPassword"&lt;/code&gt;&lt;br&gt;
3.Visit &lt;a&gt;your-instance-ip:8080&lt;/a&gt;&lt;br&gt;
4.Paste retrieved password into Jenkins start up page.&lt;br&gt;
5.Go ahead and set up a permanent admin user on Jenkins&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#32-setting-up-your-jenkin-projects"&gt;
  &lt;/a&gt;
  3.2 Setting up your Jenkin Projects
&lt;/h5&gt;

&lt;p&gt;1.Log into Jenkins&lt;br&gt;
2.Set up credentials in Jenkins will use to login into servers &lt;br&gt;
Credentials -&amp;gt; click global -&amp;gt; click "add credentials" : username: deploy, password :+++++, id: webserver_login&lt;/p&gt;

&lt;p&gt;3.Set up docker hub credentials: &lt;br&gt;
username: username, password :access-token, id: docker_hub_login&lt;/p&gt;

&lt;p&gt;4.Set up global properties in Jenkins for staging server&lt;br&gt;
Click "Manage Jenkins" - "Configure System" - "Global properties and select Environment Variables" -&amp;gt; Add&lt;br&gt;
input "name: staging_ip" and "value:staging-ip-address"&lt;/p&gt;

&lt;p&gt;5.Set up Jenkins project&lt;br&gt;
Give name -&amp;gt; select Multibranch pipeline for project type&lt;/p&gt;

&lt;p&gt;Under branch sources: click add source -&amp;gt; GitHub &lt;br&gt;
Enter the details and use your GitHub access token as password and Github username as the username, set id : "github_key"&lt;/p&gt;

&lt;p&gt;Select github_key for credentials&lt;br&gt;
Input your GitHub name into owner field &lt;br&gt;
Set repository as intended repo&lt;br&gt;
Go a head and Click save&lt;/p&gt;

&lt;p&gt;Jenkins will scan your repo and run an initial build&lt;/p&gt;

&lt;p&gt;In Jenkins, In the project- click “ master “ -&amp;gt; click. “ Build now ”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-up"&gt;
  &lt;/a&gt;
  Next up
&lt;/h2&gt;

&lt;p&gt;Powering up and down developer AWS instances using Slack and Jenkins&lt;/p&gt;

</description>
      <category>devops</category>
      <category>jenkins</category>
      <category>docker</category>
      <category>cdci</category>
    </item>
    <item>
      <title>How good health leads to better productivity ?</title>
      <author>hinanshi suthar</author>
      <pubDate>Mon, 16 Aug 2021 22:37:40 +0000</pubDate>
      <link>https://dev.to/hinanshis4/how-good-health-leads-to-better-productivity-4nj9</link>
      <guid>https://dev.to/hinanshis4/how-good-health-leads-to-better-productivity-4nj9</guid>
      <description>&lt;p&gt;Anyone who might be following some healthy routine will definitely argue upon why the old mantra 'Health is Wealth' is still gold. Ask any of them and they will make you get up(obviously, from sitting hours on end in the same position and probably not thinking about their spine) and do some stretches. &lt;/p&gt;

&lt;p&gt;But I will tell you one thing. It literally takes no time everyday to take care of your spine and overall health with little or no efforts. Because, you accept or not everyone suffers from back pain.&lt;/p&gt;

&lt;p&gt;Here are my personal favorite habits that I follow to keep a check on my health.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#water"&gt;
  &lt;/a&gt;
  Water
&lt;/h2&gt;

&lt;p&gt;Getting enough water everyday helps you mentally. It keeps you active throughout the day. You may feel less lethargic. Consider it as oxygen for your brain.&lt;br&gt;
If you keep on forgetting to drink water. Here's what I have got for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exercise"&gt;
  &lt;/a&gt;
  Exercise
&lt;/h2&gt;

&lt;p&gt;I know this is obvious. But still do you do that?. Spend 20 mins breaks that you take between when you are solving a bug into burning calories. Do 20-jumping jacks on the place or skip a rope. Maybe it could divert your mind and boom you solve the bug ;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yoga-meditation"&gt;
  &lt;/a&gt;
  Yoga + Meditation
&lt;/h2&gt;

&lt;p&gt;The best way to get started it to listen to your body. Our bodies has a natural way to communicate with us but only if we listen. Following this practice helps you maintain your stress levels and pressure. Start with breathing exercises and eventually go onto basic yoga practice like Surya Namaskar(Sun Salutation). &lt;/p&gt;

&lt;p&gt;Some breathing exercises helps you to concentrate and focus. Correct your posture every 20-30 minutes.&lt;/p&gt;

&lt;p&gt;You can even set a timer on google for 3/5 minutes deep breathing. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sleep"&gt;
  &lt;/a&gt;
  sleep
&lt;/h2&gt;

&lt;p&gt;The most underrated one. We sometimes become harsh on ourselves due to deadlines and what not. While some of the days it's totally fine, but make sure to not take your health for granted.&lt;br&gt;
Sleep helps our body to recover from previous day and ready for the next day. Also, make sure to blink your eyes often.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#food"&gt;
  &lt;/a&gt;
  food
&lt;/h2&gt;

&lt;p&gt;You don't need to be on a keto diet to be productive. You can eat everything and still be the smartest. Everything comes in a limit. Don't overdo or over-eat. Also remember - 'What you eat is what you are'.&lt;/p&gt;

&lt;p&gt;As it is said -&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Start caring for your health, it will reward you when you are least expecting!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is what take I help of when I go off track. You can add the extension to your chrome, it will definitely help.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#health-browsing-chrome-extension"&gt;
  &lt;/a&gt;
  Health Browsing Chrome Extension
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/water-reminder/kbcogmlnjaoecibenadekhkeelgdpmnb?utm_source=chrome-ntp-icon"&gt;Health Reminder Chrome Extension&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Zj3rdyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e0hw5jyojgae26o8bww.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Zj3rdyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e0hw5jyojgae26o8bww.jpg" alt="Extension Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, so here it is. Do you let me know if you follow any of these. Also, don't forget to comment if I missed anything :)&lt;/p&gt;

</description>
      <category>health</category>
      <category>productivity</category>
      <category>development</category>
      <category>programming</category>
    </item>
    <item>
      <title>Data Structure Series: Hash Table</title>
      <author>Chuck Choi</author>
      <pubDate>Mon, 16 Aug 2021 22:28:31 +0000</pubDate>
      <link>https://dev.to/chuckchoiboi/data-structure-series-hash-table-5h16</link>
      <guid>https://dev.to/chuckchoiboi/data-structure-series-hash-table-5h16</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3s65hg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xpt6in1hml7m89611hj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3s65hg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xpt6in1hml7m89611hj.png" alt="data-structure-series-intro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use forks to eat pasta, spoons to eat soup, and chopsticks to eat dumplings. Each silverwares have its advantages/disadvantages, hence working better than the other for the food that it interacts well with. &lt;strong&gt;Just like that, different data structures are better suited and perform better than the others based on the situations/use cases.&lt;/strong&gt; They each have their pros and cons. Understanding these pros and cons can help you be a better programmer, as it will allow you to choose an appropriate data structure(s) based on the circumstances/goals you have, and it helps to drastically improve the performance of the algorithm being applied. I will be putting these blog series together on well known programming data structures in JavaScript, and link them all in one blog post in the future. Feel free to leave a comment if you have any questions!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. &lt;a href="#first"&gt;What Is Hash Table?&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;2. &lt;a href="#second"&gt;Hash Function&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;3. &lt;a href="#third"&gt;Implementation in JavaScript&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;4. &lt;a href="#fourth"&gt;Helper Functions&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;5. &lt;a href="#fifth"&gt;Handling Collisions&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;6. &lt;a href="#sixth"&gt;Big O&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;7. &lt;a href="#seventh"&gt;Helpful Resources&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#1-what-is-hash-table"&gt;
  &lt;/a&gt;
  1. What is Hash Table? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hash Table&lt;/strong&gt; is a data structure of associative array that stores key/value paired data into buckets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Considered being one of the most important data structures in computing, &lt;strong&gt;Hash Table&lt;/strong&gt; is used in many areas of applications: &lt;em&gt;password verifications&lt;/em&gt;, &lt;em&gt;cryptography&lt;/em&gt;, &lt;em&gt;compilers&lt;/em&gt;, and the list goes on. Due to its efficiency and speed in &lt;strong&gt;searching&lt;/strong&gt;, &lt;strong&gt;insertion&lt;/strong&gt;, and &lt;strong&gt;removal&lt;/strong&gt; of data, it is a widely applicable and preferred data structure in many cases. &lt;strong&gt;A Hash Table is a data structure of associative array that stores data as a key/value pair into a bucket&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wyuXxU0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hxv3euxnoqmdeqv0puc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wyuXxU0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hxv3euxnoqmdeqv0puc.png" alt="hash-table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How &lt;strong&gt;Hash Table&lt;/strong&gt; works is that it takes a &lt;strong&gt;key&lt;/strong&gt; and a &lt;strong&gt;value&lt;/strong&gt; as inputs, then runs the key through a &lt;strong&gt;hash function&lt;/strong&gt; that turns it into an &lt;strong&gt;index&lt;/strong&gt;. This process is called &lt;strong&gt;hashing&lt;/strong&gt;. The index is used to map the value of the input into the table's bucket. &lt;strong&gt;The hash function is irreversible, which makes it secure and reliable.&lt;/strong&gt; It is possible for two different keys to result in the same index though, and this is called a &lt;strong&gt;collision.&lt;/strong&gt; A collision can override the previous key's placeholder if not handled. There are various ways to handle hash collisions though -- &lt;strong&gt;Separate Chaining&lt;/strong&gt; being one of them which often uses Linked Lists inside the bucket to store multiple data in the same index. We will get into it later in this post. But first, let's discuss how &lt;strong&gt;hash function&lt;/strong&gt; works in a nutshell.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#2-hash-function"&gt;
  &lt;/a&gt;
  2. Hash Function &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The hashing process in computing is like hashing a potato to make hashed brown. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gMcXPQ6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57u46j9c44c4lcy37aa8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gMcXPQ6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57u46j9c44c4lcy37aa8.jpg" alt="potato"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hash functions, or hashing algorithms generate a fixed-length result from a given input.&lt;/strong&gt; This process is called &lt;strong&gt;hashing&lt;/strong&gt;. The fixed-length result is used in Hash Tables as an index to map the input into a hash bucket. The hashing process in computing is like hashing a potato to make hashed brown. You could think of potato as key input, grater as hash function, and shredded potato as index that is hashed out as a result of the hash function. Just like how you can't turn shredded potato back into a whole potato, &lt;strong&gt;hash functions are irreversible -- it's a one way algorithm.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is an example of a hash function in JavaScript:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hashedKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;hashedKey&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hashedKey&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudocode:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This function accepts two arguments: string &lt;code&gt;key&lt;/code&gt; to hash, and &lt;code&gt;size&lt;/code&gt; of hash buckets&lt;/li&gt;
&lt;li&gt;Initialize a variable named &lt;code&gt;hashedKey&lt;/code&gt; as 0 to return at the end&lt;/li&gt;
&lt;li&gt;Iterate each of the string's characters to sum up their character codes&lt;/li&gt;
&lt;li&gt;After the iteration, use &lt;strong&gt;modulo operation (%)&lt;/strong&gt; to find the remainder of the &lt;code&gt;hashedKey / size&lt;/code&gt; and set it as new &lt;code&gt;hashedKey&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Return &lt;code&gt;hashedKey&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Explanation&lt;/strong&gt;&lt;br&gt;
In the above algorithm, we are initializing a variable &lt;code&gt;hashedKey&lt;/code&gt; as &lt;code&gt;0&lt;/code&gt;. The value of this variable will change based on the string and be returned as a result of this function. We need a way to represent each of the letters into numbers, this way the matching string key that goes through the function will always convert to the same integer. JavaScript's string method &lt;code&gt;charCodeAt()&lt;/code&gt; allows us to convert a string character into an integer representing the UTF-16 code unit.&lt;/p&gt;

&lt;p&gt;With that being said, we are using a for loop to iterate every character of the key input. For each character being iterated, we are using the &lt;code&gt;charCodeAt()&lt;/code&gt; method to convert the character and add it to &lt;code&gt;hashedKey&lt;/code&gt; variable we defined at the beginning. Once we sum up all the integers that represents each characters, we execute an modulo operation &lt;code&gt;%&lt;/code&gt; using the &lt;code&gt;size&lt;/code&gt; of the bucket (second argument of the function) as a divisor. Modulo operation not only guarantees that the resulting integer is in range between 0 to the size of the bucket, but also makes the result irreversible.&lt;/p&gt;

&lt;p&gt;This is a very simple and basic hash function that can be improved better. I recommend you to check out &lt;a href="https://www.freecodecamp.org/news/md5-vs-sha-1-vs-sha-2-which-is-the-most-secure-encryption-hash-and-how-to-check-them/"&gt;this blog post&lt;/a&gt; if you are interested in learning about different hash functions designed by mathematicians and computer scientists around the world. Now it is time to implement the hash table in JavaScript!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#3-implementation-in-javascript"&gt;
  &lt;/a&gt;
  3. Implementation in JavaScript &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HashTable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;53&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;_hash&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hashedKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;hashedKey&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hashedKey&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HashTable&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// HashTable {size: 53, buckets: Array(53)}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The above &lt;strong&gt;Hash Table&lt;/strong&gt; class has two properties:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;size&lt;/code&gt;: the number representing the &lt;code&gt;size&lt;/code&gt; of the buckets, and we are using prime number 53 as a default value (choosing a prime number for the hash table's size reduces the chances of collisions)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;buckets&lt;/code&gt;: &lt;code&gt;buckets&lt;/code&gt; are the placeholders for each data (key/value pair), and we are using &lt;code&gt;Array&lt;/code&gt; class to create an empty array with size of 53 indices&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And we have the &lt;code&gt;_hash&lt;/code&gt; method similar to what we created earlier, but only difference is that it is not taking in the &lt;code&gt;size&lt;/code&gt; as second argument since we are using the &lt;code&gt;size&lt;/code&gt; of the object created from the &lt;code&gt;Hash Table&lt;/code&gt; class. With this, we can create an object with buckets array that contains default &lt;code&gt;size&lt;/code&gt; of 53 indices or a specified &lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's go ahead and add some methods to this Hash Table!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#4-helper-functions"&gt;
  &lt;/a&gt;
  4. Helper Functions &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// adds key-value pair into hash table's bucket&lt;/span&gt;
&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudocode:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accepts a &lt;code&gt;key&lt;/code&gt; and a &lt;code&gt;value&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hashes the &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Stores the key-value pair in the hash bucket&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// retrieves the value of the key from its respective bucket&lt;/span&gt;
&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// returns value of the key&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudocode:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accepts a &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hashes the &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Retrieves the key-value pair in the hash bucket&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;remove()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// removes the key-value pair from the hash table's bucket&lt;/span&gt;
&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;deleted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;deleted&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudocode:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accepts a &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hashes the &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Retrieves the key-value pair in the hash bucket and stores it&lt;/li&gt;
&lt;li&gt;Delete the key-value pair in the hash bucket (use &lt;code&gt;delete&lt;/code&gt; operator to empty the element, doesn't affect the array size)&lt;/li&gt;
&lt;li&gt;Returns the stored key-value pair&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;All the helper functions in this data structure is fairly simple -- they all utilize the hash function we defined earlier to retrieve the &lt;code&gt;index&lt;/code&gt; that is associated with the &lt;code&gt;key&lt;/code&gt; passed, and access the array's element in that &lt;code&gt;index&lt;/code&gt;. There's a problem with these methods though. What happens if the hash function returns the same index for two different inputs? Our hash function is fairly simple so this will happen for sure. If so, it will override the bucket that is already occupied or &lt;code&gt;get&lt;/code&gt; method will retrieve a wrong value that we aren't looking for. How can we improve these helper methods to handle the collisions?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-handling-collisions"&gt;
  &lt;/a&gt;
  5. Handling Collisions &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yErwZBp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sqjh5yeaaolafcdf9k5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yErwZBp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7sqjh5yeaaolafcdf9k5.png" alt="collision"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we discussed earlier, it is possible for a hash function to produce collisions: returning the same index for multiple different keys. &lt;strong&gt;Unfortunately, even under the best of circumstances, collisions are nearly unavoidable.&lt;/strong&gt; Any hash function with more inputs than outputs will necessarily have such collisions; the harder they are to find, the more secure the hash function is.&lt;/p&gt;

&lt;p&gt;There are multiple ways to handle collisions though, and the two common techniques are &lt;strong&gt;Separate Chaining&lt;/strong&gt; and &lt;strong&gt;Linear Probing&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Separate Chaining:&lt;/strong&gt; If there is only one hash code pointing to an index of array then the value is directly stored in that index. If hash code of second value also points to the same index though, then we replace that index value with a linked list or array and all values pointing to that index are stored in the list. Same logic is applied while retrieving the values, we will have to iterate all the elements inside a bucket if the bucket stores multiple key-value pairs. &lt;strong&gt;In short, separate chaining creates a list-like object inside a bucket to store multiple data with collisions.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linear Probing:&lt;/strong&gt; &lt;strong&gt;Linear Probing technique works on the concept of keep incrementing the hashed index until you find an empty bucket.&lt;/strong&gt; Thus, Linear Probing takes less space than Separate Chaining , and perform significantly faster than Separate Chaining (since we don't have to loop through lists inside buckets).&lt;/p&gt;

&lt;p&gt;Although &lt;strong&gt;Separate Chaining&lt;/strong&gt; is significantly less efficient than &lt;strong&gt;Linear Probing&lt;/strong&gt;, it is easier to implement. Here's how we can improve the helper methods we defined by utilizing &lt;strong&gt;Separate Chaining&lt;/strong&gt; (we will use &lt;strong&gt;Array&lt;/strong&gt; instead of &lt;strong&gt;Linked List&lt;/strong&gt; for simplicity):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// adds key-value pair into hash table's bucket&lt;/span&gt;
&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudocode:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accepts a &lt;code&gt;key&lt;/code&gt; and a &lt;code&gt;value&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hashes the &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If the hash bucket is empty, set it as an empty array&lt;/li&gt;
&lt;li&gt;Push the key-value pair in the array inside the bucket&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// retrieves the value of the key from its respective bucket&lt;/span&gt;
&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudocode:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accepts a &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hashes the &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If the bucket is truthy, iterate each key-value pair inside the bucket&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;key&lt;/code&gt; matches the pair, return the &lt;code&gt;value&lt;/code&gt; of the pair&lt;/li&gt;
&lt;li&gt;return &lt;code&gt;undefined&lt;/code&gt; if the bucket is empty&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;remove()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// removes the key-value pair from the hash table's bucket&lt;/span&gt;
&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buckets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudocode:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accepts a &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hashes the &lt;code&gt;key&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If the bucket is truthy, iterate each key-value pair inside the bucket&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;key&lt;/code&gt; matches the pair, remove the pair and return it&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#6-big-o"&gt;
  &lt;/a&gt;
  6. Big O &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ByOJyUqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poenpbx11rdd9ly5wd8w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ByOJyUqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/poenpbx11rdd9ly5wd8w.png" alt="big-o"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Space Complexity:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;O(n)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Space complexity of this data structure is linear: as the size of the buckets increase, so does the space&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Set/Get/Remove:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Average: &lt;em&gt;O(1) Time Complexity&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Worst Case: &lt;em&gt;O(n) Time Complexity&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;All these helper methods use hash function to look up the indices. Hash function takes constant time, but the time complexity can get linear with buckets with multiple elements due to collisions. More items will mean more time to look inside the bucket, hence taking linear time (&lt;em&gt;O(n)&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#7-helpful-resources"&gt;
  &lt;/a&gt;
  7. Helpful Resources &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/js-algorithms-and-data-structures-masterclass/"&gt;&lt;strong&gt;Online Course&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(Udemy Course)&lt;/strong&gt;&lt;br&gt;
Check out this Udemy course named JavaScript Algorithms and Data Structures Masterclass! It is created by &lt;a href="https://www.youtube.com/c/ColtSteeleCode"&gt;Colt Steele&lt;/a&gt;, and I referenced his code for the data structure implementation part of this blog post. Personally, I didn't know where to start with algorithms and data structures especially coming from a non-tech background. This course is very well structured for beginners to build a foundation on these topics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://visualgo.net/en"&gt;&lt;strong&gt;Visual Animation&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(VisuAlgo)&lt;/strong&gt;&lt;br&gt;
Data structures can be difficult to comprehend for some people just by looking at the code/text. The instructor in the course above uses a website named VisuAlgo that has visual representation of algorithms and data structures through animation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.interviewcake.com/data-structures-reference"&gt;&lt;strong&gt;Data Structure Cheat Sheet&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(Interview Cake)&lt;/strong&gt;&lt;br&gt;
Also, here's a really well-summarized cheat sheet/visualizations on data structures.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=h2d9b_nEzoA"&gt;&lt;strong&gt;CS50's Hash Tables Lesson&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(YouTube Video)&lt;/strong&gt;&lt;br&gt;
I came across this YouTube video thanks to one of the DEV Community users Alex &lt;a class="mentioned-user" href="https://dev.to/tinydev"&gt;@tinydev&lt;/a&gt;
! It's part of Harvard's CS50 course, and they do a great job explaining Hash Tables.&lt;/p&gt;

</description>
      <category>datastructure</category>
      <category>hashtable</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Um Quase Guia de Como Contribuir em Projetos Open Sources</title>
      <author>Augusto Silva</author>
      <pubDate>Mon, 16 Aug 2021 22:02:44 +0000</pubDate>
      <link>https://dev.to/augustoasilva/um-quase-guia-de-como-contribuir-em-projetos-open-sources-5069</link>
      <guid>https://dev.to/augustoasilva/um-quase-guia-de-como-contribuir-em-projetos-open-sources-5069</guid>
      <description>&lt;p&gt;Hoje eu trago um post inspirado em uma thread no twitter: &lt;strong&gt;como começar a contribuir para projetos open-sourc&lt;/strong&gt; . Bom e hoje eu vim trazer um pouco da minha experiência de como comecei a contribuir e assim, talvez, possa te ajudar também.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#por-onde-come%C3%A7ar-a-olhar"&gt;
  &lt;/a&gt;
  Por onde começar a olhar?
&lt;/h2&gt;

&lt;p&gt;Bem, hoje eu vejo que tem 3 caminhos a se seguir daqui:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Você procurar o repositório de algum projeto que você já usa e curti usar e quer contribuir;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Você pode procurar lista de projetos open-sources que muitas pessoas fazem (eu não serei essa pessoa hoje =/);&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Você pode começar a procurar por tags no github, como a &lt;strong&gt;good first issue&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bem agora eu explicar cada uma delas e como elas funcionaram para mim.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-contribuindo-em-projetos-que-voc%C3%AA-usa-e-curti"&gt;
  &lt;/a&gt;
  1. Contribuindo em projetos que você usa e curti!
&lt;/h2&gt;

&lt;p&gt;Existem vários projetos open-sources que muita gente usa como GIMP, OBS Studio, Inkscape, Kdenlive, Krita, entre outros, que já trazem uma página em seu site ajudando a como contribuir, os guidelines, até mesmo disponibilizam canais via slack, email e etc para você entrar em contato e aqui mora o pulo do gato: entre em contato!&lt;/p&gt;

&lt;p&gt;Muitas vezes quando você entra em contato com os devs do projeto, e explica que quer contribuir eles podem acabar te ajudando a selecionar uma issue bem bacana e simples para pessoas que estão aprendendo. Isso vale tanto pra stack que eles usam, quanto para o uso do próprio git e repositório online (github, gitlab, bitbucket, etc).&lt;/p&gt;

&lt;p&gt;Esse aqui não foi exatamente o meu caso, e como eu sei disso? Porque hoje eu contribuo para um projeto da Apache e descobri por lá isso. Bem bacana né?! Então de resumo dessa primeira parte fica: **não tenha medo de entrar em contao com os devs do projeto pedindo orientações de como contribuir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-procurando-lista-de-projetos-opensource-quase-o-meu-caso-de-como-entrei-no-mundo-opensource"&gt;
  &lt;/a&gt;
  2. Procurando lista de projetos open-source (quase o meu caso de como entrei no mundo open-source).
&lt;/h2&gt;

&lt;p&gt;Esse aqui talvez seja um dos métodos que as pessoas mais comentam nos grupos (fonte: minha intuioção). O que mais vi até agora nos grupos, no geral, são compilados de projetos open-sources que uma galera mantem como repo do github.&lt;/p&gt;

&lt;p&gt;O meu caso foi semelhante a isso, mas não foi através de lista de projetos, foi mais uma citação em grupo do Telegram sobre projetos open-source nacionais. E assim começou minha contribuição para o &lt;a href="https://libreflix.org"&gt;Libreflix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Curiosidade: eu não contribui para o código-fonte em si do projeto diretamente, mas eu criei issues com ideais, participei de debates e rodas de conversas, além de ter uma versão desktop da aplicação em meu repositório(tá publicado também na &lt;a href="https://snapcraft.io/libreflix-desktop"&gt;Snap Store&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Foi com essa turma que dei meu ponta-pé de fato para aderir a stack do Node.js, meses depois cheguei até a pegar uns freelas de sistemas que fiz com MEVN (mongo, express, vue, node).&lt;/p&gt;

&lt;p&gt;Então deixarei agora algumas listas de projetos nacionais para vocês contribuirem:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/camilatigre/listamaravilhosaopensource"&gt;https://github.com/camilatigre/listamaravilhosaopensource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/backend-br/opensource-br"&gt;https://github.com/backend-br/opensource-br&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vinicius73/awesome-brasil"&gt;https://github.com/vinicius73/awesome-brasil&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Procurem mais e adicione aqui nos comentários, beleza?&lt;/strong&gt; Vamos nos ajudar!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#procurando-por-tags-no-github"&gt;
  &lt;/a&gt;
  Procurando por tags no github!
&lt;/h2&gt;

&lt;p&gt;Outra maneira muito boa de se começar a contribuir é através de procurar tags no github! Tá, mas como você faz isso? Quando você está na página inicial do github e logado, o campo de pesquisa está no canto superior esquerdo, basta digitar algo como &lt;strong&gt;good first issue&lt;/strong&gt; e depois clicar enter, em seguida basta filtrar por issues e ta-da! &lt;/p&gt;

&lt;p&gt;Vou deixar aqui também, algo que o próprio github disponibiliza no quesito de tópicos de &lt;strong&gt;good first issue&lt;/strong&gt; :&lt;a href="https://github.com/topics/good-first-issue"&gt;https://github.com/topics/good-first-issue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Outras labels/tags que o pessoal usa para indicar que uma issue é para iniciantes, que eu conheça, são: &lt;strong&gt;first-timers-only&lt;/strong&gt; e &lt;strong&gt;novice&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mas-e-eu-que-ainda-n%C3%A3o-sei-git"&gt;
  &lt;/a&gt;
  Mas e eu que ainda não sei git?
&lt;/h2&gt;

&lt;p&gt;Bom, ai se você não sabe sobre o uso do git, vou deixar aqui um &lt;a href="https://www.udemy.com/course/git-e-github-na-vida-real/?couponCode=PROMOAGO21"&gt;curso bem bacana de git do Willian Justen&lt;/a&gt;. Existem outros cursos bem bacanas também, e alguns até grátis, então se você conhece um, deixa aqui nos comentários também beleza?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#por-hoje-%C3%A9-s%C3%B3"&gt;
  &lt;/a&gt;
  Por hoje é só!
&lt;/h2&gt;

&lt;p&gt;Se você leu até aqui, queria te agradecer pelo tempo e espero que possa ter te ajudado com esse mini guia de como começar a contribuir com um projeto open-source. Vale ressaltar que contribuir, e aprender, não é apenas codar viu? Acompanhe os chats/grupos/canais que os devs/contribuintes usam para participar e aprender além do código também beleza?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lince%C3%A7as"&gt;
  &lt;/a&gt;
  Linceças
&lt;/h3&gt;

&lt;p&gt;Foto por &lt;a href="https://unsplash.com/@bitcloudphotography"&gt;Bitcloud&lt;/a&gt; no &lt;a href="https://unsplash.com/photos/wKhsnBy1DXc"&gt;Unsplash&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>git</category>
      <category>contributing</category>
      <category>guide</category>
    </item>
    <item>
      <title>Some useful tools for a web developer.</title>
      <author>Naman vyas</author>
      <pubDate>Mon, 16 Aug 2021 21:46:43 +0000</pubDate>
      <link>https://dev.to/namanvyas/some-useful-tools-for-a-web-developer-3d1f</link>
      <guid>https://dev.to/namanvyas/some-useful-tools-for-a-web-developer-3d1f</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ayKh_1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ilbkvjdezhbxpuet0ka.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ayKh_1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ilbkvjdezhbxpuet0ka.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;wappalyzer:&lt;/p&gt;

&lt;p&gt;wappalyzer is a chrome extension to find out the technology stack of any website. Instantly reveal the technology stack any website, such as CMS, ecommerce platform or payment processor, as well as company and contact details.&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg?hl=en"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m2Khu7pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqpauljgaqmalmvb06j9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m2Khu7pm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cqpauljgaqmalmvb06j9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogoTester by &lt;a href="http://thework.market:"&gt;http://thework.market:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogoTester instantly checks if your logo is up to the top industry standards. It checks industry standards in your logo like - Uniqueness, Scalability, Background tolerance, Colors.&lt;br&gt;
&lt;a href="https://logotester.thework.market/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BUqFuT9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo32uoum9002ptngiw85.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BUqFuT9r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vo32uoum9002ptngiw85.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fake Filler:&lt;/p&gt;

&lt;p&gt;It's another useful chrome extension. Fake Filler is THE form filler to fill all input fields on a page with randomly generated fake data. This productivity-boosting extension is a must for developers and testers who work with forms.&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/fake-filler/bnjjngeaknajbdcgpfkgnonkmififhfo?hl=en"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7wshfna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62scbcbhq4n4qd0qxs3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7wshfna--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62scbcbhq4n4qd0qxs3w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WhatTheFont:&lt;/p&gt;

&lt;p&gt;With this web tool, you can find a font with just an image. WhatTheFont uses deep learning to search our collection of over 133,000 font styles and find the best match for the fonts in your photo.&lt;br&gt;
&lt;a href="https://www.myfonts.com/WhatTheFont/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JGghw64T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csyej3kha3bthvg5h2vq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JGghw64T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csyej3kha3bthvg5h2vq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://remove.bg:"&gt;http://remove.bg:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://Remove.bg"&gt;http://Remove.bg&lt;/a&gt; removes backgrounds from photos Automatically. You just have to upload your photo and wait for a few seconds and boom you got your background removed images without all that photoshop efforts.&lt;br&gt;
&lt;a href="https://www.remove.bg/"&gt;Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading :)&lt;/p&gt;

</description>
      <category>tooling</category>
      <category>webdev</category>
      <category>writing</category>
    </item>
    <item>
      <title>HOW I WILL USE KODECAMP AND WIN HNG TROPHY.</title>
      <author>Dev-Tonia</author>
      <pubDate>Mon, 16 Aug 2021 21:32:17 +0000</pubDate>
      <link>https://dev.to/devtonia/how-i-will-use-kodecamp-and-win-hng-trophy-3lp5</link>
      <guid>https://dev.to/devtonia/how-i-will-use-kodecamp-and-win-hng-trophy-3lp5</guid>
      <description>&lt;p&gt;During my last post,  I told you how I was accepted into the &lt;strong&gt;HNGi8&lt;/strong&gt; internship and my plan to win the HNG trophy which is the T-shirt.&lt;/p&gt;

&lt;p&gt;After some much wondering on the internet trying to find a helping hand on my journey on the ongoing HNG internship, I came across &lt;strong&gt;KODECAMP&lt;/strong&gt; I immediately hop into their Bootcamp as it is running the same time with the HNGI8 internship, you know it's a bonus for me as I will be learning and at same participating on the on going internship.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why I Joined KODECAMP BootCamp.&lt;/strong&gt;&lt;br&gt;
The program will run for 16 weeks, so may the end of the 16 weeks I want to &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Master my act in Frontend development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be able to take on any project that was thrown my way with fear. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I have been battling impostor syndrome, by the expiration of the 16 weeks, impostor syndrome is no longer part of me. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will give the right focus during the ongoing internship as I will be standing on their training to tackle all the tasks thrown my way during the HNGi8 internship. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The truth is that by the end of the internship and this current Bootcamp I'm jumping into a job as a web developer majoring mainly on the frontend stack using REACT. . &lt;/p&gt;

&lt;p&gt;Stay as I will be updating on my journey from the internship and the Bootcamp.. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>My Journey Into Web Development</title>
      <author>Oladipupo Adanikin</author>
      <pubDate>Mon, 16 Aug 2021 21:25:13 +0000</pubDate>
      <link>https://dev.to/deeppsy/my-journey-into-web-development-73n</link>
      <guid>https://dev.to/deeppsy/my-journey-into-web-development-73n</guid>
      <description>&lt;p&gt;Hi.&lt;/p&gt;

&lt;p&gt;I'm Dipo and welcome to my little talk about how my journey into web development has been for about 6 months. &lt;/p&gt;

&lt;p&gt;I am actually writing this article because of an internship role Im currently interested in. And that's the HNG Internship. Many Nigerians and some non-nigerians are familiar with this internship. Anyone can sign up for this internship using this link: &lt;a href="https://internship.zuri.team"&gt;https://internship.zuri.team&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To move from the stage I currently am, I was required to make this write-up as I typically don't like writing. But, here goes nothing.&lt;/p&gt;

&lt;p&gt;Like everybody else who is into software engineering, I started my learning from freecodecamp as it it completely free to use and easily accessible to anyone. But, I honestly got bored and wanted more. So I went on Udemy to look for courses that would help me and I found Colt Steele's bootcamp course into web dev. Here's a link to help if you feel like checking it out &lt;a href="https://www.udemy.com/course/the-web-developer-bootcamp/"&gt;https://www.udemy.com/course/the-web-developer-bootcamp/&lt;/a&gt;. The course covers foundational topics such as HTML, CSS and JavaScript for it's frontend section and for backend, it used NodeJS which really solidify my JavaScript understand.&lt;/p&gt;

&lt;p&gt;I completed this course in 3 months and by then I had done so many projects and also pushed to GitHub. If you're reading this and you don't know what GitHub is. It is a cloud platform that allows developers push their code online whether to a private or public folder. It basically makes life easy for us to share code as developers. Here's a link to help you start out  &lt;a href="https://youtu.be/DVRQoVRzMIY"&gt;https://youtu.be/DVRQoVRzMIY&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, developing for the often means we are working with some sort of design and these days there are many softwares used out there to create design. Examples are Figma, Adobe XD and so on.&lt;/p&gt;

&lt;p&gt;Figma is widely used and fairly easy to understand and I'd recommend watching this video to understand what goes on there &lt;a href="https://youtu.be/1MbQaYCCzzI"&gt;https://youtu.be/1MbQaYCCzzI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I think it would be unfair to you reading this if I don't tell you why I decided to do this internship. Studying and building things alone can be a bit*h and it is often recommended that you learn with people so you can really test out your knowledge on stuff. So, at the end the 8 weeks internship, I hope to have networked with a lot of people in and out of my current technology stack and to give me the confidence to work on project that are genuinely mine. Not something from YouTube or some capstone project at the end of a course.&lt;/p&gt;

&lt;p&gt;So yeah. If you stuck around to this point of the article you're and OG, and I appreciate it. Thank you so much for you time. I hope you learnt a little bit.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My Training process In KodeCamp</title>
      <author>daveeedu</author>
      <pubDate>Mon, 16 Aug 2021 21:23:34 +0000</pubDate>
      <link>https://dev.to/daveeedu/my-training-process-in-kodecamp-2f7a</link>
      <guid>https://dev.to/daveeedu/my-training-process-in-kodecamp-2f7a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I am David Edu, certified in Data analytics/Business Intelligence, presently pursuing a career in decision making using Data science. I'm fascinated about the application of machine learning in solving real life problems and Artificial intelligence in general. My hobbies include Coding, reading, gaming, and networking.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#my-stack"&gt;
  &lt;/a&gt;
  My Stack
&lt;/h1&gt;

&lt;p&gt;Front-End&lt;br&gt;
Python&lt;/p&gt;

&lt;p&gt;I am currently undergoing a web Front-End training course with KodeCamp. KodeCamp is a tech training platform that provides training tracks in web Front-End dev, Back-End dev and UI/UX designs. The training is designed to last for 12 weeks and during this time my goals are to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Advance my html and css skills&lt;/li&gt;
&lt;li&gt;Get hands on experience by applying my skills on real life 
projects.&lt;/li&gt;
&lt;li&gt;Networking with industry experts and fellow tech enthusiasts.&lt;/li&gt;
&lt;li&gt;Building up my digital portfolio.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thank you for reading my second article, I will be posting updates on the training process.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Website Setup Essentials</title>
      <author>PRIM4T</author>
      <pubDate>Mon, 16 Aug 2021 21:23:21 +0000</pubDate>
      <link>https://dev.to/prim4t/website-setup-essentials-447o</link>
      <guid>https://dev.to/prim4t/website-setup-essentials-447o</guid>
      <description>&lt;h5&gt;
  &lt;a href="#everything-you-need-to-start-your-minimal-fast-and-secure-blog"&gt;
  &lt;/a&gt;
  Everything you need to start your minimal, fast and secure Blog
&lt;/h5&gt;

&lt;p&gt;&lt;a&gt; &lt;img src="https://i.giphy.com/media/ZgTR3UQ9XAWDvqy9jv/giphy.gif"&gt; &lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wFrOX1Ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/b/bf/GradientPurpleBlue.png"&gt; &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#envelope-register-email-mailfence-criptext"&gt;
  &lt;/a&gt;
  ✉️ Register E-Mail: &lt;strong&gt;&lt;a href="https://mailfence.com"&gt;Mailfence&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://criptext.com"&gt;Criptext&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#link-get-git-github-gitlab"&gt;
  &lt;/a&gt;
  🔗 Get Git: &lt;strong&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://gitlab.com"&gt;GitLab&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#computer-host-your-git-netlify-vercel"&gt;
  &lt;/a&gt;
  💻 Host your Git:  &lt;strong&gt;&lt;a href="https://netlify.com"&gt;Netlify&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#globewithmeridians-register-domain-namecheap-unstoppabled"&gt;
  &lt;/a&gt;
  🌐 Register Domain : &lt;strong&gt;&lt;a href="https://namecheap.com"&gt;Namecheap&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://unstoppabledomains.com/r/151ba14a0087436"&gt;UnstoppableD...&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#art-get-a-themetemplate-hugo-jekyll-gatsby"&gt;
  &lt;/a&gt;
  🎨 Get a Theme/Template: &lt;a href="https://themes.gohugo.io"&gt;Hugo&lt;/a&gt; | &lt;a href="https://jamstackthemes.dev/ssg/jekyll/"&gt;Jekyll&lt;/a&gt; | &lt;a href="https://themejam.gatsbyjs.org/showcase"&gt;Gatsby&lt;/a&gt;
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Chalk&lt;/th&gt;
&lt;th&gt;TeXt&lt;/th&gt;
&lt;th&gt;Anatole&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/nielsenramon/chalk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHMQAOYQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nielsenramon/chalk/master/_assets/images/documentation/chalk-intro%25402x.png" alt="Chalk"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kitian616/jekyll-TeXt-theme"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_BHosNlt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/kitian616/jekyll-TeXt-theme/master/screenshots/TeXt-home.jpg" alt="TeXt"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/lxndrblz/anatole"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLXt34Jo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/lxndrblz/anatole/master/images/screenshot.png" alt="Anatole"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#useful-tools-and-links"&gt;
  &lt;/a&gt;
  Useful Tools and links:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Emoji | &lt;a href="https://emojipedia.org/"&gt;Emojipedia.org&lt;/a&gt; | &lt;a href="https://gist.github.com/rxaviers/7360908"&gt;on Github&lt;/a&gt;| &lt;a href="https://dev.to/nikolab/complete-list-of-github-markdown-emoji-markup-5aia"&gt;on Dev.to&lt;/a&gt; | 😄 😁 😢&lt;/li&gt;
&lt;li&gt;Icons | &lt;a href="https://simpleicons.org/?q=netl"&gt;Simpleicons.org&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Gif Libraries | &lt;a href="https://gifs.joelglovier.com/"&gt;on Github&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Badge | &lt;a href="https://shields.io/category/social"&gt;Shield.io&lt;/a&gt; | &lt;a href="https://github.com/aleen42/badges"&gt;Aleen42&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Pictures/Photos | &lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt; | &lt;a href="https://commons.wikimedia.org/wiki/Category:Images"&gt;Wikipedia&lt;/a&gt; | 📷&lt;/li&gt;
&lt;li&gt;Markdown Editors | &lt;a href="https://jbt.github.io/markdown-editor/"&gt;jbt&lt;/a&gt; | &lt;a href="https://coolmarkdowneditor.org/"&gt;Cool&lt;/a&gt; | &lt;a href="https://upmath.me/"&gt;Upmath&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; List of Static Site generators | &lt;a href="https://jamstack.org/generators/"&gt;Jamstack.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Automation | &lt;a href="https://www.integromat.com"&gt;Integromat&lt;/a&gt; | &lt;a href="https://zapier.com/"&gt;zapier&lt;/a&gt; | &lt;a href="https://ifttt.com/"&gt;ifttt&lt;/a&gt; | ⚙️ &lt;/li&gt;
&lt;li&gt;Cross blog | &lt;a href="https://www.dev.to"&gt;Dev.to&lt;/a&gt; | &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt; | 📝&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wFrOX1Ev--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/b/bf/GradientPurpleBlue.png"&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web Setup Essentials from &lt;a href="https://www.youtube.com/channel/UCMhW7mC8faCqTcRKbO0c7Cw"&gt;Primitive Tutorials&lt;/a&gt; \&lt;br&gt;
Feel free &lt;a href="https://github.com/prim4t/Web-Setup-Essentials"&gt;contribute!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.paypal.me/prim4tdotart"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PMi5QXbp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/PayPal-tip%2520me-1462ab.svg%3Flogo%3Dpaypal" alt="Tip Me via PayPal"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/kitian616/jekyll-TeXt-theme/master/docs/assets/images/3Fkufxcw2xd8HnaRJBNK4ccdtkUDyyNu4V.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86NSAtQW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Bitcoin-tip%2520me-f7931a.svg%3Flogo%3Dbitcoin" alt="Tip Me via Bitcoin"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>static</category>
      <category>blog</category>
      <category>hugo</category>
      <category>markdown</category>
    </item>
    <item>
      <title>What Is a URL? 🔗</title>
      <author>Anton</author>
      <pubDate>Mon, 16 Aug 2021 21:21:47 +0000</pubDate>
      <link>https://dev.to/therceman/what-is-a-url-3j9d</link>
      <guid>https://dev.to/therceman/what-is-a-url-3j9d</guid>
      <description>&lt;p&gt;URL (Uniform Resource Locator) is the so-called address of the desired resource on the internet that consists of multiple components/parts. &lt;/p&gt;

&lt;p&gt;Let's take a look at the following URL&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://admin:pass@a.b.example.com:888/users/index.php?q=bob&amp;amp;role=2#info
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This URL consist of the following components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scheme        &lt;code&gt;https://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Authority    &lt;code&gt;admin:pass@&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Host             &lt;code&gt;a.b.example.com&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Port             &lt;code&gt;888&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Path            &lt;code&gt;users/index.php&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Query          &lt;code&gt;q=bob&amp;amp;role=2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Hash             &lt;code&gt;#info&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scheme-component"&gt;
  &lt;/a&gt;
  Scheme component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt;  Protocol&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; Yes&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;https://&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The scheme specifies which application will be used by a web server (app on Windows/i0S/Android) to open a URL. &lt;/p&gt;

&lt;p&gt;For example, opening a URL with the scheme &lt;code&gt;mailto://&lt;/code&gt; will open your webmail application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Common examples: &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt; , &lt;code&gt;ftp://&lt;/code&gt;, &lt;code&gt;mailto://&lt;/code&gt;, &lt;code&gt;file://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Custom app examples: &lt;code&gt;facetime://&lt;/code&gt;, &lt;code&gt;slack://&lt;/code&gt;, &lt;code&gt;steam://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Browser specific examples: &lt;code&gt;about://&lt;/code&gt;, &lt;code&gt;chrome://&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Additional browser examples: &lt;code&gt;data://&lt;/code&gt;, &lt;code&gt;javascript://&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authority-component"&gt;
  &lt;/a&gt;
  Authority component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; HTTP authentication, credentials, authorization&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;admin:pass@&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Basic authorization to a web/app resource indicated by  &lt;code&gt;@&lt;/code&gt; (at) sign.&lt;br&gt;
Login &lt;code&gt;admin&lt;/code&gt; is separated from password &lt;code&gt;pass&lt;/code&gt; using &lt;code&gt;:&lt;/code&gt; (colon) sign&lt;br&gt;
In some cases password is optional (e.g. &lt;code&gt;https://admin@example.com&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#host-component"&gt;
  &lt;/a&gt;
  Host component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; Hostname&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; Yes&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;a.b.example.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Host consists of multiple domain names separated by &lt;code&gt;.&lt;/code&gt; (dot) sign.&lt;br&gt;
Domain name with level &amp;gt; 2 is called sub-domain&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;a&lt;/code&gt;                   - fourth-level domain (sub-domain)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;b&lt;/code&gt;                   - third-level domain (sub-domain). &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;example&lt;/code&gt;    - second-level domain (domain name)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;com&lt;/code&gt;            - top/first-level domain (TLD)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The host can be an IP address in IPv4 (e.g. &lt;code&gt;193.184.216.34&lt;/code&gt;)&lt;br&gt;
or IPv6 (e.g. &lt;code&gt;[2a00:1450:400e:80a::200e]&lt;/code&gt;) format&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#port-component"&gt;
  &lt;/a&gt;
  Port component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Required:&lt;/strong&gt; Yes&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;888&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The port component indicates which server we are referring to on the target host&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;:&lt;/code&gt; (colon) sign indicates port component usage. &lt;code&gt;888&lt;/code&gt; is the port number&lt;/p&gt;

&lt;p&gt;The server can accept connections on multiple ports. E.g. port numbers &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt; can be used by a single server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;80&lt;/code&gt;   - port number is used for basic web connection&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;443&lt;/code&gt; - port number is used for secure (TLS/SSL) web connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The port &lt;code&gt;:443&lt;/code&gt; or &lt;code&gt;:80&lt;/code&gt; is omitted when a web page has &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;http://&lt;/code&gt; scheme&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#path-component"&gt;
  &lt;/a&gt;
  Path component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;/users/index.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Usually the Path component indicates a path to target file on a server&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;/&lt;/code&gt;                 -  the root path/folder. Let's imagine it is called &lt;code&gt;htdocs&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;users&lt;/code&gt;              -  folder named &lt;code&gt;users&lt;/code&gt; inside of &lt;code&gt;htdocs&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;/index.php&lt;/code&gt; - file named &lt;code&gt;index.php&lt;/code&gt; inside of &lt;code&gt;users&lt;/code&gt; folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In some cases, the Path component can use custom mapping/scheme/rewrite rule. The path segments can be linked to a function/method in different files on a server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/users/list&lt;/code&gt;         - function &lt;code&gt;list&lt;/code&gt; in &lt;code&gt;users.php&lt;/code&gt; file.&lt;br&gt;
&lt;em&gt;show list of all users&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/users/1/read&lt;/code&gt; - function &lt;code&gt;read&lt;/code&gt; with argument &lt;code&gt;ID&lt;/code&gt; in &lt;code&gt;users.php&lt;/code&gt; file. &lt;br&gt;
&lt;em&gt;show info of user with ID = 1&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;/users/images&lt;/code&gt; - function &lt;code&gt;users&lt;/code&gt; in &lt;code&gt;image-collection.php&lt;/code&gt; file. &lt;br&gt;
&lt;em&gt;show images of all users&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#query-component"&gt;
  &lt;/a&gt;
  Query component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; Query string, Search string&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;?q=bob&amp;amp;role=2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Query component always starts with a &lt;code&gt;?&lt;/code&gt; (question) sign. &lt;br&gt;
It consists of key-value pairs. The value is assigned to a key using the &lt;code&gt;=&lt;/code&gt; (equals) sign. &lt;br&gt;
&lt;br&gt; Key-value pairs are separated using &lt;code&gt;&amp;amp;&lt;/code&gt; (ampersand) sign.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;?&lt;/code&gt;       - starting symbol that indicates presence of Query component &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;q&lt;/code&gt;       - the first key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;=&lt;/code&gt;       - the sign, that assigns first value to a first key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;bob&lt;/code&gt;   -  the first value&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;amp;&lt;/code&gt;       -  the key and value pair separator&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;role&lt;/code&gt;  - the second key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;=&lt;/code&gt;       - the sign, that assigns second value to a second key&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;2&lt;/code&gt;       - the second value&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example of logic behind this query: &lt;em&gt;get all users named &lt;code&gt;bob&lt;/code&gt; with role ID &lt;code&gt;2&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hash-component"&gt;
  &lt;/a&gt;
  Hash component
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Alternative naming:&lt;/strong&gt; Anchor&lt;br&gt;
&lt;strong&gt;Required:&lt;/strong&gt; No&lt;br&gt;
&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;#info&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Usually used by client-side scripting language named &lt;code&gt;Javascript&lt;/code&gt;&lt;br&gt;
By default - the browser will make a focus on an element with &lt;code&gt;id&lt;/code&gt; after &lt;code&gt;#&lt;/code&gt; (hash) sign. In our case, the focus will be made on an element with ID &lt;code&gt;info&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;#&lt;/code&gt;      - starting symbol that indicates the presence of Hash component&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;info&lt;/code&gt; - the value of a Hash component&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example of logic behind this hash: &lt;em&gt;show tab with basic info for found users&lt;/em&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading 👍&lt;/p&gt;

&lt;p&gt;Follow me on Twitter - &lt;a href="https://twitter.com/therceman"&gt;https://twitter.com/therceman&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
