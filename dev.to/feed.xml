<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 04 May 2021 18:06:04 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-3o6g</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-3o6g</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Editorial note:&lt;/strong&gt; Hi everyone! Gracie here. You might have seen me around DEV — I'm the Content Manager at Forem and an admin/moderator of CodeNewbie Community and DEV. I'll be sharing the Top 7 and weekly newsletter while Jess is away on parental leave. I'm very excited to be a part of your weekly ritual for the next few months! Thanks for having me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-want-to-make-sure-all-we-have-to-do-is-look-for-talent"&gt;
  &lt;/a&gt;
  "I want to make sure all we have to do is look for talent"
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/resourcefulmind"&gt;@resourcefulmind&lt;/a&gt;
 shares a glimpse inside their experience as a software developer in Nigeria. Thank you for trusting the DEV Community with your reflections, feelings, frustrations, and honest reporting ❤️  I learned so much from your article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/resourcefulmind" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1WOJJiNA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--QecMLNY1--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/435270/7ca3876e-ca85-478e-a2fa-c634f4a78121.png" alt="resourcefulmind image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/resourcefulmind/a-beginner-s-journey-into-software-development-in-nigeria-86b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A beginner’s journey into software development in Nigeria.&lt;/h2&gt;
      &lt;h3&gt;Opeyemi Stephen ・ Apr 29 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#your-emotional-amp-mental-state-as-a-dev-has-a-direct-impact-on-your-work"&gt;
  &lt;/a&gt;
  "Your emotional &amp;amp; mental state as a dev has a direct impact on your work"
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/tyaga001"&gt;@tyaga001&lt;/a&gt;
, I see so many posts on DEV alone that communicate this truth. Highly recommend this post!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tyaga001" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Evcp20bP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AmHxNsux--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/350031/9de7de32-e1b3-438e-b86e-375c9e85f10b.jpeg" alt="tyaga001 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/tyaga001/7-uncomfortable-truths-about-being-a-developer-1gec" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 uncomfortable truths about being a developer.&lt;/h2&gt;
      &lt;h3&gt;Ankur Tyagi ・ May  2 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#when-you-hear-of-automation-what-comes-to-your-mind"&gt;
  &lt;/a&gt;
  "When you hear of automation what comes to your mind?"
&lt;/h2&gt;

&lt;p&gt;That's the question &lt;a class="mentioned-user" href="https://dev.to/kalashin1"&gt;@kalashin1&lt;/a&gt;
 asks in this post — then, they go on to helpfully rewire your answer to make CI/CD more comprehensible. Thanks, Kinanee!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kalashin1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WTfoD9W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--C2So3Ds7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/444740/616b7e59-a732-437f-b6d1-14c5955d9ae7.jpg" alt="kalashin1 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kalashin1/automate-the-hell-out-of-your-code-3j42" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Automate the hell out of your code&lt;/h2&gt;
      &lt;h3&gt;Kinanee Samson ・ May  2 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#mens-sana-in-corpore-sano"&gt;
  &lt;/a&gt;
  “Mens Sana in Corpore Sano”
&lt;/h2&gt;

&lt;p&gt;Or, “a healthy mind in a healthy body” as the Romans used to say. &lt;a class="mentioned-user" href="https://dev.to/creativetim_official"&gt;@creativetim_official&lt;/a&gt;
 helps developers examine ways to reduce burnout to achieve more balance and less burnout in this post.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/creativetim_official" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rgtwhngc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--q-ISCoq8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/180698/1049dc0e-ab4a-42f8-91a6-262e7df1e65e.png" alt="creativetim_official image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/creativetim_official/how-to-prevent-burnout-while-working-as-a-web-developer-46oa" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Prevent Burnout While Working as a Web Developer&lt;/h2&gt;
      &lt;h3&gt;Creative Tim ・ Apr 29 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#burnout&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#setting-up-a-new-system-is-a-neverending-task"&gt;
  &lt;/a&gt;
  "Setting up a new system is a neverending task..."
&lt;/h2&gt;

&lt;p&gt;— but &lt;a class="mentioned-user" href="https://dev.to/erikaheidi"&gt;@erikaheidi&lt;/a&gt;
 is pretty happy with the current state of their new laptop! Take a look at how they got there with an awesome Ubuntu setup process...&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/erikaheidi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i6eXk8o4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--95Vsc3-S--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/162988/b604f249-a248-4582-80e3-4a781d054e3f.jpeg" alt="erikaheidi image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/erikaheidi/setting-up-a-fresh-ubuntu-21-04-desktop-as-personal-computer-41i3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Setting Up a Fresh Ubuntu 21.04 Desktop as Personal Computer&lt;/h2&gt;
      &lt;h3&gt;Erika Heidi ・ May  2 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#ubuntu&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#setup&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#web-components-can-be-useful-in-the-right-context"&gt;
  &lt;/a&gt;
  Web components &lt;em&gt;can&lt;/em&gt; be useful in the right context
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/emileperron"&gt;@emileperron&lt;/a&gt;
 shows us &lt;em&gt;which&lt;/em&gt; contexts make the most sense to use them in. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/emileperron" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dGkDUoXN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--IeEm8106--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/624340/24b2b84a-6d71-4ffc-940f-f021100cf7d6.jpg" alt="emileperron image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/emileperron/web-components-in-2021-the-good-the-bad-and-the-ugly-3kg" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Web components in 2021: the Good, the Bad and the Ugly&lt;/h2&gt;
      &lt;h3&gt;Émile Perron ・ May  2 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webcomponents&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#interview-prep-js-edition"&gt;
  &lt;/a&gt;
  Interview prep: JS edition
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/pietraszek"&gt;@pietraszek&lt;/a&gt;
 shares some common JavaScript questions and simple code tests you might face in a future interview. Helpful! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pietraszek" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8U7dyeTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--waz08J2K--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/619004/c73a18b6-09d5-46b2-9acc-bc930ca5bf62.jpeg" alt="pietraszek image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pietraszek/interview-questions-part-2-javascript-lno" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Interview questions: JavaScript&lt;/h2&gt;
      &lt;h3&gt;Lukasz Pietraszek ・ Apr 27 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#interview&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>So Where Do I Deploy My App ??</title>
      <author>Alestor Aldous</author>
      <pubDate>Tue, 04 May 2021 17:14:44 +0000</pubDate>
      <link>https://dev.to/alestor_123/so-where-do-i-deploy-my-app-50nd</link>
      <guid>https://dev.to/alestor_123/so-where-do-i-deploy-my-app-50nd</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w_w4_xXc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/idimevz68hzl65lnc38w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w_w4_xXc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/idimevz68hzl65lnc38w.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-where-do-i-deploy-my-app-"&gt;
  &lt;/a&gt;
  So Where Do I Deploy My App ??
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#there-are-serveral-platofroms-to-deploy-your-app"&gt;
  &lt;/a&gt;
  There are serveral platofroms to deploy your app
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#it-depends-on-the-complexity-and-use-of-your-app"&gt;
  &lt;/a&gt;
  It depends on the complexity and use of your app
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#if-you-just-want-to-show-case-your-app-you-can-use-one-among-these"&gt;
  &lt;/a&gt;
  If you just want to show case your app you can use one among these 👇
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#heroku"&gt;
  &lt;/a&gt;
  Heroku
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Heroku is a cloud platform to host your apps simply&lt;/li&gt;
&lt;li&gt;You only need to know basic git commands&lt;/li&gt;
&lt;li&gt;It comes with no cost but you can deploy 5 app max&lt;/li&gt;
&lt;li&gt;Widely used by Developers&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#netlify"&gt;
  &lt;/a&gt;
  Netlify
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You can deploy unlimited deploys&lt;/li&gt;
&lt;li&gt;Widely used by Developers&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#github-pages"&gt;
  &lt;/a&gt;
  Github Pages
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You can deploy unlimited apps&lt;/li&gt;
&lt;li&gt;Can use github actions for automations&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#when-it-comes-to-scalability"&gt;
  &lt;/a&gt;
  When It comes to Scalability
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#aws"&gt;
  &lt;/a&gt;
  AWS
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;You can deploy unlimited Apps for an developer or an enterprise plan&lt;/li&gt;
&lt;li&gt;Recommended By Developers&lt;/li&gt;
&lt;li&gt;Even Dev.to is deployed on AWS 
# Azure&lt;/li&gt;
&lt;li&gt;You can deploy unlimited Apps for an developer or an enterprise plan&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#and-more-"&gt;
  &lt;/a&gt;
  And More ..
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#every-service-has-its-own-pros-and-cons"&gt;
  &lt;/a&gt;
  Every Service has its own pros and cons
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-"&gt;
  &lt;/a&gt;
  Keep Coding !!!
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#share-with-your-friends-on-twitter"&gt;
  &lt;/a&gt;
  🙏 Share with your friends on &lt;a href="https://twitter.com/intent/tweet?text=%20%20So%20Where%20Do%20I%20Deploy?%20%20https://dev.to/alestor123/so-where-do-i-deploy-eah"&gt;Twitter&lt;/a&gt;
&lt;/h1&gt;

</description>
      <category>devops</category>
      <category>webdev</category>
      <category>aws</category>
      <category>heroku</category>
    </item>
    <item>
      <title>What is Neural Rendering?</title>
      <author>Hugo</author>
      <pubDate>Tue, 04 May 2021 17:07:42 +0000</pubDate>
      <link>https://dev.to/zumolabs/what-is-neural-rendering-44m0</link>
      <guid>https://dev.to/zumolabs/what-is-neural-rendering-44m0</guid>
      <description>&lt;p&gt;As our world becomes increasingly digitized, the methods by which we render these virtual worlds are rapidly changing. Neural rendering has huge potential in improving many aspects of the rendering pipeline by leveraging generative machine learning techniques. What is neural rendering? In this article we'll introduce the concept, compare it to classical computer graphics, and discuss what it means for the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#classic-rendering"&gt;
  &lt;/a&gt;
  Classic Rendering
&lt;/h2&gt;

&lt;p&gt;Creating 3D virtual worlds today is a complicated and involved process. Each item, or asset, in a virtual scene is represented by a polygon mesh (Slide 1). This polygon mesh can either be modeled by an artist, or scanned into existence: both of these processes are manual and time consuming. The more detailed we want this specific asset to be, the more polygons the mesh will have.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WmjgPeam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8tv8di9rzm91gt9006oh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WmjgPeam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8tv8di9rzm91gt9006oh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The polygon mesh is only the beginning. Each surface in this 3D world also has a corresponding material, which determines the appearance of the mesh. At runtime, the material and mesh of the object are used as inputs to shader programs, which calculate the appearance of the object under given lighting conditions and a specific camera angle (Slide 2). Over the years, many different shader programs have been developed, though the fundamental principle is the same: use the laws of physics to calculate the appearance of an object. This is most evident in the approach known as Ray Tracing, where every light ray is traced from its source down to every surface it bounces on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7hPGNFhN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xoututppz3r1vmhviqqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7hPGNFhN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xoututppz3r1vmhviqqb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This render pipeline can create amazing results: every CGI effect in every movie you have seen, and every game you have ever played uses some form of this "classical computer graphics" pipeline. The main pain point for this pipeline is in the huge amount of work required to explicitly define every object and every material, and the large computation required to render a realistic or complex scene. Which leads us to the question: what if we didn't have to define every object and calculate every light bounce?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enter-neural-rendering"&gt;
  &lt;/a&gt;
  Enter Neural Rendering
&lt;/h2&gt;

&lt;p&gt;So, what is neural rendering? Though still a very young field, it's one which has grown to encompass a large number of techniques-GANs are a form of neural rendering. The key concept behind neural rendering approaches is that they are differentiable. A differentiable function is one whose derivative exists at each point in the domain. This is important because machine learning is basically the chain rule with extra steps: a differentiable rendering function can be learned with data, one gradient descent step at a time. Learning a rendering function statistically through data is fundamentally different from the classic rendering methods we described above, which calculate and extrapolate from the known laws of physics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oPann5oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfy5vmw4nlrf7zhmbasd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oPann5oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfy5vmw4nlrf7zhmbasd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the coolest flavors of neural rendering is novel view synthesis. In this problem, a neural network learns to render a scene from an arbitrary viewpoint. Slides 3 and 4 are figures from two great papers on this topic: one from Google Research [1] and the other from Facebook Reality Labs [2]. Both of these works use a volume rendering technique known as ray marching. Ray marching is when you shoot out a ray from the observer (camera) through a 3D volume in space and ask a function: what is the color and opacity at this particular point in space? Neural rendering takes the next step by using a neural network to approximate this function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fdqAFrZW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d722f8rjbrvyybfh8ns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fdqAFrZW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4d722f8rjbrvyybfh8ns.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future-of-rendering"&gt;
  &lt;/a&gt;
  The Future of Rendering
&lt;/h2&gt;

&lt;p&gt;We really just scratched the surface when it comes to neural rendering. If you want to learn more, we recommend this super extensive summary paper [3]. But before we go, what could this mean for the future?&lt;br&gt;
With neural rendering, we no longer need to physically model the scene and simulate the light transport, as this knowledge is now stored implicitly inside the weights of a neural network. This means that it will be possible to render your face, while it is inside a VR headset (Slide 5), without ever having to store or distort a 3D polygon mesh of your face!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--igQqggOL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5xm1owmo5gsgh0gjgn5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--igQqggOL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5xm1owmo5gsgh0gjgn5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With neural rendering, the compute required to render an image is also no longer tied to the complexity of the scene (the number of objects, lights, and materials), but rather the size of the neural network (time required to perform a forward pass). This opens up the door for the possibility of really high quality rendering at a blazingly fast frame rate.&lt;br&gt;
If you're interested in the intersection of machine learning and 3D, please check out our open source synthetic data toolkit zpy [5]. Your feedback, commits, and feature requests will be invaluable as we continue to build a more robust set of tools for generating synthetic data. Who knows? Perhaps the next great neural rendering model will be trained using data generated with zpy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;[1] NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis (arxiv.org/pdf/2003.08934.pdf)&lt;br&gt;
[2] Neural Volumes: Learning Dynamic Renderable Volumes from Images (arxiv.org/pdf/1906.07751.pdf)&lt;br&gt;
[3] State of the Art on Neural Rendering (arxiv.org/pdf/2004.03805.pdf)&lt;br&gt;
[4] zpy: an open source synthetic data toolkit.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Datadog Killed Our Vault and Consul Performance</title>
      <author>Cody Jarrett</author>
      <pubDate>Tue, 04 May 2021 17:04:10 +0000</pubDate>
      <link>https://dev.to/codyja/datadog-killed-our-vault-and-consul-performance-11mb</link>
      <guid>https://dev.to/codyja/datadog-killed-our-vault-and-consul-performance-11mb</guid>
      <description>&lt;p&gt;It can often be a learning experience or at least entertaining to hear about other people's experiences in managing distributed systems at scale. Recently we experienced a HashiCorp Vault outage and I thought it would be fun to share this experience plus a few lessons learned and tips. Looking back, it's quite interesting how different things can align so perfectly to result in such an obscure issue as you'll see.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#environment-overview"&gt;
  &lt;/a&gt;
  Environment Overview
&lt;/h1&gt;

&lt;p&gt;My company uses the full suite of HashiCorp tools, and quite honestly we're really big fans. Their tools have allowed us to transition to modern infrastructure practices in on-prem data center and cloud environments. This has led to improved application deployments and an overall better hosting experience. At the heart of our environment we use Nomad for container and non-containerized application orchestration, Vault for secrets storage and dynamic PKI, and Consul for service discovery and for Vault's storage backend. The total environment is fairly large with about 8400 active jobs consisting of over 60,000 containers and IIS app pools running on the Nomad clusters. Consul clusters have about 10,000 services in the catalog and about 40,000 unique services being health checked.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue
&lt;/h1&gt;

&lt;p&gt;One evening a few weeks back, we began upgrading the Nomad agent on several pools of Nomad clients (node classes) in one of our data centers. Soon after, we noticed Vault handle time metrics (&lt;code&gt;vault.core.handle_request&lt;/code&gt;) were beginning to elevate. This has been somewhat of a reoccurring pattern in this specific environment for the past year, especially during maintenance activities that result in extra load.&lt;/p&gt;

&lt;p&gt;Latencies continued to get worse as time passed however. Soon after we realized that &lt;strong&gt;Vault's mean handle time transitioned from &lt;em&gt;ms&lt;/em&gt; units to &lt;em&gt;minutes&lt;/em&gt;(!)&lt;/strong&gt; which was something we definitely hadn't seen before. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DbHbetBE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypoceh24dygx3rpvtxk2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DbHbetBE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypoceh24dygx3rpvtxk2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nomad's logging rate began increasing, full of entries like these snipped errors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;failed to create an alloc vault token: Post &lt;span class="s2"&gt;"/v1/auth/token/create/nomad-cluster"&lt;/span&gt;: context deadline exceeded
failed to create an alloc vault token: Post &lt;span class="s2"&gt;"/v1/auth/token/create/nomad-cluster"&lt;/span&gt;: net/http: request canceled &lt;span class="o"&gt;(&lt;/span&gt;Client.Timeout exceeded &lt;span class="k"&gt;while &lt;/span&gt;awaiting headers&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, whatever is occurring isn't super impactful yet since all jobs have multiple tasks running. We decided to engage HashiCorp Support since we're enterprise customers and kept digging and collecting logs. &lt;/p&gt;

&lt;p&gt;The challenge we had was trying to identify which system was at fault here, &lt;em&gt;Consul&lt;/em&gt; or &lt;em&gt;Vault&lt;/em&gt;. Today in our environment, both systems are coupled very closely since we're using the Consul storage backend for Vault. This means that Vault's persistence storage is sitting (encrypted) on top of Consul's KV store. We've planned to move away from this architecture so that Vault has it's own dedicated cluster (or now raft integrated storage), but it hasn't happened yet.&lt;/p&gt;

&lt;p&gt;We continued pouring through VM level metrics trying to identify a cause while ruling out symptoms and red herrings. There was essentially zero IO wait, CPU usage for Vault was 30% or less and Consul was 60% or less. We focused on disk performance since generally the limiting factor with Consul is disk write performance used by writing entries to the raft log. Disk IOPs on the Consul cluster were fairly low, even lower than our other data centers. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wRWfHk0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23hypt4cgij8vs93odh4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wRWfHk0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23hypt4cgij8vs93odh4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nothing too wild being reported for disk latencies as well:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g9N_sYkL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6ndqwy5809kq6nn0ysg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g9N_sYkL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z6ndqwy5809kq6nn0ysg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By now, we're even more stumped. HashiCorp Support has Development involved and they're worried the most about Consul commit and Vault handle times being so elevated. Our concern was that there's no way for the increasing &lt;em&gt;thundering herd&lt;/em&gt; of Nomad token renewals/creates to ever get serviced, just compounding the issue even more. &lt;/p&gt;

&lt;p&gt;At this point, we're suspecting an internal issue with Consul or Vault even more. &lt;em&gt;Something&lt;/em&gt; was bottlenecking operations somewhere and it didn't seem like hardware or VMs anymore. Support was concerned about the time spent writing to the raft log still, specifically &lt;code&gt;consul.raft.fsm.apply&lt;/code&gt; and &lt;code&gt;consul.raft.commitTime&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The next theory is things are hanging because of the sheer number of Vault revocations (token and pki certs) occurring from the earlier Nomad maintenance. Support brought up a new feature in Vault that puts back pressure on the expiration manager. In Vault 1.6.x, this can be enabled with an environment variable (&lt;code&gt;VAULT_16_REVOKE_PERMITPOOL=200&lt;/code&gt;) and 1.7.x includes this feature by default. &lt;/p&gt;

&lt;p&gt;After learning about this new revocation back pressure mechanism, we elected to try an emergency Vault upgrade from 1.5.4 to 1.6.3. We also turned on the new environment variable in the systemd unit file for Vault. Once the dust settled, we saw a slight improvement, but still..... &lt;strong&gt;no great recovery yet&lt;/strong&gt;. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#discovery"&gt;
  &lt;/a&gt;
  Discovery
&lt;/h1&gt;

&lt;p&gt;Periodically throughout the event we collected &lt;code&gt;consul debug&lt;/code&gt; and &lt;code&gt;vault debug&lt;/code&gt; archives, which are really convenient ways to package up logs and profiling dumps. Support reviewed those dumps multiple times and tried to identify what's causing the slowness. &lt;/p&gt;

&lt;p&gt;After Development reviewed the pprofs more, someone brought up a potential cause: &lt;em&gt;metrics&lt;/em&gt;, specifically there seemed to be a high amount of time being spent in a datadog metrics library that's built into Consul.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wait... What? We weren't using datadog for monitoring so what's going on?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To get realtime metrics from our Nomad, Consul, and Vault clusters we leverage Prometheus to scrape a Telegraf agent on every VM. That's been a convenient way to collect VM level metrics (cpu, memory, disk/io, etc) plus any other service metrics on the VM. Having Consul spew statsd style metrics to the local Telegraf agent has been working great. &lt;/p&gt;

&lt;p&gt;Consul Development began piecing things together and found there was a known issue in the &lt;strong&gt;datadog metrics library that was causing blocking for the Consul process&lt;/strong&gt;. It's an unpublished issue and was patched in Consul 1.7.6 by bumping the go-metrics/Datadog version. In the Consul configuration, we had the telemetry stanza configured with the &lt;code&gt;dogstatsd_addr&lt;/code&gt; pointing to the localhost Telegraf port. We couldn't remember exactly why we were using the dogstatsd output versus straight statsd (or even Prometheus). There was a vauge memory of adding additional tags to each metric, but clearly wasn't really needed since Telegraf supports &lt;code&gt;[global_tags]&lt;/code&gt; in its configuration.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#resolution"&gt;
  &lt;/a&gt;
  Resolution
&lt;/h1&gt;

&lt;p&gt;To see if this truly could be causing our issues we updated the telemetry stanza on the Consul servers one at at time to include just statsd output.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previous telemetry configuration:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"telemetry"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"disable_hostname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dogstatsd_addr"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"localhost:8125"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dogstatsd_tags"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"env_name:production"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Updated telemetry configuration change:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"telemetry"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"disable_hostname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"statsd_address"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"localhost:8125"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Consul leader was restarted last and once completed, &lt;strong&gt;we had near instant recovery!&lt;/strong&gt; Thank goodness!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;consul.raft.commitTime&lt;/code&gt; mean 120-200ms down to 7-9ms&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hAnB5FmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phkhbqtms23q6i3lsuiu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hAnB5FmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phkhbqtms23q6i3lsuiu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking through Consul code, &lt;code&gt;github.com/armon/go-metrics/datadog&lt;/code&gt; imports the official &lt;code&gt;github.com/DataDog/datadog-go&lt;/code&gt;. I found a PR created back in October 2019(!) that &lt;strong&gt;fixed a blocking issue in instrumented applications (like Consul)&lt;/strong&gt;. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rNZYrQMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0lpyxbavllmjhv70csk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rNZYrQMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0lpyxbavllmjhv70csk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This fix ultimately ended up in Consul 1.6.7 released in July 2020.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#lessons-learned"&gt;
  &lt;/a&gt;
  Lessons Learned
&lt;/h1&gt;

&lt;p&gt;I wanted to include a few lessons learned on various topics that hopefully can save you some time and frustrations in the future.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#important-metrics"&gt;
  &lt;/a&gt;
  Important Metrics
&lt;/h4&gt;

&lt;p&gt;Here's a couple interesting metrics to keep an eye on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;consul.raft.fsm.apply&lt;/code&gt; - This metric tipped HashiCorp off that there was something backing up or bottlenecking when writing raft logs. Before the fix, we were in the 20-40 range across all servers, but it fell down to 1-2 after the fix. This is how many logs were committed since last interval. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;consul.raft.commitTime&lt;/code&gt;- HashiCorp says this shouldn't be more than a few milliseconds. In our environments and storage solution, I think 10-25ms is more realistic. Consider throwing alerts because something is wrong above say 30 or 50ms. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;consul.catalog.register&lt;/code&gt; - This tells you how long it takes to register a service into the catalog and should be very similar to Consul commit time. A goal for mean time could be 10-20ms.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;vault.core.handle_request&lt;/code&gt; - Mean time to handle requests in a health cluster look to be .5-10ms. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;vault.runtime.num_goroutines&lt;/code&gt; - When Consul was slow/blocking, the vault go routines continued climbing. It looks like on a healthy these should be under 2000 generally.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CjMTmbva--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vgrq434nonlf5xfj745r.png" alt="image"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#quick-response"&gt;
  &lt;/a&gt;
  Quick Response
&lt;/h4&gt;

&lt;p&gt;When troubleshooting issues like this, centralized metrics and logs are invaluable. It's often necessary to bundle up debug archives or logs to get in Support's hands. Here's a quick ansible playbook to gather consul logs from one or multiple servers at once. Logs end up in a single archive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;get consul logs&lt;/span&gt;
  &lt;span class="na"&gt;hosts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;all&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_date_time.date&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;

  &lt;span class="na"&gt;tasks&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;remote - grep consul logs on hosts&lt;/span&gt;
    &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;egrep&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'consul:'&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/var/log/messages&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/var/tmp/consul.log.{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_hostname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;remote - change log file permissions&lt;/span&gt;
    &lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/var/tmp/consul.log.{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_hostname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
      &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0775&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;remote - pull consul logs locally&lt;/span&gt;
    &lt;span class="na"&gt;fetch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/var/tmp/consul.log.{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_hostname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
        &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/var/tmp/consul.log.{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_hostname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
        &lt;span class="na"&gt;flat&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
    &lt;span class="na"&gt;become&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;   &lt;span class="c1"&gt;# fetch needs become=no if pulling large files, otherwise MemoryError&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local - create tarball&lt;/span&gt;
    &lt;span class="na"&gt;archive&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/var/tmp/consul.log.*&lt;/span&gt;
      &lt;span class="na"&gt;dest&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/var/tmp/consul_logs-{{ date }}.tgz&lt;/span&gt;
    &lt;span class="na"&gt;delegate_to&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;127.0.0.1&lt;/span&gt;
    &lt;span class="na"&gt;run_once&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;become&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;local - remove leftover local files&lt;/span&gt;
    &lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/var/tmp/consul.log.{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_hostname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
      &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;absent&lt;/span&gt;
    &lt;span class="na"&gt;delegate_to&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;127.0.0.1&lt;/span&gt;
    &lt;span class="na"&gt;become&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;no&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;remote - remove leftover remote files&lt;/span&gt;
    &lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;/var/tmp/consul.log.{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_hostname&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;
      &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;absent&lt;/span&gt;

  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;debug&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;msg&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Logs&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;are&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ready&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;at&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/var/tmp/consul_logs-{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;date&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}.tgz"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#improve-your-profiling-skillset"&gt;
  &lt;/a&gt;
  Improve Your Profiling Skillset
&lt;/h4&gt;

&lt;p&gt;If hardware has been ruled out, it may be time to transition to profiling and look at the application internals. It's important to be able to answer "What is my application spending time doing?" In GO based apps, &lt;code&gt;pprof&lt;/code&gt; is the tool of choice, but it can be confusing if you don't use it often. I'm sure HashiCorp Development was using pprof along with metrics to understand where the slowness was coming from and I wish that's something we had done ourselves sooner. &lt;/p&gt;

&lt;p&gt;Here's the Consul flame graph before the change. The purple is the regex for &lt;code&gt;metrics|datadog|statsd&lt;/code&gt;. Note how wide (how much time is spent) the lines for go-metrics and datadog stacks are!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VFJsuvmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2hg0aurvbyh3lz1rwa6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VFJsuvmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i2hg0aurvbyh3lz1rwa6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the Consul profile after the remediation. Note how much less purple there is!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VZ6QOEwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qenl66cnk6rn4lf88tzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VZ6QOEwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qenl66cnk6rn4lf88tzo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The above pprof profiles were viewed by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go tool pprof &lt;span class="nt"&gt;-http&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;":8000"&lt;/span&gt; consul profile.prof
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above command, &lt;code&gt;consul&lt;/code&gt; is the exact same version binary for Consul in my current directory. &lt;code&gt;profile.prof&lt;/code&gt; came from the &lt;code&gt;consul debug&lt;/code&gt; output. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#unsolved-issues"&gt;
  &lt;/a&gt;
  Unsolved Issues
&lt;/h4&gt;

&lt;p&gt;The last bit of advice is to not live with unsolved issues. Looking back, we should have better understood those Consul commit times and really learned what was considered high and what normal should really look like. &lt;em&gt;Phantom Latency&lt;/em&gt; can often come back to haunt you, like we experienced! Always try to understand metrics and logs better, clean up reoccurring errors, mock up tests if needed and prove out theories. You and your team will be much better off in the long run. &lt;/p&gt;






&lt;center&gt;Views and opinions are my own.&lt;/center&gt;

</description>
      <category>consul</category>
      <category>vault</category>
      <category>hashicorp</category>
      <category>metrics</category>
    </item>
    <item>
      <title>Hello Dev</title>
      <author>Kartik Unni</author>
      <pubDate>Tue, 04 May 2021 17:02:01 +0000</pubDate>
      <link>https://dev.to/duskylantern/hello-dev-2114</link>
      <guid>https://dev.to/duskylantern/hello-dev-2114</guid>
      <description>&lt;p&gt;Just Setting Up My Devv!!!!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How I used Google Apps Script and Sheets to build a matching service for Papapal</title>
      <author>fredrikalindh</author>
      <pubDate>Tue, 04 May 2021 16:54:31 +0000</pubDate>
      <link>https://dev.to/fredrikalindh/how-i-used-google-apps-script-and-sheets-to-build-a-matching-service-for-papapal-4fi9</link>
      <guid>https://dev.to/fredrikalindh/how-i-used-google-apps-script-and-sheets-to-build-a-matching-service-for-papapal-4fi9</guid>
      <description>&lt;p&gt;Have you heard about Google Apps Script? I hadn't, until my co-maker Mathis and I launched &lt;a href="https://www.papapal.me/"&gt;Papapal&lt;/a&gt;, learning languages with a pen pal. It wasn't much more than an idea and we didn't expect so much interest, but then we had 200+ people responding on our Google Form in just 72 hours. We realised that manual matching would be difficult and that's where Google Apps Script come in to the picture. With it you can write javascript code to automate tasks for most of the Google apps such as Drive, Sheets and Gmail.&lt;/p&gt;

&lt;p&gt;That meant that on my form responses sheet I only need to navigate to Tools → Script Editor which opens a script editor connected to the sheet. Then you can access the sheet with &lt;code&gt;SpreadsheetApp.getActiveSheet();&lt;/code&gt; and the data with &lt;code&gt;sheet.getDataRange().getValues();&lt;/code&gt;&lt;br&gt;
I did a simple sorting function that groups by chosen language and level and then just matched adjacent users. Stored the information in a new sheet and that's it. All I need to do to create the matches is to click &lt;code&gt;Run&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Comparing two users by: &lt;/span&gt;
&lt;span class="c1"&gt;// 1. language (lexicographical) &lt;/span&gt;
&lt;span class="c1"&gt;// 2. Level (Beginner, Intermediate, Advanced)&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// if different we sort by language &lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// if language was the same we sort by level&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// same level&lt;/span&gt;
    &lt;span class="c1"&gt;// 1: I + B &amp;amp; A + B &amp;amp; A + I&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Advanced&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Intermediate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Beginner&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// -1: B + I &amp;amp; B + A &amp;amp; I + A &lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// a is beginner OR a is intermediate and b 'advanced' &lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;matchPals&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;SpreadsheetApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getActiveSheet&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveSheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;SpreadsheetApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;matchedPals&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;saveSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendRow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;round&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name_1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email_1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name_2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email_2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;language&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;level&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDataRange&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getValues&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// looping through all rows&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// if not same language or level as prev&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;saveSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendRow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]]);&lt;/span&gt;
      &lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// save them as matched&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;saveSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendRow&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
      &lt;span class="c1"&gt;// data[i].app&lt;/span&gt;
      &lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can even automate the mailing:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;MailApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendEmail&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pal1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;pal2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Meet your Papapal 📩&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;htmlBody&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;h2&amp;gt;Hello there &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pal1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;pal2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;lt;/h2&amp;gt;`&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Last amazing feature is that you can create triggers. In our case when new users sign up, we can automatically check if there is someone on their Language+Level who doesn't have a pal yet and if so match them straight away.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.google.com/codelabs/apps-script-fundamentals-1#0"&gt;Here&lt;/a&gt; is a guide Google created for getting started with Apps Script. Let me know what you think! &lt;/p&gt;

&lt;p&gt;Also, if you think it sounds like a great idea to learn a language while getting to know a new person: Sign up &lt;a href="https://forms.gle/TMdgo7njLTzNVAuEA"&gt;here&lt;/a&gt; for Papapal, first round is about to start with people from 54 different countries, learning 18 different languages!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwml-lpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ayp47ncyhwdfca58794.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwml-lpw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ayp47ncyhwdfca58794.png" alt="Papapal got users from all over the world 🤯"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>googlecloud</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Lists and Grids in Jetpack Compose</title>
      <author>agarasul</author>
      <pubDate>Tue, 04 May 2021 16:49:00 +0000</pubDate>
      <link>https://dev.to/agarasul/complex-ui-in-jetpack-compose-o41</link>
      <guid>https://dev.to/agarasul/complex-ui-in-jetpack-compose-o41</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hNoo3C9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcijgcv09ji9vbq8vvjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNoo3C9e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pcijgcv09ji9vbq8vvjf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jetpack Compose provides many tools for creating UI. With Jetpack Compose you can easily create an MVP of your project, and see how it looks. For example, to create a list in Android in the usual way, we should use RecyclerView. And of course, we need to create an adapter and view holder to manage items in RecyclerView. In Jetpack Compose we can do it easily.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@Composable
fun NewsList() {
    LazyColumn {
        items(rows) { item -&amp;gt;
            Text(
                modifier = Modifier
                    .height(80.dp),
                text = item
            )
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s all. No need for an adapter, view holder, etc.&lt;br&gt;
LazyColumn is used when you want to create a vertical list. To create horizontal we just replace our LazyColumn with LazyRow and our list become horizontal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@Composable
fun NewsList() {
    LazyRow {
        items(rows) { item -&amp;gt;
            Text(
                modifier = Modifier
                    .height(80.dp),
                text = item
            )
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to get an index of the item, replace items to itemsIndexed and you will access to index of the current item&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;itemsIndexed(rows) { index, item -&amp;gt;
    Text(
        modifier = Modifier
            .height(80.dp),
        text = item
    )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What if we want to create a nested list. That contains both vertical and horizontal items. Of course, for this purpose, we can use LazyVerticalGrid.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;LazyVerticalGrid(cells = GridCells.Fixed(10)) {
    itemsIndexed(rows) { row, item-&amp;gt;
        Text(
            modifier = Modifier
                .height(80.dp),
            text = item
        )
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But there are a couple of problems with the solution. First, is LazyVerticalGrid still annotated as ExperimentalFoundationApi . The second one is it allows your grid to scroll only vertically. And the third one is it always fits the screen width. So for example, if you want to have 8 columns, LazyVerticalGrid tries to fit all of them into the screen. Here is an example of its work.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---dNd0o5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sk7yafarmkrk1j3rkvqc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---dNd0o5Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sk7yafarmkrk1j3rkvqc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think you will agree with me, that it looks a little bit weird, instead of fitting all items into the screen, I want to be able to scroll my grid horizontally to see all items. To make this will use components that we used before LazyRow and LazyColumn. The mix of these two components allows us to create a complex scrollable grid with minimal effort. Let’s start!&lt;/p&gt;

&lt;p&gt;First, we need to create LazyColumn to make our items scrollable vertically. But at this time our item of LazyColumn will be LazyRow. I added some modifiers to the Text component to make the grid a little bit beautiful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;LazyColumn {
    itemsIndexed(rows) { index, row -&amp;gt;
        LazyRow {
            itemsIndexed(columns) { index, column -&amp;gt;
                Text(
                    modifier = Modifier
                        .padding(8.dp)
                        .background(Color.Red)
                        .width(100.dp)
                        .height(100.dp),
                    textAlign = TextAlign.Center,
                    color = Color.White,
                    text = "Row $row Column = $column"
                )
            }
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;rows — in an array of strings with size of 10&lt;/li&gt;
&lt;li&gt;column — in an array of strings with size of 10&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we will have a grid with 10 rows and with the same size &lt;br&gt;
columns&lt;br&gt;
And we run our code we will see something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qOxiL2iL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4nmzckoeo6mgsdnhwbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qOxiL2iL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4nmzckoeo6mgsdnhwbv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using this solution we achieve some benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;More customization opportunities. Ability to change every item in grid or change items only on specific column or row&lt;/li&gt;
&lt;li&gt;Full control of our grid.&lt;/li&gt;
&lt;li&gt;Infinite scroll in both directions&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Jetpack Compose provides many tools for creating complex UI. Today we learned the ways to create a grid in Jetpack Compose. If you want to create a simple grid without features such as a horizontal scroll or an infinitive scroll you should use &lt;code&gt;LazyVerticalGrid&lt;/code&gt;. Otherwise, I recommend you to use a mix of &lt;code&gt;LazyRow&lt;/code&gt; and &lt;code&gt;LazyColumn&lt;/code&gt; for these purposes.&lt;br&gt;
Feel free to follow me on Twitter and don’t hesitate to ask questions related to Jetpack Compose.&lt;/p&gt;

&lt;p&gt;Twitter : &lt;a href="https://twitter.com/a_rasul98"&gt;https://twitter.com/a_rasul98&lt;/a&gt;&lt;br&gt;
Thanks for reading, and see you later!&lt;/p&gt;

</description>
      <category>android</category>
      <category>jetpackcompose</category>
      <category>jetpack</category>
    </item>
    <item>
      <title>Auto-populate your Github readme with data fetched from a remote notion database.</title>
      <author>Safwan Shaheer</author>
      <pubDate>Tue, 04 May 2021 16:44:16 +0000</pubDate>
      <link>https://dev.to/devorein/auto-populate-your-github-readme-with-data-fetched-from-a-remote-notion-database-2ca9</link>
      <guid>https://dev.to/devorein/auto-populate-your-github-readme-with-data-fetched-from-a-remote-notion-database-2ca9</guid>
      <description>&lt;p&gt;Hello everyone. This article will share how I managed to auto-populate a Github readme learned section using data fetched from a remote notion database using a GitHub action that I created using Typescript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Devorein/github-readme-learn-section-notion"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#in-repository-file"&gt;
  &lt;/a&gt;
  In Repository File
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-add-the-following-content-to-your-raw-readmemd-endraw-"&gt;
  &lt;/a&gt;
  1. Add the following content to your &lt;code&gt;README.md&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gu"&gt;## What I have learned so far&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--START_SECTION:learn--&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--END_SECTION:learn--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-configure-the-workflow"&gt;
  &lt;/a&gt;
  2. Configure the workflow
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Github&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Readme&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Updater'&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt; &lt;span class="c1"&gt;# Runs Every Day&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;update_learn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Update&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;learn&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;section'&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Fetching&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Repository&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Contents'&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@main&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Learn&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Section&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Updater'&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;devorein/github-readme-learn-section-notion@master'&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;database_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;6626c1ebc5a44db78e3f2fe285171ab7'&lt;/span&gt;
          &lt;span class="na"&gt;token_v2&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.NOTION_TOKEN_V2 }}&lt;/span&gt; &lt;span class="c1"&gt;# Required only if your database is private&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;: You can test out using &lt;a href="https://www.notion.so/devorein/6c46c1ebc5a44db78e3f5fe285071ab6?v=0bc36e7c59e54f34b0838956e35b4490"&gt;this template&lt;/a&gt; that I've created just for this purpose.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-your-notion-account"&gt;
  &lt;/a&gt;
  In your notion account
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-create-a-fullpage-database"&gt;
  &lt;/a&gt;
  1. Create a full-page database
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNLDRajp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620140790011/ZSlkgNHas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNLDRajp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620140790011/ZSlkgNHas.png" alt="Notion Full Page Database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Your database must maintain the following structure/schema&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u9N9Y5cT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620141419086/HQVjtExaB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u9N9Y5cT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620141419086/HQVjtExaB.png" alt="Notion Table Schema Options"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-get-the-id-of-the-database"&gt;
  &lt;/a&gt;
  2. Get the id of the database
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d0F-RR3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620140795651/PhdNBZEQH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d0F-RR3_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620140795651/PhdNBZEQH.png" alt="Notion Full Page Database Id"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-add-it-in-the-workflow-file"&gt;
  &lt;/a&gt;
  3. Add it in the workflow file
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;database_id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;6626c1ebc5a44db78e3f2fe285171ab7'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Follow the rest of the steps only if your database is not public, if its public you don't need to set the token_v2&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#to-make-your-database-public"&gt;
  &lt;/a&gt;
  To make your database public
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Navigate to the database in your notion account&lt;/li&gt;
&lt;li&gt;Click on Share at the top right corner&lt;/li&gt;
&lt;li&gt;Click on the Share to Web button.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#1-get-your-notion-raw-tokenv2-endraw-"&gt;
  &lt;/a&gt;
  1. Get your notion &lt;code&gt;token_v2&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: By no means should you share or expose your notion &lt;code&gt;token_v2&lt;/code&gt;. If you feel like you've done so accidentally, immediately log out from that account in all of your devices.&lt;/p&gt;

&lt;p&gt;Follow the steps below to obtain your &lt;code&gt;token_v2&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open up the dev tools of your preferred browser.&lt;/li&gt;
&lt;li&gt;Go to the Application &amp;gt; Cookies section.&lt;/li&gt;
&lt;li&gt;There you'll find a &lt;code&gt;token_v2&lt;/code&gt; cookie.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Its highly recommended to store your &lt;code&gt;token_v2&lt;/code&gt; as a github secret rather than pasting it in your workflow file.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-create-a-github-secret-to-store-raw-tokenv2-endraw-"&gt;
  &lt;/a&gt;
  2. Create a github secret to store &lt;code&gt;token_v2&lt;/code&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;navigate to the url &lt;code&gt;https://github.com/&amp;lt;USERNAME&amp;gt;/&amp;lt;REPO-NAME&amp;gt;/settings/secrets/actions&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;New repository secret&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You can name your secret as anything you want&lt;/li&gt;
&lt;li&gt;Paste the &lt;code&gt;token_v2&lt;/code&gt; value in the &lt;code&gt;Value&lt;/code&gt; textarea&lt;/li&gt;
&lt;li&gt;Use the secret in your workflow file
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;token_v2&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.NOTION_TOKEN_V2 }}&lt;/span&gt; &lt;span class="c1"&gt;# The secret was named NOTION_TOKEN_V2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#outcome"&gt;
  &lt;/a&gt;
  Outcome
&lt;/h3&gt;

&lt;p&gt;If you follow all the steps properly your readme should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b1MbTebp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620140780727/qz4TAzMgV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b1MbTebp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620140780727/qz4TAzMgV.png" alt="Github Readme Learn Section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this was helpful to you. That's all from me for now.&lt;/p&gt;

&lt;p&gt;The code for the Github action is &lt;a href="https://github.com/Devorein/github-readme-learn-section-notion"&gt;here&lt;/a&gt;. Feel free to submit a pull request or open a new issue, contributions are highly appreciated and more than welcome. Thank you for reading.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>notion</category>
      <category>actions</category>
      <category>automation</category>
    </item>
    <item>
      <title>Deploy a Cloud Native Application to Code Engine in 5 Easy Steps!</title>
      <author>Jenna Ritten</author>
      <pubDate>Tue, 04 May 2021 16:39:31 +0000</pubDate>
      <link>https://dev.to/ibmdeveloper/deploy-a-cloud-native-application-to-code-engine-in-5-easy-steps-4bcg</link>
      <guid>https://dev.to/ibmdeveloper/deploy-a-cloud-native-application-to-code-engine-in-5-easy-steps-4bcg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hello-ibm-developers-welcome-to-tutorial-tuesdays"&gt;
  &lt;/a&gt;
  Hello, IBM Developers! Welcome to Tutorial Tuesdays!
&lt;/h3&gt;

&lt;p&gt;When I was first learning how to code, Tuesdays became my favorite day for blocking out time to work through a new tutorial. I will be posting quick and easy tutorials occasionally on Tuesdays to help all of you level up your Dev skills! &lt;/p&gt;

&lt;p&gt;For purposes of this Tutorial Tuesday, I'm going to show you how to deploy a Cloud native application to &lt;a href="https://www.ibm.com/cloud/code-engine"&gt;IBM Cloud Code Engine&lt;/a&gt; from both a container image and using Code Engine's source-to-image, with the IBM CODAIT team's &lt;a href="https://github.com/IBM/MAX-Object-Detector"&gt;Max Object Detector&lt;/a&gt; in 5 easy steps! &lt;/p&gt;

&lt;p&gt;Once you get your application deployed successfully, you'll be able to start using the object detection model to detect object from the images you upload or from your web cam! &lt;/p&gt;

&lt;p&gt;First, a little about &lt;a href="https://github.com/IBM/CodeEngine"&gt;IBM Cloud Code Engine&lt;/a&gt;. Code Engine let's you focus on writing code instead of worrying about managing infrastructure. Code Engine is a fully managed, serverless platform that allows you to bring your container images, batch jobs, or source code, and let Code Engine manage and secure the underlying infrastructure for you. No need to size, deploy, or scale container clusters yourself! No networking skills required, either.&lt;/p&gt;

&lt;p&gt;With &lt;a href="https://www.ibm.com/cloud/code-engine"&gt;IBM Cloud Code Engine&lt;/a&gt; You Can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create container images from source code using Code Engine's source-to-image&lt;/li&gt;
&lt;li&gt;Store source code in repositories&lt;/li&gt;
&lt;li&gt;Push images to registries &lt;/li&gt;
&lt;li&gt;Integrate into IBM Cloud and all IBM Cloud services&lt;/li&gt;
&lt;li&gt;Handle all cluster provisioning, configuring, scaling, and managing servers &lt;/li&gt;
&lt;li&gt;Auto scale workloads up/down or to zero when no requests are active&lt;/li&gt;
&lt;li&gt;Built on OS Kubernetes, Knative, Istio, and Tekton, keeping apps and jobs portable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm going to walk you through how to deploy an application, any application, with &lt;a href="https://github.com/IBM/CodeEngine"&gt;IBM Cloud Code Engine&lt;/a&gt;. Do you already have your container images? Great! Don't know what a container  image is? No worries! I'll show you how to deploy your application using both an existing container image AND directly from your source code in your project repo!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-build-something"&gt;
  &lt;/a&gt;
  Let's Build Something!
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Sign Up for a Free &lt;a href="https://ibm.biz/cloud-sign-up"&gt;IBM Cloud Account&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install the &lt;a href="https://cloud.ibm.com/docs/cli?topic=cli-getting-started"&gt;IBM Cloud Developer Tools CLI&lt;/a&gt; (command line interface, the commands you type into your Terminal) &lt;/li&gt;
&lt;li&gt;Install the &lt;a href="https://cloud.ibm.com/docs/codeengine?topic=codeengine-install-cli"&gt;IBM Cloud Code Engine Plugin&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Login to Your IBM Cloud Account via the CLI&lt;/li&gt;
&lt;li&gt;Deploy to Code Engine 2 Ways (with a Container Image OR with Source Code)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#setup-amp-installation"&gt;
  &lt;/a&gt;
  Setup &amp;amp; Installation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#2-install-the-ibm-cloud-developer-tools-cli"&gt;
  &lt;/a&gt;
  2. Install the IBM Cloud Developer Tools CLI
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Mac and Linux, run the following command in Terminal:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -sL https://raw.githubusercontent.com/IBM-Cloud/ibm-cloud-developer-tools/master/linux-installer/idt-installer | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify the IBM Cloud Developer Tools CLI is installed
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud dev help
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;For Windows 10 Pro, run the following command as an administrator in Powershell:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Net.ServicePointManager]::SecurityProtocol = "Tls12, Tls11, Tls, Ssl3"; iex(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/IBM-Cloud/ibm-cloud-developer-tools/master/windows-installer/idt-win-installer.ps1')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note For Windows Users: If you encounter a Git error similar to the one below, you will need to install Git in the correct path.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash: git: command not found
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Follow the Windows Guide &lt;a href="https://www.jcchouinard.com/install-git"&gt;HERE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-install-the-ibm-cloud-code-engine-plugin"&gt;
  &lt;/a&gt;
  3. Install the IBM Cloud Code Engine Plugin
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Mac, Linux, and Windows 10 Pro, run the following command:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud plugin install code-engine
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify the IBM Cloud Code Engine Plugin is installed
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce help
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-login-to-your-ibm-cloud-account-via-the-cli"&gt;
  &lt;/a&gt;
  4. Login to Your IBM Cloud Account via the CLI
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Mac, Linux, and Windows 10 Pro, run the following command:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Enter email and password&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;View available resource groups&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud resource groups
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Assign a target resource group (default to your "Default")
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud target -g Default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-deploy-to-code-engine-2-ways"&gt;
  &lt;/a&gt;
  5. Deploy to Code Engine 2 Ways
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#deploy-to-code-engine-with-a-container-image"&gt;
  &lt;/a&gt;
  Deploy to Code Engine with a Container Image
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a new Code Engine project and give it a name
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce project create --name PROJECT_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce project create --name max-object-detector
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a new app from a Container Image
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name APP_NAME --image 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;(Optional)&lt;/strong&gt; If you need to change the default port, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name APP_NAME --image IMAGE_LOCATION --port PORT_NUM
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: IMAGE_LOCATION is not the URL where the app is deployed. The port defaults to ‘8080’ unless specified.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name max-object-detector --image quay.io/codait/max-object-detector --port 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check the application status
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n APP_NAME 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n max-object-detector
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get the app URL
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n APP_NAME -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n max-object-detector -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;View the live application at the URL in your browser
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;URL + /index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://ibm.biz/max-obj-det
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deploy-to-code-engine-with-source-code"&gt;
  &lt;/a&gt;
  Deploy to Code Engine with Source Code
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install the IBM Cloud Container Registry Plugin
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud plugin install container-registry -r 'IBM Cloud'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create an IBM Cloud API Key
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud iam api-key-create cliapikey -d "My CLI APIkey" --file key_file
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add IBM Cloud Container Registry access to Code Engine
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce registry create --name myregistry --server us.icr.io --username iamapikey --password API_KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a new Container Regisry namespace
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr namespace-add MY_NAMESPACE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify your namespace has been created
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr namespace-list -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a new app from Source Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; ibmcloud ce build create --name BUILD_NAME --image IMAGE_REF --source SOURCE --registry-secret REGISTRY_REF [--commit COMMIT] [--context-dir CONTEXT_DIR] [--dockerfile DOCKERFILE] [--git-repo-secret GIT_REPO_SECRET] [--size SIZE] [--strategy STRATEGY] [--timeout TIMEOUT]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce build create --name max-object-detector-build --image us.icr.io/MY_NAMESPACE/max-obj-det --registry-secret myregistry --source https://github.com/IBM/MAX-Object-Detector --commit main --context-dir /max --strategy kaniko --size medium
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check the status of your build
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce build get --name BUILD_NAME-build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce build get --name max-object-detector-build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run the image build
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun submit --build BUILD_NAME-build --name BUILD_NAME-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun submit --build max-object-detector-build --name max-object-detector-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check the status of the build
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun get --name BUILD_NAME-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun get --name max-object-detector-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Push the image to your Container Registry
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr image-tag [SOURCE_IMAGE] [TARGET_IMAGE]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: the format for Source and Target Image&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;us.icr.io/namespace/image:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr image-tag us.icr.io/MY_NAMESPACE/max-obj-det:latest us.icr.io/MY_NAMESPACE/max-obj-det:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify that your image is in your Container Registry
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr image-list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Deploy the app with the Code Engine CLI
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name APP_NAME --image IMAGE_REF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name max-obj-det --image us.icr.io/MY_NAMESPACE/max-obj-det
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get the app URL
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n APP_NAME -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n max-object-detector -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;View the live application at the URL in your browser
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;URL + /index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#play-with-the-max-object-detector"&gt;
  &lt;/a&gt;
  Play with the &lt;a href="https://ibm.biz/max-obj-det"&gt;Max Object Detector&lt;/a&gt;!
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Upload an Image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AhsVD6yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76ull2hp6txyb5x1t2up.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AhsVD6yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/76ull2hp6txyb5x1t2up.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OR&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use Your Web Cam&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wVNecv1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eb08zeiw7iuvbcvit3h4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVNecv1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eb08zeiw7iuvbcvit3h4.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Join Us For the First DEV Community Bug Smash!</title>
      <author>Christina Gorton</author>
      <pubDate>Tue, 04 May 2021 16:38:56 +0000</pubDate>
      <link>https://dev.to/devteam/join-us-for-the-first-dev-community-bug-smash-3plm</link>
      <guid>https://dev.to/devteam/join-us-for-the-first-dev-community-bug-smash-3plm</guid>
      <description>&lt;h3&gt;
  &lt;a href="#team-forem-is-excited-to-share-the-news-of-our-first-community-bug-smash"&gt;
  &lt;/a&gt;
  Team Forem is excited to share the news of our first community Bug Smash!
&lt;/h3&gt;

&lt;p&gt;Join us for this DEV-wide collaboration that’s all about improving the Forem repository, encouraging more contributions from the community, and having fun in the process. 🐛&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#details"&gt;
  &lt;/a&gt;
  Details
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h4&gt;

&lt;p&gt;The DEV Community Bug Smash challenges members of our community to resolve one (or several!) of our predetermined bugs in the Forem codebase &lt;a href="https://github.com/forem/forem/labels/Bug%20Smash"&gt;here&lt;/a&gt; in exchange for open source community involvement, a limited-edition profile badge for eligible contributions, and a sticker pack!&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#when-is-bug-smash"&gt;
  &lt;/a&gt;
  When is Bug Smash?
&lt;/h4&gt;

&lt;p&gt;Our first Bug Smash will be running today, May 4 through May 28, 2021. We plan to assess the overall experience at the end of the month with the intention of doing this again in the future or possibly extending the event immediately.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#who-can-participate"&gt;
  &lt;/a&gt;
  Who can participate?
&lt;/h4&gt;

&lt;p&gt;Bug Smash is open to anyone in our community who would like to participate. We added the general &lt;code&gt;bug smash&lt;/code&gt; label to all eligible issues, however, &lt;strong&gt;we’ve broken a handful of them into two different categories below to help you select the bug that makes the most sense for your experience level.&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#where-will-i-be-smashing-bugs"&gt;
  &lt;/a&gt;
  Where will I be smashing bugs?
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;In the Forem repository!&lt;/strong&gt; &lt;br&gt;
For Bug Smash, you’ll be tackling issues labeled with (you guessed it,) &lt;code&gt;bug smash&lt;/code&gt; in our repo (click &lt;a href="https://github.com/forem/forem/labels/Bug%20Smash"&gt;here&lt;/a&gt; to see the full list). We’ve captured a handful of these issues below under “Examples of Eligible Bugs”. Any issue not labeled with &lt;code&gt;bug smash&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; part of the DEV Community Bug Smash. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#why-should-i-participate"&gt;
  &lt;/a&gt;
  Why should I participate?
&lt;/h4&gt;

&lt;p&gt;So many reasons! The DEV Community Bug Smash is a great way for you to get more practice with tackling issues in GitHub if you’re a newer developer. If you have more experience, this initiative is a fantastic opportunity to help a community you know and love (DEV!) while lending a hand to the Forem engineering team on issues that they might not have the capacity to work on at the moment. &lt;/p&gt;

&lt;p&gt;The best part? We’ll be awarding limited-edition DEV profile badges and a sticker pack to anyone who submits a &lt;code&gt;bug smash&lt;/code&gt; PR that gets approved. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR: Greener GitHub contribution history, community camaraderie, and cool rewards&lt;/strong&gt; 😎&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#how-to-participate-stepbystep"&gt;
  &lt;/a&gt;
  How to Participate, Step-by-Step
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Please read our &lt;a href="https://docs.forem.com/contributing/forem/"&gt;Contributing to Forem&lt;/a&gt; guide for contribution guidelines, rules, and etiquette related to working in our codebase. Also, please revisit our &lt;a href="https://dev.to/code-of-conduct"&gt;code of conduct&lt;/a&gt; for overall expectations on how to treat one another.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Claim an &lt;a href="https://github.com/forem/forem/labels/Bug%20Smash"&gt;issue labeled &lt;code&gt;bug smash&lt;/code&gt;&lt;/a&gt;, based on your experience level by commenting on it.&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;You will be notified by our team with a confirmation if you’ve been assigned to that issue. If the issue is already taken, we reply with a suggestion of a different one for you to tackle&lt;/li&gt;
&lt;li&gt;Once you are assigned a bug, create a pull request (PR) (don’t forget to link to the original issue!)&lt;/li&gt;
&lt;li&gt;After you’ve submitted a pull request (PR) for your assigned bug, you’ll be notified by our team if it was approved. Once it’s approved (🎉) please use &lt;a href="//dev.to/new/devbugsmash"&gt;this template&lt;/a&gt; to write a reflection post about the bug you smashed, right here on DEV! &lt;/li&gt;
&lt;li&gt;Find another post on DEV labeled &lt;a href="//dev.to/t/devbugsmash"&gt;devbugsmash&lt;/a&gt; and leave a comment or a question! Keep it encouraging, kind, and collaborative.&lt;/li&gt;
&lt;li&gt;After you’ve completed steps 1-6, we’ll reach out with details on getting your sticker pack. We will also award badges at this time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note: We will only be awarding one badge and one sticker pack per participant, regardless of how many bugs you smash.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thanks in advance for your patience following the publication of your Bug Smash post on DEV. The Forem engineering team is small but mighty and it will take focused time on their behalf to review Bug Smash PRs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#examples-of-eligible-bugs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples of Eligible Bugs&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Here is an incomplete preview of the bugs you can smash! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#good-first-issue-bugs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Good first issue bugs&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Here are a few issues that are perfect for early-career developers and people learning to code.&lt;/em&gt; &lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/1228"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        HTML is stripped from runkit source
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#1228&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/joelnet"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rRhcm5v0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/742630%3Fv%3D4" alt="joelnet avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/joelnet"&gt;joelnet&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/1228"&gt;&lt;time&gt;Nov 30, 2018&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
HTML is incorrectly stripped from runkit code blocks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click &lt;code&gt;WRITE A POST&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Paste into body:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;{% runkit %}
const { ValueViewerSymbol } = require("@runkit/value-viewer");

const myCustomObject = {
    [ValueViewerSymbol]: {
        title: "My First Viewer",
        HTML: "&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;marquee&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;🍔Hello, World!🍔&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;marquee&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;"
    }
};
{% endrunkit %} &lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Click &lt;code&gt;SAVE POST&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;See code in runkit (incorrectly) translated into:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;const { ValueViewerSymbol } = require("@runkit/value-viewer");

const myCustomObject = {
    [ValueViewerSymbol]: {
        title: "My First Viewer",
        HTML: "🍔Hello, World!🍔"
    }
};&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;
Code was expected to keep &lt;code&gt;&amp;lt;marquee&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Additional Info&lt;/strong&gt;
I can trick the parser by encoding my HTML.&lt;/p&gt;
&lt;p&gt;This works:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;{% runkit %}
const { ValueViewerSymbol } = require("@runkit/value-viewer");
const atob = require('atob-lite')

const myCustomObject = {
    [ValueViewerSymbol]: {
        title: "My First Viewer",
        HTML: atob('PG1hcnF1ZWU+SGVsbG8sIFdvcmxkITwvbWFycXVlZT4=')
    }
};
{% endrunkit %}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Strangely enough, this does not work:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;{% runkit %}
const { ValueViewerSymbol } = require("@runkit/value-viewer");

const myCustomObject = {
    [ValueViewerSymbol]: {
        title: "My First Viewer",
        HTML: ["&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;", "m", "a", "r", "q", "u", "e", "e", "&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;", "🍔", "H", "e", "l", "l", "o", ",", " ", "W", "o", "r", "l", "d", "!", "🍔", "&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;", "/", "m", "a", "r", "q", "u", "e", "e", "&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;"].join('')
    }
};
{% endrunkit %}&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;as it (incorrectly) results in this:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic js-code-highlight"&gt;
&lt;pre&gt;const { ValueViewerSymbol } = require("@runkit/value-viewer");

const myCustomObject = {
    [ValueViewerSymbol]: {
        title: "My First Viewer",
        HTML: ["", "🍔", "H", "e", "l", "l", "o", ",", " ", "W", "o", "r", "l", "d", "!", "🍔", ""].join('')
    }
};&lt;/pre&gt;

&lt;/div&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/1228"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/1446"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Code blocks get breaks added between each line
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#1446&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/abraham"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4jnw-Jr6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/3341%3Fv%3D4" alt="abraham avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/abraham"&gt;abraham&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/1446"&gt;&lt;time&gt;Jan 02, 2019&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
Code blocks sometimes get breaks &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; added between each line. You can see it in the one codeblock on &lt;a href="https://dev.to/abraham/a-month-of-flutter-a-look-back-1j1a#annotatedregion" rel="nofollow"&gt;A month of Flutter: a look back&lt;/a&gt;. It appears to be related to having headers following the code blocks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go to &lt;a href="https://dev.to/new" rel="nofollow"&gt;create a new post&lt;/a&gt; enter the following markdown and hit "preview".&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~~~
function hello() {
  console.log('hello');
}
~~~

~~~
function goodbye() {
  console.log('goodbye');
}
~~~

# header
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The code blocks should not have any blank lines between each line of code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Correct display when &lt;code&gt;# header&lt;/code&gt; is not included:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/3341/50610638-50ce6700-0e99-11e9-9fc1-6fe4c6d80770.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iApRP2ri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/3341/50610638-50ce6700-0e99-11e9-9fc1-6fe4c6d80770.png" alt="screenshot from 2019-01-02 14-17-11"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Incorrect display when &lt;code&gt;# header&lt;/code&gt; is included:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/3341/50610645-562bb180-0e99-11e9-8a51-54eecd27f333.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9zwjmimM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/3341/50610645-562bb180-0e99-11e9-8a51-54eecd27f333.png" alt="screenshot from 2019-01-02 14-17-00"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: Ubuntu 18.10&lt;/li&gt;
&lt;li&gt;Browsers:
&lt;ul&gt;
&lt;li&gt;Chrome 72.0.3626.28&lt;/li&gt;
&lt;li&gt;Firefox 64.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The broken display only appears to happen when a header follows the code blocks. If I move it between or before the code blocks the breaks don't happen. I'm using v2 of the editor and have not tested with v1.&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/1446"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13195"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Modal appears under the navbar
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13195&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/aurelieverrot"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--KBy2XoLK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/50857179%3Fv%3D4" alt="aurelieverrot avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/aurelieverrot"&gt;aurelieverrot&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/13195"&gt;&lt;time&gt;Mar 30, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The modal triggered by the three dots on the left of an article appears stuck under the navbar of the website, it is not readable entirely.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After submitting an article but before publishing.
Click on the three dots on the top left of the article.
The modal will show up but a part of it is hidden behind the navbar&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The modal should appear entirely to see all the links.  It can appear under the navbar, or on top of it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/50857179/113064409-c6eed080-916b-11eb-80a0-9425a733ac65.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eIWvzyaP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/50857179/113064409-c6eed080-916b-11eb-80a0-9425a733ac65.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS, version: MacOS Catalina 10.15.7&lt;/li&gt;
&lt;li&gt;Browser, version: Chrome Version 88.0.4324.192 (Official Build) (x86_64)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;
button id="article-show-more-button"&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13195"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#general-bugs"&gt;
  &lt;/a&gt;
  &lt;strong&gt;General bugs&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;If you have more experience with software development and working in GitHub, here are a few issues you might want to take a look at&lt;/em&gt;&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/6586"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Tag "taggings_count" are not always updated correctly
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#6586&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/rhymes"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--b29X-Z_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/146201%3Fv%3D4" alt="rhymes avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/rhymes"&gt;rhymes&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/6586"&gt;&lt;time&gt;Mar 11, 2020&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Each tag has an associated &lt;code&gt;taggings_count&lt;/code&gt; which contains the number of items they are associated with (in our case either articles or listings).&lt;/p&gt;
&lt;p&gt;The problem lies in the fact that some of these counts are incorrect in the DB.&lt;/p&gt;
&lt;p&gt;I found this out by playing with the Tags API which returns tags sorted by &lt;code&gt;taggings_count&lt;/code&gt; in descending order&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;archlinux&lt;/code&gt; according to the API - &lt;a href="https://dev.to/api/tags" rel="nofollow"&gt;https://dev.to/api/tags&lt;/a&gt; - is the third most used tag but it's very unlikely that is true. Its tag page - &lt;a href="https://dev.to/t/archlinux" rel="nofollow"&gt;https://dev.to/t/archlinux&lt;/a&gt; - lists 50 articles and even taking into account all listings it might have been used in, it doesn't add up&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/api/tags?per_page=15" rel="nofollow"&gt;https://dev.to/api/tags?per_page=15&lt;/a&gt; shows that &lt;code&gt;devops&lt;/code&gt; is more popular than &lt;code&gt;showdev&lt;/code&gt; but &lt;a href="https://dev.to/t/devops" rel="nofollow"&gt;devops page&lt;/a&gt; contains 2917 articles, &lt;a href="https://dev.to/t/showdev" rel="nofollow"&gt;showdev page&lt;/a&gt; contains 3110. Again, I don't think there are enough listings tagged with &lt;code&gt;devops&lt;/code&gt; to account for the difference&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thus, the bug.&lt;/p&gt;
&lt;p&gt;This counter is managed by automatically by the &lt;a href="https://github.com/mbleigh/acts-as-taggable-on"&gt;acts-as-taggable-on&lt;/a&gt; gem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'd expect the counter to reflect the correct number of items that have been tagged with it.&lt;/p&gt;
&lt;p&gt;I see two possible explanations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;there's an error in our setup, in respect to the &lt;a href="https://github.com/mbleigh/acts-as-taggable-on#usage"&gt;usage guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;it has something to do with tag aliasing (?)&lt;/li&gt;
&lt;li&gt;there's a bug in the gem itself. I found a few issue tickets that might point us in this direction:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mbleigh/acts-as-taggable-on/issues/929"&gt;https://github.com/mbleigh/acts-as-taggable-on/issues/929&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mbleigh/acts-as-taggable-on/issues/947"&gt;https://github.com/mbleigh/acts-as-taggable-on/issues/947&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/6586"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/7561"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Error in date display on comment
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#7561&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/corentinbettiol"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--PAV8Qzjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/45763865%3Fv%3D4" alt="corentinbettiol avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/corentinbettiol"&gt;corentinbettiol&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/7561"&gt;&lt;time&gt;Apr 28, 2020&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Date tag on a comment is "Apr 27", but on hover the text is "Tuesday, 28 April 2020, 00:01:19".&lt;/p&gt;
&lt;p&gt;In HTML, datetime content is &lt;code&gt;2020-04-27T22:01:19Z&lt;/code&gt; 🤔&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hover date of &lt;a href="https://dev.to/lofiandcode/comment/o8k9" rel="nofollow"&gt;this&lt;/a&gt; comment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Date on tag &amp;amp; on hover should be the same.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/45763865/80465932-1dd89e00-893c-11ea-9eea-dce56e2cf40f.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Nv2XxcM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/45763865/80465932-1dd89e00-893c-11ea-9eea-dce56e2cf40f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/45763865/80466054-46f92e80-893c-11ea-9bc0-5020c6f01f91.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BLc9s47a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/45763865/80466054-46f92e80-893c-11ea-9bc0-5020c6f01f91.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: Xubuntu&lt;/li&gt;
&lt;li&gt;Browser: Firefox&lt;/li&gt;
&lt;li&gt;Version: 75.0&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/7561"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/6377"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        "Follow back" button has no text in notification at times
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#6377&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/sivaraam"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TJXCdCng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/12448084%3Fv%3D4" alt="sivaraam avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/sivaraam"&gt;sivaraam&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/6377"&gt;&lt;time&gt;Feb 29, 2020&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
When someone follows me, I get a notification with a "Follow back" button in it. But in some cases, the button has no text in it. As a consequence, it's not clear what the button does.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to 'Notifications'&lt;/li&gt;
&lt;li&gt;Find a "$USER followed you" notification&lt;/li&gt;
&lt;li&gt;If the "FOLLOW BACK" text in the button in visible, refresh and check.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: I realise these aren't ideal steps to reproduce the issue but unfortunately that's all I have. I'm not sure about the exact cases for which the text is visible and for which the text is not. But I'll be glad to provide information, if needed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;
The "FOLLOW BACK" text should always be visible in the button. For me, it's visible only at random times. The probability of the button having no text is higher.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;
&lt;a href="https://user-images.githubusercontent.com/12448084/75611812-d607e700-5b43-11ea-9ca9-f1f9c2140186.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vLALIhHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/12448084/75611812-d607e700-5b43-11ea-9ca9-f1f9c2140186.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: Windows&lt;/li&gt;
&lt;li&gt;Browser: Firefox/Chrome&lt;/li&gt;
&lt;li&gt;Version: 73.0.1/80.0.3987&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/6377"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/6417"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Incomplete surrogate-key cache invalidation logic
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#6417&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/benhalpern"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Btd6rDfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/3102842%3Fv%3D4" alt="benhalpern avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/benhalpern"&gt;benhalpern&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/6417"&gt;&lt;time&gt;Mar 02, 2020&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;Currently we user surrogate keys to determine when certain endpoints should have their caches cleared, such as an article API endpoint like this...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set_surrogate_key_header Article.table_key, @articles.map(&amp;amp;:record_key)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And then we call &lt;code&gt;article.purge&lt;/code&gt; which magically makes any endpoint with that article's &lt;code&gt;record_key&lt;/code&gt; have its edge cache expire.&lt;/p&gt;
&lt;p&gt;More on surrogate keys...&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.fastly.com/en/guides/getting-started-with-surrogate-keys" rel="nofollow"&gt;https://docs.fastly.com/en/guides/getting-started-with-surrogate-keys&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The issue with the above logic is that a &lt;em&gt;new&lt;/em&gt; article which should become part of that endpoint will not flush its cache if created. So it will not show up on that endpoint until another article which fits within the above &lt;code&gt;@articles&lt;/code&gt; is purged. This makes it kind of random to find out when it will be included.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;article.purge&lt;/code&gt; is a magic method to create a purge ping which uses the appropriate surrogate header.&lt;/p&gt;
&lt;p&gt;A solution for this could be a surrogate key like this...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set_surrogate_key_header Article.table_key, "tag-index-endpoint-#{tag}", @articles.map(&amp;amp;:record_key)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and then we make a specific purge call when a new article should purge it like &lt;code&gt;purge("tag-index-endpoint-#{tag}"&lt;/code&gt; when an article is created.&lt;/p&gt;
&lt;p&gt;Our current situation isn't causing any radically wrong behavior and the "random" purging is working okay but we should look into this as we go about bigger changes here.&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/6417"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/6610"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Error when submitting a comment on a recently deleted post
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#6610&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/adamkdean"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--05LaqpUx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/1639527%3Fv%3D4" alt="adamkdean avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/adamkdean"&gt;adamkdean&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/6610"&gt;&lt;time&gt;Mar 12, 2020&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Followed a link from an email, attempted to respond to a comment, received error &lt;code&gt;There was an error in your markdown: undefined method &lt;/code&gt;id' for nil:NilClass`, comment not posted.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Follow link from an email, attempt to respond to a comment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Comment is posted.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1639527/76545609-0162ce00-6482-11ea-9232-a7c318c642e0.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_E94JyZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1639527/76545609-0162ce00-6482-11ea-9232-a7c318c642e0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: MacOS 10.15.3&lt;/li&gt;
&lt;li&gt;Browser: Chrome  80.0.3987.87&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/6610"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/4948"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Runkit - indentation in the first line of a block
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#4948&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/iksemot"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jI-RReuz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/218702%3Fv%3D4" alt="iksemot avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/iksemot"&gt;iksemot&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/4948"&gt;&lt;time&gt;Nov 26, 2019&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First line in the block of text cannot be indented.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new post&lt;/li&gt;
&lt;li&gt;Add following content, make sure all lines are indented.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;{% runkit %}
    console.log('BAD CODE')
    console.log('OK CODE')

    // BAD COMMENT
    // OK COMMENT
{% endrunkit %}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Save the post&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All lines in RunKit embed should be indented.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/218702/69672956-7eb42f80-1099-11ea-8eb7-e045501791a3.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2_07bios--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/218702/69672956-7eb42f80-1099-11ea-8eb7-e045501791a3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: Windows 10 Pro&lt;/li&gt;
&lt;li&gt;Browser: Opera&lt;/li&gt;
&lt;li&gt;Version: 65&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.to/tomaszrydzewski/runkit-indentation-2n9c-temp-slug-526549?preview=b14fe31c6205719176ea1eb56003f5a280d576a6c6e235a8587e6669eef1c45774687968a6bb6b677f09c7fc6a84289a59ceeb548b7d896fe1e94793" rel="nofollow"&gt;https://dev.to/tomaszrydzewski/runkit-indentation-2n9c-temp-slug-526549?preview=b14fe31c6205719176ea1eb56003f5a280d576a6c6e235a8587e6669eef1c45774687968a6bb6b677f09c7fc6a84289a59ceeb548b7d896fe1e94793&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/4948"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/4955"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        users' profile photos are not showing on the dockerized installation 
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#4955&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/abdellani"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--45SeYu8M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/16113997%3Fv%3D4" alt="abdellani avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/abdellani"&gt;abdellani&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/4955"&gt;&lt;time&gt;Nov 27, 2019&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
After following the &lt;a href="https://docs.dev.to/installation/docker/" rel="nofollow"&gt;installation with docker guide&lt;/a&gt; and accessing the locally hosted application,  users' profile photos weren't showing up.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;web_1        | Cannot render console from 172.20.0.1! Allowed networks: 127.0.0.1, ::1, 127.0.0.0/127.255.255.255
web_1        | GET /uploads/user/profile_image/6/7a1aba89-1d79-486f-8c82-ab7a8f8a58c2.png completed with 404 Not Found in 0.677355ms
web_1        | Cannot render console from 172.20.0.1! Allowed networks: 127.0.0.1, ::1, 127.0.0.0/127.255.255.255
web_1        | GET /serviceworker.js completed with 304 Not Modified in 15.124716ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1- Follow the &lt;a href="https://docs.dev.to/installation/docker/" rel="nofollow"&gt;installation with docker guide&lt;/a&gt;.
2- Access 127.0.0.1:3000&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1-
&lt;a href="https://user-images.githubusercontent.com/16113997/69758804-d6699e00-1160-11ea-8fd5-36d0673404fc.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ds62lk4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/16113997/69758804-d6699e00-1160-11ea-8fd5-36d0673404fc.png" alt="1"&gt;&lt;/a&gt;
2-
&lt;a href="https://user-images.githubusercontent.com/16113997/69758814-db2e5200-1160-11ea-8be5-556f544d9383.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--00oVUmR6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/16113997/69758814-db2e5200-1160-11ea-8be5-556f544d9383.png" alt="2"&gt;&lt;/a&gt;
3-
&lt;a href="https://user-images.githubusercontent.com/16113997/69758860-f6995d00-1160-11ea-9575-f41a032ef541.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SK0-tSOX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/16113997/69758860-f6995d00-1160-11ea-9575-f41a032ef541.png" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: Ubuntu 18.04&lt;/li&gt;
&lt;li&gt;Browser: firefox&lt;/li&gt;
&lt;li&gt;Version: 70&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Smartphone (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Device:&lt;/li&gt;
&lt;li&gt;OS:&lt;/li&gt;
&lt;li&gt;Browser:&lt;/li&gt;
&lt;li&gt;Version:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;&lt;/p&gt;


    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/4955"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/4969"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Left-To-Right-Override, invisible unicode chars
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#4969&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/anuraghazra"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjkB0KNO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/35374649%3Fv%3D4" alt="anuraghazra avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/anuraghazra"&gt;anuraghazra&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/4969"&gt;&lt;time&gt;Nov 30, 2019&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
Looks like currently we can create posts with "U+202D" (LEFT-TO-RIGHT OVERRIDE) and other Invisible unicode characters&lt;/p&gt;
&lt;p&gt;Here's the post&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/anuraghazra/-12ef" rel="nofollow"&gt;https://dev.to/anuraghazra/-12ef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;hashtags:
&lt;a href="https://dev.to/t/%E2%80%8E%E2%80%8E%E2%80%8E%E2%80%8E" rel="nofollow"&gt;https://dev.to/t/%E2%80%8E%E2%80%8E%E2%80%8E%E2%80%8E&lt;/a&gt;
&lt;a href="https://dev.to/t/%E2%80%8E" rel="nofollow"&gt;https://dev.to/t/%E2%80%8E&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy U+202D unicode character&lt;/li&gt;
&lt;li&gt;Create a new post and set title to U+202D character
&lt;ul&gt;
&lt;li&gt;Same with hastags, Canonical URL &amp;amp; Series.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;





&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;
Should not allow those invisible unicode characters&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;
&lt;a href="https://user-images.githubusercontent.com/35374649/69902388-1758f100-13b3-11ea-800c-2181a6c20a0b.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rH4zpULl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/35374649/69902388-1758f100-13b3-11ea-800c-2181a6c20a0b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS: Windows 7 64bit&lt;/li&gt;
&lt;li&gt;Browser: Chrome&lt;/li&gt;
&lt;li&gt;Version:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;
I also copy pasted characters from here
&lt;a href="http://emptycharacter.com/" rel="nofollow"&gt;http://emptycharacter.com/&lt;/a&gt;&lt;/p&gt;


    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/4969"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/11494"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Keep getting notifications on previous email address
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#11494&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/javitruhlar"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--WFlyhYIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/7116409%3Fv%3D4" alt="javitruhlar avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/javitruhlar"&gt;javitruhlar&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/11494"&gt;&lt;time&gt;Nov 19, 2020&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
If you change the email address in your profile, you keep getting email notifications on your previous address even after you have confirmed the new one&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to 'Settings &amp;gt; Profile'&lt;/li&gt;
&lt;li&gt;Under 'User' section, change the email&lt;/li&gt;
&lt;li&gt;Open email sent to new address and click 'confirm my account'&lt;/li&gt;
&lt;li&gt;See error -&amp;gt; Keep getting email notifications on previous address&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;
After confirmation of new email address, all email notifications should be sent to that address and not to the previous one&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS, version: Linux Mint 19.3&lt;/li&gt;
&lt;li&gt;Browser, version: 78.0.1 (64-bit)&lt;/li&gt;
&lt;/ul&gt;


    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/11494"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/12455"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Themes (aka Dark Mode) not respected on first page loads
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#12455&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/kallmanation"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FSWGhKPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/32068459%3Fv%3D4" alt="kallmanation avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/kallmanation"&gt;kallmanation&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/12455"&gt;&lt;time&gt;Jan 27, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When first opening Dev.to (on both mobile &amp;amp; desktop) or when first visiting a new area (going to the dashboard from the homepage; starting a new post) the default theme is shown. This persists for a few page refreshes before my selected theme (night theme) is shown.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a private/incognito browser window&lt;/li&gt;
&lt;li&gt;Log in&lt;/li&gt;
&lt;li&gt;The default theme is shown (instead of the one in settings)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The theme selected in settings would show after logging in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First screen after logging in:
&lt;a href="https://user-images.githubusercontent.com/32068459/106010811-dc6e4e00-6087-11eb-855e-c34d4128956d.png" rel="nofollow"&gt;&lt;img width="1220" alt="Screen Shot 2021-01-27 at 10 09 00 AM" src="https://res.cloudinary.com/practicaldev/image/fetch/s--znJ5dQx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/32068459/106010811-dc6e4e00-6087-11eb-855e-c34d4128956d.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Settings page (It was always set to Night Theme; pre-login):
&lt;a href="https://user-images.githubusercontent.com/32068459/106010822-ded0a800-6087-11eb-9820-f29095abc541.png" rel="nofollow"&gt;&lt;img width="1219" alt="Screen Shot 2021-01-27 at 10 09 21 AM" src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8MI1F13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/32068459/106010822-ded0a800-6087-11eb-9820-f29095abc541.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS, version: macOS Catalina 10.15.7&lt;/li&gt;
&lt;li&gt;Browser, version: Vivaldi 3.4.2066.90 (Stable channel) (x86_64)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Smartphone (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Device: Samsung Note 10+&lt;/li&gt;
&lt;li&gt;OS, version: Android 11.0&lt;/li&gt;
&lt;li&gt;Browser, version: Chrome 88.0.4324.93&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/12455"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/12545"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        "Unable to load Comment Subscription component"
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#12545&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/ludwiczakpawel"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hM75UrvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/108287%3Fv%3D4" alt="ludwiczakpawel avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/ludwiczakpawel"&gt;ludwiczakpawel&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/12545"&gt;&lt;time&gt;Feb 02, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/108287/106653335-f253a580-6596-11eb-8ecc-3582965616a1.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GhhmOqqY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/108287/106653335-f253a580-6596-11eb-8ecc-3582965616a1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's been happening quite often recently for me but I can't really tell how exactly this should be reproduced. It does work after refreshing the page, but then when I go to another post it's broken again.&lt;/p&gt;
&lt;p&gt;Also, this is what's happening in the console:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/108287/106653573-465e8a00-6597-11eb-8ff7-03bf34f7b404.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dMXgu1vC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/108287/106653573-465e8a00-6597-11eb-8ff7-03bf34f7b404.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fo this component to work properly :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See above.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;n/a&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Smartphone (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;n/a&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/12545"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13298"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Comment box not shrinking on submit
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13298&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/Link2Twenty"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--YEfIAkze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/3534427%3Fv%3D4" alt="Link2Twenty avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/Link2Twenty"&gt;Link2Twenty&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/13298"&gt;&lt;time&gt;Apr 07, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
Comment boxes grow as you type but when you press submit they stay the size they were when they had content.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to a post&lt;/li&gt;
&lt;li&gt;Write a long comment&lt;/li&gt;
&lt;li&gt;Post the comment&lt;/li&gt;
&lt;li&gt;See the comment box is still large.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Expected behaviour&lt;/strong&gt;
I'd expect the comment box the shrink back down to it's original size.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;
&lt;a href="https://user-images.githubusercontent.com/3534427/113887114-20cd4700-97b9-11eb-9c14-49c0432ad96f.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EokwLQab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/3534427/113887114-20cd4700-97b9-11eb-9c14-49c0432ad96f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS, version: Window 10&lt;/li&gt;
&lt;li&gt;Browser, version: Chrome 89.0.4389.114&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;
Another small bug that doesn't really cause any harm.&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13298"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13277"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Refactor `/search/chat_channels` endpoint
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13277&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/atsmith813"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--H9J78MWl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/15987080%3Fv%3D4" alt="atsmith813 avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/atsmith813"&gt;atsmith813&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/13277"&gt;&lt;time&gt;Apr 06, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;In &lt;a href="https://github.com/forem/forem/pull/13235"&gt;https://github.com/forem/forem/pull/13235&lt;/a&gt; we refactored how &lt;code&gt;/search/chat_channels&lt;/code&gt; works by essentially removing "search" functionality and turning it into more of a "filter". &lt;a href="https://github.com/forem/forem/pull/13235#discussion_r606368287"&gt;As noted in the PR&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You'll notice I left everything in the Search namespace (the route, the controller, and the service naming). I originally started removing chat_channels from search all together since this behaves more like a filter than a search.&lt;/p&gt;
&lt;p&gt;However, I discovered there are some JS components that are using this endpoint as an "index". I started refactoring everything, but it quickly got out of hand and out of scope for what this PR is intended to address. I also realized it may actually be nice to leave everything in the search namespace so that when we re-do the search for Connect in the future, it's a smoother experience.&lt;/p&gt;
&lt;p&gt;With that said, since we have the ChatChannelsController and the ChatChannelMembershipsController each with index actions, I think the right move would be to move those JS components to them so we don't have multiple controllers performing the same actions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This issue is to essentially update all the JS components on the frontend to use a newly refactored endpoint that lives in a more appropriate spot (i.e. &lt;code&gt;ChatChannelMembershipsController&lt;/code&gt; or &lt;code&gt;ChatChannelsController&lt;/code&gt;) than the &lt;code&gt;SearchController&lt;/code&gt;. Once this issue is complete, the &lt;code&gt;chat_channels&lt;/code&gt; action should no longer exist in the &lt;code&gt;SearchController&lt;/code&gt; and instead, a new endpoint should be able to take care of any "filtering" and "indexing" being done by the JS components.&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13277"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;For the full list, click &lt;a href="https://github.com/forem/forem/labels/Bug%20Smash"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;We are so excited to see your contributions! Our team thanks you for your collaboration and commitment to improving our repository 💖&lt;/p&gt;

&lt;p&gt;If you’re new to making pull requests, here are a few resources we recommend you check out: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://dev.to/chrissiemhrk/git-cheat-sheet-26ak"&gt;Git Cheat Sheet&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/chrissiemhrk"&gt;@chrissiemhrk&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/tracycss/git-and-github-for-beginners-po3"&gt;Git and GitHub for Beginners&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/tracycss"&gt;@tracycss&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/healeycodes/your-first-open-source-pull-request-a-walkthrough-1omf"&gt;Your First Open-Source Pull Request: a Walkthrough&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/healeycodes"&gt;@healeycodes&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;P.S. With only a few exceptions, the Forem team is pro real-world, physical bugs and we don’t condone smashing them! #TakeSpidersOutside&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devbugsmash</category>
      <category>opensource</category>
      <category>forem</category>
      <category>contributorswanted</category>
    </item>
    <item>
      <title>Deploy a Cloud Native Application to Code Engine in 5 Easy Steps!</title>
      <author>Jenna Ritten</author>
      <pubDate>Tue, 04 May 2021 16:37:24 +0000</pubDate>
      <link>https://dev.to/jritten/deploy-a-cloud-native-application-to-code-engine-in-5-easy-steps-3h06</link>
      <guid>https://dev.to/jritten/deploy-a-cloud-native-application-to-code-engine-in-5-easy-steps-3h06</guid>
      <description>&lt;p&gt;Hello, IBM Developers! Welcome to Tutorial Tuesdays! &lt;/p&gt;

&lt;p&gt;When I was first learning how to code, Tuesdays became my favorite day for blocking out time to work through a new tutorial. I will be posting quick and easy tutorials occasionally on Tuesdays to help all of you level up your Dev skills! &lt;/p&gt;

&lt;p&gt;For purposes of this Tutorial Tuesday, I'm going to show you how to deploy a Cloud native application to &lt;a href="https://www.ibm.com/cloud/code-engine"&gt;IBM Cloud Code Engine&lt;/a&gt; from both a container image and using Code Engine's source-to-image, with the IBM CODAIT team's &lt;a href="https://github.com/IBM/MAX-Object-Detector"&gt;Max Object Detector&lt;/a&gt; in 5 easy steps! &lt;/p&gt;

&lt;p&gt;Once you get your application deployed successfully, you'll be able to start using the object detection model to detect object from the images you upload or from your web cam! &lt;/p&gt;

&lt;p&gt;First, a little about &lt;a href="https://github.com/IBM/CodeEngine"&gt;IBM Cloud Code Engine&lt;/a&gt;. Code Engine let's you focus on writing code instead of worrying about managing infrastructure. Code Engine is a fully managed, serverless platform that allows you to bring your container images, batch jobs, or source code, and let Code Engine manage and secure the underlying infrastructure for you. No need to size, deploy, or scale container clusters yourself! No networking skills required, either.&lt;/p&gt;

&lt;p&gt;With &lt;a href="https://www.ibm.com/cloud/code-engine"&gt;IBM Cloud Code Engine&lt;/a&gt; You Can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create container images from source code using Code Engine's source-to-image&lt;/li&gt;
&lt;li&gt;Store source code in repositories&lt;/li&gt;
&lt;li&gt;Push images to registries &lt;/li&gt;
&lt;li&gt;Integrate into IBM Cloud and all IBM Cloud services&lt;/li&gt;
&lt;li&gt;Handle all cluster provisioning, configuring, scaling, and managing servers &lt;/li&gt;
&lt;li&gt;Auto scale workloads up/down or to zero when no requests are active&lt;/li&gt;
&lt;li&gt;Built on OS Kubernetes, Knative, Istio, and Tekton, keeping apps and jobs portable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm going to walk you through how to deploy an application, any application, with &lt;a href="https://github.com/IBM/CodeEngine"&gt;IBM Cloud Code Engine&lt;/a&gt;. Do you already have your container images? Great! Don't know what a container  image is? No worries! I'll show you how to deploy your application using both an existing container image AND directly from your source code in your project repo!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-build-something"&gt;
  &lt;/a&gt;
  Let's Build Something!
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Sign Up for a Free &lt;a href="https://ibm.biz/cloud-sign-up"&gt;IBM Cloud Account&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Install the &lt;a href="https://cloud.ibm.com/docs/cli?topic=cli-getting-started"&gt;IBM Cloud Developer Tools CLI&lt;/a&gt; (command line interface, the commands you type into your Terminal) &lt;/li&gt;
&lt;li&gt;Install the &lt;a href="https://cloud.ibm.com/docs/codeengine?topic=codeengine-install-cli"&gt;IBM Cloud Code Engine Plugin&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Login to Your IBM Cloud Account via the CLI&lt;/li&gt;
&lt;li&gt;Deploy to Code Engine 2 Ways (with a Container Image OR with Source Code)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#setup-amp-installation"&gt;
  &lt;/a&gt;
  Setup &amp;amp; Installation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#2-install-the-ibm-cloud-developer-tools-cli"&gt;
  &lt;/a&gt;
  2. Install the IBM Cloud Developer Tools CLI
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Mac and Linux, run the following command in Terminal:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -sL https://raw.githubusercontent.com/IBM-Cloud/ibm-cloud-developer-tools/master/linux-installer/idt-installer | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify the IBM Cloud Developer Tools CLI is installed
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud dev help
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;For Windows 10 Pro, run the following command as an administrator in Powershell:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Net.ServicePointManager]::SecurityProtocol = "Tls12, Tls11, Tls, Ssl3"; iex(New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/IBM-Cloud/ibm-cloud-developer-tools/master/windows-installer/idt-win-installer.ps1')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note For Windows Users: If you encounter a Git error similar to the one below, you will need to install Git in the correct path.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash: git: command not found
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Follow the Windows Guide &lt;a href="https://www.jcchouinard.com/install-git"&gt;HERE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-install-the-ibm-cloud-code-engine-plugin"&gt;
  &lt;/a&gt;
  3. Install the IBM Cloud Code Engine Plugin
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Mac, Linux, and Windows 10 Pro, run the following command:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud plugin install code-engine
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify the IBM Cloud Code Engine Plugin is installed
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce help
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-login-to-your-ibm-cloud-account-via-the-cli"&gt;
  &lt;/a&gt;
  4. Login to Your IBM Cloud Account via the CLI
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;For Mac, Linux, and Windows 10 Pro, run the following command:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Enter email and password&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;View available resource groups&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud resource groups
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Assign a target resource group (default to your "Default")
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud target -g Default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-deploy-to-code-engine-2-ways"&gt;
  &lt;/a&gt;
  5. Deploy to Code Engine 2 Ways
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#deploy-to-code-engine-with-a-container-image"&gt;
  &lt;/a&gt;
  Deploy to Code Engine with a Container Image
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a new Code Engine project and give it a name
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce project create --name PROJECT_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce project create --name max-object-detector
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a new app from a Container Image
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name APP_NAME --image 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(Optional) If you need to change the default port, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name APP_NAME --image IMAGE_LOCATION --port PORT_NUM
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: IMAGE_LOCATION is not the URL where the app is deployed. The port defaults to ‘8080’ unless specified.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name max-object-detector --image quay.io/codait/max-object-detector --port 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check the application status
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n APP_NAME 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n max-object-detector
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get the app URL
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n APP_NAME -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n max-object-detector -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;View the live application at the URL in your browser
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;URL + /index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://ibm.biz/max-obj-det
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deploy-to-code-engine-with-source-code"&gt;
  &lt;/a&gt;
  Deploy to Code Engine with Source Code
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install the IBM Cloud Container Registry Plugin
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud plugin install container-registry -r 'IBM Cloud'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create an IBM Cloud API Key
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud iam api-key-create cliapikey -d "My CLI APIkey" --file key_file
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Add IBM Cloud Container Registry access to Code Engine
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce registry create --name myregistry --server us.icr.io --username iamapikey --password API_KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a new Container Regisry namespace
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr namespace-add MY_NAMESPACE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify your namespace has been created
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr namespace-list -v
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a new app from Source Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; ibmcloud ce build create --name BUILD_NAME --image IMAGE_REF --source SOURCE --registry-secret REGISTRY_REF [--commit COMMIT] [--context-dir CONTEXT_DIR] [--dockerfile DOCKERFILE] [--git-repo-secret GIT_REPO_SECRET] [--size SIZE] [--strategy STRATEGY] [--timeout TIMEOUT]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce build create --name max-object-detector-build --image us.icr.io/MY_NAMESPACE/max-obj-det --registry-secret myregistry --source https://github.com/IBM/MAX-Object-Detector --commit main --context-dir /max --strategy kaniko --size medium
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check the status of your build
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce build get --name BUILD_NAME-build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce build get --name max-object-detector-build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run the image build
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun submit --build BUILD_NAME-build --name BUILD_NAME-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun submit --build max-object-detector-build --name max-object-detector-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Check the status of the build
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun get --name BUILD_NAME-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce buildrun get --name max-object-detector-build-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Push the image to your Container Registry
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr image-tag [SOURCE_IMAGE] [TARGET_IMAGE]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: the format for Source and Target Image&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;us.icr.io/namespace/image:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr image-tag us.icr.io/MY_NAMESPACE/max-obj-det:latest us.icr.io/MY_NAMESPACE/max-obj-det:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify that your image is in your Container Registry
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud cr image-list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Deploy the app with the Code Engine CLI
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name APP_NAME --image IMAGE_REF
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application create --name max-obj-det --image us.icr.io/MY_NAMESPACE/max-obj-det
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Get the app URL
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n APP_NAME -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ibmcloud ce application get -n max-object-detector -output url
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;View the live application at the URL in your browser
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;URL + /index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#play-with-the-max-object-detector"&gt;
  &lt;/a&gt;
  Play with the &lt;a href="https://ibm.biz/max-obj-det"&gt;Max Object Detector&lt;/a&gt;!
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Upload an Image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D7nEA7DM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyugexjjagfk6d3rcw9w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D7nEA7DM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyugexjjagfk6d3rcw9w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OR&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use Your Web Cam&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2bcbVBe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d99iyurlwvvdp4w8baq2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bcbVBe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d99iyurlwvvdp4w8baq2.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to implement a Discord bot (in NodeJS) that requires new members to introduce themselves</title>
      <author>Martin Šošić</author>
      <pubDate>Tue, 04 May 2021 16:30:37 +0000</pubDate>
      <link>https://dev.to/martinsos/how-to-implement-a-discord-bot-in-nodejs-that-requires-new-members-to-introduce-themselves-926</link>
      <guid>https://dev.to/martinsos/how-to-implement-a-discord-bot-in-nodejs-that-requires-new-members-to-introduce-themselves-926</guid>
      <description>&lt;p&gt;At &lt;a href="https://wasp-lang.dev"&gt;Wasp&lt;/a&gt;, we have a Discord server for our community, where we talk with people interested in and using Wasp - Waspeteers!&lt;/p&gt;

&lt;p&gt;In the beginning, we knew everybody in the community by their name, but as it started growing, we had a lot of people joining that never wrote anything, and the community started feeling less homey, less intimate.&lt;/p&gt;

&lt;p&gt;This was when we decided to make it required for the new members to introduce themselves to gain access to the community.&lt;br&gt;
We knew that with this kind of barrier we would probably lose some potential new Waspeteers, but those that would go through it would be more engaged and better integrated.&lt;/p&gt;

&lt;p&gt;We found no other way to accomplish this automatically but to implement our own Discord bot.&lt;br&gt;
In this post I will describe in detail how we did it.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#highlevel-approach"&gt;
  &lt;/a&gt;
  High-level approach
&lt;/h2&gt;

&lt;p&gt;We want the following: when a new user comes to our Discord server, they should be able to access only "public" channels, like &lt;code&gt;rules&lt;/code&gt;, &lt;code&gt;contributing&lt;/code&gt;, and most importantly, &lt;code&gt;introductions&lt;/code&gt;, where they could introduce themselves.&lt;/p&gt;

&lt;p&gt;Once they introduced themselves in the &lt;code&gt;introductions&lt;/code&gt; channel, they would get access to the rest of the channels.&lt;/p&gt;

&lt;p&gt;
  
    &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FJyz2pEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wugan62xc12w5uo6xn0.png" class="article-body-image-wrapper"&gt;&lt;img alt="Channels user can see when Guest vs when full member." src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJyz2pEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1wugan62xc12w5uo6xn0.png"&gt;&lt;/a&gt;Left: what Guest sees; Right: what Waspeteer sees.
    
  
&lt;/p&gt;

&lt;p&gt;In Discord, access control is performed via roles. There are two ways to accomplish what we need:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Adding a role that grants access&lt;/strong&gt;. When they join, they have no roles. Once they introduce themselves, they are granted a role (e.g. &lt;code&gt;Member&lt;/code&gt; or &lt;code&gt;Waspeteer&lt;/code&gt;) that is required to access the rest of the server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Removing a role that forbids access&lt;/strong&gt;. When they join, they are automatically assigned a role &lt;code&gt;Guest&lt;/code&gt;, for which we configured the non-public channels to deny access. Once they introduce themselves, the role &lt;code&gt;Guest&lt;/code&gt; gets removed and they gain access to the rest of the server.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We decided to go with the second approach since it means we don't have to assign all the existing members with a new role. From now on, we will be talking about how to get this second approach working.&lt;/p&gt;

&lt;p&gt;To get this going, we need to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create role &lt;code&gt;Guest&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Ensure that the &lt;code&gt;Guest&lt;/code&gt; role has permissions to access only "public" channels.
One convenient way to go about this is to disable "View Channels" permission for the role &lt;code&gt;Guest&lt;/code&gt; at the level of Category, so it propagates to all the channels in it, instead of doing it for every single channel.
Once you are done, use the "See server as a role" feature of Discord to confirm that you set the permissions as you wanted.&lt;/li&gt;
&lt;li&gt;Automatically inform new members that they must introduce themselves in the &lt;code&gt;introductions&lt;/code&gt; channel with &lt;code&gt;!intro &amp;lt;text_about_me&amp;gt;&lt;/code&gt; to gain access to the rest of the server.
This can be done via Discord's "Welcome Screen" feature or via one of the many existing Discord bots out there offering this functionality.&lt;/li&gt;
&lt;li&gt;Automatically assign the &lt;code&gt;Guest&lt;/code&gt; role to a new member when they join the server.&lt;/li&gt;
&lt;li&gt;Automatically remove the &lt;code&gt;Guest&lt;/code&gt; role when a member introduces themselves in the public &lt;code&gt;introductions&lt;/code&gt; channel.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Points #1, #2 and #3 are relatively straight-forward.&lt;/p&gt;

&lt;p&gt;For the #4 (automatic assignment of the role when a new member joins the server), since Discord doesn't support this directly, you will need a bot to do it.&lt;br&gt;
Luckily, many bots allow you to auto-assign roles when new members join, and I ended up using &lt;a href="https://mee6.xyz/"&gt;MEE6&lt;/a&gt; for this.&lt;br&gt;
I set it up so that when a new member joins, they are immediately assigned a &lt;code&gt;Guest&lt;/code&gt; role.&lt;/p&gt;

&lt;p&gt;However, for the #5 (remove or assign the role on a message in a specific channel), the situation is more complicated - I couldn't find a single bot out there that supports this!&lt;br&gt;
The closest I got was with &lt;a href="https://carl.gg/"&gt;Carl Bot&lt;/a&gt; and its "tags" feature, which allows you to write custom code, but in the end, it turned out to be too restrictive to accomplish this.&lt;br&gt;
Therefore, I ended up implementing our own bot (Wasp Bot) that does this.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#implementing-a-discord-bot-nodejs"&gt;
  &lt;/a&gt;
  Implementing a Discord Bot (NodeJS)
&lt;/h2&gt;

&lt;p&gt;I decided to implement a bot in NodeJS since it is easy to get started quickly and there is a good Discord library.&lt;/p&gt;

&lt;p&gt;I will describe how to create it step by step below, but &lt;a href="https://github.com/wasp-lang/wasp-bot/tree/4b3858202622c7635aeb6f1d71d9ba9781eea6eb"&gt;here is the final code of the bot&lt;/a&gt; if you want to skip ahead.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#defining-bot-on-discord-and-adding-it-to-your-server"&gt;
  &lt;/a&gt;
  Defining bot on Discord and adding it to your server.
&lt;/h3&gt;

&lt;p&gt;Before we even start implementing the bot, we will tell Discord about it first, in order to obtain the neccessary credentials that we will use in our code, and we will add the bot to our server.&lt;br&gt;
There are many tutorials already on how to do this, so I will keep it short.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to Discord Developer Portal, create a new Application -&amp;gt; I named it &lt;code&gt;Wasp&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to the "Bot" part of Application "Settings" and add a new bot. I named it &lt;code&gt;WaspBot&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;On the "Bot" page of your freshly created bot, there is a "TOKEN" part -&amp;gt; create a mental note about it, we will need this later when running our bot.&lt;/li&gt;
&lt;li&gt;Go to the "OAuth2" part of Application "Settings". Here we will define which permissions our bot will have.
This is done by checking the permissions we want to give it and then following the URL that will be generated based on our choices.

&lt;ul&gt;
&lt;li&gt;Check the &lt;code&gt;bot&lt;/code&gt; under the "SCOPES" section.&lt;/li&gt;
&lt;li&gt;Scroll down further to find the "BOT PERMISSIONS" section. There, check the &lt;code&gt;Manage Roles&lt;/code&gt;, &lt;code&gt;View Channels&lt;/code&gt;, &lt;code&gt;Read Message History&lt;/code&gt;, and &lt;code&gt;Send Messages&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under the "SCOPES" section above, you will see a URL. Copy it into the browser and follow the steps to add the bot to your server.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#creating-a-basic-bot-in-nodejs"&gt;
  &lt;/a&gt;
  Creating a basic bot in NodeJS
&lt;/h3&gt;

&lt;p&gt;In a directory where your code will be, create a new npm project with &lt;code&gt;npm init&lt;/code&gt; -&amp;gt; set the entry point to &lt;code&gt;bot.js&lt;/code&gt; instead of &lt;code&gt;index.js&lt;/code&gt;. This will result in a &lt;code&gt;package.json&lt;/code&gt; file being generated.&lt;/p&gt;

&lt;p&gt;We will need one important dependency, &lt;code&gt;discord.js&lt;/code&gt;, to make it easy to work with Discord's API.&lt;br&gt;
Add it with &lt;code&gt;npm install -S discord.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, create &lt;code&gt;bot.js&lt;/code&gt; file next to &lt;code&gt;package.json&lt;/code&gt; with following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Discord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;discord.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BOT_TOKEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;BOT_TOKEN&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Discord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;BOT_TOKEN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Logged in as: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is it! Run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DISCORD_BOT=&amp;lt;TOKEN_OF_YOUR_DISCORD_BOT&amp;gt; node bot.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you should see output about successful login, in my case it was &lt;code&gt;Logged in as: WaspBot#1234&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#detecting-a-valid-introduction-from-a-member"&gt;
  &lt;/a&gt;
  Detecting a valid introduction from a member
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: For the following part, I was using &lt;a href="https://discord.js.org/#/"&gt;Discord.js&lt;/a&gt; docs to figure out how to do it, so if you need more details on a specific step, check them out.&lt;/p&gt;

&lt;p&gt;Now is the moment to define exactly how we want the introduction process to go.&lt;br&gt;
So, let's say that the correct way for new members to introduce themselves is by sending a message to the &lt;code&gt;introductions&lt;/code&gt; channel that starts with &lt;code&gt;!intro&lt;/code&gt; and follows with at least 20 characters of text (to ensure the introduction is not too short).&lt;br&gt;
&lt;code&gt;!intro&lt;/code&gt; makes it easy for our bot to know when to act (in Discord, bot commands often start with &lt;code&gt;!&amp;lt;something&amp;gt;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let's add the needed code to &lt;code&gt;bot.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;INTRODUCTIONS_CHANNEL_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;YOU_WILL_HAVE_TO_FIND_THIS_ON_DISCORD_SERVER&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!intro &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;INTRODUCTIONS_CHANNEL_ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;introductionsChannelName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;INTRODUCTIONS_CHANNEL_ID&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`Please use !intro command in the &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;introductionsChannelName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; channel!`&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;introMsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!intro &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;minMsgLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;introMsg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;minMsgLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`Please write introduction at least &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minMsgLength&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; characters long!`&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Yay successful introduction!`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One thing to notice is that you will have to obtain the ID of the &lt;code&gt;introductions&lt;/code&gt; channel and paste it in your code where I put the placeholder above.&lt;br&gt;
You can find out this ID by going to your Discord server in the Discord app, right-clicking on the &lt;code&gt;introductions&lt;/code&gt; channel, and clicking on &lt;code&gt;Copy ID&lt;/code&gt;. For this to work, you will first have to enable the "Developer Mode" (under "User Settings" &amp;gt; "Advanced").&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#removing-the-guest-role-upon-successful-introduction"&gt;
  &lt;/a&gt;
  Removing the "Guest" role upon successful introduction
&lt;/h3&gt;

&lt;p&gt;What is missing is removing the &lt;code&gt;Guest&lt;/code&gt; role upon successful introduction, so let's do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;INTRODUCTIONS_CHANNEL_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;YOU_WILL_HAVE_TO_FIND_THIS_ON_DISCORD_SERVER&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GUEST_ROLE_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;YOU_WILL_HAVE_TO_FIND_THIS_ON_DISCORD_SERVER&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!intro &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;INTRODUCTIONS_CHANNEL_ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;introductionsChannelName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channels&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;INTRODUCTIONS_CHANNEL_ID&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s2"&gt;`Please use !intro command in the &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;introductionsChannelName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; channel!`&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;introMsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!intro &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;minMsgLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;introMsg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;minMsgLength&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s2"&gt;`Please write introduction at least &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minMsgLength&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; characters long!`&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;member&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;guild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GUEST_ROLE_ID&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;member&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;roles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GUEST_ROLE_ID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nice getting to know you! You are no longer a guest&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
          &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; and have full access, welcome!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Error: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same as with the ID of the &lt;code&gt;introductions&lt;/code&gt; channel, now you will also need to find out the ID of the &lt;code&gt;Guest&lt;/code&gt; role (which you should have created at some point).&lt;br&gt;
You can do it by finding it in the server settings, under the list of roles, right-clicking on it, and then "Copy ID".&lt;/p&gt;

&lt;p&gt;This is it! You can now run the bot with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;DISCORD_BOT&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TOKEN_OF_YOUR_DISCORD_BOT&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and if you assign yourself a &lt;code&gt;Guest&lt;/code&gt; role on the Discord server and then type &lt;code&gt;!intro Hi this is my introduction, I am happy to be here.&lt;/code&gt; in the &lt;code&gt;introductions&lt;/code&gt; channel, you should see yourself getting full access together with an appropriate message from your bot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploying-the-bot"&gt;
  &lt;/a&gt;
  Deploying the bot
&lt;/h3&gt;

&lt;p&gt;While there are many ways to deploy the Discord bot, I will shortly describe how we did it via Heroku.&lt;/p&gt;

&lt;p&gt;We created a Heroku app &lt;code&gt;wasp-discord-bot&lt;/code&gt; and set up the "Automatic deploys" feature on Heroku to automatically deploy every push to the &lt;code&gt;production&lt;/code&gt; branch (our bot is on Github).&lt;/p&gt;

&lt;p&gt;On Heroku, we set the environment variable &lt;code&gt;DISCORD_BOT&lt;/code&gt; to the token of our bot.&lt;/p&gt;

&lt;p&gt;Finally, we added &lt;code&gt;Procfile&lt;/code&gt; file to our project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;worker&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node bot.js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is it! On every push to the &lt;code&gt;production&lt;/code&gt; branch, our bot gets deployed.&lt;/p&gt;

</description>
      <category>node</category>
      <category>discord</category>
    </item>
  </channel>
</rss>
